{
    "filename": "general_Q.v",
    "coq_project": "qarith-stern-brocot",
    "vernac_cmds": [
        [
            "Require Import FunInd.",
            "VernacRequire",
            "1f538423fd5f4dcde5fea5ac239a919904a47729"
        ],
        [
            "Require Export Qpositive.",
            "VernacRequire",
            "db37c88f2bf38e4b2b48198769906bd26338c3ae"
        ],
        [
            "Require Export Q_field.",
            "VernacRequire",
            "dac883985cbc2ba49ea26c87f611a3dc3ea34190"
        ],
        [
            "Require Export Q_order.",
            "VernacRequire",
            "1b4aeae593a0a43f7efdb7862a8eac04aaaf91ab"
        ],
        [
            "Require Import Field_Theory_Q.",
            "VernacRequire",
            "47825047076ba29aa9eb113ace023f1fac046160"
        ],
        [
            "Require Export Zaux.",
            "VernacRequire",
            "607b9d93059256bebc37787a334fc09ee1881545"
        ],
        [
            "Lemma Z_of_nat_Zabs_nat_pos: forall z, (0<=z)%Z -> Z_of_nat (Z.abs_nat z) = z.",
            "VernacStartTheoremProof",
            "d47de8a7f9c766726af4b776e0d54e8ed104e7b8"
        ],
        [
            "intros z Hz; destruct (Z_of_nat_complete_inf z Hz) as [n Hn]; transitivity (Z_of_nat n); auto; apply (f_equal Z_of_nat); rewrite <- absolu_inj_nat; apply (f_equal Z.abs_nat); trivial.",
            "VernacExtend",
            "f3e8923a93333a99a901776846023d2f2ff0e501"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition make_Q (m n : Z) := match m, n with | Zpos _, Zpos _ => Qpos (Qpositive_c (Z.abs_nat m) (Z.abs_nat n) (Z.abs_nat m + Z.abs_nat n)) | Zneg _, Zneg _ => Qpos (Qpositive_c (Z.abs_nat m) (Z.abs_nat n) (Z.abs_nat m + Z.abs_nat n)) | Z0, _ => Zero | _, Z0 => Zero | _, _ => Qneg (Qpositive_c (Z.abs_nat m) (Z.abs_nat n) (Z.abs_nat m + Z.abs_nat n)) end.",
            "VernacDefinition",
            "4cfe4f9237e8e0cdc4845d26d568cc654e02685b"
        ],
        [
            "Definition decode_Q (q : Q) := match q with | Qpos p => (Z_of_nat (fst (Qpositive_i p)), Z_of_nat (snd (Qpositive_i p))) | Qneg p => ((- Z_of_nat (fst (Qpositive_i p)))%Z, Z_of_nat (snd (Qpositive_i p))) | Zero => (0%Z, 1%Z) end.",
            "VernacDefinition",
            "c67bc24fabab811d92a5ae0957bcb400ff42a7a7"
        ],
        [
            "Definition numerator (q:Q) :Z := fst (decode_Q q).",
            "VernacDefinition",
            "16b5ba7f397dae63066f05e9fa6892c4b69df462"
        ],
        [
            "Definition denominator (q:Q) :Z := snd (decode_Q q).",
            "VernacDefinition",
            "dae7bb33b7e5594dafeb0c7695d8b9de317ee26a"
        ],
        [
            "Definition Z_to_Qpositive : forall x : Z, (0 < x)%Z -> Qpositive.",
            "VernacDefinition",
            "aac80951198bd985b67b7b591a9e7348f1d6270d"
        ],
        [
            "intros [| p| p].",
            "VernacExtend",
            "db48a191c2a3a54b8f7e7621c3e396af35857b61"
        ],
        [
            "intros H; abstract discriminate H.",
            "VernacExtend",
            "b316c6d273dad387343b0f70a6f28482d5345088"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "exact (Qpositive_c (nat_of_P p) 1 (S (nat_of_P p))).",
            "VernacExtend",
            "c1e8100babd5d2fc61bd879fb5892cea8b2ff6a3"
        ],
        [
            "intro; abstract discriminate H.",
            "VernacExtend",
            "42628561ac96d97f1628709bf21647137e528419"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition Z_to_Q (x : Z) : Q := match x with | Z0 => Zero | Zpos p => Qpos (Qpositive_c (nat_of_P p) 1 (S (nat_of_P p))) | Zneg p => Qneg (Qpositive_c (nat_of_P p) 1 (S (nat_of_P p))) end.",
            "VernacDefinition",
            "d62458be15942eb56dc2b14c5f1039b5e0380e69"
        ],
        [
            "Definition Qpositive_tail (z : Qpositive) := match z with | nR p => p | dL p => p | One => One end.",
            "VernacDefinition",
            "686ecb02ee097577ece600eba06e83f99718b9f8"
        ],
        [
            "Definition Q_tail (z : Q) := match z with | Zero => One | Qpos p => p | Qneg p => p end.",
            "VernacDefinition",
            "03d05a087e79e8fdea80fece37a0e932042aefa1"
        ],
        [
            "Definition Qsgn (q : Q) := match q with | Zero => 0%Z | Qpos _ => 1%Z | Qneg _ => (-1)%Z end.",
            "VernacDefinition",
            "e9e5fbe6be7b16b2f2e0dd7c149c951be9901b91"
        ],
        [
            "Fixpoint length_of_Qpositive_to_positive (qp : Qpositive) : positive := match qp with | One => 1%positive | dL qp' => Pos.succ (length_of_Qpositive_to_positive qp') | nR qp' => Pos.succ (length_of_Qpositive_to_positive qp') end.",
            "VernacFixpoint",
            "d666c751ccbafa8b05eefa3efd427b86a236c97b"
        ],
        [
            "Fixpoint length_of_Qpositive (qp : Qpositive) : Z := match qp with | One => 0%Z | dL qp' => (1 + length_of_Qpositive qp')%Z | nR qp' => (1 + length_of_Qpositive qp')%Z end.",
            "VernacFixpoint",
            "512a7d18dc3b7424fcf5af80de94028aff6421a9"
        ],
        [
            "Fixpoint Qpositive_to_Z (qp : Qpositive) : Z := match qp with | One => 1%Z | dL qp' => 0%Z | nR qp' => (1 + Qpositive_to_Z qp')%Z end.",
            "VernacFixpoint",
            "8e754a0e0d25b36b92cd69c1b0f26c8a7796e951"
        ],
        [
            "Definition Q_to_Z (x : Q) : Z := match x with | Zero => 0%Z | Qpos qp => Qpositive_to_Z qp | Qneg qp => (- Qpositive_to_Z qp)%Z end.",
            "VernacDefinition",
            "39dd8be3f117adcd80bd7ba1816e5c1fd3e365e9"
        ],
        [
            "Coercion Z_to_Q : Z >-> Q.",
            "VernacCoercion",
            "b6516fcc34a7649bd5e36d3479c4b55f22cab9da"
        ],
        [
            "Definition Qlt (x y : Q) : Prop := Qgt y x.",
            "VernacDefinition",
            "3121788b0924d9a7337aee107b4b3c65c9fc9815"
        ],
        [
            "Definition Qle (x y : Q) : Prop := ~ Qlt y x.",
            "VernacDefinition",
            "edacdba470cd6f29b8cab8a264e2ea3dabe167ed"
        ],
        [
            "Lemma Qlt_zero_pos : forall x' : Qpositive, Qlt Zero (Qpos x').",
            "VernacStartTheoremProof",
            "574de5db58b85fed695280d04d5bfd3a417c6fda"
        ],
        [
            "unfold Qlt in |- *; auto with *.",
            "VernacExtend",
            "d414f96c2ddc9a2c0ebf275993e60f6eaa334310"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qlt_neg_pos : forall x' y' : Qpositive, Qlt (Qneg y') (Qpos x').",
            "VernacStartTheoremProof",
            "5139873f6388457f127a2da31a2b66821f44fd9f"
        ],
        [
            "unfold Qlt in |- *; auto with *.",
            "VernacExtend",
            "d414f96c2ddc9a2c0ebf275993e60f6eaa334310"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qlt_neg_zero : forall x' : Qpositive, Qlt (Qneg x') Zero.",
            "VernacStartTheoremProof",
            "99a8b1a1a1aea77e51fccda65e987285e72d49b1"
        ],
        [
            "unfold Qlt in |- *; auto with *.",
            "VernacExtend",
            "d414f96c2ddc9a2c0ebf275993e60f6eaa334310"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Qlt_neg_pos Qlt_neg_zero Qlt_zero_pos.",
            "VernacHints",
            "e5e0ee3c08cd3aa2aa0c6a6887e134250eaed4dc"
        ],
        [
            "Ltac QltCleanAbsurdCases := match goal with | id1:(Qlt Zero (Qneg _)) |- _ => inversion id1 | id1:(Qlt (Qpos _) Zero) |- _ => inversion id1 | id1:(Qlt (Qpos _) (Qneg _)) |- _ => inversion id1 | id1:(Qle Zero (Qneg _)) |- _ => apply False_ind; apply id1; auto with * | id1:(Qle (Qpos _) Zero) |- _ => apply False_ind; apply id1; auto with * | id1:(Qle (Qpos _) (Qneg _)) |- _ => apply False_ind; apply id1; auto with * end.",
            "VernacExtend",
            "625316207a2ebc658c8fe70b5644ceab8e23ad4a"
        ],
        [
            "Functional Scheme Qpositive_c_ind := Induction for Qpositive_c Sort Prop.",
            "VernacExtend",
            "47ceed79c884d23ce0bb27bc52d788215674a096"
        ],
        [
            "Lemma Qpositive_c_0 : forall p q n : nat, n = 0 -> Qpositive_c p q n = One.",
            "VernacStartTheoremProof",
            "684cfcb540bf20520afe0ded2c1259e702d2f816"
        ],
        [
            "intros p q n.",
            "VernacExtend",
            "e9ee5ceebfc6bdd9834418d64830acc0e34a8026"
        ],
        [
            "functional induction (Qpositive_c p q n); trivial || (intros; discriminate).",
            "VernacExtend",
            "9e6f9aae49f109793a380368fb9ec18cf1241715"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qpositive_c_1_0_0 : forall p q n' : nat, p - q = 0 -> q - p = 0 -> Qpositive_c p q (S n') = One.",
            "VernacStartTheoremProof",
            "d620f7f5bac5f06befdd780785080efd5e3d22d5"
        ],
        [
            "intros p q n.",
            "VernacExtend",
            "e9ee5ceebfc6bdd9834418d64830acc0e34a8026"
        ],
        [
            "functional induction (Qpositive_c p q (S n));trivial.",
            "VernacExtend",
            "888a22df7f6ec12101b12e492feb9eff7e0ea954"
        ],
        [
            "rewrite e1;intros;discriminate.",
            "VernacExtend",
            "8e7bdf4a7ff87bc0f74a03211abdd7f49459d6d7"
        ],
        [
            "rewrite e0;intros;discriminate.",
            "VernacExtend",
            "4b9f32893ccc3592b28004caa690aa3d6f081bf3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qpositive_c_equal_One : forall m n p : nat, m = n -> Qpositive_c m n p = One.",
            "VernacStartTheoremProof",
            "6da5822887360edfcfe2a20969c69570365c40e9"
        ],
        [
            "intros p q [| n'] Hpq; [ apply Qpositive_c_0 | apply Qpositive_c_1_0_0; rewrite Hpq; rewrite <- minus_n_n ]; reflexivity.",
            "VernacExtend",
            "01de8610b1c7d78be8bc849125053e108e721a03"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qpositive_c_1_0_1 : forall p q n' : nat, p - q = 0 -> q - p <> 0 -> Qpositive_c p q (S n') = dL (Qpositive_c p (q - p) n').",
            "VernacStartTheoremProof",
            "58923da714f1a9b1f08a25c037ddf6eb121c65a8"
        ],
        [
            "intros p q n' Hpq Hqp; simpl in |- *; rewrite Hpq; elim (not_O_S _ Hqp); intros p' Hqp'; rewrite Hqp'; simpl in |- *; reflexivity.",
            "VernacExtend",
            "4efd65c195612fd96ab21379eff5fefe48f35776"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qpositive_c_dL : forall p q n' : nat, p < q -> Qpositive_c p q (S n') = dL (Qpositive_c p (q - p) n').",
            "VernacStartTheoremProof",
            "4f01e8b3836a4a63521b7d462e103d5e9b95ecfc"
        ],
        [
            "intros p q n Hpq.",
            "VernacExtend",
            "0b647155fd71c2f6aa9fd558f13ec17cb5310a45"
        ],
        [
            "generalize (lt_minus_eq_0 p q Hpq) (lt_minus_neq p q Hpq).",
            "VernacExtend",
            "4bd7e97edbd49943cf6ff2b858e293e2ff69ff49"
        ],
        [
            "intros Hpq0 Hqp.",
            "VernacExtend",
            "1a23b9757b73d1d1d6c3f344416661df44092a38"
        ],
        [
            "apply (Qpositive_c_1_0_1 _ _ n Hpq0 Hqp).",
            "VernacExtend",
            "dc8cca03d91a87283078ba7bbd84973e97c30e45"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qpositive_c_1_1 : forall p q n' : nat, p - q <> 0 -> Qpositive_c p q (S n') = nR (Qpositive_c (p - q) q n').",
            "VernacStartTheoremProof",
            "3cd15deac095036d8b4b7c5f3d72bf21ec7a583c"
        ],
        [
            "intros p q n' Hpq; simpl in |- *; elim (not_O_S _ Hpq); intros p' Hpq'; rewrite Hpq'; simpl in |- *; reflexivity.",
            "VernacExtend",
            "0204f86b0691bc1fbd8f0d8c331823676559e646"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qpositive_c_nR : forall p q n' : nat, q < p -> Qpositive_c p q (S n') = nR (Qpositive_c (p - q) q n').",
            "VernacStartTheoremProof",
            "990138535e20d8c3eea5822d83f520c104676265"
        ],
        [
            "intros p q n Hqp.",
            "VernacExtend",
            "448aa1a5e8e9c27d6b8634f9058285cbefc2e7aa"
        ],
        [
            "generalize (lt_minus_neq q p Hqp).",
            "VernacExtend",
            "9f53f62ec4f9264708990d038d3e7aad6ad06b77"
        ],
        [
            "intros Hpq.",
            "VernacExtend",
            "944872fa52578ced476453332b53e86b920d834d"
        ],
        [
            "apply (Qpositive_c_1_1 _ _ n Hpq).",
            "VernacExtend",
            "d10ef3092d22c28fc94af6e253d72306c5c7cea0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Functional Scheme Qpositive_i_ind := Induction for Qpositive_i Sort Prop.",
            "VernacExtend",
            "1033474dc5e36dd6c2f6695ecd170dfe5bf817c3"
        ],
        [
            "Lemma Qpositive_i_nR_with_let : forall w : Qpositive, let (p, q) := Qpositive_i w in Qpositive_i (nR w) = (p + q, q).",
            "VernacStartTheoremProof",
            "004caf03c51b155bf2782da1f6363808d48f5907"
        ],
        [
            "intros w;simpl Qpositive_i.",
            "VernacExtend",
            "54503d78c375e1f5a046717b47aa531554648511"
        ],
        [
            "functional induction (Qpositive_i w);subst;trivial.",
            "VernacExtend",
            "9883de88c479b58b563f6afb83e1f75d3368844c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qpositive_i_nR : forall (w : Qpositive) (p q : nat), Qpositive_i w = (p, q) -> Qpositive_i (nR w) = (p + q, q).",
            "VernacStartTheoremProof",
            "1d0a96094b679b6137fd2cd4dc1c58b348c486bb"
        ],
        [
            "intros w p q H_w; generalize (Qpositive_i_nR_with_let w); rewrite H_w; trivial.",
            "VernacExtend",
            "161305adeda526d87878774bd24b3ecbbd4a9723"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qpositive_i_c : forall m p : nat, 0 < m -> S m <= p -> Qpositive_i (Qpositive_c m 1 p) = (m, 1).",
            "VernacStartTheoremProof",
            "68e8464b73dc247c51b48c55b16f9d1a05f59891"
        ],
        [
            "intros m p.",
            "VernacExtend",
            "df8b8fbb91e426b6d468d9756f62f40b695992ac"
        ],
        [
            "generalize m; clear m.",
            "VernacExtend",
            "c69856faa0bcd071a0574edf0780395f33a826ba"
        ],
        [
            "induction p.",
            "VernacExtend",
            "57241b1bf2113f288b5c35cf50cb4c85d8323deb"
        ],
        [
            "intros m H1 H2.",
            "VernacExtend",
            "3ae929ca3473935a5a92510e375fbb7dbffb6f9c"
        ],
        [
            "inversion H2.",
            "VernacExtend",
            "afdc959ca1f20d64005a6cd95d8f83134e6ae5f8"
        ],
        [
            "intros m H1 H2.",
            "VernacExtend",
            "3ae929ca3473935a5a92510e375fbb7dbffb6f9c"
        ],
        [
            "case (le_lt_eq_dec 1 m).",
            "VernacExtend",
            "9b68b0f1dcf8b0e01d96a1a5ec273016c6a3556d"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "intro H_1_m.",
            "VernacExtend",
            "f5e3b34a918066f5db43854173ea16ffdb028dd1"
        ],
        [
            "rewrite (Qpositive_c_nR _ _ p H_1_m).",
            "VernacExtend",
            "386159dbcaa8a16941ab68695a04b3739f25b8a6"
        ],
        [
            "rewrite (Qpositive_i_nR (Qpositive_c (m - 1) 1 p) (m - 1) 1).",
            "VernacExtend",
            "cb1cc0e95af2b829c786ba1db5ed710391aacd50"
        ],
        [
            "apply pair_2; simpl in |- *; trivial; omega.",
            "VernacExtend",
            "07974c5d7f55808755960a03d570f1150fcb79a2"
        ],
        [
            "apply IHp; omega.",
            "VernacExtend",
            "06dc48e95074797351aed26d3b8f388f47123920"
        ],
        [
            "intro H_1_1.",
            "VernacExtend",
            "9a1de6d6c30dc494034dcf902c86c9d8b0c89e0b"
        ],
        [
            "rewrite <- H_1_1.",
            "VernacExtend",
            "ea6461afae1fd960027a6e66c5e2cc4e7666a9dc"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qpositive_c_equal : forall m n p p' : nat, 0 < m -> 0 < n -> m + n <= p -> m + n <= p' -> Qpositive_c m n p = Qpositive_c m n p'.",
            "VernacStartTheoremProof",
            "aeee583f53f7d76e851ea28b75ad72701c938a45"
        ],
        [
            "intros m n p.",
            "VernacExtend",
            "217e940e8ee9612375b2535661e6603f8d08b68f"
        ],
        [
            "functional induction (Qpositive_c m n p) as [| | p q p' H_eq_1 | ].",
            "VernacExtend",
            "32026745849b11756998805585f34e2dab7159ef"
        ],
        [
            "intros p' _ _ Hpq.",
            "VernacExtend",
            "a30b7941118974e1991c3982bea1d0a37d7bb561"
        ],
        [
            "generalize (le_plus_O_l p q Hpq) (le_plus_O_r p q Hpq).",
            "VernacExtend",
            "85551d55f51bd1f48ff95498a37e2b415d825ee3"
        ],
        [
            "intros Hp Hq.",
            "VernacExtend",
            "0d5f80ed43d1f4c2159c22547e125807d4932ebd"
        ],
        [
            "rewrite Hp.",
            "VernacExtend",
            "b511f9e4ffd06db3fba6cc16f472f9ed92990ffa"
        ],
        [
            "rewrite Hq.",
            "VernacExtend",
            "ac1c860c7aa4c4dcd91d635cc3ab558ffc2f8b77"
        ],
        [
            "case p'; simpl in |- *; reflexivity.",
            "VernacExtend",
            "c7f2671c7e600fdd99c66d0d2f74bec7e9f81d42"
        ],
        [
            "intros p' _ _ _ _.",
            "VernacExtend",
            "953997865a36e948dfa32cd4fe4fed901d312d0a"
        ],
        [
            "symmetry in |- *.",
            "VernacExtend",
            "dc33a39a53e296ef5e59fd831d55212be2a42f22"
        ],
        [
            "apply Qpositive_c_equal_One.",
            "VernacExtend",
            "be06e8980a4d83e62ff0a5f093e630ae18339c0c"
        ],
        [
            "apply le_antisym; apply minus_O_le; assumption.",
            "VernacExtend",
            "298ec05d786b22134ff8455d10d72c399f407bbe"
        ],
        [
            "intros [| p'x] HpO HqO Hpq Hpq'.",
            "VernacExtend",
            "a3b804682cd4fa5217e18797bb085b7087064185"
        ],
        [
            "generalize (le_plus_O_r p q Hpq') (le_plus_O_l p q Hpq').",
            "VernacExtend",
            "3ad3159ee499b4ec3812ec6ffd44478bccdad58c"
        ],
        [
            "intros Hq Hp.",
            "VernacExtend",
            "5969e0c087657c11c765f1d6f1fdb81df2c852b1"
        ],
        [
            "apply False_ind;omega.",
            "VernacExtend",
            "94a150be286c877cfb0a09d10a901237775943b9"
        ],
        [
            "rewrite Qpositive_c_1_0_1;auto.",
            "VernacExtend",
            "fcb66a8d976148f81c6251f3946bb3282c6907dd"
        ],
        [
            "apply f_equal with Qpositive.",
            "VernacExtend",
            "2fdbc0f37d5a7db0445a7fab44c4a5be71ada358"
        ],
        [
            "rewrite (IHq p'x);try omega.",
            "VernacExtend",
            "374d58a818a3698be77ea5214ec801bf5cad1603"
        ],
        [
            "unfold Qpositive_c at 2;fold Qpositive_c.",
            "VernacExtend",
            "34a8fb15135965dc1b7ac7b569ebcf5feb405b6e"
        ],
        [
            "rewrite e1.",
            "VernacExtend",
            "8b2a17b1ef5c5847246cc0dc3bf5a59255f9482b"
        ],
        [
            "destruct (q - p);tauto.",
            "VernacExtend",
            "f30e33284ae425fff19baeb9c9e8dfd81e8a3f37"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "intros [| p'x] HpO HqO Hpq Hpq'.",
            "VernacExtend",
            "a3b804682cd4fa5217e18797bb085b7087064185"
        ],
        [
            "generalize (le_plus_O_r p q Hpq') (le_plus_O_l p q Hpq').",
            "VernacExtend",
            "3ad3159ee499b4ec3812ec6ffd44478bccdad58c"
        ],
        [
            "intros Hq Hp.",
            "VernacExtend",
            "5969e0c087657c11c765f1d6f1fdb81df2c852b1"
        ],
        [
            "apply False_ind;omega.",
            "VernacExtend",
            "94a150be286c877cfb0a09d10a901237775943b9"
        ],
        [
            "unfold Qpositive_c at 2;fold Qpositive_c.",
            "VernacExtend",
            "34a8fb15135965dc1b7ac7b569ebcf5feb405b6e"
        ],
        [
            "rewrite e0.",
            "VernacExtend",
            "9b24dbdfbb5c2f52e38c8dc95989d55c0cc61e17"
        ],
        [
            "rewrite (IHq p'x);try omega.",
            "VernacExtend",
            "374d58a818a3698be77ea5214ec801bf5cad1603"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qpositive_c_equal_strong : forall m1 m2 n1 n2 p1 p2 : nat, m1 = m2 -> n1 = n2 -> 0 < m1 -> 0 < n1 -> m1 + n1 <= p1 -> m2 + n2 <= p2 -> Qpositive_c m1 n1 p1 = Qpositive_c m2 n2 p2.",
            "VernacStartTheoremProof",
            "4b8ef217b9bf1e47d44f86b041e22a542ca802d8"
        ],
        [
            "intros m1 m2 n1 n2 p1 p2 Hm Hn Hm' Hn' H1 H2; subst; apply Qpositive_c_equal; assumption.",
            "VernacExtend",
            "95016a2765b09b7b5507c098a3f2c106e7923b16"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Functional Scheme Qpositive_plus_ind := Induction for Qpositive_plus Sort Prop.",
            "VernacExtend",
            "6278d9b371578a346c8ea5b78c052ba46060716d"
        ],
        [
            "Lemma what_nR_does : forall p : Qpositive, nR p = Qpositive_plus p One.",
            "VernacStartTheoremProof",
            "28e773dff2e54865988f7a7616541be11818f7af"
        ],
        [
            "intros qp.",
            "VernacExtend",
            "b47c6b72dc7c1f30dd2fb0bd55e9637621f4f0c1"
        ],
        [
            "unfold Qpositive_plus;fold Qpositive_plus.",
            "VernacExtend",
            "8e77022d975281bc8bed3f6747e103d577f45b10"
        ],
        [
            "functional induction (Qpositive_plus qp One).",
            "VernacExtend",
            "de1356d1daacff6cc8421cd152453eafb26f1960"
        ],
        [
            "rewrite e;rewrite e0.",
            "VernacExtend",
            "2570df24c5906244bd60598340569cd6252e9b96"
        ],
        [
            "rename e into H_pq.",
            "VernacExtend",
            "f5ceff56ee45c74d48ed30ea8e2cc2a049863778"
        ],
        [
            "rename e0 into H_p'q'.",
            "VernacExtend",
            "c8e58e96261af16accc8c2e5e69282f407fd9301"
        ],
        [
            "generalize (interp_non_zero qp).",
            "VernacExtend",
            "f1eacbeb9f40769aa3dd1dda63a97cf1c58d9c21"
        ],
        [
            "rename q0 into q.",
            "VernacExtend",
            "7eca2429ff45b5b1161720bd8782de7894779156"
        ],
        [
            "intros (p0', (q0', Hpq')).",
            "VernacExtend",
            "1928535c53e6fd4df171946cc783083f7ef45a1b"
        ],
        [
            "rewrite H_pq in Hpq'.",
            "VernacExtend",
            "4cf42d3a9ad89af342c644aef3387479f2744d49"
        ],
        [
            "let f_local := eval compute in (f_equal (fst (B:=_)) Hpq') in let g_local := eval compute in (sym_eq (f_equal (fst (B:=_)) H_p'q')) in generalize f_local g_local.",
            "VernacExtend",
            "6ab5e78ba004fbca6ffa866b2fffef661f960019"
        ],
        [
            "let f_local := eval compute in (f_equal (snd (B:=_)) Hpq') in let g_local := eval compute in (sym_eq (f_equal (snd (B:=_)) H_p'q')) in generalize f_local g_local.",
            "VernacExtend",
            "961dbbda7bc02e1317b319bded89e5a611171e85"
        ],
        [
            "intros Hq Hq' Hp Hp'.",
            "VernacExtend",
            "a447e75045663cf0b24a8723f1f757c1570548c9"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "rewrite <- (mult_n_Sm (S q0') 0).",
            "VernacExtend",
            "01400b0aa86e55aa47258349db8b3c84544cc0f9"
        ],
        [
            "repeat rewrite <- plus_n_Sm.",
            "VernacExtend",
            "ff4a896b05573b8f577c6fe1c2669dd7843e3cec"
        ],
        [
            "rewrite <- mult_n_O.",
            "VernacExtend",
            "07161053ebc93c773f589837df2755cd1a52c12f"
        ],
        [
            "rewrite plus_O_n.",
            "VernacExtend",
            "a0eeec688d6591d761d2fa5fed2c095cff6ced47"
        ],
        [
            "rewrite mult_1_l.",
            "VernacExtend",
            "0e33ed44999445afc31efdcb7fd28c323f8f7890"
        ],
        [
            "rewrite mult_1_r.",
            "VernacExtend",
            "80597d89030a8bc45d0b39c6ce60bea43dbe51d1"
        ],
        [
            "rewrite Qpositive_c_nR.",
            "VernacExtend",
            "7263025378227f8dd76ebb26967ea6d3700e8ca4"
        ],
        [
            "rewrite plus_comm.",
            "VernacExtend",
            "f2921c049c57ff33e3248947a1d6b2bcd1257393"
        ],
        [
            "rewrite minus_plus.",
            "VernacExtend",
            "ccf1bd634b5d1325b2656115ef59f73c6fc1c79f"
        ],
        [
            "apply f_equal with Qpositive.",
            "VernacExtend",
            "2fdbc0f37d5a7db0445a7fab44c4a5be71ada358"
        ],
        [
            "symmetry in |- *; apply construct_correct.",
            "VernacExtend",
            "87f8fb756a1fe8bc0dc4e989cb52c9235e35f5c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite plus_comm.",
            "VernacExtend",
            "f2921c049c57ff33e3248947a1d6b2bcd1257393"
        ],
        [
            "apply le_plus_l.",
            "VernacExtend",
            "30f3305f62c97c24af24578d88eaa888a0053ec1"
        ],
        [
            "clear; omega.",
            "VernacExtend",
            "eec4b40e7fab9dab9db362824141f438dba9b179"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Functional Scheme Qpositive_mult_ind := Induction for Qpositive_mult Sort Prop.",
            "VernacExtend",
            "7201e7d2badf2d2ddea6be11f0a5d50346c7c3c0"
        ],
        [
            "Lemma what_dL_does : forall p : Qpositive, dL p = Qpositive_mult p (Qpositive_inv (Qpositive_plus p One)).",
            "VernacStartTheoremProof",
            "cb91d1af54b8777072d5ea3bc3510bea14dc77b2"
        ],
        [
            "intros qp.",
            "VernacExtend",
            "b47c6b72dc7c1f30dd2fb0bd55e9637621f4f0c1"
        ],
        [
            "unfold Qpositive_plus.",
            "VernacExtend",
            "baca3c0b6cace94221022a23bdea7cafdd06399e"
        ],
        [
            "functional induction (Qpositive_plus qp One).",
            "VernacExtend",
            "de1356d1daacff6cc8421cd152453eafb26f1960"
        ],
        [
            "rewrite e;rewrite e0.",
            "VernacExtend",
            "2570df24c5906244bd60598340569cd6252e9b96"
        ],
        [
            "rename q0 into q; rename e into H_eq_; rename e0 into H_eq_0.",
            "VernacExtend",
            "44f6c6cc30c2a4da4770d7163a9173054992870e"
        ],
        [
            "generalize (interp_non_zero qp).",
            "VernacExtend",
            "f1eacbeb9f40769aa3dd1dda63a97cf1c58d9c21"
        ],
        [
            "intros (p0, (q0, Hpq)).",
            "VernacExtend",
            "cf439a0322a5053898cb5c7d3d387d318ec81a66"
        ],
        [
            "rewrite H_eq_ in Hpq.",
            "VernacExtend",
            "b5b8f4e86dd38a65a4f04fbafb22680c6b1c97b4"
        ],
        [
            "let f_local := eval compute in (f_equal (fst (B:=_)) Hpq) in let g_local := eval compute in (sym_eq (f_equal (fst (B:=_)) H_eq_0)) in generalize f_local g_local.",
            "VernacExtend",
            "2f8db1ee68bd8535908f2fbe4ea393cd293edadc"
        ],
        [
            "let f_local := eval compute in (f_equal (snd (B:=_)) Hpq) in let g_local := eval compute in (sym_eq (f_equal (snd (B:=_)) H_eq_0)) in generalize f_local g_local.",
            "VernacExtend",
            "e6be0712f0feca83d7d376735376f48c6602a315"
        ],
        [
            "intros Hq Hq' Hp Hp'.",
            "VernacExtend",
            "a447e75045663cf0b24a8723f1f757c1570548c9"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "rewrite <- (mult_n_Sm (S q0) 0).",
            "VernacExtend",
            "9f2ef2ada5d8cbb7aff79a7a4322ae69731414e4"
        ],
        [
            "repeat rewrite <- plus_n_Sm.",
            "VernacExtend",
            "ff4a896b05573b8f577c6fe1c2669dd7843e3cec"
        ],
        [
            "rewrite <- mult_n_O.",
            "VernacExtend",
            "07161053ebc93c773f589837df2755cd1a52c12f"
        ],
        [
            "rewrite plus_O_n.",
            "VernacExtend",
            "a0eeec688d6591d761d2fa5fed2c095cff6ced47"
        ],
        [
            "rewrite mult_1_l.",
            "VernacExtend",
            "0e33ed44999445afc31efdcb7fd28c323f8f7890"
        ],
        [
            "rewrite mult_1_r.",
            "VernacExtend",
            "80597d89030a8bc45d0b39c6ce60bea43dbe51d1"
        ],
        [
            "unfold Qpositive_mult in |- *.",
            "VernacExtend",
            "1f30d7ea915496b697c735518fc781164df3a288"
        ],
        [
            "rewrite H_eq_.",
            "VernacExtend",
            "85fa2027b8312e43c7e292fa6e4b39afaeb0973b"
        ],
        [
            "set (P := Qpositive_i (Qpositive_c (S p0 + S q0) (S q0) (S (S p0 + S q0 + q0)))) in *.",
            "VernacExtend",
            "192e27bd6018f9c2312ec03c43e868970e510c04"
        ],
        [
            "set (p' := fst P) in *.",
            "VernacExtend",
            "f707cd1bb9f010a3ebd86ae916c64789570ce3b3"
        ],
        [
            "set (q' := snd P) in *.",
            "VernacExtend",
            "2f9af165d37520d20c7c5d528cca5cd8ec696466"
        ],
        [
            "assert (H_P : Qpositive_i (Qpositive_c (S p0 + S q0) (S q0) (S (S p0 + S q0 + q0))) = (p', q')).",
            "VernacExtend",
            "fbe2d8b0f243f97468d6779b3a303df7550f1524"
        ],
        [
            "replace (p', q') with P; trivial; unfold p', q' in |- *; apply pair_1.",
            "VernacExtend",
            "b81b1b43745ba3eebcd7e6bf30f28704c7fb9790"
        ],
        [
            "rewrite (inv_correct _ _ _ H_P).",
            "VernacExtend",
            "3a9dfe470ddb301266bd62dbee22735d3aa588de"
        ],
        [
            "rewrite (Qpositive_c_unfold1 p0 q0 (S p0 + S q0 + q0)) in H_P.",
            "VernacExtend",
            "b6635fd25da45e2eb4a36a3818d61ae07241b123"
        ],
        [
            "rewrite (construct_correct qp (S p0) (S q0) (S p0 + S q0 + q0) H_eq_ (le_plus_l _ _)) in H_P.",
            "VernacExtend",
            "546f27c2de94c2eda02fdbde71a7473f23fe839f"
        ],
        [
            "rewrite (Qpositive_i_nR qp _ _ H_eq_) in H_P.",
            "VernacExtend",
            "81a706716594a49fe6dd576fef1abd481969b0a3"
        ],
        [
            "let f_local := eval cbv beta delta -[plus] in (sym_eq (f_equal (fst (B:=_)) H_P)) in let g_local := eval cbv beta delta -[plus] in (sym_eq (f_equal (snd (B:=_)) H_P)) in generalize f_local g_local.",
            "VernacExtend",
            "176b67721a4f780596188fb88bf5b5091f56579d"
        ],
        [
            "intros Hp' Hq'; rewrite Hp'; rewrite Hq'.",
            "VernacExtend",
            "775a3446b28561150055e128a8a60ee1a60470d5"
        ],
        [
            "clear H_eq_0 Hpq H_P Hp' Hq' P p' q'.",
            "VernacExtend",
            "193e09278b4e5aad45450ba13879f41c8e090424"
        ],
        [
            "rewrite <- (mult_n_Sm (S p0) q0).",
            "VernacExtend",
            "8aca7124fb8f09087aa98bb076364c0a8117d100"
        ],
        [
            "rewrite <- plus_n_Sm.",
            "VernacExtend",
            "10308ef961b07f08e71cba91e06650cc774994fe"
        ],
        [
            "rewrite (plus_Sn_m (S p0 * q0 + p0)).",
            "VernacExtend",
            "2d088c72c48fc2c56f8885c7e082ef147e0cb949"
        ],
        [
            "replace (S (S p0 * q0 + p0)) with (S q0 * S p0).",
            "VernacExtend",
            "806ef939bf34a32aec49678b2d403a90101ca668"
        ],
        [
            "rewrite Qpositive_c_dL.",
            "VernacExtend",
            "f49cc7a0c9ae7671ed4f05e88bdaf888170b500b"
        ],
        [
            "replace (S q0 * (S p0 + S q0) - S q0 * S p0) with (S q0 * S q0).",
            "VernacExtend",
            "6a912509823959ca2fac18f0aca4307441a5d6b3"
        ],
        [
            "apply f_equal with Qpositive.",
            "VernacExtend",
            "2fdbc0f37d5a7db0445a7fab44c4a5be71ada358"
        ],
        [
            "symmetry in |- *.",
            "VernacExtend",
            "dc33a39a53e296ef5e59fd831d55212be2a42f22"
        ],
        [
            "rewrite (construct_correct4' (S q0 * S p0) (S q0 * S q0) (S p0) (S q0) (S p0 * q0 + p0 + S q0 * (S p0 + S q0)) (S p0 + S q0)).",
            "VernacExtend",
            "cb9fcc7537fcf590c15046a6d8a875afac28a859"
        ],
        [
            "apply construct_correct.",
            "VernacExtend",
            "750c255ed15904719302c233cd6fd85e889e7c87"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite <- mult_n_Sm.",
            "VernacExtend",
            "91735263987da0af733038b963dd5d1f039440a6"
        ],
        [
            "rewrite <- plus_n_Sm.",
            "VernacExtend",
            "10308ef961b07f08e71cba91e06650cc774994fe"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "rewrite <- mult_n_Sm.",
            "VernacExtend",
            "91735263987da0af733038b963dd5d1f039440a6"
        ],
        [
            "rewrite <- plus_n_Sm.",
            "VernacExtend",
            "10308ef961b07f08e71cba91e06650cc774994fe"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "rewrite mult_plus_distr_l.",
            "VernacExtend",
            "f62f8b6c339d6dd72d315199ed029b0d03be1c60"
        ],
        [
            "apply le_plus_r.",
            "VernacExtend",
            "c22b357a9da97736dcf6d1963d5d37bcb961ac00"
        ],
        [
            "apply le_n.",
            "VernacExtend",
            "cd4ea009ba050d55c0c5552f05ee5752a2fad9f9"
        ],
        [
            "rewrite (mult_comm (S q0) (S p0)).",
            "VernacExtend",
            "9bf6db33dc3772365f19af88b906ce540c5695fe"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "rewrite mult_plus_distr_l.",
            "VernacExtend",
            "f62f8b6c339d6dd72d315199ed029b0d03be1c60"
        ],
        [
            "rewrite minus_plus; reflexivity.",
            "VernacExtend",
            "64457f2406abf2280e5bceaf88873cbc79132c46"
        ],
        [
            "rewrite mult_plus_distr_l.",
            "VernacExtend",
            "f62f8b6c339d6dd72d315199ed029b0d03be1c60"
        ],
        [
            "rewrite plus_comm.",
            "VernacExtend",
            "f2921c049c57ff33e3248947a1d6b2bcd1257393"
        ],
        [
            "repeat rewrite <- mult_n_Sm.",
            "VernacExtend",
            "37916e85dfaa89fe554b1c6c2e940a95ac49c769"
        ],
        [
            "rewrite <- plus_n_Sm.",
            "VernacExtend",
            "10308ef961b07f08e71cba91e06650cc774994fe"
        ],
        [
            "rewrite <- plus_n_Sm with (m := q0).",
            "VernacExtend",
            "e64866643ede2119414b6b244447fba23273aae1"
        ],
        [
            "generalize (S q0 * p0 + q0) (S q0 * q0 + q0); clear qp H_eq_; intros; omega.",
            "VernacExtend",
            "3785a01c0fa10491cc7450c83bd69edfd620c897"
        ],
        [
            "rewrite mult_comm.",
            "VernacExtend",
            "1618bf07e1d67d2e2ac34824fd6979892b5cec8f"
        ],
        [
            "rewrite <- mult_n_Sm.",
            "VernacExtend",
            "91735263987da0af733038b963dd5d1f039440a6"
        ],
        [
            "rewrite <- plus_n_Sm; reflexivity.",
            "VernacExtend",
            "a8e842255f405ea8cff510980e7663ab15045952"
        ],
        [
            "rewrite plus_n_Sm.",
            "VernacExtend",
            "8d602a0a1db65c52658648af82f6211103a652df"
        ],
        [
            "apply le_n.",
            "VernacExtend",
            "cd4ea009ba050d55c0c5552f05ee5752a2fad9f9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qpos_nR : forall p : Qpositive, Qpos (nR p) = Qplus (Qpos p) Qone.",
            "VernacStartTheoremProof",
            "68494052c486ae52249e345e302206e8c2c16a9c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply f_equal with Qpositive.",
            "VernacExtend",
            "2fdbc0f37d5a7db0445a7fab44c4a5be71ada358"
        ],
        [
            "apply what_nR_does.",
            "VernacExtend",
            "e4d0a2a2b3abd43b3215b0cd748f80e33ce04e23"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qmult_Z_nR : forall (a : Z) (p : Qpositive), Qmult (Z_to_Q a) (Qpos (nR p)) = Qplus (Qmult (Z_to_Q a) (Qpos p)) (Z_to_Q a).",
            "VernacStartTheoremProof",
            "323b897b380efb26c25b69fb469e17a89e5dec06"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite Qpos_nR.",
            "VernacExtend",
            "2521e3b6f1ac884be27f4e3906fb63a7e88e581c"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qpos_dL : forall p : Qpositive, Qpos (dL p) = Qmult (Qpos p) (Qinv (Qplus (Qpos p) Qone)).",
            "VernacStartTheoremProof",
            "413199221c081b82034a06e357884c355b9a0868"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply f_equal with Qpositive.",
            "VernacExtend",
            "2fdbc0f37d5a7db0445a7fab44c4a5be71ada358"
        ],
        [
            "apply what_dL_does.",
            "VernacExtend",
            "d49cd092d1a205b166f326e4976425665f14a21e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qmult_Z_dL : forall (a : Z) (p : Qpositive), Qmult (Z_to_Q a) (Qpos (dL p)) = Qmult (Qmult (Z_to_Q a) (Qpos p)) (Qinv (Qplus (Qpos p) Qone)).",
            "VernacStartTheoremProof",
            "0eebe184de8e1e28630eb5e7160361ae950083f4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite Qpos_dL.",
            "VernacExtend",
            "cc03022d7c535c014f830022e9ca7fadc6b57c43"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma length_of_Qpositive_is_length : forall p : positive, length_of_Qpositive (Qpositive_c (nat_of_P p) 1 (S (nat_of_P p))) = (Zpos p - 1)%Z.",
            "VernacStartTheoremProof",
            "cd8c871626f8b2132af92b515af8add798c9ebf2"
        ],
        [
            "intro p.",
            "VernacExtend",
            "5aea32c2ecd07598789d82ffef7594239c3ee52b"
        ],
        [
            "generalize (lt_O_nat_of_P p).",
            "VernacExtend",
            "a31e1fe61170ef6d9b53d10c65fc9ef8bc956811"
        ],
        [
            "rewrite <- ZL9.",
            "VernacExtend",
            "d123a820471e2cbcc182ef705b7a67019774e506"
        ],
        [
            "generalize (nat_of_P p).",
            "VernacExtend",
            "39fb2ebb0b0c234dac7893beec47f12e04bef62c"
        ],
        [
            "induction n.",
            "VernacExtend",
            "7f3faa2a3277e3553406d09101130efcb1764494"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "case (le_lt_eq_dec 1 (S n) (lt_le_S _ _ H)).",
            "VernacExtend",
            "8d6c18666fa93703473e13980f29209c849e7cee"
        ],
        [
            "intro H1.",
            "VernacExtend",
            "d2fcc9516b33dbca4f189b9ddbee105efc1235d1"
        ],
        [
            "rewrite (Qpositive_c_nR _ _ (S n) H1).",
            "VernacExtend",
            "16a05342b38dbd9e82730c6968efc22694ae3097"
        ],
        [
            "transitivity (1 + length_of_Qpositive (Qpositive_c (S n - 1) 1 (S n)))%Z.",
            "VernacExtend",
            "896ee9fa8f6f81d6f27c08a681fa15f2bc0b34c0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite Znat.inj_S.",
            "VernacExtend",
            "a210cdaac75f911a065718b5b4d1fc59cc11448c"
        ],
        [
            "rewrite Zplus_comm.",
            "VernacExtend",
            "2bb66f559ff90bf1a631140b359f483f39c79431"
        ],
        [
            "unfold Z.succ in |- *.",
            "VernacExtend",
            "d3292e8337e33f78eeb3f491cfdb2987c4452e05"
        ],
        [
            "transitivity (n - 1 + 1)%Z; [ idtac | omega ].",
            "VernacExtend",
            "cbcfa0df197b50ceb102360347e95489cbd44cd7"
        ],
        [
            "apply f_equal2 with Z Z; trivial.",
            "VernacExtend",
            "65479fed102a0bb938fb1001f8f2d35f73c542e7"
        ],
        [
            "rewrite <- IHn.",
            "VernacExtend",
            "3c5a36386bd293ffdd7a599d133f731aebc8cfae"
        ],
        [
            "apply f_equal with Qpositive.",
            "VernacExtend",
            "2fdbc0f37d5a7db0445a7fab44c4a5be71ada358"
        ],
        [
            "apply f_equal3 with nat nat nat; trivial.",
            "VernacExtend",
            "eaca978e6b167679ea736f11dd8d57e6c16180fa"
        ],
        [
            "simpl in |- *; auto with arith.",
            "VernacExtend",
            "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "intro H1; rewrite <- H1.",
            "VernacExtend",
            "500e1f7c34c92bd9e3780ac957e69afc685982e9"
        ],
        [
            "rewrite Qpositive_c_equal_One; trivial.",
            "VernacExtend",
            "910946866e7f4fe8d742829ef92b3bb53dd7710c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qpositive_to_Z_is_integer_part : forall x : positive, Qpositive_to_Z (Qpositive_c (nat_of_P x) 1 (S (nat_of_P x))) = Zpos x.",
            "VernacStartTheoremProof",
            "541c425ebfb92cb37b3a9b32e412aa972259156c"
        ],
        [
            "intro p.",
            "VernacExtend",
            "5aea32c2ecd07598789d82ffef7594239c3ee52b"
        ],
        [
            "generalize (lt_O_nat_of_P p).",
            "VernacExtend",
            "a31e1fe61170ef6d9b53d10c65fc9ef8bc956811"
        ],
        [
            "rewrite <- ZL9.",
            "VernacExtend",
            "d123a820471e2cbcc182ef705b7a67019774e506"
        ],
        [
            "generalize (nat_of_P p).",
            "VernacExtend",
            "39fb2ebb0b0c234dac7893beec47f12e04bef62c"
        ],
        [
            "induction n; intro H.",
            "VernacExtend",
            "2ffa416ae40aabd1c82beb505f6d91f26d971ba4"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "case (le_lt_eq_dec 1 (S n) (lt_le_S _ _ H)).",
            "VernacExtend",
            "8d6c18666fa93703473e13980f29209c849e7cee"
        ],
        [
            "intro H1.",
            "VernacExtend",
            "d2fcc9516b33dbca4f189b9ddbee105efc1235d1"
        ],
        [
            "rewrite (Qpositive_c_nR _ _ (S n) H1).",
            "VernacExtend",
            "16a05342b38dbd9e82730c6968efc22694ae3097"
        ],
        [
            "transitivity (1 + Qpositive_to_Z (Qpositive_c (S n - 1) 1 (S n)))%Z.",
            "VernacExtend",
            "36bdc756cf4bb79d6ffa7a2f302617caec299cda"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite Znat.inj_S.",
            "VernacExtend",
            "a210cdaac75f911a065718b5b4d1fc59cc11448c"
        ],
        [
            "rewrite Zplus_comm.",
            "VernacExtend",
            "2bb66f559ff90bf1a631140b359f483f39c79431"
        ],
        [
            "unfold Z.succ in |- *.",
            "VernacExtend",
            "d3292e8337e33f78eeb3f491cfdb2987c4452e05"
        ],
        [
            "apply f_equal2 with Z Z; trivial.",
            "VernacExtend",
            "65479fed102a0bb938fb1001f8f2d35f73c542e7"
        ],
        [
            "rewrite <- IHn.",
            "VernacExtend",
            "3c5a36386bd293ffdd7a599d133f731aebc8cfae"
        ],
        [
            "apply f_equal with Qpositive.",
            "VernacExtend",
            "2fdbc0f37d5a7db0445a7fab44c4a5be71ada358"
        ],
        [
            "apply f_equal3 with nat nat nat; trivial.",
            "VernacExtend",
            "eaca978e6b167679ea736f11dd8d57e6c16180fa"
        ],
        [
            "simpl in |- *; auto with arith.",
            "VernacExtend",
            "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "intro H1; rewrite <- H1.",
            "VernacExtend",
            "500e1f7c34c92bd9e3780ac957e69afc685982e9"
        ],
        [
            "rewrite Qpositive_c_equal_One; trivial.",
            "VernacExtend",
            "910946866e7f4fe8d742829ef92b3bb53dd7710c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Q_to_Z_to_Q : forall x : Z, Q_to_Z (Z_to_Q x) = x.",
            "VernacStartTheoremProof",
            "82a614625b891dc51e399145930181c07fbdd487"
        ],
        [
            "intros [| x| x]; trivial; unfold Z_to_Q in |- *; unfold Q_to_Z in |- *; rewrite Qpositive_to_Z_is_integer_part; reflexivity.",
            "VernacExtend",
            "41e3972d1253fdd52ddd3965a9caa751c71dccf2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_Z_to_Q : forall x y : Z, Z_to_Q x = Z_to_Q y -> x = y.",
            "VernacStartTheoremProof",
            "4bbcbbaa7f47fb0708ee46ae243a165c04137344"
        ],
        [
            "intros x y H.",
            "VernacExtend",
            "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
        ],
        [
            "generalize (f_equal Q_to_Z H).",
            "VernacExtend",
            "6e63023a3f4d2e65860d796d127d1acb34864cc7"
        ],
        [
            "intro H0.",
            "VernacExtend",
            "33135fa360f1c5b700715c0dfac0804c96d2fa77"
        ],
        [
            "rewrite (Q_to_Z_to_Q x) in H0.",
            "VernacExtend",
            "09c4271f15ceb00d87e2aee1ad2143f23bd65f47"
        ],
        [
            "rewrite (Q_to_Z_to_Q y) in H0.",
            "VernacExtend",
            "4ebd1ff3e84dbba29faa9b732ec446a01ce1fc06"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Z_to_Qpositive_equal : forall (m1 m2 : Z) (Hm1 : (0 < m1)%Z) (Hm2 : (0 < m2)%Z), m1 = m2 -> Z_to_Qpositive m1 Hm1 = Z_to_Qpositive m2 Hm2.",
            "VernacStartTheoremProof",
            "673571d0eb35fdb8950b2665577a6db3ef2e5b05"
        ],
        [
            "intros m1; induction m1.",
            "VernacExtend",
            "c3a415efcee6d618d5707f34743b6f74b2e5ed79"
        ],
        [
            "discriminate Hm1.",
            "VernacExtend",
            "7a05ee2c5177e0cb7f7a158010720044c18ebb64"
        ],
        [
            "unfold Z_to_Qpositive.",
            "VernacExtend",
            "0e3c493438d7bbb77d154ac4a5e1c2119da0253f"
        ],
        [
            "intros m2 H Hm2 H_eq;revert Hm2.",
            "VernacExtend",
            "e3f90756136b36ce3a31da99c2665c29953b639c"
        ],
        [
            "rewrite <- H_eq;reflexivity.",
            "VernacExtend",
            "5ead7f59c224d2037052f3a193faab49c08af270"
        ],
        [
            "intros m2 m1 abs;discriminate.",
            "VernacExtend",
            "62e8ac94fc151c878d18856f2aca55461449c013"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Functional Scheme Z_to_Q_ind := Induction for Z_to_Q Sort Prop.",
            "VernacExtend",
            "e8f83aa89feab368e56f5b0154fdeb51a95be438"
        ],
        [
            "Lemma Z_to_Qpositive_to_Q : forall (m : Z) (Hm : (0 < m)%Z), Z_to_Q m = Qpos (Z_to_Qpositive m Hm).",
            "VernacStartTheoremProof",
            "3bf79d6143b8f61ad53d5adaa5160ef0cc397578"
        ],
        [
            "intros m; functional induction (Z_to_Q m); intros Hm; discriminate Hm || trivial.",
            "VernacExtend",
            "99b57cfd4e8bea024e178e4e5728e578cb83f466"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qpos_injective : forall qp1 qp2 : Qpositive, Qpos qp1 = Qpos qp2 -> qp1 = qp2.",
            "VernacStartTheoremProof",
            "8faa8cfac9ec5c67d5b3cd97f8dda6c5cc876ddb"
        ],
        [
            "intros qp1 qp2 H; injection H; trivial.",
            "VernacExtend",
            "6ca45f79d3fa44d5ba6b6b5685b18d823b4d6823"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qneg_injective : forall qp1 qp2 : Qpositive, Qneg qp1 = Qneg qp2 -> qp1 = qp2.",
            "VernacStartTheoremProof",
            "644306c1c28f59186598dc373047a571213e9c0a"
        ],
        [
            "intros qp1 qp2 H; injection H; trivial.",
            "VernacExtend",
            "6ca45f79d3fa44d5ba6b6b5685b18d823b4d6823"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Q_tail_Q_pos : forall q : Q, Qlt Zero q -> q = Qpos (Q_tail q).",
            "VernacStartTheoremProof",
            "1289819c715d20d04b9299686763f87cf779e254"
        ],
        [
            "intros [| q| q]; unfold Qlt in |- *; intros H; inversion H || unfold Q_tail in |- *; reflexivity.",
            "VernacExtend",
            "7202115042557e7611c4cf974ad1ad23283f40eb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Q_tail_Q_neg : forall q : Q, Qlt q Zero -> q = Qneg (Q_tail q).",
            "VernacStartTheoremProof",
            "9ff9c319ba0e3c252abb14f811ab674497bdff7b"
        ],
        [
            "intros [| q| q]; unfold Qlt in |- *; intros H; inversion H || unfold Q_tail in |- *; reflexivity.",
            "VernacExtend",
            "7202115042557e7611c4cf974ad1ad23283f40eb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qpositive_to_Z_nonneg : forall x : Qpositive, (0 <= Qpositive_to_Z x)%Z.",
            "VernacStartTheoremProof",
            "f16decce01c83a454aa1f9f049aa7a4895af8c2a"
        ],
        [
            "intros x; induction x as [x Hrecx| x Hrecx| ]; [ replace (Qpositive_to_Z (nR x)) with (1 + Qpositive_to_Z x)%Z; trivial; abstract omega | simpl in |- *; apply Z.le_refl | simpl in |- *; intro H; discriminate ].",
            "VernacExtend",
            "e99f388607739a5572d054527699bb58b50e08df"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Functional Scheme Qpositive_le_bool_ind := Induction for Qpositive_le_bool Sort Prop.",
            "VernacExtend",
            "69488fbd859292607b5e59fc8b183bf0da6b7659"
        ],
        [
            "Lemma Qpositive_to_Z_Qpositive_le : forall x y : Qpositive, (Qpositive_to_Z x < Qpositive_to_Z y)%Z -> Qpositive_le x y.",
            "VernacStartTheoremProof",
            "c086756cfdd00aff148d94beb77d7708f062e0c7"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "unfold Qpositive_le in |- *.",
            "VernacExtend",
            "d7dfe6a2b2256a4e7c9bed719dec0f029ad0b2e6"
        ],
        [
            "functional induction (Qpositive_le_bool x y) ;intros; trivial.",
            "VernacExtend",
            "c4ce986796c2b1acc61cdc3de2b3c89da8fd3518"
        ],
        [
            "apply IHb.",
            "VernacExtend",
            "55d9e7ec2f3b99e177dec889d87448cefeb44ac4"
        ],
        [
            "unfold Qpositive_to_Z in H;fold Qpositive_to_Z in H.",
            "VernacExtend",
            "83ab1e275ce47816d6e77cd762636139ef188d38"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "unfold Qpositive_to_Z in H;fold Qpositive_to_Z in H; generalize (Qpositive_to_Z_nonneg y);intros; apply False_ind;omega.",
            "VernacExtend",
            "1c7a88efb3416aeaaea83425951d07daf319b1cc"
        ],
        [
            "unfold Qpositive_to_Z in H;fold Qpositive_to_Z in H; generalize (Qpositive_to_Z_nonneg y);intros; apply False_ind;omega.",
            "VernacExtend",
            "1c7a88efb3416aeaaea83425951d07daf319b1cc"
        ],
        [
            "apply IHb.",
            "VernacExtend",
            "55d9e7ec2f3b99e177dec889d87448cefeb44ac4"
        ],
        [
            "unfold Qpositive_to_Z in H;fold Qpositive_to_Z in H.",
            "VernacExtend",
            "83ab1e275ce47816d6e77cd762636139ef188d38"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "unfold Qpositive_to_Z in H;fold Qpositive_to_Z in H;discriminate.",
            "VernacExtend",
            "f792b178faa20d63fd99b8581e64628ff2e11290"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Q_to_Z_monotone : forall x y : Q, Qlt x y -> (Q_to_Z x <= Q_to_Z y)%Z.",
            "VernacStartTheoremProof",
            "903b48737c24199d5a270c08b3dc07fa138c2c7e"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "unfold Qlt in |- *.",
            "VernacExtend",
            "0ad96747a5529a8d9510339fae741064f9ebdb36"
        ],
        [
            "intro H.",
            "VernacExtend",
            "a9535760040671e8853f25f0b4e9eda38ca392a6"
        ],
        [
            "induction H; simpl in |- *; apply not_Zlt; intro H1.",
            "VernacExtend",
            "2704627ab282f1df1b71e019badb7c4d54181181"
        ],
        [
            "apply H; apply Qpositive_to_Z_Qpositive_le; assumption.",
            "VernacExtend",
            "2b31756e51a18a0ee81d388c82a99051d20db5bd"
        ],
        [
            "generalize (Zmin_cancel_Zlt _ _ H1); intro H2; apply H; apply Qpositive_to_Z_Qpositive_le; assumption.",
            "VernacExtend",
            "fa64a8978f9f5d96c5b331e4a451f688666d5e86"
        ],
        [
            "apply Z.lt_irrefl with 0%Z; generalize (Qpositive_to_Z_nonneg x'); intro H2; omega.",
            "VernacExtend",
            "11e94d03816218232ab81d2dd0a9e9a26af8332f"
        ],
        [
            "apply Z.lt_irrefl with 0%Z; generalize (Qpositive_to_Z_nonneg x'); generalize (Qpositive_to_Z_nonneg y'); intros H2 H3; abstract omega.",
            "VernacExtend",
            "077b5418219a5513cbd6dcddc6fc08649586f7c1"
        ],
        [
            "apply Z.lt_irrefl with 0%Z; generalize (Qpositive_to_Z_nonneg x'); intro H2; omega.",
            "VernacExtend",
            "11e94d03816218232ab81d2dd0a9e9a26af8332f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qlt_irreflexive : forall x : Q, ~ Qlt x x.",
            "VernacStartTheoremProof",
            "eca3209217d834896556b5059852a39469fcf09a"
        ],
        [
            "intro x; unfold Qlt in |- *; intro H; apply Qgt_antisym with x x; assumption.",
            "VernacExtend",
            "3ea95e88271fee437e84b3fd6dc4fc432d579a1f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Qlt_irreflexive.",
            "VernacHints",
            "0dba2cce86417f25e38973d0072030236f85e4b9"
        ],
        [
            "Lemma Qlt_not_eq : forall x y : Q, Qlt x y -> y <> x.",
            "VernacStartTheoremProof",
            "603cc9a3ded655dad68467acc4f8ead50dfa5a68"
        ],
        [
            "intros x y Hxlty Hxy; rewrite Hxy in Hxlty; apply Qlt_irreflexive with x; assumption.",
            "VernacExtend",
            "7653ab9dab7f06f12df4e1b01282146351313de9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Qlt_not_eq.",
            "VernacHints",
            "8e555b91b570ccdc17c234adf7373ac26f4701a9"
        ],
        [
            "Lemma Qlt_transitive : forall x y z : Q, Qlt x y -> Qlt y z -> Qlt x z.",
            "VernacStartTheoremProof",
            "9ca38ab19644c57d5301890888ce83eb40ac4837"
        ],
        [
            "intros x y z H1 H2.",
            "VernacExtend",
            "0d71d6482f590d052474f45e5b20f188f16ce84f"
        ],
        [
            "unfold Qlt in |- *.",
            "VernacExtend",
            "0ad96747a5529a8d9510339fae741064f9ebdb36"
        ],
        [
            "apply Qgt_trans with y; assumption.",
            "VernacExtend",
            "5714c43fb6cd360c4d744220bf72741b8060464e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Z_to_Qopp : forall x : Z, Z_to_Q (- x) = Qopp (Z_to_Q x).",
            "VernacStartTheoremProof",
            "3ad8080a2914266073c07de36765973de77becc1"
        ],
        [
            "intros [| x| x]; trivial.",
            "VernacExtend",
            "38c79fde36c60a92978ddbadaed7d3fc0b83e862"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Z_to_Qplus_POS : forall p1 p2 : positive, Z_to_Q (Zpos p1 + Zpos p2) = Qplus (Z_to_Q (Zpos p1)) (Z_to_Q (Zpos p2)).",
            "VernacStartTheoremProof",
            "86b47f2dc42fc6c9a7dab9087a6e1ccad8aaeb6f"
        ],
        [
            "intros p1 p2.",
            "VernacExtend",
            "e93b18f6dbe7145e13c2eeb78585225f0efe7250"
        ],
        [
            "unfold Z_to_Q at 2 3 in |- *.",
            "VernacExtend",
            "67e266129298359e4763679c8d9f8264bb903e36"
        ],
        [
            "unfold Qplus in |- *.",
            "VernacExtend",
            "48585560ee8e2f278e3c619d4ccdba89117c7202"
        ],
        [
            "rewrite <- BinInt.Zpos_plus_distr.",
            "VernacExtend",
            "df7c256ad4e7333127a12e77be8c05c549b1b8d3"
        ],
        [
            "unfold Z_to_Q at 1 in |- *.",
            "VernacExtend",
            "ecfee51864aa1af92382863990992532c180c4d4"
        ],
        [
            "apply f_equal with Qpositive.",
            "VernacExtend",
            "2fdbc0f37d5a7db0445a7fab44c4a5be71ada358"
        ],
        [
            "unfold Qpositive_plus in |- *.",
            "VernacExtend",
            "baca3c0b6cace94221022a23bdea7cafdd06399e"
        ],
        [
            "repeat rewrite Qpositive_i_c.",
            "VernacExtend",
            "bfff0e986eb15cf62213ee322000fbd502eb5228"
        ],
        [
            "repeat rewrite mult_1_l.",
            "VernacExtend",
            "56441439eca830a8bee8368a24a9a96350f65082"
        ],
        [
            "repeat rewrite mult_1_r.",
            "VernacExtend",
            "c36fcf28b5a0627806c8f5132966deffa2c08349"
        ],
        [
            "apply f_equal3 with nat nat nat; trivial.",
            "VernacExtend",
            "eaca978e6b167679ea736f11dd8d57e6c16180fa"
        ],
        [
            "apply nat_of_P_plus_morphism.",
            "VernacExtend",
            "e553beff41a75859e9acb91dc9a53465c6630b2f"
        ],
        [
            "rewrite nat_of_P_plus_morphism.",
            "VernacExtend",
            "da63fa329e69a98f7f26a43e61590478c2110ce3"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply lt_O_nat_of_P.",
            "VernacExtend",
            "b85e4c4ec39e2bca2224649c92454cc3b480f2a2"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply lt_O_nat_of_P.",
            "VernacExtend",
            "b85e4c4ec39e2bca2224649c92454cc3b480f2a2"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Z_to_Qplus_POS_NEG : forall p1 p2 : positive, Z_to_Q (Zpos p1 + Zneg p2) = Qplus (Z_to_Q (Zpos p1)) (Z_to_Q (Zneg p2)).",
            "VernacStartTheoremProof",
            "b2e6175ad69cb7677f807ecf463480b1160ef309"
        ],
        [
            "intros p1 p2.",
            "VernacExtend",
            "e93b18f6dbe7145e13c2eeb78585225f0efe7250"
        ],
        [
            "assert (H : Qplus (Z_to_Q (Zpos p1 + Zneg p2)) (Z_to_Q (Zpos p2)) = Z_to_Q (Zpos p1)).",
            "VernacExtend",
            "287a0a9da9e1ef1a80824d27c2d579863f7398b5"
        ],
        [
            "set (P := (Zpos p1 + Zneg p2)%Z) in *.",
            "VernacExtend",
            "64b8ddd547f6048ae637e5eee9af8ea3787d651a"
        ],
        [
            "assert (P = (Zpos p1 + Zneg p2)%Z); trivial.",
            "VernacExtend",
            "bef31de9e3bddba3da6916db9bd58079c776c1fa"
        ],
        [
            "destruct P.",
            "VernacExtend",
            "5b49412def545f38f2c7c88619b02391bea0772f"
        ],
        [
            "unfold Z_to_Q at 1 in |- *.",
            "VernacExtend",
            "ecfee51864aa1af92382863990992532c180c4d4"
        ],
        [
            "rewrite Qplus_zero_left.",
            "VernacExtend",
            "6cb11b947e2257e87ffa689db85c21bcfb92da3c"
        ],
        [
            "apply f_equal with Z.",
            "VernacExtend",
            "59c479ad75de611b01ba40fc4251df96f5055518"
        ],
        [
            "transitivity (- Zneg p2)%Z; trivial.",
            "VernacExtend",
            "a92bab0491b7d572c35229dc8fa813cfa6e99855"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite <- Z_to_Qplus_POS.",
            "VernacExtend",
            "d9d7f81883a8d942d4bc79fbd263ff379d4f4f69"
        ],
        [
            "apply f_equal with Z.",
            "VernacExtend",
            "59c479ad75de611b01ba40fc4251df96f5055518"
        ],
        [
            "replace (Zpos p2) with (- Zneg p2)%Z; trivial.",
            "VernacExtend",
            "2d7fb056cca622b9f49b906f640e142959fa4fc2"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "unfold Z_to_Q at 1 2 3 in |- *.",
            "VernacExtend",
            "d9291d287f56d56b91b44a676175a78b0a303d33"
        ],
        [
            "assert (Hp : (Zpos p < Zpos p2)%Z).",
            "VernacExtend",
            "231d6699b8229fb19201514e59248b0aab2e489c"
        ],
        [
            "apply Zmin_cancel_Zlt.",
            "VernacExtend",
            "f6dcc2804bf8e2e09d246670adc6637dc907c2f3"
        ],
        [
            "unfold Z.opp in |- *.",
            "VernacExtend",
            "8865fcc9f5413878999aae1e3b1a8a90f6b9b3c0"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "rewrite <- (Zplus_0_l (Zneg p2)).",
            "VernacExtend",
            "a3275b483146896d09d237471164b2b9ee0a6ef2"
        ],
        [
            "apply Zplus_lt_compat_r.",
            "VernacExtend",
            "c6eedaf39065761122509fee23619cbac83637b7"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "unfold Qplus in |- *.",
            "VernacExtend",
            "48585560ee8e2f278e3c619d4ccdba89117c7202"
        ],
        [
            "case (Qpositive_le_dec (Qpositive_c (nat_of_P p) 1 (S (nat_of_P p))) (Qpositive_c (nat_of_P p2) 1 (S (nat_of_P p2)))); intro H1.",
            "VernacExtend",
            "b30d28a391ed91ad9805d3660f3f44f9d917a829"
        ],
        [
            "case (Qpositive_eq_dec (Qpositive_c (nat_of_P p) 1 (S (nat_of_P p))) (Qpositive_c (nat_of_P p2) 1 (S (nat_of_P p2)))); intro H2.",
            "VernacExtend",
            "2e2cbcabdda3e11742deb591a507cf285e3ca48b"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "generalize (f_equal Qpositive_to_Z H2).",
            "VernacExtend",
            "85343194a72c964f8d45af5c9d54e5d3322ff816"
        ],
        [
            "do 2 rewrite Qpositive_to_Z_is_integer_part.",
            "VernacExtend",
            "0f6dce1c217a076598657119d6e5f4843ecc72fe"
        ],
        [
            "apply Zorder.Zlt_not_eq; assumption.",
            "VernacExtend",
            "8a526470f026aa80fca559101f4cc7e656002c13"
        ],
        [
            "assert (Hp' : Zpos p2 = (Zpos p1 + Zpos p)%Z).",
            "VernacExtend",
            "b2a39d5288545f9abb2f28ff50a7b8a147ecf532"
        ],
        [
            "clear H1 H2.",
            "VernacExtend",
            "11b745af7c87ecf3d332fcb85ae4f59023a9f120"
        ],
        [
            "replace (Zpos p) with (- Zneg p)%Z; trivial.",
            "VernacExtend",
            "da0c6ba1e77f4b5b5a01abb24bade86ca58844d5"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "replace (Zneg p2) with (- Zpos p2)%Z; trivial.",
            "VernacExtend",
            "5d550115395a20543ddc6dbbeb98053bd41c44ba"
        ],
        [
            "auto with zarith.",
            "VernacExtend",
            "23f42fd3236dcece4a40b3a666dce57fea69a9c0"
        ],
        [
            "rewrite <- BinInt.Zpos_plus_distr in Hp'.",
            "VernacExtend",
            "42dc0141a0258d596ad1a90209c86ee8db705525"
        ],
        [
            "generalize (POS_resp_eq _ _ Hp').",
            "VernacExtend",
            "6dde093f29e9fc2530f9ec626f0e9719cd3472a3"
        ],
        [
            "intro Hp2.",
            "VernacExtend",
            "8e8d78732b4d5c81a693bbd2fc4c4e0a95575e41"
        ],
        [
            "apply f_equal with Qpositive.",
            "VernacExtend",
            "2fdbc0f37d5a7db0445a7fab44c4a5be71ada358"
        ],
        [
            "unfold Qpositive_sub in |- *.",
            "VernacExtend",
            "4ff220c9ee0d8f94e8b237364da383eb9b5839b9"
        ],
        [
            "repeat rewrite Qpositive_i_c.",
            "VernacExtend",
            "bfff0e986eb15cf62213ee322000fbd502eb5228"
        ],
        [
            "repeat rewrite mult_1_l.",
            "VernacExtend",
            "56441439eca830a8bee8368a24a9a96350f65082"
        ],
        [
            "repeat rewrite mult_1_r.",
            "VernacExtend",
            "c36fcf28b5a0627806c8f5132966deffa2c08349"
        ],
        [
            "clear H1 H2; apply Qpositive_c_equal_strong; trivial; try omega; rewrite Hp2; rewrite nat_of_P_plus_morphism.",
            "VernacExtend",
            "cbefab19368dd13746991a079c97fb2f3097d38e"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "replace (nat_of_P p1 + nat_of_P p - nat_of_P p) with (nat_of_P p1); [ apply lt_O_nat_of_P | omega ].",
            "VernacExtend",
            "7a835bb03bcb502d520e868bd72dd2ff7c58822a"
        ],
        [
            "apply lt_O_nat_of_P.",
            "VernacExtend",
            "b85e4c4ec39e2bca2224649c92454cc3b480f2a2"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply lt_O_nat_of_P.",
            "VernacExtend",
            "b85e4c4ec39e2bca2224649c92454cc3b480f2a2"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply False_ind; apply H1.",
            "VernacExtend",
            "c382ebb19d0aec014cbfa673f19e6fecf4e63e1f"
        ],
        [
            "apply Qpositive_to_Z_Qpositive_le.",
            "VernacExtend",
            "4d7cda04f40cdd3965b672f3dbec7e9856d33dc9"
        ],
        [
            "do 2 rewrite Qpositive_to_Z_is_integer_part.",
            "VernacExtend",
            "0f6dce1c217a076598657119d6e5f4843ecc72fe"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "replace (Zneg p2) with (- Zpos p2)%Z; trivial.",
            "VernacExtend",
            "5d550115395a20543ddc6dbbeb98053bd41c44ba"
        ],
        [
            "rewrite Z_to_Qopp.",
            "VernacExtend",
            "75a979be90e83b001809ec700daca0abfe28a8e9"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Z_to_Qplus_NEG : forall p1 p2 : positive, Z_to_Q (Zneg p1 + Zneg p2) = Qplus (Z_to_Q (Zneg p1)) (Z_to_Q (Zneg p2)).",
            "VernacStartTheoremProof",
            "688d9164129c1d6551bfc7aa3dfa1305a82bd8dd"
        ],
        [
            "intros p1 p2.",
            "VernacExtend",
            "e93b18f6dbe7145e13c2eeb78585225f0efe7250"
        ],
        [
            "replace (Zneg p1) with (- Zpos p1)%Z; trivial.",
            "VernacExtend",
            "f51e786f408927bf9b8908e48527ac490732561d"
        ],
        [
            "replace (Zneg p2) with (- Zpos p2)%Z; trivial.",
            "VernacExtend",
            "5d550115395a20543ddc6dbbeb98053bd41c44ba"
        ],
        [
            "rewrite <- Zopp_plus_distr.",
            "VernacExtend",
            "0f74890cd13001b6d46ea9010f4d3d762174db90"
        ],
        [
            "repeat rewrite Z_to_Qopp.",
            "VernacExtend",
            "fcfe737ea8f5f7503354c80bf6a4fd7185a4a55a"
        ],
        [
            "rewrite Z_to_Qplus_POS.",
            "VernacExtend",
            "b7119170fa6300a5b6043da387b1c0e9de36c435"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Z_to_Qplus : forall x y : Z, Z_to_Q (x + y) = Qplus (Z_to_Q x) (Z_to_Q y).",
            "VernacStartTheoremProof",
            "f3e18017f4ac8abcf223c8fe4c80dd03bb5f124f"
        ],
        [
            "intros [| x| x] [| y| y]; trivial; [ apply Z_to_Qplus_POS | apply Z_to_Qplus_POS_NEG | rewrite Zplus_comm; rewrite Qplus_sym; apply Z_to_Qplus_POS_NEG | apply Z_to_Qplus_NEG ].",
            "VernacExtend",
            "976d1c3de361b74e00019e9fad7d61ee2f402fc7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Z_to_Qminus : forall x y : Z, Z_to_Q (x - y) = Qminus (Z_to_Q x) (Z_to_Q y).",
            "VernacStartTheoremProof",
            "274b34e9d49c55457812df4002866aa327a5fc40"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "unfold Zminus in |- *.",
            "VernacExtend",
            "7085d4231409167767072da1bd24eb73ce98a683"
        ],
        [
            "rewrite Z_to_Qplus.",
            "VernacExtend",
            "91bcce18005d1e21fa9df559d23ae6236a33c1db"
        ],
        [
            "rewrite Z_to_Qopp.",
            "VernacExtend",
            "75a979be90e83b001809ec700daca0abfe28a8e9"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Z_to_Qmult_POS : forall p1 p2 : positive, Z_to_Q (Zpos p1 * Zpos p2) = Qmult (Z_to_Q (Zpos p1)) (Z_to_Q (Zpos p2)).",
            "VernacStartTheoremProof",
            "aa422297e3feba5fec09970cc0241d84fcc63e58"
        ],
        [
            "intros p1 p2.",
            "VernacExtend",
            "e93b18f6dbe7145e13c2eeb78585225f0efe7250"
        ],
        [
            "unfold Z_to_Q at 2 3 in |- *.",
            "VernacExtend",
            "67e266129298359e4763679c8d9f8264bb903e36"
        ],
        [
            "unfold Qmult in |- *.",
            "VernacExtend",
            "d36d3aca350a1a239a6f9e206589bbf6c068bc30"
        ],
        [
            "replace (Zpos p1 * Zpos p2)%Z with (Zpos (p1 * p2)); trivial.",
            "VernacExtend",
            "d13763fcb95530094c352748db115014347b6e53"
        ],
        [
            "unfold Z_to_Q at 1 in |- *.",
            "VernacExtend",
            "ecfee51864aa1af92382863990992532c180c4d4"
        ],
        [
            "apply f_equal with Qpositive.",
            "VernacExtend",
            "2fdbc0f37d5a7db0445a7fab44c4a5be71ada358"
        ],
        [
            "unfold Qpositive_mult in |- *.",
            "VernacExtend",
            "1f30d7ea915496b697c735518fc781164df3a288"
        ],
        [
            "repeat rewrite Qpositive_i_c.",
            "VernacExtend",
            "bfff0e986eb15cf62213ee322000fbd502eb5228"
        ],
        [
            "repeat rewrite mult_1_l.",
            "VernacExtend",
            "56441439eca830a8bee8368a24a9a96350f65082"
        ],
        [
            "apply f_equal3 with nat nat nat; trivial.",
            "VernacExtend",
            "eaca978e6b167679ea736f11dd8d57e6c16180fa"
        ],
        [
            "apply nat_of_P_mult_morphism.",
            "VernacExtend",
            "b64c051a0199af28a634c1eea38f9edda47e6529"
        ],
        [
            "rewrite nat_of_P_mult_morphism.",
            "VernacExtend",
            "e0696e737b09d96aa22951166e1c5feef4a1f01e"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply lt_O_nat_of_P.",
            "VernacExtend",
            "b85e4c4ec39e2bca2224649c92454cc3b480f2a2"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply lt_O_nat_of_P.",
            "VernacExtend",
            "b85e4c4ec39e2bca2224649c92454cc3b480f2a2"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Z_to_Qmult_POS_NEG : forall p1 p2 : positive, Z_to_Q (Zpos p1 * Zneg p2) = Qmult (Z_to_Q (Zpos p1)) (Z_to_Q (Zneg p2)).",
            "VernacStartTheoremProof",
            "7bdfb2753bd09ebe97f21c00d73ee8be03747218"
        ],
        [
            "intros p1 p2.",
            "VernacExtend",
            "e93b18f6dbe7145e13c2eeb78585225f0efe7250"
        ],
        [
            "unfold Z_to_Q at 2 3 in |- *.",
            "VernacExtend",
            "67e266129298359e4763679c8d9f8264bb903e36"
        ],
        [
            "unfold Qmult in |- *.",
            "VernacExtend",
            "d36d3aca350a1a239a6f9e206589bbf6c068bc30"
        ],
        [
            "replace (Zpos p1 * Zneg p2)%Z with (Zneg (p1 * p2)); trivial.",
            "VernacExtend",
            "d93e3eca4a4cb3c33dc3d6750ebe5b7d45c30814"
        ],
        [
            "unfold Z_to_Q at 1 in |- *.",
            "VernacExtend",
            "ecfee51864aa1af92382863990992532c180c4d4"
        ],
        [
            "apply f_equal with Qpositive.",
            "VernacExtend",
            "2fdbc0f37d5a7db0445a7fab44c4a5be71ada358"
        ],
        [
            "unfold Qpositive_mult in |- *.",
            "VernacExtend",
            "1f30d7ea915496b697c735518fc781164df3a288"
        ],
        [
            "repeat rewrite Qpositive_i_c.",
            "VernacExtend",
            "bfff0e986eb15cf62213ee322000fbd502eb5228"
        ],
        [
            "repeat rewrite mult_1_l.",
            "VernacExtend",
            "56441439eca830a8bee8368a24a9a96350f65082"
        ],
        [
            "apply f_equal3 with nat nat nat; trivial.",
            "VernacExtend",
            "eaca978e6b167679ea736f11dd8d57e6c16180fa"
        ],
        [
            "apply nat_of_P_mult_morphism.",
            "VernacExtend",
            "b64c051a0199af28a634c1eea38f9edda47e6529"
        ],
        [
            "rewrite nat_of_P_mult_morphism.",
            "VernacExtend",
            "e0696e737b09d96aa22951166e1c5feef4a1f01e"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply lt_O_nat_of_P.",
            "VernacExtend",
            "b85e4c4ec39e2bca2224649c92454cc3b480f2a2"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply lt_O_nat_of_P.",
            "VernacExtend",
            "b85e4c4ec39e2bca2224649c92454cc3b480f2a2"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Z_to_Qmult_NEG : forall p1 p2 : positive, Z_to_Q (Zneg p1 * Zneg p2) = Qmult (Z_to_Q (Zneg p1)) (Z_to_Q (Zneg p2)).",
            "VernacStartTheoremProof",
            "76f51a8c49fbf797d9d87a49c6c98846231f0f5e"
        ],
        [
            "intros p1 p2.",
            "VernacExtend",
            "e93b18f6dbe7145e13c2eeb78585225f0efe7250"
        ],
        [
            "unfold Z_to_Q at 2 3 in |- *.",
            "VernacExtend",
            "67e266129298359e4763679c8d9f8264bb903e36"
        ],
        [
            "unfold Qmult in |- *.",
            "VernacExtend",
            "d36d3aca350a1a239a6f9e206589bbf6c068bc30"
        ],
        [
            "replace (Zneg p1 * Zneg p2)%Z with (Zpos (p1 * p2)); trivial.",
            "VernacExtend",
            "b6df0499ed805c150d5a41dcfe056356eb257367"
        ],
        [
            "unfold Z_to_Q at 1 in |- *.",
            "VernacExtend",
            "ecfee51864aa1af92382863990992532c180c4d4"
        ],
        [
            "apply f_equal with Qpositive.",
            "VernacExtend",
            "2fdbc0f37d5a7db0445a7fab44c4a5be71ada358"
        ],
        [
            "unfold Qpositive_mult in |- *.",
            "VernacExtend",
            "1f30d7ea915496b697c735518fc781164df3a288"
        ],
        [
            "repeat rewrite Qpositive_i_c.",
            "VernacExtend",
            "bfff0e986eb15cf62213ee322000fbd502eb5228"
        ],
        [
            "repeat rewrite mult_1_l.",
            "VernacExtend",
            "56441439eca830a8bee8368a24a9a96350f65082"
        ],
        [
            "apply f_equal3 with nat nat nat; trivial.",
            "VernacExtend",
            "eaca978e6b167679ea736f11dd8d57e6c16180fa"
        ],
        [
            "apply nat_of_P_mult_morphism.",
            "VernacExtend",
            "b64c051a0199af28a634c1eea38f9edda47e6529"
        ],
        [
            "rewrite nat_of_P_mult_morphism.",
            "VernacExtend",
            "e0696e737b09d96aa22951166e1c5feef4a1f01e"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply lt_O_nat_of_P.",
            "VernacExtend",
            "b85e4c4ec39e2bca2224649c92454cc3b480f2a2"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply lt_O_nat_of_P.",
            "VernacExtend",
            "b85e4c4ec39e2bca2224649c92454cc3b480f2a2"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Z_to_Qmult : forall x y : Z, Z_to_Q (x * y) = Qmult (Z_to_Q x) (Z_to_Q y).",
            "VernacStartTheoremProof",
            "7628a3f0bdc8203be27d86b2b8821c69176ca2f1"
        ],
        [
            "intros [| x| x] [| y| y]; trivial; [ apply Z_to_Qmult_POS | apply Z_to_Qmult_POS_NEG | rewrite Zmult_comm; rewrite Qmult_sym; apply Z_to_Qmult_POS_NEG | apply Z_to_Qmult_NEG ].",
            "VernacExtend",
            "4e946ab698738eebec67ea2c33c870d664dd1e47"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Z_to_Q_S:forall k, Z_to_Q (Z_of_nat (S k))=Qplus k Qone.",
            "VernacStartTheoremProof",
            "5ab1ebc3591e704b3fcd1cd3db6c463ed94585a3"
        ],
        [
            "induction k; trivial.",
            "VernacExtend",
            "7672ddfa44cc998f89d8d7efb82791180cbbc8cc"
        ],
        [
            "rewrite inj_S; unfold Z.succ; rewrite Z_to_Qplus; rewrite IHk; unfold Z_to_Q at 2; simpl; fold Qone; ring.",
            "VernacExtend",
            "0835726f40b1c4298bb293b7e72f59c52ba30a74"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Z_to_Q_min_one:Z_to_Q (-1)%Z= Qopp Qone.",
            "VernacStartTheoremProof",
            "81b24ec9995f5ce261d48714a7cc0c49acc55b3d"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qlt_Zero_Qminus : forall x y : Q, Qlt Zero (Qminus y x) -> Qlt x y.",
            "VernacStartTheoremProof",
            "5b7038a3fa564ff52c4bdfe7bd81b7fbd0de2737"
        ],
        [
            "intros x y H; replace x with (Qplus x Zero); [ idtac | ring ]; replace y with (Qplus x (Qminus y x)); [ idtac | ring ]; unfold Qlt in |- *; apply Qgt_plus; assumption.",
            "VernacExtend",
            "ee8c0f701a976e5d6c9ae7ff7571fb4df76efb8c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Z_to_Qlt : forall x y : Z, (x < y)%Z -> Qlt x y.",
            "VernacStartTheoremProof",
            "848f12c45e05110f609c9b2985c3af8fd58c5202"
        ],
        [
            "intros x y H.",
            "VernacExtend",
            "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
        ],
        [
            "apply Qlt_Zero_Qminus.",
            "VernacExtend",
            "c4f764c41810d82acc98354f859ac20fad83cc11"
        ],
        [
            "generalize (Z.lt_gt _ _ H); clear H; intro H.",
            "VernacExtend",
            "c200df979f1ebb15a39b5dcd9a96ecd0ee1bfc5c"
        ],
        [
            "case (Zcompare_Gt_spec _ _ H).",
            "VernacExtend",
            "f351a4345332c0f122feda7105a8d75a8342faca"
        ],
        [
            "intros p Hp.",
            "VernacExtend",
            "cf737bd4e185c03175335af1ca6ae52da34cba56"
        ],
        [
            "rewrite <- Z_to_Qminus.",
            "VernacExtend",
            "ffdbca4f353830a1c7d41d9baa24738b0dc44ba3"
        ],
        [
            "unfold Zminus in |- *.",
            "VernacExtend",
            "7085d4231409167767072da1bd24eb73ce98a683"
        ],
        [
            "rewrite Hp.",
            "VernacExtend",
            "b511f9e4ffd06db3fba6cc16f472f9ed92990ffa"
        ],
        [
            "unfold Z_to_Q in |- *.",
            "VernacExtend",
            "77cdaf807c942888208030d787a5be9c2586e516"
        ],
        [
            "apply Qlt_zero_pos.",
            "VernacExtend",
            "f9595803a16972a33ba19198c08c39b39eaef493"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_Z_to_Q : forall x y : Z, Qlt (Z_to_Q x) (Z_to_Q y) -> (x < y)%Z.",
            "VernacStartTheoremProof",
            "6c01c4b3255bed1fd41aa09502da833371048dbe"
        ],
        [
            "intros x y H.",
            "VernacExtend",
            "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
        ],
        [
            "case (Z_dec' x y).",
            "VernacExtend",
            "958c24a70c4e0fcc2a601d5d1841b51ab9dcc466"
        ],
        [
            "intros [H1| H1]; trivial.",
            "VernacExtend",
            "8ac10e784dbd9e8cbcd7a0c05794f3a64ec5dcd7"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "apply Qlt_irreflexive with x.",
            "VernacExtend",
            "e283874bf9f5205458e9cc84e97b1dc2e073c40b"
        ],
        [
            "apply Qlt_transitive with y; trivial.",
            "VernacExtend",
            "608672d9ee1aa18c99142d742021749efae9ad39"
        ],
        [
            "apply Z_to_Qlt; assumption.",
            "VernacExtend",
            "2c7d5a1552aaef21f99edbaf8573e6c457e43849"
        ],
        [
            "intro H1.",
            "VernacExtend",
            "d2fcc9516b33dbca4f189b9ddbee105efc1235d1"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "rewrite H1 in H.",
            "VernacExtend",
            "215f4c64f25f3964f02c3397d1a12602c82b8f1b"
        ],
        [
            "generalize H.",
            "VernacExtend",
            "743bb3d7407250a3128af7c9fa5ed4e9ada826b2"
        ],
        [
            "apply Qlt_irreflexive.",
            "VernacExtend",
            "5eb9bb8683b065902583f6eccea56c5be2bf4a63"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pos_Z_to_Q : forall x : Z, Qlt Zero (Z_to_Q x) -> (0 < x)%Z.",
            "VernacStartTheoremProof",
            "d0a8cc7a3271eba38ed550347df1d0e298cb657e"
        ],
        [
            "intros x H.",
            "VernacExtend",
            "a0cd74b85812810ce5a78a540bad98f664bd4842"
        ],
        [
            "apply lt_Z_to_Q; assumption.",
            "VernacExtend",
            "acb2d8a8870bedf7118a630b5269acb053d5542f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma neg_Z_to_Q : forall x : Z, Qlt (Z_to_Q x) Zero -> (x < 0)%Z.",
            "VernacStartTheoremProof",
            "91501f31c9acc290af2f981f5348daf04c18baf5"
        ],
        [
            "intros x H.",
            "VernacExtend",
            "a0cd74b85812810ce5a78a540bad98f664bd4842"
        ],
        [
            "apply lt_Z_to_Q; assumption.",
            "VernacExtend",
            "acb2d8a8870bedf7118a630b5269acb053d5542f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qlt_le_weak : forall x y : Q, Qlt x y -> Qle x y.",
            "VernacStartTheoremProof",
            "3bb597e9ea3ff1452c26b13a31ff5773428bf466"
        ],
        [
            "intros x y H.",
            "VernacExtend",
            "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
        ],
        [
            "unfold Qle in |- *.",
            "VernacExtend",
            "c9b6770441c2d08b29a015252bba8d9a9b0ce182"
        ],
        [
            "intro H2; apply Qlt_irreflexive with x; apply Qlt_transitive with y; assumption.",
            "VernacExtend",
            "3879842ff429a118afa4d4f4ddd2997e6a94352d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Z_to_Qle : forall x y : Z, (x <= y)%Z -> Qle x y.",
            "VernacStartTheoremProof",
            "203f528547677452188dc3b56c3969a84306e024"
        ],
        [
            "intros x y H.",
            "VernacExtend",
            "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
        ],
        [
            "case (Z_le_lt_eq_dec _ _ H); intro H1.",
            "VernacExtend",
            "f59d4a29ff3e9474a12edfa84cb08bc483fc1bd7"
        ],
        [
            "apply Qlt_le_weak; apply Z_to_Qlt; assumption.",
            "VernacExtend",
            "5a40b06448804f31b20582cc696a91d9ab476b60"
        ],
        [
            "rewrite H1; unfold Qle in |- *; apply Qlt_irreflexive.",
            "VernacExtend",
            "ccf54bf4473ec38f11a33aa32ce11aa91d4e3f56"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Z_to_Q_pos : forall x : Z, (0 < x)%Z -> Qlt Zero x.",
            "VernacStartTheoremProof",
            "00a7da19ce04fb09214ea77a9c194d5e3ac142fe"
        ],
        [
            "intros x H.",
            "VernacExtend",
            "a0cd74b85812810ce5a78a540bad98f664bd4842"
        ],
        [
            "replace Zero with (Z_to_Q 0); trivial.",
            "VernacExtend",
            "49c84243abbbd22907850cd8e4cc99c13372841a"
        ],
        [
            "apply Z_to_Qlt; assumption.",
            "VernacExtend",
            "2c7d5a1552aaef21f99edbaf8573e6c457e43849"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Z_to_Q_neg : forall x : Z, (x < 0)%Z -> Qlt x Zero.",
            "VernacStartTheoremProof",
            "b607a88a2a45c1a6725363471e8ad8b65b50edf4"
        ],
        [
            "intros x H.",
            "VernacExtend",
            "a0cd74b85812810ce5a78a540bad98f664bd4842"
        ],
        [
            "replace Zero with (Z_to_Q 0); trivial.",
            "VernacExtend",
            "49c84243abbbd22907850cd8e4cc99c13372841a"
        ],
        [
            "apply Z_to_Qlt; assumption.",
            "VernacExtend",
            "2c7d5a1552aaef21f99edbaf8573e6c457e43849"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Z_to_Q_nonneg : forall x : Z, (0 <= x)%Z -> Qle Zero x.",
            "VernacStartTheoremProof",
            "7dac8526742747fe47cd2a65fa0ad59f40b667d2"
        ],
        [
            "intros x H.",
            "VernacExtend",
            "a0cd74b85812810ce5a78a540bad98f664bd4842"
        ],
        [
            "replace Zero with (Z_to_Q 0); trivial.",
            "VernacExtend",
            "49c84243abbbd22907850cd8e4cc99c13372841a"
        ],
        [
            "apply Z_to_Qle; assumption.",
            "VernacExtend",
            "f19325f5e33d69043e5cad6e279fe5bd9ad84cac"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Z_to_Q_nonpos : forall x : Z, (x <= 0)%Z -> Qle x Zero.",
            "VernacStartTheoremProof",
            "19fb90176b267309f27035f3317fe78ed98458b8"
        ],
        [
            "intros x H.",
            "VernacExtend",
            "a0cd74b85812810ce5a78a540bad98f664bd4842"
        ],
        [
            "replace Zero with (Z_to_Q 0); trivial.",
            "VernacExtend",
            "49c84243abbbd22907850cd8e4cc99c13372841a"
        ],
        [
            "apply Z_to_Qle; assumption.",
            "VernacExtend",
            "f19325f5e33d69043e5cad6e279fe5bd9ad84cac"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Z_to_Q_not_eq : forall a b : Z, a <> b -> Z_to_Q a <> Z_to_Q b.",
            "VernacStartTheoremProof",
            "8f4d4fc70b5d414b3f45f07122f9f8acab0dc35c"
        ],
        [
            "intros a b Hab HabQ; apply Hab; apply eq_Z_to_Q; assumption.",
            "VernacExtend",
            "074e33184ed40740ba2b5ecbe78bebe1baf7f726"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qmult_Z_plus_Z_dL : forall (a b : Z) (p : Qpositive), Qplus (Qmult (Z_to_Q a) (Qpos (dL p))) (Z_to_Q b) = Qmult (Qplus (Qmult (Z_to_Q (a + b)) (Qpos p)) (Z_to_Q b)) (Qinv (Qplus (Qpos p) Qone)).",
            "VernacStartTheoremProof",
            "6e4f640c46f57902c8b043265d462943bb9ec44b"
        ],
        [
            "intros; rewrite Qmult_Z_dL.",
            "VernacExtend",
            "fb9b5bcf28d12d6b8cbeca2011110742a71e82eb"
        ],
        [
            "rewrite Z_to_Qplus; field; discriminate.",
            "VernacExtend",
            "fdeb8f487208efbc0cc4f7d69a8ac14180982864"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qinv_0 : forall q : Q, Qinv q = Zero -> q = Zero.",
            "VernacStartTheoremProof",
            "9b61e4691a37f8274c31a3b1c0d71eee98d7f536"
        ],
        [
            "intros [| qp | qp ] Hqp; try trivial; discriminate Hqp.",
            "VernacExtend",
            "923fbe04341fc8be3259285b7c6ec66238302527"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qmult_resp_nonzero : forall x y : Q, x <> Zero -> y <> Zero -> Qmult x y <> Zero.",
            "VernacStartTheoremProof",
            "7c3312e86d8d8cd66f7684a370e676ca1fc34213"
        ],
        [
            "intros x y Hx Hy Hxy; generalize (Q_integral _ _ Hxy); intros [H| H]; [ apply Hx | apply Hy ]; assumption.",
            "VernacExtend",
            "07774286b65f7aec2ba38f5738012bfa374d8055"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Qmult_resp_nonzero.",
            "VernacHints",
            "4ced56f7b7f84723ac6d2a934ea19737a99a3cde"
        ],
        [
            "Lemma Qlt_mult_pos_pos : forall x y : Q, Qlt Zero x -> Qlt Zero y -> Qlt Zero (Qmult x y).",
            "VernacStartTheoremProof",
            "261eddf647936151e761ea2bf516f2fd240d5bd8"
        ],
        [
            "intros [| x| x] [| y| y] Hx Hy; trivial; simpl in |- *; auto with *; [ inversion Hy | inversion Hx ].",
            "VernacExtend",
            "4bbc6b69fe08ecc0ff9bcc53c04e7878b6765c8a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qlt_mult_neg_pos : forall x y : Q, Qlt x Zero -> Qlt Zero y -> Qlt (Qmult x y) Zero.",
            "VernacStartTheoremProof",
            "dde73f3bbc828644ecab6fe3d821acba391e2037"
        ],
        [
            "intros [| x| x] [| y| y] Hx Hy; trivial; simpl in |- *; auto with *; [ inversion Hx | inversion Hy ].",
            "VernacExtend",
            "97a3488a67ef97d9bb45b0273b199f855f7e682a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Qlt_mult_pos_pos Qlt_mult_neg_pos.",
            "VernacHints",
            "c15e84380353eeb66343147f3be4697bd8d1aa89"
        ],
        [
            "Lemma Qlt_plus_pos_pos : forall x y : Q, Qlt Zero x -> Qlt Zero y -> Qlt Zero (Qplus x y).",
            "VernacStartTheoremProof",
            "5b969e8e6afac2d45c480c0df8d1cbbfcad15fd2"
        ],
        [
            "intros [| x| x] [| y| y] Hx Hy; trivial; simpl in |- *; auto with *; [ inversion Hy | inversion Hx | inversion Hx ].",
            "VernacExtend",
            "68dfa85de1c863d7939a276ec6f6f6f99798f9e0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Qlt_plus_pos_pos.",
            "VernacHints",
            "03bee314f8a2bd966adf6e9b1dc9ad3316872c0f"
        ],
        [
            "Lemma Qdiv_num_denom : forall q1 q2 p : Q, p <> Zero -> Qmult q1 (Qinv q2) = Qmult (Qmult q1 p) (Qinv (Qmult q2 p)).",
            "VernacStartTheoremProof",
            "11d7c7f8946650fa39e96a3291a8774642960aeb"
        ],
        [
            "intros q1 [| qp| qp] p Hp; (simpl in |- *; ring) || (field; split; discriminate || assumption).",
            "VernacExtend",
            "410c5cb7bb1e7abd4037641f476b3c3df72d31eb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qinv_1 : forall q : Q, Qlt Zero (Qinv q) -> Qlt Zero q.",
            "VernacStartTheoremProof",
            "506d7666d5d60fa3efcba22759fe635a71ea33c4"
        ],
        [
            "intros [| q| q] Hq; trivial; inversion Hq.",
            "VernacExtend",
            "6d31563cef539d7f1b209f335a1c13c56ec8f3a4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qinv_2 : forall q : Q, Qlt (Qinv q) Zero -> Qlt q Zero.",
            "VernacStartTheoremProof",
            "15405b47984a39fe04411a4490cf527de88f8b31"
        ],
        [
            "intros [| q| q] Hq; trivial; inversion Hq.",
            "VernacExtend",
            "6d31563cef539d7f1b209f335a1c13c56ec8f3a4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qinv_pos : forall q : Q, Qlt Zero q -> Qlt Zero (Qinv q).",
            "VernacStartTheoremProof",
            "8ca941a2f4838af019671c8abc96d65b1fc80597"
        ],
        [
            "intros [| q| q] Hq; simpl in |- *; trivial; inversion Hq.",
            "VernacExtend",
            "b54cbb99ed85adcfee5e427539dd5d1112349b4d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qmult_one_right : forall x : Q, Qmult x Qone = x.",
            "VernacStartTheoremProof",
            "654bf0496609c197786686d6f14c437cacb56e38"
        ],
        [
            "intro q; rewrite Qmult_sym; apply Qmult_one_left.",
            "VernacExtend",
            "7b9cd4d69754f24eaf33767edabbd236c5ff3450"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qpos_POS_1 : forall (m : Z) (qp : Qpositive), Z_to_Q m = Qpos qp -> (0 < m)%Z.",
            "VernacStartTheoremProof",
            "da30865db855d5d6defa547e140f7929d977701b"
        ],
        [
            "intros m qp Hm; apply pos_Z_to_Q; rewrite Hm; apply Qlt_zero_pos.",
            "VernacExtend",
            "2ffd051e756aa83e1ef9659d0d2c43249ff2ae32"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qneg_NEG_1 : forall (m : Z) (qp : Qpositive), Z_to_Q m = Qneg qp -> (m < 0)%Z.",
            "VernacStartTheoremProof",
            "6de56909d65df0569cbacd71ff8c5512bf69cbe9"
        ],
        [
            "intros m qp Hm; apply neg_Z_to_Q; rewrite Hm; apply Qlt_neg_zero.",
            "VernacExtend",
            "e22a90c532df7fd82883056c04f52649a59c51be"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qopp_Qpos : forall q : Qpositive, Qneg q = Qopp (Qpos q).",
            "VernacStartTheoremProof",
            "bb744822911ab252db535a52f588a96ccf138e04"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qopp_Qneg : forall q : Qpositive, Qpos q = Qopp (Qneg q).",
            "VernacStartTheoremProof",
            "fda4c4ee024a1b96897891949e5be9d1a5406227"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qopp_linear : forall (a b : Z) (q : Qpositive), Qplus (Qmult (Z_to_Q (- a)) (Qpos q)) (Z_to_Q (- b)) = Qopp (Qplus (Qmult (Z_to_Q a) (Qpos q)) (Z_to_Q b)).",
            "VernacStartTheoremProof",
            "9885a6877abd3c342e108d69c2b4a5025b7bada2"
        ],
        [
            "intros a b q; repeat rewrite Zopp_eq_mult_neg_1; repeat rewrite Z_to_Qmult; repeat rewrite <- Qmult_assoc; rewrite (Qmult_sym (-1)%Z); repeat rewrite Qmult_assoc; repeat rewrite <- Q_distr_left; replace (Z_to_Q (-1)) with (Qopp Qone); [ ring | reflexivity ].",
            "VernacExtend",
            "432452ba3c17eb36ef4300a0e58a465ba8e282d2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qopp_resp_nonzero : forall x : Q, x <> Zero -> Qopp x <> Zero.",
            "VernacStartTheoremProof",
            "33cf2e54cdbf92c448ecc3fc3bb96d0c42c6416a"
        ],
        [
            "intros [| qx| qx] H; discriminate || Falsum.",
            "VernacExtend",
            "ec72292e16f567f684cf6b4825b3184d90e46817"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qinv_Qopp : forall q : Q, Qinv (Qopp q) = Qopp (Qinv q).",
            "VernacStartTheoremProof",
            "cd43a12e44895ac3ce11bae1981d76b46071b30a"
        ],
        [
            "intros [| q| q]; reflexivity.",
            "VernacExtend",
            "ff7010f33abeeffec1c6962e9be5084a760ffa4c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qmult_Qopp_left : forall x y : Q, Qmult (Qopp x) y = Qopp (Qmult x y).",
            "VernacStartTheoremProof",
            "d8b3163ab129e4ef15fb960fff7762364ba69bde"
        ],
        [
            "intros [| qx| qx] [| qy| qy]; reflexivity.",
            "VernacExtend",
            "0fde2feda6723820b2b4a1edd094fd5c2ffbd59d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qpositive_dec_One : forall p : Qpositive, {p = One} + {p <> One}.",
            "VernacStartTheoremProof",
            "23b8ffac89aecf073d7eb14dd3ae523556670d8e"
        ],
        [
            "intro p; exact (Qpositive_eq_dec p One).",
            "VernacExtend",
            "cb1616395e53359cd833ddfa83f8c027e6d5724e"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma Q_zerop : forall x : Q, {x = Zero} + {x <> Zero}.",
            "VernacStartTheoremProof",
            "8429f7b8f7d42fbaaff74f21e0181829e1b66139"
        ],
        [
            "intros [| px| px]; solve [ left; trivial | right; discriminate ].",
            "VernacExtend",
            "7f7fcc608a8751052b1e300c56c72aa8c79e2cff"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qinv_resp_nonzero : forall x : Q, x <> Zero -> Qinv x <> Zero.",
            "VernacStartTheoremProof",
            "e9b6f3936c4dba9674ca7fc2668ca6df5dfecbea"
        ],
        [
            "intros [| px| px] Hx; solve [ Falsum | discriminate ].",
            "VernacExtend",
            "4855614d3efa0b62924a3f8ec880fa43c3afc275"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qlt_zero_one : Qlt Zero Qone.",
            "VernacStartTheoremProof",
            "080e10463205508b0b88de3a68e8327eef8bd469"
        ],
        [
            "unfold Qone in |- *; apply Qlt_zero_pos.",
            "VernacExtend",
            "1ef79e6e23106b1907cf25646dc1ecb784473cda"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Qlt_zero_one.",
            "VernacHints",
            "e0f6e1b41c412d65910c4965c0e70b20104ed908"
        ],
        [
            "Lemma Z_to_Qpositive_Q_tail_pos : forall (a : Z) (Ha : (0 < a)%Z), Z_to_Qpositive a Ha = Q_tail a.",
            "VernacStartTheoremProof",
            "8f90001ae1d699bd807fd079f984dab9a4b24602"
        ],
        [
            "intros [| px| px] Hx; discriminate Hx || reflexivity.",
            "VernacExtend",
            "dd5d557af98182d3d85b8ff756e5c048a14d14f6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Q_tail_Qinv : forall x : Q, Q_tail (Qinv x) = Qpositive_inv (Q_tail x).",
            "VernacStartTheoremProof",
            "7fb7afe793cf83948e1c6902df4da75b892afc86"
        ],
        [
            "intros [| px| px]; trivial.",
            "VernacExtend",
            "85a5affd6e3b5496bbce4787b3ef55b0350d1ac9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Q_tail_Qmult : forall x y : Q, x <> Zero -> y <> Zero -> Q_tail (Qmult x y) = Qpositive_mult (Q_tail x) (Q_tail y).",
            "VernacStartTheoremProof",
            "08922e85e489ee6e08b4d68a85790d381ce882e8"
        ],
        [
            "intros [| px| px] [| py| py] Hx Hy; trivial; Falsum.",
            "VernacExtend",
            "0681433491dc353c578b72bd24b3c8d98b9b02cb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Q_tail_Qplus_pos : forall x y : Q, Qlt Zero x -> Qlt Zero y -> Q_tail (Qplus x y) = Qpositive_plus (Q_tail x) (Q_tail y).",
            "VernacStartTheoremProof",
            "94c8e6baec93941d86edf6f48c026d67be3c1b70"
        ],
        [
            "intros [| px| px] [| py| py] Hx Hy; trivial; solve [ inversion Hx | inversion Hy ].",
            "VernacExtend",
            "071a749d8e8368dc9cc5920535f274a8f029203f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Q_tail_Qplus_neg : forall x y : Q, Qlt x Zero -> Qlt y Zero -> Q_tail (Qplus x y) = Qpositive_plus (Q_tail x) (Q_tail y).",
            "VernacStartTheoremProof",
            "3dcc9671e0ba70d4ac11baa4406345e29b9f53d3"
        ],
        [
            "intros [| px| px] [| py| py] Hx Hy; trivial; solve [ inversion Hx | inversion Hy ].",
            "VernacExtend",
            "071a749d8e8368dc9cc5920535f274a8f029203f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qplus_zero_right : forall n : Q, Qplus n Zero = n.",
            "VernacStartTheoremProof",
            "94373ee674630c9dcf788e51cb06f3bc9da81dfa"
        ],
        [
            "intros; field.",
            "VernacExtend",
            "2644a19081871cb7f54c98c90313bcc0013687fc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qmult_zero_right : forall x : Q, Qmult x Zero = Zero.",
            "VernacStartTheoremProof",
            "9c5da81f0f0f2b46ada8f48dd5012f42c153b434"
        ],
        [
            "intros; field.",
            "VernacExtend",
            "2644a19081871cb7f54c98c90313bcc0013687fc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qle_Qpositive_le_pos : forall x y : Qpositive, Qle (Qpos x) (Qpos y) -> Qpositive_le x y.",
            "VernacStartTheoremProof",
            "3487fe6da21ea96794dade2076c61d6aa1be9160"
        ],
        [
            "intros x y H.",
            "VernacExtend",
            "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
        ],
        [
            "case (Qpositive_le_dec x y); intros H1; trivial; apply False_ind; apply H; constructor; assumption.",
            "VernacExtend",
            "7e142f4a467acc6883cad67c3773ee2c16da41e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qle_Qpositive_le_neg : forall x y : Qpositive, Qle (Qneg x) (Qneg y) -> Qpositive_le y x.",
            "VernacStartTheoremProof",
            "9afaebdf7f484964743420def623298fb7b56cca"
        ],
        [
            "intros x y H.",
            "VernacExtend",
            "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
        ],
        [
            "case (Qpositive_le_dec y x); intros H1; trivial; apply False_ind; apply H; constructor; assumption.",
            "VernacExtend",
            "9f4771daaad238344e0e738798c3fda2ae133a20"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qle_lt_eq_dec : forall x y : Q, Qle x y -> {Qlt x y} + {x = y}.",
            "VernacStartTheoremProof",
            "9d26ed4914fc78f70287a8d2372d6512b46c085b"
        ],
        [
            "intros [| x| x] [| y| y] Hxy; try solve [ right; reflexivity | left; auto with * | right; auto with * | apply False_rec; apply Hxy; auto with * ]; [ generalize (Qle_Qpositive_le_pos _ _ Hxy) | generalize (Qle_Qpositive_le_neg _ _ Hxy) ]; clear Hxy; intro Hxy; match goal with | id1:(Qpositive_le ?X1 ?X2) |- _ => case (Qpositive_le_dec X2 X1); intro H; [ right; apply f_equal with Qpositive; apply Qpositive_le_antisym; assumption | left; constructor; assumption ] end.",
            "VernacExtend",
            "2573f185884bedb076a495e3352a00d5fbc635ce"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qle_lt_trans : forall x y z : Q, Qle x y -> Qlt y z -> Qlt x z.",
            "VernacStartTheoremProof",
            "646c1e6e52fe02116c2eb915d7326b21585e9f67"
        ],
        [
            "intros [| x| x] [| y| y] [| z| z] Hxy Hyz; trivial; try QltCleanAbsurdCases; case (Qle_lt_eq_dec _ _ Hxy); intro Hxy'; [ apply Qlt_transitive with (Qpos y) | rewrite Hxy' | apply Qlt_transitive with (Qneg y) | rewrite Hxy' ]; assumption.",
            "VernacExtend",
            "cd65f6b377aa704a67da7c10ebec176b2018f8dd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qlt_le_trans : forall x y z : Q, Qlt x y -> Qle y z -> Qlt x z.",
            "VernacStartTheoremProof",
            "276d3dc65e6034f89969a7b25ce1c75298b2b57d"
        ],
        [
            "intros [| x| x] [| y| y] [| z| z] Hxy Hyz; trivial; try QltCleanAbsurdCases; case (Qle_lt_eq_dec _ _ Hyz); intro Hyz'; [ apply Qlt_transitive with (Qpos y) | rewrite <- Hyz' | apply Qlt_transitive with (Qneg y) | rewrite <- Hyz' ]; assumption.",
            "VernacExtend",
            "8d713552d487bfbb0ca395f008fe06288a13c4d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qle_trans : forall x y z : Q, Qle x y -> Qle y z -> Qle x z.",
            "VernacStartTheoremProof",
            "2b567791377a85271e0568aae616dc0dc8465af0"
        ],
        [
            "intros x y z Hxy Hyz Hxz; apply Hyz; apply Qlt_le_trans with x; assumption.",
            "VernacExtend",
            "5d8b5b5e35d5d89d333bd499a7d4f946671c4717"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qlt_plus_plus : forall a b c d : Q, Qlt a b -> Qlt c d -> Qlt (Qplus a c) (Qplus b d).",
            "VernacStartTheoremProof",
            "0089a5fe6b31ee81f767a1cc3d7b3ee1bf61517f"
        ],
        [
            "intros a b c d Hab Hcd.",
            "VernacExtend",
            "a141b14db8d62adaa67b558077f9f33bdb7b6c35"
        ],
        [
            "apply Qlt_transitive with (Qplus b c); unfold Qlt in |- *; [ rewrite (Qplus_sym a); rewrite (Qplus_sym b) | idtac ]; apply Qgt_plus; assumption.",
            "VernacExtend",
            "666897dadd2537fce2853a162f7d6a4fdd256881"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qle_lt_reg : forall a b c d : Q, Qle a b -> Qlt c d -> Qlt (Qplus a c) (Qplus b d).",
            "VernacStartTheoremProof",
            "5a5c2fe9c6a0b60f30b9c621f3785642200f5e22"
        ],
        [
            "intros a b c d Hab Hcd.",
            "VernacExtend",
            "a141b14db8d62adaa67b558077f9f33bdb7b6c35"
        ],
        [
            "case (Qle_lt_eq_dec _ _ Hab); intro Hab'; [ apply Qlt_plus_plus | rewrite Hab'; unfold Qlt in |- *; apply Qgt_plus ]; assumption.",
            "VernacExtend",
            "b390bd4e90b389a9273151df1f474f63feb1ec6f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qlt_le_reg : forall a b c d : Q, Qlt a b -> Qle c d -> Qlt (Qplus a c) (Qplus b d).",
            "VernacStartTheoremProof",
            "794f2adbf14d8969c3d50ad76ca95b53231a077b"
        ],
        [
            "intros a b c d Hab Hcd; rewrite (Qplus_sym a); rewrite (Qplus_sym b); apply Qle_lt_reg; assumption.",
            "VernacExtend",
            "73f0311231c125c84fb9b8b71ab6cdd3da646b58"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qlt_le_reg_pos : forall b d : Q, Qlt Zero b -> Qle Zero d -> Qlt Zero (Qplus b d).",
            "VernacStartTheoremProof",
            "8736de82cec34ec564560c2fc2de3bf8406a51e2"
        ],
        [
            "intros b d Hb Hd; replace Zero with (Qplus Zero Zero); trivial; apply Qlt_le_reg; assumption.",
            "VernacExtend",
            "7997c9a87c7c4e6c2a020a0da9f4c6aa88cbe81e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qle_lt_reg_pos : forall b d : Q, Qle Zero b -> Qlt Zero d -> Qlt Zero (Qplus b d).",
            "VernacStartTheoremProof",
            "7073160cda0d0dd98e673bf6ff805955bda374be"
        ],
        [
            "intros b d Hb Hd; replace Zero with (Qplus Zero Zero); trivial; apply Qle_lt_reg; assumption.",
            "VernacExtend",
            "b8bf1035b3d9e7bbb7ef8b897d4abc65626d7703"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qlt_le_reg_neg : forall b d : Q, Qlt b Zero -> Qle d Zero -> Qlt (Qplus b d) Zero.",
            "VernacStartTheoremProof",
            "41a805dd02ff20a5020e6c0982fbbdc1b19acbf6"
        ],
        [
            "intros b d Hb Hd; replace Zero with (Qplus Zero Zero); trivial; apply Qlt_le_reg; assumption.",
            "VernacExtend",
            "7997c9a87c7c4e6c2a020a0da9f4c6aa88cbe81e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qle_lt_reg_neg : forall b d : Q, Qle b Zero -> Qlt d Zero -> Qlt (Qplus b d) Zero.",
            "VernacStartTheoremProof",
            "5d5542cfb36827fc79f8e95cb9c02001d2a6fd38"
        ],
        [
            "intros b d Hb Hd; replace Zero with (Qplus Zero Zero); trivial; apply Qle_lt_reg; assumption.",
            "VernacExtend",
            "b8bf1035b3d9e7bbb7ef8b897d4abc65626d7703"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qle_plus_plus : forall a b c d : Q, Qle a b -> Qle c d -> Qle (Qplus a c) (Qplus b d).",
            "VernacStartTheoremProof",
            "89d64f3c037753390dc78f8f3add2e0bd3b33e2e"
        ],
        [
            "intros a b c d Hab Hcd.",
            "VernacExtend",
            "a141b14db8d62adaa67b558077f9f33bdb7b6c35"
        ],
        [
            "apply Qle_trans with (Qplus b c); unfold Qlt in |- *; [ rewrite (Qplus_sym a); rewrite (Qplus_sym b) | idtac ]; [ case (Qle_lt_eq_dec _ _ Hab) | case (Qle_lt_eq_dec _ _ Hcd) ]; intro H_; [ apply Qlt_le_weak; apply Qle_lt_reg; [ unfold Qle in |- *; apply Qlt_irreflexive | assumption ] | rewrite H_; unfold Qle in |- *; apply Qlt_irreflexive | apply Qlt_le_weak; apply Qle_lt_reg; [ unfold Qle in |- *; apply Qlt_irreflexive | assumption ] | rewrite H_; unfold Qle in |- *; apply Qlt_irreflexive ].",
            "VernacExtend",
            "37d04d845cbd80152d9393b11a4e5f5a74a67b22"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qle_plus_pos_pos : forall x y : Q, Qle Zero x -> Qle Zero y -> Qle Zero (Qplus x y).",
            "VernacStartTheoremProof",
            "89c9c8c21ac92d76219856e945528234f52f4529"
        ],
        [
            "intros b d Hb Hd; replace Zero with (Qplus Zero Zero); trivial; apply Qle_plus_plus; assumption.",
            "VernacExtend",
            "a209704cf679adf29a51dd2c75fea8577f4983fd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qle_plus_neg_neg : forall x y : Q, Qle x Zero -> Qle y Zero -> Qle (Qplus x y) Zero.",
            "VernacStartTheoremProof",
            "b8982d3c1e717b8043f0093e7a8c5974c3302b46"
        ],
        [
            "intros b d Hb Hd; replace Zero with (Qplus Zero Zero); trivial; apply Qle_plus_plus; assumption.",
            "VernacExtend",
            "a209704cf679adf29a51dd2c75fea8577f4983fd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qle_mult_nonneg_nonneg : forall x y : Q, Qle Zero x -> Qle Zero y -> Qle Zero (Qmult x y).",
            "VernacStartTheoremProof",
            "be8e60b983032c795bf4bbfd8f33b8d6c3613c2f"
        ],
        [
            "intros [| x| x] [| y| y] Hx Hy; trivial; try QltCleanAbsurdCases; simpl in |- *; intro H_; inversion H_.",
            "VernacExtend",
            "68f94658406767b9d612462ff1b6c7c81a3a34d4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qle_mult_nonpos_nonneg : forall x y : Q, Qle x Zero -> Qle Zero y -> Qle (Qmult x y) Zero.",
            "VernacStartTheoremProof",
            "1bfd46d1a626cf71a5ca8aaeeee18a59bd14a07a"
        ],
        [
            "intros [| x| x] [| y| y] Hx Hy; trivial; try QltCleanAbsurdCases; simpl in |- *; intro H_; inversion H_.",
            "VernacExtend",
            "68f94658406767b9d612462ff1b6c7c81a3a34d4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qle_mult_nonneg_nonpos : forall x y : Q, Qle Zero x -> Qle y Zero -> Qle (Qmult x y) Zero.",
            "VernacStartTheoremProof",
            "48bcffa2930bc9ff6800fc096fd4e10e50ae040d"
        ],
        [
            "intros [| x| x] [| y| y] Hx Hy; trivial; try QltCleanAbsurdCases; simpl in |- *; intro H_; inversion H_.",
            "VernacExtend",
            "68f94658406767b9d612462ff1b6c7c81a3a34d4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qle_mult_nonpos_pos: forall x y : Q, Qle x Zero -> Qlt Zero y -> Qle (Qmult x y) Zero.",
            "VernacStartTheoremProof",
            "89af9dd6ff11eb9370351dbbadb726635a7eeeb6"
        ],
        [
            "intros [| x| x] [| y| y] Hx Hy; trivial; try QltCleanAbsurdCases; simpl in |- *; intro H_; inversion H_.",
            "VernacExtend",
            "68f94658406767b9d612462ff1b6c7c81a3a34d4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qle_mult_neg_nonneg : forall x y : Q, Qlt x Zero -> Qle Zero y -> Qle (Qmult x y) Zero.",
            "VernacStartTheoremProof",
            "3956c44b0cc88b3fd35af6afab0d80cd39e382f1"
        ],
        [
            "intros [| x| x] [| y| y] Hx Hy; trivial; try QltCleanAbsurdCases; simpl in |- *; intro H_; inversion H_.",
            "VernacExtend",
            "68f94658406767b9d612462ff1b6c7c81a3a34d4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qle_reflexive:forall x, Qle x x.",
            "VernacStartTheoremProof",
            "6906f2ad8efb2ed773dd23587777eefb583af14d"
        ],
        [
            "intro x; unfold Qle; apply Qlt_irreflexive.",
            "VernacExtend",
            "d2398a8a7db650dec5f93be7efcbcbd72d4da142"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Qplus_zero_right Qlt_le_reg_pos Qle_lt_reg_pos Qlt_le_reg Qle_lt_reg Qlt_le_weak Qlt_le_reg_neg Qle_lt_reg_neg Qle_plus_pos_pos Qle_plus_neg_neg Qle_mult_nonneg_nonneg Qle_mult_nonneg_nonpos Qle_mult_nonpos_nonneg Qle_mult_nonpos_pos Qle_mult_neg_nonneg Qle_reflexive.",
            "VernacHints",
            "2a34f9b90afffde18d277aa9a5f971c13a55459c"
        ],
        [
            "Lemma Qpos_not_lt_Zero : forall x, ~ Qlt (Qpos x) Zero.",
            "VernacStartTheoremProof",
            "f12b2ee49d386949be0768beacc764e863b77070"
        ],
        [
            "intros x Hc; apply (Qlt_irreflexive Zero); apply Qlt_transitive with (Qpos x);trivial.",
            "VernacExtend",
            "7403d62db9c642f8d94dc56211b4235fb42c1d73"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qlt_dec_Qpos : forall x y, {~ Qlt (Qpos y) (Qpos x)} + {Qlt (Qpos y) (Qpos x)}.",
            "VernacStartTheoremProof",
            "52641dfa7402d0fcc42a656b01f66cfe1eb88587"
        ],
        [
            "intros x y; case Qpositive_le_dec with x y; intro H'; [left;intro H; inversion H; contradiction | right;unfold Qlt; constructor; trivial].",
            "VernacExtend",
            "8e3af2aa8794cc9af4e7399877c05cf2b2019df7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zero_not_lt_Qneg : forall x, ~ Qlt Zero (Qneg x).",
            "VernacStartTheoremProof",
            "313f6924963f5ab2ea38740943e22dd60da41b31"
        ],
        [
            "intros x Hc; apply (Qlt_irreflexive Zero); apply Qlt_transitive with (Qneg x);trivial.",
            "VernacExtend",
            "63af1dbec81c63fe0236d2b2bf88983b65fa8922"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qpos_not_lt_Qneg : forall x y, ~ Qlt (Qpos y) (Qneg x).",
            "VernacStartTheoremProof",
            "1e69bdb52673733e12aadea310e0328e9adfeed4"
        ],
        [
            "intros x y Hc; apply (Qlt_irreflexive (Qneg x)); apply Qlt_transitive with (Qpos y); trivial.",
            "VernacExtend",
            "76af27ca299489c875ac0ab89a32a62bb0cf20e0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qlt_dec_Qneg : forall x y, {~ Qlt (Qneg y) (Qneg x)} + {Qlt (Qneg y) (Qneg x)}.",
            "VernacStartTheoremProof",
            "49580046707ca65730e7a8d17986ba55a37d903d"
        ],
        [
            "intros x y; case Qpositive_le_dec with y x; intro H'; [left;intro H; inversion H; contradiction | right;unfold Qlt; constructor; trivial].",
            "VernacExtend",
            "5c8f67774f845c48bde3e152d6c9bc0056c5c079"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Q_le_lt_dec:forall (x y:Q), {Qle x y}+{Qlt y x}.",
            "VernacStartTheoremProof",
            "853bc3860673c29ff133e066a3f78819d48647bc"
        ],
        [
            "intros [|x|x] [|y|y]; unfold Qle; try (right; trivial || fail).",
            "VernacExtend",
            "73698a710bd367d9c43ef948037a0e3c5ecfe82d"
        ],
        [
            "left; apply Qlt_irreflexive.",
            "VernacExtend",
            "c116d32fb13c6960047a6fff924ba2ca8127def1"
        ],
        [
            "left; apply Qpos_not_lt_Zero.",
            "VernacExtend",
            "7228f62122aaaaf98daffab4e85660761aafa2b3"
        ],
        [
            "apply Qlt_dec_Qpos.",
            "VernacExtend",
            "9148213e6dcc9ad9c3f35f750445ac36d2b91d4a"
        ],
        [
            "left; apply Zero_not_lt_Qneg.",
            "VernacExtend",
            "b21e583c10a7032c516ef7c53df9400d8cd1dfad"
        ],
        [
            "left; apply Qpos_not_lt_Qneg.",
            "VernacExtend",
            "d2a689f24e270922780a7098c3cef989115d7939"
        ],
        [
            "apply Qlt_dec_Qneg.",
            "VernacExtend",
            "7ac1e64aad041d3ae2b63fa335c6c91ac2ff2129"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qle_dec:forall (x y:Q), {Qle x y}+{~(Qle x y)}.",
            "VernacStartTheoremProof",
            "8d22a77bde2702dad95184ca2babc0bb37dac99a"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "case (Q_le_lt_dec x y); intros; [ left | right ] ; trivial.",
            "VernacExtend",
            "d28a96858c010040e6245929f0f5c562a018a500"
        ],
        [
            "intros H'; apply H'; trivial.",
            "VernacExtend",
            "f2bf711a38fc17f11bf5b9ff7497ed10785c3d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qlt_dec:forall (x y:Q), {Qlt x y}+{~(Qlt x y)}.",
            "VernacStartTheoremProof",
            "f7dad3918a96ceb04a7c1a3ebb33965a30d570b5"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "case (Q_le_lt_dec y x); intros; [ right | left ] ; trivial.",
            "VernacExtend",
            "82daafb3afc59003d29ba4bff9a6b0e2c1c0c29a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qtrichotomy_inf:forall x y,{Qlt x y}+{x=y}+{Qlt y x}.",
            "VernacStartTheoremProof",
            "ab4d32176f9bf736d1e34594a75efca1f844b85a"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "case (Q_le_lt_dec x y); intros H; [ case (Qle_lt_eq_dec x y H); intros H0; left;[left|right] | right ]; trivial.",
            "VernacExtend",
            "7aaa7636836a2f40629da8ac2920414c7e46f813"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qle_dec_weak:forall (x y:Q), {Qle x y}+{(Qle y x)}.",
            "VernacStartTheoremProof",
            "4ff74f5c151ca76ddf6a9bf75590fcbfed994bc1"
        ],
        [
            "intros x y; case (Q_le_lt_dec x y); intros; [ left | right ] ; trivial; apply Qlt_le_weak; trivial.",
            "VernacExtend",
            "7ca0c334ab4958514ef2809f5459dd25f1320f09"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_Qeq_inf : forall x y : Q, x <> y -> {Qlt x y} + {Qlt y x}.",
            "VernacStartTheoremProof",
            "550e3a606d8114cde88fb6a8d25ffb287f4a3914"
        ],
        [
            "intros x y Hxy; destruct (Q_le_lt_dec x y) as [H|H]; try tauto; left; destruct (Qle_lt_eq_dec _ _ H) as [H'|H']; trivial; contradiction.",
            "VernacExtend",
            "f8bce58e84a685fbe58a6732ea0cde355a853d17"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qlt_stepl:forall x y z, Qlt x y -> x=z -> Qlt z y.",
            "VernacStartTheoremProof",
            "e9422cdd92ce52faf9e30c8739d3b19a99a13e1b"
        ],
        [
            "intros x y z H_lt H_eq; subst; assumption.",
            "VernacExtend",
            "1dee0b4287ea9b61bc247480cf56e20188a9825c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qlt_stepr:forall x y z, Qlt x y -> y=z -> Qlt x z.",
            "VernacStartTheoremProof",
            "bcea141563f06ff3d8e15f20cd5fa96c0512bbb3"
        ],
        [
            "intros x y z H_lt H_eq; subst; assumption.",
            "VernacExtend",
            "1dee0b4287ea9b61bc247480cf56e20188a9825c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qle_stepl:forall x y z, Qle x y -> x=z -> Qle z y.",
            "VernacStartTheoremProof",
            "39dc239db38c5174bbea26f3c2040839dd765489"
        ],
        [
            "intros x y z H_lt H_eq; subst; assumption.",
            "VernacExtend",
            "1dee0b4287ea9b61bc247480cf56e20188a9825c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qle_stepr:forall x y z, Qle x y -> y=z -> Qle x z.",
            "VernacStartTheoremProof",
            "4a036b1d635aea236676fb161fc6dca78e88950b"
        ],
        [
            "intros x y z H_lt H_eq; subst; assumption.",
            "VernacExtend",
            "1dee0b4287ea9b61bc247480cf56e20188a9825c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qneq_stepl:forall (x y z:Q), x<>y -> x=z -> z<>y.",
            "VernacStartTheoremProof",
            "26473a0943ea1f67214723fd8e9e393196c94394"
        ],
        [
            "intros x y z H_lt H_eq; subst; assumption.",
            "VernacExtend",
            "1dee0b4287ea9b61bc247480cf56e20188a9825c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qneq_stepr:forall (x y z:Q), x<>y -> y=z -> x<>z.",
            "VernacStartTheoremProof",
            "d0549cd5dca7663cfb97c24f08acc37e5c52d718"
        ],
        [
            "intros x y z H_lt H_eq; subst; assumption.",
            "VernacExtend",
            "1dee0b4287ea9b61bc247480cf56e20188a9825c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Declare Left Step Qlt_stepl.",
            "VernacExtend",
            "fd279a252574e5ed5385ddcbe0bfe8d721b33b64"
        ],
        [
            "Declare Right Step Qlt_stepr.",
            "VernacExtend",
            "6ca4475491b31b673d4dbb748419022d9287d2d8"
        ],
        [
            "Declare Left Step Qle_stepl.",
            "VernacExtend",
            "3cedda0c75f1d53c96e88183774ac3ff10039633"
        ],
        [
            "Declare Right Step Qle_stepr.",
            "VernacExtend",
            "11e78120ff5356cc1708efc61b0e021904866a22"
        ],
        [
            "Declare Left Step Qneq_stepl.",
            "VernacExtend",
            "c0d6a6ba1263375792839cfd8fc588ce7a1ea83d"
        ],
        [
            "Declare Right Step Qneq_stepr.",
            "VernacExtend",
            "8848cd4686d0b3da8040c5dc43dc7a603c9626b3"
        ],
        [
            "Lemma Qsgn_1: forall x:Q,{(Qsgn x) = 0}+{(Qsgn x) = 1}+{(Qsgn x) = (-1)%Z}.",
            "VernacStartTheoremProof",
            "43b6e2d94ec65467ed54ba99d6266c4bb82a3695"
        ],
        [
            "intros [|x|x]; simpl; auto.",
            "VernacExtend",
            "236101a2345f357bff908cb7c36803ac5beee504"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qsgn_2 : forall x : Q, Qsgn x = 0%Z -> x = Zero.",
            "VernacStartTheoremProof",
            "4867a782d90c6dc995ed993280b8a883958568a8"
        ],
        [
            "intros [| x| x] Hx; trivial; inversion Hx.",
            "VernacExtend",
            "ff2979c750aade917b8553a3038a51623b599d1e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qsgn_7 : forall x : Q, Qlt Zero x -> Qsgn x = 1%Z.",
            "VernacStartTheoremProof",
            "0d1bf90ff96739ed5658300925ce14e7479d7c61"
        ],
        [
            "intros [| x| x] Hx; trivial; inversion Hx.",
            "VernacExtend",
            "ff2979c750aade917b8553a3038a51623b599d1e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qsgn_8 : forall x : Q, Qlt x Zero -> Qsgn x = (-1)%Z.",
            "VernacStartTheoremProof",
            "7e04165f7e08cb2cb4faacb989962ea3f52f2a09"
        ],
        [
            "intros [| x| x] Hx; trivial; inversion Hx.",
            "VernacExtend",
            "ff2979c750aade917b8553a3038a51623b599d1e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qsgn_9 : forall x : Q, Qsgn x = 1%Z -> Qlt Zero x.",
            "VernacStartTheoremProof",
            "fae3963537a8f206bbb3be9b31bd84b292cbf2f4"
        ],
        [
            "intros [| x| x] Hx; trivial; inversion Hx.",
            "VernacExtend",
            "ff2979c750aade917b8553a3038a51623b599d1e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qsgn_10 : forall x : Q, Qsgn x = (-1)%Z -> Qlt x Zero.",
            "VernacStartTheoremProof",
            "e2350d5f599b61f2d470e3f9eaf2cba029b25059"
        ],
        [
            "intros [| x| x] Hx; trivial; inversion Hx.",
            "VernacExtend",
            "ff2979c750aade917b8553a3038a51623b599d1e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qsgn_15 : forall x y : Q, Qsgn (Qmult x y) = (Qsgn x * Qsgn y)%Z.",
            "VernacStartTheoremProof",
            "b62380a07b5545a9e75b4a026a6f2c3326c9240b"
        ],
        [
            "intros [| x| x] [| y| y]; trivial.",
            "VernacExtend",
            "2728ce4825d9f31da431ef9db17ff970abee0bf4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qsgn_25 : forall x : Q, Qsgn (Qopp x) = (- Qsgn x)%Z.",
            "VernacStartTheoremProof",
            "15ab6bd1935814bfad61ea3b53fa52164b4fa773"
        ],
        [
            "intros [| x| x]; trivial.",
            "VernacExtend",
            "38c79fde36c60a92978ddbadaed7d3fc0b83e862"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qsgn_28 : forall x : Q, Qsgn (Qinv x) = Qsgn x.",
            "VernacStartTheoremProof",
            "35ea95261740e4287f5e5a8264f397c1e015f04d"
        ],
        [
            "intros [| x| x]; trivial.",
            "VernacExtend",
            "38c79fde36c60a92978ddbadaed7d3fc0b83e862"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qsgn_29 : forall x : Z, Qsgn (Z_to_Q x) = Z.sgn x.",
            "VernacStartTheoremProof",
            "c366e3c7929c8d28656c5d34ff26e2deb552a1f6"
        ],
        [
            "intros [| x| x]; trivial.",
            "VernacExtend",
            "38c79fde36c60a92978ddbadaed7d3fc0b83e862"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qsgn_30 : forall x y : Q, Qsgn (Qdiv x y) = (Qsgn x * Qsgn y)%Z.",
            "VernacStartTheoremProof",
            "77be660610a5a35eb56659acdb89703529e0efa6"
        ],
        [
            "intros [| x| x] [| y| y]; trivial.",
            "VernacExtend",
            "2728ce4825d9f31da431ef9db17ff970abee0bf4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qsgn_31:forall x:Q, Qle x Zero-> Qsgn x <> 1.",
            "VernacStartTheoremProof",
            "73699e2b647a47a21e81c14e8ab9e1e9fa2dae84"
        ],
        [
            "intros [|x|x] Hx; try discriminate; apply False_ind; apply Hx; apply Qlt_zero_pos.",
            "VernacExtend",
            "b164cf334ffb02b7e8a61ab81ca8838caa9a4e98"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qsgn_32:forall x:Q, Qsgn x <> 1 -> Qle x Zero.",
            "VernacStartTheoremProof",
            "ed12363fa8d7ecd85f19821ee4ef33acad268a38"
        ],
        [
            "intros [|x|x] Hx; auto; try apply Qle_reflexive; apply False_ind; apply Hx; reflexivity.",
            "VernacExtend",
            "fb074b4fa713044c2e1cefd7d0a6e787b9e79091"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qsgn_33:forall x:Q, Qle Zero x -> Qsgn x <> (-1)%Z.",
            "VernacStartTheoremProof",
            "c140336227e019334f9d5ac75e009b5815e6dd18"
        ],
        [
            "intros [|x|x] Hx; try discriminate; apply False_ind; apply Hx; auto.",
            "VernacExtend",
            "44e14103ecd7723b62209a44804039efd87fd31b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qsgn_34:forall x:Q, Qsgn x <> (-1)%Z -> Qle Zero x.",
            "VernacStartTheoremProof",
            "1a9abd931f29e83e0ff35b11ca0e1a2d6572e4da"
        ],
        [
            "intros [|x|x] Hx; auto; try apply Qle_reflexive; apply False_ind; apply Hx; reflexivity.",
            "VernacExtend",
            "fb074b4fa713044c2e1cefd7d0a6e787b9e79091"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Qsgn_2 Qsgn_7 Qsgn_8 Qsgn_9 Qsgn_10 Qsgn_15 Qsgn_25 Qsgn_28 Qsgn_29 Qsgn_30.",
            "VernacHints",
            "13656f4d300bae8fa3602e498f6059012c7d46ac"
        ],
        [
            "Ltac qnat_zero := replace (Z_to_Q (Z_of_nat 0)) with Zero; trivial.",
            "VernacExtend",
            "8a78a77c7927d214bc34cd9a4f143defa3d9af59"
        ],
        [
            "Ltac natq_zero := replace Zero with (Z_to_Q (Z_of_nat 0)); trivial.",
            "VernacExtend",
            "2b41d5203fbc4177cdf6a639b96e76b19028f946"
        ],
        [
            "Ltac qnat_one := replace (Z_to_Q (Z_of_nat (S 0))) with Qone; trivial.",
            "VernacExtend",
            "e20706c5c09d1050c6ea8806a6e6fa7a4f0d4f04"
        ],
        [
            "Ltac natq_one := replace Qone with (Z_to_Q (Z_of_nat (S 0))); trivial.",
            "VernacExtend",
            "0004ed443a2d0c25aebdb299841c599660d8d908"
        ],
        [
            "Ltac qnat_S k := replace (Z_to_Q (Z_of_nat (S k))) with (Qplus k Qone); [idtac | rewrite Z_to_Q_S; trivial].",
            "VernacExtend",
            "dd9123d012b313e75cd5732d84eba919512446a1"
        ],
        [
            "Ltac natq_S k := try qnat_one; replace (Qplus k Qone) with (Z_to_Q (Z_of_nat (S k))); [idtac | rewrite <- Z_to_Q_S; trivial].",
            "VernacExtend",
            "b7737f6a32fb575e71bd54daca821fab3cf4d94d"
        ],
        [
            "Ltac qnat_S_rec k := try qnat_one; replace (Qplus k Qone) with (Z_to_Q (Z_of_nat (S k))); [idtac | rewrite <- Z_to_Q_S; trivial]; try qnat_S_rec (k-1).",
            "VernacExtend",
            "70770b805b078c81747b15ebbb174017c60322b6"
        ],
        [
            "Ltac natZ_numerals := match goal with | [ |- context [Z0] ] => replace Z0 with (Z_of_nat O); trivial; natZ_numerals | [ |- context [(Zpos ?X1)] ] => let v:= eval compute in (Z.abs_nat (Z.pred (Zpos X1))) in replace (Zpos X1) with (Z_of_nat (S v)); trivial; natZ_numerals | [ |- context [(Zneg ?X1)] ] => let v:= eval compute in (Z.abs_nat (Z.succ (Zpos X1))) in replace (Zneg X1) with (Z.opp (Z_of_nat (S v))); trivial; natZ_numerals | [ |- _ ] => idtac end.",
            "VernacExtend",
            "2f9d763c3a4767f323ac38540e894cd2f9e2fe9d"
        ]
    ],
    "proofs": [
        {
            "name": "Z_of_nat_Zabs_nat_pos",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros z Hz; destruct (Z_of_nat_complete_inf z Hz) as [n Hn]; transitivity (Z_of_nat n); auto; apply (f_equal Z_of_nat); rewrite <- absolu_inj_nat; apply (f_equal Z.abs_nat); trivial.",
                        "VernacExtend",
                        "f3e8923a93333a99a901776846023d2f2ff0e501"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_to_Qpositive",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "intros [| p| p].",
                        "VernacExtend",
                        "db48a191c2a3a54b8f7e7621c3e396af35857b61"
                    ]
                },
                {
                    "command": [
                        "intros H; abstract discriminate H.",
                        "VernacExtend",
                        "b316c6d273dad387343b0f70a6f28482d5345088"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "exact (Qpositive_c (nat_of_P p) 1 (S (nat_of_P p))).",
                        "VernacExtend",
                        "c1e8100babd5d2fc61bd879fb5892cea8b2ff6a3"
                    ]
                },
                {
                    "command": [
                        "intro; abstract discriminate H.",
                        "VernacExtend",
                        "42628561ac96d97f1628709bf21647137e528419"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Qlt_zero_pos",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "unfold Qlt in |- *; auto with *.",
                        "VernacExtend",
                        "d414f96c2ddc9a2c0ebf275993e60f6eaa334310"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qlt_neg_pos",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "unfold Qlt in |- *; auto with *.",
                        "VernacExtend",
                        "d414f96c2ddc9a2c0ebf275993e60f6eaa334310"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qlt_neg_zero",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "unfold Qlt in |- *; auto with *.",
                        "VernacExtend",
                        "d414f96c2ddc9a2c0ebf275993e60f6eaa334310"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qpositive_c_0",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "intros p q n.",
                        "VernacExtend",
                        "e9ee5ceebfc6bdd9834418d64830acc0e34a8026"
                    ]
                },
                {
                    "command": [
                        "functional induction (Qpositive_c p q n); trivial || (intros; discriminate).",
                        "VernacExtend",
                        "9e6f9aae49f109793a380368fb9ec18cf1241715"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qpositive_c_1_0_0",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "intros p q n.",
                        "VernacExtend",
                        "e9ee5ceebfc6bdd9834418d64830acc0e34a8026"
                    ]
                },
                {
                    "command": [
                        "functional induction (Qpositive_c p q (S n));trivial.",
                        "VernacExtend",
                        "888a22df7f6ec12101b12e492feb9eff7e0ea954"
                    ]
                },
                {
                    "command": [
                        "rewrite e1;intros;discriminate.",
                        "VernacExtend",
                        "8e7bdf4a7ff87bc0f74a03211abdd7f49459d6d7"
                    ]
                },
                {
                    "command": [
                        "rewrite e0;intros;discriminate.",
                        "VernacExtend",
                        "4b9f32893ccc3592b28004caa690aa3d6f081bf3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qpositive_c_equal_One",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "intros p q [| n'] Hpq; [ apply Qpositive_c_0 | apply Qpositive_c_1_0_0; rewrite Hpq; rewrite <- minus_n_n ]; reflexivity.",
                        "VernacExtend",
                        "01de8610b1c7d78be8bc849125053e108e721a03"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qpositive_c_1_0_1",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "intros p q n' Hpq Hqp; simpl in |- *; rewrite Hpq; elim (not_O_S _ Hqp); intros p' Hqp'; rewrite Hqp'; simpl in |- *; reflexivity.",
                        "VernacExtend",
                        "4efd65c195612fd96ab21379eff5fefe48f35776"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qpositive_c_dL",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "intros p q n Hpq.",
                        "VernacExtend",
                        "0b647155fd71c2f6aa9fd558f13ec17cb5310a45"
                    ]
                },
                {
                    "command": [
                        "generalize (lt_minus_eq_0 p q Hpq) (lt_minus_neq p q Hpq).",
                        "VernacExtend",
                        "4bd7e97edbd49943cf6ff2b858e293e2ff69ff49"
                    ]
                },
                {
                    "command": [
                        "intros Hpq0 Hqp.",
                        "VernacExtend",
                        "1a23b9757b73d1d1d6c3f344416661df44092a38"
                    ]
                },
                {
                    "command": [
                        "apply (Qpositive_c_1_0_1 _ _ n Hpq0 Hqp).",
                        "VernacExtend",
                        "dc8cca03d91a87283078ba7bbd84973e97c30e45"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qpositive_c_1_1",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "intros p q n' Hpq; simpl in |- *; elim (not_O_S _ Hpq); intros p' Hpq'; rewrite Hpq'; simpl in |- *; reflexivity.",
                        "VernacExtend",
                        "0204f86b0691bc1fbd8f0d8c331823676559e646"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qpositive_c_nR",
            "line_nb": 68,
            "steps": [
                {
                    "command": [
                        "intros p q n Hqp.",
                        "VernacExtend",
                        "448aa1a5e8e9c27d6b8634f9058285cbefc2e7aa"
                    ]
                },
                {
                    "command": [
                        "generalize (lt_minus_neq q p Hqp).",
                        "VernacExtend",
                        "9f53f62ec4f9264708990d038d3e7aad6ad06b77"
                    ]
                },
                {
                    "command": [
                        "intros Hpq.",
                        "VernacExtend",
                        "944872fa52578ced476453332b53e86b920d834d"
                    ]
                },
                {
                    "command": [
                        "apply (Qpositive_c_1_1 _ _ n Hpq).",
                        "VernacExtend",
                        "d10ef3092d22c28fc94af6e253d72306c5c7cea0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qpositive_i_nR_with_let",
            "line_nb": 75,
            "steps": [
                {
                    "command": [
                        "intros w;simpl Qpositive_i.",
                        "VernacExtend",
                        "54503d78c375e1f5a046717b47aa531554648511"
                    ]
                },
                {
                    "command": [
                        "functional induction (Qpositive_i w);subst;trivial.",
                        "VernacExtend",
                        "9883de88c479b58b563f6afb83e1f75d3368844c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qpositive_i_nR",
            "line_nb": 79,
            "steps": [
                {
                    "command": [
                        "intros w p q H_w; generalize (Qpositive_i_nR_with_let w); rewrite H_w; trivial.",
                        "VernacExtend",
                        "161305adeda526d87878774bd24b3ecbbd4a9723"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qpositive_i_c",
            "line_nb": 82,
            "steps": [
                {
                    "command": [
                        "intros m p.",
                        "VernacExtend",
                        "df8b8fbb91e426b6d468d9756f62f40b695992ac"
                    ]
                },
                {
                    "command": [
                        "generalize m; clear m.",
                        "VernacExtend",
                        "c69856faa0bcd071a0574edf0780395f33a826ba"
                    ]
                },
                {
                    "command": [
                        "induction p.",
                        "VernacExtend",
                        "57241b1bf2113f288b5c35cf50cb4c85d8323deb"
                    ]
                },
                {
                    "command": [
                        "intros m H1 H2.",
                        "VernacExtend",
                        "3ae929ca3473935a5a92510e375fbb7dbffb6f9c"
                    ]
                },
                {
                    "command": [
                        "inversion H2.",
                        "VernacExtend",
                        "afdc959ca1f20d64005a6cd95d8f83134e6ae5f8"
                    ]
                },
                {
                    "command": [
                        "intros m H1 H2.",
                        "VernacExtend",
                        "3ae929ca3473935a5a92510e375fbb7dbffb6f9c"
                    ]
                },
                {
                    "command": [
                        "case (le_lt_eq_dec 1 m).",
                        "VernacExtend",
                        "9b68b0f1dcf8b0e01d96a1a5ec273016c6a3556d"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "intro H_1_m.",
                        "VernacExtend",
                        "f5e3b34a918066f5db43854173ea16ffdb028dd1"
                    ]
                },
                {
                    "command": [
                        "rewrite (Qpositive_c_nR _ _ p H_1_m).",
                        "VernacExtend",
                        "386159dbcaa8a16941ab68695a04b3739f25b8a6"
                    ]
                },
                {
                    "command": [
                        "rewrite (Qpositive_i_nR (Qpositive_c (m - 1) 1 p) (m - 1) 1).",
                        "VernacExtend",
                        "cb1cc0e95af2b829c786ba1db5ed710391aacd50"
                    ]
                },
                {
                    "command": [
                        "apply pair_2; simpl in |- *; trivial; omega.",
                        "VernacExtend",
                        "07974c5d7f55808755960a03d570f1150fcb79a2"
                    ]
                },
                {
                    "command": [
                        "apply IHp; omega.",
                        "VernacExtend",
                        "06dc48e95074797351aed26d3b8f388f47123920"
                    ]
                },
                {
                    "command": [
                        "intro H_1_1.",
                        "VernacExtend",
                        "9a1de6d6c30dc494034dcf902c86c9d8b0c89e0b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H_1_1.",
                        "VernacExtend",
                        "ea6461afae1fd960027a6e66c5e2cc4e7666a9dc"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qpositive_c_equal",
            "line_nb": 100,
            "steps": [
                {
                    "command": [
                        "intros m n p.",
                        "VernacExtend",
                        "217e940e8ee9612375b2535661e6603f8d08b68f"
                    ]
                },
                {
                    "command": [
                        "functional induction (Qpositive_c m n p) as [| | p q p' H_eq_1 | ].",
                        "VernacExtend",
                        "32026745849b11756998805585f34e2dab7159ef"
                    ]
                },
                {
                    "command": [
                        "intros p' _ _ Hpq.",
                        "VernacExtend",
                        "a30b7941118974e1991c3982bea1d0a37d7bb561"
                    ]
                },
                {
                    "command": [
                        "generalize (le_plus_O_l p q Hpq) (le_plus_O_r p q Hpq).",
                        "VernacExtend",
                        "85551d55f51bd1f48ff95498a37e2b415d825ee3"
                    ]
                },
                {
                    "command": [
                        "intros Hp Hq.",
                        "VernacExtend",
                        "0d5f80ed43d1f4c2159c22547e125807d4932ebd"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp.",
                        "VernacExtend",
                        "b511f9e4ffd06db3fba6cc16f472f9ed92990ffa"
                    ]
                },
                {
                    "command": [
                        "rewrite Hq.",
                        "VernacExtend",
                        "ac1c860c7aa4c4dcd91d635cc3ab558ffc2f8b77"
                    ]
                },
                {
                    "command": [
                        "case p'; simpl in |- *; reflexivity.",
                        "VernacExtend",
                        "c7f2671c7e600fdd99c66d0d2f74bec7e9f81d42"
                    ]
                },
                {
                    "command": [
                        "intros p' _ _ _ _.",
                        "VernacExtend",
                        "953997865a36e948dfa32cd4fe4fed901d312d0a"
                    ]
                },
                {
                    "command": [
                        "symmetry in |- *.",
                        "VernacExtend",
                        "dc33a39a53e296ef5e59fd831d55212be2a42f22"
                    ]
                },
                {
                    "command": [
                        "apply Qpositive_c_equal_One.",
                        "VernacExtend",
                        "be06e8980a4d83e62ff0a5f093e630ae18339c0c"
                    ]
                },
                {
                    "command": [
                        "apply le_antisym; apply minus_O_le; assumption.",
                        "VernacExtend",
                        "298ec05d786b22134ff8455d10d72c399f407bbe"
                    ]
                },
                {
                    "command": [
                        "intros [| p'x] HpO HqO Hpq Hpq'.",
                        "VernacExtend",
                        "a3b804682cd4fa5217e18797bb085b7087064185"
                    ]
                },
                {
                    "command": [
                        "generalize (le_plus_O_r p q Hpq') (le_plus_O_l p q Hpq').",
                        "VernacExtend",
                        "3ad3159ee499b4ec3812ec6ffd44478bccdad58c"
                    ]
                },
                {
                    "command": [
                        "intros Hq Hp.",
                        "VernacExtend",
                        "5969e0c087657c11c765f1d6f1fdb81df2c852b1"
                    ]
                },
                {
                    "command": [
                        "apply False_ind;omega.",
                        "VernacExtend",
                        "94a150be286c877cfb0a09d10a901237775943b9"
                    ]
                },
                {
                    "command": [
                        "rewrite Qpositive_c_1_0_1;auto.",
                        "VernacExtend",
                        "fcb66a8d976148f81c6251f3946bb3282c6907dd"
                    ]
                },
                {
                    "command": [
                        "apply f_equal with Qpositive.",
                        "VernacExtend",
                        "2fdbc0f37d5a7db0445a7fab44c4a5be71ada358"
                    ]
                },
                {
                    "command": [
                        "rewrite (IHq p'x);try omega.",
                        "VernacExtend",
                        "374d58a818a3698be77ea5214ec801bf5cad1603"
                    ]
                },
                {
                    "command": [
                        "unfold Qpositive_c at 2;fold Qpositive_c.",
                        "VernacExtend",
                        "34a8fb15135965dc1b7ac7b569ebcf5feb405b6e"
                    ]
                },
                {
                    "command": [
                        "rewrite e1.",
                        "VernacExtend",
                        "8b2a17b1ef5c5847246cc0dc3bf5a59255f9482b"
                    ]
                },
                {
                    "command": [
                        "destruct (q - p);tauto.",
                        "VernacExtend",
                        "f30e33284ae425fff19baeb9c9e8dfd81e8a3f37"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "intros [| p'x] HpO HqO Hpq Hpq'.",
                        "VernacExtend",
                        "a3b804682cd4fa5217e18797bb085b7087064185"
                    ]
                },
                {
                    "command": [
                        "generalize (le_plus_O_r p q Hpq') (le_plus_O_l p q Hpq').",
                        "VernacExtend",
                        "3ad3159ee499b4ec3812ec6ffd44478bccdad58c"
                    ]
                },
                {
                    "command": [
                        "intros Hq Hp.",
                        "VernacExtend",
                        "5969e0c087657c11c765f1d6f1fdb81df2c852b1"
                    ]
                },
                {
                    "command": [
                        "apply False_ind;omega.",
                        "VernacExtend",
                        "94a150be286c877cfb0a09d10a901237775943b9"
                    ]
                },
                {
                    "command": [
                        "unfold Qpositive_c at 2;fold Qpositive_c.",
                        "VernacExtend",
                        "34a8fb15135965dc1b7ac7b569ebcf5feb405b6e"
                    ]
                },
                {
                    "command": [
                        "rewrite e0.",
                        "VernacExtend",
                        "9b24dbdfbb5c2f52e38c8dc95989d55c0cc61e17"
                    ]
                },
                {
                    "command": [
                        "rewrite (IHq p'x);try omega.",
                        "VernacExtend",
                        "374d58a818a3698be77ea5214ec801bf5cad1603"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qpositive_c_equal_strong",
            "line_nb": 133,
            "steps": [
                {
                    "command": [
                        "intros m1 m2 n1 n2 p1 p2 Hm Hn Hm' Hn' H1 H2; subst; apply Qpositive_c_equal; assumption.",
                        "VernacExtend",
                        "95016a2765b09b7b5507c098a3f2c106e7923b16"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "what_nR_does",
            "line_nb": 137,
            "steps": [
                {
                    "command": [
                        "intros qp.",
                        "VernacExtend",
                        "b47c6b72dc7c1f30dd2fb0bd55e9637621f4f0c1"
                    ]
                },
                {
                    "command": [
                        "unfold Qpositive_plus;fold Qpositive_plus.",
                        "VernacExtend",
                        "8e77022d975281bc8bed3f6747e103d577f45b10"
                    ]
                },
                {
                    "command": [
                        "functional induction (Qpositive_plus qp One).",
                        "VernacExtend",
                        "de1356d1daacff6cc8421cd152453eafb26f1960"
                    ]
                },
                {
                    "command": [
                        "rewrite e;rewrite e0.",
                        "VernacExtend",
                        "2570df24c5906244bd60598340569cd6252e9b96"
                    ]
                },
                {
                    "command": [
                        "rename e into H_pq.",
                        "VernacExtend",
                        "f5ceff56ee45c74d48ed30ea8e2cc2a049863778"
                    ]
                },
                {
                    "command": [
                        "rename e0 into H_p'q'.",
                        "VernacExtend",
                        "c8e58e96261af16accc8c2e5e69282f407fd9301"
                    ]
                },
                {
                    "command": [
                        "generalize (interp_non_zero qp).",
                        "VernacExtend",
                        "f1eacbeb9f40769aa3dd1dda63a97cf1c58d9c21"
                    ]
                },
                {
                    "command": [
                        "rename q0 into q.",
                        "VernacExtend",
                        "7eca2429ff45b5b1161720bd8782de7894779156"
                    ]
                },
                {
                    "command": [
                        "intros (p0', (q0', Hpq')).",
                        "VernacExtend",
                        "1928535c53e6fd4df171946cc783083f7ef45a1b"
                    ]
                },
                {
                    "command": [
                        "rewrite H_pq in Hpq'.",
                        "VernacExtend",
                        "4cf42d3a9ad89af342c644aef3387479f2744d49"
                    ]
                },
                {
                    "command": [
                        "let f_local := eval compute in (f_equal (fst (B:=_)) Hpq') in let g_local := eval compute in (sym_eq (f_equal (fst (B:=_)) H_p'q')) in generalize f_local g_local.",
                        "VernacExtend",
                        "6ab5e78ba004fbca6ffa866b2fffef661f960019"
                    ]
                },
                {
                    "command": [
                        "let f_local := eval compute in (f_equal (snd (B:=_)) Hpq') in let g_local := eval compute in (sym_eq (f_equal (snd (B:=_)) H_p'q')) in generalize f_local g_local.",
                        "VernacExtend",
                        "961dbbda7bc02e1317b319bded89e5a611171e85"
                    ]
                },
                {
                    "command": [
                        "intros Hq Hq' Hp Hp'.",
                        "VernacExtend",
                        "a447e75045663cf0b24a8723f1f757c1570548c9"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (mult_n_Sm (S q0') 0).",
                        "VernacExtend",
                        "01400b0aa86e55aa47258349db8b3c84544cc0f9"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- plus_n_Sm.",
                        "VernacExtend",
                        "ff4a896b05573b8f577c6fe1c2669dd7843e3cec"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mult_n_O.",
                        "VernacExtend",
                        "07161053ebc93c773f589837df2755cd1a52c12f"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_O_n.",
                        "VernacExtend",
                        "a0eeec688d6591d761d2fa5fed2c095cff6ced47"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_1_l.",
                        "VernacExtend",
                        "0e33ed44999445afc31efdcb7fd28c323f8f7890"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_1_r.",
                        "VernacExtend",
                        "80597d89030a8bc45d0b39c6ce60bea43dbe51d1"
                    ]
                },
                {
                    "command": [
                        "rewrite Qpositive_c_nR.",
                        "VernacExtend",
                        "7263025378227f8dd76ebb26967ea6d3700e8ca4"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm.",
                        "VernacExtend",
                        "f2921c049c57ff33e3248947a1d6b2bcd1257393"
                    ]
                },
                {
                    "command": [
                        "rewrite minus_plus.",
                        "VernacExtend",
                        "ccf1bd634b5d1325b2656115ef59f73c6fc1c79f"
                    ]
                },
                {
                    "command": [
                        "apply f_equal with Qpositive.",
                        "VernacExtend",
                        "2fdbc0f37d5a7db0445a7fab44c4a5be71ada358"
                    ]
                },
                {
                    "command": [
                        "symmetry in |- *; apply construct_correct.",
                        "VernacExtend",
                        "87f8fb756a1fe8bc0dc4e989cb52c9235e35f5c4"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm.",
                        "VernacExtend",
                        "f2921c049c57ff33e3248947a1d6b2bcd1257393"
                    ]
                },
                {
                    "command": [
                        "apply le_plus_l.",
                        "VernacExtend",
                        "30f3305f62c97c24af24578d88eaa888a0053ec1"
                    ]
                },
                {
                    "command": [
                        "clear; omega.",
                        "VernacExtend",
                        "eec4b40e7fab9dab9db362824141f438dba9b179"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "what_dL_does",
            "line_nb": 169,
            "steps": [
                {
                    "command": [
                        "intros qp.",
                        "VernacExtend",
                        "b47c6b72dc7c1f30dd2fb0bd55e9637621f4f0c1"
                    ]
                },
                {
                    "command": [
                        "unfold Qpositive_plus.",
                        "VernacExtend",
                        "baca3c0b6cace94221022a23bdea7cafdd06399e"
                    ]
                },
                {
                    "command": [
                        "functional induction (Qpositive_plus qp One).",
                        "VernacExtend",
                        "de1356d1daacff6cc8421cd152453eafb26f1960"
                    ]
                },
                {
                    "command": [
                        "rewrite e;rewrite e0.",
                        "VernacExtend",
                        "2570df24c5906244bd60598340569cd6252e9b96"
                    ]
                },
                {
                    "command": [
                        "rename q0 into q; rename e into H_eq_; rename e0 into H_eq_0.",
                        "VernacExtend",
                        "44f6c6cc30c2a4da4770d7163a9173054992870e"
                    ]
                },
                {
                    "command": [
                        "generalize (interp_non_zero qp).",
                        "VernacExtend",
                        "f1eacbeb9f40769aa3dd1dda63a97cf1c58d9c21"
                    ]
                },
                {
                    "command": [
                        "intros (p0, (q0, Hpq)).",
                        "VernacExtend",
                        "cf439a0322a5053898cb5c7d3d387d318ec81a66"
                    ]
                },
                {
                    "command": [
                        "rewrite H_eq_ in Hpq.",
                        "VernacExtend",
                        "b5b8f4e86dd38a65a4f04fbafb22680c6b1c97b4"
                    ]
                },
                {
                    "command": [
                        "let f_local := eval compute in (f_equal (fst (B:=_)) Hpq) in let g_local := eval compute in (sym_eq (f_equal (fst (B:=_)) H_eq_0)) in generalize f_local g_local.",
                        "VernacExtend",
                        "2f8db1ee68bd8535908f2fbe4ea393cd293edadc"
                    ]
                },
                {
                    "command": [
                        "let f_local := eval compute in (f_equal (snd (B:=_)) Hpq) in let g_local := eval compute in (sym_eq (f_equal (snd (B:=_)) H_eq_0)) in generalize f_local g_local.",
                        "VernacExtend",
                        "e6be0712f0feca83d7d376735376f48c6602a315"
                    ]
                },
                {
                    "command": [
                        "intros Hq Hq' Hp Hp'.",
                        "VernacExtend",
                        "a447e75045663cf0b24a8723f1f757c1570548c9"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (mult_n_Sm (S q0) 0).",
                        "VernacExtend",
                        "9f2ef2ada5d8cbb7aff79a7a4322ae69731414e4"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- plus_n_Sm.",
                        "VernacExtend",
                        "ff4a896b05573b8f577c6fe1c2669dd7843e3cec"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mult_n_O.",
                        "VernacExtend",
                        "07161053ebc93c773f589837df2755cd1a52c12f"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_O_n.",
                        "VernacExtend",
                        "a0eeec688d6591d761d2fa5fed2c095cff6ced47"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_1_l.",
                        "VernacExtend",
                        "0e33ed44999445afc31efdcb7fd28c323f8f7890"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_1_r.",
                        "VernacExtend",
                        "80597d89030a8bc45d0b39c6ce60bea43dbe51d1"
                    ]
                },
                {
                    "command": [
                        "unfold Qpositive_mult in |- *.",
                        "VernacExtend",
                        "1f30d7ea915496b697c735518fc781164df3a288"
                    ]
                },
                {
                    "command": [
                        "rewrite H_eq_.",
                        "VernacExtend",
                        "85fa2027b8312e43c7e292fa6e4b39afaeb0973b"
                    ]
                },
                {
                    "command": [
                        "set (P := Qpositive_i (Qpositive_c (S p0 + S q0) (S q0) (S (S p0 + S q0 + q0)))) in *.",
                        "VernacExtend",
                        "192e27bd6018f9c2312ec03c43e868970e510c04"
                    ]
                },
                {
                    "command": [
                        "set (p' := fst P) in *.",
                        "VernacExtend",
                        "f707cd1bb9f010a3ebd86ae916c64789570ce3b3"
                    ]
                },
                {
                    "command": [
                        "set (q' := snd P) in *.",
                        "VernacExtend",
                        "2f9af165d37520d20c7c5d528cca5cd8ec696466"
                    ]
                },
                {
                    "command": [
                        "assert (H_P : Qpositive_i (Qpositive_c (S p0 + S q0) (S q0) (S (S p0 + S q0 + q0))) = (p', q')).",
                        "VernacExtend",
                        "fbe2d8b0f243f97468d6779b3a303df7550f1524"
                    ]
                },
                {
                    "command": [
                        "replace (p', q') with P; trivial; unfold p', q' in |- *; apply pair_1.",
                        "VernacExtend",
                        "b81b1b43745ba3eebcd7e6bf30f28704c7fb9790"
                    ]
                },
                {
                    "command": [
                        "rewrite (inv_correct _ _ _ H_P).",
                        "VernacExtend",
                        "3a9dfe470ddb301266bd62dbee22735d3aa588de"
                    ]
                },
                {
                    "command": [
                        "rewrite (Qpositive_c_unfold1 p0 q0 (S p0 + S q0 + q0)) in H_P.",
                        "VernacExtend",
                        "b6635fd25da45e2eb4a36a3818d61ae07241b123"
                    ]
                },
                {
                    "command": [
                        "rewrite (construct_correct qp (S p0) (S q0) (S p0 + S q0 + q0) H_eq_ (le_plus_l _ _)) in H_P.",
                        "VernacExtend",
                        "546f27c2de94c2eda02fdbde71a7473f23fe839f"
                    ]
                },
                {
                    "command": [
                        "rewrite (Qpositive_i_nR qp _ _ H_eq_) in H_P.",
                        "VernacExtend",
                        "81a706716594a49fe6dd576fef1abd481969b0a3"
                    ]
                },
                {
                    "command": [
                        "let f_local := eval cbv beta delta -[plus] in (sym_eq (f_equal (fst (B:=_)) H_P)) in let g_local := eval cbv beta delta -[plus] in (sym_eq (f_equal (snd (B:=_)) H_P)) in generalize f_local g_local.",
                        "VernacExtend",
                        "176b67721a4f780596188fb88bf5b5091f56579d"
                    ]
                },
                {
                    "command": [
                        "intros Hp' Hq'; rewrite Hp'; rewrite Hq'.",
                        "VernacExtend",
                        "775a3446b28561150055e128a8a60ee1a60470d5"
                    ]
                },
                {
                    "command": [
                        "clear H_eq_0 Hpq H_P Hp' Hq' P p' q'.",
                        "VernacExtend",
                        "193e09278b4e5aad45450ba13879f41c8e090424"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (mult_n_Sm (S p0) q0).",
                        "VernacExtend",
                        "8aca7124fb8f09087aa98bb076364c0a8117d100"
                    ]
                },
                {
                    "command": [
                        "rewrite <- plus_n_Sm.",
                        "VernacExtend",
                        "10308ef961b07f08e71cba91e06650cc774994fe"
                    ]
                },
                {
                    "command": [
                        "rewrite (plus_Sn_m (S p0 * q0 + p0)).",
                        "VernacExtend",
                        "2d088c72c48fc2c56f8885c7e082ef147e0cb949"
                    ]
                },
                {
                    "command": [
                        "replace (S (S p0 * q0 + p0)) with (S q0 * S p0).",
                        "VernacExtend",
                        "806ef939bf34a32aec49678b2d403a90101ca668"
                    ]
                },
                {
                    "command": [
                        "rewrite Qpositive_c_dL.",
                        "VernacExtend",
                        "f49cc7a0c9ae7671ed4f05e88bdaf888170b500b"
                    ]
                },
                {
                    "command": [
                        "replace (S q0 * (S p0 + S q0) - S q0 * S p0) with (S q0 * S q0).",
                        "VernacExtend",
                        "6a912509823959ca2fac18f0aca4307441a5d6b3"
                    ]
                },
                {
                    "command": [
                        "apply f_equal with Qpositive.",
                        "VernacExtend",
                        "2fdbc0f37d5a7db0445a7fab44c4a5be71ada358"
                    ]
                },
                {
                    "command": [
                        "symmetry in |- *.",
                        "VernacExtend",
                        "dc33a39a53e296ef5e59fd831d55212be2a42f22"
                    ]
                },
                {
                    "command": [
                        "rewrite (construct_correct4' (S q0 * S p0) (S q0 * S q0) (S p0) (S q0) (S p0 * q0 + p0 + S q0 * (S p0 + S q0)) (S p0 + S q0)).",
                        "VernacExtend",
                        "cb9fcc7537fcf590c15046a6d8a875afac28a859"
                    ]
                },
                {
                    "command": [
                        "apply construct_correct.",
                        "VernacExtend",
                        "750c255ed15904719302c233cd6fd85e889e7c87"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mult_n_Sm.",
                        "VernacExtend",
                        "91735263987da0af733038b963dd5d1f039440a6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- plus_n_Sm.",
                        "VernacExtend",
                        "10308ef961b07f08e71cba91e06650cc774994fe"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mult_n_Sm.",
                        "VernacExtend",
                        "91735263987da0af733038b963dd5d1f039440a6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- plus_n_Sm.",
                        "VernacExtend",
                        "10308ef961b07f08e71cba91e06650cc774994fe"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_plus_distr_l.",
                        "VernacExtend",
                        "f62f8b6c339d6dd72d315199ed029b0d03be1c60"
                    ]
                },
                {
                    "command": [
                        "apply le_plus_r.",
                        "VernacExtend",
                        "c22b357a9da97736dcf6d1963d5d37bcb961ac00"
                    ]
                },
                {
                    "command": [
                        "apply le_n.",
                        "VernacExtend",
                        "cd4ea009ba050d55c0c5552f05ee5752a2fad9f9"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_comm (S q0) (S p0)).",
                        "VernacExtend",
                        "9bf6db33dc3772365f19af88b906ce540c5695fe"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_plus_distr_l.",
                        "VernacExtend",
                        "f62f8b6c339d6dd72d315199ed029b0d03be1c60"
                    ]
                },
                {
                    "command": [
                        "rewrite minus_plus; reflexivity.",
                        "VernacExtend",
                        "64457f2406abf2280e5bceaf88873cbc79132c46"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_plus_distr_l.",
                        "VernacExtend",
                        "f62f8b6c339d6dd72d315199ed029b0d03be1c60"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm.",
                        "VernacExtend",
                        "f2921c049c57ff33e3248947a1d6b2bcd1257393"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- mult_n_Sm.",
                        "VernacExtend",
                        "37916e85dfaa89fe554b1c6c2e940a95ac49c769"
                    ]
                },
                {
                    "command": [
                        "rewrite <- plus_n_Sm.",
                        "VernacExtend",
                        "10308ef961b07f08e71cba91e06650cc774994fe"
                    ]
                },
                {
                    "command": [
                        "rewrite <- plus_n_Sm with (m := q0).",
                        "VernacExtend",
                        "e64866643ede2119414b6b244447fba23273aae1"
                    ]
                },
                {
                    "command": [
                        "generalize (S q0 * p0 + q0) (S q0 * q0 + q0); clear qp H_eq_; intros; omega.",
                        "VernacExtend",
                        "3785a01c0fa10491cc7450c83bd69edfd620c897"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_comm.",
                        "VernacExtend",
                        "1618bf07e1d67d2e2ac34824fd6979892b5cec8f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mult_n_Sm.",
                        "VernacExtend",
                        "91735263987da0af733038b963dd5d1f039440a6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- plus_n_Sm; reflexivity.",
                        "VernacExtend",
                        "a8e842255f405ea8cff510980e7663ab15045952"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_n_Sm.",
                        "VernacExtend",
                        "8d602a0a1db65c52658648af82f6211103a652df"
                    ]
                },
                {
                    "command": [
                        "apply le_n.",
                        "VernacExtend",
                        "cd4ea009ba050d55c0c5552f05ee5752a2fad9f9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qpos_nR",
            "line_nb": 241,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply f_equal with Qpositive.",
                        "VernacExtend",
                        "2fdbc0f37d5a7db0445a7fab44c4a5be71ada358"
                    ]
                },
                {
                    "command": [
                        "apply what_nR_does.",
                        "VernacExtend",
                        "e4d0a2a2b3abd43b3215b0cd748f80e33ce04e23"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qmult_Z_nR",
            "line_nb": 247,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite Qpos_nR.",
                        "VernacExtend",
                        "2521e3b6f1ac884be27f4e3906fb63a7e88e581c"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qpos_dL",
            "line_nb": 252,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply f_equal with Qpositive.",
                        "VernacExtend",
                        "2fdbc0f37d5a7db0445a7fab44c4a5be71ada358"
                    ]
                },
                {
                    "command": [
                        "apply what_dL_does.",
                        "VernacExtend",
                        "d49cd092d1a205b166f326e4976425665f14a21e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qmult_Z_dL",
            "line_nb": 258,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite Qpos_dL.",
                        "VernacExtend",
                        "cc03022d7c535c014f830022e9ca7fadc6b57c43"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "length_of_Qpositive_is_length",
            "line_nb": 263,
            "steps": [
                {
                    "command": [
                        "intro p.",
                        "VernacExtend",
                        "5aea32c2ecd07598789d82ffef7594239c3ee52b"
                    ]
                },
                {
                    "command": [
                        "generalize (lt_O_nat_of_P p).",
                        "VernacExtend",
                        "a31e1fe61170ef6d9b53d10c65fc9ef8bc956811"
                    ]
                },
                {
                    "command": [
                        "rewrite <- ZL9.",
                        "VernacExtend",
                        "d123a820471e2cbcc182ef705b7a67019774e506"
                    ]
                },
                {
                    "command": [
                        "generalize (nat_of_P p).",
                        "VernacExtend",
                        "39fb2ebb0b0c234dac7893beec47f12e04bef62c"
                    ]
                },
                {
                    "command": [
                        "induction n.",
                        "VernacExtend",
                        "7f3faa2a3277e3553406d09101130efcb1764494"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "case (le_lt_eq_dec 1 (S n) (lt_le_S _ _ H)).",
                        "VernacExtend",
                        "8d6c18666fa93703473e13980f29209c849e7cee"
                    ]
                },
                {
                    "command": [
                        "intro H1.",
                        "VernacExtend",
                        "d2fcc9516b33dbca4f189b9ddbee105efc1235d1"
                    ]
                },
                {
                    "command": [
                        "rewrite (Qpositive_c_nR _ _ (S n) H1).",
                        "VernacExtend",
                        "16a05342b38dbd9e82730c6968efc22694ae3097"
                    ]
                },
                {
                    "command": [
                        "transitivity (1 + length_of_Qpositive (Qpositive_c (S n - 1) 1 (S n)))%Z.",
                        "VernacExtend",
                        "896ee9fa8f6f81d6f27c08a681fa15f2bc0b34c0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "rewrite Znat.inj_S.",
                        "VernacExtend",
                        "a210cdaac75f911a065718b5b4d1fc59cc11448c"
                    ]
                },
                {
                    "command": [
                        "rewrite Zplus_comm.",
                        "VernacExtend",
                        "2bb66f559ff90bf1a631140b359f483f39c79431"
                    ]
                },
                {
                    "command": [
                        "unfold Z.succ in |- *.",
                        "VernacExtend",
                        "d3292e8337e33f78eeb3f491cfdb2987c4452e05"
                    ]
                },
                {
                    "command": [
                        "transitivity (n - 1 + 1)%Z; [ idtac | omega ].",
                        "VernacExtend",
                        "cbcfa0df197b50ceb102360347e95489cbd44cd7"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with Z Z; trivial.",
                        "VernacExtend",
                        "65479fed102a0bb938fb1001f8f2d35f73c542e7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- IHn.",
                        "VernacExtend",
                        "3c5a36386bd293ffdd7a599d133f731aebc8cfae"
                    ]
                },
                {
                    "command": [
                        "apply f_equal with Qpositive.",
                        "VernacExtend",
                        "2fdbc0f37d5a7db0445a7fab44c4a5be71ada358"
                    ]
                },
                {
                    "command": [
                        "apply f_equal3 with nat nat nat; trivial.",
                        "VernacExtend",
                        "eaca978e6b167679ea736f11dd8d57e6c16180fa"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "intro H1; rewrite <- H1.",
                        "VernacExtend",
                        "500e1f7c34c92bd9e3780ac957e69afc685982e9"
                    ]
                },
                {
                    "command": [
                        "rewrite Qpositive_c_equal_One; trivial.",
                        "VernacExtend",
                        "910946866e7f4fe8d742829ef92b3bb53dd7710c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qpositive_to_Z_is_integer_part",
            "line_nb": 290,
            "steps": [
                {
                    "command": [
                        "intro p.",
                        "VernacExtend",
                        "5aea32c2ecd07598789d82ffef7594239c3ee52b"
                    ]
                },
                {
                    "command": [
                        "generalize (lt_O_nat_of_P p).",
                        "VernacExtend",
                        "a31e1fe61170ef6d9b53d10c65fc9ef8bc956811"
                    ]
                },
                {
                    "command": [
                        "rewrite <- ZL9.",
                        "VernacExtend",
                        "d123a820471e2cbcc182ef705b7a67019774e506"
                    ]
                },
                {
                    "command": [
                        "generalize (nat_of_P p).",
                        "VernacExtend",
                        "39fb2ebb0b0c234dac7893beec47f12e04bef62c"
                    ]
                },
                {
                    "command": [
                        "induction n; intro H.",
                        "VernacExtend",
                        "2ffa416ae40aabd1c82beb505f6d91f26d971ba4"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "case (le_lt_eq_dec 1 (S n) (lt_le_S _ _ H)).",
                        "VernacExtend",
                        "8d6c18666fa93703473e13980f29209c849e7cee"
                    ]
                },
                {
                    "command": [
                        "intro H1.",
                        "VernacExtend",
                        "d2fcc9516b33dbca4f189b9ddbee105efc1235d1"
                    ]
                },
                {
                    "command": [
                        "rewrite (Qpositive_c_nR _ _ (S n) H1).",
                        "VernacExtend",
                        "16a05342b38dbd9e82730c6968efc22694ae3097"
                    ]
                },
                {
                    "command": [
                        "transitivity (1 + Qpositive_to_Z (Qpositive_c (S n - 1) 1 (S n)))%Z.",
                        "VernacExtend",
                        "36bdc756cf4bb79d6ffa7a2f302617caec299cda"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "rewrite Znat.inj_S.",
                        "VernacExtend",
                        "a210cdaac75f911a065718b5b4d1fc59cc11448c"
                    ]
                },
                {
                    "command": [
                        "rewrite Zplus_comm.",
                        "VernacExtend",
                        "2bb66f559ff90bf1a631140b359f483f39c79431"
                    ]
                },
                {
                    "command": [
                        "unfold Z.succ in |- *.",
                        "VernacExtend",
                        "d3292e8337e33f78eeb3f491cfdb2987c4452e05"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with Z Z; trivial.",
                        "VernacExtend",
                        "65479fed102a0bb938fb1001f8f2d35f73c542e7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- IHn.",
                        "VernacExtend",
                        "3c5a36386bd293ffdd7a599d133f731aebc8cfae"
                    ]
                },
                {
                    "command": [
                        "apply f_equal with Qpositive.",
                        "VernacExtend",
                        "2fdbc0f37d5a7db0445a7fab44c4a5be71ada358"
                    ]
                },
                {
                    "command": [
                        "apply f_equal3 with nat nat nat; trivial.",
                        "VernacExtend",
                        "eaca978e6b167679ea736f11dd8d57e6c16180fa"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "intro H1; rewrite <- H1.",
                        "VernacExtend",
                        "500e1f7c34c92bd9e3780ac957e69afc685982e9"
                    ]
                },
                {
                    "command": [
                        "rewrite Qpositive_c_equal_One; trivial.",
                        "VernacExtend",
                        "910946866e7f4fe8d742829ef92b3bb53dd7710c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Q_to_Z_to_Q",
            "line_nb": 314,
            "steps": [
                {
                    "command": [
                        "intros [| x| x]; trivial; unfold Z_to_Q in |- *; unfold Q_to_Z in |- *; rewrite Qpositive_to_Z_is_integer_part; reflexivity.",
                        "VernacExtend",
                        "41e3972d1253fdd52ddd3965a9caa751c71dccf2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_Z_to_Q",
            "line_nb": 317,
            "steps": [
                {
                    "command": [
                        "intros x y H.",
                        "VernacExtend",
                        "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
                    ]
                },
                {
                    "command": [
                        "generalize (f_equal Q_to_Z H).",
                        "VernacExtend",
                        "6e63023a3f4d2e65860d796d127d1acb34864cc7"
                    ]
                },
                {
                    "command": [
                        "intro H0.",
                        "VernacExtend",
                        "33135fa360f1c5b700715c0dfac0804c96d2fa77"
                    ]
                },
                {
                    "command": [
                        "rewrite (Q_to_Z_to_Q x) in H0.",
                        "VernacExtend",
                        "09c4271f15ceb00d87e2aee1ad2143f23bd65f47"
                    ]
                },
                {
                    "command": [
                        "rewrite (Q_to_Z_to_Q y) in H0.",
                        "VernacExtend",
                        "4ebd1ff3e84dbba29faa9b732ec446a01ce1fc06"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_to_Qpositive_equal",
            "line_nb": 325,
            "steps": [
                {
                    "command": [
                        "intros m1; induction m1.",
                        "VernacExtend",
                        "c3a415efcee6d618d5707f34743b6f74b2e5ed79"
                    ]
                },
                {
                    "command": [
                        "discriminate Hm1.",
                        "VernacExtend",
                        "7a05ee2c5177e0cb7f7a158010720044c18ebb64"
                    ]
                },
                {
                    "command": [
                        "unfold Z_to_Qpositive.",
                        "VernacExtend",
                        "0e3c493438d7bbb77d154ac4a5e1c2119da0253f"
                    ]
                },
                {
                    "command": [
                        "intros m2 H Hm2 H_eq;revert Hm2.",
                        "VernacExtend",
                        "e3f90756136b36ce3a31da99c2665c29953b639c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H_eq;reflexivity.",
                        "VernacExtend",
                        "5ead7f59c224d2037052f3a193faab49c08af270"
                    ]
                },
                {
                    "command": [
                        "intros m2 m1 abs;discriminate.",
                        "VernacExtend",
                        "62e8ac94fc151c878d18856f2aca55461449c013"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_to_Qpositive_to_Q",
            "line_nb": 334,
            "steps": [
                {
                    "command": [
                        "intros m; functional induction (Z_to_Q m); intros Hm; discriminate Hm || trivial.",
                        "VernacExtend",
                        "99b57cfd4e8bea024e178e4e5728e578cb83f466"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qpos_injective",
            "line_nb": 337,
            "steps": [
                {
                    "command": [
                        "intros qp1 qp2 H; injection H; trivial.",
                        "VernacExtend",
                        "6ca45f79d3fa44d5ba6b6b5685b18d823b4d6823"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qneg_injective",
            "line_nb": 340,
            "steps": [
                {
                    "command": [
                        "intros qp1 qp2 H; injection H; trivial.",
                        "VernacExtend",
                        "6ca45f79d3fa44d5ba6b6b5685b18d823b4d6823"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Q_tail_Q_pos",
            "line_nb": 343,
            "steps": [
                {
                    "command": [
                        "intros [| q| q]; unfold Qlt in |- *; intros H; inversion H || unfold Q_tail in |- *; reflexivity.",
                        "VernacExtend",
                        "7202115042557e7611c4cf974ad1ad23283f40eb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Q_tail_Q_neg",
            "line_nb": 346,
            "steps": [
                {
                    "command": [
                        "intros [| q| q]; unfold Qlt in |- *; intros H; inversion H || unfold Q_tail in |- *; reflexivity.",
                        "VernacExtend",
                        "7202115042557e7611c4cf974ad1ad23283f40eb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qpositive_to_Z_nonneg",
            "line_nb": 349,
            "steps": [
                {
                    "command": [
                        "intros x; induction x as [x Hrecx| x Hrecx| ]; [ replace (Qpositive_to_Z (nR x)) with (1 + Qpositive_to_Z x)%Z; trivial; abstract omega | simpl in |- *; apply Z.le_refl | simpl in |- *; intro H; discriminate ].",
                        "VernacExtend",
                        "e99f388607739a5572d054527699bb58b50e08df"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qpositive_to_Z_Qpositive_le",
            "line_nb": 353,
            "steps": [
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "unfold Qpositive_le in |- *.",
                        "VernacExtend",
                        "d7dfe6a2b2256a4e7c9bed719dec0f029ad0b2e6"
                    ]
                },
                {
                    "command": [
                        "functional induction (Qpositive_le_bool x y) ;intros; trivial.",
                        "VernacExtend",
                        "c4ce986796c2b1acc61cdc3de2b3c89da8fd3518"
                    ]
                },
                {
                    "command": [
                        "apply IHb.",
                        "VernacExtend",
                        "55d9e7ec2f3b99e177dec889d87448cefeb44ac4"
                    ]
                },
                {
                    "command": [
                        "unfold Qpositive_to_Z in H;fold Qpositive_to_Z in H.",
                        "VernacExtend",
                        "83ab1e275ce47816d6e77cd762636139ef188d38"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "unfold Qpositive_to_Z in H;fold Qpositive_to_Z in H; generalize (Qpositive_to_Z_nonneg y);intros; apply False_ind;omega.",
                        "VernacExtend",
                        "1c7a88efb3416aeaaea83425951d07daf319b1cc"
                    ]
                },
                {
                    "command": [
                        "unfold Qpositive_to_Z in H;fold Qpositive_to_Z in H; generalize (Qpositive_to_Z_nonneg y);intros; apply False_ind;omega.",
                        "VernacExtend",
                        "1c7a88efb3416aeaaea83425951d07daf319b1cc"
                    ]
                },
                {
                    "command": [
                        "apply IHb.",
                        "VernacExtend",
                        "55d9e7ec2f3b99e177dec889d87448cefeb44ac4"
                    ]
                },
                {
                    "command": [
                        "unfold Qpositive_to_Z in H;fold Qpositive_to_Z in H.",
                        "VernacExtend",
                        "83ab1e275ce47816d6e77cd762636139ef188d38"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "unfold Qpositive_to_Z in H;fold Qpositive_to_Z in H;discriminate.",
                        "VernacExtend",
                        "f792b178faa20d63fd99b8581e64628ff2e11290"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Q_to_Z_monotone",
            "line_nb": 367,
            "steps": [
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "unfold Qlt in |- *.",
                        "VernacExtend",
                        "0ad96747a5529a8d9510339fae741064f9ebdb36"
                    ]
                },
                {
                    "command": [
                        "intro H.",
                        "VernacExtend",
                        "a9535760040671e8853f25f0b4e9eda38ca392a6"
                    ]
                },
                {
                    "command": [
                        "induction H; simpl in |- *; apply not_Zlt; intro H1.",
                        "VernacExtend",
                        "2704627ab282f1df1b71e019badb7c4d54181181"
                    ]
                },
                {
                    "command": [
                        "apply H; apply Qpositive_to_Z_Qpositive_le; assumption.",
                        "VernacExtend",
                        "2b31756e51a18a0ee81d388c82a99051d20db5bd"
                    ]
                },
                {
                    "command": [
                        "generalize (Zmin_cancel_Zlt _ _ H1); intro H2; apply H; apply Qpositive_to_Z_Qpositive_le; assumption.",
                        "VernacExtend",
                        "fa64a8978f9f5d96c5b331e4a451f688666d5e86"
                    ]
                },
                {
                    "command": [
                        "apply Z.lt_irrefl with 0%Z; generalize (Qpositive_to_Z_nonneg x'); intro H2; omega.",
                        "VernacExtend",
                        "11e94d03816218232ab81d2dd0a9e9a26af8332f"
                    ]
                },
                {
                    "command": [
                        "apply Z.lt_irrefl with 0%Z; generalize (Qpositive_to_Z_nonneg x'); generalize (Qpositive_to_Z_nonneg y'); intros H2 H3; abstract omega.",
                        "VernacExtend",
                        "077b5418219a5513cbd6dcddc6fc08649586f7c1"
                    ]
                },
                {
                    "command": [
                        "apply Z.lt_irrefl with 0%Z; generalize (Qpositive_to_Z_nonneg x'); intro H2; omega.",
                        "VernacExtend",
                        "11e94d03816218232ab81d2dd0a9e9a26af8332f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qlt_irreflexive",
            "line_nb": 378,
            "steps": [
                {
                    "command": [
                        "intro x; unfold Qlt in |- *; intro H; apply Qgt_antisym with x x; assumption.",
                        "VernacExtend",
                        "3ea95e88271fee437e84b3fd6dc4fc432d579a1f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qlt_not_eq",
            "line_nb": 382,
            "steps": [
                {
                    "command": [
                        "intros x y Hxlty Hxy; rewrite Hxy in Hxlty; apply Qlt_irreflexive with x; assumption.",
                        "VernacExtend",
                        "7653ab9dab7f06f12df4e1b01282146351313de9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qlt_transitive",
            "line_nb": 386,
            "steps": [
                {
                    "command": [
                        "intros x y z H1 H2.",
                        "VernacExtend",
                        "0d71d6482f590d052474f45e5b20f188f16ce84f"
                    ]
                },
                {
                    "command": [
                        "unfold Qlt in |- *.",
                        "VernacExtend",
                        "0ad96747a5529a8d9510339fae741064f9ebdb36"
                    ]
                },
                {
                    "command": [
                        "apply Qgt_trans with y; assumption.",
                        "VernacExtend",
                        "5714c43fb6cd360c4d744220bf72741b8060464e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_to_Qopp",
            "line_nb": 391,
            "steps": [
                {
                    "command": [
                        "intros [| x| x]; trivial.",
                        "VernacExtend",
                        "38c79fde36c60a92978ddbadaed7d3fc0b83e862"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_to_Qplus_POS",
            "line_nb": 394,
            "steps": [
                {
                    "command": [
                        "intros p1 p2.",
                        "VernacExtend",
                        "e93b18f6dbe7145e13c2eeb78585225f0efe7250"
                    ]
                },
                {
                    "command": [
                        "unfold Z_to_Q at 2 3 in |- *.",
                        "VernacExtend",
                        "67e266129298359e4763679c8d9f8264bb903e36"
                    ]
                },
                {
                    "command": [
                        "unfold Qplus in |- *.",
                        "VernacExtend",
                        "48585560ee8e2f278e3c619d4ccdba89117c7202"
                    ]
                },
                {
                    "command": [
                        "rewrite <- BinInt.Zpos_plus_distr.",
                        "VernacExtend",
                        "df7c256ad4e7333127a12e77be8c05c549b1b8d3"
                    ]
                },
                {
                    "command": [
                        "unfold Z_to_Q at 1 in |- *.",
                        "VernacExtend",
                        "ecfee51864aa1af92382863990992532c180c4d4"
                    ]
                },
                {
                    "command": [
                        "apply f_equal with Qpositive.",
                        "VernacExtend",
                        "2fdbc0f37d5a7db0445a7fab44c4a5be71ada358"
                    ]
                },
                {
                    "command": [
                        "unfold Qpositive_plus in |- *.",
                        "VernacExtend",
                        "baca3c0b6cace94221022a23bdea7cafdd06399e"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Qpositive_i_c.",
                        "VernacExtend",
                        "bfff0e986eb15cf62213ee322000fbd502eb5228"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite mult_1_l.",
                        "VernacExtend",
                        "56441439eca830a8bee8368a24a9a96350f65082"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite mult_1_r.",
                        "VernacExtend",
                        "c36fcf28b5a0627806c8f5132966deffa2c08349"
                    ]
                },
                {
                    "command": [
                        "apply f_equal3 with nat nat nat; trivial.",
                        "VernacExtend",
                        "eaca978e6b167679ea736f11dd8d57e6c16180fa"
                    ]
                },
                {
                    "command": [
                        "apply nat_of_P_plus_morphism.",
                        "VernacExtend",
                        "e553beff41a75859e9acb91dc9a53465c6630b2f"
                    ]
                },
                {
                    "command": [
                        "rewrite nat_of_P_plus_morphism.",
                        "VernacExtend",
                        "da63fa329e69a98f7f26a43e61590478c2110ce3"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply lt_O_nat_of_P.",
                        "VernacExtend",
                        "b85e4c4ec39e2bca2224649c92454cc3b480f2a2"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "apply lt_O_nat_of_P.",
                        "VernacExtend",
                        "b85e4c4ec39e2bca2224649c92454cc3b480f2a2"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_to_Qplus_POS_NEG",
            "line_nb": 414,
            "steps": [
                {
                    "command": [
                        "intros p1 p2.",
                        "VernacExtend",
                        "e93b18f6dbe7145e13c2eeb78585225f0efe7250"
                    ]
                },
                {
                    "command": [
                        "assert (H : Qplus (Z_to_Q (Zpos p1 + Zneg p2)) (Z_to_Q (Zpos p2)) = Z_to_Q (Zpos p1)).",
                        "VernacExtend",
                        "287a0a9da9e1ef1a80824d27c2d579863f7398b5"
                    ]
                },
                {
                    "command": [
                        "set (P := (Zpos p1 + Zneg p2)%Z) in *.",
                        "VernacExtend",
                        "64b8ddd547f6048ae637e5eee9af8ea3787d651a"
                    ]
                },
                {
                    "command": [
                        "assert (P = (Zpos p1 + Zneg p2)%Z); trivial.",
                        "VernacExtend",
                        "bef31de9e3bddba3da6916db9bd58079c776c1fa"
                    ]
                },
                {
                    "command": [
                        "destruct P.",
                        "VernacExtend",
                        "5b49412def545f38f2c7c88619b02391bea0772f"
                    ]
                },
                {
                    "command": [
                        "unfold Z_to_Q at 1 in |- *.",
                        "VernacExtend",
                        "ecfee51864aa1af92382863990992532c180c4d4"
                    ]
                },
                {
                    "command": [
                        "rewrite Qplus_zero_left.",
                        "VernacExtend",
                        "6cb11b947e2257e87ffa689db85c21bcfb92da3c"
                    ]
                },
                {
                    "command": [
                        "apply f_equal with Z.",
                        "VernacExtend",
                        "59c479ad75de611b01ba40fc4251df96f5055518"
                    ]
                },
                {
                    "command": [
                        "transitivity (- Zneg p2)%Z; trivial.",
                        "VernacExtend",
                        "a92bab0491b7d572c35229dc8fa813cfa6e99855"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z_to_Qplus_POS.",
                        "VernacExtend",
                        "d9d7f81883a8d942d4bc79fbd263ff379d4f4f69"
                    ]
                },
                {
                    "command": [
                        "apply f_equal with Z.",
                        "VernacExtend",
                        "59c479ad75de611b01ba40fc4251df96f5055518"
                    ]
                },
                {
                    "command": [
                        "replace (Zpos p2) with (- Zneg p2)%Z; trivial.",
                        "VernacExtend",
                        "2d7fb056cca622b9f49b906f640e142959fa4fc2"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "unfold Z_to_Q at 1 2 3 in |- *.",
                        "VernacExtend",
                        "d9291d287f56d56b91b44a676175a78b0a303d33"
                    ]
                },
                {
                    "command": [
                        "assert (Hp : (Zpos p < Zpos p2)%Z).",
                        "VernacExtend",
                        "231d6699b8229fb19201514e59248b0aab2e489c"
                    ]
                },
                {
                    "command": [
                        "apply Zmin_cancel_Zlt.",
                        "VernacExtend",
                        "f6dcc2804bf8e2e09d246670adc6637dc907c2f3"
                    ]
                },
                {
                    "command": [
                        "unfold Z.opp in |- *.",
                        "VernacExtend",
                        "8865fcc9f5413878999aae1e3b1a8a90f6b9b3c0"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Zplus_0_l (Zneg p2)).",
                        "VernacExtend",
                        "a3275b483146896d09d237471164b2b9ee0a6ef2"
                    ]
                },
                {
                    "command": [
                        "apply Zplus_lt_compat_r.",
                        "VernacExtend",
                        "c6eedaf39065761122509fee23619cbac83637b7"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "unfold Qplus in |- *.",
                        "VernacExtend",
                        "48585560ee8e2f278e3c619d4ccdba89117c7202"
                    ]
                },
                {
                    "command": [
                        "case (Qpositive_le_dec (Qpositive_c (nat_of_P p) 1 (S (nat_of_P p))) (Qpositive_c (nat_of_P p2) 1 (S (nat_of_P p2)))); intro H1.",
                        "VernacExtend",
                        "b30d28a391ed91ad9805d3660f3f44f9d917a829"
                    ]
                },
                {
                    "command": [
                        "case (Qpositive_eq_dec (Qpositive_c (nat_of_P p) 1 (S (nat_of_P p))) (Qpositive_c (nat_of_P p2) 1 (S (nat_of_P p2)))); intro H2.",
                        "VernacExtend",
                        "2e2cbcabdda3e11742deb591a507cf285e3ca48b"
                    ]
                },
                {
                    "command": [
                        "apply False_ind.",
                        "VernacExtend",
                        "953e151f97c8c6479faad3bcd88fb0b89b03443a"
                    ]
                },
                {
                    "command": [
                        "generalize (f_equal Qpositive_to_Z H2).",
                        "VernacExtend",
                        "85343194a72c964f8d45af5c9d54e5d3322ff816"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite Qpositive_to_Z_is_integer_part.",
                        "VernacExtend",
                        "0f6dce1c217a076598657119d6e5f4843ecc72fe"
                    ]
                },
                {
                    "command": [
                        "apply Zorder.Zlt_not_eq; assumption.",
                        "VernacExtend",
                        "8a526470f026aa80fca559101f4cc7e656002c13"
                    ]
                },
                {
                    "command": [
                        "assert (Hp' : Zpos p2 = (Zpos p1 + Zpos p)%Z).",
                        "VernacExtend",
                        "b2a39d5288545f9abb2f28ff50a7b8a147ecf532"
                    ]
                },
                {
                    "command": [
                        "clear H1 H2.",
                        "VernacExtend",
                        "11b745af7c87ecf3d332fcb85ae4f59023a9f120"
                    ]
                },
                {
                    "command": [
                        "replace (Zpos p) with (- Zneg p)%Z; trivial.",
                        "VernacExtend",
                        "da0c6ba1e77f4b5b5a01abb24bade86ca58844d5"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "replace (Zneg p2) with (- Zpos p2)%Z; trivial.",
                        "VernacExtend",
                        "5d550115395a20543ddc6dbbeb98053bd41c44ba"
                    ]
                },
                {
                    "command": [
                        "auto with zarith.",
                        "VernacExtend",
                        "23f42fd3236dcece4a40b3a666dce57fea69a9c0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- BinInt.Zpos_plus_distr in Hp'.",
                        "VernacExtend",
                        "42dc0141a0258d596ad1a90209c86ee8db705525"
                    ]
                },
                {
                    "command": [
                        "generalize (POS_resp_eq _ _ Hp').",
                        "VernacExtend",
                        "6dde093f29e9fc2530f9ec626f0e9719cd3472a3"
                    ]
                },
                {
                    "command": [
                        "intro Hp2.",
                        "VernacExtend",
                        "8e8d78732b4d5c81a693bbd2fc4c4e0a95575e41"
                    ]
                },
                {
                    "command": [
                        "apply f_equal with Qpositive.",
                        "VernacExtend",
                        "2fdbc0f37d5a7db0445a7fab44c4a5be71ada358"
                    ]
                },
                {
                    "command": [
                        "unfold Qpositive_sub in |- *.",
                        "VernacExtend",
                        "4ff220c9ee0d8f94e8b237364da383eb9b5839b9"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Qpositive_i_c.",
                        "VernacExtend",
                        "bfff0e986eb15cf62213ee322000fbd502eb5228"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite mult_1_l.",
                        "VernacExtend",
                        "56441439eca830a8bee8368a24a9a96350f65082"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite mult_1_r.",
                        "VernacExtend",
                        "c36fcf28b5a0627806c8f5132966deffa2c08349"
                    ]
                },
                {
                    "command": [
                        "clear H1 H2; apply Qpositive_c_equal_strong; trivial; try omega; rewrite Hp2; rewrite nat_of_P_plus_morphism.",
                        "VernacExtend",
                        "cbefab19368dd13746991a079c97fb2f3097d38e"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "replace (nat_of_P p1 + nat_of_P p - nat_of_P p) with (nat_of_P p1); [ apply lt_O_nat_of_P | omega ].",
                        "VernacExtend",
                        "7a835bb03bcb502d520e868bd72dd2ff7c58822a"
                    ]
                },
                {
                    "command": [
                        "apply lt_O_nat_of_P.",
                        "VernacExtend",
                        "b85e4c4ec39e2bca2224649c92454cc3b480f2a2"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "apply lt_O_nat_of_P.",
                        "VernacExtend",
                        "b85e4c4ec39e2bca2224649c92454cc3b480f2a2"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "apply False_ind; apply H1.",
                        "VernacExtend",
                        "c382ebb19d0aec014cbfa673f19e6fecf4e63e1f"
                    ]
                },
                {
                    "command": [
                        "apply Qpositive_to_Z_Qpositive_le.",
                        "VernacExtend",
                        "4d7cda04f40cdd3965b672f3dbec7e9856d33dc9"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite Qpositive_to_Z_is_integer_part.",
                        "VernacExtend",
                        "0f6dce1c217a076598657119d6e5f4843ecc72fe"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "replace (Zneg p2) with (- Zpos p2)%Z; trivial.",
                        "VernacExtend",
                        "5d550115395a20543ddc6dbbeb98053bd41c44ba"
                    ]
                },
                {
                    "command": [
                        "rewrite Z_to_Qopp.",
                        "VernacExtend",
                        "75a979be90e83b001809ec700daca0abfe28a8e9"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_to_Qplus_NEG",
            "line_nb": 474,
            "steps": [
                {
                    "command": [
                        "intros p1 p2.",
                        "VernacExtend",
                        "e93b18f6dbe7145e13c2eeb78585225f0efe7250"
                    ]
                },
                {
                    "command": [
                        "replace (Zneg p1) with (- Zpos p1)%Z; trivial.",
                        "VernacExtend",
                        "f51e786f408927bf9b8908e48527ac490732561d"
                    ]
                },
                {
                    "command": [
                        "replace (Zneg p2) with (- Zpos p2)%Z; trivial.",
                        "VernacExtend",
                        "5d550115395a20543ddc6dbbeb98053bd41c44ba"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Zopp_plus_distr.",
                        "VernacExtend",
                        "0f74890cd13001b6d46ea9010f4d3d762174db90"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Z_to_Qopp.",
                        "VernacExtend",
                        "fcfe737ea8f5f7503354c80bf6a4fd7185a4a55a"
                    ]
                },
                {
                    "command": [
                        "rewrite Z_to_Qplus_POS.",
                        "VernacExtend",
                        "b7119170fa6300a5b6043da387b1c0e9de36c435"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_to_Qplus",
            "line_nb": 483,
            "steps": [
                {
                    "command": [
                        "intros [| x| x] [| y| y]; trivial; [ apply Z_to_Qplus_POS | apply Z_to_Qplus_POS_NEG | rewrite Zplus_comm; rewrite Qplus_sym; apply Z_to_Qplus_POS_NEG | apply Z_to_Qplus_NEG ].",
                        "VernacExtend",
                        "976d1c3de361b74e00019e9fad7d61ee2f402fc7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_to_Qminus",
            "line_nb": 486,
            "steps": [
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "unfold Zminus in |- *.",
                        "VernacExtend",
                        "7085d4231409167767072da1bd24eb73ce98a683"
                    ]
                },
                {
                    "command": [
                        "rewrite Z_to_Qplus.",
                        "VernacExtend",
                        "91bcce18005d1e21fa9df559d23ae6236a33c1db"
                    ]
                },
                {
                    "command": [
                        "rewrite Z_to_Qopp.",
                        "VernacExtend",
                        "75a979be90e83b001809ec700daca0abfe28a8e9"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_to_Qmult_POS",
            "line_nb": 493,
            "steps": [
                {
                    "command": [
                        "intros p1 p2.",
                        "VernacExtend",
                        "e93b18f6dbe7145e13c2eeb78585225f0efe7250"
                    ]
                },
                {
                    "command": [
                        "unfold Z_to_Q at 2 3 in |- *.",
                        "VernacExtend",
                        "67e266129298359e4763679c8d9f8264bb903e36"
                    ]
                },
                {
                    "command": [
                        "unfold Qmult in |- *.",
                        "VernacExtend",
                        "d36d3aca350a1a239a6f9e206589bbf6c068bc30"
                    ]
                },
                {
                    "command": [
                        "replace (Zpos p1 * Zpos p2)%Z with (Zpos (p1 * p2)); trivial.",
                        "VernacExtend",
                        "d13763fcb95530094c352748db115014347b6e53"
                    ]
                },
                {
                    "command": [
                        "unfold Z_to_Q at 1 in |- *.",
                        "VernacExtend",
                        "ecfee51864aa1af92382863990992532c180c4d4"
                    ]
                },
                {
                    "command": [
                        "apply f_equal with Qpositive.",
                        "VernacExtend",
                        "2fdbc0f37d5a7db0445a7fab44c4a5be71ada358"
                    ]
                },
                {
                    "command": [
                        "unfold Qpositive_mult in |- *.",
                        "VernacExtend",
                        "1f30d7ea915496b697c735518fc781164df3a288"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Qpositive_i_c.",
                        "VernacExtend",
                        "bfff0e986eb15cf62213ee322000fbd502eb5228"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite mult_1_l.",
                        "VernacExtend",
                        "56441439eca830a8bee8368a24a9a96350f65082"
                    ]
                },
                {
                    "command": [
                        "apply f_equal3 with nat nat nat; trivial.",
                        "VernacExtend",
                        "eaca978e6b167679ea736f11dd8d57e6c16180fa"
                    ]
                },
                {
                    "command": [
                        "apply nat_of_P_mult_morphism.",
                        "VernacExtend",
                        "b64c051a0199af28a634c1eea38f9edda47e6529"
                    ]
                },
                {
                    "command": [
                        "rewrite nat_of_P_mult_morphism.",
                        "VernacExtend",
                        "e0696e737b09d96aa22951166e1c5feef4a1f01e"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply lt_O_nat_of_P.",
                        "VernacExtend",
                        "b85e4c4ec39e2bca2224649c92454cc3b480f2a2"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "apply lt_O_nat_of_P.",
                        "VernacExtend",
                        "b85e4c4ec39e2bca2224649c92454cc3b480f2a2"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_to_Qmult_POS_NEG",
            "line_nb": 512,
            "steps": [
                {
                    "command": [
                        "intros p1 p2.",
                        "VernacExtend",
                        "e93b18f6dbe7145e13c2eeb78585225f0efe7250"
                    ]
                },
                {
                    "command": [
                        "unfold Z_to_Q at 2 3 in |- *.",
                        "VernacExtend",
                        "67e266129298359e4763679c8d9f8264bb903e36"
                    ]
                },
                {
                    "command": [
                        "unfold Qmult in |- *.",
                        "VernacExtend",
                        "d36d3aca350a1a239a6f9e206589bbf6c068bc30"
                    ]
                },
                {
                    "command": [
                        "replace (Zpos p1 * Zneg p2)%Z with (Zneg (p1 * p2)); trivial.",
                        "VernacExtend",
                        "d93e3eca4a4cb3c33dc3d6750ebe5b7d45c30814"
                    ]
                },
                {
                    "command": [
                        "unfold Z_to_Q at 1 in |- *.",
                        "VernacExtend",
                        "ecfee51864aa1af92382863990992532c180c4d4"
                    ]
                },
                {
                    "command": [
                        "apply f_equal with Qpositive.",
                        "VernacExtend",
                        "2fdbc0f37d5a7db0445a7fab44c4a5be71ada358"
                    ]
                },
                {
                    "command": [
                        "unfold Qpositive_mult in |- *.",
                        "VernacExtend",
                        "1f30d7ea915496b697c735518fc781164df3a288"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Qpositive_i_c.",
                        "VernacExtend",
                        "bfff0e986eb15cf62213ee322000fbd502eb5228"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite mult_1_l.",
                        "VernacExtend",
                        "56441439eca830a8bee8368a24a9a96350f65082"
                    ]
                },
                {
                    "command": [
                        "apply f_equal3 with nat nat nat; trivial.",
                        "VernacExtend",
                        "eaca978e6b167679ea736f11dd8d57e6c16180fa"
                    ]
                },
                {
                    "command": [
                        "apply nat_of_P_mult_morphism.",
                        "VernacExtend",
                        "b64c051a0199af28a634c1eea38f9edda47e6529"
                    ]
                },
                {
                    "command": [
                        "rewrite nat_of_P_mult_morphism.",
                        "VernacExtend",
                        "e0696e737b09d96aa22951166e1c5feef4a1f01e"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply lt_O_nat_of_P.",
                        "VernacExtend",
                        "b85e4c4ec39e2bca2224649c92454cc3b480f2a2"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "apply lt_O_nat_of_P.",
                        "VernacExtend",
                        "b85e4c4ec39e2bca2224649c92454cc3b480f2a2"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_to_Qmult_NEG",
            "line_nb": 531,
            "steps": [
                {
                    "command": [
                        "intros p1 p2.",
                        "VernacExtend",
                        "e93b18f6dbe7145e13c2eeb78585225f0efe7250"
                    ]
                },
                {
                    "command": [
                        "unfold Z_to_Q at 2 3 in |- *.",
                        "VernacExtend",
                        "67e266129298359e4763679c8d9f8264bb903e36"
                    ]
                },
                {
                    "command": [
                        "unfold Qmult in |- *.",
                        "VernacExtend",
                        "d36d3aca350a1a239a6f9e206589bbf6c068bc30"
                    ]
                },
                {
                    "command": [
                        "replace (Zneg p1 * Zneg p2)%Z with (Zpos (p1 * p2)); trivial.",
                        "VernacExtend",
                        "b6df0499ed805c150d5a41dcfe056356eb257367"
                    ]
                },
                {
                    "command": [
                        "unfold Z_to_Q at 1 in |- *.",
                        "VernacExtend",
                        "ecfee51864aa1af92382863990992532c180c4d4"
                    ]
                },
                {
                    "command": [
                        "apply f_equal with Qpositive.",
                        "VernacExtend",
                        "2fdbc0f37d5a7db0445a7fab44c4a5be71ada358"
                    ]
                },
                {
                    "command": [
                        "unfold Qpositive_mult in |- *.",
                        "VernacExtend",
                        "1f30d7ea915496b697c735518fc781164df3a288"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Qpositive_i_c.",
                        "VernacExtend",
                        "bfff0e986eb15cf62213ee322000fbd502eb5228"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite mult_1_l.",
                        "VernacExtend",
                        "56441439eca830a8bee8368a24a9a96350f65082"
                    ]
                },
                {
                    "command": [
                        "apply f_equal3 with nat nat nat; trivial.",
                        "VernacExtend",
                        "eaca978e6b167679ea736f11dd8d57e6c16180fa"
                    ]
                },
                {
                    "command": [
                        "apply nat_of_P_mult_morphism.",
                        "VernacExtend",
                        "b64c051a0199af28a634c1eea38f9edda47e6529"
                    ]
                },
                {
                    "command": [
                        "rewrite nat_of_P_mult_morphism.",
                        "VernacExtend",
                        "e0696e737b09d96aa22951166e1c5feef4a1f01e"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply lt_O_nat_of_P.",
                        "VernacExtend",
                        "b85e4c4ec39e2bca2224649c92454cc3b480f2a2"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "apply lt_O_nat_of_P.",
                        "VernacExtend",
                        "b85e4c4ec39e2bca2224649c92454cc3b480f2a2"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_to_Qmult",
            "line_nb": 550,
            "steps": [
                {
                    "command": [
                        "intros [| x| x] [| y| y]; trivial; [ apply Z_to_Qmult_POS | apply Z_to_Qmult_POS_NEG | rewrite Zmult_comm; rewrite Qmult_sym; apply Z_to_Qmult_POS_NEG | apply Z_to_Qmult_NEG ].",
                        "VernacExtend",
                        "4e946ab698738eebec67ea2c33c870d664dd1e47"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_to_Q_S",
            "line_nb": 553,
            "steps": [
                {
                    "command": [
                        "induction k; trivial.",
                        "VernacExtend",
                        "7672ddfa44cc998f89d8d7efb82791180cbbc8cc"
                    ]
                },
                {
                    "command": [
                        "rewrite inj_S; unfold Z.succ; rewrite Z_to_Qplus; rewrite IHk; unfold Z_to_Q at 2; simpl; fold Qone; ring.",
                        "VernacExtend",
                        "0835726f40b1c4298bb293b7e72f59c52ba30a74"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_to_Q_min_one",
            "line_nb": 557,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qlt_Zero_Qminus",
            "line_nb": 560,
            "steps": [
                {
                    "command": [
                        "intros x y H; replace x with (Qplus x Zero); [ idtac | ring ]; replace y with (Qplus x (Qminus y x)); [ idtac | ring ]; unfold Qlt in |- *; apply Qgt_plus; assumption.",
                        "VernacExtend",
                        "ee8c0f701a976e5d6c9ae7ff7571fb4df76efb8c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_to_Qlt",
            "line_nb": 563,
            "steps": [
                {
                    "command": [
                        "intros x y H.",
                        "VernacExtend",
                        "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
                    ]
                },
                {
                    "command": [
                        "apply Qlt_Zero_Qminus.",
                        "VernacExtend",
                        "c4f764c41810d82acc98354f859ac20fad83cc11"
                    ]
                },
                {
                    "command": [
                        "generalize (Z.lt_gt _ _ H); clear H; intro H.",
                        "VernacExtend",
                        "c200df979f1ebb15a39b5dcd9a96ecd0ee1bfc5c"
                    ]
                },
                {
                    "command": [
                        "case (Zcompare_Gt_spec _ _ H).",
                        "VernacExtend",
                        "f351a4345332c0f122feda7105a8d75a8342faca"
                    ]
                },
                {
                    "command": [
                        "intros p Hp.",
                        "VernacExtend",
                        "cf737bd4e185c03175335af1ca6ae52da34cba56"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z_to_Qminus.",
                        "VernacExtend",
                        "ffdbca4f353830a1c7d41d9baa24738b0dc44ba3"
                    ]
                },
                {
                    "command": [
                        "unfold Zminus in |- *.",
                        "VernacExtend",
                        "7085d4231409167767072da1bd24eb73ce98a683"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp.",
                        "VernacExtend",
                        "b511f9e4ffd06db3fba6cc16f472f9ed92990ffa"
                    ]
                },
                {
                    "command": [
                        "unfold Z_to_Q in |- *.",
                        "VernacExtend",
                        "77cdaf807c942888208030d787a5be9c2586e516"
                    ]
                },
                {
                    "command": [
                        "apply Qlt_zero_pos.",
                        "VernacExtend",
                        "f9595803a16972a33ba19198c08c39b39eaef493"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_Z_to_Q",
            "line_nb": 575,
            "steps": [
                {
                    "command": [
                        "intros x y H.",
                        "VernacExtend",
                        "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
                    ]
                },
                {
                    "command": [
                        "case (Z_dec' x y).",
                        "VernacExtend",
                        "958c24a70c4e0fcc2a601d5d1841b51ab9dcc466"
                    ]
                },
                {
                    "command": [
                        "intros [H1| H1]; trivial.",
                        "VernacExtend",
                        "8ac10e784dbd9e8cbcd7a0c05794f3a64ec5dcd7"
                    ]
                },
                {
                    "command": [
                        "apply False_ind.",
                        "VernacExtend",
                        "953e151f97c8c6479faad3bcd88fb0b89b03443a"
                    ]
                },
                {
                    "command": [
                        "apply Qlt_irreflexive with x.",
                        "VernacExtend",
                        "e283874bf9f5205458e9cc84e97b1dc2e073c40b"
                    ]
                },
                {
                    "command": [
                        "apply Qlt_transitive with y; trivial.",
                        "VernacExtend",
                        "608672d9ee1aa18c99142d742021749efae9ad39"
                    ]
                },
                {
                    "command": [
                        "apply Z_to_Qlt; assumption.",
                        "VernacExtend",
                        "2c7d5a1552aaef21f99edbaf8573e6c457e43849"
                    ]
                },
                {
                    "command": [
                        "intro H1.",
                        "VernacExtend",
                        "d2fcc9516b33dbca4f189b9ddbee105efc1235d1"
                    ]
                },
                {
                    "command": [
                        "apply False_ind.",
                        "VernacExtend",
                        "953e151f97c8c6479faad3bcd88fb0b89b03443a"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in H.",
                        "VernacExtend",
                        "215f4c64f25f3964f02c3397d1a12602c82b8f1b"
                    ]
                },
                {
                    "command": [
                        "generalize H.",
                        "VernacExtend",
                        "743bb3d7407250a3128af7c9fa5ed4e9ada826b2"
                    ]
                },
                {
                    "command": [
                        "apply Qlt_irreflexive.",
                        "VernacExtend",
                        "5eb9bb8683b065902583f6eccea56c5be2bf4a63"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pos_Z_to_Q",
            "line_nb": 589,
            "steps": [
                {
                    "command": [
                        "intros x H.",
                        "VernacExtend",
                        "a0cd74b85812810ce5a78a540bad98f664bd4842"
                    ]
                },
                {
                    "command": [
                        "apply lt_Z_to_Q; assumption.",
                        "VernacExtend",
                        "acb2d8a8870bedf7118a630b5269acb053d5542f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "neg_Z_to_Q",
            "line_nb": 593,
            "steps": [
                {
                    "command": [
                        "intros x H.",
                        "VernacExtend",
                        "a0cd74b85812810ce5a78a540bad98f664bd4842"
                    ]
                },
                {
                    "command": [
                        "apply lt_Z_to_Q; assumption.",
                        "VernacExtend",
                        "acb2d8a8870bedf7118a630b5269acb053d5542f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qlt_le_weak",
            "line_nb": 597,
            "steps": [
                {
                    "command": [
                        "intros x y H.",
                        "VernacExtend",
                        "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
                    ]
                },
                {
                    "command": [
                        "unfold Qle in |- *.",
                        "VernacExtend",
                        "c9b6770441c2d08b29a015252bba8d9a9b0ce182"
                    ]
                },
                {
                    "command": [
                        "intro H2; apply Qlt_irreflexive with x; apply Qlt_transitive with y; assumption.",
                        "VernacExtend",
                        "3879842ff429a118afa4d4f4ddd2997e6a94352d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_to_Qle",
            "line_nb": 602,
            "steps": [
                {
                    "command": [
                        "intros x y H.",
                        "VernacExtend",
                        "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
                    ]
                },
                {
                    "command": [
                        "case (Z_le_lt_eq_dec _ _ H); intro H1.",
                        "VernacExtend",
                        "f59d4a29ff3e9474a12edfa84cb08bc483fc1bd7"
                    ]
                },
                {
                    "command": [
                        "apply Qlt_le_weak; apply Z_to_Qlt; assumption.",
                        "VernacExtend",
                        "5a40b06448804f31b20582cc696a91d9ab476b60"
                    ]
                },
                {
                    "command": [
                        "rewrite H1; unfold Qle in |- *; apply Qlt_irreflexive.",
                        "VernacExtend",
                        "ccf54bf4473ec38f11a33aa32ce11aa91d4e3f56"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_to_Q_pos",
            "line_nb": 608,
            "steps": [
                {
                    "command": [
                        "intros x H.",
                        "VernacExtend",
                        "a0cd74b85812810ce5a78a540bad98f664bd4842"
                    ]
                },
                {
                    "command": [
                        "replace Zero with (Z_to_Q 0); trivial.",
                        "VernacExtend",
                        "49c84243abbbd22907850cd8e4cc99c13372841a"
                    ]
                },
                {
                    "command": [
                        "apply Z_to_Qlt; assumption.",
                        "VernacExtend",
                        "2c7d5a1552aaef21f99edbaf8573e6c457e43849"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_to_Q_neg",
            "line_nb": 613,
            "steps": [
                {
                    "command": [
                        "intros x H.",
                        "VernacExtend",
                        "a0cd74b85812810ce5a78a540bad98f664bd4842"
                    ]
                },
                {
                    "command": [
                        "replace Zero with (Z_to_Q 0); trivial.",
                        "VernacExtend",
                        "49c84243abbbd22907850cd8e4cc99c13372841a"
                    ]
                },
                {
                    "command": [
                        "apply Z_to_Qlt; assumption.",
                        "VernacExtend",
                        "2c7d5a1552aaef21f99edbaf8573e6c457e43849"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_to_Q_nonneg",
            "line_nb": 618,
            "steps": [
                {
                    "command": [
                        "intros x H.",
                        "VernacExtend",
                        "a0cd74b85812810ce5a78a540bad98f664bd4842"
                    ]
                },
                {
                    "command": [
                        "replace Zero with (Z_to_Q 0); trivial.",
                        "VernacExtend",
                        "49c84243abbbd22907850cd8e4cc99c13372841a"
                    ]
                },
                {
                    "command": [
                        "apply Z_to_Qle; assumption.",
                        "VernacExtend",
                        "f19325f5e33d69043e5cad6e279fe5bd9ad84cac"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_to_Q_nonpos",
            "line_nb": 623,
            "steps": [
                {
                    "command": [
                        "intros x H.",
                        "VernacExtend",
                        "a0cd74b85812810ce5a78a540bad98f664bd4842"
                    ]
                },
                {
                    "command": [
                        "replace Zero with (Z_to_Q 0); trivial.",
                        "VernacExtend",
                        "49c84243abbbd22907850cd8e4cc99c13372841a"
                    ]
                },
                {
                    "command": [
                        "apply Z_to_Qle; assumption.",
                        "VernacExtend",
                        "f19325f5e33d69043e5cad6e279fe5bd9ad84cac"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_to_Q_not_eq",
            "line_nb": 628,
            "steps": [
                {
                    "command": [
                        "intros a b Hab HabQ; apply Hab; apply eq_Z_to_Q; assumption.",
                        "VernacExtend",
                        "074e33184ed40740ba2b5ecbe78bebe1baf7f726"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qmult_Z_plus_Z_dL",
            "line_nb": 631,
            "steps": [
                {
                    "command": [
                        "intros; rewrite Qmult_Z_dL.",
                        "VernacExtend",
                        "fb9b5bcf28d12d6b8cbeca2011110742a71e82eb"
                    ]
                },
                {
                    "command": [
                        "rewrite Z_to_Qplus; field; discriminate.",
                        "VernacExtend",
                        "fdeb8f487208efbc0cc4f7d69a8ac14180982864"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qinv_0",
            "line_nb": 635,
            "steps": [
                {
                    "command": [
                        "intros [| qp | qp ] Hqp; try trivial; discriminate Hqp.",
                        "VernacExtend",
                        "923fbe04341fc8be3259285b7c6ec66238302527"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qmult_resp_nonzero",
            "line_nb": 638,
            "steps": [
                {
                    "command": [
                        "intros x y Hx Hy Hxy; generalize (Q_integral _ _ Hxy); intros [H| H]; [ apply Hx | apply Hy ]; assumption.",
                        "VernacExtend",
                        "07774286b65f7aec2ba38f5738012bfa374d8055"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qlt_mult_pos_pos",
            "line_nb": 642,
            "steps": [
                {
                    "command": [
                        "intros [| x| x] [| y| y] Hx Hy; trivial; simpl in |- *; auto with *; [ inversion Hy | inversion Hx ].",
                        "VernacExtend",
                        "4bbc6b69fe08ecc0ff9bcc53c04e7878b6765c8a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qlt_mult_neg_pos",
            "line_nb": 645,
            "steps": [
                {
                    "command": [
                        "intros [| x| x] [| y| y] Hx Hy; trivial; simpl in |- *; auto with *; [ inversion Hx | inversion Hy ].",
                        "VernacExtend",
                        "97a3488a67ef97d9bb45b0273b199f855f7e682a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qlt_plus_pos_pos",
            "line_nb": 649,
            "steps": [
                {
                    "command": [
                        "intros [| x| x] [| y| y] Hx Hy; trivial; simpl in |- *; auto with *; [ inversion Hy | inversion Hx | inversion Hx ].",
                        "VernacExtend",
                        "68dfa85de1c863d7939a276ec6f6f6f99798f9e0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qdiv_num_denom",
            "line_nb": 653,
            "steps": [
                {
                    "command": [
                        "intros q1 [| qp| qp] p Hp; (simpl in |- *; ring) || (field; split; discriminate || assumption).",
                        "VernacExtend",
                        "410c5cb7bb1e7abd4037641f476b3c3df72d31eb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qinv_1",
            "line_nb": 656,
            "steps": [
                {
                    "command": [
                        "intros [| q| q] Hq; trivial; inversion Hq.",
                        "VernacExtend",
                        "6d31563cef539d7f1b209f335a1c13c56ec8f3a4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qinv_2",
            "line_nb": 659,
            "steps": [
                {
                    "command": [
                        "intros [| q| q] Hq; trivial; inversion Hq.",
                        "VernacExtend",
                        "6d31563cef539d7f1b209f335a1c13c56ec8f3a4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qinv_pos",
            "line_nb": 662,
            "steps": [
                {
                    "command": [
                        "intros [| q| q] Hq; simpl in |- *; trivial; inversion Hq.",
                        "VernacExtend",
                        "b54cbb99ed85adcfee5e427539dd5d1112349b4d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qmult_one_right",
            "line_nb": 665,
            "steps": [
                {
                    "command": [
                        "intro q; rewrite Qmult_sym; apply Qmult_one_left.",
                        "VernacExtend",
                        "7b9cd4d69754f24eaf33767edabbd236c5ff3450"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qpos_POS_1",
            "line_nb": 668,
            "steps": [
                {
                    "command": [
                        "intros m qp Hm; apply pos_Z_to_Q; rewrite Hm; apply Qlt_zero_pos.",
                        "VernacExtend",
                        "2ffd051e756aa83e1ef9659d0d2c43249ff2ae32"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qneg_NEG_1",
            "line_nb": 671,
            "steps": [
                {
                    "command": [
                        "intros m qp Hm; apply neg_Z_to_Q; rewrite Hm; apply Qlt_neg_zero.",
                        "VernacExtend",
                        "e22a90c532df7fd82883056c04f52649a59c51be"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qopp_Qpos",
            "line_nb": 674,
            "steps": [
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qopp_Qneg",
            "line_nb": 677,
            "steps": [
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qopp_linear",
            "line_nb": 680,
            "steps": [
                {
                    "command": [
                        "intros a b q; repeat rewrite Zopp_eq_mult_neg_1; repeat rewrite Z_to_Qmult; repeat rewrite <- Qmult_assoc; rewrite (Qmult_sym (-1)%Z); repeat rewrite Qmult_assoc; repeat rewrite <- Q_distr_left; replace (Z_to_Q (-1)) with (Qopp Qone); [ ring | reflexivity ].",
                        "VernacExtend",
                        "432452ba3c17eb36ef4300a0e58a465ba8e282d2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qopp_resp_nonzero",
            "line_nb": 683,
            "steps": [
                {
                    "command": [
                        "intros [| qx| qx] H; discriminate || Falsum.",
                        "VernacExtend",
                        "ec72292e16f567f684cf6b4825b3184d90e46817"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qinv_Qopp",
            "line_nb": 686,
            "steps": [
                {
                    "command": [
                        "intros [| q| q]; reflexivity.",
                        "VernacExtend",
                        "ff7010f33abeeffec1c6962e9be5084a760ffa4c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qmult_Qopp_left",
            "line_nb": 689,
            "steps": [
                {
                    "command": [
                        "intros [| qx| qx] [| qy| qy]; reflexivity.",
                        "VernacExtend",
                        "0fde2feda6723820b2b4a1edd094fd5c2ffbd59d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qpositive_dec_One",
            "line_nb": 692,
            "steps": [
                {
                    "command": [
                        "intro p; exact (Qpositive_eq_dec p One).",
                        "VernacExtend",
                        "cb1616395e53359cd833ddfa83f8c027e6d5724e"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Q_zerop",
            "line_nb": 695,
            "steps": [
                {
                    "command": [
                        "intros [| px| px]; solve [ left; trivial | right; discriminate ].",
                        "VernacExtend",
                        "7f7fcc608a8751052b1e300c56c72aa8c79e2cff"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qinv_resp_nonzero",
            "line_nb": 698,
            "steps": [
                {
                    "command": [
                        "intros [| px| px] Hx; solve [ Falsum | discriminate ].",
                        "VernacExtend",
                        "4855614d3efa0b62924a3f8ec880fa43c3afc275"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qlt_zero_one",
            "line_nb": 701,
            "steps": [
                {
                    "command": [
                        "unfold Qone in |- *; apply Qlt_zero_pos.",
                        "VernacExtend",
                        "1ef79e6e23106b1907cf25646dc1ecb784473cda"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_to_Qpositive_Q_tail_pos",
            "line_nb": 705,
            "steps": [
                {
                    "command": [
                        "intros [| px| px] Hx; discriminate Hx || reflexivity.",
                        "VernacExtend",
                        "dd5d557af98182d3d85b8ff756e5c048a14d14f6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Q_tail_Qinv",
            "line_nb": 708,
            "steps": [
                {
                    "command": [
                        "intros [| px| px]; trivial.",
                        "VernacExtend",
                        "85a5affd6e3b5496bbce4787b3ef55b0350d1ac9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Q_tail_Qmult",
            "line_nb": 711,
            "steps": [
                {
                    "command": [
                        "intros [| px| px] [| py| py] Hx Hy; trivial; Falsum.",
                        "VernacExtend",
                        "0681433491dc353c578b72bd24b3c8d98b9b02cb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Q_tail_Qplus_pos",
            "line_nb": 714,
            "steps": [
                {
                    "command": [
                        "intros [| px| px] [| py| py] Hx Hy; trivial; solve [ inversion Hx | inversion Hy ].",
                        "VernacExtend",
                        "071a749d8e8368dc9cc5920535f274a8f029203f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Q_tail_Qplus_neg",
            "line_nb": 717,
            "steps": [
                {
                    "command": [
                        "intros [| px| px] [| py| py] Hx Hy; trivial; solve [ inversion Hx | inversion Hy ].",
                        "VernacExtend",
                        "071a749d8e8368dc9cc5920535f274a8f029203f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qplus_zero_right",
            "line_nb": 720,
            "steps": [
                {
                    "command": [
                        "intros; field.",
                        "VernacExtend",
                        "2644a19081871cb7f54c98c90313bcc0013687fc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qmult_zero_right",
            "line_nb": 723,
            "steps": [
                {
                    "command": [
                        "intros; field.",
                        "VernacExtend",
                        "2644a19081871cb7f54c98c90313bcc0013687fc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qle_Qpositive_le_pos",
            "line_nb": 726,
            "steps": [
                {
                    "command": [
                        "intros x y H.",
                        "VernacExtend",
                        "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
                    ]
                },
                {
                    "command": [
                        "case (Qpositive_le_dec x y); intros H1; trivial; apply False_ind; apply H; constructor; assumption.",
                        "VernacExtend",
                        "7e142f4a467acc6883cad67c3773ee2c16da41e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qle_Qpositive_le_neg",
            "line_nb": 730,
            "steps": [
                {
                    "command": [
                        "intros x y H.",
                        "VernacExtend",
                        "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
                    ]
                },
                {
                    "command": [
                        "case (Qpositive_le_dec y x); intros H1; trivial; apply False_ind; apply H; constructor; assumption.",
                        "VernacExtend",
                        "9f4771daaad238344e0e738798c3fda2ae133a20"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qle_lt_eq_dec",
            "line_nb": 734,
            "steps": [
                {
                    "command": [
                        "intros [| x| x] [| y| y] Hxy; try solve [ right; reflexivity | left; auto with * | right; auto with * | apply False_rec; apply Hxy; auto with * ]; [ generalize (Qle_Qpositive_le_pos _ _ Hxy) | generalize (Qle_Qpositive_le_neg _ _ Hxy) ]; clear Hxy; intro Hxy; match goal with | id1:(Qpositive_le ?X1 ?X2) |- _ => case (Qpositive_le_dec X2 X1); intro H; [ right; apply f_equal with Qpositive; apply Qpositive_le_antisym; assumption | left; constructor; assumption ] end.",
                        "VernacExtend",
                        "2573f185884bedb076a495e3352a00d5fbc635ce"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qle_lt_trans",
            "line_nb": 737,
            "steps": [
                {
                    "command": [
                        "intros [| x| x] [| y| y] [| z| z] Hxy Hyz; trivial; try QltCleanAbsurdCases; case (Qle_lt_eq_dec _ _ Hxy); intro Hxy'; [ apply Qlt_transitive with (Qpos y) | rewrite Hxy' | apply Qlt_transitive with (Qneg y) | rewrite Hxy' ]; assumption.",
                        "VernacExtend",
                        "cd65f6b377aa704a67da7c10ebec176b2018f8dd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qlt_le_trans",
            "line_nb": 740,
            "steps": [
                {
                    "command": [
                        "intros [| x| x] [| y| y] [| z| z] Hxy Hyz; trivial; try QltCleanAbsurdCases; case (Qle_lt_eq_dec _ _ Hyz); intro Hyz'; [ apply Qlt_transitive with (Qpos y) | rewrite <- Hyz' | apply Qlt_transitive with (Qneg y) | rewrite <- Hyz' ]; assumption.",
                        "VernacExtend",
                        "8d713552d487bfbb0ca395f008fe06288a13c4d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qle_trans",
            "line_nb": 743,
            "steps": [
                {
                    "command": [
                        "intros x y z Hxy Hyz Hxz; apply Hyz; apply Qlt_le_trans with x; assumption.",
                        "VernacExtend",
                        "5d8b5b5e35d5d89d333bd499a7d4f946671c4717"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qlt_plus_plus",
            "line_nb": 746,
            "steps": [
                {
                    "command": [
                        "intros a b c d Hab Hcd.",
                        "VernacExtend",
                        "a141b14db8d62adaa67b558077f9f33bdb7b6c35"
                    ]
                },
                {
                    "command": [
                        "apply Qlt_transitive with (Qplus b c); unfold Qlt in |- *; [ rewrite (Qplus_sym a); rewrite (Qplus_sym b) | idtac ]; apply Qgt_plus; assumption.",
                        "VernacExtend",
                        "666897dadd2537fce2853a162f7d6a4fdd256881"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qle_lt_reg",
            "line_nb": 750,
            "steps": [
                {
                    "command": [
                        "intros a b c d Hab Hcd.",
                        "VernacExtend",
                        "a141b14db8d62adaa67b558077f9f33bdb7b6c35"
                    ]
                },
                {
                    "command": [
                        "case (Qle_lt_eq_dec _ _ Hab); intro Hab'; [ apply Qlt_plus_plus | rewrite Hab'; unfold Qlt in |- *; apply Qgt_plus ]; assumption.",
                        "VernacExtend",
                        "b390bd4e90b389a9273151df1f474f63feb1ec6f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qlt_le_reg",
            "line_nb": 754,
            "steps": [
                {
                    "command": [
                        "intros a b c d Hab Hcd; rewrite (Qplus_sym a); rewrite (Qplus_sym b); apply Qle_lt_reg; assumption.",
                        "VernacExtend",
                        "73f0311231c125c84fb9b8b71ab6cdd3da646b58"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qlt_le_reg_pos",
            "line_nb": 757,
            "steps": [
                {
                    "command": [
                        "intros b d Hb Hd; replace Zero with (Qplus Zero Zero); trivial; apply Qlt_le_reg; assumption.",
                        "VernacExtend",
                        "7997c9a87c7c4e6c2a020a0da9f4c6aa88cbe81e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qle_lt_reg_pos",
            "line_nb": 760,
            "steps": [
                {
                    "command": [
                        "intros b d Hb Hd; replace Zero with (Qplus Zero Zero); trivial; apply Qle_lt_reg; assumption.",
                        "VernacExtend",
                        "b8bf1035b3d9e7bbb7ef8b897d4abc65626d7703"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qlt_le_reg_neg",
            "line_nb": 763,
            "steps": [
                {
                    "command": [
                        "intros b d Hb Hd; replace Zero with (Qplus Zero Zero); trivial; apply Qlt_le_reg; assumption.",
                        "VernacExtend",
                        "7997c9a87c7c4e6c2a020a0da9f4c6aa88cbe81e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qle_lt_reg_neg",
            "line_nb": 766,
            "steps": [
                {
                    "command": [
                        "intros b d Hb Hd; replace Zero with (Qplus Zero Zero); trivial; apply Qle_lt_reg; assumption.",
                        "VernacExtend",
                        "b8bf1035b3d9e7bbb7ef8b897d4abc65626d7703"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qle_plus_plus",
            "line_nb": 769,
            "steps": [
                {
                    "command": [
                        "intros a b c d Hab Hcd.",
                        "VernacExtend",
                        "a141b14db8d62adaa67b558077f9f33bdb7b6c35"
                    ]
                },
                {
                    "command": [
                        "apply Qle_trans with (Qplus b c); unfold Qlt in |- *; [ rewrite (Qplus_sym a); rewrite (Qplus_sym b) | idtac ]; [ case (Qle_lt_eq_dec _ _ Hab) | case (Qle_lt_eq_dec _ _ Hcd) ]; intro H_; [ apply Qlt_le_weak; apply Qle_lt_reg; [ unfold Qle in |- *; apply Qlt_irreflexive | assumption ] | rewrite H_; unfold Qle in |- *; apply Qlt_irreflexive | apply Qlt_le_weak; apply Qle_lt_reg; [ unfold Qle in |- *; apply Qlt_irreflexive | assumption ] | rewrite H_; unfold Qle in |- *; apply Qlt_irreflexive ].",
                        "VernacExtend",
                        "37d04d845cbd80152d9393b11a4e5f5a74a67b22"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qle_plus_pos_pos",
            "line_nb": 773,
            "steps": [
                {
                    "command": [
                        "intros b d Hb Hd; replace Zero with (Qplus Zero Zero); trivial; apply Qle_plus_plus; assumption.",
                        "VernacExtend",
                        "a209704cf679adf29a51dd2c75fea8577f4983fd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qle_plus_neg_neg",
            "line_nb": 776,
            "steps": [
                {
                    "command": [
                        "intros b d Hb Hd; replace Zero with (Qplus Zero Zero); trivial; apply Qle_plus_plus; assumption.",
                        "VernacExtend",
                        "a209704cf679adf29a51dd2c75fea8577f4983fd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qle_mult_nonneg_nonneg",
            "line_nb": 779,
            "steps": [
                {
                    "command": [
                        "intros [| x| x] [| y| y] Hx Hy; trivial; try QltCleanAbsurdCases; simpl in |- *; intro H_; inversion H_.",
                        "VernacExtend",
                        "68f94658406767b9d612462ff1b6c7c81a3a34d4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qle_mult_nonpos_nonneg",
            "line_nb": 782,
            "steps": [
                {
                    "command": [
                        "intros [| x| x] [| y| y] Hx Hy; trivial; try QltCleanAbsurdCases; simpl in |- *; intro H_; inversion H_.",
                        "VernacExtend",
                        "68f94658406767b9d612462ff1b6c7c81a3a34d4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qle_mult_nonneg_nonpos",
            "line_nb": 785,
            "steps": [
                {
                    "command": [
                        "intros [| x| x] [| y| y] Hx Hy; trivial; try QltCleanAbsurdCases; simpl in |- *; intro H_; inversion H_.",
                        "VernacExtend",
                        "68f94658406767b9d612462ff1b6c7c81a3a34d4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qle_mult_nonpos_pos",
            "line_nb": 788,
            "steps": [
                {
                    "command": [
                        "intros [| x| x] [| y| y] Hx Hy; trivial; try QltCleanAbsurdCases; simpl in |- *; intro H_; inversion H_.",
                        "VernacExtend",
                        "68f94658406767b9d612462ff1b6c7c81a3a34d4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qle_mult_neg_nonneg",
            "line_nb": 791,
            "steps": [
                {
                    "command": [
                        "intros [| x| x] [| y| y] Hx Hy; trivial; try QltCleanAbsurdCases; simpl in |- *; intro H_; inversion H_.",
                        "VernacExtend",
                        "68f94658406767b9d612462ff1b6c7c81a3a34d4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qle_reflexive",
            "line_nb": 794,
            "steps": [
                {
                    "command": [
                        "intro x; unfold Qle; apply Qlt_irreflexive.",
                        "VernacExtend",
                        "d2398a8a7db650dec5f93be7efcbcbd72d4da142"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qpos_not_lt_Zero",
            "line_nb": 798,
            "steps": [
                {
                    "command": [
                        "intros x Hc; apply (Qlt_irreflexive Zero); apply Qlt_transitive with (Qpos x);trivial.",
                        "VernacExtend",
                        "7403d62db9c642f8d94dc56211b4235fb42c1d73"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qlt_dec_Qpos",
            "line_nb": 801,
            "steps": [
                {
                    "command": [
                        "intros x y; case Qpositive_le_dec with x y; intro H'; [left;intro H; inversion H; contradiction | right;unfold Qlt; constructor; trivial].",
                        "VernacExtend",
                        "8e3af2aa8794cc9af4e7399877c05cf2b2019df7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zero_not_lt_Qneg",
            "line_nb": 804,
            "steps": [
                {
                    "command": [
                        "intros x Hc; apply (Qlt_irreflexive Zero); apply Qlt_transitive with (Qneg x);trivial.",
                        "VernacExtend",
                        "63af1dbec81c63fe0236d2b2bf88983b65fa8922"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qpos_not_lt_Qneg",
            "line_nb": 807,
            "steps": [
                {
                    "command": [
                        "intros x y Hc; apply (Qlt_irreflexive (Qneg x)); apply Qlt_transitive with (Qpos y); trivial.",
                        "VernacExtend",
                        "76af27ca299489c875ac0ab89a32a62bb0cf20e0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qlt_dec_Qneg",
            "line_nb": 810,
            "steps": [
                {
                    "command": [
                        "intros x y; case Qpositive_le_dec with y x; intro H'; [left;intro H; inversion H; contradiction | right;unfold Qlt; constructor; trivial].",
                        "VernacExtend",
                        "5c8f67774f845c48bde3e152d6c9bc0056c5c079"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Q_le_lt_dec",
            "line_nb": 813,
            "steps": [
                {
                    "command": [
                        "intros [|x|x] [|y|y]; unfold Qle; try (right; trivial || fail).",
                        "VernacExtend",
                        "73698a710bd367d9c43ef948037a0e3c5ecfe82d"
                    ]
                },
                {
                    "command": [
                        "left; apply Qlt_irreflexive.",
                        "VernacExtend",
                        "c116d32fb13c6960047a6fff924ba2ca8127def1"
                    ]
                },
                {
                    "command": [
                        "left; apply Qpos_not_lt_Zero.",
                        "VernacExtend",
                        "7228f62122aaaaf98daffab4e85660761aafa2b3"
                    ]
                },
                {
                    "command": [
                        "apply Qlt_dec_Qpos.",
                        "VernacExtend",
                        "9148213e6dcc9ad9c3f35f750445ac36d2b91d4a"
                    ]
                },
                {
                    "command": [
                        "left; apply Zero_not_lt_Qneg.",
                        "VernacExtend",
                        "b21e583c10a7032c516ef7c53df9400d8cd1dfad"
                    ]
                },
                {
                    "command": [
                        "left; apply Qpos_not_lt_Qneg.",
                        "VernacExtend",
                        "d2a689f24e270922780a7098c3cef989115d7939"
                    ]
                },
                {
                    "command": [
                        "apply Qlt_dec_Qneg.",
                        "VernacExtend",
                        "7ac1e64aad041d3ae2b63fa335c6c91ac2ff2129"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qle_dec",
            "line_nb": 822,
            "steps": [
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "case (Q_le_lt_dec x y); intros; [ left | right ] ; trivial.",
                        "VernacExtend",
                        "d28a96858c010040e6245929f0f5c562a018a500"
                    ]
                },
                {
                    "command": [
                        "intros H'; apply H'; trivial.",
                        "VernacExtend",
                        "f2bf711a38fc17f11bf5b9ff7497ed10785c3d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qlt_dec",
            "line_nb": 827,
            "steps": [
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "case (Q_le_lt_dec y x); intros; [ right | left ] ; trivial.",
                        "VernacExtend",
                        "82daafb3afc59003d29ba4bff9a6b0e2c1c0c29a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qtrichotomy_inf",
            "line_nb": 831,
            "steps": [
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "case (Q_le_lt_dec x y); intros H; [ case (Qle_lt_eq_dec x y H); intros H0; left;[left|right] | right ]; trivial.",
                        "VernacExtend",
                        "7aaa7636836a2f40629da8ac2920414c7e46f813"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qle_dec_weak",
            "line_nb": 835,
            "steps": [
                {
                    "command": [
                        "intros x y; case (Q_le_lt_dec x y); intros; [ left | right ] ; trivial; apply Qlt_le_weak; trivial.",
                        "VernacExtend",
                        "7ca0c334ab4958514ef2809f5459dd25f1320f09"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_Qeq_inf",
            "line_nb": 838,
            "steps": [
                {
                    "command": [
                        "intros x y Hxy; destruct (Q_le_lt_dec x y) as [H|H]; try tauto; left; destruct (Qle_lt_eq_dec _ _ H) as [H'|H']; trivial; contradiction.",
                        "VernacExtend",
                        "f8bce58e84a685fbe58a6732ea0cde355a853d17"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qlt_stepl",
            "line_nb": 841,
            "steps": [
                {
                    "command": [
                        "intros x y z H_lt H_eq; subst; assumption.",
                        "VernacExtend",
                        "1dee0b4287ea9b61bc247480cf56e20188a9825c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qlt_stepr",
            "line_nb": 844,
            "steps": [
                {
                    "command": [
                        "intros x y z H_lt H_eq; subst; assumption.",
                        "VernacExtend",
                        "1dee0b4287ea9b61bc247480cf56e20188a9825c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qle_stepl",
            "line_nb": 847,
            "steps": [
                {
                    "command": [
                        "intros x y z H_lt H_eq; subst; assumption.",
                        "VernacExtend",
                        "1dee0b4287ea9b61bc247480cf56e20188a9825c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qle_stepr",
            "line_nb": 850,
            "steps": [
                {
                    "command": [
                        "intros x y z H_lt H_eq; subst; assumption.",
                        "VernacExtend",
                        "1dee0b4287ea9b61bc247480cf56e20188a9825c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qneq_stepl",
            "line_nb": 853,
            "steps": [
                {
                    "command": [
                        "intros x y z H_lt H_eq; subst; assumption.",
                        "VernacExtend",
                        "1dee0b4287ea9b61bc247480cf56e20188a9825c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qneq_stepr",
            "line_nb": 856,
            "steps": [
                {
                    "command": [
                        "intros x y z H_lt H_eq; subst; assumption.",
                        "VernacExtend",
                        "1dee0b4287ea9b61bc247480cf56e20188a9825c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qsgn_1",
            "line_nb": 865,
            "steps": [
                {
                    "command": [
                        "intros [|x|x]; simpl; auto.",
                        "VernacExtend",
                        "236101a2345f357bff908cb7c36803ac5beee504"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qsgn_2",
            "line_nb": 868,
            "steps": [
                {
                    "command": [
                        "intros [| x| x] Hx; trivial; inversion Hx.",
                        "VernacExtend",
                        "ff2979c750aade917b8553a3038a51623b599d1e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qsgn_7",
            "line_nb": 871,
            "steps": [
                {
                    "command": [
                        "intros [| x| x] Hx; trivial; inversion Hx.",
                        "VernacExtend",
                        "ff2979c750aade917b8553a3038a51623b599d1e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qsgn_8",
            "line_nb": 874,
            "steps": [
                {
                    "command": [
                        "intros [| x| x] Hx; trivial; inversion Hx.",
                        "VernacExtend",
                        "ff2979c750aade917b8553a3038a51623b599d1e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qsgn_9",
            "line_nb": 877,
            "steps": [
                {
                    "command": [
                        "intros [| x| x] Hx; trivial; inversion Hx.",
                        "VernacExtend",
                        "ff2979c750aade917b8553a3038a51623b599d1e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qsgn_10",
            "line_nb": 880,
            "steps": [
                {
                    "command": [
                        "intros [| x| x] Hx; trivial; inversion Hx.",
                        "VernacExtend",
                        "ff2979c750aade917b8553a3038a51623b599d1e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qsgn_15",
            "line_nb": 883,
            "steps": [
                {
                    "command": [
                        "intros [| x| x] [| y| y]; trivial.",
                        "VernacExtend",
                        "2728ce4825d9f31da431ef9db17ff970abee0bf4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qsgn_25",
            "line_nb": 886,
            "steps": [
                {
                    "command": [
                        "intros [| x| x]; trivial.",
                        "VernacExtend",
                        "38c79fde36c60a92978ddbadaed7d3fc0b83e862"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qsgn_28",
            "line_nb": 889,
            "steps": [
                {
                    "command": [
                        "intros [| x| x]; trivial.",
                        "VernacExtend",
                        "38c79fde36c60a92978ddbadaed7d3fc0b83e862"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qsgn_29",
            "line_nb": 892,
            "steps": [
                {
                    "command": [
                        "intros [| x| x]; trivial.",
                        "VernacExtend",
                        "38c79fde36c60a92978ddbadaed7d3fc0b83e862"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qsgn_30",
            "line_nb": 895,
            "steps": [
                {
                    "command": [
                        "intros [| x| x] [| y| y]; trivial.",
                        "VernacExtend",
                        "2728ce4825d9f31da431ef9db17ff970abee0bf4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qsgn_31",
            "line_nb": 898,
            "steps": [
                {
                    "command": [
                        "intros [|x|x] Hx; try discriminate; apply False_ind; apply Hx; apply Qlt_zero_pos.",
                        "VernacExtend",
                        "b164cf334ffb02b7e8a61ab81ca8838caa9a4e98"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qsgn_32",
            "line_nb": 901,
            "steps": [
                {
                    "command": [
                        "intros [|x|x] Hx; auto; try apply Qle_reflexive; apply False_ind; apply Hx; reflexivity.",
                        "VernacExtend",
                        "fb074b4fa713044c2e1cefd7d0a6e787b9e79091"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qsgn_33",
            "line_nb": 904,
            "steps": [
                {
                    "command": [
                        "intros [|x|x] Hx; try discriminate; apply False_ind; apply Hx; auto.",
                        "VernacExtend",
                        "44e14103ecd7723b62209a44804039efd87fd31b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qsgn_34",
            "line_nb": 907,
            "steps": [
                {
                    "command": [
                        "intros [|x|x] Hx; auto; try apply Qle_reflexive; apply False_ind; apply Hx; reflexivity.",
                        "VernacExtend",
                        "fb074b4fa713044c2e1cefd7d0a6e787b9e79091"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}