{
    "filename": "sqrt2.v",
    "coq_project": "qarith-stern-brocot",
    "vernac_cmds": [
        [
            "Require Export ArithRing.",
            "VernacRequire",
            "52686e5ab1cc3983710bd9ec03aba753ca6a2f27"
        ],
        [
            "Require Export Compare_dec.",
            "VernacRequire",
            "07740b4f9d7a269077d4962024b3c9137fa46a8d"
        ],
        [
            "Require Export Wf_nat.",
            "VernacRequire",
            "287253697823c346b4d8375b73e4c5bcf429af23"
        ],
        [
            "Require Export Arith.",
            "VernacRequire",
            "70e550b9603a7aa23f63274fffcc443ce7c8f433"
        ],
        [
            "Require Export Omega.",
            "VernacRequire",
            "0481b56b468f7aa7f5517bbdc71f6985bb9f8b59"
        ],
        [
            "Theorem minus_minus : forall a b c : nat, a - b - c = a - (b + c).",
            "VernacStartTheoremProof",
            "cf57f94fdd030e177c88a01660871de0202348e7"
        ],
        [
            "intros a; elim a; auto.",
            "VernacExtend",
            "27162536c2e21ba0bf8c1d25b010158dca208952"
        ],
        [
            "intros n' Hrec b; case b; auto.",
            "VernacExtend",
            "6a064ee727f586270960daafb6aad0a4bf332746"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark expand_mult2 : forall x : nat, 2 * x = x + x.",
            "VernacStartTheoremProof",
            "965e4cbdea2ce879ebd39072c15ee123215818b1"
        ],
        [
            "intros x; ring.",
            "VernacExtend",
            "3bc65f23ddd7c3788f17a6c6d241d358f6188d00"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lt_neq : forall x y : nat, x < y -> x <> y.",
            "VernacStartTheoremProof",
            "34124fdf56ff8a4f19d9cb5d12d2fc229c00b278"
        ],
        [
            "unfold not in |- *; intros x y H H1; elim (lt_irrefl x); pattern x at 2 in |- *; rewrite H1; auto.",
            "VernacExtend",
            "522faab6e77223c296e37301b25a86e41e8a6c48"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve lt_neq.",
            "VernacHints",
            "c5e63a0f66d1f3ffa52473aa6b6ceac9a33b2909"
        ],
        [
            "Theorem monotonic_inverse : forall f : nat -> nat, (forall x y : nat, x < y -> f x < f y) -> forall x y : nat, f x < f y -> x < y.",
            "VernacStartTheoremProof",
            "b50ea79b52dee8d0540e0f1caf00ad96a8d00635"
        ],
        [
            "intros f Hmon x y Hlt; case (le_gt_dec y x); auto.",
            "VernacExtend",
            "3911d093c8e9115e773a0d579bd536e9d531134d"
        ],
        [
            "intros Hle; elim (le_lt_or_eq _ _ Hle).",
            "VernacExtend",
            "f62821c16dcc36648a52e814f9bec0c2bfdd5963"
        ],
        [
            "intros Hlt'; elim (lt_asym _ _ Hlt); apply Hmon; auto.",
            "VernacExtend",
            "7ae37de1512ea4db003825a8fc94b47fabd6b7d6"
        ],
        [
            "intros Heq; elim (lt_neq _ _ Hlt); rewrite Heq; auto.",
            "VernacExtend",
            "ab91f1215d279077a4c748375e96714aad251052"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mult_lt : forall a b c : nat, c <> 0 -> a < b -> a * c < b * c.",
            "VernacStartTheoremProof",
            "942b488d233b1463d0c0c40db96ac91cbb832678"
        ],
        [
            "intros a b c; elim c.",
            "VernacExtend",
            "04b3be775a4384692c0a0103c08be2d51389256b"
        ],
        [
            "intros H; elim H; auto.",
            "VernacExtend",
            "c158e4bfc9cdce92a9dfc7537b5eda1a747af971"
        ],
        [
            "intros c'; case c'.",
            "VernacExtend",
            "bbc10b934efb69e10cc663a6cfd1e10b4e928fb9"
        ],
        [
            "intros; omega.",
            "VernacExtend",
            "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
        ],
        [
            "intros c'' Hrec Hneq Hlt; repeat rewrite <- (fun x : nat => mult_n_Sm x (S c'')).",
            "VernacExtend",
            "ec87d1dbcf488546fa18f743597b6d4cd091d2de"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark add_sub_square_identity : forall a b : nat, (b + a - b) * (b + a - b) = (b + a) * (b + a) + b * b - 2 * ((b + a) * b).",
            "VernacStartTheoremProof",
            "66b71bfa842ad7f6a52e718e0014ef30ea0c900a"
        ],
        [
            "intros a b; rewrite minus_plus.",
            "VernacExtend",
            "7058d333898464c76a913f13170f7c0745e36a86"
        ],
        [
            "repeat rewrite mult_plus_distr_r || rewrite <- (mult_comm (b + a)).",
            "VernacExtend",
            "3130412157cbf85ab185883daf6e6de67ef90074"
        ],
        [
            "replace (b * b + a * b + (b * a + a * a) + b * b) with (b * b + a * b + (b * b + a * b + a * a)); try (ring; fail).",
            "VernacExtend",
            "aab5d4a759ede72b4f1fb653fefd019832918a43"
        ],
        [
            "rewrite expand_mult2; repeat rewrite minus_plus; auto with *.",
            "VernacExtend",
            "2c6758109a8690aea28cee02241a245e90eda97d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem sub_square_identity : forall a b : nat, b <= a -> (a - b) * (a - b) = a * a + b * b - 2 * (a * b).",
            "VernacStartTheoremProof",
            "a1de8c7a07165a99ce2b40e5e0280d5df82976af"
        ],
        [
            "intros a b H; rewrite (le_plus_minus b a H); apply add_sub_square_identity.",
            "VernacExtend",
            "4bde3895b22c88b0d8ae2933bc240555b9bdad54"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem square_monotonic : forall x y : nat, x < y -> x * x < y * y.",
            "VernacStartTheoremProof",
            "4bda8f5bc38f95c62c939e654199c2d5a67ef0f0"
        ],
        [
            "intros x; case x.",
            "VernacExtend",
            "97a0ca33fd0f432bab2f85e04107454f03f2dc1c"
        ],
        [
            "intros y; case y; simpl in |- *; auto with *.",
            "VernacExtend",
            "f2bf55272e1ceb1744cb2e039db3a38b4b5ac0b2"
        ],
        [
            "intros x' y Hlt; apply lt_trans with (S x' * y).",
            "VernacExtend",
            "2b8f12a72987f0afacc271bf737496e7e18cec22"
        ],
        [
            "rewrite (mult_comm (S x') y); apply mult_lt; auto.",
            "VernacExtend",
            "f5642f25d734c3ccce68147f22e85148c295858c"
        ],
        [
            "apply mult_lt; omega.",
            "VernacExtend",
            "a7ddd29a48f4ae0232b0637dc8552732d97f5bbd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem root_monotonic : forall x y : nat, x * x < y * y -> x < y.",
            "VernacStartTheoremProof",
            "05b56f7a472bfeafbc577d373c30878e674985c6"
        ],
        [
            "exact (monotonic_inverse (fun x : nat => x * x) square_monotonic).",
            "VernacExtend",
            "d589fb82fef898cdfe80e25009862c353e7b8781"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark square_recompose : forall x y : nat, x * y * (x * y) = x * x * (y * y).",
            "VernacStartTheoremProof",
            "02be30f36ecf500c0263a052b0ec8f1dcda828c9"
        ],
        [
            "intros; ring.",
            "VernacExtend",
            "a0e0ba17c737405b1d4c2a120d3717441df76616"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark mult2_recompose : forall x y : nat, x * (2 * y) = x * 2 * y.",
            "VernacStartTheoremProof",
            "1adba8a18eb50172c5b08e3c9040fbb59fa74f01"
        ],
        [
            "intros; ring.",
            "VernacExtend",
            "a0e0ba17c737405b1d4c2a120d3717441df76616"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section sqrt2_decrease.",
            "VernacBeginSection",
            "b123727a140d5ca0a376ba00141dd0e044f6fc36"
        ],
        [
            "Variables (p q : nat) (pos_q : 0 < q) (hyp_sqrt : p * p = 2 * (q * q)).",
            "VernacAssumption",
            "8d76d06d611a6825c38e8d9962f722f34af25c45"
        ],
        [
            "Theorem sqrt_q_non_zero : 0 <> q * q.",
            "VernacStartTheoremProof",
            "d9c033ebcf4f57a4c869f8820a77763da56886d2"
        ],
        [
            "generalize pos_q; case q.",
            "VernacExtend",
            "f767bdbcf4acefe94d1e663959616eb1773c940a"
        ],
        [
            "intros H; elim (lt_n_O 0); auto.",
            "VernacExtend",
            "c5501a8e1074c89acea77123d8a2bbf1f32e6426"
        ],
        [
            "intros n H.",
            "VernacExtend",
            "348ce37d2f619b733a523bd998a06fecedcf3fc4"
        ],
        [
            "simpl in |- *; discriminate.",
            "VernacExtend",
            "9dea1f72a06b14c6c8d474136b2ccda560957ee1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve sqrt_q_non_zero.",
            "VernacHints",
            "af56e2e710f7ac60c5c4092a5ba03526e53020ef"
        ],
        [
            "Ltac solve_comparison := apply root_monotonic; repeat rewrite square_recompose; rewrite hyp_sqrt; rewrite mult2_recompose; apply mult_lt; auto with arith.",
            "VernacExtend",
            "16076e43bcdf78d4b4fd81d9f10b60c71fc1c2fc"
        ],
        [
            "Theorem comparison1 : q < p.",
            "VernacStartTheoremProof",
            "06af6330786f5397ee71592235756c65c4c6eb3a"
        ],
        [
            "replace q with (1 * q); try ring.",
            "VernacExtend",
            "19123e4ad5c6be764244450aa23194063a2faebc"
        ],
        [
            "replace p with (1 * p); try ring.",
            "VernacExtend",
            "0cab99d59288e665a957a5b4dfba7aa2fb3ab11e"
        ],
        [
            "solve_comparison.",
            "VernacExtend",
            "833149df83bcb45778114aae7d6b2a9b178e8820"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem comparison2 : 2 * p < 3 * q.",
            "VernacStartTheoremProof",
            "cd91e23bc2d2564325ac50ec83c943577673511d"
        ],
        [
            "solve_comparison.",
            "VernacExtend",
            "833149df83bcb45778114aae7d6b2a9b178e8820"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem comparison3 : 4 * q < 3 * p.",
            "VernacStartTheoremProof",
            "aaa60f0b0bfc5707aa20ef1f29c6e83df8843d15"
        ],
        [
            "solve_comparison.",
            "VernacExtend",
            "833149df83bcb45778114aae7d6b2a9b178e8820"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve comparison1 comparison2 comparison3: arith.",
            "VernacHints",
            "7bffe5bd7b0b854216d0a943fa6fae49f3f176b1"
        ],
        [
            "Theorem comparison4 : 3 * q - 2 * p < q.",
            "VernacStartTheoremProof",
            "eb0a95745bef631b93438d3a9ff0bea172e04b24"
        ],
        [
            "apply plus_lt_reg_l with (2 * p).",
            "VernacExtend",
            "cbbfaae8e743c4c509b9a79a2ad54bef0d6cb1d3"
        ],
        [
            "rewrite <- le_plus_minus; try (simple apply lt_le_weak; auto with arith).",
            "VernacExtend",
            "ad0281b8df0a264ae4bc86729c136af6fc3841d4"
        ],
        [
            "replace (3 * q) with (2 * q + q); try ring.",
            "VernacExtend",
            "dc85bca6b8273358408f8bc1aed7e0d06dbf6bba"
        ],
        [
            "apply plus_lt_le_compat; auto.",
            "VernacExtend",
            "3404c7f3a5c3843683a981c0f2465b6e4501c815"
        ],
        [
            "repeat rewrite (mult_comm 2); apply mult_lt; auto with arith.",
            "VernacExtend",
            "45dd0ece39fb9195caa50e32693b2595d08ca5be"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark mult_minus_distr_l : forall a b c : nat, a * (b - c) = a * b - a * c.",
            "VernacStartTheoremProof",
            "5fc09f2447265cc7198207fb9e58b343d3dfd4e3"
        ],
        [
            "intros a b c; repeat rewrite (mult_comm a); apply mult_minus_distr_r.",
            "VernacExtend",
            "91c306ed426f772d1146b0b2fbe6f6b98d473fce"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark minus_eq_decompose : forall a b c d : nat, a = b -> c = d -> a - c = b - d.",
            "VernacStartTheoremProof",
            "ee3d478362ef4f7245d1a4e841aa02501f87c517"
        ],
        [
            "intros a b c d H H0; rewrite H; rewrite H0; auto.",
            "VernacExtend",
            "ee577e167e6d0c447769eaacffe6f57637b5db4f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem new_equality : (3 * p - 4 * q) * (3 * p - 4 * q) = 2 * ((3 * q - 2 * p) * (3 * q - 2 * p)).",
            "VernacStartTheoremProof",
            "25120b03ed2ccfc3ae01ea07484a312c40b403e9"
        ],
        [
            "repeat rewrite sub_square_identity; auto with arith.",
            "VernacExtend",
            "87df08c41990dfe148ea4808d6052212f6f01c89"
        ],
        [
            "repeat rewrite square_recompose; rewrite mult_minus_distr_l.",
            "VernacExtend",
            "835c6affcb689785a4f34d57ceda1206e21526c3"
        ],
        [
            "apply minus_eq_decompose; try rewrite hyp_sqrt; ring.",
            "VernacExtend",
            "e815d3b4f76be7b82585ea35f03ee610d108070a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End sqrt2_decrease.",
            "VernacEndSegment",
            "a63b5cfd6f703e4558a7229db4e53bd1da93874f"
        ],
        [
            "Hint Resolve lt_le_weak comparison2: sqrt.",
            "VernacHints",
            "b8d56c368a18b0e34b85c7ad3f592bcbcf3a4798"
        ],
        [
            "Theorem sqrt2_not_rational : forall p q : nat, q <> 0 -> p * p = 2 * (q * q) -> False.",
            "VernacStartTheoremProof",
            "786a7b292d5abef27c1c86e998aadd7a8200daaf"
        ],
        [
            "intros p q; generalize p; clear p; elim q using (well_founded_ind lt_wf).",
            "VernacExtend",
            "232d35bce25c25148aaf79cca2f49169e78c5983"
        ],
        [
            "clear q; intros q Hrec p Hneq; generalize (neq_O_lt _ (sym_not_equal Hneq)); intros Hlt_O_q Heq.",
            "VernacExtend",
            "f7444473eec002f664bc752f91910559e04a7097"
        ],
        [
            "apply (Hrec (3 * q - 2 * p) (comparison4 _ _ Hlt_O_q Heq) (3 * p - 4 * q)).",
            "VernacExtend",
            "dc72002bc701103d0fec07a614ed9ccf8de09846"
        ],
        [
            "apply sym_not_equal; apply lt_neq; apply plus_lt_reg_l with (2 * p); rewrite <- plus_n_O; rewrite <- le_plus_minus; auto with *.",
            "VernacExtend",
            "718741e5892db8357642d01b7de86251ca3ea71d"
        ],
        [
            "apply new_equality; auto.",
            "VernacExtend",
            "1ae23f3d022653afe9a85b594a6af775fbef1c53"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "minus_minus",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros a; elim a; auto.",
                        "VernacExtend",
                        "27162536c2e21ba0bf8c1d25b010158dca208952"
                    ]
                },
                {
                    "command": [
                        "intros n' Hrec b; case b; auto.",
                        "VernacExtend",
                        "6a064ee727f586270960daafb6aad0a4bf332746"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expand_mult2",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "intros x; ring.",
                        "VernacExtend",
                        "3bc65f23ddd7c3788f17a6c6d241d358f6188d00"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_neq",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "unfold not in |- *; intros x y H H1; elim (lt_irrefl x); pattern x at 2 in |- *; rewrite H1; auto.",
                        "VernacExtend",
                        "522faab6e77223c296e37301b25a86e41e8a6c48"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "monotonic_inverse",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "intros f Hmon x y Hlt; case (le_gt_dec y x); auto.",
                        "VernacExtend",
                        "3911d093c8e9115e773a0d579bd536e9d531134d"
                    ]
                },
                {
                    "command": [
                        "intros Hle; elim (le_lt_or_eq _ _ Hle).",
                        "VernacExtend",
                        "f62821c16dcc36648a52e814f9bec0c2bfdd5963"
                    ]
                },
                {
                    "command": [
                        "intros Hlt'; elim (lt_asym _ _ Hlt); apply Hmon; auto.",
                        "VernacExtend",
                        "7ae37de1512ea4db003825a8fc94b47fabd6b7d6"
                    ]
                },
                {
                    "command": [
                        "intros Heq; elim (lt_neq _ _ Hlt); rewrite Heq; auto.",
                        "VernacExtend",
                        "ab91f1215d279077a4c748375e96714aad251052"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mult_lt",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "intros a b c; elim c.",
                        "VernacExtend",
                        "04b3be775a4384692c0a0103c08be2d51389256b"
                    ]
                },
                {
                    "command": [
                        "intros H; elim H; auto.",
                        "VernacExtend",
                        "c158e4bfc9cdce92a9dfc7537b5eda1a747af971"
                    ]
                },
                {
                    "command": [
                        "intros c'; case c'.",
                        "VernacExtend",
                        "bbc10b934efb69e10cc663a6cfd1e10b4e928fb9"
                    ]
                },
                {
                    "command": [
                        "intros; omega.",
                        "VernacExtend",
                        "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
                    ]
                },
                {
                    "command": [
                        "intros c'' Hrec Hneq Hlt; repeat rewrite <- (fun x : nat => mult_n_Sm x (S c'')).",
                        "VernacExtend",
                        "ec87d1dbcf488546fa18f743597b6d4cd091d2de"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_sub_square_identity",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "intros a b; rewrite minus_plus.",
                        "VernacExtend",
                        "7058d333898464c76a913f13170f7c0745e36a86"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite mult_plus_distr_r || rewrite <- (mult_comm (b + a)).",
                        "VernacExtend",
                        "3130412157cbf85ab185883daf6e6de67ef90074"
                    ]
                },
                {
                    "command": [
                        "replace (b * b + a * b + (b * a + a * a) + b * b) with (b * b + a * b + (b * b + a * b + a * a)); try (ring; fail).",
                        "VernacExtend",
                        "aab5d4a759ede72b4f1fb653fefd019832918a43"
                    ]
                },
                {
                    "command": [
                        "rewrite expand_mult2; repeat rewrite minus_plus; auto with *.",
                        "VernacExtend",
                        "2c6758109a8690aea28cee02241a245e90eda97d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_square_identity",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "intros a b H; rewrite (le_plus_minus b a H); apply add_sub_square_identity.",
                        "VernacExtend",
                        "4bde3895b22c88b0d8ae2933bc240555b9bdad54"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "square_monotonic",
            "line_nb": 39,
            "steps": [
                {
                    "command": [
                        "intros x; case x.",
                        "VernacExtend",
                        "97a0ca33fd0f432bab2f85e04107454f03f2dc1c"
                    ]
                },
                {
                    "command": [
                        "intros y; case y; simpl in |- *; auto with *.",
                        "VernacExtend",
                        "f2bf55272e1ceb1744cb2e039db3a38b4b5ac0b2"
                    ]
                },
                {
                    "command": [
                        "intros x' y Hlt; apply lt_trans with (S x' * y).",
                        "VernacExtend",
                        "2b8f12a72987f0afacc271bf737496e7e18cec22"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_comm (S x') y); apply mult_lt; auto.",
                        "VernacExtend",
                        "f5642f25d734c3ccce68147f22e85148c295858c"
                    ]
                },
                {
                    "command": [
                        "apply mult_lt; omega.",
                        "VernacExtend",
                        "a7ddd29a48f4ae0232b0637dc8552732d97f5bbd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "root_monotonic",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "exact (monotonic_inverse (fun x : nat => x * x) square_monotonic).",
                        "VernacExtend",
                        "d589fb82fef898cdfe80e25009862c353e7b8781"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "square_recompose",
            "line_nb": 49,
            "steps": [
                {
                    "command": [
                        "intros; ring.",
                        "VernacExtend",
                        "a0e0ba17c737405b1d4c2a120d3717441df76616"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mult2_recompose",
            "line_nb": 52,
            "steps": [
                {
                    "command": [
                        "intros; ring.",
                        "VernacExtend",
                        "a0e0ba17c737405b1d4c2a120d3717441df76616"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrt_q_non_zero",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "generalize pos_q; case q.",
                        "VernacExtend",
                        "f767bdbcf4acefe94d1e663959616eb1773c940a"
                    ]
                },
                {
                    "command": [
                        "intros H; elim (lt_n_O 0); auto.",
                        "VernacExtend",
                        "c5501a8e1074c89acea77123d8a2bbf1f32e6426"
                    ]
                },
                {
                    "command": [
                        "intros n H.",
                        "VernacExtend",
                        "348ce37d2f619b733a523bd998a06fecedcf3fc4"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; discriminate.",
                        "VernacExtend",
                        "9dea1f72a06b14c6c8d474136b2ccda560957ee1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comparison1",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "replace q with (1 * q); try ring.",
                        "VernacExtend",
                        "19123e4ad5c6be764244450aa23194063a2faebc"
                    ]
                },
                {
                    "command": [
                        "replace p with (1 * p); try ring.",
                        "VernacExtend",
                        "0cab99d59288e665a957a5b4dfba7aa2fb3ab11e"
                    ]
                },
                {
                    "command": [
                        "solve_comparison.",
                        "VernacExtend",
                        "833149df83bcb45778114aae7d6b2a9b178e8820"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comparison2",
            "line_nb": 70,
            "steps": [
                {
                    "command": [
                        "solve_comparison.",
                        "VernacExtend",
                        "833149df83bcb45778114aae7d6b2a9b178e8820"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comparison3",
            "line_nb": 73,
            "steps": [
                {
                    "command": [
                        "solve_comparison.",
                        "VernacExtend",
                        "833149df83bcb45778114aae7d6b2a9b178e8820"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comparison4",
            "line_nb": 77,
            "steps": [
                {
                    "command": [
                        "apply plus_lt_reg_l with (2 * p).",
                        "VernacExtend",
                        "cbbfaae8e743c4c509b9a79a2ad54bef0d6cb1d3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- le_plus_minus; try (simple apply lt_le_weak; auto with arith).",
                        "VernacExtend",
                        "ad0281b8df0a264ae4bc86729c136af6fc3841d4"
                    ]
                },
                {
                    "command": [
                        "replace (3 * q) with (2 * q + q); try ring.",
                        "VernacExtend",
                        "dc85bca6b8273358408f8bc1aed7e0d06dbf6bba"
                    ]
                },
                {
                    "command": [
                        "apply plus_lt_le_compat; auto.",
                        "VernacExtend",
                        "3404c7f3a5c3843683a981c0f2465b6e4501c815"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite (mult_comm 2); apply mult_lt; auto with arith.",
                        "VernacExtend",
                        "45dd0ece39fb9195caa50e32693b2595d08ca5be"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mult_minus_distr_l",
            "line_nb": 84,
            "steps": [
                {
                    "command": [
                        "intros a b c; repeat rewrite (mult_comm a); apply mult_minus_distr_r.",
                        "VernacExtend",
                        "91c306ed426f772d1146b0b2fbe6f6b98d473fce"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "minus_eq_decompose",
            "line_nb": 87,
            "steps": [
                {
                    "command": [
                        "intros a b c d H H0; rewrite H; rewrite H0; auto.",
                        "VernacExtend",
                        "ee577e167e6d0c447769eaacffe6f57637b5db4f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "new_equality",
            "line_nb": 90,
            "steps": [
                {
                    "command": [
                        "repeat rewrite sub_square_identity; auto with arith.",
                        "VernacExtend",
                        "87df08c41990dfe148ea4808d6052212f6f01c89"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite square_recompose; rewrite mult_minus_distr_l.",
                        "VernacExtend",
                        "835c6affcb689785a4f34d57ceda1206e21526c3"
                    ]
                },
                {
                    "command": [
                        "apply minus_eq_decompose; try rewrite hyp_sqrt; ring.",
                        "VernacExtend",
                        "e815d3b4f76be7b82585ea35f03ee610d108070a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrt2_not_rational",
            "line_nb": 97,
            "steps": [
                {
                    "command": [
                        "intros p q; generalize p; clear p; elim q using (well_founded_ind lt_wf).",
                        "VernacExtend",
                        "232d35bce25c25148aaf79cca2f49169e78c5983"
                    ]
                },
                {
                    "command": [
                        "clear q; intros q Hrec p Hneq; generalize (neq_O_lt _ (sym_not_equal Hneq)); intros Hlt_O_q Heq.",
                        "VernacExtend",
                        "f7444473eec002f664bc752f91910559e04a7097"
                    ]
                },
                {
                    "command": [
                        "apply (Hrec (3 * q - 2 * p) (comparison4 _ _ Hlt_O_q Heq) (3 * p - 4 * q)).",
                        "VernacExtend",
                        "dc72002bc701103d0fec07a614ed9ccf8de09846"
                    ]
                },
                {
                    "command": [
                        "apply sym_not_equal; apply lt_neq; apply plus_lt_reg_l with (2 * p); rewrite <- plus_n_O; rewrite <- le_plus_minus; auto with *.",
                        "VernacExtend",
                        "718741e5892db8357642d01b7de86251ca3ea71d"
                    ]
                },
                {
                    "command": [
                        "apply new_equality; auto.",
                        "VernacExtend",
                        "1ae23f3d022653afe9a85b594a6af775fbef1c53"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}