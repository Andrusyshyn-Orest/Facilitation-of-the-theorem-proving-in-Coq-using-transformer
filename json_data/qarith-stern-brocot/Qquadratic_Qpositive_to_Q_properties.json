{
    "filename": "Qquadratic_Qpositive_to_Q_properties.v",
    "coq_project": "qarith-stern-brocot",
    "vernac_cmds": [
        [
            "Require Import FunInd.",
            "VernacRequire",
            "1f538423fd5f4dcde5fea5ac239a919904a47729"
        ],
        [
            "Require Export Qquadratic.",
            "VernacRequire",
            "43d37e096b62db2babc69f30c82865ca6e9ac75c"
        ],
        [
            "Require Import homographic_correctness.",
            "VernacRequire",
            "4adba85ce938b1057a696fa81aab838594fa5cde"
        ],
        [
            "Lemma fraction_encoding_reduces : forall (a b m n : Z) (Hb : b <> 0%Z) (Hn : n <> 0%Z), (a * n)%Z = (m * b)%Z -> fraction_encoding a b Hb = fraction_encoding m n Hn.",
            "VernacStartTheoremProof",
            "6a40a9c13530e12e919f242a69e35bd43e56cd03"
        ],
        [
            "intros a b m n Hb Hn H.",
            "VernacExtend",
            "bff782480316e67aa601e95e6e066e9d6287dda1"
        ],
        [
            "do 2 rewrite coding_Q.",
            "VernacExtend",
            "8c611c710c70d199b445762678350ac97e01c2f5"
        ],
        [
            "unfold spec_fraction_encoding in |- *.",
            "VernacExtend",
            "a10f180b77b0d85024b0db14a23d70222937e961"
        ],
        [
            "rewrite (Qdiv_num_denom a b n).",
            "VernacExtend",
            "a8ae297b31bd5e91c7f690b78609fe67ff35f0be"
        ],
        [
            "rewrite <- Z_to_Qmult.",
            "VernacExtend",
            "e205af82508b54735da3243730685f14f3ba2edc"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "rewrite Z_to_Qmult.",
            "VernacExtend",
            "0e133f275be266824e5285f154425509ae30037d"
        ],
        [
            "rewrite (Qmult_sym b n).",
            "VernacExtend",
            "fecdd2e67fe4904c3744358a1f64f87a6d50fd6a"
        ],
        [
            "rewrite <- Qdiv_num_denom.",
            "VernacExtend",
            "571de2535854dbcf310956fd74283d7e707a6118"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "replace Zero with (Z_to_Q 0); trivial; apply Z_to_Q_not_eq; assumption.",
            "VernacExtend",
            "72efdb1b82b527a5ada9344ba77466f21a91c36f"
        ],
        [
            "replace Zero with (Z_to_Q 0); trivial; apply Z_to_Q_not_eq; assumption.",
            "VernacExtend",
            "72efdb1b82b527a5ada9344ba77466f21a91c36f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Functional Scheme Qquadratic_Qpositive_to_Q_ind := Induction for Qquadratic_Qpositive_to_Q Sort Prop.",
            "VernacExtend",
            "d82c8a9b25555e8cd24ee14fbfab80e534d25aa1"
        ],
        [
            "Lemma Qquadratic_Qpositive_to_Q_0 : forall (a b c d e f g h : Z) (p1 p2 : Qpositive) (H_Qquadratic_sg_denom_nonzero : Qquadratic_sg_denom_nonzero e f g h p1 p2) (Hh : h <> 0%Z), same_ratio a b c d e f g h -> Qquadratic_Qpositive_to_Q a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero = fraction_encoding d h Hh.",
            "VernacStartTheoremProof",
            "9dce195b3b734190c60f77dce6df23184f8d99fb"
        ],
        [
            "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero.",
            "VernacExtend",
            "2e7166c818bb4e327b33c2321399d13522a674d1"
        ],
        [
            "functional induction (Qquadratic_Qpositive_to_Q a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero); intros; try solve [ Falsum ]; match goal with [ id:same_ratio _ _ _ _ _ _ _ _ |- _] => elim id; intros h1 (h2, (h3, (h4, (h5, h6)))); apply fraction_encoding_reduces; trivial end.",
            "VernacExtend",
            "bd7f7d042d5d938d13928aca3052869b24483343"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qquadratic_Qpositive_to_Q_1 : forall (a b c d e f g h : Z) (p1 p2 : Qpositive) (H_Qquadratic_sg_denom_nonzero : Qquadratic_sg_denom_nonzero e f g h p1 p2) (Hg : g <> 0%Z), same_ratio a b c d e f g h -> Qquadratic_Qpositive_to_Q a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero = fraction_encoding c g Hg.",
            "VernacStartTheoremProof",
            "25973847d6337d9b45fe616f90863e1d7dec4875"
        ],
        [
            "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero.",
            "VernacExtend",
            "2e7166c818bb4e327b33c2321399d13522a674d1"
        ],
        [
            "functional induction (Qquadratic_Qpositive_to_Q a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero); intros; try solve [ Falsum ]; match goal with [ id:same_ratio _ _ _ _ _ _ _ _ |- _] => elim id; intros h1 (h2, (h3, (h4, (h5, h6)))); apply fraction_encoding_reduces; trivial; symmetry in |- *; assumption end.",
            "VernacExtend",
            "9c657bba70552093bead5510bf87d293319449a3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qquadratic_Qpositive_to_Q_2 : forall (a b c d e f g h : Z) (p1 p2 : Qpositive) (H_Qquadratic_sg_denom_nonzero : Qquadratic_sg_denom_nonzero e f g h p1 p2) (Hf : f <> 0%Z), same_ratio a b c d e f g h -> Qquadratic_Qpositive_to_Q a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero = fraction_encoding b f Hf.",
            "VernacStartTheoremProof",
            "4602de8eda0d3a9040d3d2155f42e8cb9c2c8eca"
        ],
        [
            "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero.",
            "VernacExtend",
            "2e7166c818bb4e327b33c2321399d13522a674d1"
        ],
        [
            "functional induction (Qquadratic_Qpositive_to_Q a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero); intros; try solve [ Falsum ]; match goal with [ id:same_ratio _ _ _ _ _ _ _ _ |- _] => elim id; intros h1 (h2, (h3, (h4, (h5, h6)))); apply fraction_encoding_reduces; trivial; symmetry in |- *; assumption end.",
            "VernacExtend",
            "9c657bba70552093bead5510bf87d293319449a3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qquadratic_Qpositive_to_Q_3 : forall (a b c d e f g h : Z) (p1 p2 : Qpositive) (H_Qquadratic_sg_denom_nonzero : Qquadratic_sg_denom_nonzero e f g h p1 p2) (He : e <> 0%Z), same_ratio a b c d e f g h -> Qquadratic_Qpositive_to_Q a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero = fraction_encoding a e He.",
            "VernacStartTheoremProof",
            "aab41551f8c291223b0cf1c45ef1caf0bf85138b"
        ],
        [
            "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero.",
            "VernacExtend",
            "2e7166c818bb4e327b33c2321399d13522a674d1"
        ],
        [
            "functional induction (Qquadratic_Qpositive_to_Q a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero); intros; try solve [ Falsum ]; match goal with [ id:same_ratio _ _ _ _ _ _ _ _ |- _] => elim id; intros h1 (h2, (h3, (h4, (h5, h6)))); apply fraction_encoding_reduces; trivial; symmetry in |- *; assumption end.",
            "VernacExtend",
            "9c657bba70552093bead5510bf87d293319449a3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac QSign_mismatch_ := apply False_ind; match goal with | id1:(?X1 = 1%Z),id2:(?X1 = 0%Z) |- _ => rewrite id2 in id1; discriminate id1 | id1:(?X1 = (-1)%Z),id2:(?X1 = 0%Z) |- _ => rewrite id2 in id1; discriminate id1 | id1:(?X1 = 1%Z),id2:(?X1 = (-1)%Z) |- _ => rewrite id2 in id1; discriminate id1 | id2:(?X1 = 0%Z),id1:(?X1 = 1%Z) |- _ => rewrite id2 in id1; discriminate id1 | id1:(?X1 = 0%Z),id2:(?X1 = (-1)%Z) |- _ => rewrite id2 in id1; discriminate id1 | id1:(?X1 = (-1)%Z),id2:(?X1 = 1%Z) |- _ => rewrite id2 in id1; discriminate id1 end.",
            "VernacExtend",
            "b5d4f72b662696b8e45637d1f08c87dda79ed3fb"
        ],
        [
            "Ltac Absurd_q_sign_ := match goal with | id1:(q_sign ?X1 ?X2 ?X3 ?X4 ?X5 ?X6 ?X7 ?X8 ?X9 ?X10 ?X11 = ?X0),id2: (Z.sgn _ = 0%Z) |- _ => match constr:(X0) with | 0%Z => QSign_mismatch_ end || (apply False_ind; assert (HH : Qquadratic_sign X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 X11 = (X0, (qnew_a X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 X11, (qnew_b X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 X11, (qnew_c X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 X11, qnew_d X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 X11)), (qnew_e X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 X11, (qnew_f X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 X11, (qnew_g X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 X11, qnew_h X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 X11))), (qnew_p1 X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 X11, qnew_p2 X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 X11)))); [ rewrite <- id1; unfold qnew_a, qnew_b, qnew_c, qnew_d, qnew_e, qnew_f, qnew_g, qnew_h, qnew_p1, qnew_p2 in |- *; replace (q_sign X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 X11) with (fst (Qquadratic_sign X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 X11)); [ idtac | reflexivity ]; repeat rewrite <- pair_1; reflexivity | idtac ]; match constr:(X0) with | 1%Z => generalize (Qquadratic_sign_pos_1 X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 X11 (qnew_a X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 X11) (qnew_b X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 X11) (qnew_c X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 X11) (qnew_d X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 X11) (qnew_e X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 X11) (qnew_f X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 X11) (qnew_g X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 X11) (qnew_h X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 X11) (qnew_p1 X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 X11) (qnew_p2 X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 X11) HH) | (-1)%Z => generalize (Qquadratic_sign_neg_1 X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 X11 (qnew_a X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 X11) (qnew_b X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 X11) (qnew_c X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 X11) (qnew_d X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 X11) (qnew_e X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 X11) (qnew_f X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 X11) (qnew_g X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 X11) (qnew_h X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 X11) (qnew_p1 X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 X11) (qnew_p2 X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 X11) HH) end; intros [(na_nb_nc_nd_pos, _)| (na_nb_nc_nd_neg, _)]; generalize (Zsgn_2 _ id2); [ apply sym_not_eq | idtac ]; apply Zorder.Zlt_not_eq; assumption) end.",
            "VernacExtend",
            "5e1cf97b72634bd483e60218637a288570c26ca0"
        ],
        [
            "Lemma Qquadratic_Qpositive_to_Q_4 : forall (a b c d e f g h : Z) (p1 p2 : Qpositive) (H_Qquadratic_sg_denom_nonzero : Qquadratic_sg_denom_nonzero e f g h p1 p2), ~ same_ratio a b c d e f g h -> q_sign a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero = 0%Z -> Qquadratic_Qpositive_to_Q a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero = Zero.",
            "VernacStartTheoremProof",
            "c8acab750981f060d02c98dc4a5e4ae834e74e7c"
        ],
        [
            "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero.",
            "VernacExtend",
            "2e7166c818bb4e327b33c2321399d13522a674d1"
        ],
        [
            "functional induction (Qquadratic_Qpositive_to_Q a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero); intros; try solve [ Falsum ]; trivial;Clear_eq_; match goal with [ id1 : q_sign ?a ?b ?c ?d ?e ?f ?g ?h ?p1 ?p2 ?H_Qquadratic_sg_denom_nonzero = _, id2 : q_sign ?a ?b ?c ?d ?e ?f ?g ?h ?p1 ?p2 ?H_Qquadratic_sg_denom_nonzero = _ |- _ ] => rewrite id1 in id2;discriminate id2 end.",
            "VernacExtend",
            "ac6ea225de5928fd4364768d82fd45e75914130d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qquadratic_Qpositive_to_Q_5 : forall (a b c d e f g h : Z) (p1 p2 : Qpositive) (H_Qquadratic_sg_denom_nonzero : Qquadratic_sg_denom_nonzero e f g h p1 p2), ~ same_ratio a b c d e f g h -> q_sign a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero = 1%Z -> Z.sgn (qnew_a a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero + qnew_b a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero + qnew_c a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero + qnew_d a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) = 1%Z -> forall hyp_quadraticAcc : quadraticAcc (qnew_a a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_b a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_c a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_d a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_e a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_f a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_g a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_h a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_p1 a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_p2 a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero), Qquadratic_Qpositive_to_Q a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero = Qpos (Qquadratic_Qpositive_to_Qpositive (qnew_a a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_b a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_c a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_d a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_e a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_f a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_g a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_h a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_p1 a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_p2 a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) hyp_quadraticAcc).",
            "VernacStartTheoremProof",
            "dcb82773450f8c3b1d9691c2000617417a8fc195"
        ],
        [
            "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero.",
            "VernacExtend",
            "2e7166c818bb4e327b33c2321399d13522a674d1"
        ],
        [
            "functional induction (Qquadratic_Qpositive_to_Q a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero); intros; try solve [ Falsum ]; trivial; Clear_eq_; QSign_mismatch_ || apply f_equal with Qpositive; apply Qquadratic_Qpositive_to_Qpositive_equal.",
            "VernacExtend",
            "3a71e7a2e41e5ed7d6977b5ffb7eaaec36ca5267"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qquadratic_Qpositive_to_Q_6 : forall (a b c d e f g h : Z) (p1 p2 : Qpositive) (H_Qquadratic_sg_denom_nonzero : Qquadratic_sg_denom_nonzero e f g h p1 p2), ~ same_ratio a b c d e f g h -> q_sign a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero = 1%Z -> Z.sgn (qnew_a a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero + qnew_b a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero + qnew_c a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero + qnew_d a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) = (-1)%Z -> forall hyp_quadraticAcc : quadraticAcc (- qnew_a a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (- qnew_b a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (- qnew_c a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (- qnew_d a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (- qnew_e a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (- qnew_f a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (- qnew_g a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (- qnew_h a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_p1 a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_p2 a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero), Qquadratic_Qpositive_to_Q a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero = Qpos (Qquadratic_Qpositive_to_Qpositive (- qnew_a a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (- qnew_b a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (- qnew_c a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (- qnew_d a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (- qnew_e a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (- qnew_f a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (- qnew_g a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (- qnew_h a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_p1 a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_p2 a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) hyp_quadraticAcc).",
            "VernacStartTheoremProof",
            "036ae7a1a1a449650fe50b4470e6c1ab5dc5e28a"
        ],
        [
            "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero.",
            "VernacExtend",
            "2e7166c818bb4e327b33c2321399d13522a674d1"
        ],
        [
            "functional induction (Qquadratic_Qpositive_to_Q a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero); intros; try solve [ Falsum ]; trivial; Clear_eq_; QSign_mismatch_ || apply f_equal with Qpositive; apply Qquadratic_Qpositive_to_Qpositive_equal.",
            "VernacExtend",
            "3a71e7a2e41e5ed7d6977b5ffb7eaaec36ca5267"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qquadratic_Qpositive_to_Q_7 : forall (a b c d e f g h : Z) (p1 p2 : Qpositive) (H_Qquadratic_sg_denom_nonzero : Qquadratic_sg_denom_nonzero e f g h p1 p2), ~ same_ratio a b c d e f g h -> q_sign a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero = (-1)%Z -> Z.sgn (qnew_a a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero + qnew_b a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero + qnew_c a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero + qnew_d a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) = 1%Z -> forall hyp_quadraticAcc : quadraticAcc (qnew_a a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_b a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_c a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_d a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (- qnew_e a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (- qnew_f a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (- qnew_g a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (- qnew_h a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_p1 a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_p2 a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero), Qquadratic_Qpositive_to_Q a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero = Qneg (Qquadratic_Qpositive_to_Qpositive (qnew_a a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_b a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_c a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_d a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (- qnew_e a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (- qnew_f a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (- qnew_g a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (- qnew_h a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_p1 a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_p2 a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) hyp_quadraticAcc).",
            "VernacStartTheoremProof",
            "ec279c00c7c7b1ef5fb8555cde5387d18a86060e"
        ],
        [
            "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero.",
            "VernacExtend",
            "2e7166c818bb4e327b33c2321399d13522a674d1"
        ],
        [
            "functional induction (Qquadratic_Qpositive_to_Q a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero); intros; try solve [ Falsum ]; trivial; Clear_eq_; QSign_mismatch_ || apply f_equal with Qpositive; apply Qquadratic_Qpositive_to_Qpositive_equal.",
            "VernacExtend",
            "3a71e7a2e41e5ed7d6977b5ffb7eaaec36ca5267"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qquadratic_Qpositive_to_Q_8 : forall (a b c d e f g h : Z) (p1 p2 : Qpositive) (H_Qquadratic_sg_denom_nonzero : Qquadratic_sg_denom_nonzero e f g h p1 p2), ~ same_ratio a b c d e f g h -> q_sign a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero = (-1)%Z -> Z.sgn (qnew_a a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero + qnew_b a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero + qnew_c a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero + qnew_d a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) = (-1)%Z -> forall hyp_quadraticAcc : quadraticAcc (- qnew_a a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (- qnew_b a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (- qnew_c a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (- qnew_d a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_e a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_f a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_g a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_h a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_p1 a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_p2 a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero), Qquadratic_Qpositive_to_Q a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero = Qneg (Qquadratic_Qpositive_to_Qpositive (- qnew_a a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (- qnew_b a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (- qnew_c a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (- qnew_d a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_e a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_f a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_g a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_h a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_p1 a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) (qnew_p2 a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero) hyp_quadraticAcc).",
            "VernacStartTheoremProof",
            "89aa5697e80b64c68362e29c5b39d7c93a65ee98"
        ],
        [
            "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero.",
            "VernacExtend",
            "2e7166c818bb4e327b33c2321399d13522a674d1"
        ],
        [
            "functional induction (Qquadratic_Qpositive_to_Q a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero); intros; try solve [ Falsum ]; trivial; Clear_eq_; QSign_mismatch_ || apply f_equal with Qpositive; apply Qquadratic_Qpositive_to_Qpositive_equal.",
            "VernacExtend",
            "3a71e7a2e41e5ed7d6977b5ffb7eaaec36ca5267"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma q_sign_equal : forall (a b c d e f g h : Z) (p1 p2 : Qpositive) (H_Qquadratic_sg_denom_nonzero1 H_Qquadratic_sg_denom_nonzero2 : Qquadratic_sg_denom_nonzero e f g h p1 p2), q_sign a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1 = q_sign a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2.",
            "VernacStartTheoremProof",
            "56d2d977c4418df1415d23d92c213b3813593988"
        ],
        [
            "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1 H_Qquadratic_sg_denom_nonzero2; change (fst (Qquadratic_sign a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1) = fst (Qquadratic_sign a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2)) in |- *; apply f_equal with (Z * (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive)))%type; apply Qquadratic_sign_equal.",
            "VernacExtend",
            "1265a3c986641355507e2829fb12001c86ab854e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma qnew_a_equal : forall (a b c d e f g h : Z) (p1 p2 : Qpositive) (H_Qquadratic_sg_denom_nonzero1 H_Qquadratic_sg_denom_nonzero2 : Qquadratic_sg_denom_nonzero e f g h p1 p2), qnew_a a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1 = qnew_a a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2.",
            "VernacStartTheoremProof",
            "60a3cb3bb5b7c6aff88abf6f75ff940a9d996dbc"
        ],
        [
            "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1 H_Qquadratic_sg_denom_nonzero2; unfold qnew_a in |- *; apply f_equal with (Z * (Z * (Z * Z)))%type; apply f_equal with (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))))%type; apply f_equal with (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive))%type; apply f_equal with (Z * (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive)))%type; apply Qquadratic_sign_equal.",
            "VernacExtend",
            "eab1fc6d595c955f528cbef0bf190545ddb5d8b7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma qnew_b_equal : forall (a b c d e f g h : Z) (p1 p2 : Qpositive) (H_Qquadratic_sg_denom_nonzero1 H_Qquadratic_sg_denom_nonzero2 : Qquadratic_sg_denom_nonzero e f g h p1 p2), qnew_b a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1 = qnew_b a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2.",
            "VernacStartTheoremProof",
            "9047b6871810c65970fcaa82c9af91e3ba15fb11"
        ],
        [
            "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1 H_Qquadratic_sg_denom_nonzero2; unfold qnew_b in |- *; apply f_equal with (Z * (Z * Z))%type; apply f_equal with (Z * (Z * (Z * Z)))%type; apply f_equal with (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))))%type; apply f_equal with (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive))%type; apply f_equal with (Z * (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive)))%type; apply Qquadratic_sign_equal.",
            "VernacExtend",
            "cf42c39cf6dc599df621613ab4db6e0dd03cecea"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma qnew_c_equal : forall (a b c d e f g h : Z) (p1 p2 : Qpositive) (H_Qquadratic_sg_denom_nonzero1 H_Qquadratic_sg_denom_nonzero2 : Qquadratic_sg_denom_nonzero e f g h p1 p2), qnew_c a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1 = qnew_c a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2.",
            "VernacStartTheoremProof",
            "7c615076f541ab9771f0889896ba165a52bd5929"
        ],
        [
            "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1 H_Qquadratic_sg_denom_nonzero2; unfold qnew_c in |- *; apply f_equal with (Z * Z)%type; apply f_equal with (Z * (Z * Z))%type; apply f_equal with (Z * (Z * (Z * Z)))%type; apply f_equal with (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))))%type; apply f_equal with (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive))%type; apply f_equal with (Z * (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive)))%type; apply Qquadratic_sign_equal.",
            "VernacExtend",
            "2e10f3e1341a85e3beb7a755f031638c0f362fe8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma qnew_d_equal : forall (a b c d e f g h : Z) (p1 p2 : Qpositive) (H_Qquadratic_sg_denom_nonzero1 H_Qquadratic_sg_denom_nonzero2 : Qquadratic_sg_denom_nonzero e f g h p1 p2), qnew_d a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1 = qnew_d a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2.",
            "VernacStartTheoremProof",
            "91ab3086e832f1c6fcbf600e5101e07ef9865072"
        ],
        [
            "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1 H_Qquadratic_sg_denom_nonzero2; unfold qnew_d in |- *; apply f_equal with (Z * Z)%type; apply f_equal with (Z * (Z * Z))%type; apply f_equal with (Z * (Z * (Z * Z)))%type; apply f_equal with (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))))%type; apply f_equal with (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive))%type; apply f_equal with (Z * (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive)))%type; apply Qquadratic_sign_equal.",
            "VernacExtend",
            "19dda193d62d3504c1e8816b0e12a0a43dd7582f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma qnew_e_equal : forall (a b c d e f g h : Z) (p1 p2 : Qpositive) (H_Qquadratic_sg_denom_nonzero1 H_Qquadratic_sg_denom_nonzero2 : Qquadratic_sg_denom_nonzero e f g h p1 p2), qnew_e a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1 = qnew_e a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2.",
            "VernacStartTheoremProof",
            "084ce6c8476148e2885df3989cdc6a85e006f14a"
        ],
        [
            "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1 H_Qquadratic_sg_denom_nonzero2; unfold qnew_e in |- *; apply f_equal with (Z * (Z * (Z * Z)))%type; apply f_equal with (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))))%type; apply f_equal with (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive))%type; apply f_equal with (Z * (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive)))%type; apply Qquadratic_sign_equal.",
            "VernacExtend",
            "75e98f0e49e5fa17c06096533101064d0ad9d994"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma qnew_f_equal : forall (a b c d e f g h : Z) (p1 p2 : Qpositive) (H_Qquadratic_sg_denom_nonzero1 H_Qquadratic_sg_denom_nonzero2 : Qquadratic_sg_denom_nonzero e f g h p1 p2), qnew_f a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1 = qnew_f a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2.",
            "VernacStartTheoremProof",
            "14bb46b15263b9a5423cd0feb3bd96b6fcf04c28"
        ],
        [
            "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1 H_Qquadratic_sg_denom_nonzero2; unfold qnew_f in |- *; apply f_equal with (Z * (Z * Z))%type; apply f_equal with (Z * (Z * (Z * Z)))%type; apply f_equal with (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))))%type; apply f_equal with (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive))%type; apply f_equal with (Z * (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive)))%type; apply Qquadratic_sign_equal.",
            "VernacExtend",
            "5449617e4277f9706b7407ba38845b92b8c90c90"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma qnew_g_equal : forall (a b c d e f g h : Z) (p1 p2 : Qpositive) (H_Qquadratic_sg_denom_nonzero1 H_Qquadratic_sg_denom_nonzero2 : Qquadratic_sg_denom_nonzero e f g h p1 p2), qnew_g a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1 = qnew_g a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2.",
            "VernacStartTheoremProof",
            "f340475e70ba4592c71c6ef24d389e621bf03cae"
        ],
        [
            "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1 H_Qquadratic_sg_denom_nonzero2; unfold qnew_g in |- *; apply f_equal with (Z * Z)%type; apply f_equal with (Z * (Z * Z))%type; apply f_equal with (Z * (Z * (Z * Z)))%type; apply f_equal with (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))))%type; apply f_equal with (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive))%type; apply f_equal with (Z * (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive)))%type; apply Qquadratic_sign_equal.",
            "VernacExtend",
            "a35dfd0f7ae54853ce377e37e74b77402e1117fb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma qnew_h_equal : forall (a b c d e f g h : Z) (p1 p2 : Qpositive) (H_Qquadratic_sg_denom_nonzero1 H_Qquadratic_sg_denom_nonzero2 : Qquadratic_sg_denom_nonzero e f g h p1 p2), qnew_h a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1 = qnew_h a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2.",
            "VernacStartTheoremProof",
            "6c2af60b095bd7ae430ab6f1870a9ff36aa05b4a"
        ],
        [
            "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1 H_Qquadratic_sg_denom_nonzero2; unfold qnew_h in |- *; apply f_equal with (Z * Z)%type; apply f_equal with (Z * (Z * Z))%type; apply f_equal with (Z * (Z * (Z * Z)))%type; apply f_equal with (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))))%type; apply f_equal with (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive))%type; apply f_equal with (Z * (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive)))%type; apply Qquadratic_sign_equal.",
            "VernacExtend",
            "6a13358e221391872c9b5c5481bd167a51feeaad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma qnew_p1_equal : forall (a b c d e f g h : Z) (p1 p2 : Qpositive) (H_Qquadratic_sg_denom_nonzero1 H_Qquadratic_sg_denom_nonzero2 : Qquadratic_sg_denom_nonzero e f g h p1 p2), qnew_p1 a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1 = qnew_p1 a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2.",
            "VernacStartTheoremProof",
            "f76f29753772838a1c7b88e4235588d2fbca5e8e"
        ],
        [
            "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1 H_Qquadratic_sg_denom_nonzero2; unfold qnew_p1 in |- *; apply f_equal with (Qpositive * Qpositive)%type; apply f_equal with (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive))%type; apply f_equal with (Z * (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive)))%type; apply Qquadratic_sign_equal.",
            "VernacExtend",
            "5652b8d1a087a56d2473236f93b88f5de6a4f99e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma qnew_p2_equal : forall (a b c d e f g h : Z) (p1 p2 : Qpositive) (H_Qquadratic_sg_denom_nonzero1 H_Qquadratic_sg_denom_nonzero2 : Qquadratic_sg_denom_nonzero e f g h p1 p2), qnew_p2 a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1 = qnew_p2 a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2.",
            "VernacStartTheoremProof",
            "3c7adf90b72788fead6c5b9d13dda9502053333a"
        ],
        [
            "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1 H_Qquadratic_sg_denom_nonzero2; unfold qnew_p2 in |- *; apply f_equal with (Qpositive * Qpositive)%type; apply f_equal with (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive))%type; apply f_equal with (Z * (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive)))%type; apply Qquadratic_sign_equal.",
            "VernacExtend",
            "7f327db17e5fdb8a4a1e51ace1846dc3d17a3057"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qquadratic_Qpositive_to_Q_equal : forall (a b c d e f g h : Z) (p1 p2 : Qpositive) (H_Qquadratic_sg_denom_nonzero1 H_Qquadratic_sg_denom_nonzero2 : Qquadratic_sg_denom_nonzero e f g h p1 p2), Qquadratic_Qpositive_to_Q a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1 = Qquadratic_Qpositive_to_Q a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2.",
            "VernacStartTheoremProof",
            "e0949be55ce5aa7334ff18792167fef7b52a700e"
        ],
        [
            "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1.",
            "VernacExtend",
            "c6da4dfefbd807f1fd313852ad23176f8dc3b839"
        ],
        [
            "functional induction (Qquadratic_Qpositive_to_Q a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1); intros; Clear_eq_.",
            "VernacExtend",
            "88251674996403e7f375261d329ad133d369a9ae"
        ],
        [
            "rewrite (Qquadratic_Qpositive_to_Q_3 _ _ _ _ _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 He _x); reflexivity.",
            "VernacExtend",
            "649973c7b2b78bdd4135a8ef6bdcd3e82b69fd8f"
        ],
        [
            "rewrite (Qquadratic_Qpositive_to_Q_2 _ _ _ _ _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 Hf _x); reflexivity.",
            "VernacExtend",
            "03a20a91f08486968ba08188b1a6db71cd8c6015"
        ],
        [
            "rewrite (Qquadratic_Qpositive_to_Q_1 _ _ _ _ _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 Hg _x); reflexivity.",
            "VernacExtend",
            "19c4380c7963463b5cfdc4686223eb36d43b5a95"
        ],
        [
            "rewrite (Qquadratic_Qpositive_to_Q_0 _ _ _ _ _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 Hh _x); reflexivity.",
            "VernacExtend",
            "3072922d632f3a918dde51bda510e2e0cffe3fa5"
        ],
        [
            "rewrite (q_sign_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero1 H_Qquadratic_sg_denom_nonzero2) in _x; rewrite (Qquadratic_Qpositive_to_Q_4 _ _ _ _ _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 not_same_ratio_abcdefgh _x) ; reflexivity.",
            "VernacExtend",
            "58629a4569512a04b73817a54185d9d25a803a20"
        ],
        [
            "Absurd_q_sign_.",
            "VernacExtend",
            "25c2fb71c4fe1ae8b68554701c460bb6606ee8e4"
        ],
        [
            "assert (H : Z.sgn (qnew_a a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2 + qnew_b a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2 + qnew_c a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2 + qnew_d a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2) = 1%Z).",
            "VernacExtend",
            "e6602319070d3f80b3562229f0157b2be853b965"
        ],
        [
            "rewrite (qnew_a_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1); rewrite (qnew_b_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1); rewrite (qnew_c_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1); rewrite (qnew_d_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1); assumption.",
            "VernacExtend",
            "6490bde5bb82e2eb7cf5822f81a0d51274f2520e"
        ],
        [
            "rewrite (Qquadratic_Qpositive_to_Q_5 _ _ _ _ _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 not_same_ratio_abcdefgh (trans_eq (q_sign_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1) l1_eq_one) H (Qquadratic_Qpositive_to_Q_quadraticAcc_pos_1 _ _ _ _ _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 not_same_ratio_abcdefgh (trans_eq (q_sign_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1) l1_eq_one) H)) ; apply f_equal with Qpositive; apply Qquadratic_Qpositive_to_Qpositive_equal_strong; [ apply qnew_a_equal | apply qnew_b_equal | apply qnew_c_equal | apply qnew_d_equal | apply qnew_e_equal | apply qnew_f_equal | apply qnew_g_equal | apply qnew_h_equal | apply qnew_p1_equal | apply qnew_p2_equal ].",
            "VernacExtend",
            "78befa5e2db88597a8148470524fa6f1dc71e1c1"
        ],
        [
            "assert (H : Z.sgn (qnew_a a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2 + qnew_b a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2 + qnew_c a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2 + qnew_d a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2) = (-1)%Z).",
            "VernacExtend",
            "afe1892769c49943be122d4bdfa6c4def5f2b728"
        ],
        [
            "rewrite (qnew_a_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1); rewrite (qnew_b_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1); rewrite (qnew_c_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1); rewrite (qnew_d_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1); assumption.",
            "VernacExtend",
            "6490bde5bb82e2eb7cf5822f81a0d51274f2520e"
        ],
        [
            "rewrite (Qquadratic_Qpositive_to_Q_6 _ _ _ _ _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 not_same_ratio_abcdefgh (trans_eq (q_sign_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1) l1_eq_one) H (Qquadratic_Qpositive_to_Q_quadraticAcc_pos_2 _ _ _ _ _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 not_same_ratio_abcdefgh (trans_eq (q_sign_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1) l1_eq_one) H)) .",
            "VernacExtend",
            "55cfa2242ba2a35f97444e61b455aec8994d8270"
        ],
        [
            "apply f_equal with Qpositive; apply Qquadratic_Qpositive_to_Qpositive_equal_strong; try apply f_equal with Z; [ apply qnew_a_equal | apply qnew_b_equal | apply qnew_c_equal | apply qnew_d_equal | apply qnew_e_equal | apply qnew_f_equal | apply qnew_g_equal | apply qnew_h_equal | apply qnew_p1_equal | apply qnew_p2_equal ].",
            "VernacExtend",
            "05b1be7054bd8f49d6853da9c87efd7499068e14"
        ],
        [
            "Absurd_q_sign_.",
            "VernacExtend",
            "25c2fb71c4fe1ae8b68554701c460bb6606ee8e4"
        ],
        [
            "assert (H : Z.sgn (qnew_a a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2 + qnew_b a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2 + qnew_c a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2 + qnew_d a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2) = 1%Z).",
            "VernacExtend",
            "e6602319070d3f80b3562229f0157b2be853b965"
        ],
        [
            "rewrite (qnew_a_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1); rewrite (qnew_b_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1); rewrite (qnew_c_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1); rewrite (qnew_d_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1); assumption.",
            "VernacExtend",
            "6490bde5bb82e2eb7cf5822f81a0d51274f2520e"
        ],
        [
            "rewrite (Qquadratic_Qpositive_to_Q_7 _ _ _ _ _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 not_same_ratio_abcdefgh (trans_eq (q_sign_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1) l1_eq_min_one) H (Qquadratic_Qpositive_to_Q_quadraticAcc_neg_1 _ _ _ _ _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 not_same_ratio_abcdefgh (trans_eq (q_sign_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1) l1_eq_min_one) H)) .",
            "VernacExtend",
            "43716eef8898da548fad6a94cee6bf5c4516a902"
        ],
        [
            "apply f_equal with Qpositive; apply Qquadratic_Qpositive_to_Qpositive_equal_strong; try apply f_equal with Z; [ apply qnew_a_equal | apply qnew_b_equal | apply qnew_c_equal | apply qnew_d_equal | apply qnew_e_equal | apply qnew_f_equal | apply qnew_g_equal | apply qnew_h_equal | apply qnew_p1_equal | apply qnew_p2_equal ].",
            "VernacExtend",
            "05b1be7054bd8f49d6853da9c87efd7499068e14"
        ],
        [
            "assert (H : Z.sgn (qnew_a a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2 + qnew_b a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2 + qnew_c a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2 + qnew_d a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2) = (-1)%Z).",
            "VernacExtend",
            "afe1892769c49943be122d4bdfa6c4def5f2b728"
        ],
        [
            "rewrite (qnew_a_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1); rewrite (qnew_b_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1); rewrite (qnew_c_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1); rewrite (qnew_d_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1); assumption.",
            "VernacExtend",
            "6490bde5bb82e2eb7cf5822f81a0d51274f2520e"
        ],
        [
            "rewrite (Qquadratic_Qpositive_to_Q_8 _ _ _ _ _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 not_same_ratio_abcdefgh (trans_eq (q_sign_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1) l1_eq_min_one) H (Qquadratic_Qpositive_to_Q_quadraticAcc_neg_2 _ _ _ _ _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 not_same_ratio_abcdefgh (trans_eq (q_sign_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1) l1_eq_min_one) H)) .",
            "VernacExtend",
            "f0c0a91ca28573e79558559d0ac2edd7c231d360"
        ],
        [
            "apply f_equal with Qpositive; apply Qquadratic_Qpositive_to_Qpositive_equal_strong; try apply f_equal with Z; [ apply qnew_a_equal | apply qnew_b_equal | apply qnew_c_equal | apply qnew_d_equal | apply qnew_e_equal | apply qnew_f_equal | apply qnew_g_equal | apply qnew_h_equal | apply qnew_p1_equal | apply qnew_p2_equal ].",
            "VernacExtend",
            "05b1be7054bd8f49d6853da9c87efd7499068e14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "fraction_encoding_reduces",
            "line_nb": 3,
            "steps": [
                {
                    "command": [
                        "intros a b m n Hb Hn H.",
                        "VernacExtend",
                        "bff782480316e67aa601e95e6e066e9d6287dda1"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite coding_Q.",
                        "VernacExtend",
                        "8c611c710c70d199b445762678350ac97e01c2f5"
                    ]
                },
                {
                    "command": [
                        "unfold spec_fraction_encoding in |- *.",
                        "VernacExtend",
                        "a10f180b77b0d85024b0db14a23d70222937e961"
                    ]
                },
                {
                    "command": [
                        "rewrite (Qdiv_num_denom a b n).",
                        "VernacExtend",
                        "a8ae297b31bd5e91c7f690b78609fe67ff35f0be"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z_to_Qmult.",
                        "VernacExtend",
                        "e205af82508b54735da3243730685f14f3ba2edc"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "rewrite Z_to_Qmult.",
                        "VernacExtend",
                        "0e133f275be266824e5285f154425509ae30037d"
                    ]
                },
                {
                    "command": [
                        "rewrite (Qmult_sym b n).",
                        "VernacExtend",
                        "fecdd2e67fe4904c3744358a1f64f87a6d50fd6a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Qdiv_num_denom.",
                        "VernacExtend",
                        "571de2535854dbcf310956fd74283d7e707a6118"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "replace Zero with (Z_to_Q 0); trivial; apply Z_to_Q_not_eq; assumption.",
                        "VernacExtend",
                        "72efdb1b82b527a5ada9344ba77466f21a91c36f"
                    ]
                },
                {
                    "command": [
                        "replace Zero with (Z_to_Q 0); trivial; apply Z_to_Q_not_eq; assumption.",
                        "VernacExtend",
                        "72efdb1b82b527a5ada9344ba77466f21a91c36f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qquadratic_Qpositive_to_Q_0",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero.",
                        "VernacExtend",
                        "2e7166c818bb4e327b33c2321399d13522a674d1"
                    ]
                },
                {
                    "command": [
                        "functional induction (Qquadratic_Qpositive_to_Q a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero); intros; try solve [ Falsum ]; match goal with [ id:same_ratio _ _ _ _ _ _ _ _ |- _] => elim id; intros h1 (h2, (h3, (h4, (h5, h6)))); apply fraction_encoding_reduces; trivial end.",
                        "VernacExtend",
                        "bd7f7d042d5d938d13928aca3052869b24483343"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qquadratic_Qpositive_to_Q_1",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero.",
                        "VernacExtend",
                        "2e7166c818bb4e327b33c2321399d13522a674d1"
                    ]
                },
                {
                    "command": [
                        "functional induction (Qquadratic_Qpositive_to_Q a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero); intros; try solve [ Falsum ]; match goal with [ id:same_ratio _ _ _ _ _ _ _ _ |- _] => elim id; intros h1 (h2, (h3, (h4, (h5, h6)))); apply fraction_encoding_reduces; trivial; symmetry in |- *; assumption end.",
                        "VernacExtend",
                        "9c657bba70552093bead5510bf87d293319449a3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qquadratic_Qpositive_to_Q_2",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero.",
                        "VernacExtend",
                        "2e7166c818bb4e327b33c2321399d13522a674d1"
                    ]
                },
                {
                    "command": [
                        "functional induction (Qquadratic_Qpositive_to_Q a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero); intros; try solve [ Falsum ]; match goal with [ id:same_ratio _ _ _ _ _ _ _ _ |- _] => elim id; intros h1 (h2, (h3, (h4, (h5, h6)))); apply fraction_encoding_reduces; trivial; symmetry in |- *; assumption end.",
                        "VernacExtend",
                        "9c657bba70552093bead5510bf87d293319449a3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qquadratic_Qpositive_to_Q_3",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero.",
                        "VernacExtend",
                        "2e7166c818bb4e327b33c2321399d13522a674d1"
                    ]
                },
                {
                    "command": [
                        "functional induction (Qquadratic_Qpositive_to_Q a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero); intros; try solve [ Falsum ]; match goal with [ id:same_ratio _ _ _ _ _ _ _ _ |- _] => elim id; intros h1 (h2, (h3, (h4, (h5, h6)))); apply fraction_encoding_reduces; trivial; symmetry in |- *; assumption end.",
                        "VernacExtend",
                        "9c657bba70552093bead5510bf87d293319449a3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qquadratic_Qpositive_to_Q_4",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero.",
                        "VernacExtend",
                        "2e7166c818bb4e327b33c2321399d13522a674d1"
                    ]
                },
                {
                    "command": [
                        "functional induction (Qquadratic_Qpositive_to_Q a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero); intros; try solve [ Falsum ]; trivial;Clear_eq_; match goal with [ id1 : q_sign ?a ?b ?c ?d ?e ?f ?g ?h ?p1 ?p2 ?H_Qquadratic_sg_denom_nonzero = _, id2 : q_sign ?a ?b ?c ?d ?e ?f ?g ?h ?p1 ?p2 ?H_Qquadratic_sg_denom_nonzero = _ |- _ ] => rewrite id1 in id2;discriminate id2 end.",
                        "VernacExtend",
                        "ac6ea225de5928fd4364768d82fd45e75914130d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qquadratic_Qpositive_to_Q_5",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero.",
                        "VernacExtend",
                        "2e7166c818bb4e327b33c2321399d13522a674d1"
                    ]
                },
                {
                    "command": [
                        "functional induction (Qquadratic_Qpositive_to_Q a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero); intros; try solve [ Falsum ]; trivial; Clear_eq_; QSign_mismatch_ || apply f_equal with Qpositive; apply Qquadratic_Qpositive_to_Qpositive_equal.",
                        "VernacExtend",
                        "3a71e7a2e41e5ed7d6977b5ffb7eaaec36ca5267"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qquadratic_Qpositive_to_Q_6",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero.",
                        "VernacExtend",
                        "2e7166c818bb4e327b33c2321399d13522a674d1"
                    ]
                },
                {
                    "command": [
                        "functional induction (Qquadratic_Qpositive_to_Q a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero); intros; try solve [ Falsum ]; trivial; Clear_eq_; QSign_mismatch_ || apply f_equal with Qpositive; apply Qquadratic_Qpositive_to_Qpositive_equal.",
                        "VernacExtend",
                        "3a71e7a2e41e5ed7d6977b5ffb7eaaec36ca5267"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qquadratic_Qpositive_to_Q_7",
            "line_nb": 48,
            "steps": [
                {
                    "command": [
                        "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero.",
                        "VernacExtend",
                        "2e7166c818bb4e327b33c2321399d13522a674d1"
                    ]
                },
                {
                    "command": [
                        "functional induction (Qquadratic_Qpositive_to_Q a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero); intros; try solve [ Falsum ]; trivial; Clear_eq_; QSign_mismatch_ || apply f_equal with Qpositive; apply Qquadratic_Qpositive_to_Qpositive_equal.",
                        "VernacExtend",
                        "3a71e7a2e41e5ed7d6977b5ffb7eaaec36ca5267"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qquadratic_Qpositive_to_Q_8",
            "line_nb": 52,
            "steps": [
                {
                    "command": [
                        "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero.",
                        "VernacExtend",
                        "2e7166c818bb4e327b33c2321399d13522a674d1"
                    ]
                },
                {
                    "command": [
                        "functional induction (Qquadratic_Qpositive_to_Q a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero); intros; try solve [ Falsum ]; trivial; Clear_eq_; QSign_mismatch_ || apply f_equal with Qpositive; apply Qquadratic_Qpositive_to_Qpositive_equal.",
                        "VernacExtend",
                        "3a71e7a2e41e5ed7d6977b5ffb7eaaec36ca5267"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "q_sign_equal",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1 H_Qquadratic_sg_denom_nonzero2; change (fst (Qquadratic_sign a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1) = fst (Qquadratic_sign a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2)) in |- *; apply f_equal with (Z * (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive)))%type; apply Qquadratic_sign_equal.",
                        "VernacExtend",
                        "1265a3c986641355507e2829fb12001c86ab854e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "qnew_a_equal",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1 H_Qquadratic_sg_denom_nonzero2; unfold qnew_a in |- *; apply f_equal with (Z * (Z * (Z * Z)))%type; apply f_equal with (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))))%type; apply f_equal with (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive))%type; apply f_equal with (Z * (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive)))%type; apply Qquadratic_sign_equal.",
                        "VernacExtend",
                        "eab1fc6d595c955f528cbef0bf190545ddb5d8b7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "qnew_b_equal",
            "line_nb": 62,
            "steps": [
                {
                    "command": [
                        "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1 H_Qquadratic_sg_denom_nonzero2; unfold qnew_b in |- *; apply f_equal with (Z * (Z * Z))%type; apply f_equal with (Z * (Z * (Z * Z)))%type; apply f_equal with (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))))%type; apply f_equal with (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive))%type; apply f_equal with (Z * (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive)))%type; apply Qquadratic_sign_equal.",
                        "VernacExtend",
                        "cf42c39cf6dc599df621613ab4db6e0dd03cecea"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "qnew_c_equal",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1 H_Qquadratic_sg_denom_nonzero2; unfold qnew_c in |- *; apply f_equal with (Z * Z)%type; apply f_equal with (Z * (Z * Z))%type; apply f_equal with (Z * (Z * (Z * Z)))%type; apply f_equal with (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))))%type; apply f_equal with (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive))%type; apply f_equal with (Z * (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive)))%type; apply Qquadratic_sign_equal.",
                        "VernacExtend",
                        "2e10f3e1341a85e3beb7a755f031638c0f362fe8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "qnew_d_equal",
            "line_nb": 68,
            "steps": [
                {
                    "command": [
                        "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1 H_Qquadratic_sg_denom_nonzero2; unfold qnew_d in |- *; apply f_equal with (Z * Z)%type; apply f_equal with (Z * (Z * Z))%type; apply f_equal with (Z * (Z * (Z * Z)))%type; apply f_equal with (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))))%type; apply f_equal with (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive))%type; apply f_equal with (Z * (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive)))%type; apply Qquadratic_sign_equal.",
                        "VernacExtend",
                        "19dda193d62d3504c1e8816b0e12a0a43dd7582f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "qnew_e_equal",
            "line_nb": 71,
            "steps": [
                {
                    "command": [
                        "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1 H_Qquadratic_sg_denom_nonzero2; unfold qnew_e in |- *; apply f_equal with (Z * (Z * (Z * Z)))%type; apply f_equal with (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))))%type; apply f_equal with (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive))%type; apply f_equal with (Z * (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive)))%type; apply Qquadratic_sign_equal.",
                        "VernacExtend",
                        "75e98f0e49e5fa17c06096533101064d0ad9d994"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "qnew_f_equal",
            "line_nb": 74,
            "steps": [
                {
                    "command": [
                        "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1 H_Qquadratic_sg_denom_nonzero2; unfold qnew_f in |- *; apply f_equal with (Z * (Z * Z))%type; apply f_equal with (Z * (Z * (Z * Z)))%type; apply f_equal with (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))))%type; apply f_equal with (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive))%type; apply f_equal with (Z * (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive)))%type; apply Qquadratic_sign_equal.",
                        "VernacExtend",
                        "5449617e4277f9706b7407ba38845b92b8c90c90"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "qnew_g_equal",
            "line_nb": 77,
            "steps": [
                {
                    "command": [
                        "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1 H_Qquadratic_sg_denom_nonzero2; unfold qnew_g in |- *; apply f_equal with (Z * Z)%type; apply f_equal with (Z * (Z * Z))%type; apply f_equal with (Z * (Z * (Z * Z)))%type; apply f_equal with (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))))%type; apply f_equal with (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive))%type; apply f_equal with (Z * (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive)))%type; apply Qquadratic_sign_equal.",
                        "VernacExtend",
                        "a35dfd0f7ae54853ce377e37e74b77402e1117fb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "qnew_h_equal",
            "line_nb": 80,
            "steps": [
                {
                    "command": [
                        "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1 H_Qquadratic_sg_denom_nonzero2; unfold qnew_h in |- *; apply f_equal with (Z * Z)%type; apply f_equal with (Z * (Z * Z))%type; apply f_equal with (Z * (Z * (Z * Z)))%type; apply f_equal with (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))))%type; apply f_equal with (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive))%type; apply f_equal with (Z * (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive)))%type; apply Qquadratic_sign_equal.",
                        "VernacExtend",
                        "6a13358e221391872c9b5c5481bd167a51feeaad"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "qnew_p1_equal",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1 H_Qquadratic_sg_denom_nonzero2; unfold qnew_p1 in |- *; apply f_equal with (Qpositive * Qpositive)%type; apply f_equal with (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive))%type; apply f_equal with (Z * (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive)))%type; apply Qquadratic_sign_equal.",
                        "VernacExtend",
                        "5652b8d1a087a56d2473236f93b88f5de6a4f99e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "qnew_p2_equal",
            "line_nb": 86,
            "steps": [
                {
                    "command": [
                        "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1 H_Qquadratic_sg_denom_nonzero2; unfold qnew_p2 in |- *; apply f_equal with (Qpositive * Qpositive)%type; apply f_equal with (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive))%type; apply f_equal with (Z * (Z * (Z * (Z * Z)) * (Z * (Z * (Z * Z))) * (Qpositive * Qpositive)))%type; apply Qquadratic_sign_equal.",
                        "VernacExtend",
                        "7f327db17e5fdb8a4a1e51ace1846dc3d17a3057"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qquadratic_Qpositive_to_Q_equal",
            "line_nb": 89,
            "steps": [
                {
                    "command": [
                        "intros a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1.",
                        "VernacExtend",
                        "c6da4dfefbd807f1fd313852ad23176f8dc3b839"
                    ]
                },
                {
                    "command": [
                        "functional induction (Qquadratic_Qpositive_to_Q a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero1); intros; Clear_eq_.",
                        "VernacExtend",
                        "88251674996403e7f375261d329ad133d369a9ae"
                    ]
                },
                {
                    "command": [
                        "rewrite (Qquadratic_Qpositive_to_Q_3 _ _ _ _ _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 He _x); reflexivity.",
                        "VernacExtend",
                        "649973c7b2b78bdd4135a8ef6bdcd3e82b69fd8f"
                    ]
                },
                {
                    "command": [
                        "rewrite (Qquadratic_Qpositive_to_Q_2 _ _ _ _ _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 Hf _x); reflexivity.",
                        "VernacExtend",
                        "03a20a91f08486968ba08188b1a6db71cd8c6015"
                    ]
                },
                {
                    "command": [
                        "rewrite (Qquadratic_Qpositive_to_Q_1 _ _ _ _ _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 Hg _x); reflexivity.",
                        "VernacExtend",
                        "19c4380c7963463b5cfdc4686223eb36d43b5a95"
                    ]
                },
                {
                    "command": [
                        "rewrite (Qquadratic_Qpositive_to_Q_0 _ _ _ _ _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 Hh _x); reflexivity.",
                        "VernacExtend",
                        "3072922d632f3a918dde51bda510e2e0cffe3fa5"
                    ]
                },
                {
                    "command": [
                        "rewrite (q_sign_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero1 H_Qquadratic_sg_denom_nonzero2) in _x; rewrite (Qquadratic_Qpositive_to_Q_4 _ _ _ _ _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 not_same_ratio_abcdefgh _x) ; reflexivity.",
                        "VernacExtend",
                        "58629a4569512a04b73817a54185d9d25a803a20"
                    ]
                },
                {
                    "command": [
                        "Absurd_q_sign_.",
                        "VernacExtend",
                        "25c2fb71c4fe1ae8b68554701c460bb6606ee8e4"
                    ]
                },
                {
                    "command": [
                        "assert (H : Z.sgn (qnew_a a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2 + qnew_b a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2 + qnew_c a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2 + qnew_d a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2) = 1%Z).",
                        "VernacExtend",
                        "e6602319070d3f80b3562229f0157b2be853b965"
                    ]
                },
                {
                    "command": [
                        "rewrite (qnew_a_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1); rewrite (qnew_b_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1); rewrite (qnew_c_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1); rewrite (qnew_d_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1); assumption.",
                        "VernacExtend",
                        "6490bde5bb82e2eb7cf5822f81a0d51274f2520e"
                    ]
                },
                {
                    "command": [
                        "rewrite (Qquadratic_Qpositive_to_Q_5 _ _ _ _ _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 not_same_ratio_abcdefgh (trans_eq (q_sign_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1) l1_eq_one) H (Qquadratic_Qpositive_to_Q_quadraticAcc_pos_1 _ _ _ _ _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 not_same_ratio_abcdefgh (trans_eq (q_sign_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1) l1_eq_one) H)) ; apply f_equal with Qpositive; apply Qquadratic_Qpositive_to_Qpositive_equal_strong; [ apply qnew_a_equal | apply qnew_b_equal | apply qnew_c_equal | apply qnew_d_equal | apply qnew_e_equal | apply qnew_f_equal | apply qnew_g_equal | apply qnew_h_equal | apply qnew_p1_equal | apply qnew_p2_equal ].",
                        "VernacExtend",
                        "78befa5e2db88597a8148470524fa6f1dc71e1c1"
                    ]
                },
                {
                    "command": [
                        "assert (H : Z.sgn (qnew_a a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2 + qnew_b a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2 + qnew_c a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2 + qnew_d a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2) = (-1)%Z).",
                        "VernacExtend",
                        "afe1892769c49943be122d4bdfa6c4def5f2b728"
                    ]
                },
                {
                    "command": [
                        "rewrite (qnew_a_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1); rewrite (qnew_b_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1); rewrite (qnew_c_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1); rewrite (qnew_d_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1); assumption.",
                        "VernacExtend",
                        "6490bde5bb82e2eb7cf5822f81a0d51274f2520e"
                    ]
                },
                {
                    "command": [
                        "rewrite (Qquadratic_Qpositive_to_Q_6 _ _ _ _ _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 not_same_ratio_abcdefgh (trans_eq (q_sign_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1) l1_eq_one) H (Qquadratic_Qpositive_to_Q_quadraticAcc_pos_2 _ _ _ _ _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 not_same_ratio_abcdefgh (trans_eq (q_sign_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1) l1_eq_one) H)) .",
                        "VernacExtend",
                        "55cfa2242ba2a35f97444e61b455aec8994d8270"
                    ]
                },
                {
                    "command": [
                        "apply f_equal with Qpositive; apply Qquadratic_Qpositive_to_Qpositive_equal_strong; try apply f_equal with Z; [ apply qnew_a_equal | apply qnew_b_equal | apply qnew_c_equal | apply qnew_d_equal | apply qnew_e_equal | apply qnew_f_equal | apply qnew_g_equal | apply qnew_h_equal | apply qnew_p1_equal | apply qnew_p2_equal ].",
                        "VernacExtend",
                        "05b1be7054bd8f49d6853da9c87efd7499068e14"
                    ]
                },
                {
                    "command": [
                        "Absurd_q_sign_.",
                        "VernacExtend",
                        "25c2fb71c4fe1ae8b68554701c460bb6606ee8e4"
                    ]
                },
                {
                    "command": [
                        "assert (H : Z.sgn (qnew_a a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2 + qnew_b a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2 + qnew_c a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2 + qnew_d a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2) = 1%Z).",
                        "VernacExtend",
                        "e6602319070d3f80b3562229f0157b2be853b965"
                    ]
                },
                {
                    "command": [
                        "rewrite (qnew_a_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1); rewrite (qnew_b_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1); rewrite (qnew_c_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1); rewrite (qnew_d_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1); assumption.",
                        "VernacExtend",
                        "6490bde5bb82e2eb7cf5822f81a0d51274f2520e"
                    ]
                },
                {
                    "command": [
                        "rewrite (Qquadratic_Qpositive_to_Q_7 _ _ _ _ _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 not_same_ratio_abcdefgh (trans_eq (q_sign_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1) l1_eq_min_one) H (Qquadratic_Qpositive_to_Q_quadraticAcc_neg_1 _ _ _ _ _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 not_same_ratio_abcdefgh (trans_eq (q_sign_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1) l1_eq_min_one) H)) .",
                        "VernacExtend",
                        "43716eef8898da548fad6a94cee6bf5c4516a902"
                    ]
                },
                {
                    "command": [
                        "apply f_equal with Qpositive; apply Qquadratic_Qpositive_to_Qpositive_equal_strong; try apply f_equal with Z; [ apply qnew_a_equal | apply qnew_b_equal | apply qnew_c_equal | apply qnew_d_equal | apply qnew_e_equal | apply qnew_f_equal | apply qnew_g_equal | apply qnew_h_equal | apply qnew_p1_equal | apply qnew_p2_equal ].",
                        "VernacExtend",
                        "05b1be7054bd8f49d6853da9c87efd7499068e14"
                    ]
                },
                {
                    "command": [
                        "assert (H : Z.sgn (qnew_a a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2 + qnew_b a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2 + qnew_c a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2 + qnew_d a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero2) = (-1)%Z).",
                        "VernacExtend",
                        "afe1892769c49943be122d4bdfa6c4def5f2b728"
                    ]
                },
                {
                    "command": [
                        "rewrite (qnew_a_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1); rewrite (qnew_b_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1); rewrite (qnew_c_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1); rewrite (qnew_d_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1); assumption.",
                        "VernacExtend",
                        "6490bde5bb82e2eb7cf5822f81a0d51274f2520e"
                    ]
                },
                {
                    "command": [
                        "rewrite (Qquadratic_Qpositive_to_Q_8 _ _ _ _ _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 not_same_ratio_abcdefgh (trans_eq (q_sign_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1) l1_eq_min_one) H (Qquadratic_Qpositive_to_Q_quadraticAcc_neg_2 _ _ _ _ _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 not_same_ratio_abcdefgh (trans_eq (q_sign_equal a b c d _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero2 H_Qquadratic_sg_denom_nonzero1) l1_eq_min_one) H)) .",
                        "VernacExtend",
                        "f0c0a91ca28573e79558559d0ac2edd7c231d360"
                    ]
                },
                {
                    "command": [
                        "apply f_equal with Qpositive; apply Qquadratic_Qpositive_to_Qpositive_equal_strong; try apply f_equal with Z; [ apply qnew_a_equal | apply qnew_b_equal | apply qnew_c_equal | apply qnew_d_equal | apply qnew_e_equal | apply qnew_f_equal | apply qnew_g_equal | apply qnew_h_equal | apply qnew_p1_equal | apply qnew_p2_equal ].",
                        "VernacExtend",
                        "05b1be7054bd8f49d6853da9c87efd7499068e14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}