{
    "filename": "Qquadratic_sign_properties.v",
    "coq_project": "qarith-stern-brocot",
    "vernac_cmds": [
        [
            "Require Import ZArithRing.",
            "VernacRequire",
            "1792ea5bd3f37db98704504fc8fd627a7843b280"
        ],
        [
            "Require Export Qhomographic_sign.",
            "VernacRequire",
            "782bd766e1405814dd28b31f1680334028faa6f0"
        ],
        [
            "Require Export Qquadratic_sign.",
            "VernacRequire",
            "c8a9395f3f9908fc4a160cbd5046b7a14b246221"
        ],
        [
            "Require Export Qhomographic_sign_properties.",
            "VernacRequire",
            "24dc0a5ffd77be25f0281795766feb0a54398d31"
        ],
        [
            "Definition same_ratio (a b c d e f g h : Z) := (a * f)%Z = (b * e)%Z /\\ (b * g)%Z = (c * f)%Z /\\ (c * h)%Z = (d * g)%Z /\\ (a * g)%Z = (c * e)%Z /\\ (a * h)%Z = (d * e)%Z /\\ (b * h)%Z = (d * f)%Z.",
            "VernacDefinition",
            "e01b5573cab2e31a0edc3f29a763ff22e8e5bae7"
        ],
        [
            "Lemma same_ratio_dec_inf : forall a b c d e f g h : Z, {same_ratio a b c d e f g h} + {~ same_ratio a b c d e f g h}.",
            "VernacStartTheoremProof",
            "db4d750e434cc6e2db3406e3845eb4fbcf1df245"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case (Z.eq_dec (a * f) (b * e)); [ case (Z.eq_dec (b * g) (c * f)); [ case (Z.eq_dec (c * h) (d * g)); [ case (Z.eq_dec (a * g) (c * e)); [ case (Z.eq_dec (a * h) (d * e)); [ case (Z.eq_dec (b * h) (d * f)); [ left; repeat split; assumption | idtac ] | idtac ] | idtac ] | idtac ] | idtac ] | idtac ]; intro H'; try intros; right; intros (Hafbe, (Hbgcf, (Hchgd, (Hagce, (Hahde, Hbhdf))))); apply H'; assumption.",
            "VernacExtend",
            "287f3119300147b0e002163675014cb3dd5c8e30"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qquadratic_sign_tuple_equal : forall (l1 a1 b1 c1 d1 e1 f1 g1 h1 : Z) (x1 y1 : Qpositive) (l2 a2 b2 c2 d2 e2 f2 g2 h2 : Z) (x2 y2 : Qpositive), (l1, (a1, (b1, (c1, d1)), (e1, (f1, (g1, h1))), (x1, y1))) = (l2, (a2, (b2, (c2, d2)), (e2, (f2, (g2, h2))), (x2, y2))) -> l1 = l2 /\\ (a1 = a2 /\\ b1 = b2 /\\ c1 = c2 /\\ d1 = d2 /\\ e1 = e2 /\\ f1 = f2 /\\ g1 = g2 /\\ h1 = h2) /\\ x1 = x2 /\\ y1 = y2.",
            "VernacStartTheoremProof",
            "54f61d5866ce8c0669e14f925711d8a98ab38064"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H; (repeat split; reflexivity).",
            "VernacExtend",
            "a4646e2141f1c8640869b6fd8867f6e1f831561f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma outside_square_1 : forall a b c d : Z, (2 < outside_square a b c d)%Z -> (0 < a + b + c + d)%Z.",
            "VernacStartTheoremProof",
            "94717f71c71ce5b61212102e2c0ceade85306a41"
        ],
        [
            "intros [| pa| pa] [| pb| pb] [| pc| pc] [| pd| pd]; repeat rewrite Zplus_0_r; repeat rewrite Zplus_0_l; intro H; first [ discriminate H | repeat constructor ].",
            "VernacExtend",
            "f390754a22e16c0c8dc2f85b2b6324654a23be14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma outside_square_2 : forall a b c d : Z, (outside_square a b c d < -2)%Z -> (a + b + c + d < 0)%Z.",
            "VernacStartTheoremProof",
            "f1e4c0f7fd2933768507fe1479e7fb70c31115da"
        ],
        [
            "intros [| pa| pa] [| pb| pb] [| pc| pc] [| pd| pd]; repeat rewrite Zplus_0_r; repeat rewrite Zplus_0_l; intro H; first [ discriminate H | repeat constructor ].",
            "VernacExtend",
            "f390754a22e16c0c8dc2f85b2b6324654a23be14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma outside_square_3 : forall a b c d : Z, (2 < outside_square a b c d)%Z -> (0 <= a)%Z.",
            "VernacStartTheoremProof",
            "55cfc2130d314f54a3677227a95a2a080dfd269b"
        ],
        [
            "intros [| pa| pa] [| pb| pb] [| pc| pc] [| pd| pd]; repeat rewrite Zplus_0_r; repeat rewrite Zplus_0_l; intro H; first [ intro H_discriminate_me; discriminate H_discriminate_me | discriminate H | repeat constructor | apply Zero_le_Qpos ].",
            "VernacExtend",
            "7d62f595c657f6149468268ec041912b161144e4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma outside_square_4 : forall a b c d : Z, (2 < outside_square a b c d)%Z -> (0 <= b)%Z.",
            "VernacStartTheoremProof",
            "0ee6fb85eaa5cdb3df9dcaebd24d042b9beebcf4"
        ],
        [
            "intros [| pa| pa] [| pb| pb] [| pc| pc] [| pd| pd]; repeat rewrite Zplus_0_r; repeat rewrite Zplus_0_l; intro H; first [ intro H_discriminate_me; discriminate H_discriminate_me | discriminate H | repeat constructor | apply Zero_le_Qpos ].",
            "VernacExtend",
            "7d62f595c657f6149468268ec041912b161144e4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma outside_square_5 : forall a b c d : Z, (2 < outside_square a b c d)%Z -> (0 <= c)%Z.",
            "VernacStartTheoremProof",
            "0e11c03d6164cb120365375be582ff9af55eb042"
        ],
        [
            "intros [| pa| pa] [| pb| pb] [| pc| pc] [| pd| pd]; repeat rewrite Zplus_0_r; repeat rewrite Zplus_0_l; intro H; first [ intro H_discriminate_me; discriminate H_discriminate_me | discriminate H | repeat constructor | apply Zero_le_Qpos ].",
            "VernacExtend",
            "7d62f595c657f6149468268ec041912b161144e4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma outside_square_6 : forall a b c d : Z, (2 < outside_square a b c d)%Z -> (0 <= d)%Z.",
            "VernacStartTheoremProof",
            "23d3294888ccd2d3a987c809031850500223268f"
        ],
        [
            "intros [| pa| pa] [| pb| pb] [| pc| pc] [| pd| pd]; repeat rewrite Zplus_0_r; repeat rewrite Zplus_0_l; intro H; first [ intro H_discriminate_me; discriminate H_discriminate_me | discriminate H | repeat constructor | apply Zero_le_Qpos ].",
            "VernacExtend",
            "7d62f595c657f6149468268ec041912b161144e4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma outside_square_7 : forall a b c d : Z, (outside_square a b c d < -2)%Z -> (a <= 0)%Z.",
            "VernacStartTheoremProof",
            "a33dd4bd32866ee8521a16447bd038d55de56b1d"
        ],
        [
            "intros [| pa| pa] [| pb| pb] [| pc| pc] [| pd| pd]; repeat rewrite Zplus_0_r; repeat rewrite Zplus_0_l; intro H; first [ intro H_discriminate_me; discriminate H_discriminate_me | discriminate H | repeat constructor | apply Zero_le_Qpos ].",
            "VernacExtend",
            "7d62f595c657f6149468268ec041912b161144e4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma outside_square_8 : forall a b c d : Z, (outside_square a b c d < -2)%Z -> (b <= 0)%Z.",
            "VernacStartTheoremProof",
            "4d2660891d08d494252fbe4e95c1dd338234e83a"
        ],
        [
            "intros [| pa| pa] [| pb| pb] [| pc| pc] [| pd| pd]; repeat rewrite Zplus_0_r; repeat rewrite Zplus_0_l; intro H; first [ intro H_discriminate_me; discriminate H_discriminate_me | discriminate H | repeat constructor | apply Zero_le_Qpos ].",
            "VernacExtend",
            "7d62f595c657f6149468268ec041912b161144e4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma outside_square_9 : forall a b c d : Z, (outside_square a b c d < -2)%Z -> (c <= 0)%Z.",
            "VernacStartTheoremProof",
            "e091a3852a5ead10e2cca850a46b1828b90326d1"
        ],
        [
            "intros [| pa| pa] [| pb| pb] [| pc| pc] [| pd| pd]; repeat rewrite Zplus_0_r; repeat rewrite Zplus_0_l; intro H; first [ intro H_discriminate_me; discriminate H_discriminate_me | discriminate H | repeat constructor | apply Zero_le_Qpos ].",
            "VernacExtend",
            "7d62f595c657f6149468268ec041912b161144e4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma outside_square_10 : forall a b c d : Z, (outside_square a b c d < -2)%Z -> (d <= 0)%Z.",
            "VernacStartTheoremProof",
            "d18b846355755c64ff57a43cd3abc4cb7f39415d"
        ],
        [
            "intros [| pa| pa] [| pb| pb] [| pc| pc] [| pd| pd]; repeat rewrite Zplus_0_r; repeat rewrite Zplus_0_l; intro H; first [ intro H_discriminate_me; discriminate H_discriminate_me | discriminate H | repeat constructor | apply Zero_le_Qpos ].",
            "VernacExtend",
            "7d62f595c657f6149468268ec041912b161144e4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inside_square_1_inf : forall o1 o2 : Z, inside_square_1 o1 o2 -> {(2 < o1)%Z /\\ (2 < o2)%Z} + {(o1 < -2)%Z /\\ (o2 < -2)%Z}.",
            "VernacStartTheoremProof",
            "4f69cfd7eac08043fc2cda6d8db4c09357929048"
        ],
        [
            "intros o1 o2 H.",
            "VernacExtend",
            "25eb64f751684efbb90bfde082e10dea93a74b88"
        ],
        [
            "case (Z_lt_dec 2 o1); intros Ho1; [ case (Z_lt_dec 2 o2); intros Ho2; [ left; split; assumption | idtac ] | case (Z_lt_dec o1 (-2)); intros Ho1'; [ case (Z_lt_dec o2 (-2)); intros Ho2; [ right; split; assumption | idtac ] | idtac ] ]; apply False_rec; case H; intros (Ho1_, Ho2_); repeat match goal with | id1:(~ (?X1 < ?X2)%Z) |- ?X3 => apply id1; assumption end || match goal with | id1:(Zpos ?X1 < ?X2)%Z,id2:(?X2 < Zneg ?X1)%Z |- ?X3 => apply (Z.lt_irrefl (Zpos X1)); apply Z.lt_trans with (Zneg X1); constructor || apply Z.lt_trans with X2; assumption end.",
            "VernacExtend",
            "935698acc3d65348bb98a27647be72a5e992b85e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inside_square_2_inf : forall o1 o2 : Z, inside_square_2 o1 o2 -> {(2 < o1)%Z /\\ (o2 < -2)%Z} + {(o1 < -2)%Z /\\ (2 < o2)%Z}.",
            "VernacStartTheoremProof",
            "821fdbb8d0876e0e74a43b556a446b3ebabf8322"
        ],
        [
            "intros o1 o2 H.",
            "VernacExtend",
            "25eb64f751684efbb90bfde082e10dea93a74b88"
        ],
        [
            "case (Z_lt_dec 2 o1); intros Ho1; [ case (Z_lt_dec o2 (-2)); intros Ho2; [ left; split; assumption | idtac ] | case (Z_lt_dec o1 (-2)); intros Ho1'; [ case (Z_lt_dec 2 o2); intros Ho2; [ right; split; assumption | idtac ] | idtac ] ]; apply False_rec; case H; intros (Ho1_, Ho2_); repeat match goal with | id1:(~ (?X1 < ?X2)%Z) |- ?X3 => apply id1; assumption end || match goal with | id1:(Zpos ?X1 < ?X2)%Z,id2:(?X2 < Zneg ?X1)%Z |- ?X3 => apply (Z.lt_irrefl (Zpos X1)); apply Z.lt_trans with (Zneg X1); constructor || apply Z.lt_trans with X2; assumption end.",
            "VernacExtend",
            "141c4f7e29fef5e01c427e502bc8946788862353"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qquadratic_sign_pos_1 : forall (a b c d e f g h : Z) (p1 p2 : Qpositive) (H_Qquadratic_sg_denom_nonzero : Qquadratic_sg_denom_nonzero e f g h p1 p2) (na nb nc nd ne nf ng nh : Z) (np1 np2 : Qpositive), Qquadratic_sign a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) -> {(0 < na + nb + nc + nd)%Z /\\ (0 < ne + nf + ng + nh)%Z} + {(na + nb + nc + nd < 0)%Z /\\ (ne + nf + ng + nh < 0)%Z}.",
            "VernacStartTheoremProof",
            "c52ee5942389323fc656fda0ffc9d134e979961a"
        ],
        [
            "fix Qquadratic_sign_pos_1 9.",
            "VernacExtend",
            "afe4474d3168f2901f00e3da7ad69f8898f2355d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "set (o1 := outside_square a b c d) in *.",
            "VernacExtend",
            "115a9a38809cb78c24da8e0924729c0e3ba70321"
        ],
        [
            "set (o2 := outside_square e f g h) in *.",
            "VernacExtend",
            "3226c4628498a920e7666c26460e51df81dc5ca0"
        ],
        [
            "destruct p1 as [xs| xs| ].",
            "VernacExtend",
            "c49c827365e4d09f3f970ea66544c82eb12cd410"
        ],
        [
            "destruct p2 as [ys| ys| ].",
            "VernacExtend",
            "a6e067f2aa8567de952ce8b70a91f70f20efb13b"
        ],
        [
            "case (three_integers_dec_inf b c d).",
            "VernacExtend",
            "d92f13936a5038bdd06bb3160509a88b0ac07217"
        ],
        [
            "intros (Hb, (Hc, Hd)).",
            "VernacExtend",
            "b24025fbd18098487c0ee7d5d35744a09e154027"
        ],
        [
            "case (three_integers_dec_inf f g h).",
            "VernacExtend",
            "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
        ],
        [
            "intros (Hf, (Hg, Hh)).",
            "VernacExtend",
            "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_1 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "7be30785199ecf5ea7f56f20ee28d6c2c1399de1"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((Z.sgn a * Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "3ed683e834d6c75a9681200ae977e1d35bcbd232"
        ],
        [
            "rewrite <- Zsgn_15 in hl.",
            "VernacExtend",
            "64ba35dcc586c9b63dbf3219dc7171fd2f2f1699"
        ],
        [
            "case (Zsgn_16 _ _ (sym_eq hl)); intros (Ha, He); [ left | right ]; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; assumption.",
            "VernacExtend",
            "03e41396ac4c0fc62004601b6b0ed6a606e9631d"
        ],
        [
            "intros H_fgh'.",
            "VernacExtend",
            "124b0a9b173a01c6065faec21fdb398ef30ba9a8"
        ],
        [
            "case (Z_lt_dec 2 o2).",
            "VernacExtend",
            "b747e4f9f3180cb6af258b8fd95b147f67418f3e"
        ],
        [
            "intro Ho2.",
            "VernacExtend",
            "8afe0ad03385c58284ff089700a6e48319e36a6a"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_2 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "4ec97d0a6eae9c6fed02c0ed7f3a2f9e0ca70720"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn a, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "a2d92bc318c9a9f1b56188e078e79eb3ac1ce7da"
        ],
        [
            "left; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply Zsgn_9; apply sym_eq; assumption | apply outside_square_1; assumption ].",
            "VernacExtend",
            "521b573d9751efadae51a1102731e0fb1da41549"
        ],
        [
            "case (Z_lt_dec o2 (-2)).",
            "VernacExtend",
            "a154a84530155d303eb1a188f0e73f1de92f2b11"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_3 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "94c97fbf61793fb95b35d927607ba145bc1e03a5"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn a)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "5c73a90003296598a9d848d9d3254d97b9ad07fa"
        ],
        [
            "right; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply Zsgn_10; apply sym_eq; apply Z.opp_inj; assumption | apply outside_square_2; assumption ].",
            "VernacExtend",
            "c0b0b47a1e41a900c82d95833a6f2bce796ba20a"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_nR_nR_4 a b c d e f g h (nR xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_1 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "f71909b24b264ce20070f11b21911afdcf0c33ea"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign a (a + b) (a + c) (a + b + c + d) e (e + f) (e + g) (e + f + g + h) xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_1 a (a + b)%Z (a + c)%Z (a + b + c + d)%Z e (e + f)%Z (e + g)%Z (e + f + g + h)%Z xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "c3694f4bbc8d910a6fec0653f0437ff20bae0df3"
        ],
        [
            "intros Hbcd'.",
            "VernacExtend",
            "bd2fb66b4924206bddf393e42dfb7edeabbc1385"
        ],
        [
            "case (three_integers_dec_inf f g h).",
            "VernacExtend",
            "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
        ],
        [
            "intros (Hf, (Hg, Hh)).",
            "VernacExtend",
            "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
        ],
        [
            "case (Z_lt_dec 2 o1).",
            "VernacExtend",
            "f48e06a1765d3040d72a57b372312e148bc25a46"
        ],
        [
            "intro Ho1.",
            "VernacExtend",
            "b196b7b9d63229b2fe13418ac27d2ca01fece5a9"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_5 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "b7bfe4c6defebe115fd2accc4b2946f79db5889b"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn e, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "ae9c71adee8a1664a1b6c50a1b17c0a1a934679f"
        ],
        [
            "left; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply outside_square_1 | apply Zsgn_9; apply sym_eq ]; assumption.",
            "VernacExtend",
            "d109f198ad72fc88039410bbdded699b8dc8e850"
        ],
        [
            "case (Z_lt_dec o1 (-2)).",
            "VernacExtend",
            "cb39341bd62af76a97b55e65c43aac4d8e418897"
        ],
        [
            "intros Ho1' Ho1.",
            "VernacExtend",
            "cdebf24875bdbd6a495ba72a8e2502e67dd822e8"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_6 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "f483a1b16f77861b6ce8802851e84359261f67bd"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "2e69bb10e998249cd06475594a642039fdb6ad09"
        ],
        [
            "right; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply outside_square_2 | apply Zsgn_10; apply sym_eq; apply Z.opp_inj ]; assumption.",
            "VernacExtend",
            "2c1aafc8798512c3b5b6f863f83ff8211884c791"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_nR_nR_7 a b c d e f g h (nR xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_1 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "810bc89051fc8ecbfd9f846e25cd1052a11c500a"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign a (a + b) (a + c) (a + b + c + d) e (e + f) (e + g) (e + f + g + h) xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_1 a (a + b)%Z (a + c)%Z (a + b + c + d)%Z e (e + f)%Z (e + g)%Z (e + f + g + h)%Z xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "c3694f4bbc8d910a6fec0653f0437ff20bae0df3"
        ],
        [
            "intro Hfgh'.",
            "VernacExtend",
            "345b6667cec5f818822048df8b93ef410d8ff631"
        ],
        [
            "case (inside_square_1_dec_inf o1 o2).",
            "VernacExtend",
            "d295c561ef561fb8b649e6303ce92c0f0681eb8f"
        ],
        [
            "intro H_inside_1.",
            "VernacExtend",
            "068d44eb2eb58699356ab84ee948b8147fe0eef5"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_8 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "17c4bef80f8937e9f81b326e04069c70ccf1b8df"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (1%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "e74cb5359bfd1e25ed95ae88e1f96e669bc567c0"
        ],
        [
            "case (inside_square_1_inf _ _ H_inside_1); intros (Ho1, Ho2); [ left; split; apply outside_square_1 | right; split; apply outside_square_2 ]; assumption.",
            "VernacExtend",
            "0694e65076fd499ee899fb090aaff8471c907ce7"
        ],
        [
            "intro H_inside_1'.",
            "VernacExtend",
            "2ec567de4490f9d472a6a6a40281eff13e5732a9"
        ],
        [
            "case (inside_square_2_dec_inf o1 o2).",
            "VernacExtend",
            "7682baf8a4bbff99d50bdda519b1ba70e3c47898"
        ],
        [
            "intro H_inside_2.",
            "VernacExtend",
            "b4e80bee310800c8c137b8b864721e5c3244f673"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_9 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "152690edd4ff3f485e8452c0c2c329c423aa3337"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "apply False_rec.",
            "VernacExtend",
            "aa34e83eda8e5f1a34cc23685121a87daef49085"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((-1)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "506784242bc8ec2571827e0f73c84cc1fec7c0c5"
        ],
        [
            "discriminate hl.",
            "VernacExtend",
            "f643a20865d0dde2f37d19887cfd4265938120b1"
        ],
        [
            "intros H_inside_2'.",
            "VernacExtend",
            "4f65b53b2c7b3936fda163236abffb01421ea904"
        ],
        [
            "generalize (Qquadratic_sign_nR_nR_10 a b c d e f g h (nR xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_1 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "ebf1110cd2276609eca3149433715718142a96e8"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign a (a + b) (a + c) (a + b + c + d) e (e + f) (e + g) (e + f + g + h) xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_1 a (a + b)%Z (a + c)%Z (a + b + c + d)%Z e (e + f)%Z (e + g)%Z (e + f + g + h)%Z xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "c3694f4bbc8d910a6fec0653f0437ff20bae0df3"
        ],
        [
            "case (three_integers_dec_inf b c d).",
            "VernacExtend",
            "d92f13936a5038bdd06bb3160509a88b0ac07217"
        ],
        [
            "intros (Hb, (Hc, Hd)).",
            "VernacExtend",
            "b24025fbd18098487c0ee7d5d35744a09e154027"
        ],
        [
            "case (three_integers_dec_inf f g h).",
            "VernacExtend",
            "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
        ],
        [
            "intros (Hf, (Hg, Hh)).",
            "VernacExtend",
            "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_1 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "0b3a7cf1aee6c21cac9c8f1a7131131c9cf68287"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((Z.sgn a * Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "2a2115afdfcf43fe39b2ee3f378fd56e12e2d627"
        ],
        [
            "rewrite <- Zsgn_15 in hl.",
            "VernacExtend",
            "64ba35dcc586c9b63dbf3219dc7171fd2f2f1699"
        ],
        [
            "case (Zsgn_16 _ _ (sym_eq hl)); intros (Ha, He); [ left | right ]; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; assumption.",
            "VernacExtend",
            "03e41396ac4c0fc62004601b6b0ed6a606e9631d"
        ],
        [
            "intros H_fgh'.",
            "VernacExtend",
            "124b0a9b173a01c6065faec21fdb398ef30ba9a8"
        ],
        [
            "case (Z_lt_dec 2 o2).",
            "VernacExtend",
            "b747e4f9f3180cb6af258b8fd95b147f67418f3e"
        ],
        [
            "intro Ho2.",
            "VernacExtend",
            "8afe0ad03385c58284ff089700a6e48319e36a6a"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_2 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "8db38400c71755cb43bf15e4e55b71fddecf8c60"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn a, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "7fc2f26252ac8bb0a4d21d651cbbc66d7b336e14"
        ],
        [
            "left; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply Zsgn_9; apply sym_eq; assumption | apply outside_square_1; assumption ].",
            "VernacExtend",
            "521b573d9751efadae51a1102731e0fb1da41549"
        ],
        [
            "case (Z_lt_dec o2 (-2)).",
            "VernacExtend",
            "a154a84530155d303eb1a188f0e73f1de92f2b11"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_3 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "0a90e6d9978b9a2224d75e7522f5bb5ecb2ce459"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn a)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "0b86e5417ddcbaccafe4342ebd676f14089b25f4"
        ],
        [
            "right; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply Zsgn_10; apply sym_eq; apply Z.opp_inj; assumption | apply outside_square_2; assumption ].",
            "VernacExtend",
            "c0b0b47a1e41a900c82d95833a6f2bce796ba20a"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_nR_dL_4 a b c d e f g h (nR xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_2 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "e338eb26767fc3684e8a97123c68697052d25a34"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign (a + b) b (a + b + c + d) (b + d) (e + f) f (e + f + g + h) (f + h) xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_1 (a + b)%Z b (a + b + c + d)%Z (b + d)%Z (e + f)%Z f (e + f + g + h)%Z (f + h)%Z xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "b3dd6b55c68500abceaa7728e5eb7fe201500e74"
        ],
        [
            "intros Hbcd'.",
            "VernacExtend",
            "bd2fb66b4924206bddf393e42dfb7edeabbc1385"
        ],
        [
            "case (three_integers_dec_inf f g h).",
            "VernacExtend",
            "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
        ],
        [
            "intros (Hf, (Hg, Hh)).",
            "VernacExtend",
            "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
        ],
        [
            "case (Z_lt_dec 2 o1).",
            "VernacExtend",
            "f48e06a1765d3040d72a57b372312e148bc25a46"
        ],
        [
            "intro Ho1.",
            "VernacExtend",
            "b196b7b9d63229b2fe13418ac27d2ca01fece5a9"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_5 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "60dee11bf970fa431bc509100b556cfda9cd4016"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn e, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "bcaa949df441a69a6a42f5382432cf2e75ed609d"
        ],
        [
            "left; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply outside_square_1 | apply Zsgn_9; apply sym_eq ]; assumption.",
            "VernacExtend",
            "d109f198ad72fc88039410bbdded699b8dc8e850"
        ],
        [
            "case (Z_lt_dec o1 (-2)).",
            "VernacExtend",
            "cb39341bd62af76a97b55e65c43aac4d8e418897"
        ],
        [
            "intros Ho1' Ho1.",
            "VernacExtend",
            "cdebf24875bdbd6a495ba72a8e2502e67dd822e8"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_6 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "73cd66244c556704a4acb72cdfd1263b52028628"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "0e484e3c76bb337ca0bc2b37ff6d3f018339f73d"
        ],
        [
            "right; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply outside_square_2 | apply Zsgn_10; apply sym_eq; apply Z.opp_inj ]; assumption.",
            "VernacExtend",
            "2c1aafc8798512c3b5b6f863f83ff8211884c791"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_nR_dL_7 a b c d e f g h (nR xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_2 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "aece866d71f9f6b70c44ff6035c02e2759b10435"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign (a + b) b (a + b + c + d) (b + d) (e + f) f (e + f + g + h) (f + h) xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_1 (a + b)%Z b (a + b + c + d)%Z (b + d)%Z (e + f)%Z f (e + f + g + h)%Z (f + h)%Z xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "b3dd6b55c68500abceaa7728e5eb7fe201500e74"
        ],
        [
            "intro Hfgh'.",
            "VernacExtend",
            "345b6667cec5f818822048df8b93ef410d8ff631"
        ],
        [
            "case (inside_square_1_dec_inf o1 o2).",
            "VernacExtend",
            "d295c561ef561fb8b649e6303ce92c0f0681eb8f"
        ],
        [
            "intro H_inside_1.",
            "VernacExtend",
            "068d44eb2eb58699356ab84ee948b8147fe0eef5"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_8 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "897d1753e26f302c001afae6ff16a94868186d2e"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (1%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "f8478c3365cb374547eacaf1656c0dbd4a7baa05"
        ],
        [
            "case (inside_square_1_inf _ _ H_inside_1); intros (Ho1, Ho2); [ left; split; apply outside_square_1 | right; split; apply outside_square_2 ]; assumption.",
            "VernacExtend",
            "0694e65076fd499ee899fb090aaff8471c907ce7"
        ],
        [
            "intro H_inside_1'.",
            "VernacExtend",
            "2ec567de4490f9d472a6a6a40281eff13e5732a9"
        ],
        [
            "case (inside_square_2_dec_inf o1 o2).",
            "VernacExtend",
            "7682baf8a4bbff99d50bdda519b1ba70e3c47898"
        ],
        [
            "intro H_inside_2.",
            "VernacExtend",
            "b4e80bee310800c8c137b8b864721e5c3244f673"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_9 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "cbbf9d97e58e2bb95455ca931ec68344767f069d"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "apply False_rec.",
            "VernacExtend",
            "aa34e83eda8e5f1a34cc23685121a87daef49085"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((-1)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "bb57e82a3d5dfca42ce24ea33da02a42e7427ac9"
        ],
        [
            "discriminate hl.",
            "VernacExtend",
            "f643a20865d0dde2f37d19887cfd4265938120b1"
        ],
        [
            "intros H_inside_2'.",
            "VernacExtend",
            "4f65b53b2c7b3936fda163236abffb01421ea904"
        ],
        [
            "generalize (Qquadratic_sign_nR_dL_10 a b c d e f g h (nR xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_2 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "0d3068282c5f924b3105b9445cf9b7dfcc50b98c"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign (a + b) b (a + b + c + d) (b + d) (e + f) f (e + f + g + h) (f + h) xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_1 (a + b)%Z b (a + b + c + d)%Z (b + d)%Z (e + f)%Z f (e + f + g + h)%Z (f + h)%Z xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "b3dd6b55c68500abceaa7728e5eb7fe201500e74"
        ],
        [
            "generalize (Qquadratic_signok_0' _ _ _ _ _ H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "82ba942058f599dab626c16f3958e19a9e8856b7"
        ],
        [
            "intros H_Qhomographic_sg_denom_nonzero.",
            "VernacExtend",
            "7ee186f9a3e15bd36020fb30747a871aa671241b"
        ],
        [
            "set (L3 := Qhomographic_sign (a + b) (c + d) (e + f) (g + h) (nR xs) H_Qhomographic_sg_denom_nonzero) in *.",
            "VernacExtend",
            "84df2c330ca924d8672b2dc2167b20dca2d9d189"
        ],
        [
            "set (l1 := fst L3) in *.",
            "VernacExtend",
            "53a0156fadda9545b3aad23e6562a9f7571500e5"
        ],
        [
            "set (l2 := fst (snd L3)) in *.",
            "VernacExtend",
            "d2ff6d484662d1ffc681d957fae47d75d4f0ffe7"
        ],
        [
            "set (l3 := snd (snd L3)) in *.",
            "VernacExtend",
            "a4f4a2a7a6777d6cf8547330f649c7e802134835"
        ],
        [
            "set (na_ := fst l2) in *.",
            "VernacExtend",
            "4cc5c8cdb69c666a5ed03e05d9c5d3bf6b3508c8"
        ],
        [
            "set (nb_ := fst (snd l2)) in *.",
            "VernacExtend",
            "c689e91162d844443766f43d357817dbbb7e3d29"
        ],
        [
            "set (nc_ := fst (snd (snd l2))) in *.",
            "VernacExtend",
            "77cd624092e8a297c0e31fd1f7dd984499cdbe5d"
        ],
        [
            "set (nd_ := snd (snd (snd l2))) in *.",
            "VernacExtend",
            "3b6670693e7eae913c0e386dd06bc54541698adc"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_One a b c d e f g h (nR xs) One H_Qquadratic_sg_denom_nonzero l1 na_ nb_ nc_ nd_ l3 H_Qhomographic_sg_denom_nonzero); intros H1.",
            "VernacExtend",
            "3aaded4fd9b7cf246242f869d542f1391f8cbda2"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (l1, (0%Z, (na_, (0%Z, nb_)), (0%Z, (nc_, (0%Z, nd_))), (l3, One)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) One H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; assumption | apply H1; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity ] | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end; repeat rewrite Zplus_0_l; repeat rewrite Zplus_0_r ]; apply (sg_pos_1 (a + b) (c + d) (e + f) (g + h) (nR xs) H_Qhomographic_sg_denom_nonzero na_ nb_ nc_ nd_ l3); rewrite hl; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity.",
            "VernacExtend",
            "a4d29a7d5158ae00b1d02b0271226cbb63150025"
        ],
        [
            "destruct p2 as [ys| ys| ].",
            "VernacExtend",
            "a6e067f2aa8567de952ce8b70a91f70f20efb13b"
        ],
        [
            "case (three_integers_dec_inf b c d).",
            "VernacExtend",
            "d92f13936a5038bdd06bb3160509a88b0ac07217"
        ],
        [
            "intros (Hb, (Hc, Hd)).",
            "VernacExtend",
            "b24025fbd18098487c0ee7d5d35744a09e154027"
        ],
        [
            "case (three_integers_dec_inf f g h).",
            "VernacExtend",
            "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
        ],
        [
            "intros (Hf, (Hg, Hh)).",
            "VernacExtend",
            "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_1 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "2ca6efa1266480d8bf81b38b038fe6537f4e5150"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((Z.sgn a * Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "cb040f8d3f6b39a0ce3c95f4135ce5d3ba57ae61"
        ],
        [
            "rewrite <- Zsgn_15 in hl.",
            "VernacExtend",
            "64ba35dcc586c9b63dbf3219dc7171fd2f2f1699"
        ],
        [
            "case (Zsgn_16 _ _ (sym_eq hl)); intros (Ha, He); [ left | right ]; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; assumption.",
            "VernacExtend",
            "03e41396ac4c0fc62004601b6b0ed6a606e9631d"
        ],
        [
            "intros H_fgh'.",
            "VernacExtend",
            "124b0a9b173a01c6065faec21fdb398ef30ba9a8"
        ],
        [
            "case (Z_lt_dec 2 o2).",
            "VernacExtend",
            "b747e4f9f3180cb6af258b8fd95b147f67418f3e"
        ],
        [
            "intro Ho2.",
            "VernacExtend",
            "8afe0ad03385c58284ff089700a6e48319e36a6a"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_2 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "2416253b968fdf37c51579e985ced59ed75f277d"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn a, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "4c5c6306e821b80c00e616d45012b1d3aa7cca6f"
        ],
        [
            "left; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply Zsgn_9; apply sym_eq; assumption | apply outside_square_1; assumption ].",
            "VernacExtend",
            "521b573d9751efadae51a1102731e0fb1da41549"
        ],
        [
            "case (Z_lt_dec o2 (-2)).",
            "VernacExtend",
            "a154a84530155d303eb1a188f0e73f1de92f2b11"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_3 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "44518512dfe88ca88898fe96b8fbdc54e72141e7"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn a)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "1478f4a6d28773e4dd0ccd88c5c7f59c43e654a8"
        ],
        [
            "right; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply Zsgn_10; apply sym_eq; apply Z.opp_inj; assumption | apply outside_square_2; assumption ].",
            "VernacExtend",
            "c0b0b47a1e41a900c82d95833a6f2bce796ba20a"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_dL_nR_4 a b c d e f g h (dL xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_3 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "f64fa610989268eca45d7884cde62e0d3b3c9532"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign (a + c) (a + b + c + d) c (c + d) (e + g) (e + f + g + h) g (g + h) xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_1 (a + c)%Z (a + b + c + d)%Z c (c + d)%Z (e + g)%Z (e + f + g + h)%Z g (g + h)%Z xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "f463b60f6b0f6bd61e2e435e9b3782789f12570e"
        ],
        [
            "intros Hbcd'.",
            "VernacExtend",
            "bd2fb66b4924206bddf393e42dfb7edeabbc1385"
        ],
        [
            "case (three_integers_dec_inf f g h).",
            "VernacExtend",
            "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
        ],
        [
            "intros (Hf, (Hg, Hh)).",
            "VernacExtend",
            "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
        ],
        [
            "case (Z_lt_dec 2 o1).",
            "VernacExtend",
            "f48e06a1765d3040d72a57b372312e148bc25a46"
        ],
        [
            "intro Ho1.",
            "VernacExtend",
            "b196b7b9d63229b2fe13418ac27d2ca01fece5a9"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_5 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "73d28ffa851b17a895eb8de63759600c1cc7d195"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn e, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "0ad880c605fe300047e8217a5e3b992be3a63357"
        ],
        [
            "left; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply outside_square_1 | apply Zsgn_9; apply sym_eq ]; assumption.",
            "VernacExtend",
            "d109f198ad72fc88039410bbdded699b8dc8e850"
        ],
        [
            "case (Z_lt_dec o1 (-2)).",
            "VernacExtend",
            "cb39341bd62af76a97b55e65c43aac4d8e418897"
        ],
        [
            "intros Ho1' Ho1.",
            "VernacExtend",
            "cdebf24875bdbd6a495ba72a8e2502e67dd822e8"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_6 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "748719d32744224930bba0e4a91f0658594f536b"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "b72345898851be7f8b0e04960895bb4f2b5679fa"
        ],
        [
            "right; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply outside_square_2 | apply Zsgn_10; apply sym_eq; apply Z.opp_inj ]; assumption.",
            "VernacExtend",
            "2c1aafc8798512c3b5b6f863f83ff8211884c791"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_dL_nR_7 a b c d e f g h (dL xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_3 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "05c7636b2a0eeb81bdae4b57d3f3af8b5289c4db"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign (a + c) (a + b + c + d) c (c + d) (e + g) (e + f + g + h) g (g + h) xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_1 (a + c)%Z (a + b + c + d)%Z c (c + d)%Z (e + g)%Z (e + f + g + h)%Z g (g + h)%Z xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "f463b60f6b0f6bd61e2e435e9b3782789f12570e"
        ],
        [
            "intro Hfgh'.",
            "VernacExtend",
            "345b6667cec5f818822048df8b93ef410d8ff631"
        ],
        [
            "case (inside_square_1_dec_inf o1 o2).",
            "VernacExtend",
            "d295c561ef561fb8b649e6303ce92c0f0681eb8f"
        ],
        [
            "intro H_inside_1.",
            "VernacExtend",
            "068d44eb2eb58699356ab84ee948b8147fe0eef5"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_8 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "17b14b6ad27d5d97fa40021b5b1bd5759a6a8583"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (1%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "c6ca014c9c9124ee6fb48e320d1b04897ff2a77f"
        ],
        [
            "case (inside_square_1_inf _ _ H_inside_1); intros (Ho1, Ho2); [ left; split; apply outside_square_1 | right; split; apply outside_square_2 ]; assumption.",
            "VernacExtend",
            "0694e65076fd499ee899fb090aaff8471c907ce7"
        ],
        [
            "intro H_inside_1'.",
            "VernacExtend",
            "2ec567de4490f9d472a6a6a40281eff13e5732a9"
        ],
        [
            "case (inside_square_2_dec_inf o1 o2).",
            "VernacExtend",
            "7682baf8a4bbff99d50bdda519b1ba70e3c47898"
        ],
        [
            "intro H_inside_2.",
            "VernacExtend",
            "b4e80bee310800c8c137b8b864721e5c3244f673"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_9 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "1b15c9a0b17bf8e3bd9ea57e3449cd64dd182336"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "apply False_rec.",
            "VernacExtend",
            "aa34e83eda8e5f1a34cc23685121a87daef49085"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((-1)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "56231c44212e5ee8a73e4ff72dae21eeaf8acf51"
        ],
        [
            "discriminate hl.",
            "VernacExtend",
            "f643a20865d0dde2f37d19887cfd4265938120b1"
        ],
        [
            "intros H_inside_2'.",
            "VernacExtend",
            "4f65b53b2c7b3936fda163236abffb01421ea904"
        ],
        [
            "generalize (Qquadratic_sign_dL_nR_10 a b c d e f g h (dL xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_3 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "8fc05207a6b41ec0c59af37fe14d660de73831e9"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign (a + c) (a + b + c + d) c (c + d) (e + g) (e + f + g + h) g (g + h) xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_1 (a + c)%Z (a + b + c + d)%Z c (c + d)%Z (e + g)%Z (e + f + g + h)%Z g (g + h)%Z xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "f463b60f6b0f6bd61e2e435e9b3782789f12570e"
        ],
        [
            "case (three_integers_dec_inf b c d).",
            "VernacExtend",
            "d92f13936a5038bdd06bb3160509a88b0ac07217"
        ],
        [
            "intros (Hb, (Hc, Hd)).",
            "VernacExtend",
            "b24025fbd18098487c0ee7d5d35744a09e154027"
        ],
        [
            "case (three_integers_dec_inf f g h).",
            "VernacExtend",
            "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
        ],
        [
            "intros (Hf, (Hg, Hh)).",
            "VernacExtend",
            "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_1 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "e97d2062f29099b8e633a9b753a2b33784c76b0b"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((Z.sgn a * Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "4609e55137027790181f4ab597564d917c1e01e8"
        ],
        [
            "rewrite <- Zsgn_15 in hl.",
            "VernacExtend",
            "64ba35dcc586c9b63dbf3219dc7171fd2f2f1699"
        ],
        [
            "case (Zsgn_16 _ _ (sym_eq hl)); intros (Ha, He); [ left | right ]; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; assumption.",
            "VernacExtend",
            "03e41396ac4c0fc62004601b6b0ed6a606e9631d"
        ],
        [
            "intros H_fgh'.",
            "VernacExtend",
            "124b0a9b173a01c6065faec21fdb398ef30ba9a8"
        ],
        [
            "case (Z_lt_dec 2 o2).",
            "VernacExtend",
            "b747e4f9f3180cb6af258b8fd95b147f67418f3e"
        ],
        [
            "intro Ho2.",
            "VernacExtend",
            "8afe0ad03385c58284ff089700a6e48319e36a6a"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_2 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "9d11e8d3732b1a9fe564baeaad7926fc1537b0b6"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn a, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "5b63d9d5dfee7282e910c421360e841e32775d3d"
        ],
        [
            "left; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply Zsgn_9; apply sym_eq; assumption | apply outside_square_1; assumption ].",
            "VernacExtend",
            "521b573d9751efadae51a1102731e0fb1da41549"
        ],
        [
            "case (Z_lt_dec o2 (-2)).",
            "VernacExtend",
            "a154a84530155d303eb1a188f0e73f1de92f2b11"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_3 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "45bd69bc49004ab873c9fccf5ccb3a932ddbf353"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn a)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "889020acff041b16078b24e616581ff447a863fc"
        ],
        [
            "right; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply Zsgn_10; apply sym_eq; apply Z.opp_inj; assumption | apply outside_square_2; assumption ].",
            "VernacExtend",
            "c0b0b47a1e41a900c82d95833a6f2bce796ba20a"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_dL_dL_4 a b c d e f g h (dL xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_4 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "60709f15591f536d32427cc90af2373272b0090d"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign (a + b + c + d) (b + d) (c + d) d (e + f + g + h) (f + h) (g + h) h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_1 (a + b + c + d)%Z (b + d)%Z (c + d)%Z d (e + f + g + h)%Z (f + h)%Z (g + h)%Z h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "d3c3240edf4a9700c84ee08982386751a5a92de2"
        ],
        [
            "intros Hbcd'.",
            "VernacExtend",
            "bd2fb66b4924206bddf393e42dfb7edeabbc1385"
        ],
        [
            "case (three_integers_dec_inf f g h).",
            "VernacExtend",
            "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
        ],
        [
            "intros (Hf, (Hg, Hh)).",
            "VernacExtend",
            "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
        ],
        [
            "case (Z_lt_dec 2 o1).",
            "VernacExtend",
            "f48e06a1765d3040d72a57b372312e148bc25a46"
        ],
        [
            "intro Ho1.",
            "VernacExtend",
            "b196b7b9d63229b2fe13418ac27d2ca01fece5a9"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_5 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "e60e2a27dd0430030b87f0c6f1021aec69cdd88b"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn e, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "b407c61f1a18e40fafd929766a13d1e5c45ac6c1"
        ],
        [
            "left; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply outside_square_1 | apply Zsgn_9; apply sym_eq ]; assumption.",
            "VernacExtend",
            "d109f198ad72fc88039410bbdded699b8dc8e850"
        ],
        [
            "case (Z_lt_dec o1 (-2)).",
            "VernacExtend",
            "cb39341bd62af76a97b55e65c43aac4d8e418897"
        ],
        [
            "intros Ho1' Ho1.",
            "VernacExtend",
            "cdebf24875bdbd6a495ba72a8e2502e67dd822e8"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_6 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "7b0e4612a8dda195acef9dc367bef08bf8fcb312"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "844a43edc5ec9776aa2bee077d9997ca4ad12fc4"
        ],
        [
            "right; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply outside_square_2 | apply Zsgn_10; apply sym_eq; apply Z.opp_inj ]; assumption.",
            "VernacExtend",
            "2c1aafc8798512c3b5b6f863f83ff8211884c791"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_dL_dL_7 a b c d e f g h (dL xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_4 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "51d4862aa5abb3dd93094f58d26b4d40909e48b4"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign (a + b + c + d) (b + d) (c + d) d (e + f + g + h) (f + h) (g + h) h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_1 (a + b + c + d)%Z (b + d)%Z (c + d)%Z d (e + f + g + h)%Z (f + h)%Z (g + h)%Z h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "d3c3240edf4a9700c84ee08982386751a5a92de2"
        ],
        [
            "intro Hfgh'.",
            "VernacExtend",
            "345b6667cec5f818822048df8b93ef410d8ff631"
        ],
        [
            "case (inside_square_1_dec_inf o1 o2).",
            "VernacExtend",
            "d295c561ef561fb8b649e6303ce92c0f0681eb8f"
        ],
        [
            "intro H_inside_1.",
            "VernacExtend",
            "068d44eb2eb58699356ab84ee948b8147fe0eef5"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_8 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "084252fe935af0a92ac7feca5fe44fa253615116"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (1%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "6ae4ee87ebc2a8d8a9f1c3b49745c38ea279223f"
        ],
        [
            "case (inside_square_1_inf _ _ H_inside_1); intros (Ho1, Ho2); [ left; split; apply outside_square_1 | right; split; apply outside_square_2 ]; assumption.",
            "VernacExtend",
            "0694e65076fd499ee899fb090aaff8471c907ce7"
        ],
        [
            "intro H_inside_1'.",
            "VernacExtend",
            "2ec567de4490f9d472a6a6a40281eff13e5732a9"
        ],
        [
            "case (inside_square_2_dec_inf o1 o2).",
            "VernacExtend",
            "7682baf8a4bbff99d50bdda519b1ba70e3c47898"
        ],
        [
            "intro H_inside_2.",
            "VernacExtend",
            "b4e80bee310800c8c137b8b864721e5c3244f673"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_9 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "01ac32711281d55d5e8790d70a8a118de564f06e"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "apply False_rec.",
            "VernacExtend",
            "aa34e83eda8e5f1a34cc23685121a87daef49085"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((-1)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "e78ae26937e37cea69858b520450a8e12dd3b653"
        ],
        [
            "discriminate hl.",
            "VernacExtend",
            "f643a20865d0dde2f37d19887cfd4265938120b1"
        ],
        [
            "intros H_inside_2'.",
            "VernacExtend",
            "4f65b53b2c7b3936fda163236abffb01421ea904"
        ],
        [
            "generalize (Qquadratic_sign_dL_dL_10 a b c d e f g h (dL xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_4 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "92aabbab4ba412dd08be60745aa35f49b983e5c9"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign (a + b + c + d) (b + d) (c + d) d (e + f + g + h) (f + h) (g + h) h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_1 (a + b + c + d)%Z (b + d)%Z (c + d)%Z d (e + f + g + h)%Z (f + h)%Z (g + h)%Z h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "d3c3240edf4a9700c84ee08982386751a5a92de2"
        ],
        [
            "generalize (Qquadratic_signok_0' _ _ _ _ _ H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "82ba942058f599dab626c16f3958e19a9e8856b7"
        ],
        [
            "intros H_Qhomographic_sg_denom_nonzero.",
            "VernacExtend",
            "7ee186f9a3e15bd36020fb30747a871aa671241b"
        ],
        [
            "set (L3 := Qhomographic_sign (a + b) (c + d) (e + f) (g + h) (dL xs) H_Qhomographic_sg_denom_nonzero) in *.",
            "VernacExtend",
            "bbcac23fd22aa8b7c66b46a28b66bc764c9d21df"
        ],
        [
            "set (l1 := fst L3) in *.",
            "VernacExtend",
            "53a0156fadda9545b3aad23e6562a9f7571500e5"
        ],
        [
            "set (l2 := fst (snd L3)) in *.",
            "VernacExtend",
            "d2ff6d484662d1ffc681d957fae47d75d4f0ffe7"
        ],
        [
            "set (l3 := snd (snd L3)) in *.",
            "VernacExtend",
            "a4f4a2a7a6777d6cf8547330f649c7e802134835"
        ],
        [
            "set (na_ := fst l2) in *.",
            "VernacExtend",
            "4cc5c8cdb69c666a5ed03e05d9c5d3bf6b3508c8"
        ],
        [
            "set (nb_ := fst (snd l2)) in *.",
            "VernacExtend",
            "c689e91162d844443766f43d357817dbbb7e3d29"
        ],
        [
            "set (nc_ := fst (snd (snd l2))) in *.",
            "VernacExtend",
            "77cd624092e8a297c0e31fd1f7dd984499cdbe5d"
        ],
        [
            "set (nd_ := snd (snd (snd l2))) in *.",
            "VernacExtend",
            "3b6670693e7eae913c0e386dd06bc54541698adc"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_One a b c d e f g h (dL xs) One H_Qquadratic_sg_denom_nonzero l1 na_ nb_ nc_ nd_ l3 H_Qhomographic_sg_denom_nonzero); intros H1.",
            "VernacExtend",
            "729fdcd685e6089ef0bda9bddf52a935a2f85311"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (l1, (0%Z, (na_, (0%Z, nb_)), (0%Z, (nc_, (0%Z, nd_))), (l3, One)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) One H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; assumption | apply H1; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity ] | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end; repeat rewrite Zplus_0_l; repeat rewrite Zplus_0_r ]; apply (sg_pos_1 (a + b) (c + d) (e + f) (g + h) (dL xs) H_Qhomographic_sg_denom_nonzero na_ nb_ nc_ nd_ l3); rewrite hl; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity.",
            "VernacExtend",
            "9c27ad0e668e511aa7e93c0e0e9139384c0757d4"
        ],
        [
            "generalize (Qquadratic_signok_0 _ _ _ _ _ H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "891278ce1d1d1a595b0c37c3d03fef7ef0e6f7fa"
        ],
        [
            "intros H_Qhomographic_sg_denom_nonzero.",
            "VernacExtend",
            "7ee186f9a3e15bd36020fb30747a871aa671241b"
        ],
        [
            "set (L3 := Qhomographic_sign (a + c) (b + d) (e + g) (f + h) p2 H_Qhomographic_sg_denom_nonzero) in *.",
            "VernacExtend",
            "a3acce1fe502fff654a4ab9f8e3264e43d54debe"
        ],
        [
            "set (l1 := fst L3) in *.",
            "VernacExtend",
            "53a0156fadda9545b3aad23e6562a9f7571500e5"
        ],
        [
            "set (l2 := fst (snd L3)) in *.",
            "VernacExtend",
            "d2ff6d484662d1ffc681d957fae47d75d4f0ffe7"
        ],
        [
            "set (l3 := snd (snd L3)) in *.",
            "VernacExtend",
            "a4f4a2a7a6777d6cf8547330f649c7e802134835"
        ],
        [
            "set (na_ := fst l2) in *.",
            "VernacExtend",
            "4cc5c8cdb69c666a5ed03e05d9c5d3bf6b3508c8"
        ],
        [
            "set (nb_ := fst (snd l2)) in *.",
            "VernacExtend",
            "c689e91162d844443766f43d357817dbbb7e3d29"
        ],
        [
            "set (nc_ := fst (snd (snd l2))) in *.",
            "VernacExtend",
            "77cd624092e8a297c0e31fd1f7dd984499cdbe5d"
        ],
        [
            "set (nd_ := snd (snd (snd l2))) in *.",
            "VernacExtend",
            "3b6670693e7eae913c0e386dd06bc54541698adc"
        ],
        [
            "generalize (Qquadratic_sign_One_y a b c d e f g h One p2 H_Qquadratic_sg_denom_nonzero l1 na_ nb_ nc_ nd_ l3 H_Qhomographic_sg_denom_nonzero); intros H1.",
            "VernacExtend",
            "0f9e0cc2712b63c207db1a772be8487cca639a7f"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (l1, (0%Z, (0%Z, (na_, nb_)), (0%Z, (0%Z, (nc_, nd_))), (One, l3)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h One p2 H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; assumption | apply H1; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity ] | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end; repeat rewrite Zplus_0_l; repeat rewrite Zplus_0_r ]; apply (sg_pos_1 (a + c) (b + d) (e + g) (f + h) p2 H_Qhomographic_sg_denom_nonzero na_ nb_ nc_ nd_ l3); rewrite hl; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity.",
            "VernacExtend",
            "7eb12db8684937b0b985bdf93071149877e96f06"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qquadratic_sign_pos_2 : forall (a b c d e f g h : Z) (p1 p2 : Qpositive) (H_Qquadratic_sg_denom_nonzero : Qquadratic_sg_denom_nonzero e f g h p1 p2) (na nb nc nd ne nf ng nh : Z) (np1 np2 : Qpositive), Qquadratic_sign a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) -> {(0 <= na)%Z /\\ (0 <= nb)%Z /\\ (0 <= nc)%Z /\\ (0 <= nd)%Z /\\ (0 <= ne)%Z /\\ (0 <= nf)%Z /\\ (0 <= ng)%Z /\\ (0 <= nh)%Z} + {(na <= 0)%Z /\\ (nb <= 0)%Z /\\ (nc <= 0)%Z /\\ (nd <= 0)%Z /\\ (ne <= 0)%Z /\\ (nf <= 0)%Z /\\ (ng <= 0)%Z /\\ (nh <= 0)%Z} + {np1 = One /\\ (0 <= na + nc)%Z /\\ (0 <= nb + nd)%Z /\\ (0 <= ne + ng)%Z /\\ (0 <= nf + nh)%Z} + {np1 = One /\\ (na + nc <= 0)%Z /\\ (nb + nd <= 0)%Z /\\ (ne + ng <= 0)%Z /\\ (nf + nh <= 0)%Z} + {np1 = One /\\ np2 = One} + {np1 <> One /\\ np2 = One /\\ (0 <= na + nb)%Z /\\ (0 <= nc + nd)%Z /\\ (0 <= ne + nf)%Z /\\ (0 <= ng + nh)%Z} + {np1 <> One /\\ np2 = One /\\ (na + nb <= 0)%Z /\\ (nc + nd <= 0)%Z /\\ (ne + nf <= 0)%Z /\\ (ng + nh <= 0)%Z}.",
            "VernacStartTheoremProof",
            "6f16fda36f4b8ef06b1b5e34fedcc2623974abd0"
        ],
        [
            "fix Qquadratic_sign_pos_2 9.",
            "VernacExtend",
            "6dc50a8b1aa770aeb682be15b41085b2f54f064b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "set (o1 := outside_square a b c d) in *.",
            "VernacExtend",
            "115a9a38809cb78c24da8e0924729c0e3ba70321"
        ],
        [
            "set (o2 := outside_square e f g h) in *.",
            "VernacExtend",
            "3226c4628498a920e7666c26460e51df81dc5ca0"
        ],
        [
            "destruct p1 as [xs| xs| ].",
            "VernacExtend",
            "c49c827365e4d09f3f970ea66544c82eb12cd410"
        ],
        [
            "destruct p2 as [ys| ys| ].",
            "VernacExtend",
            "a6e067f2aa8567de952ce8b70a91f70f20efb13b"
        ],
        [
            "case (three_integers_dec_inf b c d).",
            "VernacExtend",
            "d92f13936a5038bdd06bb3160509a88b0ac07217"
        ],
        [
            "intros (Hb, (Hc, Hd)).",
            "VernacExtend",
            "b24025fbd18098487c0ee7d5d35744a09e154027"
        ],
        [
            "case (three_integers_dec_inf f g h).",
            "VernacExtend",
            "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
        ],
        [
            "intros (Hf, (Hg, Hh)).",
            "VernacExtend",
            "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_1 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "7be30785199ecf5ea7f56f20ee28d6c2c1399de1"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((Z.sgn a * Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "3ed683e834d6c75a9681200ae977e1d35bcbd232"
        ],
        [
            "left; left; left; left; left; rewrite <- Zsgn_15 in hl.",
            "VernacExtend",
            "ee2e09bae78c5f1f2dd8bb9f34710881f57b1e50"
        ],
        [
            "case (Zsgn_16 _ _ (sym_eq hl)); intros (Ha, He); [ left | right ]; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | apply Zlt_le_weak ]; assumption.",
            "VernacExtend",
            "b6f3a4286031b29f7b2c594d8224a66b11d3e51d"
        ],
        [
            "intros H_fgh'.",
            "VernacExtend",
            "124b0a9b173a01c6065faec21fdb398ef30ba9a8"
        ],
        [
            "case (Z_lt_dec 2 o2).",
            "VernacExtend",
            "b747e4f9f3180cb6af258b8fd95b147f67418f3e"
        ],
        [
            "intro Ho2.",
            "VernacExtend",
            "8afe0ad03385c58284ff089700a6e48319e36a6a"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_2 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "4ec97d0a6eae9c6fed02c0ed7f3a2f9e0ca70720"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn a, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "a2d92bc318c9a9f1b56188e078e79eb3ac1ce7da"
        ],
        [
            "left; left; left; left; left; left; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o2 in Ho2; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "831ea598321daef42587f3e9e47557624f3cc91d"
        ],
        [
            "case (Z_lt_dec o2 (-2)).",
            "VernacExtend",
            "a154a84530155d303eb1a188f0e73f1de92f2b11"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_3 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "94c97fbf61793fb95b35d927607ba145bc1e03a5"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn a)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "5c73a90003296598a9d848d9d3254d97b9ad07fa"
        ],
        [
            "left; left; left; left; left; right; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o2 in Ho2'; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "c5217cdbbbe71f71276289f5435b759bc39e55e4"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_nR_nR_4 a b c d e f g h (nR xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_1 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "f71909b24b264ce20070f11b21911afdcf0c33ea"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign a (a + b) (a + c) (a + b + c + d) e (e + f) (e + g) (e + f + g + h) xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_2 a (a + b)%Z (a + c)%Z (a + b + c + d)%Z e (e + f)%Z (e + g)%Z (e + f + g + h)%Z xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "9c4d8b9a026c2cd69cdbf7218abb968776d63617"
        ],
        [
            "intros Hbcd'.",
            "VernacExtend",
            "bd2fb66b4924206bddf393e42dfb7edeabbc1385"
        ],
        [
            "case (three_integers_dec_inf f g h).",
            "VernacExtend",
            "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
        ],
        [
            "intros (Hf, (Hg, Hh)).",
            "VernacExtend",
            "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
        ],
        [
            "case (Z_lt_dec 2 o1).",
            "VernacExtend",
            "f48e06a1765d3040d72a57b372312e148bc25a46"
        ],
        [
            "intro Ho1.",
            "VernacExtend",
            "b196b7b9d63229b2fe13418ac27d2ca01fece5a9"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_5 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "b7bfe4c6defebe115fd2accc4b2946f79db5889b"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn e, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "ae9c71adee8a1664a1b6c50a1b17c0a1a934679f"
        ],
        [
            "left; left; left; left; left; left; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o1 in Ho1; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "ee89cbabd8cad9ed668340502dd4e12dadf048a4"
        ],
        [
            "case (Z_lt_dec o1 (-2)).",
            "VernacExtend",
            "cb39341bd62af76a97b55e65c43aac4d8e418897"
        ],
        [
            "intros Ho1' Ho1.",
            "VernacExtend",
            "cdebf24875bdbd6a495ba72a8e2502e67dd822e8"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_6 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "f483a1b16f77861b6ce8802851e84359261f67bd"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "2e69bb10e998249cd06475594a642039fdb6ad09"
        ],
        [
            "left; left; left; left; left; right; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o1 in Ho1'; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "3adccd55dc5b618fe84410bded5e2e1097d09700"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_nR_nR_7 a b c d e f g h (nR xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_1 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "810bc89051fc8ecbfd9f846e25cd1052a11c500a"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign a (a + b) (a + c) (a + b + c + d) e (e + f) (e + g) (e + f + g + h) xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_2 a (a + b)%Z (a + c)%Z (a + b + c + d)%Z e (e + f)%Z (e + g)%Z (e + f + g + h)%Z xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "9c4d8b9a026c2cd69cdbf7218abb968776d63617"
        ],
        [
            "intro Hfgh'.",
            "VernacExtend",
            "345b6667cec5f818822048df8b93ef410d8ff631"
        ],
        [
            "case (inside_square_1_dec_inf o1 o2).",
            "VernacExtend",
            "d295c561ef561fb8b649e6303ce92c0f0681eb8f"
        ],
        [
            "intro H_inside_1.",
            "VernacExtend",
            "068d44eb2eb58699356ab84ee948b8147fe0eef5"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_8 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "17c4bef80f8937e9f81b326e04069c70ccf1b8df"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (1%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "e74cb5359bfd1e25ed95ae88e1f96e669bc567c0"
        ],
        [
            "left; left; left; left; left; case (inside_square_1_inf _ _ H_inside_1); intros (Ho1, Ho2); [ left | right ]; repeat split; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o1 in Ho1; unfold o2 in Ho2; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "a637ed991bbc6cf6cb8e58aa20353e208c724efb"
        ],
        [
            "intro H_inside_1'.",
            "VernacExtend",
            "2ec567de4490f9d472a6a6a40281eff13e5732a9"
        ],
        [
            "case (inside_square_2_dec_inf o1 o2).",
            "VernacExtend",
            "7682baf8a4bbff99d50bdda519b1ba70e3c47898"
        ],
        [
            "intro H_inside_2.",
            "VernacExtend",
            "b4e80bee310800c8c137b8b864721e5c3244f673"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_9 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "152690edd4ff3f485e8452c0c2c329c423aa3337"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "apply False_rec.",
            "VernacExtend",
            "aa34e83eda8e5f1a34cc23685121a87daef49085"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((-1)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "506784242bc8ec2571827e0f73c84cc1fec7c0c5"
        ],
        [
            "discriminate hl.",
            "VernacExtend",
            "f643a20865d0dde2f37d19887cfd4265938120b1"
        ],
        [
            "intros H_inside_2'.",
            "VernacExtend",
            "4f65b53b2c7b3936fda163236abffb01421ea904"
        ],
        [
            "generalize (Qquadratic_sign_nR_nR_10 a b c d e f g h (nR xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_1 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "ebf1110cd2276609eca3149433715718142a96e8"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign a (a + b) (a + c) (a + b + c + d) e (e + f) (e + g) (e + f + g + h) xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_2 a (a + b)%Z (a + c)%Z (a + b + c + d)%Z e (e + f)%Z (e + g)%Z (e + f + g + h)%Z xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "9c4d8b9a026c2cd69cdbf7218abb968776d63617"
        ],
        [
            "case (three_integers_dec_inf b c d).",
            "VernacExtend",
            "d92f13936a5038bdd06bb3160509a88b0ac07217"
        ],
        [
            "intros (Hb, (Hc, Hd)).",
            "VernacExtend",
            "b24025fbd18098487c0ee7d5d35744a09e154027"
        ],
        [
            "case (three_integers_dec_inf f g h).",
            "VernacExtend",
            "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
        ],
        [
            "intros (Hf, (Hg, Hh)).",
            "VernacExtend",
            "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_1 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "0b3a7cf1aee6c21cac9c8f1a7131131c9cf68287"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((Z.sgn a * Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "2a2115afdfcf43fe39b2ee3f378fd56e12e2d627"
        ],
        [
            "left; left; left; left; left; rewrite <- Zsgn_15 in hl.",
            "VernacExtend",
            "ee2e09bae78c5f1f2dd8bb9f34710881f57b1e50"
        ],
        [
            "case (Zsgn_16 _ _ (sym_eq hl)); intros (Ha, He); [ left | right ]; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | apply Zlt_le_weak ]; assumption.",
            "VernacExtend",
            "b6f3a4286031b29f7b2c594d8224a66b11d3e51d"
        ],
        [
            "intros H_fgh'.",
            "VernacExtend",
            "124b0a9b173a01c6065faec21fdb398ef30ba9a8"
        ],
        [
            "case (Z_lt_dec 2 o2).",
            "VernacExtend",
            "b747e4f9f3180cb6af258b8fd95b147f67418f3e"
        ],
        [
            "intro Ho2.",
            "VernacExtend",
            "8afe0ad03385c58284ff089700a6e48319e36a6a"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_2 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "8db38400c71755cb43bf15e4e55b71fddecf8c60"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn a, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "7fc2f26252ac8bb0a4d21d651cbbc66d7b336e14"
        ],
        [
            "left; left; left; left; left; left; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o2 in Ho2; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "831ea598321daef42587f3e9e47557624f3cc91d"
        ],
        [
            "case (Z_lt_dec o2 (-2)).",
            "VernacExtend",
            "a154a84530155d303eb1a188f0e73f1de92f2b11"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_3 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "0a90e6d9978b9a2224d75e7522f5bb5ecb2ce459"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn a)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "0b86e5417ddcbaccafe4342ebd676f14089b25f4"
        ],
        [
            "left; left; left; left; left; right; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o2 in Ho2'; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "c5217cdbbbe71f71276289f5435b759bc39e55e4"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_nR_dL_4 a b c d e f g h (nR xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_2 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "e338eb26767fc3684e8a97123c68697052d25a34"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign (a + b) b (a + b + c + d) (b + d) (e + f) f (e + f + g + h) (f + h) xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_2 (a + b)%Z b (a + b + c + d)%Z (b + d)%Z (e + f)%Z f (e + f + g + h)%Z (f + h)%Z xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "fb776840a89826e7099eabdddf5c40e6b660e5c5"
        ],
        [
            "intros Hbcd'.",
            "VernacExtend",
            "bd2fb66b4924206bddf393e42dfb7edeabbc1385"
        ],
        [
            "case (three_integers_dec_inf f g h).",
            "VernacExtend",
            "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
        ],
        [
            "intros (Hf, (Hg, Hh)).",
            "VernacExtend",
            "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
        ],
        [
            "case (Z_lt_dec 2 o1).",
            "VernacExtend",
            "f48e06a1765d3040d72a57b372312e148bc25a46"
        ],
        [
            "intro Ho1.",
            "VernacExtend",
            "b196b7b9d63229b2fe13418ac27d2ca01fece5a9"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_5 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "60dee11bf970fa431bc509100b556cfda9cd4016"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn e, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "bcaa949df441a69a6a42f5382432cf2e75ed609d"
        ],
        [
            "left; left; left; left; left; left; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o1 in Ho1; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "ee89cbabd8cad9ed668340502dd4e12dadf048a4"
        ],
        [
            "case (Z_lt_dec o1 (-2)).",
            "VernacExtend",
            "cb39341bd62af76a97b55e65c43aac4d8e418897"
        ],
        [
            "intros Ho1' Ho1.",
            "VernacExtend",
            "cdebf24875bdbd6a495ba72a8e2502e67dd822e8"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_6 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "73cd66244c556704a4acb72cdfd1263b52028628"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "0e484e3c76bb337ca0bc2b37ff6d3f018339f73d"
        ],
        [
            "left; left; left; left; left; right; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o1 in Ho1'; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "3adccd55dc5b618fe84410bded5e2e1097d09700"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_nR_dL_7 a b c d e f g h (nR xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_2 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "aece866d71f9f6b70c44ff6035c02e2759b10435"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign (a + b) b (a + b + c + d) (b + d) (e + f) f (e + f + g + h) (f + h) xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_2 (a + b)%Z b (a + b + c + d)%Z (b + d)%Z (e + f)%Z f (e + f + g + h)%Z (f + h)%Z xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "fb776840a89826e7099eabdddf5c40e6b660e5c5"
        ],
        [
            "intro Hfgh'.",
            "VernacExtend",
            "345b6667cec5f818822048df8b93ef410d8ff631"
        ],
        [
            "case (inside_square_1_dec_inf o1 o2).",
            "VernacExtend",
            "d295c561ef561fb8b649e6303ce92c0f0681eb8f"
        ],
        [
            "intro H_inside_1.",
            "VernacExtend",
            "068d44eb2eb58699356ab84ee948b8147fe0eef5"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_8 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "897d1753e26f302c001afae6ff16a94868186d2e"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (1%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "f8478c3365cb374547eacaf1656c0dbd4a7baa05"
        ],
        [
            "left; left; left; left; left; case (inside_square_1_inf _ _ H_inside_1); intros (Ho1, Ho2); [ left | right ]; repeat split; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o1 in Ho1; unfold o2 in Ho2; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "a637ed991bbc6cf6cb8e58aa20353e208c724efb"
        ],
        [
            "intro H_inside_1'.",
            "VernacExtend",
            "2ec567de4490f9d472a6a6a40281eff13e5732a9"
        ],
        [
            "case (inside_square_2_dec_inf o1 o2).",
            "VernacExtend",
            "7682baf8a4bbff99d50bdda519b1ba70e3c47898"
        ],
        [
            "intro H_inside_2.",
            "VernacExtend",
            "b4e80bee310800c8c137b8b864721e5c3244f673"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_9 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "cbbf9d97e58e2bb95455ca931ec68344767f069d"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "apply False_rec.",
            "VernacExtend",
            "aa34e83eda8e5f1a34cc23685121a87daef49085"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((-1)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "bb57e82a3d5dfca42ce24ea33da02a42e7427ac9"
        ],
        [
            "discriminate hl.",
            "VernacExtend",
            "f643a20865d0dde2f37d19887cfd4265938120b1"
        ],
        [
            "intros H_inside_2'.",
            "VernacExtend",
            "4f65b53b2c7b3936fda163236abffb01421ea904"
        ],
        [
            "generalize (Qquadratic_sign_nR_dL_10 a b c d e f g h (nR xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_2 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "0d3068282c5f924b3105b9445cf9b7dfcc50b98c"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign (a + b) b (a + b + c + d) (b + d) (e + f) f (e + f + g + h) (f + h) xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_2 (a + b)%Z b (a + b + c + d)%Z (b + d)%Z (e + f)%Z f (e + f + g + h)%Z (f + h)%Z xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "fb776840a89826e7099eabdddf5c40e6b660e5c5"
        ],
        [
            "generalize (Qquadratic_signok_0' _ _ _ _ _ H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "82ba942058f599dab626c16f3958e19a9e8856b7"
        ],
        [
            "intros H_Qhomographic_sg_denom_nonzero.",
            "VernacExtend",
            "7ee186f9a3e15bd36020fb30747a871aa671241b"
        ],
        [
            "set (L3 := Qhomographic_sign (a + b) (c + d) (e + f) (g + h) (nR xs) H_Qhomographic_sg_denom_nonzero) in *.",
            "VernacExtend",
            "84df2c330ca924d8672b2dc2167b20dca2d9d189"
        ],
        [
            "set (l1 := fst L3) in *.",
            "VernacExtend",
            "53a0156fadda9545b3aad23e6562a9f7571500e5"
        ],
        [
            "set (l2 := fst (snd L3)) in *.",
            "VernacExtend",
            "d2ff6d484662d1ffc681d957fae47d75d4f0ffe7"
        ],
        [
            "set (l3 := snd (snd L3)) in *.",
            "VernacExtend",
            "a4f4a2a7a6777d6cf8547330f649c7e802134835"
        ],
        [
            "set (na_ := fst l2) in *.",
            "VernacExtend",
            "4cc5c8cdb69c666a5ed03e05d9c5d3bf6b3508c8"
        ],
        [
            "set (nb_ := fst (snd l2)) in *.",
            "VernacExtend",
            "c689e91162d844443766f43d357817dbbb7e3d29"
        ],
        [
            "set (nc_ := fst (snd (snd l2))) in *.",
            "VernacExtend",
            "77cd624092e8a297c0e31fd1f7dd984499cdbe5d"
        ],
        [
            "set (nd_ := snd (snd (snd l2))) in *.",
            "VernacExtend",
            "3b6670693e7eae913c0e386dd06bc54541698adc"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_One a b c d e f g h (nR xs) One H_Qquadratic_sg_denom_nonzero l1 na_ nb_ nc_ nd_ l3 H_Qhomographic_sg_denom_nonzero); intros H1.",
            "VernacExtend",
            "3aaded4fd9b7cf246242f869d542f1391f8cbda2"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (l1, (0%Z, (na_, (0%Z, nb_)), (0%Z, (nc_, (0%Z, nd_))), (l3, One)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) One H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; assumption | apply H1; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity ] | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end; repeat rewrite ZERO_left; repeat rewrite ZERO_right ].",
            "VernacExtend",
            "14783e2955b8ad7968a77c2e9b744390156af9b8"
        ],
        [
            "assert (H_sg_unfolded : Qhomographic_sign (a + b) (c + d) (e + f) (g + h) (nR xs) H_Qhomographic_sg_denom_nonzero = (1%Z, (na_, (nb_, (nc_, nd_)), l3))).",
            "VernacExtend",
            "d907c4bd12d46228d7ac22d3cde845803a5c9a97"
        ],
        [
            "rewrite hl; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity.",
            "VernacExtend",
            "92853c2a640fbbf7420687b2cc9dd9d0f8561009"
        ],
        [
            "generalize (sg_pos_2 (a + b) (c + d) (e + f) (g + h) (nR xs) H_Qhomographic_sg_denom_nonzero na_ nb_ nc_ nd_ l3 H_sg_unfolded).",
            "VernacExtend",
            "81fd1c93fced2c99913533dfe1c5d440b073e462"
        ],
        [
            "intros [[(H_a, (H_b, (H_c, H_d)))| (H_a, (H_b, (H_c, H_d)))]| H_l3]; [ case l3; left; [ right; repeat split; assumption || discriminate | right; repeat split; assumption || discriminate | left; right; repeat split ] | case l3; [ right; repeat split; assumption || discriminate | right; repeat split; assumption || discriminate | left; left; right; repeat split ] | left; left; right; repeat split; assumption ].",
            "VernacExtend",
            "cb3ad86028a07cb387904a1b8cf99c0e91f24b08"
        ],
        [
            "destruct p2 as [ys| ys| ].",
            "VernacExtend",
            "a6e067f2aa8567de952ce8b70a91f70f20efb13b"
        ],
        [
            "case (three_integers_dec_inf b c d).",
            "VernacExtend",
            "d92f13936a5038bdd06bb3160509a88b0ac07217"
        ],
        [
            "intros (Hb, (Hc, Hd)).",
            "VernacExtend",
            "b24025fbd18098487c0ee7d5d35744a09e154027"
        ],
        [
            "case (three_integers_dec_inf f g h).",
            "VernacExtend",
            "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
        ],
        [
            "intros (Hf, (Hg, Hh)).",
            "VernacExtend",
            "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_1 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "2ca6efa1266480d8bf81b38b038fe6537f4e5150"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((Z.sgn a * Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "cb040f8d3f6b39a0ce3c95f4135ce5d3ba57ae61"
        ],
        [
            "left; left; left; left; left; rewrite <- Zsgn_15 in hl.",
            "VernacExtend",
            "ee2e09bae78c5f1f2dd8bb9f34710881f57b1e50"
        ],
        [
            "case (Zsgn_16 _ _ (sym_eq hl)); intros (Ha, He); [ left | right ]; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | apply Zlt_le_weak ]; assumption.",
            "VernacExtend",
            "b6f3a4286031b29f7b2c594d8224a66b11d3e51d"
        ],
        [
            "intros H_fgh'.",
            "VernacExtend",
            "124b0a9b173a01c6065faec21fdb398ef30ba9a8"
        ],
        [
            "case (Z_lt_dec 2 o2).",
            "VernacExtend",
            "b747e4f9f3180cb6af258b8fd95b147f67418f3e"
        ],
        [
            "intro Ho2.",
            "VernacExtend",
            "8afe0ad03385c58284ff089700a6e48319e36a6a"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_2 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "2416253b968fdf37c51579e985ced59ed75f277d"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn a, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "4c5c6306e821b80c00e616d45012b1d3aa7cca6f"
        ],
        [
            "left; left; left; left; left; left; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o2 in Ho2; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "831ea598321daef42587f3e9e47557624f3cc91d"
        ],
        [
            "case (Z_lt_dec o2 (-2)).",
            "VernacExtend",
            "a154a84530155d303eb1a188f0e73f1de92f2b11"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_3 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "44518512dfe88ca88898fe96b8fbdc54e72141e7"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn a)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "1478f4a6d28773e4dd0ccd88c5c7f59c43e654a8"
        ],
        [
            "left; left; left; left; left; right; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o2 in Ho2'; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "c5217cdbbbe71f71276289f5435b759bc39e55e4"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_dL_nR_4 a b c d e f g h (dL xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_3 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "f64fa610989268eca45d7884cde62e0d3b3c9532"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign (a + c) (a + b + c + d) c (c + d) (e + g) (e + f + g + h) g (g + h) xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_2 (a + c)%Z (a + b + c + d)%Z c (c + d)%Z (e + g)%Z (e + f + g + h)%Z g (g + h)%Z xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "3fe28ab525f60637e5d17430a5d78b87164396ab"
        ],
        [
            "intros Hbcd'.",
            "VernacExtend",
            "bd2fb66b4924206bddf393e42dfb7edeabbc1385"
        ],
        [
            "case (three_integers_dec_inf f g h).",
            "VernacExtend",
            "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
        ],
        [
            "intros (Hf, (Hg, Hh)).",
            "VernacExtend",
            "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
        ],
        [
            "case (Z_lt_dec 2 o1).",
            "VernacExtend",
            "f48e06a1765d3040d72a57b372312e148bc25a46"
        ],
        [
            "intro Ho1.",
            "VernacExtend",
            "b196b7b9d63229b2fe13418ac27d2ca01fece5a9"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_5 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "73d28ffa851b17a895eb8de63759600c1cc7d195"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn e, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "0ad880c605fe300047e8217a5e3b992be3a63357"
        ],
        [
            "left; left; left; left; left; left; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o1 in Ho1; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "ee89cbabd8cad9ed668340502dd4e12dadf048a4"
        ],
        [
            "case (Z_lt_dec o1 (-2)).",
            "VernacExtend",
            "cb39341bd62af76a97b55e65c43aac4d8e418897"
        ],
        [
            "intros Ho1' Ho1.",
            "VernacExtend",
            "cdebf24875bdbd6a495ba72a8e2502e67dd822e8"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_6 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "748719d32744224930bba0e4a91f0658594f536b"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "b72345898851be7f8b0e04960895bb4f2b5679fa"
        ],
        [
            "left; left; left; left; left; right; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o1 in Ho1'; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "3adccd55dc5b618fe84410bded5e2e1097d09700"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_dL_nR_7 a b c d e f g h (dL xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_3 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "05c7636b2a0eeb81bdae4b57d3f3af8b5289c4db"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign (a + c) (a + b + c + d) c (c + d) (e + g) (e + f + g + h) g (g + h) xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_2 (a + c)%Z (a + b + c + d)%Z c (c + d)%Z (e + g)%Z (e + f + g + h)%Z g (g + h)%Z xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "3fe28ab525f60637e5d17430a5d78b87164396ab"
        ],
        [
            "intro Hfgh'.",
            "VernacExtend",
            "345b6667cec5f818822048df8b93ef410d8ff631"
        ],
        [
            "case (inside_square_1_dec_inf o1 o2).",
            "VernacExtend",
            "d295c561ef561fb8b649e6303ce92c0f0681eb8f"
        ],
        [
            "intro H_inside_1.",
            "VernacExtend",
            "068d44eb2eb58699356ab84ee948b8147fe0eef5"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_8 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "17b14b6ad27d5d97fa40021b5b1bd5759a6a8583"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (1%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "c6ca014c9c9124ee6fb48e320d1b04897ff2a77f"
        ],
        [
            "left; left; left; left; left; case (inside_square_1_inf _ _ H_inside_1); intros (Ho1, Ho2); [ left | right ]; repeat split; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o1 in Ho1; unfold o2 in Ho2; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "a637ed991bbc6cf6cb8e58aa20353e208c724efb"
        ],
        [
            "intro H_inside_1'.",
            "VernacExtend",
            "2ec567de4490f9d472a6a6a40281eff13e5732a9"
        ],
        [
            "case (inside_square_2_dec_inf o1 o2).",
            "VernacExtend",
            "7682baf8a4bbff99d50bdda519b1ba70e3c47898"
        ],
        [
            "intro H_inside_2.",
            "VernacExtend",
            "b4e80bee310800c8c137b8b864721e5c3244f673"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_9 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "1b15c9a0b17bf8e3bd9ea57e3449cd64dd182336"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "apply False_rec.",
            "VernacExtend",
            "aa34e83eda8e5f1a34cc23685121a87daef49085"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((-1)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "56231c44212e5ee8a73e4ff72dae21eeaf8acf51"
        ],
        [
            "discriminate hl.",
            "VernacExtend",
            "f643a20865d0dde2f37d19887cfd4265938120b1"
        ],
        [
            "intros H_inside_2'.",
            "VernacExtend",
            "4f65b53b2c7b3936fda163236abffb01421ea904"
        ],
        [
            "generalize (Qquadratic_sign_dL_nR_10 a b c d e f g h (dL xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_3 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "8fc05207a6b41ec0c59af37fe14d660de73831e9"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign (a + c) (a + b + c + d) c (c + d) (e + g) (e + f + g + h) g (g + h) xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_2 (a + c)%Z (a + b + c + d)%Z c (c + d)%Z (e + g)%Z (e + f + g + h)%Z g (g + h)%Z xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "3fe28ab525f60637e5d17430a5d78b87164396ab"
        ],
        [
            "case (three_integers_dec_inf b c d).",
            "VernacExtend",
            "d92f13936a5038bdd06bb3160509a88b0ac07217"
        ],
        [
            "intros (Hb, (Hc, Hd)).",
            "VernacExtend",
            "b24025fbd18098487c0ee7d5d35744a09e154027"
        ],
        [
            "case (three_integers_dec_inf f g h).",
            "VernacExtend",
            "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
        ],
        [
            "intros (Hf, (Hg, Hh)).",
            "VernacExtend",
            "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_1 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "e97d2062f29099b8e633a9b753a2b33784c76b0b"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((Z.sgn a * Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "4609e55137027790181f4ab597564d917c1e01e8"
        ],
        [
            "left; left; left; left; left; rewrite <- Zsgn_15 in hl.",
            "VernacExtend",
            "ee2e09bae78c5f1f2dd8bb9f34710881f57b1e50"
        ],
        [
            "case (Zsgn_16 _ _ (sym_eq hl)); intros (Ha, He); [ left | right ]; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | apply Zlt_le_weak ]; assumption.",
            "VernacExtend",
            "b6f3a4286031b29f7b2c594d8224a66b11d3e51d"
        ],
        [
            "intros H_fgh'.",
            "VernacExtend",
            "124b0a9b173a01c6065faec21fdb398ef30ba9a8"
        ],
        [
            "case (Z_lt_dec 2 o2).",
            "VernacExtend",
            "b747e4f9f3180cb6af258b8fd95b147f67418f3e"
        ],
        [
            "intro Ho2.",
            "VernacExtend",
            "8afe0ad03385c58284ff089700a6e48319e36a6a"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_2 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "9d11e8d3732b1a9fe564baeaad7926fc1537b0b6"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn a, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "5b63d9d5dfee7282e910c421360e841e32775d3d"
        ],
        [
            "left; left; left; left; left; left; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o2 in Ho2; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "831ea598321daef42587f3e9e47557624f3cc91d"
        ],
        [
            "case (Z_lt_dec o2 (-2)).",
            "VernacExtend",
            "a154a84530155d303eb1a188f0e73f1de92f2b11"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_3 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "45bd69bc49004ab873c9fccf5ccb3a932ddbf353"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn a)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "889020acff041b16078b24e616581ff447a863fc"
        ],
        [
            "left; left; left; left; left; right; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o2 in Ho2'; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "c5217cdbbbe71f71276289f5435b759bc39e55e4"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_dL_dL_4 a b c d e f g h (dL xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_4 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "60709f15591f536d32427cc90af2373272b0090d"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign (a + b + c + d) (b + d) (c + d) d (e + f + g + h) (f + h) (g + h) h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_2 (a + b + c + d)%Z (b + d)%Z (c + d)%Z d (e + f + g + h)%Z (f + h)%Z (g + h)%Z h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "e034b4fb49a071fecbbc5e8451b54f7bf29904b2"
        ],
        [
            "intros Hbcd'.",
            "VernacExtend",
            "bd2fb66b4924206bddf393e42dfb7edeabbc1385"
        ],
        [
            "case (three_integers_dec_inf f g h).",
            "VernacExtend",
            "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
        ],
        [
            "intros (Hf, (Hg, Hh)).",
            "VernacExtend",
            "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
        ],
        [
            "case (Z_lt_dec 2 o1).",
            "VernacExtend",
            "f48e06a1765d3040d72a57b372312e148bc25a46"
        ],
        [
            "intro Ho1.",
            "VernacExtend",
            "b196b7b9d63229b2fe13418ac27d2ca01fece5a9"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_5 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "e60e2a27dd0430030b87f0c6f1021aec69cdd88b"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn e, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "b407c61f1a18e40fafd929766a13d1e5c45ac6c1"
        ],
        [
            "left; left; left; left; left; left; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o1 in Ho1; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "ee89cbabd8cad9ed668340502dd4e12dadf048a4"
        ],
        [
            "case (Z_lt_dec o1 (-2)).",
            "VernacExtend",
            "cb39341bd62af76a97b55e65c43aac4d8e418897"
        ],
        [
            "intros Ho1' Ho1.",
            "VernacExtend",
            "cdebf24875bdbd6a495ba72a8e2502e67dd822e8"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_6 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "7b0e4612a8dda195acef9dc367bef08bf8fcb312"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "844a43edc5ec9776aa2bee077d9997ca4ad12fc4"
        ],
        [
            "left; left; left; left; left; right; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o1 in Ho1'; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "3adccd55dc5b618fe84410bded5e2e1097d09700"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_dL_dL_7 a b c d e f g h (dL xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_4 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "51d4862aa5abb3dd93094f58d26b4d40909e48b4"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign (a + b + c + d) (b + d) (c + d) d (e + f + g + h) (f + h) (g + h) h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_2 (a + b + c + d)%Z (b + d)%Z (c + d)%Z d (e + f + g + h)%Z (f + h)%Z (g + h)%Z h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "e034b4fb49a071fecbbc5e8451b54f7bf29904b2"
        ],
        [
            "intro Hfgh'.",
            "VernacExtend",
            "345b6667cec5f818822048df8b93ef410d8ff631"
        ],
        [
            "case (inside_square_1_dec_inf o1 o2).",
            "VernacExtend",
            "d295c561ef561fb8b649e6303ce92c0f0681eb8f"
        ],
        [
            "intro H_inside_1.",
            "VernacExtend",
            "068d44eb2eb58699356ab84ee948b8147fe0eef5"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_8 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "084252fe935af0a92ac7feca5fe44fa253615116"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (1%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "6ae4ee87ebc2a8d8a9f1c3b49745c38ea279223f"
        ],
        [
            "left; left; left; left; left; case (inside_square_1_inf _ _ H_inside_1); intros (Ho1, Ho2); [ left | right ]; repeat split; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o1 in Ho1; unfold o2 in Ho2; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "a637ed991bbc6cf6cb8e58aa20353e208c724efb"
        ],
        [
            "intro H_inside_1'.",
            "VernacExtend",
            "2ec567de4490f9d472a6a6a40281eff13e5732a9"
        ],
        [
            "case (inside_square_2_dec_inf o1 o2).",
            "VernacExtend",
            "7682baf8a4bbff99d50bdda519b1ba70e3c47898"
        ],
        [
            "intro H_inside_2.",
            "VernacExtend",
            "b4e80bee310800c8c137b8b864721e5c3244f673"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_9 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "01ac32711281d55d5e8790d70a8a118de564f06e"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "apply False_rec.",
            "VernacExtend",
            "aa34e83eda8e5f1a34cc23685121a87daef49085"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((-1)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "e78ae26937e37cea69858b520450a8e12dd3b653"
        ],
        [
            "discriminate hl.",
            "VernacExtend",
            "f643a20865d0dde2f37d19887cfd4265938120b1"
        ],
        [
            "intros H_inside_2'.",
            "VernacExtend",
            "4f65b53b2c7b3936fda163236abffb01421ea904"
        ],
        [
            "generalize (Qquadratic_sign_dL_dL_10 a b c d e f g h (dL xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_4 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "92aabbab4ba412dd08be60745aa35f49b983e5c9"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign (a + b + c + d) (b + d) (c + d) d (e + f + g + h) (f + h) (g + h) h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_2 (a + b + c + d)%Z (b + d)%Z (c + d)%Z d (e + f + g + h)%Z (f + h)%Z (g + h)%Z h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "e034b4fb49a071fecbbc5e8451b54f7bf29904b2"
        ],
        [
            "generalize (Qquadratic_signok_0' _ _ _ _ _ H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "82ba942058f599dab626c16f3958e19a9e8856b7"
        ],
        [
            "intros H_Qhomographic_sg_denom_nonzero.",
            "VernacExtend",
            "7ee186f9a3e15bd36020fb30747a871aa671241b"
        ],
        [
            "set (L3 := Qhomographic_sign (a + b) (c + d) (e + f) (g + h) (dL xs) H_Qhomographic_sg_denom_nonzero) in *.",
            "VernacExtend",
            "bbcac23fd22aa8b7c66b46a28b66bc764c9d21df"
        ],
        [
            "set (l1 := fst L3) in *.",
            "VernacExtend",
            "53a0156fadda9545b3aad23e6562a9f7571500e5"
        ],
        [
            "set (l2 := fst (snd L3)) in *.",
            "VernacExtend",
            "d2ff6d484662d1ffc681d957fae47d75d4f0ffe7"
        ],
        [
            "set (l3 := snd (snd L3)) in *.",
            "VernacExtend",
            "a4f4a2a7a6777d6cf8547330f649c7e802134835"
        ],
        [
            "set (na_ := fst l2) in *.",
            "VernacExtend",
            "4cc5c8cdb69c666a5ed03e05d9c5d3bf6b3508c8"
        ],
        [
            "set (nb_ := fst (snd l2)) in *.",
            "VernacExtend",
            "c689e91162d844443766f43d357817dbbb7e3d29"
        ],
        [
            "set (nc_ := fst (snd (snd l2))) in *.",
            "VernacExtend",
            "77cd624092e8a297c0e31fd1f7dd984499cdbe5d"
        ],
        [
            "set (nd_ := snd (snd (snd l2))) in *.",
            "VernacExtend",
            "3b6670693e7eae913c0e386dd06bc54541698adc"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_One a b c d e f g h (dL xs) One H_Qquadratic_sg_denom_nonzero l1 na_ nb_ nc_ nd_ l3 H_Qhomographic_sg_denom_nonzero); intros H1.",
            "VernacExtend",
            "729fdcd685e6089ef0bda9bddf52a935a2f85311"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (l1, (0%Z, (na_, (0%Z, nb_)), (0%Z, (nc_, (0%Z, nd_))), (l3, One)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) One H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; assumption | apply H1; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity ] | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end; repeat rewrite ZERO_left; repeat rewrite ZERO_right ].",
            "VernacExtend",
            "6113bc677d3cd2bccf6a64d2302ba5e6dd070d2a"
        ],
        [
            "assert (H_sg_unfolded : Qhomographic_sign (a + b) (c + d) (e + f) (g + h) (dL xs) H_Qhomographic_sg_denom_nonzero = (1%Z, (na_, (nb_, (nc_, nd_)), l3))).",
            "VernacExtend",
            "5f3aa3f2dc5ec10084141f5c9dbbc486c280e2dd"
        ],
        [
            "rewrite hl; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity.",
            "VernacExtend",
            "92853c2a640fbbf7420687b2cc9dd9d0f8561009"
        ],
        [
            "generalize (sg_pos_2 (a + b) (c + d) (e + f) (g + h) (dL xs) H_Qhomographic_sg_denom_nonzero na_ nb_ nc_ nd_ l3 H_sg_unfolded).",
            "VernacExtend",
            "0d5236608706bc0e8a31ee108c734ba36c15f84b"
        ],
        [
            "intros [[(H_a, (H_b, (H_c, H_d)))| (H_a, (H_b, (H_c, H_d)))]| H_l3]; [ case l3; left; [ right; repeat split; assumption || discriminate | right; repeat split; assumption || discriminate | left; right; repeat split ] | case l3; [ right; repeat split; assumption || discriminate | right; repeat split; assumption || discriminate | left; left; right; repeat split ] | left; left; right; repeat split; assumption ].",
            "VernacExtend",
            "cb3ad86028a07cb387904a1b8cf99c0e91f24b08"
        ],
        [
            "generalize (Qquadratic_signok_0 _ _ _ _ _ H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "891278ce1d1d1a595b0c37c3d03fef7ef0e6f7fa"
        ],
        [
            "intros H_Qhomographic_sg_denom_nonzero.",
            "VernacExtend",
            "7ee186f9a3e15bd36020fb30747a871aa671241b"
        ],
        [
            "set (L3 := Qhomographic_sign (a + c) (b + d) (e + g) (f + h) p2 H_Qhomographic_sg_denom_nonzero) in *.",
            "VernacExtend",
            "a3acce1fe502fff654a4ab9f8e3264e43d54debe"
        ],
        [
            "set (l1 := fst L3) in *.",
            "VernacExtend",
            "53a0156fadda9545b3aad23e6562a9f7571500e5"
        ],
        [
            "set (l2 := fst (snd L3)) in *.",
            "VernacExtend",
            "d2ff6d484662d1ffc681d957fae47d75d4f0ffe7"
        ],
        [
            "set (l3 := snd (snd L3)) in *.",
            "VernacExtend",
            "a4f4a2a7a6777d6cf8547330f649c7e802134835"
        ],
        [
            "set (na_ := fst l2) in *.",
            "VernacExtend",
            "4cc5c8cdb69c666a5ed03e05d9c5d3bf6b3508c8"
        ],
        [
            "set (nb_ := fst (snd l2)) in *.",
            "VernacExtend",
            "c689e91162d844443766f43d357817dbbb7e3d29"
        ],
        [
            "set (nc_ := fst (snd (snd l2))) in *.",
            "VernacExtend",
            "77cd624092e8a297c0e31fd1f7dd984499cdbe5d"
        ],
        [
            "set (nd_ := snd (snd (snd l2))) in *.",
            "VernacExtend",
            "3b6670693e7eae913c0e386dd06bc54541698adc"
        ],
        [
            "generalize (Qquadratic_sign_One_y a b c d e f g h One p2 H_Qquadratic_sg_denom_nonzero l1 na_ nb_ nc_ nd_ l3 H_Qhomographic_sg_denom_nonzero); intros H1.",
            "VernacExtend",
            "0f9e0cc2712b63c207db1a772be8487cca639a7f"
        ],
        [
            "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (l1, (0%Z, (0%Z, (na_, nb_)), (0%Z, (0%Z, (nc_, nd_))), (One, l3)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h One p2 H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; assumption | apply H1; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity ] | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end; repeat rewrite ZERO_left; repeat rewrite ZERO_right ].",
            "VernacExtend",
            "b2ca9cac48613c0fcb33de1cf4d7b6d97bfec50c"
        ],
        [
            "assert (H_sg_unfolded : Qhomographic_sign (a + c) (b + d) (e + g) (f + h) p2 H_Qhomographic_sg_denom_nonzero = (1%Z, (na_, (nb_, (nc_, nd_)), l3))).",
            "VernacExtend",
            "2d3bd57f9995d0f05a5131ab12186f6fed4fa883"
        ],
        [
            "rewrite hl; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity.",
            "VernacExtend",
            "92853c2a640fbbf7420687b2cc9dd9d0f8561009"
        ],
        [
            "generalize (sg_pos_2 (a + c) (b + d) (e + g) (f + h) p2 H_Qhomographic_sg_denom_nonzero na_ nb_ nc_ nd_ l3 H_sg_unfolded).",
            "VernacExtend",
            "67f5fdcd303af4fd0b54f620f72f7c42a2758ebb"
        ],
        [
            "intros [[(H_a, (H_b, (H_c, H_d)))| (H_a, (H_b, (H_c, H_d)))]| H_l3]; left; left; [ left; left; right | left; right | right ]; repeat split; assumption.",
            "VernacExtend",
            "48b2c5d6d338c6db1bdc78b94b03fee63545fa97"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qquadratic_sign_neg_1 : forall (a b c d e f g h : Z) (p1 p2 : Qpositive) (H_Qquadratic_sg_denom_nonzero : Qquadratic_sg_denom_nonzero e f g h p1 p2) (na nb nc nd ne nf ng nh : Z) (np1 np2 : Qpositive), Qquadratic_sign a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) -> {(0 < na + nb + nc + nd)%Z /\\ (ne + nf + ng + nh < 0)%Z} + {(na + nb + nc + nd < 0 < ne + nf + ng + nh)%Z}.",
            "VernacStartTheoremProof",
            "cfb1845781894839ff1082f82935cd3e1f79aea0"
        ],
        [
            "fix Qquadratic_sign_neg_1 9.",
            "VernacExtend",
            "684c3f722b321e219f6414e418ea1745bdd1cb49"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "set (o1 := outside_square a b c d) in *.",
            "VernacExtend",
            "115a9a38809cb78c24da8e0924729c0e3ba70321"
        ],
        [
            "set (o2 := outside_square e f g h) in *.",
            "VernacExtend",
            "3226c4628498a920e7666c26460e51df81dc5ca0"
        ],
        [
            "destruct p1 as [xs| xs| ].",
            "VernacExtend",
            "c49c827365e4d09f3f970ea66544c82eb12cd410"
        ],
        [
            "destruct p2 as [ys| ys| ].",
            "VernacExtend",
            "a6e067f2aa8567de952ce8b70a91f70f20efb13b"
        ],
        [
            "case (three_integers_dec_inf b c d).",
            "VernacExtend",
            "d92f13936a5038bdd06bb3160509a88b0ac07217"
        ],
        [
            "intros (Hb, (Hc, Hd)).",
            "VernacExtend",
            "b24025fbd18098487c0ee7d5d35744a09e154027"
        ],
        [
            "case (three_integers_dec_inf f g h).",
            "VernacExtend",
            "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
        ],
        [
            "intros (Hf, (Hg, Hh)).",
            "VernacExtend",
            "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_1 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "7be30785199ecf5ea7f56f20ee28d6c2c1399de1"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((Z.sgn a * Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "c31e9d5f2bd40c63d9b124cc6a6c0ba0f8fd3f99"
        ],
        [
            "rewrite <- Zsgn_15 in hl.",
            "VernacExtend",
            "64ba35dcc586c9b63dbf3219dc7171fd2f2f1699"
        ],
        [
            "case (Zsgn_17 _ _ (sym_eq hl)); intros (Ha, He); [ left | right ]; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; assumption.",
            "VernacExtend",
            "818834f21942e01dabd14372f0503ecbbc11ccb6"
        ],
        [
            "intros H_fgh'.",
            "VernacExtend",
            "124b0a9b173a01c6065faec21fdb398ef30ba9a8"
        ],
        [
            "case (Z_lt_dec 2 o2).",
            "VernacExtend",
            "b747e4f9f3180cb6af258b8fd95b147f67418f3e"
        ],
        [
            "intro Ho2.",
            "VernacExtend",
            "8afe0ad03385c58284ff089700a6e48319e36a6a"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_2 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "4ec97d0a6eae9c6fed02c0ed7f3a2f9e0ca70720"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn a, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "5e2af73c2948d17574aeea24fa758f280e08ba38"
        ],
        [
            "right; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply Zsgn_10; apply sym_eq | apply outside_square_1 ]; assumption.",
            "VernacExtend",
            "f22903677711ada06a614348d2e6f08062b26084"
        ],
        [
            "case (Z_lt_dec o2 (-2)).",
            "VernacExtend",
            "a154a84530155d303eb1a188f0e73f1de92f2b11"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_3 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "94c97fbf61793fb95b35d927607ba145bc1e03a5"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn a)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "f16c2114f6327bb8f02f92b5eb53520e77400881"
        ],
        [
            "left; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply Zsgn_9; apply sym_eq; apply Z.opp_inj; assumption | apply outside_square_2; assumption ].",
            "VernacExtend",
            "1b5c9f1c16c358a08db0f58aa154bae41981fa4d"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_nR_nR_4 a b c d e f g h (nR xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_1 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "f71909b24b264ce20070f11b21911afdcf0c33ea"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign a (a + b) (a + c) (a + b + c + d) e (e + f) (e + g) (e + f + g + h) xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_1 a (a + b)%Z (a + c)%Z (a + b + c + d)%Z e (e + f)%Z (e + g)%Z (e + f + g + h)%Z xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "15e255e318590df091ff5ebe9864460a476c8f97"
        ],
        [
            "intros Hbcd'.",
            "VernacExtend",
            "bd2fb66b4924206bddf393e42dfb7edeabbc1385"
        ],
        [
            "case (three_integers_dec_inf f g h).",
            "VernacExtend",
            "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
        ],
        [
            "intros (Hf, (Hg, Hh)).",
            "VernacExtend",
            "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
        ],
        [
            "case (Z_lt_dec 2 o1).",
            "VernacExtend",
            "f48e06a1765d3040d72a57b372312e148bc25a46"
        ],
        [
            "intro Ho1.",
            "VernacExtend",
            "b196b7b9d63229b2fe13418ac27d2ca01fece5a9"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_5 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "b7bfe4c6defebe115fd2accc4b2946f79db5889b"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn e, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "490a519bb00bc6328b331c84ceeb5c7f9df79113"
        ],
        [
            "left; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply outside_square_1 | apply Zsgn_10; apply sym_eq ]; assumption.",
            "VernacExtend",
            "95e6c909c31f5d470c8e54099307e10faf90f799"
        ],
        [
            "case (Z_lt_dec o1 (-2)).",
            "VernacExtend",
            "cb39341bd62af76a97b55e65c43aac4d8e418897"
        ],
        [
            "intros Ho1' Ho1.",
            "VernacExtend",
            "cdebf24875bdbd6a495ba72a8e2502e67dd822e8"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_6 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "f483a1b16f77861b6ce8802851e84359261f67bd"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "1d4d643d47da11e23bda0a2f4a39e0468419ef4a"
        ],
        [
            "right; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply outside_square_2 | apply Zsgn_9; apply sym_eq; apply Z.opp_inj ]; assumption.",
            "VernacExtend",
            "bd9c21731af295ba50f73318dc2d42387bf56c88"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_nR_nR_7 a b c d e f g h (nR xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_1 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "810bc89051fc8ecbfd9f846e25cd1052a11c500a"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign a (a + b) (a + c) (a + b + c + d) e (e + f) (e + g) (e + f + g + h) xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_1 a (a + b)%Z (a + c)%Z (a + b + c + d)%Z e (e + f)%Z (e + g)%Z (e + f + g + h)%Z xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "15e255e318590df091ff5ebe9864460a476c8f97"
        ],
        [
            "intro Hfgh'.",
            "VernacExtend",
            "345b6667cec5f818822048df8b93ef410d8ff631"
        ],
        [
            "case (inside_square_1_dec_inf o1 o2).",
            "VernacExtend",
            "d295c561ef561fb8b649e6303ce92c0f0681eb8f"
        ],
        [
            "intro H_inside_1.",
            "VernacExtend",
            "068d44eb2eb58699356ab84ee948b8147fe0eef5"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_8 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "17c4bef80f8937e9f81b326e04069c70ccf1b8df"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (1%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "0650642759619566070d9194ab5675fe6ffbb50a"
        ],
        [
            "discriminate hl.",
            "VernacExtend",
            "f643a20865d0dde2f37d19887cfd4265938120b1"
        ],
        [
            "intro H_inside_1'.",
            "VernacExtend",
            "2ec567de4490f9d472a6a6a40281eff13e5732a9"
        ],
        [
            "case (inside_square_2_dec_inf o1 o2).",
            "VernacExtend",
            "7682baf8a4bbff99d50bdda519b1ba70e3c47898"
        ],
        [
            "intro H_inside_2.",
            "VernacExtend",
            "b4e80bee310800c8c137b8b864721e5c3244f673"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_9 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "152690edd4ff3f485e8452c0c2c329c423aa3337"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((-1)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "36274c2cd325ad04f710525b70f6632215eaaf32"
        ],
        [
            "case (inside_square_2_inf _ _ H_inside_2); intros (Ho1, Ho2); [ left; split; [ apply outside_square_1 | apply outside_square_2 ] | right; split; [ apply outside_square_2 | apply outside_square_1 ] ]; assumption.",
            "VernacExtend",
            "ee52f16adb9d832c73b20fbfeb18e2425dd33858"
        ],
        [
            "intros H_inside_2'.",
            "VernacExtend",
            "4f65b53b2c7b3936fda163236abffb01421ea904"
        ],
        [
            "generalize (Qquadratic_sign_nR_nR_10 a b c d e f g h (nR xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_1 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "ebf1110cd2276609eca3149433715718142a96e8"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign a (a + b) (a + c) (a + b + c + d) e (e + f) (e + g) (e + f + g + h) xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_1 a (a + b)%Z (a + c)%Z (a + b + c + d)%Z e (e + f)%Z (e + g)%Z (e + f + g + h)%Z xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "15e255e318590df091ff5ebe9864460a476c8f97"
        ],
        [
            "case (three_integers_dec_inf b c d).",
            "VernacExtend",
            "d92f13936a5038bdd06bb3160509a88b0ac07217"
        ],
        [
            "intros (Hb, (Hc, Hd)).",
            "VernacExtend",
            "b24025fbd18098487c0ee7d5d35744a09e154027"
        ],
        [
            "case (three_integers_dec_inf f g h).",
            "VernacExtend",
            "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
        ],
        [
            "intros (Hf, (Hg, Hh)).",
            "VernacExtend",
            "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_1 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "0b3a7cf1aee6c21cac9c8f1a7131131c9cf68287"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((Z.sgn a * Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "f684fc76c06fd7949c8315d651495f73c3b3b422"
        ],
        [
            "rewrite <- Zsgn_15 in hl.",
            "VernacExtend",
            "64ba35dcc586c9b63dbf3219dc7171fd2f2f1699"
        ],
        [
            "case (Zsgn_17 _ _ (sym_eq hl)); intros (Ha, He); [ left | right ]; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; assumption.",
            "VernacExtend",
            "818834f21942e01dabd14372f0503ecbbc11ccb6"
        ],
        [
            "intros H_fgh'.",
            "VernacExtend",
            "124b0a9b173a01c6065faec21fdb398ef30ba9a8"
        ],
        [
            "case (Z_lt_dec 2 o2).",
            "VernacExtend",
            "b747e4f9f3180cb6af258b8fd95b147f67418f3e"
        ],
        [
            "intro Ho2.",
            "VernacExtend",
            "8afe0ad03385c58284ff089700a6e48319e36a6a"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_2 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "8db38400c71755cb43bf15e4e55b71fddecf8c60"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn a, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "cf68fc857997060d9ce1a200a04131601c0ef720"
        ],
        [
            "right; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply Zsgn_10; apply sym_eq; assumption | apply outside_square_1; assumption ].",
            "VernacExtend",
            "dc679137e224a113435622d574415b0ed8df7f74"
        ],
        [
            "case (Z_lt_dec o2 (-2)).",
            "VernacExtend",
            "a154a84530155d303eb1a188f0e73f1de92f2b11"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_3 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "0a90e6d9978b9a2224d75e7522f5bb5ecb2ce459"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn a)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "7df58376bdfc9159286c89b9d8ab24ebe5b2a078"
        ],
        [
            "left; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply Zsgn_9; apply sym_eq; apply Z.opp_inj; assumption | apply outside_square_2; assumption ].",
            "VernacExtend",
            "1b5c9f1c16c358a08db0f58aa154bae41981fa4d"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_nR_dL_4 a b c d e f g h (nR xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_2 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "e338eb26767fc3684e8a97123c68697052d25a34"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign (a + b) b (a + b + c + d) (b + d) (e + f) f (e + f + g + h) (f + h) xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_1 (a + b)%Z b (a + b + c + d)%Z (b + d)%Z (e + f)%Z f (e + f + g + h)%Z (f + h)%Z xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "2e8eb7ec51d337dd8b21d3b431a69bef7db2ccf7"
        ],
        [
            "intros Hbcd'.",
            "VernacExtend",
            "bd2fb66b4924206bddf393e42dfb7edeabbc1385"
        ],
        [
            "case (three_integers_dec_inf f g h).",
            "VernacExtend",
            "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
        ],
        [
            "intros (Hf, (Hg, Hh)).",
            "VernacExtend",
            "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
        ],
        [
            "case (Z_lt_dec 2 o1).",
            "VernacExtend",
            "f48e06a1765d3040d72a57b372312e148bc25a46"
        ],
        [
            "intro Ho1.",
            "VernacExtend",
            "b196b7b9d63229b2fe13418ac27d2ca01fece5a9"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_5 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "60dee11bf970fa431bc509100b556cfda9cd4016"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn e, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "af1766f26a05beac7fa4fe116f6290749416f336"
        ],
        [
            "left; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply outside_square_1 | apply Zsgn_10; apply sym_eq ]; assumption.",
            "VernacExtend",
            "95e6c909c31f5d470c8e54099307e10faf90f799"
        ],
        [
            "case (Z_lt_dec o1 (-2)).",
            "VernacExtend",
            "cb39341bd62af76a97b55e65c43aac4d8e418897"
        ],
        [
            "intros Ho1' Ho1.",
            "VernacExtend",
            "cdebf24875bdbd6a495ba72a8e2502e67dd822e8"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_6 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "73cd66244c556704a4acb72cdfd1263b52028628"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "d90555c2d094ffb9f1a95cae86df0c7fb0cfc199"
        ],
        [
            "right; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply outside_square_2 | apply Zsgn_9; apply sym_eq; apply Z.opp_inj ]; assumption.",
            "VernacExtend",
            "bd9c21731af295ba50f73318dc2d42387bf56c88"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_nR_dL_7 a b c d e f g h (nR xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_2 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "aece866d71f9f6b70c44ff6035c02e2759b10435"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign (a + b) b (a + b + c + d) (b + d) (e + f) f (e + f + g + h) (f + h) xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_1 (a + b)%Z b (a + b + c + d)%Z (b + d)%Z (e + f)%Z f (e + f + g + h)%Z (f + h)%Z xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "2e8eb7ec51d337dd8b21d3b431a69bef7db2ccf7"
        ],
        [
            "intro Hfgh'.",
            "VernacExtend",
            "345b6667cec5f818822048df8b93ef410d8ff631"
        ],
        [
            "case (inside_square_1_dec_inf o1 o2).",
            "VernacExtend",
            "d295c561ef561fb8b649e6303ce92c0f0681eb8f"
        ],
        [
            "intro H_inside_1.",
            "VernacExtend",
            "068d44eb2eb58699356ab84ee948b8147fe0eef5"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_8 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "897d1753e26f302c001afae6ff16a94868186d2e"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (1%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "745003fdb5ed8ab204e0f47eaf496a7b2cef2e43"
        ],
        [
            "discriminate hl.",
            "VernacExtend",
            "f643a20865d0dde2f37d19887cfd4265938120b1"
        ],
        [
            "intro H_inside_1'.",
            "VernacExtend",
            "2ec567de4490f9d472a6a6a40281eff13e5732a9"
        ],
        [
            "case (inside_square_2_dec_inf o1 o2).",
            "VernacExtend",
            "7682baf8a4bbff99d50bdda519b1ba70e3c47898"
        ],
        [
            "intro H_inside_2.",
            "VernacExtend",
            "b4e80bee310800c8c137b8b864721e5c3244f673"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_9 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "cbbf9d97e58e2bb95455ca931ec68344767f069d"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((-1)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "3ecad056d63754357dbca38199ec82d931a59995"
        ],
        [
            "case (inside_square_2_inf _ _ H_inside_2); intros (Ho1, Ho2); [ left; split; [ apply outside_square_1 | apply outside_square_2 ] | right; split; [ apply outside_square_2 | apply outside_square_1 ] ]; assumption.",
            "VernacExtend",
            "ee52f16adb9d832c73b20fbfeb18e2425dd33858"
        ],
        [
            "intros H_inside_2'.",
            "VernacExtend",
            "4f65b53b2c7b3936fda163236abffb01421ea904"
        ],
        [
            "generalize (Qquadratic_sign_nR_dL_10 a b c d e f g h (nR xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_2 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "0d3068282c5f924b3105b9445cf9b7dfcc50b98c"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign (a + b) b (a + b + c + d) (b + d) (e + f) f (e + f + g + h) (f + h) xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_1 (a + b)%Z b (a + b + c + d)%Z (b + d)%Z (e + f)%Z f (e + f + g + h)%Z (f + h)%Z xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "2e8eb7ec51d337dd8b21d3b431a69bef7db2ccf7"
        ],
        [
            "generalize (Qquadratic_signok_0' _ _ _ _ _ H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "82ba942058f599dab626c16f3958e19a9e8856b7"
        ],
        [
            "intros H_Qhomographic_sg_denom_nonzero.",
            "VernacExtend",
            "7ee186f9a3e15bd36020fb30747a871aa671241b"
        ],
        [
            "set (L3 := Qhomographic_sign (a + b) (c + d) (e + f) (g + h) (nR xs) H_Qhomographic_sg_denom_nonzero) in *.",
            "VernacExtend",
            "84df2c330ca924d8672b2dc2167b20dca2d9d189"
        ],
        [
            "set (l1 := fst L3) in *.",
            "VernacExtend",
            "53a0156fadda9545b3aad23e6562a9f7571500e5"
        ],
        [
            "set (l2 := fst (snd L3)) in *.",
            "VernacExtend",
            "d2ff6d484662d1ffc681d957fae47d75d4f0ffe7"
        ],
        [
            "set (l3 := snd (snd L3)) in *.",
            "VernacExtend",
            "a4f4a2a7a6777d6cf8547330f649c7e802134835"
        ],
        [
            "set (na_ := fst l2) in *.",
            "VernacExtend",
            "4cc5c8cdb69c666a5ed03e05d9c5d3bf6b3508c8"
        ],
        [
            "set (nb_ := fst (snd l2)) in *.",
            "VernacExtend",
            "c689e91162d844443766f43d357817dbbb7e3d29"
        ],
        [
            "set (nc_ := fst (snd (snd l2))) in *.",
            "VernacExtend",
            "77cd624092e8a297c0e31fd1f7dd984499cdbe5d"
        ],
        [
            "set (nd_ := snd (snd (snd l2))) in *.",
            "VernacExtend",
            "3b6670693e7eae913c0e386dd06bc54541698adc"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_One a b c d e f g h (nR xs) One H_Qquadratic_sg_denom_nonzero l1 na_ nb_ nc_ nd_ l3 H_Qhomographic_sg_denom_nonzero); intros H1.",
            "VernacExtend",
            "3aaded4fd9b7cf246242f869d542f1391f8cbda2"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (l1, (0%Z, (na_, (0%Z, nb_)), (0%Z, (nc_, (0%Z, nd_))), (l3, One)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) One H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; assumption | apply H1; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity ] | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end; repeat rewrite ZERO_left; repeat rewrite Zplus_0_r ]; apply (sg_neg_1 (a + b) (c + d) (e + f) (g + h) (nR xs) H_Qhomographic_sg_denom_nonzero na_ nb_ nc_ nd_ l3); rewrite hl; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity.",
            "VernacExtend",
            "38d380f1b0c4e7ded71ef24ebb20b18ddf48a3b9"
        ],
        [
            "destruct p2 as [ys| ys| ].",
            "VernacExtend",
            "a6e067f2aa8567de952ce8b70a91f70f20efb13b"
        ],
        [
            "case (three_integers_dec_inf b c d).",
            "VernacExtend",
            "d92f13936a5038bdd06bb3160509a88b0ac07217"
        ],
        [
            "intros (Hb, (Hc, Hd)).",
            "VernacExtend",
            "b24025fbd18098487c0ee7d5d35744a09e154027"
        ],
        [
            "case (three_integers_dec_inf f g h).",
            "VernacExtend",
            "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
        ],
        [
            "intros (Hf, (Hg, Hh)).",
            "VernacExtend",
            "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_1 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "2ca6efa1266480d8bf81b38b038fe6537f4e5150"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((Z.sgn a * Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "b2caf3b27a8370751d9d5866818c1686ef342bfe"
        ],
        [
            "rewrite <- Zsgn_15 in hl.",
            "VernacExtend",
            "64ba35dcc586c9b63dbf3219dc7171fd2f2f1699"
        ],
        [
            "case (Zsgn_17 _ _ (sym_eq hl)); intros (Ha, He); [ left | right ]; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; assumption.",
            "VernacExtend",
            "818834f21942e01dabd14372f0503ecbbc11ccb6"
        ],
        [
            "intros H_fgh'.",
            "VernacExtend",
            "124b0a9b173a01c6065faec21fdb398ef30ba9a8"
        ],
        [
            "case (Z_lt_dec 2 o2).",
            "VernacExtend",
            "b747e4f9f3180cb6af258b8fd95b147f67418f3e"
        ],
        [
            "intro Ho2.",
            "VernacExtend",
            "8afe0ad03385c58284ff089700a6e48319e36a6a"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_2 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "2416253b968fdf37c51579e985ced59ed75f277d"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn a, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "3303ffe5d34872fd07a59d1d63b50f6ad416ea81"
        ],
        [
            "right; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply Zsgn_10; apply sym_eq | apply outside_square_1 ]; assumption.",
            "VernacExtend",
            "f22903677711ada06a614348d2e6f08062b26084"
        ],
        [
            "case (Z_lt_dec o2 (-2)).",
            "VernacExtend",
            "a154a84530155d303eb1a188f0e73f1de92f2b11"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_3 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "44518512dfe88ca88898fe96b8fbdc54e72141e7"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn a)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "ddd8eca906ca1ef2ef533394e906249cd5df019b"
        ],
        [
            "left; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply Zsgn_9; apply sym_eq; apply Z.opp_inj; assumption | apply outside_square_2; assumption ].",
            "VernacExtend",
            "1b5c9f1c16c358a08db0f58aa154bae41981fa4d"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_dL_nR_4 a b c d e f g h (dL xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_3 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "f64fa610989268eca45d7884cde62e0d3b3c9532"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign (a + c) (a + b + c + d) c (c + d) (e + g) (e + f + g + h) g (g + h) xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_1 (a + c)%Z (a + b + c + d)%Z c (c + d)%Z (e + g)%Z (e + f + g + h)%Z g (g + h)%Z xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "d3cbad78bbe443d388614ffefb42ae027fa0f165"
        ],
        [
            "intros Hbcd'.",
            "VernacExtend",
            "bd2fb66b4924206bddf393e42dfb7edeabbc1385"
        ],
        [
            "case (three_integers_dec_inf f g h).",
            "VernacExtend",
            "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
        ],
        [
            "intros (Hf, (Hg, Hh)).",
            "VernacExtend",
            "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
        ],
        [
            "case (Z_lt_dec 2 o1).",
            "VernacExtend",
            "f48e06a1765d3040d72a57b372312e148bc25a46"
        ],
        [
            "intro Ho1.",
            "VernacExtend",
            "b196b7b9d63229b2fe13418ac27d2ca01fece5a9"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_5 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "73d28ffa851b17a895eb8de63759600c1cc7d195"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn e, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "84e24f56497aa416fe301a9c10e45bfb364aedbb"
        ],
        [
            "left; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply outside_square_1 | apply Zsgn_10; apply sym_eq ]; assumption.",
            "VernacExtend",
            "95e6c909c31f5d470c8e54099307e10faf90f799"
        ],
        [
            "case (Z_lt_dec o1 (-2)).",
            "VernacExtend",
            "cb39341bd62af76a97b55e65c43aac4d8e418897"
        ],
        [
            "intros Ho1' Ho1.",
            "VernacExtend",
            "cdebf24875bdbd6a495ba72a8e2502e67dd822e8"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_6 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "748719d32744224930bba0e4a91f0658594f536b"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "b3cf2404d57e524217ecac63b285773d60e763b8"
        ],
        [
            "right; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply outside_square_2 | apply Zsgn_9; apply sym_eq; apply Z.opp_inj ]; assumption.",
            "VernacExtend",
            "bd9c21731af295ba50f73318dc2d42387bf56c88"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_dL_nR_7 a b c d e f g h (dL xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_3 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "05c7636b2a0eeb81bdae4b57d3f3af8b5289c4db"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign (a + c) (a + b + c + d) c (c + d) (e + g) (e + f + g + h) g (g + h) xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_1 (a + c)%Z (a + b + c + d)%Z c (c + d)%Z (e + g)%Z (e + f + g + h)%Z g (g + h)%Z xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "d3cbad78bbe443d388614ffefb42ae027fa0f165"
        ],
        [
            "intro Hfgh'.",
            "VernacExtend",
            "345b6667cec5f818822048df8b93ef410d8ff631"
        ],
        [
            "case (inside_square_1_dec_inf o1 o2).",
            "VernacExtend",
            "d295c561ef561fb8b649e6303ce92c0f0681eb8f"
        ],
        [
            "intro H_inside_1.",
            "VernacExtend",
            "068d44eb2eb58699356ab84ee948b8147fe0eef5"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_8 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "17b14b6ad27d5d97fa40021b5b1bd5759a6a8583"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (1%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "a03a4135524a9863111f878b70ea6b298155f1ab"
        ],
        [
            "discriminate hl.",
            "VernacExtend",
            "f643a20865d0dde2f37d19887cfd4265938120b1"
        ],
        [
            "intro H_inside_1'.",
            "VernacExtend",
            "2ec567de4490f9d472a6a6a40281eff13e5732a9"
        ],
        [
            "case (inside_square_2_dec_inf o1 o2).",
            "VernacExtend",
            "7682baf8a4bbff99d50bdda519b1ba70e3c47898"
        ],
        [
            "intro H_inside_2.",
            "VernacExtend",
            "b4e80bee310800c8c137b8b864721e5c3244f673"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_9 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "1b15c9a0b17bf8e3bd9ea57e3449cd64dd182336"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((-1)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "2ade41f5efeee62f9b50467184181878ce3fe4a6"
        ],
        [
            "case (inside_square_2_inf _ _ H_inside_2); intros (Ho1, Ho2); [ left; split; [ apply outside_square_1 | apply outside_square_2 ] | right; split; [ apply outside_square_2 | apply outside_square_1 ] ]; assumption.",
            "VernacExtend",
            "ee52f16adb9d832c73b20fbfeb18e2425dd33858"
        ],
        [
            "intros H_inside_2'.",
            "VernacExtend",
            "4f65b53b2c7b3936fda163236abffb01421ea904"
        ],
        [
            "generalize (Qquadratic_sign_dL_nR_10 a b c d e f g h (dL xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_3 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "8fc05207a6b41ec0c59af37fe14d660de73831e9"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign (a + c) (a + b + c + d) c (c + d) (e + g) (e + f + g + h) g (g + h) xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_1 (a + c)%Z (a + b + c + d)%Z c (c + d)%Z (e + g)%Z (e + f + g + h)%Z g (g + h)%Z xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "d3cbad78bbe443d388614ffefb42ae027fa0f165"
        ],
        [
            "case (three_integers_dec_inf b c d).",
            "VernacExtend",
            "d92f13936a5038bdd06bb3160509a88b0ac07217"
        ],
        [
            "intros (Hb, (Hc, Hd)).",
            "VernacExtend",
            "b24025fbd18098487c0ee7d5d35744a09e154027"
        ],
        [
            "case (three_integers_dec_inf f g h).",
            "VernacExtend",
            "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
        ],
        [
            "intros (Hf, (Hg, Hh)).",
            "VernacExtend",
            "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_1 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "e97d2062f29099b8e633a9b753a2b33784c76b0b"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((Z.sgn a * Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "72f7c357d61300294796b20da833e84372ab64bf"
        ],
        [
            "rewrite <- Zsgn_15 in hl.",
            "VernacExtend",
            "64ba35dcc586c9b63dbf3219dc7171fd2f2f1699"
        ],
        [
            "case (Zsgn_17 _ _ (sym_eq hl)); intros (Ha, He); [ left | right ]; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; assumption.",
            "VernacExtend",
            "818834f21942e01dabd14372f0503ecbbc11ccb6"
        ],
        [
            "intros H_fgh'.",
            "VernacExtend",
            "124b0a9b173a01c6065faec21fdb398ef30ba9a8"
        ],
        [
            "case (Z_lt_dec 2 o2).",
            "VernacExtend",
            "b747e4f9f3180cb6af258b8fd95b147f67418f3e"
        ],
        [
            "intro Ho2.",
            "VernacExtend",
            "8afe0ad03385c58284ff089700a6e48319e36a6a"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_2 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "9d11e8d3732b1a9fe564baeaad7926fc1537b0b6"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn a, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "cc671df0250929de7b6623564b92b775af84e083"
        ],
        [
            "right; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply Zsgn_10; apply sym_eq; assumption | apply outside_square_1; assumption ].",
            "VernacExtend",
            "dc679137e224a113435622d574415b0ed8df7f74"
        ],
        [
            "case (Z_lt_dec o2 (-2)).",
            "VernacExtend",
            "a154a84530155d303eb1a188f0e73f1de92f2b11"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_3 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "45bd69bc49004ab873c9fccf5ccb3a932ddbf353"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn a)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "a2fb6bd0acb89478d4b93d893a762dc639ec0fa2"
        ],
        [
            "left; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply Zsgn_9; apply sym_eq; apply Z.opp_inj; assumption | apply outside_square_2; assumption ].",
            "VernacExtend",
            "1b5c9f1c16c358a08db0f58aa154bae41981fa4d"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_dL_dL_4 a b c d e f g h (dL xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_4 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "60709f15591f536d32427cc90af2373272b0090d"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign (a + b + c + d) (b + d) (c + d) d (e + f + g + h) (f + h) (g + h) h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_1 (a + b + c + d)%Z (b + d)%Z (c + d)%Z d (e + f + g + h)%Z (f + h)%Z (g + h)%Z h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "5537973e26f7939a864a8b6eb1e4bb57fa2c71e1"
        ],
        [
            "intros Hbcd'.",
            "VernacExtend",
            "bd2fb66b4924206bddf393e42dfb7edeabbc1385"
        ],
        [
            "case (three_integers_dec_inf f g h).",
            "VernacExtend",
            "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
        ],
        [
            "intros (Hf, (Hg, Hh)).",
            "VernacExtend",
            "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
        ],
        [
            "case (Z_lt_dec 2 o1).",
            "VernacExtend",
            "f48e06a1765d3040d72a57b372312e148bc25a46"
        ],
        [
            "intro Ho1.",
            "VernacExtend",
            "b196b7b9d63229b2fe13418ac27d2ca01fece5a9"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_5 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "e60e2a27dd0430030b87f0c6f1021aec69cdd88b"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn e, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "31fb1f4114521812197abf6dc94d340e2ade90c8"
        ],
        [
            "left; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply outside_square_1 | apply Zsgn_10; apply sym_eq ]; assumption.",
            "VernacExtend",
            "95e6c909c31f5d470c8e54099307e10faf90f799"
        ],
        [
            "case (Z_lt_dec o1 (-2)).",
            "VernacExtend",
            "cb39341bd62af76a97b55e65c43aac4d8e418897"
        ],
        [
            "intros Ho1' Ho1.",
            "VernacExtend",
            "cdebf24875bdbd6a495ba72a8e2502e67dd822e8"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_6 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "7b0e4612a8dda195acef9dc367bef08bf8fcb312"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "ace1e6dd012e3aa28cd8a152980eab13aa4aef82"
        ],
        [
            "right; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply outside_square_2 | apply Zsgn_9; apply sym_eq; apply Z.opp_inj ]; assumption.",
            "VernacExtend",
            "bd9c21731af295ba50f73318dc2d42387bf56c88"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_dL_dL_7 a b c d e f g h (dL xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_4 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "51d4862aa5abb3dd93094f58d26b4d40909e48b4"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign (a + b + c + d) (b + d) (c + d) d (e + f + g + h) (f + h) (g + h) h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_1 (a + b + c + d)%Z (b + d)%Z (c + d)%Z d (e + f + g + h)%Z (f + h)%Z (g + h)%Z h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "5537973e26f7939a864a8b6eb1e4bb57fa2c71e1"
        ],
        [
            "intro Hfgh'.",
            "VernacExtend",
            "345b6667cec5f818822048df8b93ef410d8ff631"
        ],
        [
            "case (inside_square_1_dec_inf o1 o2).",
            "VernacExtend",
            "d295c561ef561fb8b649e6303ce92c0f0681eb8f"
        ],
        [
            "intro H_inside_1.",
            "VernacExtend",
            "068d44eb2eb58699356ab84ee948b8147fe0eef5"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_8 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "084252fe935af0a92ac7feca5fe44fa253615116"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (1%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "fd701895c1b9f263984d547d9671bfdb2c9800b5"
        ],
        [
            "discriminate hl.",
            "VernacExtend",
            "f643a20865d0dde2f37d19887cfd4265938120b1"
        ],
        [
            "intro H_inside_1'.",
            "VernacExtend",
            "2ec567de4490f9d472a6a6a40281eff13e5732a9"
        ],
        [
            "case (inside_square_2_dec_inf o1 o2).",
            "VernacExtend",
            "7682baf8a4bbff99d50bdda519b1ba70e3c47898"
        ],
        [
            "intro H_inside_2.",
            "VernacExtend",
            "b4e80bee310800c8c137b8b864721e5c3244f673"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_9 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "01ac32711281d55d5e8790d70a8a118de564f06e"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((-1)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "d486b4ac502e83592b625a26cb69444f61e23790"
        ],
        [
            "case (inside_square_2_inf _ _ H_inside_2); intros (Ho1, Ho2); [ left; split; [ apply outside_square_1 | apply outside_square_2 ] | right; split; [ apply outside_square_2 | apply outside_square_1 ] ]; assumption.",
            "VernacExtend",
            "ee52f16adb9d832c73b20fbfeb18e2425dd33858"
        ],
        [
            "intros H_inside_2'.",
            "VernacExtend",
            "4f65b53b2c7b3936fda163236abffb01421ea904"
        ],
        [
            "generalize (Qquadratic_sign_dL_dL_10 a b c d e f g h (dL xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_4 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "92aabbab4ba412dd08be60745aa35f49b983e5c9"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign (a + b + c + d) (b + d) (c + d) d (e + f + g + h) (f + h) (g + h) h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_1 (a + b + c + d)%Z (b + d)%Z (c + d)%Z d (e + f + g + h)%Z (f + h)%Z (g + h)%Z h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "5537973e26f7939a864a8b6eb1e4bb57fa2c71e1"
        ],
        [
            "generalize (Qquadratic_signok_0' _ _ _ _ _ H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "82ba942058f599dab626c16f3958e19a9e8856b7"
        ],
        [
            "intros H_Qhomographic_sg_denom_nonzero.",
            "VernacExtend",
            "7ee186f9a3e15bd36020fb30747a871aa671241b"
        ],
        [
            "set (L3 := Qhomographic_sign (a + b) (c + d) (e + f) (g + h) (dL xs) H_Qhomographic_sg_denom_nonzero) in *.",
            "VernacExtend",
            "bbcac23fd22aa8b7c66b46a28b66bc764c9d21df"
        ],
        [
            "set (l1 := fst L3) in *.",
            "VernacExtend",
            "53a0156fadda9545b3aad23e6562a9f7571500e5"
        ],
        [
            "set (l2 := fst (snd L3)) in *.",
            "VernacExtend",
            "d2ff6d484662d1ffc681d957fae47d75d4f0ffe7"
        ],
        [
            "set (l3 := snd (snd L3)) in *.",
            "VernacExtend",
            "a4f4a2a7a6777d6cf8547330f649c7e802134835"
        ],
        [
            "set (na_ := fst l2) in *.",
            "VernacExtend",
            "4cc5c8cdb69c666a5ed03e05d9c5d3bf6b3508c8"
        ],
        [
            "set (nb_ := fst (snd l2)) in *.",
            "VernacExtend",
            "c689e91162d844443766f43d357817dbbb7e3d29"
        ],
        [
            "set (nc_ := fst (snd (snd l2))) in *.",
            "VernacExtend",
            "77cd624092e8a297c0e31fd1f7dd984499cdbe5d"
        ],
        [
            "set (nd_ := snd (snd (snd l2))) in *.",
            "VernacExtend",
            "3b6670693e7eae913c0e386dd06bc54541698adc"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_One a b c d e f g h (dL xs) One H_Qquadratic_sg_denom_nonzero l1 na_ nb_ nc_ nd_ l3 H_Qhomographic_sg_denom_nonzero); intros H1.",
            "VernacExtend",
            "729fdcd685e6089ef0bda9bddf52a935a2f85311"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (l1, (0%Z, (na_, (0%Z, nb_)), (0%Z, (nc_, (0%Z, nd_))), (l3, One)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) One H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; assumption | apply H1; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity ] | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end; repeat rewrite ZERO_left; repeat rewrite Zplus_0_r ]; apply (sg_neg_1 (a + b) (c + d) (e + f) (g + h) (dL xs) H_Qhomographic_sg_denom_nonzero na_ nb_ nc_ nd_ l3); rewrite hl; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity.",
            "VernacExtend",
            "641abebd9ce537c2195a83c9daa35566282a65eb"
        ],
        [
            "generalize (Qquadratic_signok_0 _ _ _ _ _ H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "891278ce1d1d1a595b0c37c3d03fef7ef0e6f7fa"
        ],
        [
            "intros H_Qhomographic_sg_denom_nonzero.",
            "VernacExtend",
            "7ee186f9a3e15bd36020fb30747a871aa671241b"
        ],
        [
            "set (L3 := Qhomographic_sign (a + c) (b + d) (e + g) (f + h) p2 H_Qhomographic_sg_denom_nonzero) in *.",
            "VernacExtend",
            "a3acce1fe502fff654a4ab9f8e3264e43d54debe"
        ],
        [
            "set (l1 := fst L3) in *.",
            "VernacExtend",
            "53a0156fadda9545b3aad23e6562a9f7571500e5"
        ],
        [
            "set (l2 := fst (snd L3)) in *.",
            "VernacExtend",
            "d2ff6d484662d1ffc681d957fae47d75d4f0ffe7"
        ],
        [
            "set (l3 := snd (snd L3)) in *.",
            "VernacExtend",
            "a4f4a2a7a6777d6cf8547330f649c7e802134835"
        ],
        [
            "set (na_ := fst l2) in *.",
            "VernacExtend",
            "4cc5c8cdb69c666a5ed03e05d9c5d3bf6b3508c8"
        ],
        [
            "set (nb_ := fst (snd l2)) in *.",
            "VernacExtend",
            "c689e91162d844443766f43d357817dbbb7e3d29"
        ],
        [
            "set (nc_ := fst (snd (snd l2))) in *.",
            "VernacExtend",
            "77cd624092e8a297c0e31fd1f7dd984499cdbe5d"
        ],
        [
            "set (nd_ := snd (snd (snd l2))) in *.",
            "VernacExtend",
            "3b6670693e7eae913c0e386dd06bc54541698adc"
        ],
        [
            "generalize (Qquadratic_sign_One_y a b c d e f g h One p2 H_Qquadratic_sg_denom_nonzero l1 na_ nb_ nc_ nd_ l3 H_Qhomographic_sg_denom_nonzero); intros H1.",
            "VernacExtend",
            "0f9e0cc2712b63c207db1a772be8487cca639a7f"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (l1, (0%Z, (0%Z, (na_, nb_)), (0%Z, (0%Z, (nc_, nd_))), (One, l3)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h One p2 H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; assumption | apply H1; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity ] | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end; repeat rewrite ZERO_left; repeat rewrite Zplus_0_r ]; apply (sg_neg_1 (a + c) (b + d) (e + g) (f + h) p2 H_Qhomographic_sg_denom_nonzero na_ nb_ nc_ nd_ l3); rewrite hl; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity.",
            "VernacExtend",
            "330ff6ec99410b1c2bedd2776130f83df599b1bd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qquadratic_sign_neg_2 : forall (a b c d e f g h : Z) (p1 p2 : Qpositive) (H_Qquadratic_sg_denom_nonzero : Qquadratic_sg_denom_nonzero e f g h p1 p2) (na nb nc nd ne nf ng nh : Z) (np1 np2 : Qpositive), Qquadratic_sign a b c d e f g h p1 p2 H_Qquadratic_sg_denom_nonzero = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) -> {(0 <= na)%Z /\\ (0 <= nb)%Z /\\ (0 <= nc)%Z /\\ (0 <= nd)%Z /\\ (ne <= 0)%Z /\\ (nf <= 0)%Z /\\ (ng <= 0)%Z /\\ (nh <= 0)%Z} + {(na <= 0)%Z /\\ (nb <= 0)%Z /\\ (nc <= 0)%Z /\\ (nd <= 0)%Z /\\ (0 <= ne)%Z /\\ (0 <= nf)%Z /\\ (0 <= ng)%Z /\\ (0 <= nh)%Z} + {np1 = One /\\ (0 <= na + nc)%Z /\\ (0 <= nb + nd)%Z /\\ (ne + ng <= 0)%Z /\\ (nf + nh <= 0)%Z} + {np1 = One /\\ (na + nc <= 0)%Z /\\ (nb + nd <= 0)%Z /\\ (0 <= ne + ng)%Z /\\ (0 <= nf + nh)%Z} + {np1 = One /\\ np2 = One} + {np1 <> One /\\ np2 = One /\\ (0 <= na + nb)%Z /\\ (0 <= nc + nd)%Z /\\ (ne + nf <= 0)%Z /\\ (ng + nh <= 0)%Z} + {np1 <> One /\\ np2 = One /\\ (na + nb <= 0)%Z /\\ (nc + nd <= 0)%Z /\\ (0 <= ne + nf)%Z /\\ (0 <= ng + nh)%Z}.",
            "VernacStartTheoremProof",
            "47edc4a1640e5fd4047d64d2da18acb6f4aa9aee"
        ],
        [
            "fix Qquadratic_sign_neg_2 9.",
            "VernacExtend",
            "828d8d8bf1e63f7e2d541e07daaaec9d6d61ac64"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "set (o1 := outside_square a b c d) in *.",
            "VernacExtend",
            "115a9a38809cb78c24da8e0924729c0e3ba70321"
        ],
        [
            "set (o2 := outside_square e f g h) in *.",
            "VernacExtend",
            "3226c4628498a920e7666c26460e51df81dc5ca0"
        ],
        [
            "destruct p1 as [xs| xs| ].",
            "VernacExtend",
            "c49c827365e4d09f3f970ea66544c82eb12cd410"
        ],
        [
            "destruct p2 as [ys| ys| ].",
            "VernacExtend",
            "a6e067f2aa8567de952ce8b70a91f70f20efb13b"
        ],
        [
            "case (three_integers_dec_inf b c d).",
            "VernacExtend",
            "d92f13936a5038bdd06bb3160509a88b0ac07217"
        ],
        [
            "intros (Hb, (Hc, Hd)).",
            "VernacExtend",
            "b24025fbd18098487c0ee7d5d35744a09e154027"
        ],
        [
            "case (three_integers_dec_inf f g h).",
            "VernacExtend",
            "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
        ],
        [
            "intros (Hf, (Hg, Hh)).",
            "VernacExtend",
            "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_1 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "7be30785199ecf5ea7f56f20ee28d6c2c1399de1"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((Z.sgn a * Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "c31e9d5f2bd40c63d9b124cc6a6c0ba0f8fd3f99"
        ],
        [
            "left; left; left; left; left; rewrite <- Zsgn_15 in hl.",
            "VernacExtend",
            "ee2e09bae78c5f1f2dd8bb9f34710881f57b1e50"
        ],
        [
            "case (Zsgn_17 _ _ (sym_eq hl)); intros (Ha, He); [ left | right ]; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | apply Zlt_le_weak ]; assumption.",
            "VernacExtend",
            "85d1efe074623102d3a5b0e0e73429ea16061bc9"
        ],
        [
            "intros H_fgh'.",
            "VernacExtend",
            "124b0a9b173a01c6065faec21fdb398ef30ba9a8"
        ],
        [
            "case (Z_lt_dec 2 o2).",
            "VernacExtend",
            "b747e4f9f3180cb6af258b8fd95b147f67418f3e"
        ],
        [
            "intro Ho2.",
            "VernacExtend",
            "8afe0ad03385c58284ff089700a6e48319e36a6a"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_2 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "4ec97d0a6eae9c6fed02c0ed7f3a2f9e0ca70720"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn a, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "5e2af73c2948d17574aeea24fa758f280e08ba38"
        ],
        [
            "left; left; left; left; left; right; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o2 in Ho2; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "23e2a74681410df4c272890337cca1fcc1205a1f"
        ],
        [
            "case (Z_lt_dec o2 (-2)).",
            "VernacExtend",
            "a154a84530155d303eb1a188f0e73f1de92f2b11"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_3 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "94c97fbf61793fb95b35d927607ba145bc1e03a5"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn a)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "f16c2114f6327bb8f02f92b5eb53520e77400881"
        ],
        [
            "left; left; left; left; left; left; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o2 in Ho2'; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "232ae9365f0ed88164ace7dea412dee045a79140"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_nR_nR_4 a b c d e f g h (nR xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_1 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "f71909b24b264ce20070f11b21911afdcf0c33ea"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign a (a + b) (a + c) (a + b + c + d) e (e + f) (e + g) (e + f + g + h) xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_2 a (a + b)%Z (a + c)%Z (a + b + c + d)%Z e (e + f)%Z (e + g)%Z (e + f + g + h)%Z xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "498300e82482cddfa04a5e5844804b846d93cf6d"
        ],
        [
            "intros Hbcd'.",
            "VernacExtend",
            "bd2fb66b4924206bddf393e42dfb7edeabbc1385"
        ],
        [
            "case (three_integers_dec_inf f g h).",
            "VernacExtend",
            "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
        ],
        [
            "intros (Hf, (Hg, Hh)).",
            "VernacExtend",
            "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
        ],
        [
            "case (Z_lt_dec 2 o1).",
            "VernacExtend",
            "f48e06a1765d3040d72a57b372312e148bc25a46"
        ],
        [
            "intro Ho1.",
            "VernacExtend",
            "b196b7b9d63229b2fe13418ac27d2ca01fece5a9"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_5 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "b7bfe4c6defebe115fd2accc4b2946f79db5889b"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn e, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "490a519bb00bc6328b331c84ceeb5c7f9df79113"
        ],
        [
            "left; left; left; left; left; left; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o1 in Ho1; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "1455d8305d93335681883b56b7b6eb896b2c3d69"
        ],
        [
            "case (Z_lt_dec o1 (-2)).",
            "VernacExtend",
            "cb39341bd62af76a97b55e65c43aac4d8e418897"
        ],
        [
            "intros Ho1' Ho1.",
            "VernacExtend",
            "cdebf24875bdbd6a495ba72a8e2502e67dd822e8"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_6 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "f483a1b16f77861b6ce8802851e84359261f67bd"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "1d4d643d47da11e23bda0a2f4a39e0468419ef4a"
        ],
        [
            "left; left; left; left; left; right; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o1 in Ho1'; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "668ad29bcba94284007ebd60731e9ce2269dedca"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_nR_nR_7 a b c d e f g h (nR xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_1 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "810bc89051fc8ecbfd9f846e25cd1052a11c500a"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign a (a + b) (a + c) (a + b + c + d) e (e + f) (e + g) (e + f + g + h) xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_2 a (a + b)%Z (a + c)%Z (a + b + c + d)%Z e (e + f)%Z (e + g)%Z (e + f + g + h)%Z xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "498300e82482cddfa04a5e5844804b846d93cf6d"
        ],
        [
            "intro Hfgh'.",
            "VernacExtend",
            "345b6667cec5f818822048df8b93ef410d8ff631"
        ],
        [
            "case (inside_square_1_dec_inf o1 o2).",
            "VernacExtend",
            "d295c561ef561fb8b649e6303ce92c0f0681eb8f"
        ],
        [
            "intro H_inside_1.",
            "VernacExtend",
            "068d44eb2eb58699356ab84ee948b8147fe0eef5"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_8 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "17c4bef80f8937e9f81b326e04069c70ccf1b8df"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (1%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "0650642759619566070d9194ab5675fe6ffbb50a"
        ],
        [
            "discriminate hl.",
            "VernacExtend",
            "f643a20865d0dde2f37d19887cfd4265938120b1"
        ],
        [
            "intro H_inside_1'.",
            "VernacExtend",
            "2ec567de4490f9d472a6a6a40281eff13e5732a9"
        ],
        [
            "case (inside_square_2_dec_inf o1 o2).",
            "VernacExtend",
            "7682baf8a4bbff99d50bdda519b1ba70e3c47898"
        ],
        [
            "intro H_inside_2.",
            "VernacExtend",
            "b4e80bee310800c8c137b8b864721e5c3244f673"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_9 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "152690edd4ff3f485e8452c0c2c329c423aa3337"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((-1)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "36274c2cd325ad04f710525b70f6632215eaaf32"
        ],
        [
            "left; left; left; left; left; case (inside_square_2_inf _ _ H_inside_2); intros (Ho1, Ho2); [ left | right ]; repeat split; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o1 in Ho1; unfold o2 in Ho2; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "1760d88dcbd858245756e0fe0b51238776c2b9d6"
        ],
        [
            "intros H_inside_2'.",
            "VernacExtend",
            "4f65b53b2c7b3936fda163236abffb01421ea904"
        ],
        [
            "generalize (Qquadratic_sign_nR_nR_10 a b c d e f g h (nR xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_1 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "ebf1110cd2276609eca3149433715718142a96e8"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign a (a + b) (a + c) (a + b + c + d) e (e + f) (e + g) (e + f + g + h) xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_2 a (a + b)%Z (a + c)%Z (a + b + c + d)%Z e (e + f)%Z (e + g)%Z (e + f + g + h)%Z xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "498300e82482cddfa04a5e5844804b846d93cf6d"
        ],
        [
            "case (three_integers_dec_inf b c d).",
            "VernacExtend",
            "d92f13936a5038bdd06bb3160509a88b0ac07217"
        ],
        [
            "intros (Hb, (Hc, Hd)).",
            "VernacExtend",
            "b24025fbd18098487c0ee7d5d35744a09e154027"
        ],
        [
            "case (three_integers_dec_inf f g h).",
            "VernacExtend",
            "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
        ],
        [
            "intros (Hf, (Hg, Hh)).",
            "VernacExtend",
            "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_1 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "0b3a7cf1aee6c21cac9c8f1a7131131c9cf68287"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((Z.sgn a * Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "f684fc76c06fd7949c8315d651495f73c3b3b422"
        ],
        [
            "left; left; left; left; left; rewrite <- Zsgn_15 in hl.",
            "VernacExtend",
            "ee2e09bae78c5f1f2dd8bb9f34710881f57b1e50"
        ],
        [
            "case (Zsgn_17 _ _ (sym_eq hl)); intros (Ha, He); [ left | right ]; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | apply Zlt_le_weak ]; assumption.",
            "VernacExtend",
            "85d1efe074623102d3a5b0e0e73429ea16061bc9"
        ],
        [
            "intros H_fgh'.",
            "VernacExtend",
            "124b0a9b173a01c6065faec21fdb398ef30ba9a8"
        ],
        [
            "case (Z_lt_dec 2 o2).",
            "VernacExtend",
            "b747e4f9f3180cb6af258b8fd95b147f67418f3e"
        ],
        [
            "intro Ho2.",
            "VernacExtend",
            "8afe0ad03385c58284ff089700a6e48319e36a6a"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_2 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "8db38400c71755cb43bf15e4e55b71fddecf8c60"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn a, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "cf68fc857997060d9ce1a200a04131601c0ef720"
        ],
        [
            "left; left; left; left; left; right; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o2 in Ho2; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "23e2a74681410df4c272890337cca1fcc1205a1f"
        ],
        [
            "case (Z_lt_dec o2 (-2)).",
            "VernacExtend",
            "a154a84530155d303eb1a188f0e73f1de92f2b11"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_3 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "0a90e6d9978b9a2224d75e7522f5bb5ecb2ce459"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn a)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "7df58376bdfc9159286c89b9d8ab24ebe5b2a078"
        ],
        [
            "left; left; left; left; left; left; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o2 in Ho2'; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "232ae9365f0ed88164ace7dea412dee045a79140"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_nR_dL_4 a b c d e f g h (nR xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_2 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "e338eb26767fc3684e8a97123c68697052d25a34"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign (a + b) b (a + b + c + d) (b + d) (e + f) f (e + f + g + h) (f + h) xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_2 (a + b)%Z b (a + b + c + d)%Z (b + d)%Z (e + f)%Z f (e + f + g + h)%Z (f + h)%Z xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "865962a40c603210e8b59857c8a378b29923b2fc"
        ],
        [
            "intros Hbcd'.",
            "VernacExtend",
            "bd2fb66b4924206bddf393e42dfb7edeabbc1385"
        ],
        [
            "case (three_integers_dec_inf f g h).",
            "VernacExtend",
            "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
        ],
        [
            "intros (Hf, (Hg, Hh)).",
            "VernacExtend",
            "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
        ],
        [
            "case (Z_lt_dec 2 o1).",
            "VernacExtend",
            "f48e06a1765d3040d72a57b372312e148bc25a46"
        ],
        [
            "intro Ho1.",
            "VernacExtend",
            "b196b7b9d63229b2fe13418ac27d2ca01fece5a9"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_5 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "60dee11bf970fa431bc509100b556cfda9cd4016"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn e, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "af1766f26a05beac7fa4fe116f6290749416f336"
        ],
        [
            "left; left; left; left; left; left; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o1 in Ho1; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "1455d8305d93335681883b56b7b6eb896b2c3d69"
        ],
        [
            "case (Z_lt_dec o1 (-2)).",
            "VernacExtend",
            "cb39341bd62af76a97b55e65c43aac4d8e418897"
        ],
        [
            "intros Ho1' Ho1.",
            "VernacExtend",
            "cdebf24875bdbd6a495ba72a8e2502e67dd822e8"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_6 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "73cd66244c556704a4acb72cdfd1263b52028628"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "d90555c2d094ffb9f1a95cae86df0c7fb0cfc199"
        ],
        [
            "left; left; left; left; left; right; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o1 in Ho1'; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "668ad29bcba94284007ebd60731e9ce2269dedca"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_nR_dL_7 a b c d e f g h (nR xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_2 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "aece866d71f9f6b70c44ff6035c02e2759b10435"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign (a + b) b (a + b + c + d) (b + d) (e + f) f (e + f + g + h) (f + h) xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_2 (a + b)%Z b (a + b + c + d)%Z (b + d)%Z (e + f)%Z f (e + f + g + h)%Z (f + h)%Z xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "865962a40c603210e8b59857c8a378b29923b2fc"
        ],
        [
            "intro Hfgh'.",
            "VernacExtend",
            "345b6667cec5f818822048df8b93ef410d8ff631"
        ],
        [
            "case (inside_square_1_dec_inf o1 o2).",
            "VernacExtend",
            "d295c561ef561fb8b649e6303ce92c0f0681eb8f"
        ],
        [
            "intro H_inside_1.",
            "VernacExtend",
            "068d44eb2eb58699356ab84ee948b8147fe0eef5"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_8 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "897d1753e26f302c001afae6ff16a94868186d2e"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (1%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "745003fdb5ed8ab204e0f47eaf496a7b2cef2e43"
        ],
        [
            "discriminate hl.",
            "VernacExtend",
            "f643a20865d0dde2f37d19887cfd4265938120b1"
        ],
        [
            "intro H_inside_1'.",
            "VernacExtend",
            "2ec567de4490f9d472a6a6a40281eff13e5732a9"
        ],
        [
            "case (inside_square_2_dec_inf o1 o2).",
            "VernacExtend",
            "7682baf8a4bbff99d50bdda519b1ba70e3c47898"
        ],
        [
            "intro H_inside_2.",
            "VernacExtend",
            "b4e80bee310800c8c137b8b864721e5c3244f673"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_9 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "cbbf9d97e58e2bb95455ca931ec68344767f069d"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((-1)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "3ecad056d63754357dbca38199ec82d931a59995"
        ],
        [
            "left; left; left; left; left; case (inside_square_2_inf _ _ H_inside_2); intros (Ho1, Ho2); [ left | right ]; repeat split; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o1 in Ho1; unfold o2 in Ho2; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "1760d88dcbd858245756e0fe0b51238776c2b9d6"
        ],
        [
            "intros H_inside_2'.",
            "VernacExtend",
            "4f65b53b2c7b3936fda163236abffb01421ea904"
        ],
        [
            "generalize (Qquadratic_sign_nR_dL_10 a b c d e f g h (nR xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_2 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "0d3068282c5f924b3105b9445cf9b7dfcc50b98c"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign (a + b) b (a + b + c + d) (b + d) (e + f) f (e + f + g + h) (f + h) xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_2 (a + b)%Z b (a + b + c + d)%Z (b + d)%Z (e + f)%Z f (e + f + g + h)%Z (f + h)%Z xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "865962a40c603210e8b59857c8a378b29923b2fc"
        ],
        [
            "generalize (Qquadratic_signok_0' _ _ _ _ _ H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "82ba942058f599dab626c16f3958e19a9e8856b7"
        ],
        [
            "intros H_Qhomographic_sg_denom_nonzero.",
            "VernacExtend",
            "7ee186f9a3e15bd36020fb30747a871aa671241b"
        ],
        [
            "set (L3 := Qhomographic_sign (a + b) (c + d) (e + f) (g + h) (nR xs) H_Qhomographic_sg_denom_nonzero) in *.",
            "VernacExtend",
            "84df2c330ca924d8672b2dc2167b20dca2d9d189"
        ],
        [
            "set (l1 := fst L3) in *.",
            "VernacExtend",
            "53a0156fadda9545b3aad23e6562a9f7571500e5"
        ],
        [
            "set (l2 := fst (snd L3)) in *.",
            "VernacExtend",
            "d2ff6d484662d1ffc681d957fae47d75d4f0ffe7"
        ],
        [
            "set (l3 := snd (snd L3)) in *.",
            "VernacExtend",
            "a4f4a2a7a6777d6cf8547330f649c7e802134835"
        ],
        [
            "set (na_ := fst l2) in *.",
            "VernacExtend",
            "4cc5c8cdb69c666a5ed03e05d9c5d3bf6b3508c8"
        ],
        [
            "set (nb_ := fst (snd l2)) in *.",
            "VernacExtend",
            "c689e91162d844443766f43d357817dbbb7e3d29"
        ],
        [
            "set (nc_ := fst (snd (snd l2))) in *.",
            "VernacExtend",
            "77cd624092e8a297c0e31fd1f7dd984499cdbe5d"
        ],
        [
            "set (nd_ := snd (snd (snd l2))) in *.",
            "VernacExtend",
            "3b6670693e7eae913c0e386dd06bc54541698adc"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_One a b c d e f g h (nR xs) One H_Qquadratic_sg_denom_nonzero l1 na_ nb_ nc_ nd_ l3 H_Qhomographic_sg_denom_nonzero); intros H1.",
            "VernacExtend",
            "3aaded4fd9b7cf246242f869d542f1391f8cbda2"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (l1, (0%Z, (na_, (0%Z, nb_)), (0%Z, (nc_, (0%Z, nd_))), (l3, One)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) One H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; assumption | apply H1; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity ] | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end; repeat rewrite ZERO_left; repeat rewrite Zplus_0_r ].",
            "VernacExtend",
            "2883c6c9b0720e80b0538703401bb28a1fe724a0"
        ],
        [
            "assert (H_sg_unfolded : Qhomographic_sign (a + b) (c + d) (e + f) (g + h) (nR xs) H_Qhomographic_sg_denom_nonzero = ((-1)%Z, (na_, (nb_, (nc_, nd_)), l3))).",
            "VernacExtend",
            "77d5609c269b0eed237d5e7b798f47e933fefb0d"
        ],
        [
            "rewrite hl; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity.",
            "VernacExtend",
            "92853c2a640fbbf7420687b2cc9dd9d0f8561009"
        ],
        [
            "generalize (sg_neg_2 (a + b) (c + d) (e + f) (g + h) (nR xs) H_Qhomographic_sg_denom_nonzero na_ nb_ nc_ nd_ l3 H_sg_unfolded).",
            "VernacExtend",
            "5ce57b954763a8b38b5f1c1b51ea637d54c12b07"
        ],
        [
            "intros [[(H_a, (H_b, (H_c, H_d)))| (H_a, (H_b, (H_c, H_d)))]| H_l3]; [ case l3; left; [ right; repeat split; assumption || discriminate | right; repeat split; assumption || discriminate | left; right; repeat split ] | case l3; [ right; repeat split; assumption || discriminate | right; repeat split; assumption || discriminate | left; left; right; repeat split ] | left; left; right; repeat split; assumption ].",
            "VernacExtend",
            "cb3ad86028a07cb387904a1b8cf99c0e91f24b08"
        ],
        [
            "destruct p2 as [ys| ys| ].",
            "VernacExtend",
            "a6e067f2aa8567de952ce8b70a91f70f20efb13b"
        ],
        [
            "case (three_integers_dec_inf b c d).",
            "VernacExtend",
            "d92f13936a5038bdd06bb3160509a88b0ac07217"
        ],
        [
            "intros (Hb, (Hc, Hd)).",
            "VernacExtend",
            "b24025fbd18098487c0ee7d5d35744a09e154027"
        ],
        [
            "case (three_integers_dec_inf f g h).",
            "VernacExtend",
            "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
        ],
        [
            "intros (Hf, (Hg, Hh)).",
            "VernacExtend",
            "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_1 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "2ca6efa1266480d8bf81b38b038fe6537f4e5150"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((Z.sgn a * Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "b2caf3b27a8370751d9d5866818c1686ef342bfe"
        ],
        [
            "left; left; left; left; left; rewrite <- Zsgn_15 in hl.",
            "VernacExtend",
            "ee2e09bae78c5f1f2dd8bb9f34710881f57b1e50"
        ],
        [
            "case (Zsgn_17 _ _ (sym_eq hl)); intros (Ha, He); [ left | right ]; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | apply Zlt_le_weak ]; assumption.",
            "VernacExtend",
            "85d1efe074623102d3a5b0e0e73429ea16061bc9"
        ],
        [
            "intros H_fgh'.",
            "VernacExtend",
            "124b0a9b173a01c6065faec21fdb398ef30ba9a8"
        ],
        [
            "case (Z_lt_dec 2 o2).",
            "VernacExtend",
            "b747e4f9f3180cb6af258b8fd95b147f67418f3e"
        ],
        [
            "intro Ho2.",
            "VernacExtend",
            "8afe0ad03385c58284ff089700a6e48319e36a6a"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_2 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "2416253b968fdf37c51579e985ced59ed75f277d"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn a, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "3303ffe5d34872fd07a59d1d63b50f6ad416ea81"
        ],
        [
            "left; left; left; left; left; right; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o2 in Ho2; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "23e2a74681410df4c272890337cca1fcc1205a1f"
        ],
        [
            "case (Z_lt_dec o2 (-2)).",
            "VernacExtend",
            "a154a84530155d303eb1a188f0e73f1de92f2b11"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_3 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "44518512dfe88ca88898fe96b8fbdc54e72141e7"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn a)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "ddd8eca906ca1ef2ef533394e906249cd5df019b"
        ],
        [
            "left; left; left; left; left; left; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o2 in Ho2'; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "232ae9365f0ed88164ace7dea412dee045a79140"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_dL_nR_4 a b c d e f g h (dL xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_3 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "f64fa610989268eca45d7884cde62e0d3b3c9532"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign (a + c) (a + b + c + d) c (c + d) (e + g) (e + f + g + h) g (g + h) xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_2 (a + c)%Z (a + b + c + d)%Z c (c + d)%Z (e + g)%Z (e + f + g + h)%Z g (g + h)%Z xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "93d41041caaa21c276af77b7d777c5d86796da8c"
        ],
        [
            "intros Hbcd'.",
            "VernacExtend",
            "bd2fb66b4924206bddf393e42dfb7edeabbc1385"
        ],
        [
            "case (three_integers_dec_inf f g h).",
            "VernacExtend",
            "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
        ],
        [
            "intros (Hf, (Hg, Hh)).",
            "VernacExtend",
            "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
        ],
        [
            "case (Z_lt_dec 2 o1).",
            "VernacExtend",
            "f48e06a1765d3040d72a57b372312e148bc25a46"
        ],
        [
            "intro Ho1.",
            "VernacExtend",
            "b196b7b9d63229b2fe13418ac27d2ca01fece5a9"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_5 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "73d28ffa851b17a895eb8de63759600c1cc7d195"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn e, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "84e24f56497aa416fe301a9c10e45bfb364aedbb"
        ],
        [
            "left; left; left; left; left; left; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o1 in Ho1; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "1455d8305d93335681883b56b7b6eb896b2c3d69"
        ],
        [
            "case (Z_lt_dec o1 (-2)).",
            "VernacExtend",
            "cb39341bd62af76a97b55e65c43aac4d8e418897"
        ],
        [
            "intros Ho1' Ho1.",
            "VernacExtend",
            "cdebf24875bdbd6a495ba72a8e2502e67dd822e8"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_6 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "748719d32744224930bba0e4a91f0658594f536b"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "b3cf2404d57e524217ecac63b285773d60e763b8"
        ],
        [
            "left; left; left; left; left; right; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o1 in Ho1'; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "668ad29bcba94284007ebd60731e9ce2269dedca"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_dL_nR_7 a b c d e f g h (dL xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_3 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "05c7636b2a0eeb81bdae4b57d3f3af8b5289c4db"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign (a + c) (a + b + c + d) c (c + d) (e + g) (e + f + g + h) g (g + h) xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_2 (a + c)%Z (a + b + c + d)%Z c (c + d)%Z (e + g)%Z (e + f + g + h)%Z g (g + h)%Z xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "93d41041caaa21c276af77b7d777c5d86796da8c"
        ],
        [
            "intro Hfgh'.",
            "VernacExtend",
            "345b6667cec5f818822048df8b93ef410d8ff631"
        ],
        [
            "case (inside_square_1_dec_inf o1 o2).",
            "VernacExtend",
            "d295c561ef561fb8b649e6303ce92c0f0681eb8f"
        ],
        [
            "intro H_inside_1.",
            "VernacExtend",
            "068d44eb2eb58699356ab84ee948b8147fe0eef5"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_8 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "17b14b6ad27d5d97fa40021b5b1bd5759a6a8583"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (1%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "a03a4135524a9863111f878b70ea6b298155f1ab"
        ],
        [
            "discriminate hl.",
            "VernacExtend",
            "f643a20865d0dde2f37d19887cfd4265938120b1"
        ],
        [
            "intro H_inside_1'.",
            "VernacExtend",
            "2ec567de4490f9d472a6a6a40281eff13e5732a9"
        ],
        [
            "case (inside_square_2_dec_inf o1 o2).",
            "VernacExtend",
            "7682baf8a4bbff99d50bdda519b1ba70e3c47898"
        ],
        [
            "intro H_inside_2.",
            "VernacExtend",
            "b4e80bee310800c8c137b8b864721e5c3244f673"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_9 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "1b15c9a0b17bf8e3bd9ea57e3449cd64dd182336"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((-1)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "2ade41f5efeee62f9b50467184181878ce3fe4a6"
        ],
        [
            "left; left; left; left; left; case (inside_square_2_inf _ _ H_inside_2); intros (Ho1, Ho2); [ left | right ]; repeat split; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o1 in Ho1; unfold o2 in Ho2; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "1760d88dcbd858245756e0fe0b51238776c2b9d6"
        ],
        [
            "intros H_inside_2'.",
            "VernacExtend",
            "4f65b53b2c7b3936fda163236abffb01421ea904"
        ],
        [
            "generalize (Qquadratic_sign_dL_nR_10 a b c d e f g h (dL xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_3 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "8fc05207a6b41ec0c59af37fe14d660de73831e9"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign (a + c) (a + b + c + d) c (c + d) (e + g) (e + f + g + h) g (g + h) xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_2 (a + c)%Z (a + b + c + d)%Z c (c + d)%Z (e + g)%Z (e + f + g + h)%Z g (g + h)%Z xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "93d41041caaa21c276af77b7d777c5d86796da8c"
        ],
        [
            "case (three_integers_dec_inf b c d).",
            "VernacExtend",
            "d92f13936a5038bdd06bb3160509a88b0ac07217"
        ],
        [
            "intros (Hb, (Hc, Hd)).",
            "VernacExtend",
            "b24025fbd18098487c0ee7d5d35744a09e154027"
        ],
        [
            "case (three_integers_dec_inf f g h).",
            "VernacExtend",
            "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
        ],
        [
            "intros (Hf, (Hg, Hh)).",
            "VernacExtend",
            "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_1 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "e97d2062f29099b8e633a9b753a2b33784c76b0b"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((Z.sgn a * Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "72f7c357d61300294796b20da833e84372ab64bf"
        ],
        [
            "left; left; left; left; left; rewrite <- Zsgn_15 in hl.",
            "VernacExtend",
            "ee2e09bae78c5f1f2dd8bb9f34710881f57b1e50"
        ],
        [
            "case (Zsgn_17 _ _ (sym_eq hl)); intros (Ha, He); [ left | right ]; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | apply Zlt_le_weak ]; assumption.",
            "VernacExtend",
            "85d1efe074623102d3a5b0e0e73429ea16061bc9"
        ],
        [
            "intros H_fgh'.",
            "VernacExtend",
            "124b0a9b173a01c6065faec21fdb398ef30ba9a8"
        ],
        [
            "case (Z_lt_dec 2 o2).",
            "VernacExtend",
            "b747e4f9f3180cb6af258b8fd95b147f67418f3e"
        ],
        [
            "intro Ho2.",
            "VernacExtend",
            "8afe0ad03385c58284ff089700a6e48319e36a6a"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_2 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "9d11e8d3732b1a9fe564baeaad7926fc1537b0b6"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn a, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "cc671df0250929de7b6623564b92b775af84e083"
        ],
        [
            "left; left; left; left; left; right; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o2 in Ho2; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "23e2a74681410df4c272890337cca1fcc1205a1f"
        ],
        [
            "case (Z_lt_dec o2 (-2)).",
            "VernacExtend",
            "a154a84530155d303eb1a188f0e73f1de92f2b11"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_3 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "45bd69bc49004ab873c9fccf5ccb3a932ddbf353"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn a)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "a2fb6bd0acb89478d4b93d893a762dc639ec0fa2"
        ],
        [
            "left; left; left; left; left; left; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o2 in Ho2'; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "232ae9365f0ed88164ace7dea412dee045a79140"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_dL_dL_4 a b c d e f g h (dL xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_4 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "60709f15591f536d32427cc90af2373272b0090d"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign (a + b + c + d) (b + d) (c + d) d (e + f + g + h) (f + h) (g + h) h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_2 (a + b + c + d)%Z (b + d)%Z (c + d)%Z d (e + f + g + h)%Z (f + h)%Z (g + h)%Z h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "330499833d84f1236722f9da79c036d2c993d9ba"
        ],
        [
            "intros Hbcd'.",
            "VernacExtend",
            "bd2fb66b4924206bddf393e42dfb7edeabbc1385"
        ],
        [
            "case (three_integers_dec_inf f g h).",
            "VernacExtend",
            "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
        ],
        [
            "intros (Hf, (Hg, Hh)).",
            "VernacExtend",
            "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
        ],
        [
            "case (Z_lt_dec 2 o1).",
            "VernacExtend",
            "f48e06a1765d3040d72a57b372312e148bc25a46"
        ],
        [
            "intro Ho1.",
            "VernacExtend",
            "b196b7b9d63229b2fe13418ac27d2ca01fece5a9"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_5 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "e60e2a27dd0430030b87f0c6f1021aec69cdd88b"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn e, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "31fb1f4114521812197abf6dc94d340e2ade90c8"
        ],
        [
            "left; left; left; left; left; left; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o1 in Ho1; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "1455d8305d93335681883b56b7b6eb896b2c3d69"
        ],
        [
            "case (Z_lt_dec o1 (-2)).",
            "VernacExtend",
            "cb39341bd62af76a97b55e65c43aac4d8e418897"
        ],
        [
            "intros Ho1' Ho1.",
            "VernacExtend",
            "cdebf24875bdbd6a495ba72a8e2502e67dd822e8"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_6 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "7b0e4612a8dda195acef9dc367bef08bf8fcb312"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "ace1e6dd012e3aa28cd8a152980eab13aa4aef82"
        ],
        [
            "left; left; left; left; left; right; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o1 in Ho1'; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "668ad29bcba94284007ebd60731e9ce2269dedca"
        ],
        [
            "intros Ho2' Ho2.",
            "VernacExtend",
            "55db1d4301f83881038abb6f1aa956508b441983"
        ],
        [
            "generalize (Qquadratic_sign_dL_dL_7 a b c d e f g h (dL xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_4 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "51d4862aa5abb3dd93094f58d26b4d40909e48b4"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign (a + b + c + d) (b + d) (c + d) d (e + f + g + h) (f + h) (g + h) h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_2 (a + b + c + d)%Z (b + d)%Z (c + d)%Z d (e + f + g + h)%Z (f + h)%Z (g + h)%Z h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "330499833d84f1236722f9da79c036d2c993d9ba"
        ],
        [
            "intro Hfgh'.",
            "VernacExtend",
            "345b6667cec5f818822048df8b93ef410d8ff631"
        ],
        [
            "case (inside_square_1_dec_inf o1 o2).",
            "VernacExtend",
            "d295c561ef561fb8b649e6303ce92c0f0681eb8f"
        ],
        [
            "intro H_inside_1.",
            "VernacExtend",
            "068d44eb2eb58699356ab84ee948b8147fe0eef5"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_8 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "084252fe935af0a92ac7feca5fe44fa253615116"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (1%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "fd701895c1b9f263984d547d9671bfdb2c9800b5"
        ],
        [
            "discriminate hl.",
            "VernacExtend",
            "f643a20865d0dde2f37d19887cfd4265938120b1"
        ],
        [
            "intro H_inside_1'.",
            "VernacExtend",
            "2ec567de4490f9d472a6a6a40281eff13e5732a9"
        ],
        [
            "case (inside_square_2_dec_inf o1 o2).",
            "VernacExtend",
            "7682baf8a4bbff99d50bdda519b1ba70e3c47898"
        ],
        [
            "intro H_inside_2.",
            "VernacExtend",
            "b4e80bee310800c8c137b8b864721e5c3244f673"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_nRdL_9 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "01ac32711281d55d5e8790d70a8a118de564f06e"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((-1)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
            "VernacExtend",
            "d486b4ac502e83592b625a26cb69444f61e23790"
        ],
        [
            "left; left; left; left; left; case (inside_square_2_inf _ _ H_inside_2); intros (Ho1, Ho2); [ left | right ]; repeat split; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o1 in Ho1; unfold o2 in Ho2; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
            "VernacExtend",
            "1760d88dcbd858245756e0fe0b51238776c2b9d6"
        ],
        [
            "intros H_inside_2'.",
            "VernacExtend",
            "4f65b53b2c7b3936fda163236abffb01421ea904"
        ],
        [
            "generalize (Qquadratic_sign_dL_dL_10 a b c d e f g h (dL xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_4 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
            "VernacExtend",
            "92aabbab4ba412dd08be60745aa35f49b983e5c9"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "assert (H_tuple_eq : Qquadratic_sign (a + b + c + d) (b + d) (c + d) d (e + f + g + h) (f + h) (g + h) h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_2 (a + b + c + d)%Z (b + d)%Z (c + d)%Z d (e + f + g + h)%Z (f + h)%Z (g + h)%Z h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
            "VernacExtend",
            "330499833d84f1236722f9da79c036d2c993d9ba"
        ],
        [
            "generalize (Qquadratic_signok_0' _ _ _ _ _ H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "82ba942058f599dab626c16f3958e19a9e8856b7"
        ],
        [
            "intros H_Qhomographic_sg_denom_nonzero.",
            "VernacExtend",
            "7ee186f9a3e15bd36020fb30747a871aa671241b"
        ],
        [
            "set (L3 := Qhomographic_sign (a + b) (c + d) (e + f) (g + h) (dL xs) H_Qhomographic_sg_denom_nonzero) in *.",
            "VernacExtend",
            "bbcac23fd22aa8b7c66b46a28b66bc764c9d21df"
        ],
        [
            "set (l1 := fst L3) in *.",
            "VernacExtend",
            "53a0156fadda9545b3aad23e6562a9f7571500e5"
        ],
        [
            "set (l2 := fst (snd L3)) in *.",
            "VernacExtend",
            "d2ff6d484662d1ffc681d957fae47d75d4f0ffe7"
        ],
        [
            "set (l3 := snd (snd L3)) in *.",
            "VernacExtend",
            "a4f4a2a7a6777d6cf8547330f649c7e802134835"
        ],
        [
            "set (na_ := fst l2) in *.",
            "VernacExtend",
            "4cc5c8cdb69c666a5ed03e05d9c5d3bf6b3508c8"
        ],
        [
            "set (nb_ := fst (snd l2)) in *.",
            "VernacExtend",
            "c689e91162d844443766f43d357817dbbb7e3d29"
        ],
        [
            "set (nc_ := fst (snd (snd l2))) in *.",
            "VernacExtend",
            "77cd624092e8a297c0e31fd1f7dd984499cdbe5d"
        ],
        [
            "set (nd_ := snd (snd (snd l2))) in *.",
            "VernacExtend",
            "3b6670693e7eae913c0e386dd06bc54541698adc"
        ],
        [
            "generalize (Qquadratic_sign_nRdL_One a b c d e f g h (dL xs) One H_Qquadratic_sg_denom_nonzero l1 na_ nb_ nc_ nd_ l3 H_Qhomographic_sg_denom_nonzero); intros H1.",
            "VernacExtend",
            "729fdcd685e6089ef0bda9bddf52a935a2f85311"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (l1, (0%Z, (na_, (0%Z, nb_)), (0%Z, (nc_, (0%Z, nd_))), (l3, One)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) One H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; assumption | apply H1; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity ] | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end; repeat rewrite ZERO_left; repeat rewrite Zplus_0_r ].",
            "VernacExtend",
            "6f9813b63066d105b126b138d9d4e5787232aabe"
        ],
        [
            "assert (H_sg_unfolded : Qhomographic_sign (a + b) (c + d) (e + f) (g + h) (dL xs) H_Qhomographic_sg_denom_nonzero = ((-1)%Z, (na_, (nb_, (nc_, nd_)), l3))).",
            "VernacExtend",
            "4c71c7818220ac25fa0d2f0817254670bedab7c4"
        ],
        [
            "rewrite hl; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity.",
            "VernacExtend",
            "92853c2a640fbbf7420687b2cc9dd9d0f8561009"
        ],
        [
            "generalize (sg_neg_2 (a + b) (c + d) (e + f) (g + h) (dL xs) H_Qhomographic_sg_denom_nonzero na_ nb_ nc_ nd_ l3 H_sg_unfolded).",
            "VernacExtend",
            "a0a09dd1a0817e2ab95bbbffa972189e7d16d3a9"
        ],
        [
            "intros [[(H_a, (H_b, (H_c, H_d)))| (H_a, (H_b, (H_c, H_d)))]| H_l3]; [ case l3; left; [ right; repeat split; assumption || discriminate | right; repeat split; assumption || discriminate | left; right; repeat split ] | case l3; [ right; repeat split; assumption || discriminate | right; repeat split; assumption || discriminate | left; left; right; repeat split ] | left; left; right; repeat split; assumption ].",
            "VernacExtend",
            "cb3ad86028a07cb387904a1b8cf99c0e91f24b08"
        ],
        [
            "generalize (Qquadratic_signok_0 _ _ _ _ _ H_Qquadratic_sg_denom_nonzero).",
            "VernacExtend",
            "891278ce1d1d1a595b0c37c3d03fef7ef0e6f7fa"
        ],
        [
            "intros H_Qhomographic_sg_denom_nonzero.",
            "VernacExtend",
            "7ee186f9a3e15bd36020fb30747a871aa671241b"
        ],
        [
            "set (L3 := Qhomographic_sign (a + c) (b + d) (e + g) (f + h) p2 H_Qhomographic_sg_denom_nonzero) in *.",
            "VernacExtend",
            "a3acce1fe502fff654a4ab9f8e3264e43d54debe"
        ],
        [
            "set (l1 := fst L3) in *.",
            "VernacExtend",
            "53a0156fadda9545b3aad23e6562a9f7571500e5"
        ],
        [
            "set (l2 := fst (snd L3)) in *.",
            "VernacExtend",
            "d2ff6d484662d1ffc681d957fae47d75d4f0ffe7"
        ],
        [
            "set (l3 := snd (snd L3)) in *.",
            "VernacExtend",
            "a4f4a2a7a6777d6cf8547330f649c7e802134835"
        ],
        [
            "set (na_ := fst l2) in *.",
            "VernacExtend",
            "4cc5c8cdb69c666a5ed03e05d9c5d3bf6b3508c8"
        ],
        [
            "set (nb_ := fst (snd l2)) in *.",
            "VernacExtend",
            "c689e91162d844443766f43d357817dbbb7e3d29"
        ],
        [
            "set (nc_ := fst (snd (snd l2))) in *.",
            "VernacExtend",
            "77cd624092e8a297c0e31fd1f7dd984499cdbe5d"
        ],
        [
            "set (nd_ := snd (snd (snd l2))) in *.",
            "VernacExtend",
            "3b6670693e7eae913c0e386dd06bc54541698adc"
        ],
        [
            "generalize (Qquadratic_sign_One_y a b c d e f g h One p2 H_Qquadratic_sg_denom_nonzero l1 na_ nb_ nc_ nd_ l3 H_Qhomographic_sg_denom_nonzero); intros H1.",
            "VernacExtend",
            "0f9e0cc2712b63c207db1a772be8487cca639a7f"
        ],
        [
            "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (l1, (0%Z, (0%Z, (na_, nb_)), (0%Z, (0%Z, (nc_, nd_))), (One, l3)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h One p2 H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; assumption | apply H1; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity ] | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end; repeat rewrite ZERO_left; repeat rewrite Zplus_0_r ].",
            "VernacExtend",
            "443a1578b04a5bf68e9dc2d802fbf700d89f560b"
        ],
        [
            "assert (H_sg_unfolded : Qhomographic_sign (a + c) (b + d) (e + g) (f + h) p2 H_Qhomographic_sg_denom_nonzero = ((-1)%Z, (na_, (nb_, (nc_, nd_)), l3))).",
            "VernacExtend",
            "187ed24298d3a15d7c41942556b3af18cf67a7c4"
        ],
        [
            "rewrite hl; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity.",
            "VernacExtend",
            "92853c2a640fbbf7420687b2cc9dd9d0f8561009"
        ],
        [
            "generalize (sg_neg_2 (a + c) (b + d) (e + g) (f + h) p2 H_Qhomographic_sg_denom_nonzero na_ nb_ nc_ nd_ l3 H_sg_unfolded).",
            "VernacExtend",
            "3aab85fd2b7b9ebe197350163c884571b4c00bc7"
        ],
        [
            "intros [[(H_a, (H_b, (H_c, H_d)))| (H_a, (H_b, (H_c, H_d)))]| H_l3]; left; left; [ left; left; right | left; right | right ]; repeat split; assumption.",
            "VernacExtend",
            "48b2c5d6d338c6db1bdc78b94b03fee63545fa97"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "same_ratio_dec_inf",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "case (Z.eq_dec (a * f) (b * e)); [ case (Z.eq_dec (b * g) (c * f)); [ case (Z.eq_dec (c * h) (d * g)); [ case (Z.eq_dec (a * g) (c * e)); [ case (Z.eq_dec (a * h) (d * e)); [ case (Z.eq_dec (b * h) (d * f)); [ left; repeat split; assumption | idtac ] | idtac ] | idtac ] | idtac ] | idtac ] | idtac ]; intro H'; try intros; right; intros (Hafbe, (Hbgcf, (Hchgd, (Hagce, (Hahde, Hbhdf))))); apply H'; assumption.",
                        "VernacExtend",
                        "287f3119300147b0e002163675014cb3dd5c8e30"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qquadratic_sign_tuple_equal",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion H; (repeat split; reflexivity).",
                        "VernacExtend",
                        "a4646e2141f1c8640869b6fd8867f6e1f831561f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "outside_square_1",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "intros [| pa| pa] [| pb| pb] [| pc| pc] [| pd| pd]; repeat rewrite Zplus_0_r; repeat rewrite Zplus_0_l; intro H; first [ discriminate H | repeat constructor ].",
                        "VernacExtend",
                        "f390754a22e16c0c8dc2f85b2b6324654a23be14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "outside_square_2",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "intros [| pa| pa] [| pb| pb] [| pc| pc] [| pd| pd]; repeat rewrite Zplus_0_r; repeat rewrite Zplus_0_l; intro H; first [ discriminate H | repeat constructor ].",
                        "VernacExtend",
                        "f390754a22e16c0c8dc2f85b2b6324654a23be14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "outside_square_3",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "intros [| pa| pa] [| pb| pb] [| pc| pc] [| pd| pd]; repeat rewrite Zplus_0_r; repeat rewrite Zplus_0_l; intro H; first [ intro H_discriminate_me; discriminate H_discriminate_me | discriminate H | repeat constructor | apply Zero_le_Qpos ].",
                        "VernacExtend",
                        "7d62f595c657f6149468268ec041912b161144e4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "outside_square_4",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "intros [| pa| pa] [| pb| pb] [| pc| pc] [| pd| pd]; repeat rewrite Zplus_0_r; repeat rewrite Zplus_0_l; intro H; first [ intro H_discriminate_me; discriminate H_discriminate_me | discriminate H | repeat constructor | apply Zero_le_Qpos ].",
                        "VernacExtend",
                        "7d62f595c657f6149468268ec041912b161144e4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "outside_square_5",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "intros [| pa| pa] [| pb| pb] [| pc| pc] [| pd| pd]; repeat rewrite Zplus_0_r; repeat rewrite Zplus_0_l; intro H; first [ intro H_discriminate_me; discriminate H_discriminate_me | discriminate H | repeat constructor | apply Zero_le_Qpos ].",
                        "VernacExtend",
                        "7d62f595c657f6149468268ec041912b161144e4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "outside_square_6",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "intros [| pa| pa] [| pb| pb] [| pc| pc] [| pd| pd]; repeat rewrite Zplus_0_r; repeat rewrite Zplus_0_l; intro H; first [ intro H_discriminate_me; discriminate H_discriminate_me | discriminate H | repeat constructor | apply Zero_le_Qpos ].",
                        "VernacExtend",
                        "7d62f595c657f6149468268ec041912b161144e4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "outside_square_7",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "intros [| pa| pa] [| pb| pb] [| pc| pc] [| pd| pd]; repeat rewrite Zplus_0_r; repeat rewrite Zplus_0_l; intro H; first [ intro H_discriminate_me; discriminate H_discriminate_me | discriminate H | repeat constructor | apply Zero_le_Qpos ].",
                        "VernacExtend",
                        "7d62f595c657f6149468268ec041912b161144e4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "outside_square_8",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "intros [| pa| pa] [| pb| pb] [| pc| pc] [| pd| pd]; repeat rewrite Zplus_0_r; repeat rewrite Zplus_0_l; intro H; first [ intro H_discriminate_me; discriminate H_discriminate_me | discriminate H | repeat constructor | apply Zero_le_Qpos ].",
                        "VernacExtend",
                        "7d62f595c657f6149468268ec041912b161144e4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "outside_square_9",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "intros [| pa| pa] [| pb| pb] [| pc| pc] [| pd| pd]; repeat rewrite Zplus_0_r; repeat rewrite Zplus_0_l; intro H; first [ intro H_discriminate_me; discriminate H_discriminate_me | discriminate H | repeat constructor | apply Zero_le_Qpos ].",
                        "VernacExtend",
                        "7d62f595c657f6149468268ec041912b161144e4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "outside_square_10",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "intros [| pa| pa] [| pb| pb] [| pc| pc] [| pd| pd]; repeat rewrite Zplus_0_r; repeat rewrite Zplus_0_l; intro H; first [ intro H_discriminate_me; discriminate H_discriminate_me | discriminate H | repeat constructor | apply Zero_le_Qpos ].",
                        "VernacExtend",
                        "7d62f595c657f6149468268ec041912b161144e4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inside_square_1_inf",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "intros o1 o2 H.",
                        "VernacExtend",
                        "25eb64f751684efbb90bfde082e10dea93a74b88"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec 2 o1); intros Ho1; [ case (Z_lt_dec 2 o2); intros Ho2; [ left; split; assumption | idtac ] | case (Z_lt_dec o1 (-2)); intros Ho1'; [ case (Z_lt_dec o2 (-2)); intros Ho2; [ right; split; assumption | idtac ] | idtac ] ]; apply False_rec; case H; intros (Ho1_, Ho2_); repeat match goal with | id1:(~ (?X1 < ?X2)%Z) |- ?X3 => apply id1; assumption end || match goal with | id1:(Zpos ?X1 < ?X2)%Z,id2:(?X2 < Zneg ?X1)%Z |- ?X3 => apply (Z.lt_irrefl (Zpos X1)); apply Z.lt_trans with (Zneg X1); constructor || apply Z.lt_trans with X2; assumption end.",
                        "VernacExtend",
                        "935698acc3d65348bb98a27647be72a5e992b85e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inside_square_2_inf",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "intros o1 o2 H.",
                        "VernacExtend",
                        "25eb64f751684efbb90bfde082e10dea93a74b88"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec 2 o1); intros Ho1; [ case (Z_lt_dec o2 (-2)); intros Ho2; [ left; split; assumption | idtac ] | case (Z_lt_dec o1 (-2)); intros Ho1'; [ case (Z_lt_dec 2 o2); intros Ho2; [ right; split; assumption | idtac ] | idtac ] ]; apply False_rec; case H; intros (Ho1_, Ho2_); repeat match goal with | id1:(~ (?X1 < ?X2)%Z) |- ?X3 => apply id1; assumption end || match goal with | id1:(Zpos ?X1 < ?X2)%Z,id2:(?X2 < Zneg ?X1)%Z |- ?X3 => apply (Z.lt_irrefl (Zpos X1)); apply Z.lt_trans with (Zneg X1); constructor || apply Z.lt_trans with X2; assumption end.",
                        "VernacExtend",
                        "141c4f7e29fef5e01c427e502bc8946788862353"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qquadratic_sign_pos_1",
            "line_nb": 51,
            "steps": [
                {
                    "command": [
                        "fix Qquadratic_sign_pos_1 9.",
                        "VernacExtend",
                        "afe4474d3168f2901f00e3da7ad69f8898f2355d"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "set (o1 := outside_square a b c d) in *.",
                        "VernacExtend",
                        "115a9a38809cb78c24da8e0924729c0e3ba70321"
                    ]
                },
                {
                    "command": [
                        "set (o2 := outside_square e f g h) in *.",
                        "VernacExtend",
                        "3226c4628498a920e7666c26460e51df81dc5ca0"
                    ]
                },
                {
                    "command": [
                        "destruct p1 as [xs| xs| ].",
                        "VernacExtend",
                        "c49c827365e4d09f3f970ea66544c82eb12cd410"
                    ]
                },
                {
                    "command": [
                        "destruct p2 as [ys| ys| ].",
                        "VernacExtend",
                        "a6e067f2aa8567de952ce8b70a91f70f20efb13b"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf b c d).",
                        "VernacExtend",
                        "d92f13936a5038bdd06bb3160509a88b0ac07217"
                    ]
                },
                {
                    "command": [
                        "intros (Hb, (Hc, Hd)).",
                        "VernacExtend",
                        "b24025fbd18098487c0ee7d5d35744a09e154027"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf f g h).",
                        "VernacExtend",
                        "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
                    ]
                },
                {
                    "command": [
                        "intros (Hf, (Hg, Hh)).",
                        "VernacExtend",
                        "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_1 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "7be30785199ecf5ea7f56f20ee28d6c2c1399de1"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((Z.sgn a * Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "3ed683e834d6c75a9681200ae977e1d35bcbd232"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Zsgn_15 in hl.",
                        "VernacExtend",
                        "64ba35dcc586c9b63dbf3219dc7171fd2f2f1699"
                    ]
                },
                {
                    "command": [
                        "case (Zsgn_16 _ _ (sym_eq hl)); intros (Ha, He); [ left | right ]; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; assumption.",
                        "VernacExtend",
                        "03e41396ac4c0fc62004601b6b0ed6a606e9631d"
                    ]
                },
                {
                    "command": [
                        "intros H_fgh'.",
                        "VernacExtend",
                        "124b0a9b173a01c6065faec21fdb398ef30ba9a8"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec 2 o2).",
                        "VernacExtend",
                        "b747e4f9f3180cb6af258b8fd95b147f67418f3e"
                    ]
                },
                {
                    "command": [
                        "intro Ho2.",
                        "VernacExtend",
                        "8afe0ad03385c58284ff089700a6e48319e36a6a"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_2 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "4ec97d0a6eae9c6fed02c0ed7f3a2f9e0ca70720"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn a, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "a2d92bc318c9a9f1b56188e078e79eb3ac1ce7da"
                    ]
                },
                {
                    "command": [
                        "left; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply Zsgn_9; apply sym_eq; assumption | apply outside_square_1; assumption ].",
                        "VernacExtend",
                        "521b573d9751efadae51a1102731e0fb1da41549"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec o2 (-2)).",
                        "VernacExtend",
                        "a154a84530155d303eb1a188f0e73f1de92f2b11"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_3 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "94c97fbf61793fb95b35d927607ba145bc1e03a5"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn a)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "5c73a90003296598a9d848d9d3254d97b9ad07fa"
                    ]
                },
                {
                    "command": [
                        "right; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply Zsgn_10; apply sym_eq; apply Z.opp_inj; assumption | apply outside_square_2; assumption ].",
                        "VernacExtend",
                        "c0b0b47a1e41a900c82d95833a6f2bce796ba20a"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nR_nR_4 a b c d e f g h (nR xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_1 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "f71909b24b264ce20070f11b21911afdcf0c33ea"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign a (a + b) (a + c) (a + b + c + d) e (e + f) (e + g) (e + f + g + h) xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_1 a (a + b)%Z (a + c)%Z (a + b + c + d)%Z e (e + f)%Z (e + g)%Z (e + f + g + h)%Z xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "c3694f4bbc8d910a6fec0653f0437ff20bae0df3"
                    ]
                },
                {
                    "command": [
                        "intros Hbcd'.",
                        "VernacExtend",
                        "bd2fb66b4924206bddf393e42dfb7edeabbc1385"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf f g h).",
                        "VernacExtend",
                        "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
                    ]
                },
                {
                    "command": [
                        "intros (Hf, (Hg, Hh)).",
                        "VernacExtend",
                        "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec 2 o1).",
                        "VernacExtend",
                        "f48e06a1765d3040d72a57b372312e148bc25a46"
                    ]
                },
                {
                    "command": [
                        "intro Ho1.",
                        "VernacExtend",
                        "b196b7b9d63229b2fe13418ac27d2ca01fece5a9"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_5 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "b7bfe4c6defebe115fd2accc4b2946f79db5889b"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn e, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "ae9c71adee8a1664a1b6c50a1b17c0a1a934679f"
                    ]
                },
                {
                    "command": [
                        "left; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply outside_square_1 | apply Zsgn_9; apply sym_eq ]; assumption.",
                        "VernacExtend",
                        "d109f198ad72fc88039410bbdded699b8dc8e850"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec o1 (-2)).",
                        "VernacExtend",
                        "cb39341bd62af76a97b55e65c43aac4d8e418897"
                    ]
                },
                {
                    "command": [
                        "intros Ho1' Ho1.",
                        "VernacExtend",
                        "cdebf24875bdbd6a495ba72a8e2502e67dd822e8"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_6 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "f483a1b16f77861b6ce8802851e84359261f67bd"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "2e69bb10e998249cd06475594a642039fdb6ad09"
                    ]
                },
                {
                    "command": [
                        "right; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply outside_square_2 | apply Zsgn_10; apply sym_eq; apply Z.opp_inj ]; assumption.",
                        "VernacExtend",
                        "2c1aafc8798512c3b5b6f863f83ff8211884c791"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nR_nR_7 a b c d e f g h (nR xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_1 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "810bc89051fc8ecbfd9f846e25cd1052a11c500a"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign a (a + b) (a + c) (a + b + c + d) e (e + f) (e + g) (e + f + g + h) xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_1 a (a + b)%Z (a + c)%Z (a + b + c + d)%Z e (e + f)%Z (e + g)%Z (e + f + g + h)%Z xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "c3694f4bbc8d910a6fec0653f0437ff20bae0df3"
                    ]
                },
                {
                    "command": [
                        "intro Hfgh'.",
                        "VernacExtend",
                        "345b6667cec5f818822048df8b93ef410d8ff631"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_1_dec_inf o1 o2).",
                        "VernacExtend",
                        "d295c561ef561fb8b649e6303ce92c0f0681eb8f"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_1.",
                        "VernacExtend",
                        "068d44eb2eb58699356ab84ee948b8147fe0eef5"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_8 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "17c4bef80f8937e9f81b326e04069c70ccf1b8df"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (1%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "e74cb5359bfd1e25ed95ae88e1f96e669bc567c0"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_1_inf _ _ H_inside_1); intros (Ho1, Ho2); [ left; split; apply outside_square_1 | right; split; apply outside_square_2 ]; assumption.",
                        "VernacExtend",
                        "0694e65076fd499ee899fb090aaff8471c907ce7"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_1'.",
                        "VernacExtend",
                        "2ec567de4490f9d472a6a6a40281eff13e5732a9"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_2_dec_inf o1 o2).",
                        "VernacExtend",
                        "7682baf8a4bbff99d50bdda519b1ba70e3c47898"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_2.",
                        "VernacExtend",
                        "b4e80bee310800c8c137b8b864721e5c3244f673"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_9 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "152690edd4ff3f485e8452c0c2c329c423aa3337"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "apply False_rec.",
                        "VernacExtend",
                        "aa34e83eda8e5f1a34cc23685121a87daef49085"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((-1)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "506784242bc8ec2571827e0f73c84cc1fec7c0c5"
                    ]
                },
                {
                    "command": [
                        "discriminate hl.",
                        "VernacExtend",
                        "f643a20865d0dde2f37d19887cfd4265938120b1"
                    ]
                },
                {
                    "command": [
                        "intros H_inside_2'.",
                        "VernacExtend",
                        "4f65b53b2c7b3936fda163236abffb01421ea904"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nR_nR_10 a b c d e f g h (nR xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_1 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "ebf1110cd2276609eca3149433715718142a96e8"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign a (a + b) (a + c) (a + b + c + d) e (e + f) (e + g) (e + f + g + h) xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_1 a (a + b)%Z (a + c)%Z (a + b + c + d)%Z e (e + f)%Z (e + g)%Z (e + f + g + h)%Z xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "c3694f4bbc8d910a6fec0653f0437ff20bae0df3"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf b c d).",
                        "VernacExtend",
                        "d92f13936a5038bdd06bb3160509a88b0ac07217"
                    ]
                },
                {
                    "command": [
                        "intros (Hb, (Hc, Hd)).",
                        "VernacExtend",
                        "b24025fbd18098487c0ee7d5d35744a09e154027"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf f g h).",
                        "VernacExtend",
                        "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
                    ]
                },
                {
                    "command": [
                        "intros (Hf, (Hg, Hh)).",
                        "VernacExtend",
                        "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_1 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "0b3a7cf1aee6c21cac9c8f1a7131131c9cf68287"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((Z.sgn a * Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "2a2115afdfcf43fe39b2ee3f378fd56e12e2d627"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Zsgn_15 in hl.",
                        "VernacExtend",
                        "64ba35dcc586c9b63dbf3219dc7171fd2f2f1699"
                    ]
                },
                {
                    "command": [
                        "case (Zsgn_16 _ _ (sym_eq hl)); intros (Ha, He); [ left | right ]; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; assumption.",
                        "VernacExtend",
                        "03e41396ac4c0fc62004601b6b0ed6a606e9631d"
                    ]
                },
                {
                    "command": [
                        "intros H_fgh'.",
                        "VernacExtend",
                        "124b0a9b173a01c6065faec21fdb398ef30ba9a8"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec 2 o2).",
                        "VernacExtend",
                        "b747e4f9f3180cb6af258b8fd95b147f67418f3e"
                    ]
                },
                {
                    "command": [
                        "intro Ho2.",
                        "VernacExtend",
                        "8afe0ad03385c58284ff089700a6e48319e36a6a"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_2 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "8db38400c71755cb43bf15e4e55b71fddecf8c60"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn a, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "7fc2f26252ac8bb0a4d21d651cbbc66d7b336e14"
                    ]
                },
                {
                    "command": [
                        "left; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply Zsgn_9; apply sym_eq; assumption | apply outside_square_1; assumption ].",
                        "VernacExtend",
                        "521b573d9751efadae51a1102731e0fb1da41549"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec o2 (-2)).",
                        "VernacExtend",
                        "a154a84530155d303eb1a188f0e73f1de92f2b11"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_3 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "0a90e6d9978b9a2224d75e7522f5bb5ecb2ce459"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn a)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "0b86e5417ddcbaccafe4342ebd676f14089b25f4"
                    ]
                },
                {
                    "command": [
                        "right; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply Zsgn_10; apply sym_eq; apply Z.opp_inj; assumption | apply outside_square_2; assumption ].",
                        "VernacExtend",
                        "c0b0b47a1e41a900c82d95833a6f2bce796ba20a"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nR_dL_4 a b c d e f g h (nR xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_2 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "e338eb26767fc3684e8a97123c68697052d25a34"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign (a + b) b (a + b + c + d) (b + d) (e + f) f (e + f + g + h) (f + h) xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_1 (a + b)%Z b (a + b + c + d)%Z (b + d)%Z (e + f)%Z f (e + f + g + h)%Z (f + h)%Z xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "b3dd6b55c68500abceaa7728e5eb7fe201500e74"
                    ]
                },
                {
                    "command": [
                        "intros Hbcd'.",
                        "VernacExtend",
                        "bd2fb66b4924206bddf393e42dfb7edeabbc1385"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf f g h).",
                        "VernacExtend",
                        "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
                    ]
                },
                {
                    "command": [
                        "intros (Hf, (Hg, Hh)).",
                        "VernacExtend",
                        "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec 2 o1).",
                        "VernacExtend",
                        "f48e06a1765d3040d72a57b372312e148bc25a46"
                    ]
                },
                {
                    "command": [
                        "intro Ho1.",
                        "VernacExtend",
                        "b196b7b9d63229b2fe13418ac27d2ca01fece5a9"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_5 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "60dee11bf970fa431bc509100b556cfda9cd4016"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn e, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "bcaa949df441a69a6a42f5382432cf2e75ed609d"
                    ]
                },
                {
                    "command": [
                        "left; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply outside_square_1 | apply Zsgn_9; apply sym_eq ]; assumption.",
                        "VernacExtend",
                        "d109f198ad72fc88039410bbdded699b8dc8e850"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec o1 (-2)).",
                        "VernacExtend",
                        "cb39341bd62af76a97b55e65c43aac4d8e418897"
                    ]
                },
                {
                    "command": [
                        "intros Ho1' Ho1.",
                        "VernacExtend",
                        "cdebf24875bdbd6a495ba72a8e2502e67dd822e8"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_6 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "73cd66244c556704a4acb72cdfd1263b52028628"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "0e484e3c76bb337ca0bc2b37ff6d3f018339f73d"
                    ]
                },
                {
                    "command": [
                        "right; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply outside_square_2 | apply Zsgn_10; apply sym_eq; apply Z.opp_inj ]; assumption.",
                        "VernacExtend",
                        "2c1aafc8798512c3b5b6f863f83ff8211884c791"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nR_dL_7 a b c d e f g h (nR xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_2 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "aece866d71f9f6b70c44ff6035c02e2759b10435"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign (a + b) b (a + b + c + d) (b + d) (e + f) f (e + f + g + h) (f + h) xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_1 (a + b)%Z b (a + b + c + d)%Z (b + d)%Z (e + f)%Z f (e + f + g + h)%Z (f + h)%Z xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "b3dd6b55c68500abceaa7728e5eb7fe201500e74"
                    ]
                },
                {
                    "command": [
                        "intro Hfgh'.",
                        "VernacExtend",
                        "345b6667cec5f818822048df8b93ef410d8ff631"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_1_dec_inf o1 o2).",
                        "VernacExtend",
                        "d295c561ef561fb8b649e6303ce92c0f0681eb8f"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_1.",
                        "VernacExtend",
                        "068d44eb2eb58699356ab84ee948b8147fe0eef5"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_8 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "897d1753e26f302c001afae6ff16a94868186d2e"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (1%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "f8478c3365cb374547eacaf1656c0dbd4a7baa05"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_1_inf _ _ H_inside_1); intros (Ho1, Ho2); [ left; split; apply outside_square_1 | right; split; apply outside_square_2 ]; assumption.",
                        "VernacExtend",
                        "0694e65076fd499ee899fb090aaff8471c907ce7"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_1'.",
                        "VernacExtend",
                        "2ec567de4490f9d472a6a6a40281eff13e5732a9"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_2_dec_inf o1 o2).",
                        "VernacExtend",
                        "7682baf8a4bbff99d50bdda519b1ba70e3c47898"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_2.",
                        "VernacExtend",
                        "b4e80bee310800c8c137b8b864721e5c3244f673"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_9 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "cbbf9d97e58e2bb95455ca931ec68344767f069d"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "apply False_rec.",
                        "VernacExtend",
                        "aa34e83eda8e5f1a34cc23685121a87daef49085"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((-1)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "bb57e82a3d5dfca42ce24ea33da02a42e7427ac9"
                    ]
                },
                {
                    "command": [
                        "discriminate hl.",
                        "VernacExtend",
                        "f643a20865d0dde2f37d19887cfd4265938120b1"
                    ]
                },
                {
                    "command": [
                        "intros H_inside_2'.",
                        "VernacExtend",
                        "4f65b53b2c7b3936fda163236abffb01421ea904"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nR_dL_10 a b c d e f g h (nR xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_2 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "0d3068282c5f924b3105b9445cf9b7dfcc50b98c"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign (a + b) b (a + b + c + d) (b + d) (e + f) f (e + f + g + h) (f + h) xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_1 (a + b)%Z b (a + b + c + d)%Z (b + d)%Z (e + f)%Z f (e + f + g + h)%Z (f + h)%Z xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "b3dd6b55c68500abceaa7728e5eb7fe201500e74"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_signok_0' _ _ _ _ _ H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "82ba942058f599dab626c16f3958e19a9e8856b7"
                    ]
                },
                {
                    "command": [
                        "intros H_Qhomographic_sg_denom_nonzero.",
                        "VernacExtend",
                        "7ee186f9a3e15bd36020fb30747a871aa671241b"
                    ]
                },
                {
                    "command": [
                        "set (L3 := Qhomographic_sign (a + b) (c + d) (e + f) (g + h) (nR xs) H_Qhomographic_sg_denom_nonzero) in *.",
                        "VernacExtend",
                        "84df2c330ca924d8672b2dc2167b20dca2d9d189"
                    ]
                },
                {
                    "command": [
                        "set (l1 := fst L3) in *.",
                        "VernacExtend",
                        "53a0156fadda9545b3aad23e6562a9f7571500e5"
                    ]
                },
                {
                    "command": [
                        "set (l2 := fst (snd L3)) in *.",
                        "VernacExtend",
                        "d2ff6d484662d1ffc681d957fae47d75d4f0ffe7"
                    ]
                },
                {
                    "command": [
                        "set (l3 := snd (snd L3)) in *.",
                        "VernacExtend",
                        "a4f4a2a7a6777d6cf8547330f649c7e802134835"
                    ]
                },
                {
                    "command": [
                        "set (na_ := fst l2) in *.",
                        "VernacExtend",
                        "4cc5c8cdb69c666a5ed03e05d9c5d3bf6b3508c8"
                    ]
                },
                {
                    "command": [
                        "set (nb_ := fst (snd l2)) in *.",
                        "VernacExtend",
                        "c689e91162d844443766f43d357817dbbb7e3d29"
                    ]
                },
                {
                    "command": [
                        "set (nc_ := fst (snd (snd l2))) in *.",
                        "VernacExtend",
                        "77cd624092e8a297c0e31fd1f7dd984499cdbe5d"
                    ]
                },
                {
                    "command": [
                        "set (nd_ := snd (snd (snd l2))) in *.",
                        "VernacExtend",
                        "3b6670693e7eae913c0e386dd06bc54541698adc"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_One a b c d e f g h (nR xs) One H_Qquadratic_sg_denom_nonzero l1 na_ nb_ nc_ nd_ l3 H_Qhomographic_sg_denom_nonzero); intros H1.",
                        "VernacExtend",
                        "3aaded4fd9b7cf246242f869d542f1391f8cbda2"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (l1, (0%Z, (na_, (0%Z, nb_)), (0%Z, (nc_, (0%Z, nd_))), (l3, One)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) One H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; assumption | apply H1; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity ] | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end; repeat rewrite Zplus_0_l; repeat rewrite Zplus_0_r ]; apply (sg_pos_1 (a + b) (c + d) (e + f) (g + h) (nR xs) H_Qhomographic_sg_denom_nonzero na_ nb_ nc_ nd_ l3); rewrite hl; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity.",
                        "VernacExtend",
                        "a4d29a7d5158ae00b1d02b0271226cbb63150025"
                    ]
                },
                {
                    "command": [
                        "destruct p2 as [ys| ys| ].",
                        "VernacExtend",
                        "a6e067f2aa8567de952ce8b70a91f70f20efb13b"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf b c d).",
                        "VernacExtend",
                        "d92f13936a5038bdd06bb3160509a88b0ac07217"
                    ]
                },
                {
                    "command": [
                        "intros (Hb, (Hc, Hd)).",
                        "VernacExtend",
                        "b24025fbd18098487c0ee7d5d35744a09e154027"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf f g h).",
                        "VernacExtend",
                        "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
                    ]
                },
                {
                    "command": [
                        "intros (Hf, (Hg, Hh)).",
                        "VernacExtend",
                        "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_1 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "2ca6efa1266480d8bf81b38b038fe6537f4e5150"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((Z.sgn a * Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "cb040f8d3f6b39a0ce3c95f4135ce5d3ba57ae61"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Zsgn_15 in hl.",
                        "VernacExtend",
                        "64ba35dcc586c9b63dbf3219dc7171fd2f2f1699"
                    ]
                },
                {
                    "command": [
                        "case (Zsgn_16 _ _ (sym_eq hl)); intros (Ha, He); [ left | right ]; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; assumption.",
                        "VernacExtend",
                        "03e41396ac4c0fc62004601b6b0ed6a606e9631d"
                    ]
                },
                {
                    "command": [
                        "intros H_fgh'.",
                        "VernacExtend",
                        "124b0a9b173a01c6065faec21fdb398ef30ba9a8"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec 2 o2).",
                        "VernacExtend",
                        "b747e4f9f3180cb6af258b8fd95b147f67418f3e"
                    ]
                },
                {
                    "command": [
                        "intro Ho2.",
                        "VernacExtend",
                        "8afe0ad03385c58284ff089700a6e48319e36a6a"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_2 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "2416253b968fdf37c51579e985ced59ed75f277d"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn a, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "4c5c6306e821b80c00e616d45012b1d3aa7cca6f"
                    ]
                },
                {
                    "command": [
                        "left; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply Zsgn_9; apply sym_eq; assumption | apply outside_square_1; assumption ].",
                        "VernacExtend",
                        "521b573d9751efadae51a1102731e0fb1da41549"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec o2 (-2)).",
                        "VernacExtend",
                        "a154a84530155d303eb1a188f0e73f1de92f2b11"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_3 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "44518512dfe88ca88898fe96b8fbdc54e72141e7"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn a)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "1478f4a6d28773e4dd0ccd88c5c7f59c43e654a8"
                    ]
                },
                {
                    "command": [
                        "right; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply Zsgn_10; apply sym_eq; apply Z.opp_inj; assumption | apply outside_square_2; assumption ].",
                        "VernacExtend",
                        "c0b0b47a1e41a900c82d95833a6f2bce796ba20a"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_dL_nR_4 a b c d e f g h (dL xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_3 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "f64fa610989268eca45d7884cde62e0d3b3c9532"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign (a + c) (a + b + c + d) c (c + d) (e + g) (e + f + g + h) g (g + h) xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_1 (a + c)%Z (a + b + c + d)%Z c (c + d)%Z (e + g)%Z (e + f + g + h)%Z g (g + h)%Z xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "f463b60f6b0f6bd61e2e435e9b3782789f12570e"
                    ]
                },
                {
                    "command": [
                        "intros Hbcd'.",
                        "VernacExtend",
                        "bd2fb66b4924206bddf393e42dfb7edeabbc1385"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf f g h).",
                        "VernacExtend",
                        "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
                    ]
                },
                {
                    "command": [
                        "intros (Hf, (Hg, Hh)).",
                        "VernacExtend",
                        "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec 2 o1).",
                        "VernacExtend",
                        "f48e06a1765d3040d72a57b372312e148bc25a46"
                    ]
                },
                {
                    "command": [
                        "intro Ho1.",
                        "VernacExtend",
                        "b196b7b9d63229b2fe13418ac27d2ca01fece5a9"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_5 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "73d28ffa851b17a895eb8de63759600c1cc7d195"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn e, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "0ad880c605fe300047e8217a5e3b992be3a63357"
                    ]
                },
                {
                    "command": [
                        "left; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply outside_square_1 | apply Zsgn_9; apply sym_eq ]; assumption.",
                        "VernacExtend",
                        "d109f198ad72fc88039410bbdded699b8dc8e850"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec o1 (-2)).",
                        "VernacExtend",
                        "cb39341bd62af76a97b55e65c43aac4d8e418897"
                    ]
                },
                {
                    "command": [
                        "intros Ho1' Ho1.",
                        "VernacExtend",
                        "cdebf24875bdbd6a495ba72a8e2502e67dd822e8"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_6 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "748719d32744224930bba0e4a91f0658594f536b"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "b72345898851be7f8b0e04960895bb4f2b5679fa"
                    ]
                },
                {
                    "command": [
                        "right; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply outside_square_2 | apply Zsgn_10; apply sym_eq; apply Z.opp_inj ]; assumption.",
                        "VernacExtend",
                        "2c1aafc8798512c3b5b6f863f83ff8211884c791"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_dL_nR_7 a b c d e f g h (dL xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_3 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "05c7636b2a0eeb81bdae4b57d3f3af8b5289c4db"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign (a + c) (a + b + c + d) c (c + d) (e + g) (e + f + g + h) g (g + h) xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_1 (a + c)%Z (a + b + c + d)%Z c (c + d)%Z (e + g)%Z (e + f + g + h)%Z g (g + h)%Z xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "f463b60f6b0f6bd61e2e435e9b3782789f12570e"
                    ]
                },
                {
                    "command": [
                        "intro Hfgh'.",
                        "VernacExtend",
                        "345b6667cec5f818822048df8b93ef410d8ff631"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_1_dec_inf o1 o2).",
                        "VernacExtend",
                        "d295c561ef561fb8b649e6303ce92c0f0681eb8f"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_1.",
                        "VernacExtend",
                        "068d44eb2eb58699356ab84ee948b8147fe0eef5"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_8 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "17b14b6ad27d5d97fa40021b5b1bd5759a6a8583"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (1%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "c6ca014c9c9124ee6fb48e320d1b04897ff2a77f"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_1_inf _ _ H_inside_1); intros (Ho1, Ho2); [ left; split; apply outside_square_1 | right; split; apply outside_square_2 ]; assumption.",
                        "VernacExtend",
                        "0694e65076fd499ee899fb090aaff8471c907ce7"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_1'.",
                        "VernacExtend",
                        "2ec567de4490f9d472a6a6a40281eff13e5732a9"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_2_dec_inf o1 o2).",
                        "VernacExtend",
                        "7682baf8a4bbff99d50bdda519b1ba70e3c47898"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_2.",
                        "VernacExtend",
                        "b4e80bee310800c8c137b8b864721e5c3244f673"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_9 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "1b15c9a0b17bf8e3bd9ea57e3449cd64dd182336"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "apply False_rec.",
                        "VernacExtend",
                        "aa34e83eda8e5f1a34cc23685121a87daef49085"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((-1)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "56231c44212e5ee8a73e4ff72dae21eeaf8acf51"
                    ]
                },
                {
                    "command": [
                        "discriminate hl.",
                        "VernacExtend",
                        "f643a20865d0dde2f37d19887cfd4265938120b1"
                    ]
                },
                {
                    "command": [
                        "intros H_inside_2'.",
                        "VernacExtend",
                        "4f65b53b2c7b3936fda163236abffb01421ea904"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_dL_nR_10 a b c d e f g h (dL xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_3 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "8fc05207a6b41ec0c59af37fe14d660de73831e9"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign (a + c) (a + b + c + d) c (c + d) (e + g) (e + f + g + h) g (g + h) xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_1 (a + c)%Z (a + b + c + d)%Z c (c + d)%Z (e + g)%Z (e + f + g + h)%Z g (g + h)%Z xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "f463b60f6b0f6bd61e2e435e9b3782789f12570e"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf b c d).",
                        "VernacExtend",
                        "d92f13936a5038bdd06bb3160509a88b0ac07217"
                    ]
                },
                {
                    "command": [
                        "intros (Hb, (Hc, Hd)).",
                        "VernacExtend",
                        "b24025fbd18098487c0ee7d5d35744a09e154027"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf f g h).",
                        "VernacExtend",
                        "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
                    ]
                },
                {
                    "command": [
                        "intros (Hf, (Hg, Hh)).",
                        "VernacExtend",
                        "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_1 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "e97d2062f29099b8e633a9b753a2b33784c76b0b"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((Z.sgn a * Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "4609e55137027790181f4ab597564d917c1e01e8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Zsgn_15 in hl.",
                        "VernacExtend",
                        "64ba35dcc586c9b63dbf3219dc7171fd2f2f1699"
                    ]
                },
                {
                    "command": [
                        "case (Zsgn_16 _ _ (sym_eq hl)); intros (Ha, He); [ left | right ]; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; assumption.",
                        "VernacExtend",
                        "03e41396ac4c0fc62004601b6b0ed6a606e9631d"
                    ]
                },
                {
                    "command": [
                        "intros H_fgh'.",
                        "VernacExtend",
                        "124b0a9b173a01c6065faec21fdb398ef30ba9a8"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec 2 o2).",
                        "VernacExtend",
                        "b747e4f9f3180cb6af258b8fd95b147f67418f3e"
                    ]
                },
                {
                    "command": [
                        "intro Ho2.",
                        "VernacExtend",
                        "8afe0ad03385c58284ff089700a6e48319e36a6a"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_2 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "9d11e8d3732b1a9fe564baeaad7926fc1537b0b6"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn a, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "5b63d9d5dfee7282e910c421360e841e32775d3d"
                    ]
                },
                {
                    "command": [
                        "left; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply Zsgn_9; apply sym_eq; assumption | apply outside_square_1; assumption ].",
                        "VernacExtend",
                        "521b573d9751efadae51a1102731e0fb1da41549"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec o2 (-2)).",
                        "VernacExtend",
                        "a154a84530155d303eb1a188f0e73f1de92f2b11"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_3 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "45bd69bc49004ab873c9fccf5ccb3a932ddbf353"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn a)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "889020acff041b16078b24e616581ff447a863fc"
                    ]
                },
                {
                    "command": [
                        "right; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply Zsgn_10; apply sym_eq; apply Z.opp_inj; assumption | apply outside_square_2; assumption ].",
                        "VernacExtend",
                        "c0b0b47a1e41a900c82d95833a6f2bce796ba20a"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_dL_dL_4 a b c d e f g h (dL xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_4 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "60709f15591f536d32427cc90af2373272b0090d"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign (a + b + c + d) (b + d) (c + d) d (e + f + g + h) (f + h) (g + h) h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_1 (a + b + c + d)%Z (b + d)%Z (c + d)%Z d (e + f + g + h)%Z (f + h)%Z (g + h)%Z h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "d3c3240edf4a9700c84ee08982386751a5a92de2"
                    ]
                },
                {
                    "command": [
                        "intros Hbcd'.",
                        "VernacExtend",
                        "bd2fb66b4924206bddf393e42dfb7edeabbc1385"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf f g h).",
                        "VernacExtend",
                        "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
                    ]
                },
                {
                    "command": [
                        "intros (Hf, (Hg, Hh)).",
                        "VernacExtend",
                        "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec 2 o1).",
                        "VernacExtend",
                        "f48e06a1765d3040d72a57b372312e148bc25a46"
                    ]
                },
                {
                    "command": [
                        "intro Ho1.",
                        "VernacExtend",
                        "b196b7b9d63229b2fe13418ac27d2ca01fece5a9"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_5 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "e60e2a27dd0430030b87f0c6f1021aec69cdd88b"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn e, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "b407c61f1a18e40fafd929766a13d1e5c45ac6c1"
                    ]
                },
                {
                    "command": [
                        "left; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply outside_square_1 | apply Zsgn_9; apply sym_eq ]; assumption.",
                        "VernacExtend",
                        "d109f198ad72fc88039410bbdded699b8dc8e850"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec o1 (-2)).",
                        "VernacExtend",
                        "cb39341bd62af76a97b55e65c43aac4d8e418897"
                    ]
                },
                {
                    "command": [
                        "intros Ho1' Ho1.",
                        "VernacExtend",
                        "cdebf24875bdbd6a495ba72a8e2502e67dd822e8"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_6 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "7b0e4612a8dda195acef9dc367bef08bf8fcb312"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "844a43edc5ec9776aa2bee077d9997ca4ad12fc4"
                    ]
                },
                {
                    "command": [
                        "right; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply outside_square_2 | apply Zsgn_10; apply sym_eq; apply Z.opp_inj ]; assumption.",
                        "VernacExtend",
                        "2c1aafc8798512c3b5b6f863f83ff8211884c791"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_dL_dL_7 a b c d e f g h (dL xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_4 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "51d4862aa5abb3dd93094f58d26b4d40909e48b4"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign (a + b + c + d) (b + d) (c + d) d (e + f + g + h) (f + h) (g + h) h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_1 (a + b + c + d)%Z (b + d)%Z (c + d)%Z d (e + f + g + h)%Z (f + h)%Z (g + h)%Z h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "d3c3240edf4a9700c84ee08982386751a5a92de2"
                    ]
                },
                {
                    "command": [
                        "intro Hfgh'.",
                        "VernacExtend",
                        "345b6667cec5f818822048df8b93ef410d8ff631"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_1_dec_inf o1 o2).",
                        "VernacExtend",
                        "d295c561ef561fb8b649e6303ce92c0f0681eb8f"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_1.",
                        "VernacExtend",
                        "068d44eb2eb58699356ab84ee948b8147fe0eef5"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_8 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "084252fe935af0a92ac7feca5fe44fa253615116"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (1%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "6ae4ee87ebc2a8d8a9f1c3b49745c38ea279223f"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_1_inf _ _ H_inside_1); intros (Ho1, Ho2); [ left; split; apply outside_square_1 | right; split; apply outside_square_2 ]; assumption.",
                        "VernacExtend",
                        "0694e65076fd499ee899fb090aaff8471c907ce7"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_1'.",
                        "VernacExtend",
                        "2ec567de4490f9d472a6a6a40281eff13e5732a9"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_2_dec_inf o1 o2).",
                        "VernacExtend",
                        "7682baf8a4bbff99d50bdda519b1ba70e3c47898"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_2.",
                        "VernacExtend",
                        "b4e80bee310800c8c137b8b864721e5c3244f673"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_9 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "01ac32711281d55d5e8790d70a8a118de564f06e"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "apply False_rec.",
                        "VernacExtend",
                        "aa34e83eda8e5f1a34cc23685121a87daef49085"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((-1)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "e78ae26937e37cea69858b520450a8e12dd3b653"
                    ]
                },
                {
                    "command": [
                        "discriminate hl.",
                        "VernacExtend",
                        "f643a20865d0dde2f37d19887cfd4265938120b1"
                    ]
                },
                {
                    "command": [
                        "intros H_inside_2'.",
                        "VernacExtend",
                        "4f65b53b2c7b3936fda163236abffb01421ea904"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_dL_dL_10 a b c d e f g h (dL xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_4 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "92aabbab4ba412dd08be60745aa35f49b983e5c9"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign (a + b + c + d) (b + d) (c + d) d (e + f + g + h) (f + h) (g + h) h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_1 (a + b + c + d)%Z (b + d)%Z (c + d)%Z d (e + f + g + h)%Z (f + h)%Z (g + h)%Z h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "d3c3240edf4a9700c84ee08982386751a5a92de2"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_signok_0' _ _ _ _ _ H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "82ba942058f599dab626c16f3958e19a9e8856b7"
                    ]
                },
                {
                    "command": [
                        "intros H_Qhomographic_sg_denom_nonzero.",
                        "VernacExtend",
                        "7ee186f9a3e15bd36020fb30747a871aa671241b"
                    ]
                },
                {
                    "command": [
                        "set (L3 := Qhomographic_sign (a + b) (c + d) (e + f) (g + h) (dL xs) H_Qhomographic_sg_denom_nonzero) in *.",
                        "VernacExtend",
                        "bbcac23fd22aa8b7c66b46a28b66bc764c9d21df"
                    ]
                },
                {
                    "command": [
                        "set (l1 := fst L3) in *.",
                        "VernacExtend",
                        "53a0156fadda9545b3aad23e6562a9f7571500e5"
                    ]
                },
                {
                    "command": [
                        "set (l2 := fst (snd L3)) in *.",
                        "VernacExtend",
                        "d2ff6d484662d1ffc681d957fae47d75d4f0ffe7"
                    ]
                },
                {
                    "command": [
                        "set (l3 := snd (snd L3)) in *.",
                        "VernacExtend",
                        "a4f4a2a7a6777d6cf8547330f649c7e802134835"
                    ]
                },
                {
                    "command": [
                        "set (na_ := fst l2) in *.",
                        "VernacExtend",
                        "4cc5c8cdb69c666a5ed03e05d9c5d3bf6b3508c8"
                    ]
                },
                {
                    "command": [
                        "set (nb_ := fst (snd l2)) in *.",
                        "VernacExtend",
                        "c689e91162d844443766f43d357817dbbb7e3d29"
                    ]
                },
                {
                    "command": [
                        "set (nc_ := fst (snd (snd l2))) in *.",
                        "VernacExtend",
                        "77cd624092e8a297c0e31fd1f7dd984499cdbe5d"
                    ]
                },
                {
                    "command": [
                        "set (nd_ := snd (snd (snd l2))) in *.",
                        "VernacExtend",
                        "3b6670693e7eae913c0e386dd06bc54541698adc"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_One a b c d e f g h (dL xs) One H_Qquadratic_sg_denom_nonzero l1 na_ nb_ nc_ nd_ l3 H_Qhomographic_sg_denom_nonzero); intros H1.",
                        "VernacExtend",
                        "729fdcd685e6089ef0bda9bddf52a935a2f85311"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (l1, (0%Z, (na_, (0%Z, nb_)), (0%Z, (nc_, (0%Z, nd_))), (l3, One)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) One H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; assumption | apply H1; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity ] | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end; repeat rewrite Zplus_0_l; repeat rewrite Zplus_0_r ]; apply (sg_pos_1 (a + b) (c + d) (e + f) (g + h) (dL xs) H_Qhomographic_sg_denom_nonzero na_ nb_ nc_ nd_ l3); rewrite hl; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity.",
                        "VernacExtend",
                        "9c27ad0e668e511aa7e93c0e0e9139384c0757d4"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_signok_0 _ _ _ _ _ H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "891278ce1d1d1a595b0c37c3d03fef7ef0e6f7fa"
                    ]
                },
                {
                    "command": [
                        "intros H_Qhomographic_sg_denom_nonzero.",
                        "VernacExtend",
                        "7ee186f9a3e15bd36020fb30747a871aa671241b"
                    ]
                },
                {
                    "command": [
                        "set (L3 := Qhomographic_sign (a + c) (b + d) (e + g) (f + h) p2 H_Qhomographic_sg_denom_nonzero) in *.",
                        "VernacExtend",
                        "a3acce1fe502fff654a4ab9f8e3264e43d54debe"
                    ]
                },
                {
                    "command": [
                        "set (l1 := fst L3) in *.",
                        "VernacExtend",
                        "53a0156fadda9545b3aad23e6562a9f7571500e5"
                    ]
                },
                {
                    "command": [
                        "set (l2 := fst (snd L3)) in *.",
                        "VernacExtend",
                        "d2ff6d484662d1ffc681d957fae47d75d4f0ffe7"
                    ]
                },
                {
                    "command": [
                        "set (l3 := snd (snd L3)) in *.",
                        "VernacExtend",
                        "a4f4a2a7a6777d6cf8547330f649c7e802134835"
                    ]
                },
                {
                    "command": [
                        "set (na_ := fst l2) in *.",
                        "VernacExtend",
                        "4cc5c8cdb69c666a5ed03e05d9c5d3bf6b3508c8"
                    ]
                },
                {
                    "command": [
                        "set (nb_ := fst (snd l2)) in *.",
                        "VernacExtend",
                        "c689e91162d844443766f43d357817dbbb7e3d29"
                    ]
                },
                {
                    "command": [
                        "set (nc_ := fst (snd (snd l2))) in *.",
                        "VernacExtend",
                        "77cd624092e8a297c0e31fd1f7dd984499cdbe5d"
                    ]
                },
                {
                    "command": [
                        "set (nd_ := snd (snd (snd l2))) in *.",
                        "VernacExtend",
                        "3b6670693e7eae913c0e386dd06bc54541698adc"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_One_y a b c d e f g h One p2 H_Qquadratic_sg_denom_nonzero l1 na_ nb_ nc_ nd_ l3 H_Qhomographic_sg_denom_nonzero); intros H1.",
                        "VernacExtend",
                        "0f9e0cc2712b63c207db1a772be8487cca639a7f"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (l1, (0%Z, (0%Z, (na_, nb_)), (0%Z, (0%Z, (nc_, nd_))), (One, l3)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h One p2 H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; assumption | apply H1; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity ] | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end; repeat rewrite Zplus_0_l; repeat rewrite Zplus_0_r ]; apply (sg_pos_1 (a + c) (b + d) (e + g) (f + h) p2 H_Qhomographic_sg_denom_nonzero na_ nb_ nc_ nd_ l3); rewrite hl; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity.",
                        "VernacExtend",
                        "7eb12db8684937b0b985bdf93071149877e96f06"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qquadratic_sign_pos_2",
            "line_nb": 352,
            "steps": [
                {
                    "command": [
                        "fix Qquadratic_sign_pos_2 9.",
                        "VernacExtend",
                        "6dc50a8b1aa770aeb682be15b41085b2f54f064b"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "set (o1 := outside_square a b c d) in *.",
                        "VernacExtend",
                        "115a9a38809cb78c24da8e0924729c0e3ba70321"
                    ]
                },
                {
                    "command": [
                        "set (o2 := outside_square e f g h) in *.",
                        "VernacExtend",
                        "3226c4628498a920e7666c26460e51df81dc5ca0"
                    ]
                },
                {
                    "command": [
                        "destruct p1 as [xs| xs| ].",
                        "VernacExtend",
                        "c49c827365e4d09f3f970ea66544c82eb12cd410"
                    ]
                },
                {
                    "command": [
                        "destruct p2 as [ys| ys| ].",
                        "VernacExtend",
                        "a6e067f2aa8567de952ce8b70a91f70f20efb13b"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf b c d).",
                        "VernacExtend",
                        "d92f13936a5038bdd06bb3160509a88b0ac07217"
                    ]
                },
                {
                    "command": [
                        "intros (Hb, (Hc, Hd)).",
                        "VernacExtend",
                        "b24025fbd18098487c0ee7d5d35744a09e154027"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf f g h).",
                        "VernacExtend",
                        "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
                    ]
                },
                {
                    "command": [
                        "intros (Hf, (Hg, Hh)).",
                        "VernacExtend",
                        "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_1 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "7be30785199ecf5ea7f56f20ee28d6c2c1399de1"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((Z.sgn a * Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "3ed683e834d6c75a9681200ae977e1d35bcbd232"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; rewrite <- Zsgn_15 in hl.",
                        "VernacExtend",
                        "ee2e09bae78c5f1f2dd8bb9f34710881f57b1e50"
                    ]
                },
                {
                    "command": [
                        "case (Zsgn_16 _ _ (sym_eq hl)); intros (Ha, He); [ left | right ]; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | apply Zlt_le_weak ]; assumption.",
                        "VernacExtend",
                        "b6f3a4286031b29f7b2c594d8224a66b11d3e51d"
                    ]
                },
                {
                    "command": [
                        "intros H_fgh'.",
                        "VernacExtend",
                        "124b0a9b173a01c6065faec21fdb398ef30ba9a8"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec 2 o2).",
                        "VernacExtend",
                        "b747e4f9f3180cb6af258b8fd95b147f67418f3e"
                    ]
                },
                {
                    "command": [
                        "intro Ho2.",
                        "VernacExtend",
                        "8afe0ad03385c58284ff089700a6e48319e36a6a"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_2 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "4ec97d0a6eae9c6fed02c0ed7f3a2f9e0ca70720"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn a, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "a2d92bc318c9a9f1b56188e078e79eb3ac1ce7da"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; left; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o2 in Ho2; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "831ea598321daef42587f3e9e47557624f3cc91d"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec o2 (-2)).",
                        "VernacExtend",
                        "a154a84530155d303eb1a188f0e73f1de92f2b11"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_3 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "94c97fbf61793fb95b35d927607ba145bc1e03a5"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn a)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "5c73a90003296598a9d848d9d3254d97b9ad07fa"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; right; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o2 in Ho2'; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "c5217cdbbbe71f71276289f5435b759bc39e55e4"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nR_nR_4 a b c d e f g h (nR xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_1 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "f71909b24b264ce20070f11b21911afdcf0c33ea"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign a (a + b) (a + c) (a + b + c + d) e (e + f) (e + g) (e + f + g + h) xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_2 a (a + b)%Z (a + c)%Z (a + b + c + d)%Z e (e + f)%Z (e + g)%Z (e + f + g + h)%Z xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "9c4d8b9a026c2cd69cdbf7218abb968776d63617"
                    ]
                },
                {
                    "command": [
                        "intros Hbcd'.",
                        "VernacExtend",
                        "bd2fb66b4924206bddf393e42dfb7edeabbc1385"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf f g h).",
                        "VernacExtend",
                        "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
                    ]
                },
                {
                    "command": [
                        "intros (Hf, (Hg, Hh)).",
                        "VernacExtend",
                        "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec 2 o1).",
                        "VernacExtend",
                        "f48e06a1765d3040d72a57b372312e148bc25a46"
                    ]
                },
                {
                    "command": [
                        "intro Ho1.",
                        "VernacExtend",
                        "b196b7b9d63229b2fe13418ac27d2ca01fece5a9"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_5 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "b7bfe4c6defebe115fd2accc4b2946f79db5889b"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn e, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "ae9c71adee8a1664a1b6c50a1b17c0a1a934679f"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; left; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o1 in Ho1; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "ee89cbabd8cad9ed668340502dd4e12dadf048a4"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec o1 (-2)).",
                        "VernacExtend",
                        "cb39341bd62af76a97b55e65c43aac4d8e418897"
                    ]
                },
                {
                    "command": [
                        "intros Ho1' Ho1.",
                        "VernacExtend",
                        "cdebf24875bdbd6a495ba72a8e2502e67dd822e8"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_6 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "f483a1b16f77861b6ce8802851e84359261f67bd"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "2e69bb10e998249cd06475594a642039fdb6ad09"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; right; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o1 in Ho1'; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "3adccd55dc5b618fe84410bded5e2e1097d09700"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nR_nR_7 a b c d e f g h (nR xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_1 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "810bc89051fc8ecbfd9f846e25cd1052a11c500a"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign a (a + b) (a + c) (a + b + c + d) e (e + f) (e + g) (e + f + g + h) xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_2 a (a + b)%Z (a + c)%Z (a + b + c + d)%Z e (e + f)%Z (e + g)%Z (e + f + g + h)%Z xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "9c4d8b9a026c2cd69cdbf7218abb968776d63617"
                    ]
                },
                {
                    "command": [
                        "intro Hfgh'.",
                        "VernacExtend",
                        "345b6667cec5f818822048df8b93ef410d8ff631"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_1_dec_inf o1 o2).",
                        "VernacExtend",
                        "d295c561ef561fb8b649e6303ce92c0f0681eb8f"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_1.",
                        "VernacExtend",
                        "068d44eb2eb58699356ab84ee948b8147fe0eef5"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_8 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "17c4bef80f8937e9f81b326e04069c70ccf1b8df"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (1%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "e74cb5359bfd1e25ed95ae88e1f96e669bc567c0"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; case (inside_square_1_inf _ _ H_inside_1); intros (Ho1, Ho2); [ left | right ]; repeat split; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o1 in Ho1; unfold o2 in Ho2; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "a637ed991bbc6cf6cb8e58aa20353e208c724efb"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_1'.",
                        "VernacExtend",
                        "2ec567de4490f9d472a6a6a40281eff13e5732a9"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_2_dec_inf o1 o2).",
                        "VernacExtend",
                        "7682baf8a4bbff99d50bdda519b1ba70e3c47898"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_2.",
                        "VernacExtend",
                        "b4e80bee310800c8c137b8b864721e5c3244f673"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_9 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "152690edd4ff3f485e8452c0c2c329c423aa3337"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "apply False_rec.",
                        "VernacExtend",
                        "aa34e83eda8e5f1a34cc23685121a87daef49085"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((-1)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "506784242bc8ec2571827e0f73c84cc1fec7c0c5"
                    ]
                },
                {
                    "command": [
                        "discriminate hl.",
                        "VernacExtend",
                        "f643a20865d0dde2f37d19887cfd4265938120b1"
                    ]
                },
                {
                    "command": [
                        "intros H_inside_2'.",
                        "VernacExtend",
                        "4f65b53b2c7b3936fda163236abffb01421ea904"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nR_nR_10 a b c d e f g h (nR xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_1 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "ebf1110cd2276609eca3149433715718142a96e8"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign a (a + b) (a + c) (a + b + c + d) e (e + f) (e + g) (e + f + g + h) xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_2 a (a + b)%Z (a + c)%Z (a + b + c + d)%Z e (e + f)%Z (e + g)%Z (e + f + g + h)%Z xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "9c4d8b9a026c2cd69cdbf7218abb968776d63617"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf b c d).",
                        "VernacExtend",
                        "d92f13936a5038bdd06bb3160509a88b0ac07217"
                    ]
                },
                {
                    "command": [
                        "intros (Hb, (Hc, Hd)).",
                        "VernacExtend",
                        "b24025fbd18098487c0ee7d5d35744a09e154027"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf f g h).",
                        "VernacExtend",
                        "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
                    ]
                },
                {
                    "command": [
                        "intros (Hf, (Hg, Hh)).",
                        "VernacExtend",
                        "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_1 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "0b3a7cf1aee6c21cac9c8f1a7131131c9cf68287"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((Z.sgn a * Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "2a2115afdfcf43fe39b2ee3f378fd56e12e2d627"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; rewrite <- Zsgn_15 in hl.",
                        "VernacExtend",
                        "ee2e09bae78c5f1f2dd8bb9f34710881f57b1e50"
                    ]
                },
                {
                    "command": [
                        "case (Zsgn_16 _ _ (sym_eq hl)); intros (Ha, He); [ left | right ]; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | apply Zlt_le_weak ]; assumption.",
                        "VernacExtend",
                        "b6f3a4286031b29f7b2c594d8224a66b11d3e51d"
                    ]
                },
                {
                    "command": [
                        "intros H_fgh'.",
                        "VernacExtend",
                        "124b0a9b173a01c6065faec21fdb398ef30ba9a8"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec 2 o2).",
                        "VernacExtend",
                        "b747e4f9f3180cb6af258b8fd95b147f67418f3e"
                    ]
                },
                {
                    "command": [
                        "intro Ho2.",
                        "VernacExtend",
                        "8afe0ad03385c58284ff089700a6e48319e36a6a"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_2 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "8db38400c71755cb43bf15e4e55b71fddecf8c60"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn a, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "7fc2f26252ac8bb0a4d21d651cbbc66d7b336e14"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; left; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o2 in Ho2; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "831ea598321daef42587f3e9e47557624f3cc91d"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec o2 (-2)).",
                        "VernacExtend",
                        "a154a84530155d303eb1a188f0e73f1de92f2b11"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_3 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "0a90e6d9978b9a2224d75e7522f5bb5ecb2ce459"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn a)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "0b86e5417ddcbaccafe4342ebd676f14089b25f4"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; right; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o2 in Ho2'; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "c5217cdbbbe71f71276289f5435b759bc39e55e4"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nR_dL_4 a b c d e f g h (nR xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_2 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "e338eb26767fc3684e8a97123c68697052d25a34"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign (a + b) b (a + b + c + d) (b + d) (e + f) f (e + f + g + h) (f + h) xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_2 (a + b)%Z b (a + b + c + d)%Z (b + d)%Z (e + f)%Z f (e + f + g + h)%Z (f + h)%Z xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "fb776840a89826e7099eabdddf5c40e6b660e5c5"
                    ]
                },
                {
                    "command": [
                        "intros Hbcd'.",
                        "VernacExtend",
                        "bd2fb66b4924206bddf393e42dfb7edeabbc1385"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf f g h).",
                        "VernacExtend",
                        "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
                    ]
                },
                {
                    "command": [
                        "intros (Hf, (Hg, Hh)).",
                        "VernacExtend",
                        "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec 2 o1).",
                        "VernacExtend",
                        "f48e06a1765d3040d72a57b372312e148bc25a46"
                    ]
                },
                {
                    "command": [
                        "intro Ho1.",
                        "VernacExtend",
                        "b196b7b9d63229b2fe13418ac27d2ca01fece5a9"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_5 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "60dee11bf970fa431bc509100b556cfda9cd4016"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn e, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "bcaa949df441a69a6a42f5382432cf2e75ed609d"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; left; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o1 in Ho1; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "ee89cbabd8cad9ed668340502dd4e12dadf048a4"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec o1 (-2)).",
                        "VernacExtend",
                        "cb39341bd62af76a97b55e65c43aac4d8e418897"
                    ]
                },
                {
                    "command": [
                        "intros Ho1' Ho1.",
                        "VernacExtend",
                        "cdebf24875bdbd6a495ba72a8e2502e67dd822e8"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_6 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "73cd66244c556704a4acb72cdfd1263b52028628"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "0e484e3c76bb337ca0bc2b37ff6d3f018339f73d"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; right; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o1 in Ho1'; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "3adccd55dc5b618fe84410bded5e2e1097d09700"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nR_dL_7 a b c d e f g h (nR xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_2 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "aece866d71f9f6b70c44ff6035c02e2759b10435"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign (a + b) b (a + b + c + d) (b + d) (e + f) f (e + f + g + h) (f + h) xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_2 (a + b)%Z b (a + b + c + d)%Z (b + d)%Z (e + f)%Z f (e + f + g + h)%Z (f + h)%Z xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "fb776840a89826e7099eabdddf5c40e6b660e5c5"
                    ]
                },
                {
                    "command": [
                        "intro Hfgh'.",
                        "VernacExtend",
                        "345b6667cec5f818822048df8b93ef410d8ff631"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_1_dec_inf o1 o2).",
                        "VernacExtend",
                        "d295c561ef561fb8b649e6303ce92c0f0681eb8f"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_1.",
                        "VernacExtend",
                        "068d44eb2eb58699356ab84ee948b8147fe0eef5"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_8 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "897d1753e26f302c001afae6ff16a94868186d2e"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (1%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "f8478c3365cb374547eacaf1656c0dbd4a7baa05"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; case (inside_square_1_inf _ _ H_inside_1); intros (Ho1, Ho2); [ left | right ]; repeat split; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o1 in Ho1; unfold o2 in Ho2; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "a637ed991bbc6cf6cb8e58aa20353e208c724efb"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_1'.",
                        "VernacExtend",
                        "2ec567de4490f9d472a6a6a40281eff13e5732a9"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_2_dec_inf o1 o2).",
                        "VernacExtend",
                        "7682baf8a4bbff99d50bdda519b1ba70e3c47898"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_2.",
                        "VernacExtend",
                        "b4e80bee310800c8c137b8b864721e5c3244f673"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_9 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "cbbf9d97e58e2bb95455ca931ec68344767f069d"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "apply False_rec.",
                        "VernacExtend",
                        "aa34e83eda8e5f1a34cc23685121a87daef49085"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((-1)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "bb57e82a3d5dfca42ce24ea33da02a42e7427ac9"
                    ]
                },
                {
                    "command": [
                        "discriminate hl.",
                        "VernacExtend",
                        "f643a20865d0dde2f37d19887cfd4265938120b1"
                    ]
                },
                {
                    "command": [
                        "intros H_inside_2'.",
                        "VernacExtend",
                        "4f65b53b2c7b3936fda163236abffb01421ea904"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nR_dL_10 a b c d e f g h (nR xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_2 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "0d3068282c5f924b3105b9445cf9b7dfcc50b98c"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign (a + b) b (a + b + c + d) (b + d) (e + f) f (e + f + g + h) (f + h) xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_2 (a + b)%Z b (a + b + c + d)%Z (b + d)%Z (e + f)%Z f (e + f + g + h)%Z (f + h)%Z xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "fb776840a89826e7099eabdddf5c40e6b660e5c5"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_signok_0' _ _ _ _ _ H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "82ba942058f599dab626c16f3958e19a9e8856b7"
                    ]
                },
                {
                    "command": [
                        "intros H_Qhomographic_sg_denom_nonzero.",
                        "VernacExtend",
                        "7ee186f9a3e15bd36020fb30747a871aa671241b"
                    ]
                },
                {
                    "command": [
                        "set (L3 := Qhomographic_sign (a + b) (c + d) (e + f) (g + h) (nR xs) H_Qhomographic_sg_denom_nonzero) in *.",
                        "VernacExtend",
                        "84df2c330ca924d8672b2dc2167b20dca2d9d189"
                    ]
                },
                {
                    "command": [
                        "set (l1 := fst L3) in *.",
                        "VernacExtend",
                        "53a0156fadda9545b3aad23e6562a9f7571500e5"
                    ]
                },
                {
                    "command": [
                        "set (l2 := fst (snd L3)) in *.",
                        "VernacExtend",
                        "d2ff6d484662d1ffc681d957fae47d75d4f0ffe7"
                    ]
                },
                {
                    "command": [
                        "set (l3 := snd (snd L3)) in *.",
                        "VernacExtend",
                        "a4f4a2a7a6777d6cf8547330f649c7e802134835"
                    ]
                },
                {
                    "command": [
                        "set (na_ := fst l2) in *.",
                        "VernacExtend",
                        "4cc5c8cdb69c666a5ed03e05d9c5d3bf6b3508c8"
                    ]
                },
                {
                    "command": [
                        "set (nb_ := fst (snd l2)) in *.",
                        "VernacExtend",
                        "c689e91162d844443766f43d357817dbbb7e3d29"
                    ]
                },
                {
                    "command": [
                        "set (nc_ := fst (snd (snd l2))) in *.",
                        "VernacExtend",
                        "77cd624092e8a297c0e31fd1f7dd984499cdbe5d"
                    ]
                },
                {
                    "command": [
                        "set (nd_ := snd (snd (snd l2))) in *.",
                        "VernacExtend",
                        "3b6670693e7eae913c0e386dd06bc54541698adc"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_One a b c d e f g h (nR xs) One H_Qquadratic_sg_denom_nonzero l1 na_ nb_ nc_ nd_ l3 H_Qhomographic_sg_denom_nonzero); intros H1.",
                        "VernacExtend",
                        "3aaded4fd9b7cf246242f869d542f1391f8cbda2"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (l1, (0%Z, (na_, (0%Z, nb_)), (0%Z, (nc_, (0%Z, nd_))), (l3, One)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) One H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; assumption | apply H1; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity ] | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end; repeat rewrite ZERO_left; repeat rewrite ZERO_right ].",
                        "VernacExtend",
                        "14783e2955b8ad7968a77c2e9b744390156af9b8"
                    ]
                },
                {
                    "command": [
                        "assert (H_sg_unfolded : Qhomographic_sign (a + b) (c + d) (e + f) (g + h) (nR xs) H_Qhomographic_sg_denom_nonzero = (1%Z, (na_, (nb_, (nc_, nd_)), l3))).",
                        "VernacExtend",
                        "d907c4bd12d46228d7ac22d3cde845803a5c9a97"
                    ]
                },
                {
                    "command": [
                        "rewrite hl; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity.",
                        "VernacExtend",
                        "92853c2a640fbbf7420687b2cc9dd9d0f8561009"
                    ]
                },
                {
                    "command": [
                        "generalize (sg_pos_2 (a + b) (c + d) (e + f) (g + h) (nR xs) H_Qhomographic_sg_denom_nonzero na_ nb_ nc_ nd_ l3 H_sg_unfolded).",
                        "VernacExtend",
                        "81fd1c93fced2c99913533dfe1c5d440b073e462"
                    ]
                },
                {
                    "command": [
                        "intros [[(H_a, (H_b, (H_c, H_d)))| (H_a, (H_b, (H_c, H_d)))]| H_l3]; [ case l3; left; [ right; repeat split; assumption || discriminate | right; repeat split; assumption || discriminate | left; right; repeat split ] | case l3; [ right; repeat split; assumption || discriminate | right; repeat split; assumption || discriminate | left; left; right; repeat split ] | left; left; right; repeat split; assumption ].",
                        "VernacExtend",
                        "cb3ad86028a07cb387904a1b8cf99c0e91f24b08"
                    ]
                },
                {
                    "command": [
                        "destruct p2 as [ys| ys| ].",
                        "VernacExtend",
                        "a6e067f2aa8567de952ce8b70a91f70f20efb13b"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf b c d).",
                        "VernacExtend",
                        "d92f13936a5038bdd06bb3160509a88b0ac07217"
                    ]
                },
                {
                    "command": [
                        "intros (Hb, (Hc, Hd)).",
                        "VernacExtend",
                        "b24025fbd18098487c0ee7d5d35744a09e154027"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf f g h).",
                        "VernacExtend",
                        "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
                    ]
                },
                {
                    "command": [
                        "intros (Hf, (Hg, Hh)).",
                        "VernacExtend",
                        "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_1 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "2ca6efa1266480d8bf81b38b038fe6537f4e5150"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((Z.sgn a * Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "cb040f8d3f6b39a0ce3c95f4135ce5d3ba57ae61"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; rewrite <- Zsgn_15 in hl.",
                        "VernacExtend",
                        "ee2e09bae78c5f1f2dd8bb9f34710881f57b1e50"
                    ]
                },
                {
                    "command": [
                        "case (Zsgn_16 _ _ (sym_eq hl)); intros (Ha, He); [ left | right ]; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | apply Zlt_le_weak ]; assumption.",
                        "VernacExtend",
                        "b6f3a4286031b29f7b2c594d8224a66b11d3e51d"
                    ]
                },
                {
                    "command": [
                        "intros H_fgh'.",
                        "VernacExtend",
                        "124b0a9b173a01c6065faec21fdb398ef30ba9a8"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec 2 o2).",
                        "VernacExtend",
                        "b747e4f9f3180cb6af258b8fd95b147f67418f3e"
                    ]
                },
                {
                    "command": [
                        "intro Ho2.",
                        "VernacExtend",
                        "8afe0ad03385c58284ff089700a6e48319e36a6a"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_2 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "2416253b968fdf37c51579e985ced59ed75f277d"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn a, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "4c5c6306e821b80c00e616d45012b1d3aa7cca6f"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; left; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o2 in Ho2; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "831ea598321daef42587f3e9e47557624f3cc91d"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec o2 (-2)).",
                        "VernacExtend",
                        "a154a84530155d303eb1a188f0e73f1de92f2b11"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_3 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "44518512dfe88ca88898fe96b8fbdc54e72141e7"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn a)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "1478f4a6d28773e4dd0ccd88c5c7f59c43e654a8"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; right; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o2 in Ho2'; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "c5217cdbbbe71f71276289f5435b759bc39e55e4"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_dL_nR_4 a b c d e f g h (dL xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_3 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "f64fa610989268eca45d7884cde62e0d3b3c9532"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign (a + c) (a + b + c + d) c (c + d) (e + g) (e + f + g + h) g (g + h) xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_2 (a + c)%Z (a + b + c + d)%Z c (c + d)%Z (e + g)%Z (e + f + g + h)%Z g (g + h)%Z xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "3fe28ab525f60637e5d17430a5d78b87164396ab"
                    ]
                },
                {
                    "command": [
                        "intros Hbcd'.",
                        "VernacExtend",
                        "bd2fb66b4924206bddf393e42dfb7edeabbc1385"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf f g h).",
                        "VernacExtend",
                        "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
                    ]
                },
                {
                    "command": [
                        "intros (Hf, (Hg, Hh)).",
                        "VernacExtend",
                        "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec 2 o1).",
                        "VernacExtend",
                        "f48e06a1765d3040d72a57b372312e148bc25a46"
                    ]
                },
                {
                    "command": [
                        "intro Ho1.",
                        "VernacExtend",
                        "b196b7b9d63229b2fe13418ac27d2ca01fece5a9"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_5 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "73d28ffa851b17a895eb8de63759600c1cc7d195"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn e, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "0ad880c605fe300047e8217a5e3b992be3a63357"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; left; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o1 in Ho1; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "ee89cbabd8cad9ed668340502dd4e12dadf048a4"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec o1 (-2)).",
                        "VernacExtend",
                        "cb39341bd62af76a97b55e65c43aac4d8e418897"
                    ]
                },
                {
                    "command": [
                        "intros Ho1' Ho1.",
                        "VernacExtend",
                        "cdebf24875bdbd6a495ba72a8e2502e67dd822e8"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_6 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "748719d32744224930bba0e4a91f0658594f536b"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "b72345898851be7f8b0e04960895bb4f2b5679fa"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; right; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o1 in Ho1'; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "3adccd55dc5b618fe84410bded5e2e1097d09700"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_dL_nR_7 a b c d e f g h (dL xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_3 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "05c7636b2a0eeb81bdae4b57d3f3af8b5289c4db"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign (a + c) (a + b + c + d) c (c + d) (e + g) (e + f + g + h) g (g + h) xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_2 (a + c)%Z (a + b + c + d)%Z c (c + d)%Z (e + g)%Z (e + f + g + h)%Z g (g + h)%Z xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "3fe28ab525f60637e5d17430a5d78b87164396ab"
                    ]
                },
                {
                    "command": [
                        "intro Hfgh'.",
                        "VernacExtend",
                        "345b6667cec5f818822048df8b93ef410d8ff631"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_1_dec_inf o1 o2).",
                        "VernacExtend",
                        "d295c561ef561fb8b649e6303ce92c0f0681eb8f"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_1.",
                        "VernacExtend",
                        "068d44eb2eb58699356ab84ee948b8147fe0eef5"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_8 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "17b14b6ad27d5d97fa40021b5b1bd5759a6a8583"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (1%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "c6ca014c9c9124ee6fb48e320d1b04897ff2a77f"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; case (inside_square_1_inf _ _ H_inside_1); intros (Ho1, Ho2); [ left | right ]; repeat split; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o1 in Ho1; unfold o2 in Ho2; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "a637ed991bbc6cf6cb8e58aa20353e208c724efb"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_1'.",
                        "VernacExtend",
                        "2ec567de4490f9d472a6a6a40281eff13e5732a9"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_2_dec_inf o1 o2).",
                        "VernacExtend",
                        "7682baf8a4bbff99d50bdda519b1ba70e3c47898"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_2.",
                        "VernacExtend",
                        "b4e80bee310800c8c137b8b864721e5c3244f673"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_9 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "1b15c9a0b17bf8e3bd9ea57e3449cd64dd182336"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "apply False_rec.",
                        "VernacExtend",
                        "aa34e83eda8e5f1a34cc23685121a87daef49085"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((-1)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "56231c44212e5ee8a73e4ff72dae21eeaf8acf51"
                    ]
                },
                {
                    "command": [
                        "discriminate hl.",
                        "VernacExtend",
                        "f643a20865d0dde2f37d19887cfd4265938120b1"
                    ]
                },
                {
                    "command": [
                        "intros H_inside_2'.",
                        "VernacExtend",
                        "4f65b53b2c7b3936fda163236abffb01421ea904"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_dL_nR_10 a b c d e f g h (dL xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_3 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "8fc05207a6b41ec0c59af37fe14d660de73831e9"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign (a + c) (a + b + c + d) c (c + d) (e + g) (e + f + g + h) g (g + h) xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_2 (a + c)%Z (a + b + c + d)%Z c (c + d)%Z (e + g)%Z (e + f + g + h)%Z g (g + h)%Z xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "3fe28ab525f60637e5d17430a5d78b87164396ab"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf b c d).",
                        "VernacExtend",
                        "d92f13936a5038bdd06bb3160509a88b0ac07217"
                    ]
                },
                {
                    "command": [
                        "intros (Hb, (Hc, Hd)).",
                        "VernacExtend",
                        "b24025fbd18098487c0ee7d5d35744a09e154027"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf f g h).",
                        "VernacExtend",
                        "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
                    ]
                },
                {
                    "command": [
                        "intros (Hf, (Hg, Hh)).",
                        "VernacExtend",
                        "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_1 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "e97d2062f29099b8e633a9b753a2b33784c76b0b"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((Z.sgn a * Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "4609e55137027790181f4ab597564d917c1e01e8"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; rewrite <- Zsgn_15 in hl.",
                        "VernacExtend",
                        "ee2e09bae78c5f1f2dd8bb9f34710881f57b1e50"
                    ]
                },
                {
                    "command": [
                        "case (Zsgn_16 _ _ (sym_eq hl)); intros (Ha, He); [ left | right ]; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | apply Zlt_le_weak ]; assumption.",
                        "VernacExtend",
                        "b6f3a4286031b29f7b2c594d8224a66b11d3e51d"
                    ]
                },
                {
                    "command": [
                        "intros H_fgh'.",
                        "VernacExtend",
                        "124b0a9b173a01c6065faec21fdb398ef30ba9a8"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec 2 o2).",
                        "VernacExtend",
                        "b747e4f9f3180cb6af258b8fd95b147f67418f3e"
                    ]
                },
                {
                    "command": [
                        "intro Ho2.",
                        "VernacExtend",
                        "8afe0ad03385c58284ff089700a6e48319e36a6a"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_2 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "9d11e8d3732b1a9fe564baeaad7926fc1537b0b6"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn a, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "5b63d9d5dfee7282e910c421360e841e32775d3d"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; left; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o2 in Ho2; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "831ea598321daef42587f3e9e47557624f3cc91d"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec o2 (-2)).",
                        "VernacExtend",
                        "a154a84530155d303eb1a188f0e73f1de92f2b11"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_3 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "45bd69bc49004ab873c9fccf5ccb3a932ddbf353"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn a)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "889020acff041b16078b24e616581ff447a863fc"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; right; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o2 in Ho2'; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "c5217cdbbbe71f71276289f5435b759bc39e55e4"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_dL_dL_4 a b c d e f g h (dL xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_4 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "60709f15591f536d32427cc90af2373272b0090d"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign (a + b + c + d) (b + d) (c + d) d (e + f + g + h) (f + h) (g + h) h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_2 (a + b + c + d)%Z (b + d)%Z (c + d)%Z d (e + f + g + h)%Z (f + h)%Z (g + h)%Z h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "e034b4fb49a071fecbbc5e8451b54f7bf29904b2"
                    ]
                },
                {
                    "command": [
                        "intros Hbcd'.",
                        "VernacExtend",
                        "bd2fb66b4924206bddf393e42dfb7edeabbc1385"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf f g h).",
                        "VernacExtend",
                        "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
                    ]
                },
                {
                    "command": [
                        "intros (Hf, (Hg, Hh)).",
                        "VernacExtend",
                        "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec 2 o1).",
                        "VernacExtend",
                        "f48e06a1765d3040d72a57b372312e148bc25a46"
                    ]
                },
                {
                    "command": [
                        "intro Ho1.",
                        "VernacExtend",
                        "b196b7b9d63229b2fe13418ac27d2ca01fece5a9"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_5 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "e60e2a27dd0430030b87f0c6f1021aec69cdd88b"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn e, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "b407c61f1a18e40fafd929766a13d1e5c45ac6c1"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; left; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o1 in Ho1; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "ee89cbabd8cad9ed668340502dd4e12dadf048a4"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec o1 (-2)).",
                        "VernacExtend",
                        "cb39341bd62af76a97b55e65c43aac4d8e418897"
                    ]
                },
                {
                    "command": [
                        "intros Ho1' Ho1.",
                        "VernacExtend",
                        "cdebf24875bdbd6a495ba72a8e2502e67dd822e8"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_6 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "7b0e4612a8dda195acef9dc367bef08bf8fcb312"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "844a43edc5ec9776aa2bee077d9997ca4ad12fc4"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; right; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o1 in Ho1'; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "3adccd55dc5b618fe84410bded5e2e1097d09700"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_dL_dL_7 a b c d e f g h (dL xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_4 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "51d4862aa5abb3dd93094f58d26b4d40909e48b4"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign (a + b + c + d) (b + d) (c + d) d (e + f + g + h) (f + h) (g + h) h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_2 (a + b + c + d)%Z (b + d)%Z (c + d)%Z d (e + f + g + h)%Z (f + h)%Z (g + h)%Z h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "e034b4fb49a071fecbbc5e8451b54f7bf29904b2"
                    ]
                },
                {
                    "command": [
                        "intro Hfgh'.",
                        "VernacExtend",
                        "345b6667cec5f818822048df8b93ef410d8ff631"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_1_dec_inf o1 o2).",
                        "VernacExtend",
                        "d295c561ef561fb8b649e6303ce92c0f0681eb8f"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_1.",
                        "VernacExtend",
                        "068d44eb2eb58699356ab84ee948b8147fe0eef5"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_8 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "084252fe935af0a92ac7feca5fe44fa253615116"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (1%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "6ae4ee87ebc2a8d8a9f1c3b49745c38ea279223f"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; case (inside_square_1_inf _ _ H_inside_1); intros (Ho1, Ho2); [ left | right ]; repeat split; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9 | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10; apply Z.opp_inj end; apply sym_eq; assumption | unfold o1 in Ho1; unfold o2 in Ho2; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "a637ed991bbc6cf6cb8e58aa20353e208c724efb"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_1'.",
                        "VernacExtend",
                        "2ec567de4490f9d472a6a6a40281eff13e5732a9"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_2_dec_inf o1 o2).",
                        "VernacExtend",
                        "7682baf8a4bbff99d50bdda519b1ba70e3c47898"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_2.",
                        "VernacExtend",
                        "b4e80bee310800c8c137b8b864721e5c3244f673"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_9 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "01ac32711281d55d5e8790d70a8a118de564f06e"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "apply False_rec.",
                        "VernacExtend",
                        "aa34e83eda8e5f1a34cc23685121a87daef49085"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((-1)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "e78ae26937e37cea69858b520450a8e12dd3b653"
                    ]
                },
                {
                    "command": [
                        "discriminate hl.",
                        "VernacExtend",
                        "f643a20865d0dde2f37d19887cfd4265938120b1"
                    ]
                },
                {
                    "command": [
                        "intros H_inside_2'.",
                        "VernacExtend",
                        "4f65b53b2c7b3936fda163236abffb01421ea904"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_dL_dL_10 a b c d e f g h (dL xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_4 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "92aabbab4ba412dd08be60745aa35f49b983e5c9"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign (a + b + c + d) (b + d) (c + d) d (e + f + g + h) (f + h) (g + h) h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_pos_2 (a + b + c + d)%Z (b + d)%Z (c + d)%Z d (e + f + g + h)%Z (f + h)%Z (g + h)%Z h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "e034b4fb49a071fecbbc5e8451b54f7bf29904b2"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_signok_0' _ _ _ _ _ H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "82ba942058f599dab626c16f3958e19a9e8856b7"
                    ]
                },
                {
                    "command": [
                        "intros H_Qhomographic_sg_denom_nonzero.",
                        "VernacExtend",
                        "7ee186f9a3e15bd36020fb30747a871aa671241b"
                    ]
                },
                {
                    "command": [
                        "set (L3 := Qhomographic_sign (a + b) (c + d) (e + f) (g + h) (dL xs) H_Qhomographic_sg_denom_nonzero) in *.",
                        "VernacExtend",
                        "bbcac23fd22aa8b7c66b46a28b66bc764c9d21df"
                    ]
                },
                {
                    "command": [
                        "set (l1 := fst L3) in *.",
                        "VernacExtend",
                        "53a0156fadda9545b3aad23e6562a9f7571500e5"
                    ]
                },
                {
                    "command": [
                        "set (l2 := fst (snd L3)) in *.",
                        "VernacExtend",
                        "d2ff6d484662d1ffc681d957fae47d75d4f0ffe7"
                    ]
                },
                {
                    "command": [
                        "set (l3 := snd (snd L3)) in *.",
                        "VernacExtend",
                        "a4f4a2a7a6777d6cf8547330f649c7e802134835"
                    ]
                },
                {
                    "command": [
                        "set (na_ := fst l2) in *.",
                        "VernacExtend",
                        "4cc5c8cdb69c666a5ed03e05d9c5d3bf6b3508c8"
                    ]
                },
                {
                    "command": [
                        "set (nb_ := fst (snd l2)) in *.",
                        "VernacExtend",
                        "c689e91162d844443766f43d357817dbbb7e3d29"
                    ]
                },
                {
                    "command": [
                        "set (nc_ := fst (snd (snd l2))) in *.",
                        "VernacExtend",
                        "77cd624092e8a297c0e31fd1f7dd984499cdbe5d"
                    ]
                },
                {
                    "command": [
                        "set (nd_ := snd (snd (snd l2))) in *.",
                        "VernacExtend",
                        "3b6670693e7eae913c0e386dd06bc54541698adc"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_One a b c d e f g h (dL xs) One H_Qquadratic_sg_denom_nonzero l1 na_ nb_ nc_ nd_ l3 H_Qhomographic_sg_denom_nonzero); intros H1.",
                        "VernacExtend",
                        "729fdcd685e6089ef0bda9bddf52a935a2f85311"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (l1, (0%Z, (na_, (0%Z, nb_)), (0%Z, (nc_, (0%Z, nd_))), (l3, One)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) One H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; assumption | apply H1; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity ] | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end; repeat rewrite ZERO_left; repeat rewrite ZERO_right ].",
                        "VernacExtend",
                        "6113bc677d3cd2bccf6a64d2302ba5e6dd070d2a"
                    ]
                },
                {
                    "command": [
                        "assert (H_sg_unfolded : Qhomographic_sign (a + b) (c + d) (e + f) (g + h) (dL xs) H_Qhomographic_sg_denom_nonzero = (1%Z, (na_, (nb_, (nc_, nd_)), l3))).",
                        "VernacExtend",
                        "5f3aa3f2dc5ec10084141f5c9dbbc486c280e2dd"
                    ]
                },
                {
                    "command": [
                        "rewrite hl; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity.",
                        "VernacExtend",
                        "92853c2a640fbbf7420687b2cc9dd9d0f8561009"
                    ]
                },
                {
                    "command": [
                        "generalize (sg_pos_2 (a + b) (c + d) (e + f) (g + h) (dL xs) H_Qhomographic_sg_denom_nonzero na_ nb_ nc_ nd_ l3 H_sg_unfolded).",
                        "VernacExtend",
                        "0d5236608706bc0e8a31ee108c734ba36c15f84b"
                    ]
                },
                {
                    "command": [
                        "intros [[(H_a, (H_b, (H_c, H_d)))| (H_a, (H_b, (H_c, H_d)))]| H_l3]; [ case l3; left; [ right; repeat split; assumption || discriminate | right; repeat split; assumption || discriminate | left; right; repeat split ] | case l3; [ right; repeat split; assumption || discriminate | right; repeat split; assumption || discriminate | left; left; right; repeat split ] | left; left; right; repeat split; assumption ].",
                        "VernacExtend",
                        "cb3ad86028a07cb387904a1b8cf99c0e91f24b08"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_signok_0 _ _ _ _ _ H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "891278ce1d1d1a595b0c37c3d03fef7ef0e6f7fa"
                    ]
                },
                {
                    "command": [
                        "intros H_Qhomographic_sg_denom_nonzero.",
                        "VernacExtend",
                        "7ee186f9a3e15bd36020fb30747a871aa671241b"
                    ]
                },
                {
                    "command": [
                        "set (L3 := Qhomographic_sign (a + c) (b + d) (e + g) (f + h) p2 H_Qhomographic_sg_denom_nonzero) in *.",
                        "VernacExtend",
                        "a3acce1fe502fff654a4ab9f8e3264e43d54debe"
                    ]
                },
                {
                    "command": [
                        "set (l1 := fst L3) in *.",
                        "VernacExtend",
                        "53a0156fadda9545b3aad23e6562a9f7571500e5"
                    ]
                },
                {
                    "command": [
                        "set (l2 := fst (snd L3)) in *.",
                        "VernacExtend",
                        "d2ff6d484662d1ffc681d957fae47d75d4f0ffe7"
                    ]
                },
                {
                    "command": [
                        "set (l3 := snd (snd L3)) in *.",
                        "VernacExtend",
                        "a4f4a2a7a6777d6cf8547330f649c7e802134835"
                    ]
                },
                {
                    "command": [
                        "set (na_ := fst l2) in *.",
                        "VernacExtend",
                        "4cc5c8cdb69c666a5ed03e05d9c5d3bf6b3508c8"
                    ]
                },
                {
                    "command": [
                        "set (nb_ := fst (snd l2)) in *.",
                        "VernacExtend",
                        "c689e91162d844443766f43d357817dbbb7e3d29"
                    ]
                },
                {
                    "command": [
                        "set (nc_ := fst (snd (snd l2))) in *.",
                        "VernacExtend",
                        "77cd624092e8a297c0e31fd1f7dd984499cdbe5d"
                    ]
                },
                {
                    "command": [
                        "set (nd_ := snd (snd (snd l2))) in *.",
                        "VernacExtend",
                        "3b6670693e7eae913c0e386dd06bc54541698adc"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_One_y a b c d e f g h One p2 H_Qquadratic_sg_denom_nonzero l1 na_ nb_ nc_ nd_ l3 H_Qhomographic_sg_denom_nonzero); intros H1.",
                        "VernacExtend",
                        "0f9e0cc2712b63c207db1a772be8487cca639a7f"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : (1%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (l1, (0%Z, (0%Z, (na_, nb_)), (0%Z, (0%Z, (nc_, nd_))), (One, l3)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h One p2 H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; assumption | apply H1; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity ] | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end; repeat rewrite ZERO_left; repeat rewrite ZERO_right ].",
                        "VernacExtend",
                        "b2ca9cac48613c0fcb33de1cf4d7b6d97bfec50c"
                    ]
                },
                {
                    "command": [
                        "assert (H_sg_unfolded : Qhomographic_sign (a + c) (b + d) (e + g) (f + h) p2 H_Qhomographic_sg_denom_nonzero = (1%Z, (na_, (nb_, (nc_, nd_)), l3))).",
                        "VernacExtend",
                        "2d3bd57f9995d0f05a5131ab12186f6fed4fa883"
                    ]
                },
                {
                    "command": [
                        "rewrite hl; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity.",
                        "VernacExtend",
                        "92853c2a640fbbf7420687b2cc9dd9d0f8561009"
                    ]
                },
                {
                    "command": [
                        "generalize (sg_pos_2 (a + c) (b + d) (e + g) (f + h) p2 H_Qhomographic_sg_denom_nonzero na_ nb_ nc_ nd_ l3 H_sg_unfolded).",
                        "VernacExtend",
                        "67f5fdcd303af4fd0b54f620f72f7c42a2758ebb"
                    ]
                },
                {
                    "command": [
                        "intros [[(H_a, (H_b, (H_c, H_d)))| (H_a, (H_b, (H_c, H_d)))]| H_l3]; left; left; [ left; left; right | left; right | right ]; repeat split; assumption.",
                        "VernacExtend",
                        "48b2c5d6d338c6db1bdc78b94b03fee63545fa97"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qquadratic_sign_neg_1",
            "line_nb": 665,
            "steps": [
                {
                    "command": [
                        "fix Qquadratic_sign_neg_1 9.",
                        "VernacExtend",
                        "684c3f722b321e219f6414e418ea1745bdd1cb49"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "set (o1 := outside_square a b c d) in *.",
                        "VernacExtend",
                        "115a9a38809cb78c24da8e0924729c0e3ba70321"
                    ]
                },
                {
                    "command": [
                        "set (o2 := outside_square e f g h) in *.",
                        "VernacExtend",
                        "3226c4628498a920e7666c26460e51df81dc5ca0"
                    ]
                },
                {
                    "command": [
                        "destruct p1 as [xs| xs| ].",
                        "VernacExtend",
                        "c49c827365e4d09f3f970ea66544c82eb12cd410"
                    ]
                },
                {
                    "command": [
                        "destruct p2 as [ys| ys| ].",
                        "VernacExtend",
                        "a6e067f2aa8567de952ce8b70a91f70f20efb13b"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf b c d).",
                        "VernacExtend",
                        "d92f13936a5038bdd06bb3160509a88b0ac07217"
                    ]
                },
                {
                    "command": [
                        "intros (Hb, (Hc, Hd)).",
                        "VernacExtend",
                        "b24025fbd18098487c0ee7d5d35744a09e154027"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf f g h).",
                        "VernacExtend",
                        "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
                    ]
                },
                {
                    "command": [
                        "intros (Hf, (Hg, Hh)).",
                        "VernacExtend",
                        "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_1 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "7be30785199ecf5ea7f56f20ee28d6c2c1399de1"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((Z.sgn a * Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "c31e9d5f2bd40c63d9b124cc6a6c0ba0f8fd3f99"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Zsgn_15 in hl.",
                        "VernacExtend",
                        "64ba35dcc586c9b63dbf3219dc7171fd2f2f1699"
                    ]
                },
                {
                    "command": [
                        "case (Zsgn_17 _ _ (sym_eq hl)); intros (Ha, He); [ left | right ]; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; assumption.",
                        "VernacExtend",
                        "818834f21942e01dabd14372f0503ecbbc11ccb6"
                    ]
                },
                {
                    "command": [
                        "intros H_fgh'.",
                        "VernacExtend",
                        "124b0a9b173a01c6065faec21fdb398ef30ba9a8"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec 2 o2).",
                        "VernacExtend",
                        "b747e4f9f3180cb6af258b8fd95b147f67418f3e"
                    ]
                },
                {
                    "command": [
                        "intro Ho2.",
                        "VernacExtend",
                        "8afe0ad03385c58284ff089700a6e48319e36a6a"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_2 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "4ec97d0a6eae9c6fed02c0ed7f3a2f9e0ca70720"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn a, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "5e2af73c2948d17574aeea24fa758f280e08ba38"
                    ]
                },
                {
                    "command": [
                        "right; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply Zsgn_10; apply sym_eq | apply outside_square_1 ]; assumption.",
                        "VernacExtend",
                        "f22903677711ada06a614348d2e6f08062b26084"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec o2 (-2)).",
                        "VernacExtend",
                        "a154a84530155d303eb1a188f0e73f1de92f2b11"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_3 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "94c97fbf61793fb95b35d927607ba145bc1e03a5"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn a)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "f16c2114f6327bb8f02f92b5eb53520e77400881"
                    ]
                },
                {
                    "command": [
                        "left; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply Zsgn_9; apply sym_eq; apply Z.opp_inj; assumption | apply outside_square_2; assumption ].",
                        "VernacExtend",
                        "1b5c9f1c16c358a08db0f58aa154bae41981fa4d"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nR_nR_4 a b c d e f g h (nR xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_1 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "f71909b24b264ce20070f11b21911afdcf0c33ea"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign a (a + b) (a + c) (a + b + c + d) e (e + f) (e + g) (e + f + g + h) xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_1 a (a + b)%Z (a + c)%Z (a + b + c + d)%Z e (e + f)%Z (e + g)%Z (e + f + g + h)%Z xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "15e255e318590df091ff5ebe9864460a476c8f97"
                    ]
                },
                {
                    "command": [
                        "intros Hbcd'.",
                        "VernacExtend",
                        "bd2fb66b4924206bddf393e42dfb7edeabbc1385"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf f g h).",
                        "VernacExtend",
                        "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
                    ]
                },
                {
                    "command": [
                        "intros (Hf, (Hg, Hh)).",
                        "VernacExtend",
                        "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec 2 o1).",
                        "VernacExtend",
                        "f48e06a1765d3040d72a57b372312e148bc25a46"
                    ]
                },
                {
                    "command": [
                        "intro Ho1.",
                        "VernacExtend",
                        "b196b7b9d63229b2fe13418ac27d2ca01fece5a9"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_5 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "b7bfe4c6defebe115fd2accc4b2946f79db5889b"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn e, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "490a519bb00bc6328b331c84ceeb5c7f9df79113"
                    ]
                },
                {
                    "command": [
                        "left; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply outside_square_1 | apply Zsgn_10; apply sym_eq ]; assumption.",
                        "VernacExtend",
                        "95e6c909c31f5d470c8e54099307e10faf90f799"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec o1 (-2)).",
                        "VernacExtend",
                        "cb39341bd62af76a97b55e65c43aac4d8e418897"
                    ]
                },
                {
                    "command": [
                        "intros Ho1' Ho1.",
                        "VernacExtend",
                        "cdebf24875bdbd6a495ba72a8e2502e67dd822e8"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_6 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "f483a1b16f77861b6ce8802851e84359261f67bd"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "1d4d643d47da11e23bda0a2f4a39e0468419ef4a"
                    ]
                },
                {
                    "command": [
                        "right; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply outside_square_2 | apply Zsgn_9; apply sym_eq; apply Z.opp_inj ]; assumption.",
                        "VernacExtend",
                        "bd9c21731af295ba50f73318dc2d42387bf56c88"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nR_nR_7 a b c d e f g h (nR xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_1 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "810bc89051fc8ecbfd9f846e25cd1052a11c500a"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign a (a + b) (a + c) (a + b + c + d) e (e + f) (e + g) (e + f + g + h) xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_1 a (a + b)%Z (a + c)%Z (a + b + c + d)%Z e (e + f)%Z (e + g)%Z (e + f + g + h)%Z xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "15e255e318590df091ff5ebe9864460a476c8f97"
                    ]
                },
                {
                    "command": [
                        "intro Hfgh'.",
                        "VernacExtend",
                        "345b6667cec5f818822048df8b93ef410d8ff631"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_1_dec_inf o1 o2).",
                        "VernacExtend",
                        "d295c561ef561fb8b649e6303ce92c0f0681eb8f"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_1.",
                        "VernacExtend",
                        "068d44eb2eb58699356ab84ee948b8147fe0eef5"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_8 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "17c4bef80f8937e9f81b326e04069c70ccf1b8df"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (1%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "0650642759619566070d9194ab5675fe6ffbb50a"
                    ]
                },
                {
                    "command": [
                        "discriminate hl.",
                        "VernacExtend",
                        "f643a20865d0dde2f37d19887cfd4265938120b1"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_1'.",
                        "VernacExtend",
                        "2ec567de4490f9d472a6a6a40281eff13e5732a9"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_2_dec_inf o1 o2).",
                        "VernacExtend",
                        "7682baf8a4bbff99d50bdda519b1ba70e3c47898"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_2.",
                        "VernacExtend",
                        "b4e80bee310800c8c137b8b864721e5c3244f673"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_9 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "152690edd4ff3f485e8452c0c2c329c423aa3337"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((-1)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "36274c2cd325ad04f710525b70f6632215eaaf32"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_2_inf _ _ H_inside_2); intros (Ho1, Ho2); [ left; split; [ apply outside_square_1 | apply outside_square_2 ] | right; split; [ apply outside_square_2 | apply outside_square_1 ] ]; assumption.",
                        "VernacExtend",
                        "ee52f16adb9d832c73b20fbfeb18e2425dd33858"
                    ]
                },
                {
                    "command": [
                        "intros H_inside_2'.",
                        "VernacExtend",
                        "4f65b53b2c7b3936fda163236abffb01421ea904"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nR_nR_10 a b c d e f g h (nR xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_1 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "ebf1110cd2276609eca3149433715718142a96e8"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign a (a + b) (a + c) (a + b + c + d) e (e + f) (e + g) (e + f + g + h) xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_1 a (a + b)%Z (a + c)%Z (a + b + c + d)%Z e (e + f)%Z (e + g)%Z (e + f + g + h)%Z xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "15e255e318590df091ff5ebe9864460a476c8f97"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf b c d).",
                        "VernacExtend",
                        "d92f13936a5038bdd06bb3160509a88b0ac07217"
                    ]
                },
                {
                    "command": [
                        "intros (Hb, (Hc, Hd)).",
                        "VernacExtend",
                        "b24025fbd18098487c0ee7d5d35744a09e154027"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf f g h).",
                        "VernacExtend",
                        "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
                    ]
                },
                {
                    "command": [
                        "intros (Hf, (Hg, Hh)).",
                        "VernacExtend",
                        "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_1 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "0b3a7cf1aee6c21cac9c8f1a7131131c9cf68287"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((Z.sgn a * Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "f684fc76c06fd7949c8315d651495f73c3b3b422"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Zsgn_15 in hl.",
                        "VernacExtend",
                        "64ba35dcc586c9b63dbf3219dc7171fd2f2f1699"
                    ]
                },
                {
                    "command": [
                        "case (Zsgn_17 _ _ (sym_eq hl)); intros (Ha, He); [ left | right ]; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; assumption.",
                        "VernacExtend",
                        "818834f21942e01dabd14372f0503ecbbc11ccb6"
                    ]
                },
                {
                    "command": [
                        "intros H_fgh'.",
                        "VernacExtend",
                        "124b0a9b173a01c6065faec21fdb398ef30ba9a8"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec 2 o2).",
                        "VernacExtend",
                        "b747e4f9f3180cb6af258b8fd95b147f67418f3e"
                    ]
                },
                {
                    "command": [
                        "intro Ho2.",
                        "VernacExtend",
                        "8afe0ad03385c58284ff089700a6e48319e36a6a"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_2 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "8db38400c71755cb43bf15e4e55b71fddecf8c60"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn a, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "cf68fc857997060d9ce1a200a04131601c0ef720"
                    ]
                },
                {
                    "command": [
                        "right; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply Zsgn_10; apply sym_eq; assumption | apply outside_square_1; assumption ].",
                        "VernacExtend",
                        "dc679137e224a113435622d574415b0ed8df7f74"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec o2 (-2)).",
                        "VernacExtend",
                        "a154a84530155d303eb1a188f0e73f1de92f2b11"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_3 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "0a90e6d9978b9a2224d75e7522f5bb5ecb2ce459"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn a)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "7df58376bdfc9159286c89b9d8ab24ebe5b2a078"
                    ]
                },
                {
                    "command": [
                        "left; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply Zsgn_9; apply sym_eq; apply Z.opp_inj; assumption | apply outside_square_2; assumption ].",
                        "VernacExtend",
                        "1b5c9f1c16c358a08db0f58aa154bae41981fa4d"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nR_dL_4 a b c d e f g h (nR xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_2 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "e338eb26767fc3684e8a97123c68697052d25a34"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign (a + b) b (a + b + c + d) (b + d) (e + f) f (e + f + g + h) (f + h) xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_1 (a + b)%Z b (a + b + c + d)%Z (b + d)%Z (e + f)%Z f (e + f + g + h)%Z (f + h)%Z xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "2e8eb7ec51d337dd8b21d3b431a69bef7db2ccf7"
                    ]
                },
                {
                    "command": [
                        "intros Hbcd'.",
                        "VernacExtend",
                        "bd2fb66b4924206bddf393e42dfb7edeabbc1385"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf f g h).",
                        "VernacExtend",
                        "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
                    ]
                },
                {
                    "command": [
                        "intros (Hf, (Hg, Hh)).",
                        "VernacExtend",
                        "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec 2 o1).",
                        "VernacExtend",
                        "f48e06a1765d3040d72a57b372312e148bc25a46"
                    ]
                },
                {
                    "command": [
                        "intro Ho1.",
                        "VernacExtend",
                        "b196b7b9d63229b2fe13418ac27d2ca01fece5a9"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_5 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "60dee11bf970fa431bc509100b556cfda9cd4016"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn e, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "af1766f26a05beac7fa4fe116f6290749416f336"
                    ]
                },
                {
                    "command": [
                        "left; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply outside_square_1 | apply Zsgn_10; apply sym_eq ]; assumption.",
                        "VernacExtend",
                        "95e6c909c31f5d470c8e54099307e10faf90f799"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec o1 (-2)).",
                        "VernacExtend",
                        "cb39341bd62af76a97b55e65c43aac4d8e418897"
                    ]
                },
                {
                    "command": [
                        "intros Ho1' Ho1.",
                        "VernacExtend",
                        "cdebf24875bdbd6a495ba72a8e2502e67dd822e8"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_6 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "73cd66244c556704a4acb72cdfd1263b52028628"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "d90555c2d094ffb9f1a95cae86df0c7fb0cfc199"
                    ]
                },
                {
                    "command": [
                        "right; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply outside_square_2 | apply Zsgn_9; apply sym_eq; apply Z.opp_inj ]; assumption.",
                        "VernacExtend",
                        "bd9c21731af295ba50f73318dc2d42387bf56c88"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nR_dL_7 a b c d e f g h (nR xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_2 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "aece866d71f9f6b70c44ff6035c02e2759b10435"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign (a + b) b (a + b + c + d) (b + d) (e + f) f (e + f + g + h) (f + h) xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_1 (a + b)%Z b (a + b + c + d)%Z (b + d)%Z (e + f)%Z f (e + f + g + h)%Z (f + h)%Z xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "2e8eb7ec51d337dd8b21d3b431a69bef7db2ccf7"
                    ]
                },
                {
                    "command": [
                        "intro Hfgh'.",
                        "VernacExtend",
                        "345b6667cec5f818822048df8b93ef410d8ff631"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_1_dec_inf o1 o2).",
                        "VernacExtend",
                        "d295c561ef561fb8b649e6303ce92c0f0681eb8f"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_1.",
                        "VernacExtend",
                        "068d44eb2eb58699356ab84ee948b8147fe0eef5"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_8 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "897d1753e26f302c001afae6ff16a94868186d2e"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (1%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "745003fdb5ed8ab204e0f47eaf496a7b2cef2e43"
                    ]
                },
                {
                    "command": [
                        "discriminate hl.",
                        "VernacExtend",
                        "f643a20865d0dde2f37d19887cfd4265938120b1"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_1'.",
                        "VernacExtend",
                        "2ec567de4490f9d472a6a6a40281eff13e5732a9"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_2_dec_inf o1 o2).",
                        "VernacExtend",
                        "7682baf8a4bbff99d50bdda519b1ba70e3c47898"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_2.",
                        "VernacExtend",
                        "b4e80bee310800c8c137b8b864721e5c3244f673"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_9 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "cbbf9d97e58e2bb95455ca931ec68344767f069d"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((-1)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "3ecad056d63754357dbca38199ec82d931a59995"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_2_inf _ _ H_inside_2); intros (Ho1, Ho2); [ left; split; [ apply outside_square_1 | apply outside_square_2 ] | right; split; [ apply outside_square_2 | apply outside_square_1 ] ]; assumption.",
                        "VernacExtend",
                        "ee52f16adb9d832c73b20fbfeb18e2425dd33858"
                    ]
                },
                {
                    "command": [
                        "intros H_inside_2'.",
                        "VernacExtend",
                        "4f65b53b2c7b3936fda163236abffb01421ea904"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nR_dL_10 a b c d e f g h (nR xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_2 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "0d3068282c5f924b3105b9445cf9b7dfcc50b98c"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign (a + b) b (a + b + c + d) (b + d) (e + f) f (e + f + g + h) (f + h) xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_1 (a + b)%Z b (a + b + c + d)%Z (b + d)%Z (e + f)%Z f (e + f + g + h)%Z (f + h)%Z xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "2e8eb7ec51d337dd8b21d3b431a69bef7db2ccf7"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_signok_0' _ _ _ _ _ H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "82ba942058f599dab626c16f3958e19a9e8856b7"
                    ]
                },
                {
                    "command": [
                        "intros H_Qhomographic_sg_denom_nonzero.",
                        "VernacExtend",
                        "7ee186f9a3e15bd36020fb30747a871aa671241b"
                    ]
                },
                {
                    "command": [
                        "set (L3 := Qhomographic_sign (a + b) (c + d) (e + f) (g + h) (nR xs) H_Qhomographic_sg_denom_nonzero) in *.",
                        "VernacExtend",
                        "84df2c330ca924d8672b2dc2167b20dca2d9d189"
                    ]
                },
                {
                    "command": [
                        "set (l1 := fst L3) in *.",
                        "VernacExtend",
                        "53a0156fadda9545b3aad23e6562a9f7571500e5"
                    ]
                },
                {
                    "command": [
                        "set (l2 := fst (snd L3)) in *.",
                        "VernacExtend",
                        "d2ff6d484662d1ffc681d957fae47d75d4f0ffe7"
                    ]
                },
                {
                    "command": [
                        "set (l3 := snd (snd L3)) in *.",
                        "VernacExtend",
                        "a4f4a2a7a6777d6cf8547330f649c7e802134835"
                    ]
                },
                {
                    "command": [
                        "set (na_ := fst l2) in *.",
                        "VernacExtend",
                        "4cc5c8cdb69c666a5ed03e05d9c5d3bf6b3508c8"
                    ]
                },
                {
                    "command": [
                        "set (nb_ := fst (snd l2)) in *.",
                        "VernacExtend",
                        "c689e91162d844443766f43d357817dbbb7e3d29"
                    ]
                },
                {
                    "command": [
                        "set (nc_ := fst (snd (snd l2))) in *.",
                        "VernacExtend",
                        "77cd624092e8a297c0e31fd1f7dd984499cdbe5d"
                    ]
                },
                {
                    "command": [
                        "set (nd_ := snd (snd (snd l2))) in *.",
                        "VernacExtend",
                        "3b6670693e7eae913c0e386dd06bc54541698adc"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_One a b c d e f g h (nR xs) One H_Qquadratic_sg_denom_nonzero l1 na_ nb_ nc_ nd_ l3 H_Qhomographic_sg_denom_nonzero); intros H1.",
                        "VernacExtend",
                        "3aaded4fd9b7cf246242f869d542f1391f8cbda2"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (l1, (0%Z, (na_, (0%Z, nb_)), (0%Z, (nc_, (0%Z, nd_))), (l3, One)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) One H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; assumption | apply H1; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity ] | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end; repeat rewrite ZERO_left; repeat rewrite Zplus_0_r ]; apply (sg_neg_1 (a + b) (c + d) (e + f) (g + h) (nR xs) H_Qhomographic_sg_denom_nonzero na_ nb_ nc_ nd_ l3); rewrite hl; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity.",
                        "VernacExtend",
                        "38d380f1b0c4e7ded71ef24ebb20b18ddf48a3b9"
                    ]
                },
                {
                    "command": [
                        "destruct p2 as [ys| ys| ].",
                        "VernacExtend",
                        "a6e067f2aa8567de952ce8b70a91f70f20efb13b"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf b c d).",
                        "VernacExtend",
                        "d92f13936a5038bdd06bb3160509a88b0ac07217"
                    ]
                },
                {
                    "command": [
                        "intros (Hb, (Hc, Hd)).",
                        "VernacExtend",
                        "b24025fbd18098487c0ee7d5d35744a09e154027"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf f g h).",
                        "VernacExtend",
                        "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
                    ]
                },
                {
                    "command": [
                        "intros (Hf, (Hg, Hh)).",
                        "VernacExtend",
                        "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_1 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "2ca6efa1266480d8bf81b38b038fe6537f4e5150"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((Z.sgn a * Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "b2caf3b27a8370751d9d5866818c1686ef342bfe"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Zsgn_15 in hl.",
                        "VernacExtend",
                        "64ba35dcc586c9b63dbf3219dc7171fd2f2f1699"
                    ]
                },
                {
                    "command": [
                        "case (Zsgn_17 _ _ (sym_eq hl)); intros (Ha, He); [ left | right ]; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; assumption.",
                        "VernacExtend",
                        "818834f21942e01dabd14372f0503ecbbc11ccb6"
                    ]
                },
                {
                    "command": [
                        "intros H_fgh'.",
                        "VernacExtend",
                        "124b0a9b173a01c6065faec21fdb398ef30ba9a8"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec 2 o2).",
                        "VernacExtend",
                        "b747e4f9f3180cb6af258b8fd95b147f67418f3e"
                    ]
                },
                {
                    "command": [
                        "intro Ho2.",
                        "VernacExtend",
                        "8afe0ad03385c58284ff089700a6e48319e36a6a"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_2 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "2416253b968fdf37c51579e985ced59ed75f277d"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn a, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "3303ffe5d34872fd07a59d1d63b50f6ad416ea81"
                    ]
                },
                {
                    "command": [
                        "right; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply Zsgn_10; apply sym_eq | apply outside_square_1 ]; assumption.",
                        "VernacExtend",
                        "f22903677711ada06a614348d2e6f08062b26084"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec o2 (-2)).",
                        "VernacExtend",
                        "a154a84530155d303eb1a188f0e73f1de92f2b11"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_3 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "44518512dfe88ca88898fe96b8fbdc54e72141e7"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn a)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "ddd8eca906ca1ef2ef533394e906249cd5df019b"
                    ]
                },
                {
                    "command": [
                        "left; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply Zsgn_9; apply sym_eq; apply Z.opp_inj; assumption | apply outside_square_2; assumption ].",
                        "VernacExtend",
                        "1b5c9f1c16c358a08db0f58aa154bae41981fa4d"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_dL_nR_4 a b c d e f g h (dL xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_3 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "f64fa610989268eca45d7884cde62e0d3b3c9532"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign (a + c) (a + b + c + d) c (c + d) (e + g) (e + f + g + h) g (g + h) xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_1 (a + c)%Z (a + b + c + d)%Z c (c + d)%Z (e + g)%Z (e + f + g + h)%Z g (g + h)%Z xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "d3cbad78bbe443d388614ffefb42ae027fa0f165"
                    ]
                },
                {
                    "command": [
                        "intros Hbcd'.",
                        "VernacExtend",
                        "bd2fb66b4924206bddf393e42dfb7edeabbc1385"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf f g h).",
                        "VernacExtend",
                        "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
                    ]
                },
                {
                    "command": [
                        "intros (Hf, (Hg, Hh)).",
                        "VernacExtend",
                        "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec 2 o1).",
                        "VernacExtend",
                        "f48e06a1765d3040d72a57b372312e148bc25a46"
                    ]
                },
                {
                    "command": [
                        "intro Ho1.",
                        "VernacExtend",
                        "b196b7b9d63229b2fe13418ac27d2ca01fece5a9"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_5 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "73d28ffa851b17a895eb8de63759600c1cc7d195"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn e, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "84e24f56497aa416fe301a9c10e45bfb364aedbb"
                    ]
                },
                {
                    "command": [
                        "left; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply outside_square_1 | apply Zsgn_10; apply sym_eq ]; assumption.",
                        "VernacExtend",
                        "95e6c909c31f5d470c8e54099307e10faf90f799"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec o1 (-2)).",
                        "VernacExtend",
                        "cb39341bd62af76a97b55e65c43aac4d8e418897"
                    ]
                },
                {
                    "command": [
                        "intros Ho1' Ho1.",
                        "VernacExtend",
                        "cdebf24875bdbd6a495ba72a8e2502e67dd822e8"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_6 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "748719d32744224930bba0e4a91f0658594f536b"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "b3cf2404d57e524217ecac63b285773d60e763b8"
                    ]
                },
                {
                    "command": [
                        "right; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply outside_square_2 | apply Zsgn_9; apply sym_eq; apply Z.opp_inj ]; assumption.",
                        "VernacExtend",
                        "bd9c21731af295ba50f73318dc2d42387bf56c88"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_dL_nR_7 a b c d e f g h (dL xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_3 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "05c7636b2a0eeb81bdae4b57d3f3af8b5289c4db"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign (a + c) (a + b + c + d) c (c + d) (e + g) (e + f + g + h) g (g + h) xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_1 (a + c)%Z (a + b + c + d)%Z c (c + d)%Z (e + g)%Z (e + f + g + h)%Z g (g + h)%Z xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "d3cbad78bbe443d388614ffefb42ae027fa0f165"
                    ]
                },
                {
                    "command": [
                        "intro Hfgh'.",
                        "VernacExtend",
                        "345b6667cec5f818822048df8b93ef410d8ff631"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_1_dec_inf o1 o2).",
                        "VernacExtend",
                        "d295c561ef561fb8b649e6303ce92c0f0681eb8f"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_1.",
                        "VernacExtend",
                        "068d44eb2eb58699356ab84ee948b8147fe0eef5"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_8 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "17b14b6ad27d5d97fa40021b5b1bd5759a6a8583"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (1%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "a03a4135524a9863111f878b70ea6b298155f1ab"
                    ]
                },
                {
                    "command": [
                        "discriminate hl.",
                        "VernacExtend",
                        "f643a20865d0dde2f37d19887cfd4265938120b1"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_1'.",
                        "VernacExtend",
                        "2ec567de4490f9d472a6a6a40281eff13e5732a9"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_2_dec_inf o1 o2).",
                        "VernacExtend",
                        "7682baf8a4bbff99d50bdda519b1ba70e3c47898"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_2.",
                        "VernacExtend",
                        "b4e80bee310800c8c137b8b864721e5c3244f673"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_9 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "1b15c9a0b17bf8e3bd9ea57e3449cd64dd182336"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((-1)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "2ade41f5efeee62f9b50467184181878ce3fe4a6"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_2_inf _ _ H_inside_2); intros (Ho1, Ho2); [ left; split; [ apply outside_square_1 | apply outside_square_2 ] | right; split; [ apply outside_square_2 | apply outside_square_1 ] ]; assumption.",
                        "VernacExtend",
                        "ee52f16adb9d832c73b20fbfeb18e2425dd33858"
                    ]
                },
                {
                    "command": [
                        "intros H_inside_2'.",
                        "VernacExtend",
                        "4f65b53b2c7b3936fda163236abffb01421ea904"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_dL_nR_10 a b c d e f g h (dL xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_3 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "8fc05207a6b41ec0c59af37fe14d660de73831e9"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign (a + c) (a + b + c + d) c (c + d) (e + g) (e + f + g + h) g (g + h) xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_1 (a + c)%Z (a + b + c + d)%Z c (c + d)%Z (e + g)%Z (e + f + g + h)%Z g (g + h)%Z xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "d3cbad78bbe443d388614ffefb42ae027fa0f165"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf b c d).",
                        "VernacExtend",
                        "d92f13936a5038bdd06bb3160509a88b0ac07217"
                    ]
                },
                {
                    "command": [
                        "intros (Hb, (Hc, Hd)).",
                        "VernacExtend",
                        "b24025fbd18098487c0ee7d5d35744a09e154027"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf f g h).",
                        "VernacExtend",
                        "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
                    ]
                },
                {
                    "command": [
                        "intros (Hf, (Hg, Hh)).",
                        "VernacExtend",
                        "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_1 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "e97d2062f29099b8e633a9b753a2b33784c76b0b"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((Z.sgn a * Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "72f7c357d61300294796b20da833e84372ab64bf"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Zsgn_15 in hl.",
                        "VernacExtend",
                        "64ba35dcc586c9b63dbf3219dc7171fd2f2f1699"
                    ]
                },
                {
                    "command": [
                        "case (Zsgn_17 _ _ (sym_eq hl)); intros (Ha, He); [ left | right ]; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; assumption.",
                        "VernacExtend",
                        "818834f21942e01dabd14372f0503ecbbc11ccb6"
                    ]
                },
                {
                    "command": [
                        "intros H_fgh'.",
                        "VernacExtend",
                        "124b0a9b173a01c6065faec21fdb398ef30ba9a8"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec 2 o2).",
                        "VernacExtend",
                        "b747e4f9f3180cb6af258b8fd95b147f67418f3e"
                    ]
                },
                {
                    "command": [
                        "intro Ho2.",
                        "VernacExtend",
                        "8afe0ad03385c58284ff089700a6e48319e36a6a"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_2 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "9d11e8d3732b1a9fe564baeaad7926fc1537b0b6"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn a, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "cc671df0250929de7b6623564b92b775af84e083"
                    ]
                },
                {
                    "command": [
                        "right; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply Zsgn_10; apply sym_eq; assumption | apply outside_square_1; assumption ].",
                        "VernacExtend",
                        "dc679137e224a113435622d574415b0ed8df7f74"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec o2 (-2)).",
                        "VernacExtend",
                        "a154a84530155d303eb1a188f0e73f1de92f2b11"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_3 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "45bd69bc49004ab873c9fccf5ccb3a932ddbf353"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn a)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "a2fb6bd0acb89478d4b93d893a762dc639ec0fa2"
                    ]
                },
                {
                    "command": [
                        "left; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply Zsgn_9; apply sym_eq; apply Z.opp_inj; assumption | apply outside_square_2; assumption ].",
                        "VernacExtend",
                        "1b5c9f1c16c358a08db0f58aa154bae41981fa4d"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_dL_dL_4 a b c d e f g h (dL xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_4 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "60709f15591f536d32427cc90af2373272b0090d"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign (a + b + c + d) (b + d) (c + d) d (e + f + g + h) (f + h) (g + h) h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_1 (a + b + c + d)%Z (b + d)%Z (c + d)%Z d (e + f + g + h)%Z (f + h)%Z (g + h)%Z h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "5537973e26f7939a864a8b6eb1e4bb57fa2c71e1"
                    ]
                },
                {
                    "command": [
                        "intros Hbcd'.",
                        "VernacExtend",
                        "bd2fb66b4924206bddf393e42dfb7edeabbc1385"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf f g h).",
                        "VernacExtend",
                        "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
                    ]
                },
                {
                    "command": [
                        "intros (Hf, (Hg, Hh)).",
                        "VernacExtend",
                        "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec 2 o1).",
                        "VernacExtend",
                        "f48e06a1765d3040d72a57b372312e148bc25a46"
                    ]
                },
                {
                    "command": [
                        "intro Ho1.",
                        "VernacExtend",
                        "b196b7b9d63229b2fe13418ac27d2ca01fece5a9"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_5 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "e60e2a27dd0430030b87f0c6f1021aec69cdd88b"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn e, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "31fb1f4114521812197abf6dc94d340e2ade90c8"
                    ]
                },
                {
                    "command": [
                        "left; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply outside_square_1 | apply Zsgn_10; apply sym_eq ]; assumption.",
                        "VernacExtend",
                        "95e6c909c31f5d470c8e54099307e10faf90f799"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec o1 (-2)).",
                        "VernacExtend",
                        "cb39341bd62af76a97b55e65c43aac4d8e418897"
                    ]
                },
                {
                    "command": [
                        "intros Ho1' Ho1.",
                        "VernacExtend",
                        "cdebf24875bdbd6a495ba72a8e2502e67dd822e8"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_6 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "7b0e4612a8dda195acef9dc367bef08bf8fcb312"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "ace1e6dd012e3aa28cd8a152980eab13aa4aef82"
                    ]
                },
                {
                    "command": [
                        "right; split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; repeat rewrite Zplus_0_r; [ apply outside_square_2 | apply Zsgn_9; apply sym_eq; apply Z.opp_inj ]; assumption.",
                        "VernacExtend",
                        "bd9c21731af295ba50f73318dc2d42387bf56c88"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_dL_dL_7 a b c d e f g h (dL xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_4 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "51d4862aa5abb3dd93094f58d26b4d40909e48b4"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign (a + b + c + d) (b + d) (c + d) d (e + f + g + h) (f + h) (g + h) h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_1 (a + b + c + d)%Z (b + d)%Z (c + d)%Z d (e + f + g + h)%Z (f + h)%Z (g + h)%Z h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "5537973e26f7939a864a8b6eb1e4bb57fa2c71e1"
                    ]
                },
                {
                    "command": [
                        "intro Hfgh'.",
                        "VernacExtend",
                        "345b6667cec5f818822048df8b93ef410d8ff631"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_1_dec_inf o1 o2).",
                        "VernacExtend",
                        "d295c561ef561fb8b649e6303ce92c0f0681eb8f"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_1.",
                        "VernacExtend",
                        "068d44eb2eb58699356ab84ee948b8147fe0eef5"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_8 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "084252fe935af0a92ac7feca5fe44fa253615116"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (1%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "fd701895c1b9f263984d547d9671bfdb2c9800b5"
                    ]
                },
                {
                    "command": [
                        "discriminate hl.",
                        "VernacExtend",
                        "f643a20865d0dde2f37d19887cfd4265938120b1"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_1'.",
                        "VernacExtend",
                        "2ec567de4490f9d472a6a6a40281eff13e5732a9"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_2_dec_inf o1 o2).",
                        "VernacExtend",
                        "7682baf8a4bbff99d50bdda519b1ba70e3c47898"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_2.",
                        "VernacExtend",
                        "b4e80bee310800c8c137b8b864721e5c3244f673"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_9 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "01ac32711281d55d5e8790d70a8a118de564f06e"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((-1)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "d486b4ac502e83592b625a26cb69444f61e23790"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_2_inf _ _ H_inside_2); intros (Ho1, Ho2); [ left; split; [ apply outside_square_1 | apply outside_square_2 ] | right; split; [ apply outside_square_2 | apply outside_square_1 ] ]; assumption.",
                        "VernacExtend",
                        "ee52f16adb9d832c73b20fbfeb18e2425dd33858"
                    ]
                },
                {
                    "command": [
                        "intros H_inside_2'.",
                        "VernacExtend",
                        "4f65b53b2c7b3936fda163236abffb01421ea904"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_dL_dL_10 a b c d e f g h (dL xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_4 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "92aabbab4ba412dd08be60745aa35f49b983e5c9"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign (a + b + c + d) (b + d) (c + d) d (e + f + g + h) (f + h) (g + h) h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_1 (a + b + c + d)%Z (b + d)%Z (c + d)%Z d (e + f + g + h)%Z (f + h)%Z (g + h)%Z h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "5537973e26f7939a864a8b6eb1e4bb57fa2c71e1"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_signok_0' _ _ _ _ _ H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "82ba942058f599dab626c16f3958e19a9e8856b7"
                    ]
                },
                {
                    "command": [
                        "intros H_Qhomographic_sg_denom_nonzero.",
                        "VernacExtend",
                        "7ee186f9a3e15bd36020fb30747a871aa671241b"
                    ]
                },
                {
                    "command": [
                        "set (L3 := Qhomographic_sign (a + b) (c + d) (e + f) (g + h) (dL xs) H_Qhomographic_sg_denom_nonzero) in *.",
                        "VernacExtend",
                        "bbcac23fd22aa8b7c66b46a28b66bc764c9d21df"
                    ]
                },
                {
                    "command": [
                        "set (l1 := fst L3) in *.",
                        "VernacExtend",
                        "53a0156fadda9545b3aad23e6562a9f7571500e5"
                    ]
                },
                {
                    "command": [
                        "set (l2 := fst (snd L3)) in *.",
                        "VernacExtend",
                        "d2ff6d484662d1ffc681d957fae47d75d4f0ffe7"
                    ]
                },
                {
                    "command": [
                        "set (l3 := snd (snd L3)) in *.",
                        "VernacExtend",
                        "a4f4a2a7a6777d6cf8547330f649c7e802134835"
                    ]
                },
                {
                    "command": [
                        "set (na_ := fst l2) in *.",
                        "VernacExtend",
                        "4cc5c8cdb69c666a5ed03e05d9c5d3bf6b3508c8"
                    ]
                },
                {
                    "command": [
                        "set (nb_ := fst (snd l2)) in *.",
                        "VernacExtend",
                        "c689e91162d844443766f43d357817dbbb7e3d29"
                    ]
                },
                {
                    "command": [
                        "set (nc_ := fst (snd (snd l2))) in *.",
                        "VernacExtend",
                        "77cd624092e8a297c0e31fd1f7dd984499cdbe5d"
                    ]
                },
                {
                    "command": [
                        "set (nd_ := snd (snd (snd l2))) in *.",
                        "VernacExtend",
                        "3b6670693e7eae913c0e386dd06bc54541698adc"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_One a b c d e f g h (dL xs) One H_Qquadratic_sg_denom_nonzero l1 na_ nb_ nc_ nd_ l3 H_Qhomographic_sg_denom_nonzero); intros H1.",
                        "VernacExtend",
                        "729fdcd685e6089ef0bda9bddf52a935a2f85311"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (l1, (0%Z, (na_, (0%Z, nb_)), (0%Z, (nc_, (0%Z, nd_))), (l3, One)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) One H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; assumption | apply H1; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity ] | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end; repeat rewrite ZERO_left; repeat rewrite Zplus_0_r ]; apply (sg_neg_1 (a + b) (c + d) (e + f) (g + h) (dL xs) H_Qhomographic_sg_denom_nonzero na_ nb_ nc_ nd_ l3); rewrite hl; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity.",
                        "VernacExtend",
                        "641abebd9ce537c2195a83c9daa35566282a65eb"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_signok_0 _ _ _ _ _ H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "891278ce1d1d1a595b0c37c3d03fef7ef0e6f7fa"
                    ]
                },
                {
                    "command": [
                        "intros H_Qhomographic_sg_denom_nonzero.",
                        "VernacExtend",
                        "7ee186f9a3e15bd36020fb30747a871aa671241b"
                    ]
                },
                {
                    "command": [
                        "set (L3 := Qhomographic_sign (a + c) (b + d) (e + g) (f + h) p2 H_Qhomographic_sg_denom_nonzero) in *.",
                        "VernacExtend",
                        "a3acce1fe502fff654a4ab9f8e3264e43d54debe"
                    ]
                },
                {
                    "command": [
                        "set (l1 := fst L3) in *.",
                        "VernacExtend",
                        "53a0156fadda9545b3aad23e6562a9f7571500e5"
                    ]
                },
                {
                    "command": [
                        "set (l2 := fst (snd L3)) in *.",
                        "VernacExtend",
                        "d2ff6d484662d1ffc681d957fae47d75d4f0ffe7"
                    ]
                },
                {
                    "command": [
                        "set (l3 := snd (snd L3)) in *.",
                        "VernacExtend",
                        "a4f4a2a7a6777d6cf8547330f649c7e802134835"
                    ]
                },
                {
                    "command": [
                        "set (na_ := fst l2) in *.",
                        "VernacExtend",
                        "4cc5c8cdb69c666a5ed03e05d9c5d3bf6b3508c8"
                    ]
                },
                {
                    "command": [
                        "set (nb_ := fst (snd l2)) in *.",
                        "VernacExtend",
                        "c689e91162d844443766f43d357817dbbb7e3d29"
                    ]
                },
                {
                    "command": [
                        "set (nc_ := fst (snd (snd l2))) in *.",
                        "VernacExtend",
                        "77cd624092e8a297c0e31fd1f7dd984499cdbe5d"
                    ]
                },
                {
                    "command": [
                        "set (nd_ := snd (snd (snd l2))) in *.",
                        "VernacExtend",
                        "3b6670693e7eae913c0e386dd06bc54541698adc"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_One_y a b c d e f g h One p2 H_Qquadratic_sg_denom_nonzero l1 na_ nb_ nc_ nd_ l3 H_Qhomographic_sg_denom_nonzero); intros H1.",
                        "VernacExtend",
                        "0f9e0cc2712b63c207db1a772be8487cca639a7f"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (l1, (0%Z, (0%Z, (na_, nb_)), (0%Z, (0%Z, (nc_, nd_))), (One, l3)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h One p2 H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; assumption | apply H1; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity ] | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end; repeat rewrite ZERO_left; repeat rewrite Zplus_0_r ]; apply (sg_neg_1 (a + c) (b + d) (e + g) (f + h) p2 H_Qhomographic_sg_denom_nonzero na_ nb_ nc_ nd_ l3); rewrite hl; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity.",
                        "VernacExtend",
                        "330ff6ec99410b1c2bedd2776130f83df599b1bd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qquadratic_sign_neg_2",
            "line_nb": 962,
            "steps": [
                {
                    "command": [
                        "fix Qquadratic_sign_neg_2 9.",
                        "VernacExtend",
                        "828d8d8bf1e63f7e2d541e07daaaec9d6d61ac64"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "set (o1 := outside_square a b c d) in *.",
                        "VernacExtend",
                        "115a9a38809cb78c24da8e0924729c0e3ba70321"
                    ]
                },
                {
                    "command": [
                        "set (o2 := outside_square e f g h) in *.",
                        "VernacExtend",
                        "3226c4628498a920e7666c26460e51df81dc5ca0"
                    ]
                },
                {
                    "command": [
                        "destruct p1 as [xs| xs| ].",
                        "VernacExtend",
                        "c49c827365e4d09f3f970ea66544c82eb12cd410"
                    ]
                },
                {
                    "command": [
                        "destruct p2 as [ys| ys| ].",
                        "VernacExtend",
                        "a6e067f2aa8567de952ce8b70a91f70f20efb13b"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf b c d).",
                        "VernacExtend",
                        "d92f13936a5038bdd06bb3160509a88b0ac07217"
                    ]
                },
                {
                    "command": [
                        "intros (Hb, (Hc, Hd)).",
                        "VernacExtend",
                        "b24025fbd18098487c0ee7d5d35744a09e154027"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf f g h).",
                        "VernacExtend",
                        "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
                    ]
                },
                {
                    "command": [
                        "intros (Hf, (Hg, Hh)).",
                        "VernacExtend",
                        "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_1 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "7be30785199ecf5ea7f56f20ee28d6c2c1399de1"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((Z.sgn a * Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "c31e9d5f2bd40c63d9b124cc6a6c0ba0f8fd3f99"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; rewrite <- Zsgn_15 in hl.",
                        "VernacExtend",
                        "ee2e09bae78c5f1f2dd8bb9f34710881f57b1e50"
                    ]
                },
                {
                    "command": [
                        "case (Zsgn_17 _ _ (sym_eq hl)); intros (Ha, He); [ left | right ]; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | apply Zlt_le_weak ]; assumption.",
                        "VernacExtend",
                        "85d1efe074623102d3a5b0e0e73429ea16061bc9"
                    ]
                },
                {
                    "command": [
                        "intros H_fgh'.",
                        "VernacExtend",
                        "124b0a9b173a01c6065faec21fdb398ef30ba9a8"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec 2 o2).",
                        "VernacExtend",
                        "b747e4f9f3180cb6af258b8fd95b147f67418f3e"
                    ]
                },
                {
                    "command": [
                        "intro Ho2.",
                        "VernacExtend",
                        "8afe0ad03385c58284ff089700a6e48319e36a6a"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_2 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "4ec97d0a6eae9c6fed02c0ed7f3a2f9e0ca70720"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn a, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "5e2af73c2948d17574aeea24fa758f280e08ba38"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; right; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o2 in Ho2; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "23e2a74681410df4c272890337cca1fcc1205a1f"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec o2 (-2)).",
                        "VernacExtend",
                        "a154a84530155d303eb1a188f0e73f1de92f2b11"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_3 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "94c97fbf61793fb95b35d927607ba145bc1e03a5"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn a)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "f16c2114f6327bb8f02f92b5eb53520e77400881"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; left; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o2 in Ho2'; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "232ae9365f0ed88164ace7dea412dee045a79140"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nR_nR_4 a b c d e f g h (nR xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_1 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "f71909b24b264ce20070f11b21911afdcf0c33ea"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign a (a + b) (a + c) (a + b + c + d) e (e + f) (e + g) (e + f + g + h) xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_2 a (a + b)%Z (a + c)%Z (a + b + c + d)%Z e (e + f)%Z (e + g)%Z (e + f + g + h)%Z xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "498300e82482cddfa04a5e5844804b846d93cf6d"
                    ]
                },
                {
                    "command": [
                        "intros Hbcd'.",
                        "VernacExtend",
                        "bd2fb66b4924206bddf393e42dfb7edeabbc1385"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf f g h).",
                        "VernacExtend",
                        "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
                    ]
                },
                {
                    "command": [
                        "intros (Hf, (Hg, Hh)).",
                        "VernacExtend",
                        "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec 2 o1).",
                        "VernacExtend",
                        "f48e06a1765d3040d72a57b372312e148bc25a46"
                    ]
                },
                {
                    "command": [
                        "intro Ho1.",
                        "VernacExtend",
                        "b196b7b9d63229b2fe13418ac27d2ca01fece5a9"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_5 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "b7bfe4c6defebe115fd2accc4b2946f79db5889b"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn e, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "490a519bb00bc6328b331c84ceeb5c7f9df79113"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; left; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o1 in Ho1; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "1455d8305d93335681883b56b7b6eb896b2c3d69"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec o1 (-2)).",
                        "VernacExtend",
                        "cb39341bd62af76a97b55e65c43aac4d8e418897"
                    ]
                },
                {
                    "command": [
                        "intros Ho1' Ho1.",
                        "VernacExtend",
                        "cdebf24875bdbd6a495ba72a8e2502e67dd822e8"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_6 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "f483a1b16f77861b6ce8802851e84359261f67bd"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "1d4d643d47da11e23bda0a2f4a39e0468419ef4a"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; right; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o1 in Ho1'; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "668ad29bcba94284007ebd60731e9ce2269dedca"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nR_nR_7 a b c d e f g h (nR xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_1 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "810bc89051fc8ecbfd9f846e25cd1052a11c500a"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign a (a + b) (a + c) (a + b + c + d) e (e + f) (e + g) (e + f + g + h) xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_2 a (a + b)%Z (a + c)%Z (a + b + c + d)%Z e (e + f)%Z (e + g)%Z (e + f + g + h)%Z xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "498300e82482cddfa04a5e5844804b846d93cf6d"
                    ]
                },
                {
                    "command": [
                        "intro Hfgh'.",
                        "VernacExtend",
                        "345b6667cec5f818822048df8b93ef410d8ff631"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_1_dec_inf o1 o2).",
                        "VernacExtend",
                        "d295c561ef561fb8b649e6303ce92c0f0681eb8f"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_1.",
                        "VernacExtend",
                        "068d44eb2eb58699356ab84ee948b8147fe0eef5"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_8 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "17c4bef80f8937e9f81b326e04069c70ccf1b8df"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (1%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "0650642759619566070d9194ab5675fe6ffbb50a"
                    ]
                },
                {
                    "command": [
                        "discriminate hl.",
                        "VernacExtend",
                        "f643a20865d0dde2f37d19887cfd4265938120b1"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_1'.",
                        "VernacExtend",
                        "2ec567de4490f9d472a6a6a40281eff13e5732a9"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_2_dec_inf o1 o2).",
                        "VernacExtend",
                        "7682baf8a4bbff99d50bdda519b1ba70e3c47898"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_2.",
                        "VernacExtend",
                        "b4e80bee310800c8c137b8b864721e5c3244f673"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_9 a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "152690edd4ff3f485e8452c0c2c329c423aa3337"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((-1)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "36274c2cd325ad04f710525b70f6632215eaaf32"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; case (inside_square_2_inf _ _ H_inside_2); intros (Ho1, Ho2); [ left | right ]; repeat split; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o1 in Ho1; unfold o2 in Ho2; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "1760d88dcbd858245756e0fe0b51238776c2b9d6"
                    ]
                },
                {
                    "command": [
                        "intros H_inside_2'.",
                        "VernacExtend",
                        "4f65b53b2c7b3936fda163236abffb01421ea904"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nR_nR_10 a b c d e f g h (nR xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_1 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "ebf1110cd2276609eca3149433715718142a96e8"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign a (a + b) (a + c) (a + b + c + d) e (e + f) (e + g) (e + f + g + h) xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_2 a (a + b)%Z (a + c)%Z (a + b + c + d)%Z e (e + f)%Z (e + g)%Z (e + f + g + h)%Z xs ys (Qquadratic_signok_1 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "498300e82482cddfa04a5e5844804b846d93cf6d"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf b c d).",
                        "VernacExtend",
                        "d92f13936a5038bdd06bb3160509a88b0ac07217"
                    ]
                },
                {
                    "command": [
                        "intros (Hb, (Hc, Hd)).",
                        "VernacExtend",
                        "b24025fbd18098487c0ee7d5d35744a09e154027"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf f g h).",
                        "VernacExtend",
                        "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
                    ]
                },
                {
                    "command": [
                        "intros (Hf, (Hg, Hh)).",
                        "VernacExtend",
                        "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_1 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "0b3a7cf1aee6c21cac9c8f1a7131131c9cf68287"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((Z.sgn a * Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "f684fc76c06fd7949c8315d651495f73c3b3b422"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; rewrite <- Zsgn_15 in hl.",
                        "VernacExtend",
                        "ee2e09bae78c5f1f2dd8bb9f34710881f57b1e50"
                    ]
                },
                {
                    "command": [
                        "case (Zsgn_17 _ _ (sym_eq hl)); intros (Ha, He); [ left | right ]; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | apply Zlt_le_weak ]; assumption.",
                        "VernacExtend",
                        "85d1efe074623102d3a5b0e0e73429ea16061bc9"
                    ]
                },
                {
                    "command": [
                        "intros H_fgh'.",
                        "VernacExtend",
                        "124b0a9b173a01c6065faec21fdb398ef30ba9a8"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec 2 o2).",
                        "VernacExtend",
                        "b747e4f9f3180cb6af258b8fd95b147f67418f3e"
                    ]
                },
                {
                    "command": [
                        "intro Ho2.",
                        "VernacExtend",
                        "8afe0ad03385c58284ff089700a6e48319e36a6a"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_2 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "8db38400c71755cb43bf15e4e55b71fddecf8c60"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn a, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "cf68fc857997060d9ce1a200a04131601c0ef720"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; right; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o2 in Ho2; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "23e2a74681410df4c272890337cca1fcc1205a1f"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec o2 (-2)).",
                        "VernacExtend",
                        "a154a84530155d303eb1a188f0e73f1de92f2b11"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_3 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "0a90e6d9978b9a2224d75e7522f5bb5ecb2ce459"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn a)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "7df58376bdfc9159286c89b9d8ab24ebe5b2a078"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; left; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o2 in Ho2'; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "232ae9365f0ed88164ace7dea412dee045a79140"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nR_dL_4 a b c d e f g h (nR xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_2 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "e338eb26767fc3684e8a97123c68697052d25a34"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign (a + b) b (a + b + c + d) (b + d) (e + f) f (e + f + g + h) (f + h) xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_2 (a + b)%Z b (a + b + c + d)%Z (b + d)%Z (e + f)%Z f (e + f + g + h)%Z (f + h)%Z xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "865962a40c603210e8b59857c8a378b29923b2fc"
                    ]
                },
                {
                    "command": [
                        "intros Hbcd'.",
                        "VernacExtend",
                        "bd2fb66b4924206bddf393e42dfb7edeabbc1385"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf f g h).",
                        "VernacExtend",
                        "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
                    ]
                },
                {
                    "command": [
                        "intros (Hf, (Hg, Hh)).",
                        "VernacExtend",
                        "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec 2 o1).",
                        "VernacExtend",
                        "f48e06a1765d3040d72a57b372312e148bc25a46"
                    ]
                },
                {
                    "command": [
                        "intro Ho1.",
                        "VernacExtend",
                        "b196b7b9d63229b2fe13418ac27d2ca01fece5a9"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_5 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "60dee11bf970fa431bc509100b556cfda9cd4016"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn e, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "af1766f26a05beac7fa4fe116f6290749416f336"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; left; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o1 in Ho1; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "1455d8305d93335681883b56b7b6eb896b2c3d69"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec o1 (-2)).",
                        "VernacExtend",
                        "cb39341bd62af76a97b55e65c43aac4d8e418897"
                    ]
                },
                {
                    "command": [
                        "intros Ho1' Ho1.",
                        "VernacExtend",
                        "cdebf24875bdbd6a495ba72a8e2502e67dd822e8"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_6 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "73cd66244c556704a4acb72cdfd1263b52028628"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "d90555c2d094ffb9f1a95cae86df0c7fb0cfc199"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; right; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o1 in Ho1'; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "668ad29bcba94284007ebd60731e9ce2269dedca"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nR_dL_7 a b c d e f g h (nR xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_2 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "aece866d71f9f6b70c44ff6035c02e2759b10435"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign (a + b) b (a + b + c + d) (b + d) (e + f) f (e + f + g + h) (f + h) xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_2 (a + b)%Z b (a + b + c + d)%Z (b + d)%Z (e + f)%Z f (e + f + g + h)%Z (f + h)%Z xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "865962a40c603210e8b59857c8a378b29923b2fc"
                    ]
                },
                {
                    "command": [
                        "intro Hfgh'.",
                        "VernacExtend",
                        "345b6667cec5f818822048df8b93ef410d8ff631"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_1_dec_inf o1 o2).",
                        "VernacExtend",
                        "d295c561ef561fb8b649e6303ce92c0f0681eb8f"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_1.",
                        "VernacExtend",
                        "068d44eb2eb58699356ab84ee948b8147fe0eef5"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_8 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "897d1753e26f302c001afae6ff16a94868186d2e"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (1%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "745003fdb5ed8ab204e0f47eaf496a7b2cef2e43"
                    ]
                },
                {
                    "command": [
                        "discriminate hl.",
                        "VernacExtend",
                        "f643a20865d0dde2f37d19887cfd4265938120b1"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_1'.",
                        "VernacExtend",
                        "2ec567de4490f9d472a6a6a40281eff13e5732a9"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_2_dec_inf o1 o2).",
                        "VernacExtend",
                        "7682baf8a4bbff99d50bdda519b1ba70e3c47898"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_2.",
                        "VernacExtend",
                        "b4e80bee310800c8c137b8b864721e5c3244f673"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_9 a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "cbbf9d97e58e2bb95455ca931ec68344767f069d"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((-1)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (nR xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "3ecad056d63754357dbca38199ec82d931a59995"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; case (inside_square_2_inf _ _ H_inside_2); intros (Ho1, Ho2); [ left | right ]; repeat split; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o1 in Ho1; unfold o2 in Ho2; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "1760d88dcbd858245756e0fe0b51238776c2b9d6"
                    ]
                },
                {
                    "command": [
                        "intros H_inside_2'.",
                        "VernacExtend",
                        "4f65b53b2c7b3936fda163236abffb01421ea904"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nR_dL_10 a b c d e f g h (nR xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_2 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "0d3068282c5f924b3105b9445cf9b7dfcc50b98c"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign (a + b) b (a + b + c + d) (b + d) (e + f) f (e + f + g + h) (f + h) xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_2 (a + b)%Z b (a + b + c + d)%Z (b + d)%Z (e + f)%Z f (e + f + g + h)%Z (f + h)%Z xs ys (Qquadratic_signok_2 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "865962a40c603210e8b59857c8a378b29923b2fc"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_signok_0' _ _ _ _ _ H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "82ba942058f599dab626c16f3958e19a9e8856b7"
                    ]
                },
                {
                    "command": [
                        "intros H_Qhomographic_sg_denom_nonzero.",
                        "VernacExtend",
                        "7ee186f9a3e15bd36020fb30747a871aa671241b"
                    ]
                },
                {
                    "command": [
                        "set (L3 := Qhomographic_sign (a + b) (c + d) (e + f) (g + h) (nR xs) H_Qhomographic_sg_denom_nonzero) in *.",
                        "VernacExtend",
                        "84df2c330ca924d8672b2dc2167b20dca2d9d189"
                    ]
                },
                {
                    "command": [
                        "set (l1 := fst L3) in *.",
                        "VernacExtend",
                        "53a0156fadda9545b3aad23e6562a9f7571500e5"
                    ]
                },
                {
                    "command": [
                        "set (l2 := fst (snd L3)) in *.",
                        "VernacExtend",
                        "d2ff6d484662d1ffc681d957fae47d75d4f0ffe7"
                    ]
                },
                {
                    "command": [
                        "set (l3 := snd (snd L3)) in *.",
                        "VernacExtend",
                        "a4f4a2a7a6777d6cf8547330f649c7e802134835"
                    ]
                },
                {
                    "command": [
                        "set (na_ := fst l2) in *.",
                        "VernacExtend",
                        "4cc5c8cdb69c666a5ed03e05d9c5d3bf6b3508c8"
                    ]
                },
                {
                    "command": [
                        "set (nb_ := fst (snd l2)) in *.",
                        "VernacExtend",
                        "c689e91162d844443766f43d357817dbbb7e3d29"
                    ]
                },
                {
                    "command": [
                        "set (nc_ := fst (snd (snd l2))) in *.",
                        "VernacExtend",
                        "77cd624092e8a297c0e31fd1f7dd984499cdbe5d"
                    ]
                },
                {
                    "command": [
                        "set (nd_ := snd (snd (snd l2))) in *.",
                        "VernacExtend",
                        "3b6670693e7eae913c0e386dd06bc54541698adc"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_One a b c d e f g h (nR xs) One H_Qquadratic_sg_denom_nonzero l1 na_ nb_ nc_ nd_ l3 H_Qhomographic_sg_denom_nonzero); intros H1.",
                        "VernacExtend",
                        "3aaded4fd9b7cf246242f869d542f1391f8cbda2"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (l1, (0%Z, (na_, (0%Z, nb_)), (0%Z, (nc_, (0%Z, nd_))), (l3, One)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (nR xs) One H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; assumption | apply H1; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity ] | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end; repeat rewrite ZERO_left; repeat rewrite Zplus_0_r ].",
                        "VernacExtend",
                        "2883c6c9b0720e80b0538703401bb28a1fe724a0"
                    ]
                },
                {
                    "command": [
                        "assert (H_sg_unfolded : Qhomographic_sign (a + b) (c + d) (e + f) (g + h) (nR xs) H_Qhomographic_sg_denom_nonzero = ((-1)%Z, (na_, (nb_, (nc_, nd_)), l3))).",
                        "VernacExtend",
                        "77d5609c269b0eed237d5e7b798f47e933fefb0d"
                    ]
                },
                {
                    "command": [
                        "rewrite hl; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity.",
                        "VernacExtend",
                        "92853c2a640fbbf7420687b2cc9dd9d0f8561009"
                    ]
                },
                {
                    "command": [
                        "generalize (sg_neg_2 (a + b) (c + d) (e + f) (g + h) (nR xs) H_Qhomographic_sg_denom_nonzero na_ nb_ nc_ nd_ l3 H_sg_unfolded).",
                        "VernacExtend",
                        "5ce57b954763a8b38b5f1c1b51ea637d54c12b07"
                    ]
                },
                {
                    "command": [
                        "intros [[(H_a, (H_b, (H_c, H_d)))| (H_a, (H_b, (H_c, H_d)))]| H_l3]; [ case l3; left; [ right; repeat split; assumption || discriminate | right; repeat split; assumption || discriminate | left; right; repeat split ] | case l3; [ right; repeat split; assumption || discriminate | right; repeat split; assumption || discriminate | left; left; right; repeat split ] | left; left; right; repeat split; assumption ].",
                        "VernacExtend",
                        "cb3ad86028a07cb387904a1b8cf99c0e91f24b08"
                    ]
                },
                {
                    "command": [
                        "destruct p2 as [ys| ys| ].",
                        "VernacExtend",
                        "a6e067f2aa8567de952ce8b70a91f70f20efb13b"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf b c d).",
                        "VernacExtend",
                        "d92f13936a5038bdd06bb3160509a88b0ac07217"
                    ]
                },
                {
                    "command": [
                        "intros (Hb, (Hc, Hd)).",
                        "VernacExtend",
                        "b24025fbd18098487c0ee7d5d35744a09e154027"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf f g h).",
                        "VernacExtend",
                        "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
                    ]
                },
                {
                    "command": [
                        "intros (Hf, (Hg, Hh)).",
                        "VernacExtend",
                        "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_1 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "2ca6efa1266480d8bf81b38b038fe6537f4e5150"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((Z.sgn a * Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "b2caf3b27a8370751d9d5866818c1686ef342bfe"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; rewrite <- Zsgn_15 in hl.",
                        "VernacExtend",
                        "ee2e09bae78c5f1f2dd8bb9f34710881f57b1e50"
                    ]
                },
                {
                    "command": [
                        "case (Zsgn_17 _ _ (sym_eq hl)); intros (Ha, He); [ left | right ]; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | apply Zlt_le_weak ]; assumption.",
                        "VernacExtend",
                        "85d1efe074623102d3a5b0e0e73429ea16061bc9"
                    ]
                },
                {
                    "command": [
                        "intros H_fgh'.",
                        "VernacExtend",
                        "124b0a9b173a01c6065faec21fdb398ef30ba9a8"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec 2 o2).",
                        "VernacExtend",
                        "b747e4f9f3180cb6af258b8fd95b147f67418f3e"
                    ]
                },
                {
                    "command": [
                        "intro Ho2.",
                        "VernacExtend",
                        "8afe0ad03385c58284ff089700a6e48319e36a6a"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_2 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "2416253b968fdf37c51579e985ced59ed75f277d"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn a, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "3303ffe5d34872fd07a59d1d63b50f6ad416ea81"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; right; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o2 in Ho2; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "23e2a74681410df4c272890337cca1fcc1205a1f"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec o2 (-2)).",
                        "VernacExtend",
                        "a154a84530155d303eb1a188f0e73f1de92f2b11"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_3 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "44518512dfe88ca88898fe96b8fbdc54e72141e7"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn a)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "ddd8eca906ca1ef2ef533394e906249cd5df019b"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; left; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o2 in Ho2'; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "232ae9365f0ed88164ace7dea412dee045a79140"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_dL_nR_4 a b c d e f g h (dL xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_3 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "f64fa610989268eca45d7884cde62e0d3b3c9532"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign (a + c) (a + b + c + d) c (c + d) (e + g) (e + f + g + h) g (g + h) xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_2 (a + c)%Z (a + b + c + d)%Z c (c + d)%Z (e + g)%Z (e + f + g + h)%Z g (g + h)%Z xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "93d41041caaa21c276af77b7d777c5d86796da8c"
                    ]
                },
                {
                    "command": [
                        "intros Hbcd'.",
                        "VernacExtend",
                        "bd2fb66b4924206bddf393e42dfb7edeabbc1385"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf f g h).",
                        "VernacExtend",
                        "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
                    ]
                },
                {
                    "command": [
                        "intros (Hf, (Hg, Hh)).",
                        "VernacExtend",
                        "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec 2 o1).",
                        "VernacExtend",
                        "f48e06a1765d3040d72a57b372312e148bc25a46"
                    ]
                },
                {
                    "command": [
                        "intro Ho1.",
                        "VernacExtend",
                        "b196b7b9d63229b2fe13418ac27d2ca01fece5a9"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_5 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "73d28ffa851b17a895eb8de63759600c1cc7d195"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn e, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "84e24f56497aa416fe301a9c10e45bfb364aedbb"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; left; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o1 in Ho1; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "1455d8305d93335681883b56b7b6eb896b2c3d69"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec o1 (-2)).",
                        "VernacExtend",
                        "cb39341bd62af76a97b55e65c43aac4d8e418897"
                    ]
                },
                {
                    "command": [
                        "intros Ho1' Ho1.",
                        "VernacExtend",
                        "cdebf24875bdbd6a495ba72a8e2502e67dd822e8"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_6 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "748719d32744224930bba0e4a91f0658594f536b"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "b3cf2404d57e524217ecac63b285773d60e763b8"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; right; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o1 in Ho1'; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "668ad29bcba94284007ebd60731e9ce2269dedca"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_dL_nR_7 a b c d e f g h (dL xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_3 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "05c7636b2a0eeb81bdae4b57d3f3af8b5289c4db"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign (a + c) (a + b + c + d) c (c + d) (e + g) (e + f + g + h) g (g + h) xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_2 (a + c)%Z (a + b + c + d)%Z c (c + d)%Z (e + g)%Z (e + f + g + h)%Z g (g + h)%Z xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "93d41041caaa21c276af77b7d777c5d86796da8c"
                    ]
                },
                {
                    "command": [
                        "intro Hfgh'.",
                        "VernacExtend",
                        "345b6667cec5f818822048df8b93ef410d8ff631"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_1_dec_inf o1 o2).",
                        "VernacExtend",
                        "d295c561ef561fb8b649e6303ce92c0f0681eb8f"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_1.",
                        "VernacExtend",
                        "068d44eb2eb58699356ab84ee948b8147fe0eef5"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_8 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "17b14b6ad27d5d97fa40021b5b1bd5759a6a8583"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (1%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "a03a4135524a9863111f878b70ea6b298155f1ab"
                    ]
                },
                {
                    "command": [
                        "discriminate hl.",
                        "VernacExtend",
                        "f643a20865d0dde2f37d19887cfd4265938120b1"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_1'.",
                        "VernacExtend",
                        "2ec567de4490f9d472a6a6a40281eff13e5732a9"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_2_dec_inf o1 o2).",
                        "VernacExtend",
                        "7682baf8a4bbff99d50bdda519b1ba70e3c47898"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_2.",
                        "VernacExtend",
                        "b4e80bee310800c8c137b8b864721e5c3244f673"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_9 a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "1b15c9a0b17bf8e3bd9ea57e3449cd64dd182336"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((-1)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, nR ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "2ade41f5efeee62f9b50467184181878ce3fe4a6"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; case (inside_square_2_inf _ _ H_inside_2); intros (Ho1, Ho2); [ left | right ]; repeat split; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o1 in Ho1; unfold o2 in Ho2; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "1760d88dcbd858245756e0fe0b51238776c2b9d6"
                    ]
                },
                {
                    "command": [
                        "intros H_inside_2'.",
                        "VernacExtend",
                        "4f65b53b2c7b3936fda163236abffb01421ea904"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_dL_nR_10 a b c d e f g h (dL xs) xs (nR ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_3 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "8fc05207a6b41ec0c59af37fe14d660de73831e9"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign (a + c) (a + b + c + d) c (c + d) (e + g) (e + f + g + h) g (g + h) xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (nR ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_2 (a + c)%Z (a + b + c + d)%Z c (c + d)%Z (e + g)%Z (e + f + g + h)%Z g (g + h)%Z xs ys (Qquadratic_signok_3 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "93d41041caaa21c276af77b7d777c5d86796da8c"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf b c d).",
                        "VernacExtend",
                        "d92f13936a5038bdd06bb3160509a88b0ac07217"
                    ]
                },
                {
                    "command": [
                        "intros (Hb, (Hc, Hd)).",
                        "VernacExtend",
                        "b24025fbd18098487c0ee7d5d35744a09e154027"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf f g h).",
                        "VernacExtend",
                        "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
                    ]
                },
                {
                    "command": [
                        "intros (Hf, (Hg, Hh)).",
                        "VernacExtend",
                        "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_1 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "e97d2062f29099b8e633a9b753a2b33784c76b0b"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((Z.sgn a * Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "72f7c357d61300294796b20da833e84372ab64bf"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; rewrite <- Zsgn_15 in hl.",
                        "VernacExtend",
                        "ee2e09bae78c5f1f2dd8bb9f34710881f57b1e50"
                    ]
                },
                {
                    "command": [
                        "case (Zsgn_17 _ _ (sym_eq hl)); intros (Ha, He); [ left | right ]; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | apply Zlt_le_weak ]; assumption.",
                        "VernacExtend",
                        "85d1efe074623102d3a5b0e0e73429ea16061bc9"
                    ]
                },
                {
                    "command": [
                        "intros H_fgh'.",
                        "VernacExtend",
                        "124b0a9b173a01c6065faec21fdb398ef30ba9a8"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec 2 o2).",
                        "VernacExtend",
                        "b747e4f9f3180cb6af258b8fd95b147f67418f3e"
                    ]
                },
                {
                    "command": [
                        "intro Ho2.",
                        "VernacExtend",
                        "8afe0ad03385c58284ff089700a6e48319e36a6a"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_2 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "9d11e8d3732b1a9fe564baeaad7926fc1537b0b6"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn a, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "cc671df0250929de7b6623564b92b775af84e083"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; right; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o2 in Ho2; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "23e2a74681410df4c272890337cca1fcc1205a1f"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec o2 (-2)).",
                        "VernacExtend",
                        "a154a84530155d303eb1a188f0e73f1de92f2b11"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_3 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "45bd69bc49004ab873c9fccf5ccb3a932ddbf353"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn a)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "a2fb6bd0acb89478d4b93d893a762dc639ec0fa2"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; left; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o2 in Ho2'; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "232ae9365f0ed88164ace7dea412dee045a79140"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_dL_dL_4 a b c d e f g h (dL xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_4 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "60709f15591f536d32427cc90af2373272b0090d"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign (a + b + c + d) (b + d) (c + d) d (e + f + g + h) (f + h) (g + h) h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_2 (a + b + c + d)%Z (b + d)%Z (c + d)%Z d (e + f + g + h)%Z (f + h)%Z (g + h)%Z h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "330499833d84f1236722f9da79c036d2c993d9ba"
                    ]
                },
                {
                    "command": [
                        "intros Hbcd'.",
                        "VernacExtend",
                        "bd2fb66b4924206bddf393e42dfb7edeabbc1385"
                    ]
                },
                {
                    "command": [
                        "case (three_integers_dec_inf f g h).",
                        "VernacExtend",
                        "5b923cf0757db5fed86021af2fbf62f3dfdb0cf6"
                    ]
                },
                {
                    "command": [
                        "intros (Hf, (Hg, Hh)).",
                        "VernacExtend",
                        "3919c4ad6d454e4f7c74af2d479efb9a954c2749"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec 2 o1).",
                        "VernacExtend",
                        "f48e06a1765d3040d72a57b372312e148bc25a46"
                    ]
                },
                {
                    "command": [
                        "intro Ho1.",
                        "VernacExtend",
                        "b196b7b9d63229b2fe13418ac27d2ca01fece5a9"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_5 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "e60e2a27dd0430030b87f0c6f1021aec69cdd88b"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (Z.sgn e, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "31fb1f4114521812197abf6dc94d340e2ade90c8"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; left; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o1 in Ho1; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "1455d8305d93335681883b56b7b6eb896b2c3d69"
                    ]
                },
                {
                    "command": [
                        "case (Z_lt_dec o1 (-2)).",
                        "VernacExtend",
                        "cb39341bd62af76a97b55e65c43aac4d8e418897"
                    ]
                },
                {
                    "command": [
                        "intros Ho1' Ho1.",
                        "VernacExtend",
                        "cdebf24875bdbd6a495ba72a8e2502e67dd822e8"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_6 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "7b0e4612a8dda195acef9dc367bef08bf8fcb312"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((- Z.sgn e)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "ace1e6dd012e3aa28cd8a152980eab13aa4aef82"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; right; repeat split; repeat match goal with | id1:(?X1 = 0%Z) |- ?X2 => rewrite id1; clear id1 end; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o1 in Ho1'; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "668ad29bcba94284007ebd60731e9ce2269dedca"
                    ]
                },
                {
                    "command": [
                        "intros Ho2' Ho2.",
                        "VernacExtend",
                        "55db1d4301f83881038abb6f1aa956508b441983"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_dL_dL_7 a b c d e f g h (dL xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_4 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "51d4862aa5abb3dd93094f58d26b4d40909e48b4"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign (a + b + c + d) (b + d) (c + d) d (e + f + g + h) (f + h) (g + h) h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_2 (a + b + c + d)%Z (b + d)%Z (c + d)%Z d (e + f + g + h)%Z (f + h)%Z (g + h)%Z h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "330499833d84f1236722f9da79c036d2c993d9ba"
                    ]
                },
                {
                    "command": [
                        "intro Hfgh'.",
                        "VernacExtend",
                        "345b6667cec5f818822048df8b93ef410d8ff631"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_1_dec_inf o1 o2).",
                        "VernacExtend",
                        "d295c561ef561fb8b649e6303ce92c0f0681eb8f"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_1.",
                        "VernacExtend",
                        "068d44eb2eb58699356ab84ee948b8147fe0eef5"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_8 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "084252fe935af0a92ac7feca5fe44fa253615116"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (1%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "fd701895c1b9f263984d547d9671bfdb2c9800b5"
                    ]
                },
                {
                    "command": [
                        "discriminate hl.",
                        "VernacExtend",
                        "f643a20865d0dde2f37d19887cfd4265938120b1"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_1'.",
                        "VernacExtend",
                        "2ec567de4490f9d472a6a6a40281eff13e5732a9"
                    ]
                },
                {
                    "command": [
                        "case (inside_square_2_dec_inf o1 o2).",
                        "VernacExtend",
                        "7682baf8a4bbff99d50bdda519b1ba70e3c47898"
                    ]
                },
                {
                    "command": [
                        "intro H_inside_2.",
                        "VernacExtend",
                        "b4e80bee310800c8c137b8b864721e5c3244f673"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_nRdL_9 a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "01ac32711281d55d5e8790d70a8a118de564f06e"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = ((-1)%Z, (a, (b, (c, d)), (e, (f, (g, h))), (dL xs, dL ys)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq | apply H1; discriminate || (repeat split) ]; assumption | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end ].",
                        "VernacExtend",
                        "d486b4ac502e83592b625a26cb69444f61e23790"
                    ]
                },
                {
                    "command": [
                        "left; left; left; left; left; case (inside_square_2_inf _ _ H_inside_2); intros (Ho1, Ho2); [ left | right ]; repeat split; first [ apply Z.le_refl | match goal with | |- (0 <= ?X1)%Z => apply Zlt_le_weak; apply Zsgn_9; apply Z.opp_inj | |- (?X1 <= 0)%Z => apply Zlt_le_weak; apply Zsgn_10 end; apply sym_eq; assumption | unfold o1 in Ho1; unfold o2 in Ho2; match goal with | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X1)%Z => apply outside_square_3 with X2 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X2)%Z => apply outside_square_4 with X1 X3 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X3)%Z => apply outside_square_5 with X1 X2 X4 | id1:(2 < outside_square ?X1 ?X2 ?X3 ?X4)%Z |- (0 <= ?X4)%Z => apply outside_square_6 with X1 X2 X3 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X1 <= 0)%Z => apply outside_square_7 with X2 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X2 <= 0)%Z => apply outside_square_8 with X1 X3 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X3 <= 0)%Z => apply outside_square_9 with X1 X2 X4 | id1:(outside_square ?X1 ?X2 ?X3 ?X4 < -2)%Z |- (?X4 <= 0)%Z => apply outside_square_10 with X1 X2 X3 end; assumption ].",
                        "VernacExtend",
                        "1760d88dcbd858245756e0fe0b51238776c2b9d6"
                    ]
                },
                {
                    "command": [
                        "intros H_inside_2'.",
                        "VernacExtend",
                        "4f65b53b2c7b3936fda163236abffb01421ea904"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_dL_dL_10 a b c d e f g h (dL xs) xs (dL ys) ys H_Qquadratic_sg_denom_nonzero (Qquadratic_signok_4 _ _ _ _ _ _ H_Qquadratic_sg_denom_nonzero) (refl_equal _) (refl_equal _)).",
                        "VernacExtend",
                        "92aabbab4ba412dd08be60745aa35f49b983e5c9"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : Qquadratic_sign (a + b + c + d) (b + d) (c + d) d (e + f + g + h) (f + h) (g + h) h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) = ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) (dL ys) H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; apply H1; repeat split | idtac ] | apply (Qquadratic_sign_neg_2 (a + b + c + d)%Z (b + d)%Z (c + d)%Z d (e + f + g + h)%Z (f + h)%Z (g + h)%Z h xs ys (Qquadratic_signok_4 e f g h xs ys H_Qquadratic_sg_denom_nonzero) na nb nc nd ne nf ng nh np1 np2) ]; assumption.",
                        "VernacExtend",
                        "330499833d84f1236722f9da79c036d2c993d9ba"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_signok_0' _ _ _ _ _ H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "82ba942058f599dab626c16f3958e19a9e8856b7"
                    ]
                },
                {
                    "command": [
                        "intros H_Qhomographic_sg_denom_nonzero.",
                        "VernacExtend",
                        "7ee186f9a3e15bd36020fb30747a871aa671241b"
                    ]
                },
                {
                    "command": [
                        "set (L3 := Qhomographic_sign (a + b) (c + d) (e + f) (g + h) (dL xs) H_Qhomographic_sg_denom_nonzero) in *.",
                        "VernacExtend",
                        "bbcac23fd22aa8b7c66b46a28b66bc764c9d21df"
                    ]
                },
                {
                    "command": [
                        "set (l1 := fst L3) in *.",
                        "VernacExtend",
                        "53a0156fadda9545b3aad23e6562a9f7571500e5"
                    ]
                },
                {
                    "command": [
                        "set (l2 := fst (snd L3)) in *.",
                        "VernacExtend",
                        "d2ff6d484662d1ffc681d957fae47d75d4f0ffe7"
                    ]
                },
                {
                    "command": [
                        "set (l3 := snd (snd L3)) in *.",
                        "VernacExtend",
                        "a4f4a2a7a6777d6cf8547330f649c7e802134835"
                    ]
                },
                {
                    "command": [
                        "set (na_ := fst l2) in *.",
                        "VernacExtend",
                        "4cc5c8cdb69c666a5ed03e05d9c5d3bf6b3508c8"
                    ]
                },
                {
                    "command": [
                        "set (nb_ := fst (snd l2)) in *.",
                        "VernacExtend",
                        "c689e91162d844443766f43d357817dbbb7e3d29"
                    ]
                },
                {
                    "command": [
                        "set (nc_ := fst (snd (snd l2))) in *.",
                        "VernacExtend",
                        "77cd624092e8a297c0e31fd1f7dd984499cdbe5d"
                    ]
                },
                {
                    "command": [
                        "set (nd_ := snd (snd (snd l2))) in *.",
                        "VernacExtend",
                        "3b6670693e7eae913c0e386dd06bc54541698adc"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_nRdL_One a b c d e f g h (dL xs) One H_Qquadratic_sg_denom_nonzero l1 na_ nb_ nc_ nd_ l3 H_Qhomographic_sg_denom_nonzero); intros H1.",
                        "VernacExtend",
                        "729fdcd685e6089ef0bda9bddf52a935a2f85311"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (l1, (0%Z, (na_, (0%Z, nb_)), (0%Z, (nc_, (0%Z, nd_))), (l3, One)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h (dL xs) One H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; assumption | apply H1; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity ] | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end; repeat rewrite ZERO_left; repeat rewrite Zplus_0_r ].",
                        "VernacExtend",
                        "6f9813b63066d105b126b138d9d4e5787232aabe"
                    ]
                },
                {
                    "command": [
                        "assert (H_sg_unfolded : Qhomographic_sign (a + b) (c + d) (e + f) (g + h) (dL xs) H_Qhomographic_sg_denom_nonzero = ((-1)%Z, (na_, (nb_, (nc_, nd_)), l3))).",
                        "VernacExtend",
                        "4c71c7818220ac25fa0d2f0817254670bedab7c4"
                    ]
                },
                {
                    "command": [
                        "rewrite hl; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity.",
                        "VernacExtend",
                        "92853c2a640fbbf7420687b2cc9dd9d0f8561009"
                    ]
                },
                {
                    "command": [
                        "generalize (sg_neg_2 (a + b) (c + d) (e + f) (g + h) (dL xs) H_Qhomographic_sg_denom_nonzero na_ nb_ nc_ nd_ l3 H_sg_unfolded).",
                        "VernacExtend",
                        "a0a09dd1a0817e2ab95bbbffa972189e7d16d3a9"
                    ]
                },
                {
                    "command": [
                        "intros [[(H_a, (H_b, (H_c, H_d)))| (H_a, (H_b, (H_c, H_d)))]| H_l3]; [ case l3; left; [ right; repeat split; assumption || discriminate | right; repeat split; assumption || discriminate | left; right; repeat split ] | case l3; [ right; repeat split; assumption || discriminate | right; repeat split; assumption || discriminate | left; left; right; repeat split ] | left; left; right; repeat split; assumption ].",
                        "VernacExtend",
                        "cb3ad86028a07cb387904a1b8cf99c0e91f24b08"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_signok_0 _ _ _ _ _ H_Qquadratic_sg_denom_nonzero).",
                        "VernacExtend",
                        "891278ce1d1d1a595b0c37c3d03fef7ef0e6f7fa"
                    ]
                },
                {
                    "command": [
                        "intros H_Qhomographic_sg_denom_nonzero.",
                        "VernacExtend",
                        "7ee186f9a3e15bd36020fb30747a871aa671241b"
                    ]
                },
                {
                    "command": [
                        "set (L3 := Qhomographic_sign (a + c) (b + d) (e + g) (f + h) p2 H_Qhomographic_sg_denom_nonzero) in *.",
                        "VernacExtend",
                        "a3acce1fe502fff654a4ab9f8e3264e43d54debe"
                    ]
                },
                {
                    "command": [
                        "set (l1 := fst L3) in *.",
                        "VernacExtend",
                        "53a0156fadda9545b3aad23e6562a9f7571500e5"
                    ]
                },
                {
                    "command": [
                        "set (l2 := fst (snd L3)) in *.",
                        "VernacExtend",
                        "d2ff6d484662d1ffc681d957fae47d75d4f0ffe7"
                    ]
                },
                {
                    "command": [
                        "set (l3 := snd (snd L3)) in *.",
                        "VernacExtend",
                        "a4f4a2a7a6777d6cf8547330f649c7e802134835"
                    ]
                },
                {
                    "command": [
                        "set (na_ := fst l2) in *.",
                        "VernacExtend",
                        "4cc5c8cdb69c666a5ed03e05d9c5d3bf6b3508c8"
                    ]
                },
                {
                    "command": [
                        "set (nb_ := fst (snd l2)) in *.",
                        "VernacExtend",
                        "c689e91162d844443766f43d357817dbbb7e3d29"
                    ]
                },
                {
                    "command": [
                        "set (nc_ := fst (snd (snd l2))) in *.",
                        "VernacExtend",
                        "77cd624092e8a297c0e31fd1f7dd984499cdbe5d"
                    ]
                },
                {
                    "command": [
                        "set (nd_ := snd (snd (snd l2))) in *.",
                        "VernacExtend",
                        "3b6670693e7eae913c0e386dd06bc54541698adc"
                    ]
                },
                {
                    "command": [
                        "generalize (Qquadratic_sign_One_y a b c d e f g h One p2 H_Qquadratic_sg_denom_nonzero l1 na_ nb_ nc_ nd_ l3 H_Qhomographic_sg_denom_nonzero); intros H1.",
                        "VernacExtend",
                        "0f9e0cc2712b63c207db1a772be8487cca639a7f"
                    ]
                },
                {
                    "command": [
                        "assert (H_tuple_eq : ((-1)%Z, (na, (nb, (nc, nd)), (ne, (nf, (ng, nh))), (np1, np2))) = (l1, (0%Z, (0%Z, (na_, nb_)), (0%Z, (0%Z, (nc_, nd_))), (One, l3)))); [ apply trans_eq with (Qquadratic_sign a b c d e f g h One p2 H_Qquadratic_sg_denom_nonzero); [ apply sym_eq; assumption | apply H1; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity ] | generalize (Qquadratic_sign_tuple_equal _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H_tuple_eq); intros (hl, ((hna, (hnb, (hnc, (hnd, (hne, (hnf, (hng, hnh))))))), (hp1, hp2))); do 10 match goal with | id1:(?X1 = ?X2) |- ?X3 => try rewrite id1; clear id1 end; repeat rewrite ZERO_left; repeat rewrite Zplus_0_r ].",
                        "VernacExtend",
                        "443a1578b04a5bf68e9dc2d802fbf700d89f560b"
                    ]
                },
                {
                    "command": [
                        "assert (H_sg_unfolded : Qhomographic_sign (a + c) (b + d) (e + g) (f + h) p2 H_Qhomographic_sg_denom_nonzero = ((-1)%Z, (na_, (nb_, (nc_, nd_)), l3))).",
                        "VernacExtend",
                        "187ed24298d3a15d7c41942556b3af18cf67a7c4"
                    ]
                },
                {
                    "command": [
                        "rewrite hl; fold L3 in |- *; repeat (apply pair_2; try reflexivity); discriminate || reflexivity.",
                        "VernacExtend",
                        "92853c2a640fbbf7420687b2cc9dd9d0f8561009"
                    ]
                },
                {
                    "command": [
                        "generalize (sg_neg_2 (a + c) (b + d) (e + g) (f + h) p2 H_Qhomographic_sg_denom_nonzero na_ nb_ nc_ nd_ l3 H_sg_unfolded).",
                        "VernacExtend",
                        "3aab85fd2b7b9ebe197350163c884571b4c00bc7"
                    ]
                },
                {
                    "command": [
                        "intros [[(H_a, (H_b, (H_c, H_d)))| (H_a, (H_b, (H_c, H_d)))]| H_l3]; left; left; [ left; left; right | left; right | right ]; repeat split; assumption.",
                        "VernacExtend",
                        "48b2c5d6d338c6db1bdc78b94b03fee63545fa97"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}