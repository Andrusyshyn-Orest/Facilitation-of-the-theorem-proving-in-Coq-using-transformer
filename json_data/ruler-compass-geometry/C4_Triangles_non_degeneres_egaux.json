{
    "filename": "C4_Triangles_non_degeneres_egaux.v",
    "coq_project": "ruler-compass-geometry",
    "vernac_cmds": [
        [
            "Require Export C3_Triangles_Egaux.",
            "VernacRequire",
            "8fe4c310283fd887695c492771e3a755024c72f8"
        ],
        [
            "Section CONGRUENT_STRICT_TRIANGLES.",
            "VernacBeginSection",
            "4df0494f392dacab0f3ebb85ddabc133e534109a"
        ],
        [
            "Definition CongruentStrictTriangles (A B C A' B' C' : Point) := CongruentTriangles A B C A' B' C' /\\ ~Collinear A B C.",
            "VernacDefinition",
            "5f82b9cd94fc571b0ed87b7bf92bf8c36b096fdd"
        ],
        [
            "Lemma CongruentStrictTrianglesSym : forall A B C A' B' C' : Point, CongruentStrictTriangles A B C A' B' C' -> CongruentStrictTriangles A' B' C' A B C.",
            "VernacStartTheoremProof",
            "d6a33c4f521052e4e95084fa470676d54ee0b6d3"
        ],
        [
            "unfold CongruentStrictTriangles in |- *; intuition.",
            "VernacExtend",
            "f231b322149d4acfe11755bf0b3878a09cdd8a1a"
        ],
        [
            "apply CongruentTrianglesSym; trivial.",
            "VernacExtend",
            "119868685b9951f3ade51a62e40841f77ccf2a2f"
        ],
        [
            "unfold CongruentTriangles in H0; decompose [and] H0; clear H0.",
            "VernacExtend",
            "a348e6f45932f29889c3195c18ef2dd286dd2f92"
        ],
        [
            "assert (A' <> B').",
            "VernacExtend",
            "02db2db58c1cbfccda17504b04746954a4f45953"
        ],
        [
            "intro; subst.",
            "VernacExtend",
            "9021e22274b6259ff513a190b208a4a3aa9b2ede"
        ],
        [
            "elim (NotCollinearDistinctAB _ _ _ H1).",
            "VernacExtend",
            "e9cb290ad278ccc21cc7aa226b7882946ce1d81a"
        ],
        [
            "apply DistNull; rewrite H2; apply NullDist.",
            "VernacExtend",
            "5f85c759b62ac3b4f73316f8c99f3270fb4ba82c"
        ],
        [
            "decompose [or] (FourCases A' B' C').",
            "VernacExtend",
            "3ecf8556f72e611e3cfa6fff5cefba7e4ae3a16b"
        ],
        [
            "elim (CollinearNotClockwiseABC _ _ _ H); trivial.",
            "VernacExtend",
            "b3a0793434dce66bdb9aab144c51c3e609fbd594"
        ],
        [
            "elim (CollinearNotClockwiseBAC _ _ _ H); trivial.",
            "VernacExtend",
            "492a45c0857ad3a670a9c707b12839edace55ba7"
        ],
        [
            "decompose [or] (FourCases B' C' A').",
            "VernacExtend",
            "5c3545ffa450fe88432e97cb9c0fe97f26141c35"
        ],
        [
            "elim (CollinearNotClockwiseABC _ _ _ H); apply ClockwiseCAB; trivial.",
            "VernacExtend",
            "e2f5b054e37348b2514841c90aaab6ab21a17f01"
        ],
        [
            "elim (CollinearNotClockwiseBAC _ _ _ H); apply ClockwiseBCA; trivial.",
            "VernacExtend",
            "4a7bc790b9aa5e09428451aaabfb26b11dd1c85a"
        ],
        [
            "destruct (ChaslesRec A C B).",
            "VernacExtend",
            "b8a220d9182b76ba45fa60cc13b0b1f6736ee2cc"
        ],
        [
            "rewrite (DistSym A C); rewrite H5; rewrite (DistSym C' A').",
            "VernacExtend",
            "f22e06c7d3e0a7d0c89b82ec102874a99dfe9420"
        ],
        [
            "rewrite (DistSym C B); rewrite H4; rewrite (DistSym B' C').",
            "VernacExtend",
            "0617d0410fce276b295785c3e236bedbd8a4bec8"
        ],
        [
            "rewrite H2; apply Chasles.",
            "VernacExtend",
            "ca24e2c02e6c6695ca3a15c82417bcfa5a8df09c"
        ],
        [
            "apply HalfLineSym; trivial.",
            "VernacExtend",
            "1820c07b4d82b7d69ac8f032296b8ed167f7fa48"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "elim H1; apply CollinearACB; apply HalfLineCollinear; trivial.",
            "VernacExtend",
            "3ff162b9d788c1df9e156025890f840a1d8c348a"
        ],
        [
            "destruct (ChaslesRec A B C).",
            "VernacExtend",
            "e3b3e8531504c0a72028a316ea5bc1c13e31d038"
        ],
        [
            "rewrite H2; rewrite H4; rewrite (DistSym A C); rewrite H5; rewrite (DistSym C' A').",
            "VernacExtend",
            "7700450fab006b4b744e6819fd6cbbd9cdbb3bdf"
        ],
        [
            "apply Chasles; auto.",
            "VernacExtend",
            "9fedbd51b4f9775e3605762a39d12214d29d3b54"
        ],
        [
            "elim H1; apply HalfLineCollinear; trivial.",
            "VernacExtend",
            "f355373a91d0d47d75fe71da6e0d1bb5239382ab"
        ],
        [
            "decompose [or] (FourCases A' C' B').",
            "VernacExtend",
            "6fe744c827b907bce85560ec7b608e1bc73921af"
        ],
        [
            "elim (CollinearNotClockwiseBAC _ _ _ H); apply ClockwiseCAB; trivial.",
            "VernacExtend",
            "c7ab9067c50a1ac5fa0b24e06c7e03df5cb2c5d6"
        ],
        [
            "elim (CollinearNotClockwiseABC _ _ _ H); apply ClockwiseBCA; trivial.",
            "VernacExtend",
            "c8ae8dbe25804b6f2de3c10e3b3e531c0766d715"
        ],
        [
            "destruct (ChaslesRec A C B).",
            "VernacExtend",
            "b8a220d9182b76ba45fa60cc13b0b1f6736ee2cc"
        ],
        [
            "rewrite (DistSym A C); rewrite H5; rewrite (DistSym C' A').",
            "VernacExtend",
            "f22e06c7d3e0a7d0c89b82ec102874a99dfe9420"
        ],
        [
            "rewrite (DistSym C B); rewrite H4; rewrite (DistSym B' C').",
            "VernacExtend",
            "0617d0410fce276b295785c3e236bedbd8a4bec8"
        ],
        [
            "rewrite H2; apply Chasles.",
            "VernacExtend",
            "ca24e2c02e6c6695ca3a15c82417bcfa5a8df09c"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply HalfLineSym; auto.",
            "VernacExtend",
            "a9f2fa640518621c5f0ea456fb944837c6ed0712"
        ],
        [
            "elim H1; apply CollinearACB; apply HalfLineCollinear; trivial.",
            "VernacExtend",
            "3ff162b9d788c1df9e156025890f840a1d8c348a"
        ],
        [
            "destruct (ChaslesRec B A C).",
            "VernacExtend",
            "27cb5df2e4b94135c324930afa1ef6e19203158c"
        ],
        [
            "rewrite (DistSym B A); rewrite H2; rewrite (DistSym A' B').",
            "VernacExtend",
            "0eda5b2c21ce95090aa5450ab08e5323ed5e11be"
        ],
        [
            "rewrite (DistSym A C); rewrite H5; rewrite (DistSym C' A').",
            "VernacExtend",
            "f22e06c7d3e0a7d0c89b82ec102874a99dfe9420"
        ],
        [
            "rewrite H4; apply Chasles; trivial.",
            "VernacExtend",
            "1e9fa08b11663b82de16c7ec76c938efb3f3d916"
        ],
        [
            "elim H1; apply CollinearBAC; apply HalfLineCollinear; trivial.",
            "VernacExtend",
            "200e5283e64e20167fbd118088404cefd7f54d12"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CongruentStrictTrianglesBAC : forall A B C A' B' C' : Point, CongruentStrictTriangles A B C A' B' C' -> CongruentStrictTriangles B A C B' A' C'.",
            "VernacStartTheoremProof",
            "ebff97cd1dd3d0c56d36e2a129fa2ab98c2f8436"
        ],
        [
            "unfold CongruentStrictTriangles in |- *; intuition.",
            "VernacExtend",
            "f231b322149d4acfe11755bf0b3878a09cdd8a1a"
        ],
        [
            "apply CongruentTrianglesBAC; trivial.",
            "VernacExtend",
            "aedb150a56709e95fac5947f5e3c3f0ae0c8f0ad"
        ],
        [
            "elim H1; autoCollinear.",
            "VernacExtend",
            "737c6791ecb5b8e0f810cab746f91f8575a0d219"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CongruentStrictTrianglesACB : forall A B C A' B' C' : Point, CongruentStrictTriangles A B C A' B' C' -> CongruentStrictTriangles A C B A' C' B'.",
            "VernacStartTheoremProof",
            "45f22f2e4bddcabe2543995312591bea837f3383"
        ],
        [
            "unfold CongruentStrictTriangles in |- *; intuition.",
            "VernacExtend",
            "f231b322149d4acfe11755bf0b3878a09cdd8a1a"
        ],
        [
            "apply CongruentTrianglesACB; trivial.",
            "VernacExtend",
            "3d89af00f6ea682485dc6cfff7dc5e0de696994d"
        ],
        [
            "elim H1; autoCollinear.",
            "VernacExtend",
            "737c6791ecb5b8e0f810cab746f91f8575a0d219"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CongruentStrictTrianglesCBA : forall A B C A' B' C' : Point, CongruentStrictTriangles A B C A' B' C' -> CongruentStrictTriangles C B A C' B' A'.",
            "VernacStartTheoremProof",
            "e096ce188d39cfa517e5a9dc91e491ac94778ef2"
        ],
        [
            "unfold CongruentStrictTriangles in |- *; intuition.",
            "VernacExtend",
            "f231b322149d4acfe11755bf0b3878a09cdd8a1a"
        ],
        [
            "apply CongruentTrianglesCBA; trivial.",
            "VernacExtend",
            "d7de4cf8fa07b20b73c05c61781cb6aa0fe40d83"
        ],
        [
            "elim H1; autoCollinear.",
            "VernacExtend",
            "737c6791ecb5b8e0f810cab746f91f8575a0d219"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CongruentStrictTrianglesBCA : forall A B C A' B' C' : Point, CongruentStrictTriangles A B C A' B' C' -> CongruentStrictTriangles B C A B' C' A'.",
            "VernacStartTheoremProof",
            "c9a33b1990f66bed77753d5e4ad6cceb17235b42"
        ],
        [
            "unfold CongruentStrictTriangles in |- *; intuition.",
            "VernacExtend",
            "f231b322149d4acfe11755bf0b3878a09cdd8a1a"
        ],
        [
            "apply CongruentTrianglesBCA; trivial.",
            "VernacExtend",
            "37653de9b61c2fd5b75889ed497e9b59b13cbf02"
        ],
        [
            "elim H1; autoCollinear.",
            "VernacExtend",
            "737c6791ecb5b8e0f810cab746f91f8575a0d219"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CongruentStrictTrianglesCAB : forall A B C A' B' C' : Point, CongruentStrictTriangles A B C A' B' C' -> CongruentStrictTriangles C A B C' A' B'.",
            "VernacStartTheoremProof",
            "c1e83597520f1ca9ec7f86d2173d51d768d04ee3"
        ],
        [
            "unfold CongruentStrictTriangles in |- *; intuition.",
            "VernacExtend",
            "f231b322149d4acfe11755bf0b3878a09cdd8a1a"
        ],
        [
            "apply CongruentTrianglesCAB; trivial.",
            "VernacExtend",
            "99b234f8f2bf9865492601f19374ce1092d28408"
        ],
        [
            "elim H1; autoCollinear.",
            "VernacExtend",
            "737c6791ecb5b8e0f810cab746f91f8575a0d219"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CongruentStrictTrianglesAB : forall A B C A' B' C' : Point, CongruentStrictTriangles A B C A' B' C' -> Distance A B = Distance A' B'.",
            "VernacStartTheoremProof",
            "50c1757df03037d933d7518eba1663cbaa2b4b03"
        ],
        [
            "unfold CongruentStrictTriangles in |- *; intuition.",
            "VernacExtend",
            "f231b322149d4acfe11755bf0b3878a09cdd8a1a"
        ],
        [
            "apply (CongruentTrianglesAB _ _ _ _ _ _ H0).",
            "VernacExtend",
            "601a8e535f8749e0b320a6d0834b16ed7f85303c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CongruentStrictTrianglesBC : forall A B C A' B' C' : Point, CongruentStrictTriangles A B C A' B' C' -> Distance B C = Distance B' C'.",
            "VernacStartTheoremProof",
            "6126345bb659ed04057d6abd1cf70d64eaa67e34"
        ],
        [
            "unfold CongruentStrictTriangles in |- *; intuition.",
            "VernacExtend",
            "f231b322149d4acfe11755bf0b3878a09cdd8a1a"
        ],
        [
            "apply (CongruentTrianglesBC _ _ _ _ _ _ H0).",
            "VernacExtend",
            "0434d65fd6ec10f2bdc88b775a25ade6e3fc99b4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CongruentStrictTrianglesCA : forall A B C A' B' C' : Point, CongruentStrictTriangles A B C A' B' C' -> Distance C A = Distance C' A'.",
            "VernacStartTheoremProof",
            "86c19bd6cd31b56ea7c6799fe1159095abf6ef2c"
        ],
        [
            "unfold CongruentStrictTriangles in |- *; intuition.",
            "VernacExtend",
            "f231b322149d4acfe11755bf0b3878a09cdd8a1a"
        ],
        [
            "apply (CongruentTrianglesCA _ _ _ _ _ _ H0).",
            "VernacExtend",
            "96d55573046fb8825008b1ce3efbf6a126bb3b50"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CongruentStrictTrianglesA : forall A B C A' B' C' : Point, CongruentStrictTriangles A B C A' B' C' -> Angle B A C = Angle B' A' C'.",
            "VernacStartTheoremProof",
            "d89af421a516ac462f2283c4821c307ec655bc72"
        ],
        [
            "unfold CongruentStrictTriangles in |- *; intuition.",
            "VernacExtend",
            "f231b322149d4acfe11755bf0b3878a09cdd8a1a"
        ],
        [
            "apply CongruentTrianglesA.",
            "VernacExtend",
            "0fa4401d44200dd78c42c7079d93dece4dddb5a4"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply (NotCollinearDistinctAB _ _ _ H1).",
            "VernacExtend",
            "814118b4a93b8b8291198e7e5674fc4513e9a90a"
        ],
        [
            "apply (sym_not_eq (NotCollinearDistinctCA _ _ _ H1)).",
            "VernacExtend",
            "dcd7726a34932b23f792bead10b2ddbbc90ca083"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CongruentStrictTrianglesB : forall A B C A' B' C' : Point, CongruentStrictTriangles A B C A' B' C' -> Angle A B C = Angle A' B' C'.",
            "VernacStartTheoremProof",
            "8ae0224f222724a195b2eab15546b9713949d5ef"
        ],
        [
            "intros; apply CongruentStrictTrianglesA.",
            "VernacExtend",
            "ec6401884ffacf41ce6d7a48839c01a0f2e06235"
        ],
        [
            "apply CongruentStrictTrianglesBAC; trivial.",
            "VernacExtend",
            "664a24b19c348a4f54d43b7ad19b2697a2e8c82f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CongruentStrictTrianglesC : forall A B C A' B' C' : Point, CongruentStrictTriangles A B C A' B' C' -> Angle A C B = Angle A' C' B'.",
            "VernacStartTheoremProof",
            "27cf0361eabf8defe7042904fc00b6d30d6eacc5"
        ],
        [
            "intros; apply CongruentStrictTrianglesA.",
            "VernacExtend",
            "ec6401884ffacf41ce6d7a48839c01a0f2e06235"
        ],
        [
            "apply CongruentStrictTrianglesCAB; trivial.",
            "VernacExtend",
            "ba6e0b45476c3d6e9218e61f2aa858df450e1324"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CongruentStrictTrianglesSASA : forall A B C A' B' C' : Point, Distance A B = Distance A' B' -> Distance A C = Distance A' C' -> Angle B A C = Angle B' A' C' -> ~Collinear A B C -> CongruentStrictTriangles A B C A' B' C'.",
            "VernacStartTheoremProof",
            "915c3737d977e269b0fb72f001d82ee2a4bd96e9"
        ],
        [
            "unfold CongruentStrictTriangles in |- *; intuition.",
            "VernacExtend",
            "f231b322149d4acfe11755bf0b3878a09cdd8a1a"
        ],
        [
            "apply CongruentTrianglesSASA; auto.",
            "VernacExtend",
            "5a44342c9462e01ec257d8b183d4815e59c43fba"
        ],
        [
            "apply (NotCollinearDistinctAB _ _ _ H2).",
            "VernacExtend",
            "ff76e5d394ad94dae540ce6eab63f813359d7ddc"
        ],
        [
            "apply (sym_not_eq (NotCollinearDistinctCA _ _ _ H2)).",
            "VernacExtend",
            "e9b744782af0d350791bd472d97890cdce91f5ef"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CongruentStrictTrianglesSASB : forall A B C A' B' C' : Point, Distance B A = Distance B' A' -> Distance B C = Distance B' C' -> Angle A B C = Angle A' B' C' -> ~Collinear A B C -> CongruentStrictTriangles A B C A' B' C'.",
            "VernacStartTheoremProof",
            "f9ba7dac751f2de29618703f46aa25910c873dd9"
        ],
        [
            "unfold CongruentStrictTriangles in |- *; intuition.",
            "VernacExtend",
            "f231b322149d4acfe11755bf0b3878a09cdd8a1a"
        ],
        [
            "apply CongruentTrianglesSASB; auto.",
            "VernacExtend",
            "ffa16fb5ed4a6488db5f8d86ec3b246036f5232a"
        ],
        [
            "apply (sym_not_eq (NotCollinearDistinctAB _ _ _ H2)).",
            "VernacExtend",
            "0cc54fe92d415f618eeecc0b984cf72f0a4c468d"
        ],
        [
            "apply (NotCollinearDistinctBC _ _ _ H2).",
            "VernacExtend",
            "abaac12bd8dfdae8667b4b1cc5dede4d5f60f1ec"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CongruentStrictTrianglesSASC : forall A B C A' B' C' : Point, Distance C A = Distance C' A' -> Distance C B = Distance C' B' -> Angle A C B = Angle A' C' B' -> ~Collinear A B C -> CongruentStrictTriangles A B C A' B' C'.",
            "VernacStartTheoremProof",
            "12a9f662146bf90c0c962d5653a90b45e4750933"
        ],
        [
            "unfold CongruentStrictTriangles in |- *; intuition.",
            "VernacExtend",
            "f231b322149d4acfe11755bf0b3878a09cdd8a1a"
        ],
        [
            "apply CongruentTrianglesSASC; auto.",
            "VernacExtend",
            "dcb8f5a94c060aedfffc9f9121195e833aab8462"
        ],
        [
            "apply (NotCollinearDistinctCA _ _ _ H2).",
            "VernacExtend",
            "4e9230becfba00277503261482d061fd182e509a"
        ],
        [
            "apply (sym_not_eq (NotCollinearDistinctBC _ _ _ H2)).",
            "VernacExtend",
            "989773e4f0e299939f992adfb04fd3ab0eabe23b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma EquiDirectedCollinear : forall A B C : Point, EquiDirected A B B C -> Collinear A B C.",
            "VernacStartTheoremProof",
            "52d9892995666a633ba08e7b422ff002763acabb"
        ],
        [
            "generalizeChange.",
            "VernacExtend",
            "d3c977ebf7f2c5588433912c8eb25fd198cbcf67"
        ],
        [
            "elim (NotClockwiseBAA C B); auto.",
            "VernacExtend",
            "b24d14d17801e9f0f26a4f26dbd1f4377067e148"
        ],
        [
            "elim (NotClockwiseBAA A B); apply H1; [ autoDistinct | autoClockwise ].",
            "VernacExtend",
            "b5917b6cdfd10f2867c6397f5d897af0e9636b43"
        ],
        [
            "elim (NotClockwiseABA C B); auto.",
            "VernacExtend",
            "92aac55dab3acf94e188798e3cf8ce364ceab9f1"
        ],
        [
            "assert (H2 := sym_not_eq (ClockwiseDistinctAB _ _ _ H0)).",
            "VernacExtend",
            "e39170821b2ad7cef742f98d9148eb8918f84749"
        ],
        [
            "elim (NotClockwiseBAA C B).",
            "VernacExtend",
            "6340d01daec8f809c2075077dd9bf80c18817e11"
        ],
        [
            "assert (H3 := H1 H2); clear H1.",
            "VernacExtend",
            "a7a521fbe4e3bc28be09d95950c369c771603a6f"
        ],
        [
            "generalizeChange.",
            "VernacExtend",
            "d3c977ebf7f2c5588433912c8eb25fd198cbcf67"
        ],
        [
            "apply H6; [ autoDistinct | autoClockwise ].",
            "VernacExtend",
            "fa52547ef1af03c86fc296b18fcbee7e6914da1d"
        ],
        [
            "elim (NotClockwiseABA C B); auto.",
            "VernacExtend",
            "92aac55dab3acf94e188798e3cf8ce364ceab9f1"
        ],
        [
            "elim (NotClockwiseBAA C B); auto.",
            "VernacExtend",
            "b24d14d17801e9f0f26a4f26dbd1f4377067e148"
        ],
        [
            "elim (NotClockwiseABA A B); apply H1; [ autoDistinct | autoClockwise ].",
            "VernacExtend",
            "4b2c0bbac2478224564a9bd4d6d328f068893ac8"
        ],
        [
            "elim (NotClockwiseABA C B); auto.",
            "VernacExtend",
            "92aac55dab3acf94e188798e3cf8ce364ceab9f1"
        ],
        [
            "elim (NotClockwiseABA A B); apply H0; autoClockwise.",
            "VernacExtend",
            "1d6cc5160fd2a4e9cd8827331739525ae612dda4"
        ],
        [
            "elim (NotClockwiseABA C B); apply H1; [ autoDistinct | autoClockwise ].",
            "VernacExtend",
            "c40d4f4359c08e344fc84f90b7e33de97d774238"
        ],
        [
            "elim (NotClockwiseBAA A B); apply H; autoClockwise.",
            "VernacExtend",
            "786cd8694d99d80dea5067b818494e5f323e7c75"
        ],
        [
            "elim (NotClockwiseABA A B); apply H2; autoClockwise.",
            "VernacExtend",
            "62efa00f623277873b854006b550c293b6474689"
        ],
        [
            "assert (H2 := sym_not_eq (ClockwiseDistinctBC _ _ _ H)).",
            "VernacExtend",
            "fd74676ad62af723a900286cf4eb05a4c5cfa5a7"
        ],
        [
            "assert (H3 := H1 H2); clear H1.",
            "VernacExtend",
            "a7a521fbe4e3bc28be09d95950c369c771603a6f"
        ],
        [
            "generalizeChange.",
            "VernacExtend",
            "d3c977ebf7f2c5588433912c8eb25fd198cbcf67"
        ],
        [
            "elim (NotClockwiseABA C B); auto.",
            "VernacExtend",
            "92aac55dab3acf94e188798e3cf8ce364ceab9f1"
        ],
        [
            "elim (NotClockwiseBAA C B); apply H1; [ autoDistinct | autoClockwise ].",
            "VernacExtend",
            "f2d9e00b80eff9667ec67545ffa2017dcd489ffd"
        ],
        [
            "elim (NotClockwiseBAA C B); apply H1; [ autoDistinct | autoClockwise ].",
            "VernacExtend",
            "f2d9e00b80eff9667ec67545ffa2017dcd489ffd"
        ],
        [
            "elim (NotClockwiseBAA A B); apply H0; autoClockwise.",
            "VernacExtend",
            "488be8678395be76f816384e8768257108fe365f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ClockwiseEq : forall A B C D : Point, Clockwise A B C -> Collinear A B D -> Collinear B C D -> B = D.",
            "VernacStartTheoremProof",
            "c4ba70c8c4bd1058fba88d69293c07101c7c98b9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (H2 := ClockwiseDistinctAB _ _ _ H).",
            "VernacExtend",
            "9d8a90f0e7feb6a69472997adaaa718c4c2dfde7"
        ],
        [
            "assert (H3 := ClockwiseDistinctBC _ _ _ H).",
            "VernacExtend",
            "7f226cbbae888ff1a445e94a13df286ff2d46bf6"
        ],
        [
            "setLine A B H2 ipattern:(AB) ipattern:(D1).",
            "VernacExtend",
            "f4e4fc5d3cb569716a1d4f3aa20eb1b9aebc10d7"
        ],
        [
            "setLine B C H3 ipattern:(BC) ipattern:(D2).",
            "VernacExtend",
            "d585f224a29a03fc659601ac5fec31feaf7e4325"
        ],
        [
            "setLinterL AB BC D1 D2 ipattern:(E) ipattern:(H4) ipattern:(H5) ipattern:(H6).",
            "VernacExtend",
            "00fd4947b5d8b857aea627d3550f23aa8b039be7"
        ],
        [
            "intro H4; elim (ClockwiseNotCollinear _ _ _ H).",
            "VernacExtend",
            "e890b70db8c2f3aea5fa29f577bc10ec79091bd7"
        ],
        [
            "apply EquiDirectedCollinear; trivial.",
            "VernacExtend",
            "482e0652b6e0f0acfaabd5d72cc9a506cae62bd0"
        ],
        [
            "rewrite <- (H6 D); intuition.",
            "VernacExtend",
            "5d4da8ab16f1d5a2ab51198cef444213accf709e"
        ],
        [
            "apply sym_eq; apply (H6 B); split; autoCollinear.",
            "VernacExtend",
            "007824dd8703fa6e7d2bbbfa67ca484e81e6c452"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CongruentStrictTrianglesASAAB : forall A B C A' B' C' : Point, Distance A B = Distance A' B' -> Angle B A C = Angle B' A' C' -> Angle A B C = Angle A' B' C' -> ~Collinear A B C -> CongruentStrictTriangles A B C A' B' C'.",
            "VernacStartTheoremProof",
            "4ddddb1fd943f9f97b7a29b3c6853afad844578b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "decompose [or] (FourCases A' B' C').",
            "VernacExtend",
            "3ecf8556f72e611e3cfa6fff5cefba7e4ae3a16b"
        ],
        [
            "destruct (ExistsHalfLineEquidistant A' C' A C) as (C'', (H4, H5)).",
            "VernacExtend",
            "d870fcd98ad74f214c4f2c996b6f121df5e38ae2"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "assert (H4 := NotCollinearDistinctCA _ _ _ H2); auto.",
            "VernacExtend",
            "8fdb3ea396d2105ba0ec64f73d44f2f3767651a2"
        ],
        [
            "assert (H6 : CongruentStrictTriangles A B C A' B' C'').",
            "VernacExtend",
            "894ca9ec0e5f7ae0f14c0ffca7d31156fa8052f9"
        ],
        [
            "apply CongruentStrictTrianglesSASA; auto.",
            "VernacExtend",
            "8ba61824ac68679362ebb60768ed8c59047ef165"
        ],
        [
            "rewrite H0; apply (HalfLineAngleC A' B' C' C''); autoDistinct.",
            "VernacExtend",
            "92d95f3531cbda1a07935c472536fdf03c170cf5"
        ],
        [
            "assert (H7 : C' = C'').",
            "VernacExtend",
            "22d2a3a3a2f0726f9daa14914232e23f9ac90b64"
        ],
        [
            "apply (ClockwiseEq B' C' A' C'').",
            "VernacExtend",
            "4d401f1e783ba046d25e6ab63c75eb6cbc58189b"
        ],
        [
            "autoClockwise.",
            "VernacExtend",
            "9409e85b86446941015e1da6ca2353051468a0c2"
        ],
        [
            "apply HalfLineCollinear.",
            "VernacExtend",
            "a29b52129acde266125f3d8837e9fd8ec3503d8a"
        ],
        [
            "apply (AngleBHalfLine B' C' A' C'').",
            "VernacExtend",
            "206f7b43f3b191176b37862136de34b14aa56a18"
        ],
        [
            "autoClockwise.",
            "VernacExtend",
            "9409e85b86446941015e1da6ca2353051468a0c2"
        ],
        [
            "generalizeChangeSense.",
            "VernacExtend",
            "be975c77c59224ac5239b36f960f98e48421bb54"
        ],
        [
            "apply ClockwiseCAB; apply H2; autoClockwise.",
            "VernacExtend",
            "9a23b2bf53c869555be619dbcb0cc5d572e2e71c"
        ],
        [
            "rewrite AngleSym; [ rewrite <- H1 | autoDistinct | autoDistinct ].",
            "VernacExtend",
            "3dbb5092ab88a38e7e8111a3309f61acd8354d0d"
        ],
        [
            "rewrite (AngleSym B' C'' A').",
            "VernacExtend",
            "97f76b9c575beaff9241a74b4b5a7bd1d240bcb9"
        ],
        [
            "apply (CongruentStrictTrianglesB _ _ _ _ _ _ H6).",
            "VernacExtend",
            "08bd81934277effb8ec4474cd716367e686815f8"
        ],
        [
            "intro; subst.",
            "VernacExtend",
            "9021e22274b6259ff513a190b208a4a3aa9b2ede"
        ],
        [
            "elim (ClockwiseNotCollinear _ _ _ H3); apply CollinearACB; apply HalfLineCollinear; trivial.",
            "VernacExtend",
            "0b3ef4853755ebee476a00b01aece693b9422349"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "apply CollinearBAC; apply HalfLineCollinear; trivial.",
            "VernacExtend",
            "f5c39eefea8e7e52d5f1636e4436e997b1635206"
        ],
        [
            "rewrite H7; trivial.",
            "VernacExtend",
            "1280b16392ee9891d94ee071838bac2ec6538975"
        ],
        [
            "destruct (ExistsHalfLineEquidistant B' C' B C) as (C'', (H5, H6)).",
            "VernacExtend",
            "b588a7cedb8b180117f7162b093d6d0785659f59"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "apply (NotCollinearDistinctBC _ _ _ H2); trivial.",
            "VernacExtend",
            "0ff232471ffe19fc4e2e94904db1de1d7d0e7fdc"
        ],
        [
            "assert (H7 : CongruentStrictTriangles B A C B' A' C'').",
            "VernacExtend",
            "547f3f207e8b3c50b58dbb6a46d6770497a31516"
        ],
        [
            "apply CongruentStrictTrianglesSASA.",
            "VernacExtend",
            "eed8d6d20c117025cee48565ebf8ee590f5b8f75"
        ],
        [
            "autoDistance.",
            "VernacExtend",
            "0c749375e926c665509e5f0134261461e6f9bac3"
        ],
        [
            "autoDistance.",
            "VernacExtend",
            "0c749375e926c665509e5f0134261461e6f9bac3"
        ],
        [
            "rewrite H1; apply (HalfLineAngleC B' A' C' C''); autoDistinct.",
            "VernacExtend",
            "dd53c299e3f9f89eab315d70b72c25bfedda1696"
        ],
        [
            "intro; elim H2; autoCollinear.",
            "VernacExtend",
            "736d9e837c011f53c2e6e6eea09f411ad76e68f4"
        ],
        [
            "assert (H8 : C' = C'').",
            "VernacExtend",
            "1a0e6c24c691ca8b00bb4d8d3f057821532b6c36"
        ],
        [
            "apply (ClockwiseEq A' C' B' C'').",
            "VernacExtend",
            "2c518494c52f4680c09cfe7d9e16017838170919"
        ],
        [
            "autoClockwise.",
            "VernacExtend",
            "9409e85b86446941015e1da6ca2353051468a0c2"
        ],
        [
            "apply HalfLineCollinear.",
            "VernacExtend",
            "a29b52129acde266125f3d8837e9fd8ec3503d8a"
        ],
        [
            "apply (AngleBHalfLine A' C' B' C'').",
            "VernacExtend",
            "8d4fe40006c653e989489b54aa646a56b20b2f7a"
        ],
        [
            "autoClockwise.",
            "VernacExtend",
            "9409e85b86446941015e1da6ca2353051468a0c2"
        ],
        [
            "generalizeChangeSense.",
            "VernacExtend",
            "be975c77c59224ac5239b36f960f98e48421bb54"
        ],
        [
            "apply ClockwiseCAB; apply H2; autoClockwise.",
            "VernacExtend",
            "9a23b2bf53c869555be619dbcb0cc5d572e2e71c"
        ],
        [
            "rewrite AngleSym; [ rewrite <- H0 | autoDistinct | autoDistinct ].",
            "VernacExtend",
            "f7d122ce3fa1baa1e6f9442d3cec769851c8a06e"
        ],
        [
            "rewrite (AngleSym A' C'' B').",
            "VernacExtend",
            "a9aabdab07d2c96ab157b831ca032c37d2e82953"
        ],
        [
            "apply (CongruentStrictTrianglesB _ _ _ _ _ _ H7).",
            "VernacExtend",
            "b35127aef72a6aa7e9f2c135aeec0cf94af1580c"
        ],
        [
            "intro; subst.",
            "VernacExtend",
            "9021e22274b6259ff513a190b208a4a3aa9b2ede"
        ],
        [
            "elim (ClockwiseNotCollinear _ _ _ H4); apply CollinearACB; apply HalfLineCollinear; trivial.",
            "VernacExtend",
            "a4826ae29800f72f0d353cd2aee921d02f7a0214"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "apply CollinearBAC; apply HalfLineCollinear; trivial.",
            "VernacExtend",
            "f5c39eefea8e7e52d5f1636e4436e997b1635206"
        ],
        [
            "rewrite H8; apply CongruentStrictTrianglesBAC; trivial.",
            "VernacExtend",
            "1adef61284d6eafeb1753500354c08665a99f1a0"
        ],
        [
            "elim H2; assert (A' <> B').",
            "VernacExtend",
            "e8b3c7058cd9f0b0cc016d6d292d43edf8885fc2"
        ],
        [
            "intro; subst.",
            "VernacExtend",
            "9021e22274b6259ff513a190b208a4a3aa9b2ede"
        ],
        [
            "elim (NotCollinearDistinctAB _ _ _ H2).",
            "VernacExtend",
            "4217dc2a4f9f2e8a39da3fef4a0d32fd6f230899"
        ],
        [
            "apply DistNull; rewrite H; apply NullDist.",
            "VernacExtend",
            "c7cdbb3c13b5e88a03d63bca9fefdc0d199aedbc"
        ],
        [
            "rewrite (NullAngle A' B' C' H4 H3) in H0.",
            "VernacExtend",
            "ac97275c4efb07c093700de51804605f8e5dab20"
        ],
        [
            "apply HalfLineCollinear; apply NullAngleHalfLine.",
            "VernacExtend",
            "bf8276e001771f2108c126cb1afa435e7758f840"
        ],
        [
            "apply (NotCollinearDistinctAB _ _ _ H2).",
            "VernacExtend",
            "ff76e5d394ad94dae540ce6eab63f813359d7ddc"
        ],
        [
            "apply (sym_not_eq (NotCollinearDistinctCA _ _ _ H2)).",
            "VernacExtend",
            "e9b744782af0d350791bd472d97890cdce91f5ef"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "elim H2; assert (B' <> A').",
            "VernacExtend",
            "a36f3f098622e8aceede25645bf426b32de47dd6"
        ],
        [
            "intro; subst.",
            "VernacExtend",
            "9021e22274b6259ff513a190b208a4a3aa9b2ede"
        ],
        [
            "elim (NotCollinearDistinctAB _ _ _ H2).",
            "VernacExtend",
            "4217dc2a4f9f2e8a39da3fef4a0d32fd6f230899"
        ],
        [
            "apply DistNull; rewrite H; apply NullDist.",
            "VernacExtend",
            "c7cdbb3c13b5e88a03d63bca9fefdc0d199aedbc"
        ],
        [
            "rewrite (NullAngle B' A' C' H4 H3) in H1.",
            "VernacExtend",
            "686830b0b9c15c4d9a51e42f13e89fca199417bf"
        ],
        [
            "apply CollinearBAC; apply HalfLineCollinear; apply NullAngleHalfLine.",
            "VernacExtend",
            "07c8dfdbad3a1eaa30b6fb187a51f58350748c9f"
        ],
        [
            "apply (sym_not_eq (NotCollinearDistinctAB _ _ _ H2)).",
            "VernacExtend",
            "0cc54fe92d415f618eeecc0b984cf72f0a4c468d"
        ],
        [
            "apply (NotCollinearDistinctBC _ _ _ H2).",
            "VernacExtend",
            "abaac12bd8dfdae8667b4b1cc5dede4d5f60f1ec"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CongruentStrictTrianglesASABC : forall A B C A' B' C' : Point, Distance B C = Distance B' C' -> Angle A B C = Angle A' B' C' -> Angle B C A = Angle B' C' A' -> ~Collinear A B C -> CongruentStrictTriangles A B C A' B' C'.",
            "VernacStartTheoremProof",
            "84b6ea94622849476ca60aae7936304554243b3c"
        ],
        [
            "intros; apply CongruentStrictTrianglesCAB.",
            "VernacExtend",
            "5af429bfa95e366f7f8982f92aebdaa2ceddba4a"
        ],
        [
            "decompose [or] (FourCases B' C' A').",
            "VernacExtend",
            "5c3545ffa450fe88432e97cb9c0fe97f26141c35"
        ],
        [
            "apply CongruentStrictTrianglesASAAB.",
            "VernacExtend",
            "3c93dc763ef3fb434b358286d5582bd07fd33b6a"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "rewrite AngleSym.",
            "VernacExtend",
            "61bae63dd4924d748abf43be2b138a8af18fe753"
        ],
        [
            "rewrite H0; apply AngleSym; autoDistinct.",
            "VernacExtend",
            "0d1b641c6912230ed91a5489098add99321bbc23"
        ],
        [
            "apply (NotCollinearDistinctBC _ _ _ H2).",
            "VernacExtend",
            "abaac12bd8dfdae8667b4b1cc5dede4d5f60f1ec"
        ],
        [
            "apply (sym_not_eq (NotCollinearDistinctAB _ _ _ H2)).",
            "VernacExtend",
            "0cc54fe92d415f618eeecc0b984cf72f0a4c468d"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "intro; elim H2; autoCollinear.",
            "VernacExtend",
            "736d9e837c011f53c2e6e6eea09f411ad76e68f4"
        ],
        [
            "apply CongruentStrictTrianglesASAAB.",
            "VernacExtend",
            "3c93dc763ef3fb434b358286d5582bd07fd33b6a"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "rewrite AngleSym.",
            "VernacExtend",
            "61bae63dd4924d748abf43be2b138a8af18fe753"
        ],
        [
            "rewrite H0; apply AngleSym; autoDistinct.",
            "VernacExtend",
            "0d1b641c6912230ed91a5489098add99321bbc23"
        ],
        [
            "apply (NotCollinearDistinctBC _ _ _ H2).",
            "VernacExtend",
            "abaac12bd8dfdae8667b4b1cc5dede4d5f60f1ec"
        ],
        [
            "apply (sym_not_eq (NotCollinearDistinctAB _ _ _ H2)).",
            "VernacExtend",
            "0cc54fe92d415f618eeecc0b984cf72f0a4c468d"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "intro; elim H2; autoCollinear.",
            "VernacExtend",
            "736d9e837c011f53c2e6e6eea09f411ad76e68f4"
        ],
        [
            "elim H2; assert (B' <> C').",
            "VernacExtend",
            "c4e12f3d1c1d65190f61e5ba91347ec0949564aa"
        ],
        [
            "intro; subst.",
            "VernacExtend",
            "9021e22274b6259ff513a190b208a4a3aa9b2ede"
        ],
        [
            "elim (NotCollinearDistinctBC _ _ _ H2).",
            "VernacExtend",
            "baf63999eecce54725746596fe3eeea88a818db4"
        ],
        [
            "apply DistNull; rewrite H; apply NullDist.",
            "VernacExtend",
            "c7cdbb3c13b5e88a03d63bca9fefdc0d199aedbc"
        ],
        [
            "assert (H5 := NullAngle B' C' A' H4 H3).",
            "VernacExtend",
            "8b7aaf039094611598966dab4093605cf2ca5c04"
        ],
        [
            "apply CollinearBAC; apply HalfLineCollinear; apply NullAngleHalfLine.",
            "VernacExtend",
            "07c8dfdbad3a1eaa30b6fb187a51f58350748c9f"
        ],
        [
            "apply (sym_not_eq (NotCollinearDistinctAB _ _ _ H2)).",
            "VernacExtend",
            "0cc54fe92d415f618eeecc0b984cf72f0a4c468d"
        ],
        [
            "apply (NotCollinearDistinctBC _ _ _ H2).",
            "VernacExtend",
            "abaac12bd8dfdae8667b4b1cc5dede4d5f60f1ec"
        ],
        [
            "rewrite H0; rewrite <- H5.",
            "VernacExtend",
            "16ba6e430b8631aaef4d38632d551ac5962b5216"
        ],
        [
            "apply AngleSym.",
            "VernacExtend",
            "94778a4ba3864f11a4d1f64bd9c8d95c135d9def"
        ],
        [
            "apply (HalfLineDistinct B' C' A' H4 H3).",
            "VernacExtend",
            "4a98314650fda5fca4a476990779f659187402ea"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "elim H2; assert (C' <> B').",
            "VernacExtend",
            "d3812f8305c20ee609251b123fa03def013985df"
        ],
        [
            "intro; subst.",
            "VernacExtend",
            "9021e22274b6259ff513a190b208a4a3aa9b2ede"
        ],
        [
            "elim (NotCollinearDistinctBC _ _ _ H2).",
            "VernacExtend",
            "baf63999eecce54725746596fe3eeea88a818db4"
        ],
        [
            "apply DistNull; rewrite H; apply NullDist.",
            "VernacExtend",
            "c7cdbb3c13b5e88a03d63bca9fefdc0d199aedbc"
        ],
        [
            "apply CollinearCBA; apply HalfLineCollinear; apply NullAngleHalfLine.",
            "VernacExtend",
            "b7ac8e0bc9ea58e3594dea24502c379e73090093"
        ],
        [
            "apply (sym_not_eq (NotCollinearDistinctBC _ _ _ H2)).",
            "VernacExtend",
            "989773e4f0e299939f992adfb04fd3ab0eabe23b"
        ],
        [
            "apply (NotCollinearDistinctCA _ _ _ H2).",
            "VernacExtend",
            "4e9230becfba00277503261482d061fd182e509a"
        ],
        [
            "rewrite H1; apply NullAngle; trivial.",
            "VernacExtend",
            "d2ed3c9c2b799404219aa5a2e6d28516d7cfaa87"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CongruentStrictTrianglesASACA : forall A B C A' B' C' : Point, Distance C A = Distance C' A' -> Angle B C A = Angle B' C' A' -> Angle B A C = Angle B' A' C' -> ~Collinear A B C -> CongruentStrictTriangles A B C A' B' C'.",
            "VernacStartTheoremProof",
            "f9caf3a1ab31186343f8ca0ce893f99e950f263c"
        ],
        [
            "intros; apply CongruentStrictTrianglesBCA.",
            "VernacExtend",
            "109fd2ade9783ed0a2cd953dc400be14684017e2"
        ],
        [
            "decompose [or] (FourCases C' A' B').",
            "VernacExtend",
            "afdd927d5a32ba966af2cb2303223c34d08b7dc1"
        ],
        [
            "apply CongruentStrictTrianglesASAAB.",
            "VernacExtend",
            "3c93dc763ef3fb434b358286d5582bd07fd33b6a"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "rewrite AngleSym.",
            "VernacExtend",
            "61bae63dd4924d748abf43be2b138a8af18fe753"
        ],
        [
            "rewrite H0; apply AngleSym.",
            "VernacExtend",
            "5d4d82be34a6edb712c2b065c40bb273b8536e9a"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "apply (NotCollinearDistinctCA _ _ _ H2).",
            "VernacExtend",
            "4e9230becfba00277503261482d061fd182e509a"
        ],
        [
            "apply (sym_not_eq (NotCollinearDistinctBC _ _ _ H2)).",
            "VernacExtend",
            "989773e4f0e299939f992adfb04fd3ab0eabe23b"
        ],
        [
            "rewrite AngleSym.",
            "VernacExtend",
            "61bae63dd4924d748abf43be2b138a8af18fe753"
        ],
        [
            "rewrite H1; apply AngleSym; autoDistinct.",
            "VernacExtend",
            "d011f0185bc3671c3f4ac02c6682c05b40abb80b"
        ],
        [
            "apply (sym_not_eq (NotCollinearDistinctCA _ _ _ H2)).",
            "VernacExtend",
            "e9b744782af0d350791bd472d97890cdce91f5ef"
        ],
        [
            "apply (NotCollinearDistinctAB _ _ _ H2).",
            "VernacExtend",
            "ff76e5d394ad94dae540ce6eab63f813359d7ddc"
        ],
        [
            "intro; elim H2; autoCollinear.",
            "VernacExtend",
            "736d9e837c011f53c2e6e6eea09f411ad76e68f4"
        ],
        [
            "apply CongruentStrictTrianglesASAAB.",
            "VernacExtend",
            "3c93dc763ef3fb434b358286d5582bd07fd33b6a"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "rewrite AngleSym.",
            "VernacExtend",
            "61bae63dd4924d748abf43be2b138a8af18fe753"
        ],
        [
            "rewrite H0; apply AngleSym; autoDistinct.",
            "VernacExtend",
            "0d1b641c6912230ed91a5489098add99321bbc23"
        ],
        [
            "apply (NotCollinearDistinctCA _ _ _ H2).",
            "VernacExtend",
            "4e9230becfba00277503261482d061fd182e509a"
        ],
        [
            "apply (sym_not_eq (NotCollinearDistinctBC _ _ _ H2)).",
            "VernacExtend",
            "989773e4f0e299939f992adfb04fd3ab0eabe23b"
        ],
        [
            "rewrite AngleSym.",
            "VernacExtend",
            "61bae63dd4924d748abf43be2b138a8af18fe753"
        ],
        [
            "rewrite H1; apply AngleSym; autoDistinct.",
            "VernacExtend",
            "d011f0185bc3671c3f4ac02c6682c05b40abb80b"
        ],
        [
            "apply (sym_not_eq (NotCollinearDistinctCA _ _ _ H2)).",
            "VernacExtend",
            "e9b744782af0d350791bd472d97890cdce91f5ef"
        ],
        [
            "apply (NotCollinearDistinctAB _ _ _ H2).",
            "VernacExtend",
            "ff76e5d394ad94dae540ce6eab63f813359d7ddc"
        ],
        [
            "intro; elim H2; autoCollinear.",
            "VernacExtend",
            "736d9e837c011f53c2e6e6eea09f411ad76e68f4"
        ],
        [
            "elim H2; assert (C' <> A').",
            "VernacExtend",
            "2fe5f0a688f731717402120f3012196cfac2fe53"
        ],
        [
            "intro; subst.",
            "VernacExtend",
            "9021e22274b6259ff513a190b208a4a3aa9b2ede"
        ],
        [
            "elim (NotCollinearDistinctCA _ _ _ H2).",
            "VernacExtend",
            "b848c50f1e6d38e497b30a0d355a4b3d579efa4d"
        ],
        [
            "apply DistNull; rewrite H; apply NullDist.",
            "VernacExtend",
            "c7cdbb3c13b5e88a03d63bca9fefdc0d199aedbc"
        ],
        [
            "apply CollinearBCA; apply HalfLineCollinear; apply NullAngleHalfLine.",
            "VernacExtend",
            "a7a214bdbceacf06cdca1377d13d7701dd976dc4"
        ],
        [
            "apply (NotCollinearDistinctCA _ _ _ H2).",
            "VernacExtend",
            "4e9230becfba00277503261482d061fd182e509a"
        ],
        [
            "apply (sym_not_eq (NotCollinearDistinctBC _ _ _ H2)).",
            "VernacExtend",
            "989773e4f0e299939f992adfb04fd3ab0eabe23b"
        ],
        [
            "rewrite AngleSym.",
            "VernacExtend",
            "61bae63dd4924d748abf43be2b138a8af18fe753"
        ],
        [
            "rewrite H0; apply NullAngle.",
            "VernacExtend",
            "7ae0281b62ce0515f227af13fe4a4fe6e0d6750f"
        ],
        [
            "apply (HalfLineDistinct C' A' B' H4 H3).",
            "VernacExtend",
            "2db5caef4a6f8d21725e20b329182e8938d47956"
        ],
        [
            "apply HalfLineSym; trivial.",
            "VernacExtend",
            "1820c07b4d82b7d69ac8f032296b8ed167f7fa48"
        ],
        [
            "apply (NotCollinearDistinctCA _ _ _ H2).",
            "VernacExtend",
            "4e9230becfba00277503261482d061fd182e509a"
        ],
        [
            "apply (sym_not_eq (NotCollinearDistinctBC _ _ _ H2)).",
            "VernacExtend",
            "989773e4f0e299939f992adfb04fd3ab0eabe23b"
        ],
        [
            "elim H2; assert (A' <> C').",
            "VernacExtend",
            "817daff38dccd3fa8f1ef34567819cd5dd3da8d1"
        ],
        [
            "intro; subst.",
            "VernacExtend",
            "9021e22274b6259ff513a190b208a4a3aa9b2ede"
        ],
        [
            "elim (NotCollinearDistinctCA _ _ _ H2).",
            "VernacExtend",
            "b848c50f1e6d38e497b30a0d355a4b3d579efa4d"
        ],
        [
            "apply DistNull; rewrite H; apply NullDist.",
            "VernacExtend",
            "c7cdbb3c13b5e88a03d63bca9fefdc0d199aedbc"
        ],
        [
            "apply HalfLineCollinear; apply NullAngleHalfLine.",
            "VernacExtend",
            "bf8276e001771f2108c126cb1afa435e7758f840"
        ],
        [
            "apply (NotCollinearDistinctAB _ _ _ H2).",
            "VernacExtend",
            "ff76e5d394ad94dae540ce6eab63f813359d7ddc"
        ],
        [
            "apply (sym_not_eq (NotCollinearDistinctCA _ _ _ H2)).",
            "VernacExtend",
            "e9b744782af0d350791bd472d97890cdce91f5ef"
        ],
        [
            "rewrite H1; apply NullAngle.",
            "VernacExtend",
            "615a4cd615bd15b46b0d197ac1f50f2420e41ab4"
        ],
        [
            "apply (HalfLineDistinct A' C' B' H4 H3).",
            "VernacExtend",
            "2157f8dda00d67e8f9210b316c555e5252a3e0c1"
        ],
        [
            "apply HalfLineSym; trivial.",
            "VernacExtend",
            "1820c07b4d82b7d69ac8f032296b8ed167f7fa48"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End CONGRUENT_STRICT_TRIANGLES.",
            "VernacEndSegment",
            "14b7471779e8f8fbb82620583c2ef14c9f27e4ad"
        ]
    ],
    "proofs": [
        {
            "name": "CongruentStrictTrianglesSym",
            "line_nb": 3,
            "steps": [
                {
                    "command": [
                        "unfold CongruentStrictTriangles in |- *; intuition.",
                        "VernacExtend",
                        "f231b322149d4acfe11755bf0b3878a09cdd8a1a"
                    ]
                },
                {
                    "command": [
                        "apply CongruentTrianglesSym; trivial.",
                        "VernacExtend",
                        "119868685b9951f3ade51a62e40841f77ccf2a2f"
                    ]
                },
                {
                    "command": [
                        "unfold CongruentTriangles in H0; decompose [and] H0; clear H0.",
                        "VernacExtend",
                        "a348e6f45932f29889c3195c18ef2dd286dd2f92"
                    ]
                },
                {
                    "command": [
                        "assert (A' <> B').",
                        "VernacExtend",
                        "02db2db58c1cbfccda17504b04746954a4f45953"
                    ]
                },
                {
                    "command": [
                        "intro; subst.",
                        "VernacExtend",
                        "9021e22274b6259ff513a190b208a4a3aa9b2ede"
                    ]
                },
                {
                    "command": [
                        "elim (NotCollinearDistinctAB _ _ _ H1).",
                        "VernacExtend",
                        "e9cb290ad278ccc21cc7aa226b7882946ce1d81a"
                    ]
                },
                {
                    "command": [
                        "apply DistNull; rewrite H2; apply NullDist.",
                        "VernacExtend",
                        "5f85c759b62ac3b4f73316f8c99f3270fb4ba82c"
                    ]
                },
                {
                    "command": [
                        "decompose [or] (FourCases A' B' C').",
                        "VernacExtend",
                        "3ecf8556f72e611e3cfa6fff5cefba7e4ae3a16b"
                    ]
                },
                {
                    "command": [
                        "elim (CollinearNotClockwiseABC _ _ _ H); trivial.",
                        "VernacExtend",
                        "b3a0793434dce66bdb9aab144c51c3e609fbd594"
                    ]
                },
                {
                    "command": [
                        "elim (CollinearNotClockwiseBAC _ _ _ H); trivial.",
                        "VernacExtend",
                        "492a45c0857ad3a670a9c707b12839edace55ba7"
                    ]
                },
                {
                    "command": [
                        "decompose [or] (FourCases B' C' A').",
                        "VernacExtend",
                        "5c3545ffa450fe88432e97cb9c0fe97f26141c35"
                    ]
                },
                {
                    "command": [
                        "elim (CollinearNotClockwiseABC _ _ _ H); apply ClockwiseCAB; trivial.",
                        "VernacExtend",
                        "e2f5b054e37348b2514841c90aaab6ab21a17f01"
                    ]
                },
                {
                    "command": [
                        "elim (CollinearNotClockwiseBAC _ _ _ H); apply ClockwiseBCA; trivial.",
                        "VernacExtend",
                        "4a7bc790b9aa5e09428451aaabfb26b11dd1c85a"
                    ]
                },
                {
                    "command": [
                        "destruct (ChaslesRec A C B).",
                        "VernacExtend",
                        "b8a220d9182b76ba45fa60cc13b0b1f6736ee2cc"
                    ]
                },
                {
                    "command": [
                        "rewrite (DistSym A C); rewrite H5; rewrite (DistSym C' A').",
                        "VernacExtend",
                        "f22e06c7d3e0a7d0c89b82ec102874a99dfe9420"
                    ]
                },
                {
                    "command": [
                        "rewrite (DistSym C B); rewrite H4; rewrite (DistSym B' C').",
                        "VernacExtend",
                        "0617d0410fce276b295785c3e236bedbd8a4bec8"
                    ]
                },
                {
                    "command": [
                        "rewrite H2; apply Chasles.",
                        "VernacExtend",
                        "ca24e2c02e6c6695ca3a15c82417bcfa5a8df09c"
                    ]
                },
                {
                    "command": [
                        "apply HalfLineSym; trivial.",
                        "VernacExtend",
                        "1820c07b4d82b7d69ac8f032296b8ed167f7fa48"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "elim H1; apply CollinearACB; apply HalfLineCollinear; trivial.",
                        "VernacExtend",
                        "3ff162b9d788c1df9e156025890f840a1d8c348a"
                    ]
                },
                {
                    "command": [
                        "destruct (ChaslesRec A B C).",
                        "VernacExtend",
                        "e3b3e8531504c0a72028a316ea5bc1c13e31d038"
                    ]
                },
                {
                    "command": [
                        "rewrite H2; rewrite H4; rewrite (DistSym A C); rewrite H5; rewrite (DistSym C' A').",
                        "VernacExtend",
                        "7700450fab006b4b744e6819fd6cbbd9cdbb3bdf"
                    ]
                },
                {
                    "command": [
                        "apply Chasles; auto.",
                        "VernacExtend",
                        "9fedbd51b4f9775e3605762a39d12214d29d3b54"
                    ]
                },
                {
                    "command": [
                        "elim H1; apply HalfLineCollinear; trivial.",
                        "VernacExtend",
                        "f355373a91d0d47d75fe71da6e0d1bb5239382ab"
                    ]
                },
                {
                    "command": [
                        "decompose [or] (FourCases A' C' B').",
                        "VernacExtend",
                        "6fe744c827b907bce85560ec7b608e1bc73921af"
                    ]
                },
                {
                    "command": [
                        "elim (CollinearNotClockwiseBAC _ _ _ H); apply ClockwiseCAB; trivial.",
                        "VernacExtend",
                        "c7ab9067c50a1ac5fa0b24e06c7e03df5cb2c5d6"
                    ]
                },
                {
                    "command": [
                        "elim (CollinearNotClockwiseABC _ _ _ H); apply ClockwiseBCA; trivial.",
                        "VernacExtend",
                        "c8ae8dbe25804b6f2de3c10e3b3e531c0766d715"
                    ]
                },
                {
                    "command": [
                        "destruct (ChaslesRec A C B).",
                        "VernacExtend",
                        "b8a220d9182b76ba45fa60cc13b0b1f6736ee2cc"
                    ]
                },
                {
                    "command": [
                        "rewrite (DistSym A C); rewrite H5; rewrite (DistSym C' A').",
                        "VernacExtend",
                        "f22e06c7d3e0a7d0c89b82ec102874a99dfe9420"
                    ]
                },
                {
                    "command": [
                        "rewrite (DistSym C B); rewrite H4; rewrite (DistSym B' C').",
                        "VernacExtend",
                        "0617d0410fce276b295785c3e236bedbd8a4bec8"
                    ]
                },
                {
                    "command": [
                        "rewrite H2; apply Chasles.",
                        "VernacExtend",
                        "ca24e2c02e6c6695ca3a15c82417bcfa5a8df09c"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply HalfLineSym; auto.",
                        "VernacExtend",
                        "a9f2fa640518621c5f0ea456fb944837c6ed0712"
                    ]
                },
                {
                    "command": [
                        "elim H1; apply CollinearACB; apply HalfLineCollinear; trivial.",
                        "VernacExtend",
                        "3ff162b9d788c1df9e156025890f840a1d8c348a"
                    ]
                },
                {
                    "command": [
                        "destruct (ChaslesRec B A C).",
                        "VernacExtend",
                        "27cb5df2e4b94135c324930afa1ef6e19203158c"
                    ]
                },
                {
                    "command": [
                        "rewrite (DistSym B A); rewrite H2; rewrite (DistSym A' B').",
                        "VernacExtend",
                        "0eda5b2c21ce95090aa5450ab08e5323ed5e11be"
                    ]
                },
                {
                    "command": [
                        "rewrite (DistSym A C); rewrite H5; rewrite (DistSym C' A').",
                        "VernacExtend",
                        "f22e06c7d3e0a7d0c89b82ec102874a99dfe9420"
                    ]
                },
                {
                    "command": [
                        "rewrite H4; apply Chasles; trivial.",
                        "VernacExtend",
                        "1e9fa08b11663b82de16c7ec76c938efb3f3d916"
                    ]
                },
                {
                    "command": [
                        "elim H1; apply CollinearBAC; apply HalfLineCollinear; trivial.",
                        "VernacExtend",
                        "200e5283e64e20167fbd118088404cefd7f54d12"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CongruentStrictTrianglesBAC",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "unfold CongruentStrictTriangles in |- *; intuition.",
                        "VernacExtend",
                        "f231b322149d4acfe11755bf0b3878a09cdd8a1a"
                    ]
                },
                {
                    "command": [
                        "apply CongruentTrianglesBAC; trivial.",
                        "VernacExtend",
                        "aedb150a56709e95fac5947f5e3c3f0ae0c8f0ad"
                    ]
                },
                {
                    "command": [
                        "elim H1; autoCollinear.",
                        "VernacExtend",
                        "737c6791ecb5b8e0f810cab746f91f8575a0d219"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CongruentStrictTrianglesACB",
            "line_nb": 49,
            "steps": [
                {
                    "command": [
                        "unfold CongruentStrictTriangles in |- *; intuition.",
                        "VernacExtend",
                        "f231b322149d4acfe11755bf0b3878a09cdd8a1a"
                    ]
                },
                {
                    "command": [
                        "apply CongruentTrianglesACB; trivial.",
                        "VernacExtend",
                        "3d89af00f6ea682485dc6cfff7dc5e0de696994d"
                    ]
                },
                {
                    "command": [
                        "elim H1; autoCollinear.",
                        "VernacExtend",
                        "737c6791ecb5b8e0f810cab746f91f8575a0d219"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CongruentStrictTrianglesCBA",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "unfold CongruentStrictTriangles in |- *; intuition.",
                        "VernacExtend",
                        "f231b322149d4acfe11755bf0b3878a09cdd8a1a"
                    ]
                },
                {
                    "command": [
                        "apply CongruentTrianglesCBA; trivial.",
                        "VernacExtend",
                        "d7de4cf8fa07b20b73c05c61781cb6aa0fe40d83"
                    ]
                },
                {
                    "command": [
                        "elim H1; autoCollinear.",
                        "VernacExtend",
                        "737c6791ecb5b8e0f810cab746f91f8575a0d219"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CongruentStrictTrianglesBCA",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "unfold CongruentStrictTriangles in |- *; intuition.",
                        "VernacExtend",
                        "f231b322149d4acfe11755bf0b3878a09cdd8a1a"
                    ]
                },
                {
                    "command": [
                        "apply CongruentTrianglesBCA; trivial.",
                        "VernacExtend",
                        "37653de9b61c2fd5b75889ed497e9b59b13cbf02"
                    ]
                },
                {
                    "command": [
                        "elim H1; autoCollinear.",
                        "VernacExtend",
                        "737c6791ecb5b8e0f810cab746f91f8575a0d219"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CongruentStrictTrianglesCAB",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "unfold CongruentStrictTriangles in |- *; intuition.",
                        "VernacExtend",
                        "f231b322149d4acfe11755bf0b3878a09cdd8a1a"
                    ]
                },
                {
                    "command": [
                        "apply CongruentTrianglesCAB; trivial.",
                        "VernacExtend",
                        "99b234f8f2bf9865492601f19374ce1092d28408"
                    ]
                },
                {
                    "command": [
                        "elim H1; autoCollinear.",
                        "VernacExtend",
                        "737c6791ecb5b8e0f810cab746f91f8575a0d219"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CongruentStrictTrianglesAB",
            "line_nb": 69,
            "steps": [
                {
                    "command": [
                        "unfold CongruentStrictTriangles in |- *; intuition.",
                        "VernacExtend",
                        "f231b322149d4acfe11755bf0b3878a09cdd8a1a"
                    ]
                },
                {
                    "command": [
                        "apply (CongruentTrianglesAB _ _ _ _ _ _ H0).",
                        "VernacExtend",
                        "601a8e535f8749e0b320a6d0834b16ed7f85303c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CongruentStrictTrianglesBC",
            "line_nb": 73,
            "steps": [
                {
                    "command": [
                        "unfold CongruentStrictTriangles in |- *; intuition.",
                        "VernacExtend",
                        "f231b322149d4acfe11755bf0b3878a09cdd8a1a"
                    ]
                },
                {
                    "command": [
                        "apply (CongruentTrianglesBC _ _ _ _ _ _ H0).",
                        "VernacExtend",
                        "0434d65fd6ec10f2bdc88b775a25ade6e3fc99b4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CongruentStrictTrianglesCA",
            "line_nb": 77,
            "steps": [
                {
                    "command": [
                        "unfold CongruentStrictTriangles in |- *; intuition.",
                        "VernacExtend",
                        "f231b322149d4acfe11755bf0b3878a09cdd8a1a"
                    ]
                },
                {
                    "command": [
                        "apply (CongruentTrianglesCA _ _ _ _ _ _ H0).",
                        "VernacExtend",
                        "96d55573046fb8825008b1ce3efbf6a126bb3b50"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CongruentStrictTrianglesA",
            "line_nb": 81,
            "steps": [
                {
                    "command": [
                        "unfold CongruentStrictTriangles in |- *; intuition.",
                        "VernacExtend",
                        "f231b322149d4acfe11755bf0b3878a09cdd8a1a"
                    ]
                },
                {
                    "command": [
                        "apply CongruentTrianglesA.",
                        "VernacExtend",
                        "0fa4401d44200dd78c42c7079d93dece4dddb5a4"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply (NotCollinearDistinctAB _ _ _ H1).",
                        "VernacExtend",
                        "814118b4a93b8b8291198e7e5674fc4513e9a90a"
                    ]
                },
                {
                    "command": [
                        "apply (sym_not_eq (NotCollinearDistinctCA _ _ _ H1)).",
                        "VernacExtend",
                        "dcd7726a34932b23f792bead10b2ddbbc90ca083"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CongruentStrictTrianglesB",
            "line_nb": 88,
            "steps": [
                {
                    "command": [
                        "intros; apply CongruentStrictTrianglesA.",
                        "VernacExtend",
                        "ec6401884ffacf41ce6d7a48839c01a0f2e06235"
                    ]
                },
                {
                    "command": [
                        "apply CongruentStrictTrianglesBAC; trivial.",
                        "VernacExtend",
                        "664a24b19c348a4f54d43b7ad19b2697a2e8c82f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CongruentStrictTrianglesC",
            "line_nb": 92,
            "steps": [
                {
                    "command": [
                        "intros; apply CongruentStrictTrianglesA.",
                        "VernacExtend",
                        "ec6401884ffacf41ce6d7a48839c01a0f2e06235"
                    ]
                },
                {
                    "command": [
                        "apply CongruentStrictTrianglesCAB; trivial.",
                        "VernacExtend",
                        "ba6e0b45476c3d6e9218e61f2aa858df450e1324"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CongruentStrictTrianglesSASA",
            "line_nb": 96,
            "steps": [
                {
                    "command": [
                        "unfold CongruentStrictTriangles in |- *; intuition.",
                        "VernacExtend",
                        "f231b322149d4acfe11755bf0b3878a09cdd8a1a"
                    ]
                },
                {
                    "command": [
                        "apply CongruentTrianglesSASA; auto.",
                        "VernacExtend",
                        "5a44342c9462e01ec257d8b183d4815e59c43fba"
                    ]
                },
                {
                    "command": [
                        "apply (NotCollinearDistinctAB _ _ _ H2).",
                        "VernacExtend",
                        "ff76e5d394ad94dae540ce6eab63f813359d7ddc"
                    ]
                },
                {
                    "command": [
                        "apply (sym_not_eq (NotCollinearDistinctCA _ _ _ H2)).",
                        "VernacExtend",
                        "e9b744782af0d350791bd472d97890cdce91f5ef"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CongruentStrictTrianglesSASB",
            "line_nb": 102,
            "steps": [
                {
                    "command": [
                        "unfold CongruentStrictTriangles in |- *; intuition.",
                        "VernacExtend",
                        "f231b322149d4acfe11755bf0b3878a09cdd8a1a"
                    ]
                },
                {
                    "command": [
                        "apply CongruentTrianglesSASB; auto.",
                        "VernacExtend",
                        "ffa16fb5ed4a6488db5f8d86ec3b246036f5232a"
                    ]
                },
                {
                    "command": [
                        "apply (sym_not_eq (NotCollinearDistinctAB _ _ _ H2)).",
                        "VernacExtend",
                        "0cc54fe92d415f618eeecc0b984cf72f0a4c468d"
                    ]
                },
                {
                    "command": [
                        "apply (NotCollinearDistinctBC _ _ _ H2).",
                        "VernacExtend",
                        "abaac12bd8dfdae8667b4b1cc5dede4d5f60f1ec"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CongruentStrictTrianglesSASC",
            "line_nb": 108,
            "steps": [
                {
                    "command": [
                        "unfold CongruentStrictTriangles in |- *; intuition.",
                        "VernacExtend",
                        "f231b322149d4acfe11755bf0b3878a09cdd8a1a"
                    ]
                },
                {
                    "command": [
                        "apply CongruentTrianglesSASC; auto.",
                        "VernacExtend",
                        "dcb8f5a94c060aedfffc9f9121195e833aab8462"
                    ]
                },
                {
                    "command": [
                        "apply (NotCollinearDistinctCA _ _ _ H2).",
                        "VernacExtend",
                        "4e9230becfba00277503261482d061fd182e509a"
                    ]
                },
                {
                    "command": [
                        "apply (sym_not_eq (NotCollinearDistinctBC _ _ _ H2)).",
                        "VernacExtend",
                        "989773e4f0e299939f992adfb04fd3ab0eabe23b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "EquiDirectedCollinear",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "generalizeChange.",
                        "VernacExtend",
                        "d3c977ebf7f2c5588433912c8eb25fd198cbcf67"
                    ]
                },
                {
                    "command": [
                        "elim (NotClockwiseBAA C B); auto.",
                        "VernacExtend",
                        "b24d14d17801e9f0f26a4f26dbd1f4377067e148"
                    ]
                },
                {
                    "command": [
                        "elim (NotClockwiseBAA A B); apply H1; [ autoDistinct | autoClockwise ].",
                        "VernacExtend",
                        "b5917b6cdfd10f2867c6397f5d897af0e9636b43"
                    ]
                },
                {
                    "command": [
                        "elim (NotClockwiseABA C B); auto.",
                        "VernacExtend",
                        "92aac55dab3acf94e188798e3cf8ce364ceab9f1"
                    ]
                },
                {
                    "command": [
                        "assert (H2 := sym_not_eq (ClockwiseDistinctAB _ _ _ H0)).",
                        "VernacExtend",
                        "e39170821b2ad7cef742f98d9148eb8918f84749"
                    ]
                },
                {
                    "command": [
                        "elim (NotClockwiseBAA C B).",
                        "VernacExtend",
                        "6340d01daec8f809c2075077dd9bf80c18817e11"
                    ]
                },
                {
                    "command": [
                        "assert (H3 := H1 H2); clear H1.",
                        "VernacExtend",
                        "a7a521fbe4e3bc28be09d95950c369c771603a6f"
                    ]
                },
                {
                    "command": [
                        "generalizeChange.",
                        "VernacExtend",
                        "d3c977ebf7f2c5588433912c8eb25fd198cbcf67"
                    ]
                },
                {
                    "command": [
                        "apply H6; [ autoDistinct | autoClockwise ].",
                        "VernacExtend",
                        "fa52547ef1af03c86fc296b18fcbee7e6914da1d"
                    ]
                },
                {
                    "command": [
                        "elim (NotClockwiseABA C B); auto.",
                        "VernacExtend",
                        "92aac55dab3acf94e188798e3cf8ce364ceab9f1"
                    ]
                },
                {
                    "command": [
                        "elim (NotClockwiseBAA C B); auto.",
                        "VernacExtend",
                        "b24d14d17801e9f0f26a4f26dbd1f4377067e148"
                    ]
                },
                {
                    "command": [
                        "elim (NotClockwiseABA A B); apply H1; [ autoDistinct | autoClockwise ].",
                        "VernacExtend",
                        "4b2c0bbac2478224564a9bd4d6d328f068893ac8"
                    ]
                },
                {
                    "command": [
                        "elim (NotClockwiseABA C B); auto.",
                        "VernacExtend",
                        "92aac55dab3acf94e188798e3cf8ce364ceab9f1"
                    ]
                },
                {
                    "command": [
                        "elim (NotClockwiseABA A B); apply H0; autoClockwise.",
                        "VernacExtend",
                        "1d6cc5160fd2a4e9cd8827331739525ae612dda4"
                    ]
                },
                {
                    "command": [
                        "elim (NotClockwiseABA C B); apply H1; [ autoDistinct | autoClockwise ].",
                        "VernacExtend",
                        "c40d4f4359c08e344fc84f90b7e33de97d774238"
                    ]
                },
                {
                    "command": [
                        "elim (NotClockwiseBAA A B); apply H; autoClockwise.",
                        "VernacExtend",
                        "786cd8694d99d80dea5067b818494e5f323e7c75"
                    ]
                },
                {
                    "command": [
                        "elim (NotClockwiseABA A B); apply H2; autoClockwise.",
                        "VernacExtend",
                        "62efa00f623277873b854006b550c293b6474689"
                    ]
                },
                {
                    "command": [
                        "assert (H2 := sym_not_eq (ClockwiseDistinctBC _ _ _ H)).",
                        "VernacExtend",
                        "fd74676ad62af723a900286cf4eb05a4c5cfa5a7"
                    ]
                },
                {
                    "command": [
                        "assert (H3 := H1 H2); clear H1.",
                        "VernacExtend",
                        "a7a521fbe4e3bc28be09d95950c369c771603a6f"
                    ]
                },
                {
                    "command": [
                        "generalizeChange.",
                        "VernacExtend",
                        "d3c977ebf7f2c5588433912c8eb25fd198cbcf67"
                    ]
                },
                {
                    "command": [
                        "elim (NotClockwiseABA C B); auto.",
                        "VernacExtend",
                        "92aac55dab3acf94e188798e3cf8ce364ceab9f1"
                    ]
                },
                {
                    "command": [
                        "elim (NotClockwiseBAA C B); apply H1; [ autoDistinct | autoClockwise ].",
                        "VernacExtend",
                        "f2d9e00b80eff9667ec67545ffa2017dcd489ffd"
                    ]
                },
                {
                    "command": [
                        "elim (NotClockwiseBAA C B); apply H1; [ autoDistinct | autoClockwise ].",
                        "VernacExtend",
                        "f2d9e00b80eff9667ec67545ffa2017dcd489ffd"
                    ]
                },
                {
                    "command": [
                        "elim (NotClockwiseBAA A B); apply H0; autoClockwise.",
                        "VernacExtend",
                        "488be8678395be76f816384e8768257108fe365f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ClockwiseEq",
            "line_nb": 140,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (H2 := ClockwiseDistinctAB _ _ _ H).",
                        "VernacExtend",
                        "9d8a90f0e7feb6a69472997adaaa718c4c2dfde7"
                    ]
                },
                {
                    "command": [
                        "assert (H3 := ClockwiseDistinctBC _ _ _ H).",
                        "VernacExtend",
                        "7f226cbbae888ff1a445e94a13df286ff2d46bf6"
                    ]
                },
                {
                    "command": [
                        "setLine A B H2 ipattern:(AB) ipattern:(D1).",
                        "VernacExtend",
                        "f4e4fc5d3cb569716a1d4f3aa20eb1b9aebc10d7"
                    ]
                },
                {
                    "command": [
                        "setLine B C H3 ipattern:(BC) ipattern:(D2).",
                        "VernacExtend",
                        "d585f224a29a03fc659601ac5fec31feaf7e4325"
                    ]
                },
                {
                    "command": [
                        "setLinterL AB BC D1 D2 ipattern:(E) ipattern:(H4) ipattern:(H5) ipattern:(H6).",
                        "VernacExtend",
                        "00fd4947b5d8b857aea627d3550f23aa8b039be7"
                    ]
                },
                {
                    "command": [
                        "intro H4; elim (ClockwiseNotCollinear _ _ _ H).",
                        "VernacExtend",
                        "e890b70db8c2f3aea5fa29f577bc10ec79091bd7"
                    ]
                },
                {
                    "command": [
                        "apply EquiDirectedCollinear; trivial.",
                        "VernacExtend",
                        "482e0652b6e0f0acfaabd5d72cc9a506cae62bd0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (H6 D); intuition.",
                        "VernacExtend",
                        "5d4da8ab16f1d5a2ab51198cef444213accf709e"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq; apply (H6 B); split; autoCollinear.",
                        "VernacExtend",
                        "007824dd8703fa6e7d2bbbfa67ca484e81e6c452"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CongruentStrictTrianglesASAAB",
            "line_nb": 152,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "decompose [or] (FourCases A' B' C').",
                        "VernacExtend",
                        "3ecf8556f72e611e3cfa6fff5cefba7e4ae3a16b"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsHalfLineEquidistant A' C' A C) as (C'', (H4, H5)).",
                        "VernacExtend",
                        "d870fcd98ad74f214c4f2c996b6f121df5e38ae2"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "assert (H4 := NotCollinearDistinctCA _ _ _ H2); auto.",
                        "VernacExtend",
                        "8fdb3ea396d2105ba0ec64f73d44f2f3767651a2"
                    ]
                },
                {
                    "command": [
                        "assert (H6 : CongruentStrictTriangles A B C A' B' C'').",
                        "VernacExtend",
                        "894ca9ec0e5f7ae0f14c0ffca7d31156fa8052f9"
                    ]
                },
                {
                    "command": [
                        "apply CongruentStrictTrianglesSASA; auto.",
                        "VernacExtend",
                        "8ba61824ac68679362ebb60768ed8c59047ef165"
                    ]
                },
                {
                    "command": [
                        "rewrite H0; apply (HalfLineAngleC A' B' C' C''); autoDistinct.",
                        "VernacExtend",
                        "92d95f3531cbda1a07935c472536fdf03c170cf5"
                    ]
                },
                {
                    "command": [
                        "assert (H7 : C' = C'').",
                        "VernacExtend",
                        "22d2a3a3a2f0726f9daa14914232e23f9ac90b64"
                    ]
                },
                {
                    "command": [
                        "apply (ClockwiseEq B' C' A' C'').",
                        "VernacExtend",
                        "4d401f1e783ba046d25e6ab63c75eb6cbc58189b"
                    ]
                },
                {
                    "command": [
                        "autoClockwise.",
                        "VernacExtend",
                        "9409e85b86446941015e1da6ca2353051468a0c2"
                    ]
                },
                {
                    "command": [
                        "apply HalfLineCollinear.",
                        "VernacExtend",
                        "a29b52129acde266125f3d8837e9fd8ec3503d8a"
                    ]
                },
                {
                    "command": [
                        "apply (AngleBHalfLine B' C' A' C'').",
                        "VernacExtend",
                        "206f7b43f3b191176b37862136de34b14aa56a18"
                    ]
                },
                {
                    "command": [
                        "autoClockwise.",
                        "VernacExtend",
                        "9409e85b86446941015e1da6ca2353051468a0c2"
                    ]
                },
                {
                    "command": [
                        "generalizeChangeSense.",
                        "VernacExtend",
                        "be975c77c59224ac5239b36f960f98e48421bb54"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseCAB; apply H2; autoClockwise.",
                        "VernacExtend",
                        "9a23b2bf53c869555be619dbcb0cc5d572e2e71c"
                    ]
                },
                {
                    "command": [
                        "rewrite AngleSym; [ rewrite <- H1 | autoDistinct | autoDistinct ].",
                        "VernacExtend",
                        "3dbb5092ab88a38e7e8111a3309f61acd8354d0d"
                    ]
                },
                {
                    "command": [
                        "rewrite (AngleSym B' C'' A').",
                        "VernacExtend",
                        "97f76b9c575beaff9241a74b4b5a7bd1d240bcb9"
                    ]
                },
                {
                    "command": [
                        "apply (CongruentStrictTrianglesB _ _ _ _ _ _ H6).",
                        "VernacExtend",
                        "08bd81934277effb8ec4474cd716367e686815f8"
                    ]
                },
                {
                    "command": [
                        "intro; subst.",
                        "VernacExtend",
                        "9021e22274b6259ff513a190b208a4a3aa9b2ede"
                    ]
                },
                {
                    "command": [
                        "elim (ClockwiseNotCollinear _ _ _ H3); apply CollinearACB; apply HalfLineCollinear; trivial.",
                        "VernacExtend",
                        "0b3ef4853755ebee476a00b01aece693b9422349"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBAC; apply HalfLineCollinear; trivial.",
                        "VernacExtend",
                        "f5c39eefea8e7e52d5f1636e4436e997b1635206"
                    ]
                },
                {
                    "command": [
                        "rewrite H7; trivial.",
                        "VernacExtend",
                        "1280b16392ee9891d94ee071838bac2ec6538975"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsHalfLineEquidistant B' C' B C) as (C'', (H5, H6)).",
                        "VernacExtend",
                        "b588a7cedb8b180117f7162b093d6d0785659f59"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "apply (NotCollinearDistinctBC _ _ _ H2); trivial.",
                        "VernacExtend",
                        "0ff232471ffe19fc4e2e94904db1de1d7d0e7fdc"
                    ]
                },
                {
                    "command": [
                        "assert (H7 : CongruentStrictTriangles B A C B' A' C'').",
                        "VernacExtend",
                        "547f3f207e8b3c50b58dbb6a46d6770497a31516"
                    ]
                },
                {
                    "command": [
                        "apply CongruentStrictTrianglesSASA.",
                        "VernacExtend",
                        "eed8d6d20c117025cee48565ebf8ee590f5b8f75"
                    ]
                },
                {
                    "command": [
                        "autoDistance.",
                        "VernacExtend",
                        "0c749375e926c665509e5f0134261461e6f9bac3"
                    ]
                },
                {
                    "command": [
                        "autoDistance.",
                        "VernacExtend",
                        "0c749375e926c665509e5f0134261461e6f9bac3"
                    ]
                },
                {
                    "command": [
                        "rewrite H1; apply (HalfLineAngleC B' A' C' C''); autoDistinct.",
                        "VernacExtend",
                        "dd53c299e3f9f89eab315d70b72c25bfedda1696"
                    ]
                },
                {
                    "command": [
                        "intro; elim H2; autoCollinear.",
                        "VernacExtend",
                        "736d9e837c011f53c2e6e6eea09f411ad76e68f4"
                    ]
                },
                {
                    "command": [
                        "assert (H8 : C' = C'').",
                        "VernacExtend",
                        "1a0e6c24c691ca8b00bb4d8d3f057821532b6c36"
                    ]
                },
                {
                    "command": [
                        "apply (ClockwiseEq A' C' B' C'').",
                        "VernacExtend",
                        "2c518494c52f4680c09cfe7d9e16017838170919"
                    ]
                },
                {
                    "command": [
                        "autoClockwise.",
                        "VernacExtend",
                        "9409e85b86446941015e1da6ca2353051468a0c2"
                    ]
                },
                {
                    "command": [
                        "apply HalfLineCollinear.",
                        "VernacExtend",
                        "a29b52129acde266125f3d8837e9fd8ec3503d8a"
                    ]
                },
                {
                    "command": [
                        "apply (AngleBHalfLine A' C' B' C'').",
                        "VernacExtend",
                        "8d4fe40006c653e989489b54aa646a56b20b2f7a"
                    ]
                },
                {
                    "command": [
                        "autoClockwise.",
                        "VernacExtend",
                        "9409e85b86446941015e1da6ca2353051468a0c2"
                    ]
                },
                {
                    "command": [
                        "generalizeChangeSense.",
                        "VernacExtend",
                        "be975c77c59224ac5239b36f960f98e48421bb54"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseCAB; apply H2; autoClockwise.",
                        "VernacExtend",
                        "9a23b2bf53c869555be619dbcb0cc5d572e2e71c"
                    ]
                },
                {
                    "command": [
                        "rewrite AngleSym; [ rewrite <- H0 | autoDistinct | autoDistinct ].",
                        "VernacExtend",
                        "f7d122ce3fa1baa1e6f9442d3cec769851c8a06e"
                    ]
                },
                {
                    "command": [
                        "rewrite (AngleSym A' C'' B').",
                        "VernacExtend",
                        "a9aabdab07d2c96ab157b831ca032c37d2e82953"
                    ]
                },
                {
                    "command": [
                        "apply (CongruentStrictTrianglesB _ _ _ _ _ _ H7).",
                        "VernacExtend",
                        "b35127aef72a6aa7e9f2c135aeec0cf94af1580c"
                    ]
                },
                {
                    "command": [
                        "intro; subst.",
                        "VernacExtend",
                        "9021e22274b6259ff513a190b208a4a3aa9b2ede"
                    ]
                },
                {
                    "command": [
                        "elim (ClockwiseNotCollinear _ _ _ H4); apply CollinearACB; apply HalfLineCollinear; trivial.",
                        "VernacExtend",
                        "a4826ae29800f72f0d353cd2aee921d02f7a0214"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBAC; apply HalfLineCollinear; trivial.",
                        "VernacExtend",
                        "f5c39eefea8e7e52d5f1636e4436e997b1635206"
                    ]
                },
                {
                    "command": [
                        "rewrite H8; apply CongruentStrictTrianglesBAC; trivial.",
                        "VernacExtend",
                        "1adef61284d6eafeb1753500354c08665a99f1a0"
                    ]
                },
                {
                    "command": [
                        "elim H2; assert (A' <> B').",
                        "VernacExtend",
                        "e8b3c7058cd9f0b0cc016d6d292d43edf8885fc2"
                    ]
                },
                {
                    "command": [
                        "intro; subst.",
                        "VernacExtend",
                        "9021e22274b6259ff513a190b208a4a3aa9b2ede"
                    ]
                },
                {
                    "command": [
                        "elim (NotCollinearDistinctAB _ _ _ H2).",
                        "VernacExtend",
                        "4217dc2a4f9f2e8a39da3fef4a0d32fd6f230899"
                    ]
                },
                {
                    "command": [
                        "apply DistNull; rewrite H; apply NullDist.",
                        "VernacExtend",
                        "c7cdbb3c13b5e88a03d63bca9fefdc0d199aedbc"
                    ]
                },
                {
                    "command": [
                        "rewrite (NullAngle A' B' C' H4 H3) in H0.",
                        "VernacExtend",
                        "ac97275c4efb07c093700de51804605f8e5dab20"
                    ]
                },
                {
                    "command": [
                        "apply HalfLineCollinear; apply NullAngleHalfLine.",
                        "VernacExtend",
                        "bf8276e001771f2108c126cb1afa435e7758f840"
                    ]
                },
                {
                    "command": [
                        "apply (NotCollinearDistinctAB _ _ _ H2).",
                        "VernacExtend",
                        "ff76e5d394ad94dae540ce6eab63f813359d7ddc"
                    ]
                },
                {
                    "command": [
                        "apply (sym_not_eq (NotCollinearDistinctCA _ _ _ H2)).",
                        "VernacExtend",
                        "e9b744782af0d350791bd472d97890cdce91f5ef"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "elim H2; assert (B' <> A').",
                        "VernacExtend",
                        "a36f3f098622e8aceede25645bf426b32de47dd6"
                    ]
                },
                {
                    "command": [
                        "intro; subst.",
                        "VernacExtend",
                        "9021e22274b6259ff513a190b208a4a3aa9b2ede"
                    ]
                },
                {
                    "command": [
                        "elim (NotCollinearDistinctAB _ _ _ H2).",
                        "VernacExtend",
                        "4217dc2a4f9f2e8a39da3fef4a0d32fd6f230899"
                    ]
                },
                {
                    "command": [
                        "apply DistNull; rewrite H; apply NullDist.",
                        "VernacExtend",
                        "c7cdbb3c13b5e88a03d63bca9fefdc0d199aedbc"
                    ]
                },
                {
                    "command": [
                        "rewrite (NullAngle B' A' C' H4 H3) in H1.",
                        "VernacExtend",
                        "686830b0b9c15c4d9a51e42f13e89fca199417bf"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBAC; apply HalfLineCollinear; apply NullAngleHalfLine.",
                        "VernacExtend",
                        "07c8dfdbad3a1eaa30b6fb187a51f58350748c9f"
                    ]
                },
                {
                    "command": [
                        "apply (sym_not_eq (NotCollinearDistinctAB _ _ _ H2)).",
                        "VernacExtend",
                        "0cc54fe92d415f618eeecc0b984cf72f0a4c468d"
                    ]
                },
                {
                    "command": [
                        "apply (NotCollinearDistinctBC _ _ _ H2).",
                        "VernacExtend",
                        "abaac12bd8dfdae8667b4b1cc5dede4d5f60f1ec"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CongruentStrictTrianglesASABC",
            "line_nb": 221,
            "steps": [
                {
                    "command": [
                        "intros; apply CongruentStrictTrianglesCAB.",
                        "VernacExtend",
                        "5af429bfa95e366f7f8982f92aebdaa2ceddba4a"
                    ]
                },
                {
                    "command": [
                        "decompose [or] (FourCases B' C' A').",
                        "VernacExtend",
                        "5c3545ffa450fe88432e97cb9c0fe97f26141c35"
                    ]
                },
                {
                    "command": [
                        "apply CongruentStrictTrianglesASAAB.",
                        "VernacExtend",
                        "3c93dc763ef3fb434b358286d5582bd07fd33b6a"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "rewrite AngleSym.",
                        "VernacExtend",
                        "61bae63dd4924d748abf43be2b138a8af18fe753"
                    ]
                },
                {
                    "command": [
                        "rewrite H0; apply AngleSym; autoDistinct.",
                        "VernacExtend",
                        "0d1b641c6912230ed91a5489098add99321bbc23"
                    ]
                },
                {
                    "command": [
                        "apply (NotCollinearDistinctBC _ _ _ H2).",
                        "VernacExtend",
                        "abaac12bd8dfdae8667b4b1cc5dede4d5f60f1ec"
                    ]
                },
                {
                    "command": [
                        "apply (sym_not_eq (NotCollinearDistinctAB _ _ _ H2)).",
                        "VernacExtend",
                        "0cc54fe92d415f618eeecc0b984cf72f0a4c468d"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "intro; elim H2; autoCollinear.",
                        "VernacExtend",
                        "736d9e837c011f53c2e6e6eea09f411ad76e68f4"
                    ]
                },
                {
                    "command": [
                        "apply CongruentStrictTrianglesASAAB.",
                        "VernacExtend",
                        "3c93dc763ef3fb434b358286d5582bd07fd33b6a"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "rewrite AngleSym.",
                        "VernacExtend",
                        "61bae63dd4924d748abf43be2b138a8af18fe753"
                    ]
                },
                {
                    "command": [
                        "rewrite H0; apply AngleSym; autoDistinct.",
                        "VernacExtend",
                        "0d1b641c6912230ed91a5489098add99321bbc23"
                    ]
                },
                {
                    "command": [
                        "apply (NotCollinearDistinctBC _ _ _ H2).",
                        "VernacExtend",
                        "abaac12bd8dfdae8667b4b1cc5dede4d5f60f1ec"
                    ]
                },
                {
                    "command": [
                        "apply (sym_not_eq (NotCollinearDistinctAB _ _ _ H2)).",
                        "VernacExtend",
                        "0cc54fe92d415f618eeecc0b984cf72f0a4c468d"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "intro; elim H2; autoCollinear.",
                        "VernacExtend",
                        "736d9e837c011f53c2e6e6eea09f411ad76e68f4"
                    ]
                },
                {
                    "command": [
                        "elim H2; assert (B' <> C').",
                        "VernacExtend",
                        "c4e12f3d1c1d65190f61e5ba91347ec0949564aa"
                    ]
                },
                {
                    "command": [
                        "intro; subst.",
                        "VernacExtend",
                        "9021e22274b6259ff513a190b208a4a3aa9b2ede"
                    ]
                },
                {
                    "command": [
                        "elim (NotCollinearDistinctBC _ _ _ H2).",
                        "VernacExtend",
                        "baf63999eecce54725746596fe3eeea88a818db4"
                    ]
                },
                {
                    "command": [
                        "apply DistNull; rewrite H; apply NullDist.",
                        "VernacExtend",
                        "c7cdbb3c13b5e88a03d63bca9fefdc0d199aedbc"
                    ]
                },
                {
                    "command": [
                        "assert (H5 := NullAngle B' C' A' H4 H3).",
                        "VernacExtend",
                        "8b7aaf039094611598966dab4093605cf2ca5c04"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBAC; apply HalfLineCollinear; apply NullAngleHalfLine.",
                        "VernacExtend",
                        "07c8dfdbad3a1eaa30b6fb187a51f58350748c9f"
                    ]
                },
                {
                    "command": [
                        "apply (sym_not_eq (NotCollinearDistinctAB _ _ _ H2)).",
                        "VernacExtend",
                        "0cc54fe92d415f618eeecc0b984cf72f0a4c468d"
                    ]
                },
                {
                    "command": [
                        "apply (NotCollinearDistinctBC _ _ _ H2).",
                        "VernacExtend",
                        "abaac12bd8dfdae8667b4b1cc5dede4d5f60f1ec"
                    ]
                },
                {
                    "command": [
                        "rewrite H0; rewrite <- H5.",
                        "VernacExtend",
                        "16ba6e430b8631aaef4d38632d551ac5962b5216"
                    ]
                },
                {
                    "command": [
                        "apply AngleSym.",
                        "VernacExtend",
                        "94778a4ba3864f11a4d1f64bd9c8d95c135d9def"
                    ]
                },
                {
                    "command": [
                        "apply (HalfLineDistinct B' C' A' H4 H3).",
                        "VernacExtend",
                        "4a98314650fda5fca4a476990779f659187402ea"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "elim H2; assert (C' <> B').",
                        "VernacExtend",
                        "d3812f8305c20ee609251b123fa03def013985df"
                    ]
                },
                {
                    "command": [
                        "intro; subst.",
                        "VernacExtend",
                        "9021e22274b6259ff513a190b208a4a3aa9b2ede"
                    ]
                },
                {
                    "command": [
                        "elim (NotCollinearDistinctBC _ _ _ H2).",
                        "VernacExtend",
                        "baf63999eecce54725746596fe3eeea88a818db4"
                    ]
                },
                {
                    "command": [
                        "apply DistNull; rewrite H; apply NullDist.",
                        "VernacExtend",
                        "c7cdbb3c13b5e88a03d63bca9fefdc0d199aedbc"
                    ]
                },
                {
                    "command": [
                        "apply CollinearCBA; apply HalfLineCollinear; apply NullAngleHalfLine.",
                        "VernacExtend",
                        "b7ac8e0bc9ea58e3594dea24502c379e73090093"
                    ]
                },
                {
                    "command": [
                        "apply (sym_not_eq (NotCollinearDistinctBC _ _ _ H2)).",
                        "VernacExtend",
                        "989773e4f0e299939f992adfb04fd3ab0eabe23b"
                    ]
                },
                {
                    "command": [
                        "apply (NotCollinearDistinctCA _ _ _ H2).",
                        "VernacExtend",
                        "4e9230becfba00277503261482d061fd182e509a"
                    ]
                },
                {
                    "command": [
                        "rewrite H1; apply NullAngle; trivial.",
                        "VernacExtend",
                        "d2ed3c9c2b799404219aa5a2e6d28516d7cfaa87"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CongruentStrictTrianglesASACA",
            "line_nb": 261,
            "steps": [
                {
                    "command": [
                        "intros; apply CongruentStrictTrianglesBCA.",
                        "VernacExtend",
                        "109fd2ade9783ed0a2cd953dc400be14684017e2"
                    ]
                },
                {
                    "command": [
                        "decompose [or] (FourCases C' A' B').",
                        "VernacExtend",
                        "afdd927d5a32ba966af2cb2303223c34d08b7dc1"
                    ]
                },
                {
                    "command": [
                        "apply CongruentStrictTrianglesASAAB.",
                        "VernacExtend",
                        "3c93dc763ef3fb434b358286d5582bd07fd33b6a"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "rewrite AngleSym.",
                        "VernacExtend",
                        "61bae63dd4924d748abf43be2b138a8af18fe753"
                    ]
                },
                {
                    "command": [
                        "rewrite H0; apply AngleSym.",
                        "VernacExtend",
                        "5d4d82be34a6edb712c2b065c40bb273b8536e9a"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "apply (NotCollinearDistinctCA _ _ _ H2).",
                        "VernacExtend",
                        "4e9230becfba00277503261482d061fd182e509a"
                    ]
                },
                {
                    "command": [
                        "apply (sym_not_eq (NotCollinearDistinctBC _ _ _ H2)).",
                        "VernacExtend",
                        "989773e4f0e299939f992adfb04fd3ab0eabe23b"
                    ]
                },
                {
                    "command": [
                        "rewrite AngleSym.",
                        "VernacExtend",
                        "61bae63dd4924d748abf43be2b138a8af18fe753"
                    ]
                },
                {
                    "command": [
                        "rewrite H1; apply AngleSym; autoDistinct.",
                        "VernacExtend",
                        "d011f0185bc3671c3f4ac02c6682c05b40abb80b"
                    ]
                },
                {
                    "command": [
                        "apply (sym_not_eq (NotCollinearDistinctCA _ _ _ H2)).",
                        "VernacExtend",
                        "e9b744782af0d350791bd472d97890cdce91f5ef"
                    ]
                },
                {
                    "command": [
                        "apply (NotCollinearDistinctAB _ _ _ H2).",
                        "VernacExtend",
                        "ff76e5d394ad94dae540ce6eab63f813359d7ddc"
                    ]
                },
                {
                    "command": [
                        "intro; elim H2; autoCollinear.",
                        "VernacExtend",
                        "736d9e837c011f53c2e6e6eea09f411ad76e68f4"
                    ]
                },
                {
                    "command": [
                        "apply CongruentStrictTrianglesASAAB.",
                        "VernacExtend",
                        "3c93dc763ef3fb434b358286d5582bd07fd33b6a"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "rewrite AngleSym.",
                        "VernacExtend",
                        "61bae63dd4924d748abf43be2b138a8af18fe753"
                    ]
                },
                {
                    "command": [
                        "rewrite H0; apply AngleSym; autoDistinct.",
                        "VernacExtend",
                        "0d1b641c6912230ed91a5489098add99321bbc23"
                    ]
                },
                {
                    "command": [
                        "apply (NotCollinearDistinctCA _ _ _ H2).",
                        "VernacExtend",
                        "4e9230becfba00277503261482d061fd182e509a"
                    ]
                },
                {
                    "command": [
                        "apply (sym_not_eq (NotCollinearDistinctBC _ _ _ H2)).",
                        "VernacExtend",
                        "989773e4f0e299939f992adfb04fd3ab0eabe23b"
                    ]
                },
                {
                    "command": [
                        "rewrite AngleSym.",
                        "VernacExtend",
                        "61bae63dd4924d748abf43be2b138a8af18fe753"
                    ]
                },
                {
                    "command": [
                        "rewrite H1; apply AngleSym; autoDistinct.",
                        "VernacExtend",
                        "d011f0185bc3671c3f4ac02c6682c05b40abb80b"
                    ]
                },
                {
                    "command": [
                        "apply (sym_not_eq (NotCollinearDistinctCA _ _ _ H2)).",
                        "VernacExtend",
                        "e9b744782af0d350791bd472d97890cdce91f5ef"
                    ]
                },
                {
                    "command": [
                        "apply (NotCollinearDistinctAB _ _ _ H2).",
                        "VernacExtend",
                        "ff76e5d394ad94dae540ce6eab63f813359d7ddc"
                    ]
                },
                {
                    "command": [
                        "intro; elim H2; autoCollinear.",
                        "VernacExtend",
                        "736d9e837c011f53c2e6e6eea09f411ad76e68f4"
                    ]
                },
                {
                    "command": [
                        "elim H2; assert (C' <> A').",
                        "VernacExtend",
                        "2fe5f0a688f731717402120f3012196cfac2fe53"
                    ]
                },
                {
                    "command": [
                        "intro; subst.",
                        "VernacExtend",
                        "9021e22274b6259ff513a190b208a4a3aa9b2ede"
                    ]
                },
                {
                    "command": [
                        "elim (NotCollinearDistinctCA _ _ _ H2).",
                        "VernacExtend",
                        "b848c50f1e6d38e497b30a0d355a4b3d579efa4d"
                    ]
                },
                {
                    "command": [
                        "apply DistNull; rewrite H; apply NullDist.",
                        "VernacExtend",
                        "c7cdbb3c13b5e88a03d63bca9fefdc0d199aedbc"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBCA; apply HalfLineCollinear; apply NullAngleHalfLine.",
                        "VernacExtend",
                        "a7a214bdbceacf06cdca1377d13d7701dd976dc4"
                    ]
                },
                {
                    "command": [
                        "apply (NotCollinearDistinctCA _ _ _ H2).",
                        "VernacExtend",
                        "4e9230becfba00277503261482d061fd182e509a"
                    ]
                },
                {
                    "command": [
                        "apply (sym_not_eq (NotCollinearDistinctBC _ _ _ H2)).",
                        "VernacExtend",
                        "989773e4f0e299939f992adfb04fd3ab0eabe23b"
                    ]
                },
                {
                    "command": [
                        "rewrite AngleSym.",
                        "VernacExtend",
                        "61bae63dd4924d748abf43be2b138a8af18fe753"
                    ]
                },
                {
                    "command": [
                        "rewrite H0; apply NullAngle.",
                        "VernacExtend",
                        "7ae0281b62ce0515f227af13fe4a4fe6e0d6750f"
                    ]
                },
                {
                    "command": [
                        "apply (HalfLineDistinct C' A' B' H4 H3).",
                        "VernacExtend",
                        "2db5caef4a6f8d21725e20b329182e8938d47956"
                    ]
                },
                {
                    "command": [
                        "apply HalfLineSym; trivial.",
                        "VernacExtend",
                        "1820c07b4d82b7d69ac8f032296b8ed167f7fa48"
                    ]
                },
                {
                    "command": [
                        "apply (NotCollinearDistinctCA _ _ _ H2).",
                        "VernacExtend",
                        "4e9230becfba00277503261482d061fd182e509a"
                    ]
                },
                {
                    "command": [
                        "apply (sym_not_eq (NotCollinearDistinctBC _ _ _ H2)).",
                        "VernacExtend",
                        "989773e4f0e299939f992adfb04fd3ab0eabe23b"
                    ]
                },
                {
                    "command": [
                        "elim H2; assert (A' <> C').",
                        "VernacExtend",
                        "817daff38dccd3fa8f1ef34567819cd5dd3da8d1"
                    ]
                },
                {
                    "command": [
                        "intro; subst.",
                        "VernacExtend",
                        "9021e22274b6259ff513a190b208a4a3aa9b2ede"
                    ]
                },
                {
                    "command": [
                        "elim (NotCollinearDistinctCA _ _ _ H2).",
                        "VernacExtend",
                        "b848c50f1e6d38e497b30a0d355a4b3d579efa4d"
                    ]
                },
                {
                    "command": [
                        "apply DistNull; rewrite H; apply NullDist.",
                        "VernacExtend",
                        "c7cdbb3c13b5e88a03d63bca9fefdc0d199aedbc"
                    ]
                },
                {
                    "command": [
                        "apply HalfLineCollinear; apply NullAngleHalfLine.",
                        "VernacExtend",
                        "bf8276e001771f2108c126cb1afa435e7758f840"
                    ]
                },
                {
                    "command": [
                        "apply (NotCollinearDistinctAB _ _ _ H2).",
                        "VernacExtend",
                        "ff76e5d394ad94dae540ce6eab63f813359d7ddc"
                    ]
                },
                {
                    "command": [
                        "apply (sym_not_eq (NotCollinearDistinctCA _ _ _ H2)).",
                        "VernacExtend",
                        "e9b744782af0d350791bd472d97890cdce91f5ef"
                    ]
                },
                {
                    "command": [
                        "rewrite H1; apply NullAngle.",
                        "VernacExtend",
                        "615a4cd615bd15b46b0d197ac1f50f2420e41ab4"
                    ]
                },
                {
                    "command": [
                        "apply (HalfLineDistinct A' C' B' H4 H3).",
                        "VernacExtend",
                        "2157f8dda00d67e8f9210b316c555e5252a3e0c1"
                    ]
                },
                {
                    "command": [
                        "apply HalfLineSym; trivial.",
                        "VernacExtend",
                        "1820c07b4d82b7d69ac8f032296b8ed167f7fa48"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}