{
    "filename": "D7_NonParalleles_Secantes.v",
    "coq_project": "ruler-compass-geometry",
    "vernac_cmds": [
        [
            "Require Export D6_SumAnglesProp.",
            "VernacRequire",
            "7ea70d7399cbdccfd4bf664965031f455f5f27fa"
        ],
        [
            "Require Export Omega.",
            "VernacRequire",
            "0481b56b468f7aa7f5517bbdc71f6985bb9f8b59"
        ],
        [
            "Section DISTINCT_PARALLEL.",
            "VernacBeginSection",
            "3e0ca8b9753a0b1e0936a1261d86ca02d4bd87fa"
        ],
        [
            "Lemma ThreeEmbeddedTriangles : forall A B C D E F G : Point, Clockwise A B C -> HalfLine A B D -> HalfLine A C E -> Angle A B C = Angle A D E -> Angle A C B = Angle A E D -> Between A D F -> Between A E G -> Distance D F = Distance A B -> Distance E G = Distance A C -> Angle A B C = Angle A F G /\\ Angle A C B = Angle A G F.",
            "VernacStartTheoremProof",
            "35adc0ef6098981a62f71f8e66a2327157da4a28"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (H8 : Clockwise E D F).",
            "VernacExtend",
            "63af3df39c803c9d5f2b69149fb41186573a76d8"
        ],
        [
            "generalizeChangeSense.",
            "VernacExtend",
            "be975c77c59224ac5239b36f960f98e48421bb54"
        ],
        [
            "apply ClockwiseCAB; apply H9; apply H0.",
            "VernacExtend",
            "f8484517774496d189fa654442a43bf073a7c1a0"
        ],
        [
            "apply ClockwiseBCA; apply H11; autoClockwise.",
            "VernacExtend",
            "87a4dfdac9b01ec5035878c8f3b5b5cfac7dc045"
        ],
        [
            "destruct (ExistsDParallelogramm _ _ _ H8) as (I, H9).",
            "VernacExtend",
            "64adf7ec05116338800c6dfeeb228e6322eb0339"
        ],
        [
            "assert (CongruentStrictTriangles A B C E I G).",
            "VernacExtend",
            "385661922a22f3d1a39ee69bd0791db17808622a"
        ],
        [
            "apply CongruentStrictTrianglesSASA.",
            "VernacExtend",
            "eed8d6d20c117025cee48565ebf8ee590f5b8f75"
        ],
        [
            "assert (H10 := ParallelogrammCongruentTrianglesAC _ _ _ _ (ParallelogrammPermut _ _ _ _ H9)).",
            "VernacExtend",
            "1694a03ad293045a0cea2ea12790767cd745fcd7"
        ],
        [
            "rewrite (DistSym E I); rewrite <- (CongruentStrictTrianglesAB _ _ _ _ _ _ H10); auto.",
            "VernacExtend",
            "ed5db94e430c58b2d9bcfbdae7230efb3bea93b1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply sym_eq; apply (SumAnglesCorollary E A D I G B C A).",
            "VernacExtend",
            "a656105b3aa54332302d2e83197335af99a8abf6"
        ],
        [
            "autoClockwise.",
            "VernacExtend",
            "9409e85b86446941015e1da6ca2353051468a0c2"
        ],
        [
            "generalizeChangeSense.",
            "VernacExtend",
            "be975c77c59224ac5239b36f960f98e48421bb54"
        ],
        [
            "apply H13; apply ClockwiseCAB; apply H0; autoClockwise.",
            "VernacExtend",
            "61747d89537a61e90cda09971560c099abd7b5c4"
        ],
        [
            "apply ClockwiseCAB; exact (ParallelogrammClockwiseBDA _ _ _ _ H9).",
            "VernacExtend",
            "99161f8753c73214f9853f4d902cbb290e6973a1"
        ],
        [
            "rewrite <- H3; apply AngleSym.",
            "VernacExtend",
            "4f7f011251c45c775c5d90a0350771bfe4c84635"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "rewrite (AngleSym E).",
            "VernacExtend",
            "cb3479ad220c6d5a6511214369065a94a4cb312f"
        ],
        [
            "rewrite (ExternParallelogramm I E D F A).",
            "VernacExtend",
            "6a97157de65020c6fec7c6292508f3223b4208f0"
        ],
        [
            "rewrite (AngleSym D).",
            "VernacExtend",
            "3ef9e2c582e5415cede36e8cbc6c379ef5c331ea"
        ],
        [
            "rewrite (AngleSym B); auto; autoDistinct.",
            "VernacExtend",
            "aa82d248bf6c0f5c28ad024e33453e8d5e4df055"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "exact (sym_not_eq (BetweenDistinctAB _ _ _ H4)).",
            "VernacExtend",
            "f0d5a7aaf76bb2fbfe233cfcdbbbce11f2539531"
        ],
        [
            "do 3 apply ParallelogrammPermut; trivial.",
            "VernacExtend",
            "b25fc4e6e8434826f12cd2558fc4c53d09236612"
        ],
        [
            "exact (BetweenSym _ _ _ H4).",
            "VernacExtend",
            "316a7500c0b630367dfcd23cc007ef4003608369"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "exact (sym_not_eq (ParallelogrammDistinctCD _ _ _ _ (ParallelogrammPermut _ _ _ _ H9))).",
            "VernacExtend",
            "dc1753cb38e0536d7075c40856d6c39b7ee0c7b1"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "exact (ClockwiseNotCollinear _ _ _ H).",
            "VernacExtend",
            "ea280aab83b9f0c340e88f1eede9e09c8a1506f8"
        ],
        [
            "assert (H11 : Between F I G).",
            "VernacExtend",
            "5e0fa44a817c2b5d688a9081a1537627f683cc80"
        ],
        [
            "apply (SupplementaryRec I F E G).",
            "VernacExtend",
            "888a2ea06640d1e9f1732c0dc1b3950b02c91fba"
        ],
        [
            "apply (ParallelogrammClockwiseBCD _ _ _ _ (ParallelogrammPermut _ _ _ _ H9)).",
            "VernacExtend",
            "a4768ad201ebf3d6e71f32805eebbcf07082ea9f"
        ],
        [
            "apply ClockwiseBCA; apply (EquiOrientedRev _ _ _ (BetweenSym _ _ _ H5)).",
            "VernacExtend",
            "c41e0a0205270892b49797efd3be067bf71b2e43"
        ],
        [
            "canonize; apply ClockwiseBCA.",
            "VernacExtend",
            "957eee7a53ca231759640f480da00e27500b596f"
        ],
        [
            "apply (HalfLineParallel I E D F A).",
            "VernacExtend",
            "ab9927ce9d1a94f608eb317258b346d079098c80"
        ],
        [
            "do 3 apply ParallelogrammPermut; trivial.",
            "VernacExtend",
            "b25fc4e6e8434826f12cd2558fc4c53d09236612"
        ],
        [
            "apply BetweenSymHalfLine; canonize.",
            "VernacExtend",
            "3594e2187a8458742e32d14eedd5332391709ba7"
        ],
        [
            "rewrite <- (CongruentStrictTrianglesB _ _ _ _ _ _ H10); rewrite H2.",
            "VernacExtend",
            "9af97c558f83f92e31878b93fca8a6bd33f80261"
        ],
        [
            "rewrite <- (CongruentStrictTrianglesB _ _ _ _ _ _ (ParallelogrammCongruentTrianglesAC _ _ _ _ H9)).",
            "VernacExtend",
            "e544495aa88af9af2c8edd5aeb305081044443ca"
        ],
        [
            "apply SupplementaryCommut; exists D; exists A; exists E; exists F; intuition.",
            "VernacExtend",
            "8296591fb67ae34a0c979d3dc5cf3a76e213cb13"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "rewrite (HalfLineAngleBC F A G D I).",
            "VernacExtend",
            "3919de094e87b716ce5903be66e5bf53525e296b"
        ],
        [
            "rewrite (ExternOppParallelogramm D F I E G).",
            "VernacExtend",
            "0d494d295b75dfca959990dd4b89b20a4f08f170"
        ],
        [
            "exact (CongruentStrictTrianglesB _ _ _ _ _ _ H10).",
            "VernacExtend",
            "288ef9652443d663300d2dfae64ee7e6ee06f841"
        ],
        [
            "exact (ParallelogrammPermut _ _ _ _ H9).",
            "VernacExtend",
            "e16de478e170aea87701864c46e903768245e6ea"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "exact (BetweenDistinctCA _ _ _ H4).",
            "VernacExtend",
            "85ccd32d63b576a40164f7b45ba643db06cef7ce"
        ],
        [
            "apply sym_not_eq; exact (BetweenDistinctCA _ _ _ H11).",
            "VernacExtend",
            "2d896c4b3848822aadca0e7579026305c2177b77"
        ],
        [
            "apply HalfLineSym.",
            "VernacExtend",
            "db45086aeefcf4852d4438b9e7f1c2f7046818c7"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "exact (BetweenSymHalfLine _ _ _ H4).",
            "VernacExtend",
            "8a2df304705c7c5379c0feb5981eae7079ae38cd"
        ],
        [
            "apply HalfLineSym.",
            "VernacExtend",
            "db45086aeefcf4852d4438b9e7f1c2f7046818c7"
        ],
        [
            "exact (BetweenDistinctAB _ _ _ H11).",
            "VernacExtend",
            "0c8e9f57f253ae37e86c647fa94765abe3ceed6f"
        ],
        [
            "exact (BetweenHalfLine _ _ _ H11).",
            "VernacExtend",
            "747bb44960abf622bfa24d1fb016085dbebef3cc"
        ],
        [
            "rewrite (HalfLineAngleBC G A F E I).",
            "VernacExtend",
            "d13e10f8bd42343d183a413d350aebb492e10af9"
        ],
        [
            "exact (CongruentStrictTrianglesC _ _ _ _ _ _ H10).",
            "VernacExtend",
            "38b95879012c912b2b1465ba13450e4caf12c99d"
        ],
        [
            "exact (BetweenDistinctCA _ _ _ H5).",
            "VernacExtend",
            "9171bf9da1099144a759086d24e0590d182b31c2"
        ],
        [
            "exact (BetweenDistinctCA _ _ _ H11).",
            "VernacExtend",
            "27809f2155d47cefeaa7c4e5701b07ae73676916"
        ],
        [
            "apply HalfLineSym.",
            "VernacExtend",
            "db45086aeefcf4852d4438b9e7f1c2f7046818c7"
        ],
        [
            "apply sym_not_eq; exact (BetweenDistinctBC _ _ _ H5).",
            "VernacExtend",
            "92ac2edf3b3b9a4c73a63e12eb793296892bd262"
        ],
        [
            "exact (BetweenSymHalfLine _ _ _ H5).",
            "VernacExtend",
            "5f6d775a7571a1013cf202a39c49ce9d0b4bfedc"
        ],
        [
            "apply HalfLineSym.",
            "VernacExtend",
            "db45086aeefcf4852d4438b9e7f1c2f7046818c7"
        ],
        [
            "apply sym_not_eq; exact (BetweenDistinctBC _ _ _ H11).",
            "VernacExtend",
            "381707d54bffe35ef74c4192b2c21e8e3eb7c9a6"
        ],
        [
            "exact (BetweenSymHalfLine _ _ _ H11).",
            "VernacExtend",
            "91113dd3fb99c3d9a740fde98c30f27a65f6ebc7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma EmbeddedSimilarTriangles : forall A B C : Point, forall n : nat, Clockwise A B C -> n > 0 -> forall D E : Point, HalfLine A B D -> HalfLine A C E -> Distance A D = DistTimesn n A B -> Distance A E = DistTimesn n A C -> Angle A B C = Angle A D E /\\ Angle A C B = Angle A E D.",
            "VernacStartTheoremProof",
            "24bf653a8c8cb472b613ad62e776ddafa14e4903"
        ],
        [
            "intros A B C n H Hn.",
            "VernacExtend",
            "808c511417b7c4cc727108c960317a733161b956"
        ],
        [
            "assert (Hab := ClockwiseDistinctAB _ _ _ H).",
            "VernacExtend",
            "dba1f4f205edf83c9f24c79f5fb99036704c2ffc"
        ],
        [
            "assert (Hac := sym_not_eq (ClockwiseDistinctCA _ _ _ H)).",
            "VernacExtend",
            "308b324136453193090cd5ddfd895d021634b003"
        ],
        [
            "induction Hn.",
            "VernacExtend",
            "4932d6bf909fafd1d8b4b3d4b8e2644b31fe509f"
        ],
        [
            "simpl in |- *; rewrite NullDist; do 2 rewrite LS0NeutralRight; intros.",
            "VernacExtend",
            "b85489f00a6169573921a7cc605ac1fab541ee3a"
        ],
        [
            "rewrite (HalfLineEquidistantEqual A B D Hab H0 (sym_eq H2)).",
            "VernacExtend",
            "d1eb5686ba6410f8d4de919cf8b2f1f70127554e"
        ],
        [
            "rewrite (HalfLineEquidistantEqual A C E Hac H1 (sym_eq H3)).",
            "VernacExtend",
            "5b436d7a5e29517236b1063b29b336ee4546ed47"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct (StrongGraduation A B Hab m) as (Dm, (H0, (H1, H2))).",
            "VernacExtend",
            "e5096e17fb930e6e5b40e4dd1a25e2381fbe020e"
        ],
        [
            "destruct (StrongGraduation A C Hac m) as (Em, (H3, (H4, H5))).",
            "VernacExtend",
            "d99e7f559bc2817b62d3ebae0f1b6f15bf1a6539"
        ],
        [
            "assert (A <> Dm).",
            "VernacExtend",
            "97a5f65f21a114c1f156acc1444b6b53855c460b"
        ],
        [
            "apply H2; omega.",
            "VernacExtend",
            "00986bf5ee6cafd96c671427d117f0c5411b50e2"
        ],
        [
            "assert (A <> Em).",
            "VernacExtend",
            "7681f74f56e5f9a7c3abba42de40a6ab6e0d4e09"
        ],
        [
            "apply H5; omega.",
            "VernacExtend",
            "57f92c4fab5bff855befc5d02e63e128d2bf1216"
        ],
        [
            "destruct (IHHn Dm Em (HalfLineSym _ _ _ H6 H0) (HalfLineSym _ _ _ H7 H3) H1 H4).",
            "VernacExtend",
            "258d6ea9cf2e5362c747637d5466711afbceb657"
        ],
        [
            "clear IHHn H2 H5; simpl in |- *; intros.",
            "VernacExtend",
            "92f0c5eb003d79500657c4b43fca7b7f5145fd5a"
        ],
        [
            "destruct (ExistsEquidistantBetween A Dm A B H6 Hab) as (DSm, (H12, H13)).",
            "VernacExtend",
            "789841eb61f5ccb57affa8d3e1705cf47578d8e5"
        ],
        [
            "assert (H14 := HalfLineEquidistantEqualPoints _ _ _ _ _ _ H0 H1 H2 H6 H10 H12 H13); subst.",
            "VernacExtend",
            "e7f69cd0c5910556edf443166c6e78be33d8013b"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "destruct (ExistsEquidistantBetween A Em A C H7 Hac) as (ESm, (H14, H15)).",
            "VernacExtend",
            "b2e8992a84bdb315ef86b7c7525b5fc8d96e49a7"
        ],
        [
            "assert (H16 := HalfLineEquidistantEqualPoints _ _ _ _ _ _ H3 H4 H5 H7 H11 H14 H15); subst.",
            "VernacExtend",
            "f4481b8034b02c5bf497ae7b6485b7df1995b930"
        ],
        [
            "apply (ThreeEmbeddedTriangles A B C Dm Em D E); auto.",
            "VernacExtend",
            "2741899f41354dc3a8c2a10cb62773ef0bde6997"
        ],
        [
            "apply (HalfLineSym _ _ _ H6 H0).",
            "VernacExtend",
            "f164752b286c5e43fdc72b3e608d4b0a6dddff01"
        ],
        [
            "apply (HalfLineSym _ _ _ H7 H3).",
            "VernacExtend",
            "c02f59d71ee50325f31fe7fec29d0f6a6ee38e06"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ExistsClockwiseParallelogramm : forall A B C D E : Point, Parallelogramm A B C D -> Between D E A -> exists F : Point, Collinear C E F /\\ Clockwise B A F.",
            "VernacStartTheoremProof",
            "75e179fac97840051cf557bf24067366ad2d50a2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (ExistsDParallelogramm C D E) as (G, H1).",
            "VernacExtend",
            "b3fcfdf93f21c9ca71aeaabdd9884261f12dbe94"
        ],
        [
            "apply ClockwiseCAB; apply (BetweenClockwiseAMC D A C E).",
            "VernacExtend",
            "bfcc234e6500d4e26f34f71a16876753c020c068"
        ],
        [
            "unfold Parallelogramm in *; intuition; autoClockwise.",
            "VernacExtend",
            "726894742959055c44ebd34ea6a7d988735c6075"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "assert (H2 := ParallelogrammClockwiseBCD _ _ _ _ H1).",
            "VernacExtend",
            "f30325aead432750e74f4e4114117486ebecba0c"
        ],
        [
            "destruct (PaschABC D A C E G) as [(I, (H3, H4))| (I, (H3, H4))].",
            "VernacExtend",
            "6bc878cb3bf52171bd1810e788b0785a7825f29c"
        ],
        [
            "unfold Parallelogramm in *; intuition; autoClockwise.",
            "VernacExtend",
            "726894742959055c44ebd34ea6a7d988735c6075"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply ClockwiseNotCollinear; exact H2.",
            "VernacExtend",
            "40ec1e0af315b8c5377b961410d9a580c59beef3"
        ],
        [
            "intro; elim (ClockwiseNotCollinear E A G).",
            "VernacExtend",
            "d380486b1f2ffa380ba21bba9d5e7bb5dc11cc5b"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "autoCollinear.",
            "VernacExtend",
            "f9b5517305c4ea7b3088acc38c4b180fb95147f1"
        ],
        [
            "unfold Parallelogramm in *; intuition; autoClockwise.",
            "VernacExtend",
            "726894742959055c44ebd34ea6a7d988735c6075"
        ],
        [
            "elim (BetweenNotClockwiseABC D I C H4).",
            "VernacExtend",
            "e289794a378b7c42ad67d224eedb1e9cccbccdd9"
        ],
        [
            "apply ClockwiseBCA; destruct (CollinearHalfLine _ _ _ H3).",
            "VernacExtend",
            "38c00f45daa3d584268b8c9073fabff87d9f181e"
        ],
        [
            "apply (ParallelHalfLine _ _ _ _ _ H1 H5).",
            "VernacExtend",
            "001115af8fda5747bff7549a1812bb22cf4a3e3a"
        ],
        [
            "apply (HalfLineParallel _ _ _ _ _ H1 H5).",
            "VernacExtend",
            "75c0ca006b3755c88305fea33a681bc155362532"
        ],
        [
            "assert (H5 := sym_not_eq (BetweenDistinctBC _ _ _ H4)).",
            "VernacExtend",
            "d40010b5a87b2267fa25d16c199a4c56d91a850e"
        ],
        [
            "destruct (Archimedian C I A H5) as (n, H6).",
            "VernacExtend",
            "9e60dc7941d9687c29ff463e4b969b75091f2b20"
        ],
        [
            "assert (H7 : n > 0).",
            "VernacExtend",
            "ebea762b45f04bb1d02fab31b6a4f83ebd46cc43"
        ],
        [
            "destruct n.",
            "VernacExtend",
            "1582bf847770c098bee882393a48b146dcc37a8c"
        ],
        [
            "simpl in H6.",
            "VernacExtend",
            "a1cfe6bf72a31f34bf109464b9fb8288a8f3124d"
        ],
        [
            "elim (AntisymLSlt C A C (BetweenDistinctCA _ _ _ H4) H6).",
            "VernacExtend",
            "ce6c17df0497abe307ebb101ea93e925997c5970"
        ],
        [
            "rewrite NullDist; apply (NullLSlt C A (BetweenDistinctCA _ _ _ H4)).",
            "VernacExtend",
            "49bcb4226b7e50b97acfd3223eb6661bd9c8c1d5"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "destruct (StrongGraduation C I H5 n) as (J, (H8, (H9, H10))).",
            "VernacExtend",
            "03a899e68a2976172f1933a025311bf91715319e"
        ],
        [
            "destruct (StrongGraduation C E (ParallelogrammDistinctAC _ _ _ _ H1) n) as (F, (H11, (H12, H13))).",
            "VernacExtend",
            "f1b031344e9ae9972a4b540929ee9a58c1e980c5"
        ],
        [
            "assert (H14 : Between C A J).",
            "VernacExtend",
            "01be32571652a17370d55a7b8a2d11a24cb79cf2"
        ],
        [
            "apply LSltBetween.",
            "VernacExtend",
            "af896a206b44f3ae0fd045bcb4353c00b4c71895"
        ],
        [
            "apply (BetweenDistinctCA _ _ _ H4).",
            "VernacExtend",
            "4a645f0eaa2b2e05d7550ddde991c98e3fcd11e7"
        ],
        [
            "assert (H14 := BetweenSymHalfLine _ _ _ H4); apply (HalfLineSym C J A (H10 H7)).",
            "VernacExtend",
            "a38d0ae7978e25d8248e2c0a0263304eeb93312b"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "rewrite H9; trivial.",
            "VernacExtend",
            "09ae93b5940b269dbc52647a4c1a288c283101f5"
        ],
        [
            "exists F; split.",
            "VernacExtend",
            "ee947613c53640791a788c1fb24a4c87b953e0ac"
        ],
        [
            "apply CollinearACB; apply (HalfLineCollinear _ _ _ H11).",
            "VernacExtend",
            "fe6b8eac8ab457e72420d515cc8d8776679cd36a"
        ],
        [
            "destruct (ExistsDParallelogramm B A J) as (K, H15).",
            "VernacExtend",
            "f686ee4d737335b331b99257ecd9346f90635e67"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "apply ClockwiseCAB; apply H19.",
            "VernacExtend",
            "e0bed351db2b87e034dfafbb4472484389f4d33a"
        ],
        [
            "unfold Parallelogramm in *; intuition; autoClockwise.",
            "VernacExtend",
            "726894742959055c44ebd34ea6a7d988735c6075"
        ],
        [
            "apply (HalfLineParallel _ _ _ _ F H15).",
            "VernacExtend",
            "d33ebc01099809bd0ce62a794ef0da34c950e1b6"
        ],
        [
            "apply BetweenSymHalfLine; apply (SupplementaryRec J F C K).",
            "VernacExtend",
            "8afa724610e7fe753cfd7cc61f94370100f37670"
        ],
        [
            "apply ClockwiseCAB; apply (ClockwiseBetweenMBC J C F A).",
            "VernacExtend",
            "23fead277b82e35131a6377285f8ff6969dd2e0f"
        ],
        [
            "apply BetweenSym; trivial.",
            "VernacExtend",
            "4b64e2e034d8805eeb392d09c64cc0f02b3100e4"
        ],
        [
            "apply ClockwiseCAB; apply (HalfLineSym C F E (H13 H7) H11).",
            "VernacExtend",
            "aa3e78726a84c37bfbbfa16ca3330241bb4f7f2f"
        ],
        [
            "canonize; apply ClockwiseCAB; apply (BetweenClockwiseMBC D A C E).",
            "VernacExtend",
            "ee512cc4c9bf845754a1847ce178a8eaf439108d"
        ],
        [
            "apply ClockwiseBCA; apply (ParallelogrammClockwiseBCD B C D A (ParallelogrammPermut _ _ _ _ H)).",
            "VernacExtend",
            "c760ca46b0b5c0e2157b1ac68289df2d7744b416"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "apply (ClockwiseBetweenMBC C J K A H14).",
            "VernacExtend",
            "e0dad197e9e58f079ed9852c1be679bbd15e2bfd"
        ],
        [
            "apply (ParallelogrammClockwiseBCD _ _ _ _ H15).",
            "VernacExtend",
            "582b64e174ce807b5e50e629bbdca58b8b3a1e5c"
        ],
        [
            "assert (H16 : Clockwise C E I).",
            "VernacExtend",
            "ebf90b54ba8f5276e274a6cb1ae09713dd3f3b96"
        ],
        [
            "apply ClockwiseBCA; apply (BetweenClockwiseMBC A C E I).",
            "VernacExtend",
            "07b7627396b012c0bb3797057aebd11454a75d6d"
        ],
        [
            "apply ClockwiseBCA; apply (BetweenClockwiseMBC D A C E).",
            "VernacExtend",
            "e5b7e3e4ec1481e6872d026fade20d03ad94aedd"
        ],
        [
            "apply ClockwiseBCA; apply (ParallelogrammClockwiseBCD B C D A).",
            "VernacExtend",
            "715fc1d1f95edce3a8d04b6113e453ce58262953"
        ],
        [
            "exact (ParallelogrammPermut _ _ _ _ H).",
            "VernacExtend",
            "35b25ddb71bab46169337e0314f6d1cf45fa7931"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "destruct (EmbeddedSimilarTriangles C E I n H16 H7 F J (HalfLineSym _ _ _ (H13 H7) H11) (HalfLineSym _ _ _ (H10 H7) H8) H12 H9).",
            "VernacExtend",
            "27368b164884dc2171f5d995e6c675c0c6671578"
        ],
        [
            "rewrite (AngleSym J F C).",
            "VernacExtend",
            "ffb9ca9c573e94e4f8bd231ca7cd902aab8e6d9f"
        ],
        [
            "rewrite <- H18.",
            "VernacExtend",
            "1df286e8f974815839e188c1a60afb808365a918"
        ],
        [
            "rewrite <- (BetweenAngleB J A K C).",
            "VernacExtend",
            "729caad8473b97fe9aa20e208c46820d8c752a5b"
        ],
        [
            "assert (H19 := ParallelogrammCongruentTrianglesAC _ _ _ _ (ParallelogrammPermut _ _ _ _ H15)).",
            "VernacExtend",
            "bc6205ee55f05666e9ea38471420947445d37162"
        ],
        [
            "rewrite (CongruentStrictTrianglesB _ _ _ _ _ _ H19).",
            "VernacExtend",
            "b6764c4061fec881f08415d641528b8a77ab086a"
        ],
        [
            "rewrite (ExternParallelogramm K B A J C).",
            "VernacExtend",
            "8b8f3664f001688747dd5bf1ef3484a4c0aa969d"
        ],
        [
            "rewrite (CongruentStrictTrianglesA _ _ _ _ _ _ (ParallelogrammCongruentTrianglesAC _ _ _ _ H)) .",
            "VernacExtend",
            "6b8e8a1c43e8b7deb86daf7f0461cab92360c650"
        ],
        [
            "rewrite (AngleSym C).",
            "VernacExtend",
            "00ba9363549046f914292385970c6291e2ef2738"
        ],
        [
            "rewrite <- (TwoEmbeddedSymTriangles A C D I E).",
            "VernacExtend",
            "b68512ba9c7ffb3c03fed4edec2b0ad5947799ca"
        ],
        [
            "unfold Supplementary in |- *; exists I; exists C; exists E; exists A; intuition.",
            "VernacExtend",
            "4375fc994b3096e25c9a25dab7846f3e590b56b8"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "exact (BetweenSym _ _ _ H4).",
            "VernacExtend",
            "316a7500c0b630367dfcd23cc007ef4003608369"
        ],
        [
            "apply AngleSym; autoDistinct.",
            "VernacExtend",
            "78d12dad913b6e3a291f2c9c2ea77ff8feecbbab"
        ],
        [
            "apply ClockwiseCAB; exact (ParallelogrammClockwiseBCD _ _ _ _ (ParallelogrammPermut _ _ _ _ H)).",
            "VernacExtend",
            "58232327fa91bea2b948ed4078129549a658ddab"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "exact (BetweenSym _ _ _ H0).",
            "VernacExtend",
            "2ef2970185d61f80f40c0b660ca90efb4b4b9131"
        ],
        [
            "apply sym_eq; rewrite (CongruentItself D A C E C).",
            "VernacExtend",
            "8b9f34145007c7b7fb64d333e6b37559e9851813"
        ],
        [
            "rewrite (ExternOppParallelogramm _ _ _ _ _ H1 H0).",
            "VernacExtend",
            "8b7a4074671b092f9e808cc11698ac681f3b6da6"
        ],
        [
            "apply CongruentItself.",
            "VernacExtend",
            "4a4cbb2ec2c336da30611c578b1d7feeba8517f4"
        ],
        [
            "exact (ParallelogrammDistinctCD _ _ _ _ H1).",
            "VernacExtend",
            "954dd438ef1456e9140a0da093d44d3fec74caed"
        ],
        [
            "exact (BetweenDistinctBC _ _ _ H0).",
            "VernacExtend",
            "872e9d5276db56e6e5cf0b3e51ffcf5cd8276c28"
        ],
        [
            "destruct (ExclusiveCollinear E G I).",
            "VernacExtend",
            "4ce4ae8fa30b2a9cf7937bb5c23dc730c45332cb"
        ],
        [
            "exact (ParallelogrammDistinctCD _ _ _ _ H1).",
            "VernacExtend",
            "954dd438ef1456e9140a0da093d44d3fec74caed"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "assert (H21 := EquiOrientedRev _ _ _ H20).",
            "VernacExtend",
            "9dfab620a941c6d7c9ca9e4ce653a8e88526bcf3"
        ],
        [
            "clear H0 H2 H3 H4 H8 H11 H14 H20; generalizeChangeSide.",
            "VernacExtend",
            "b408eb977d84ac848d2afb2fdbe285d0127a4403"
        ],
        [
            "elim (ClockwiseNotClockwise _ _ _ (ParallelogrammClockwiseBCD _ _ _ _ (ParallelogrammPermut _ _ _ _ H1))).",
            "VernacExtend",
            "c7268b3d3c3fe4ae1c5cef59b395a5e561e7d10e"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "exact (ParallelogrammDistinctCD _ _ _ _ H1).",
            "VernacExtend",
            "954dd438ef1456e9140a0da093d44d3fec74caed"
        ],
        [
            "autoClockwise.",
            "VernacExtend",
            "9409e85b86446941015e1da6ca2353051468a0c2"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "apply sym_not_eq; exact (BetweenDistinctCA _ _ _ H0).",
            "VernacExtend",
            "2c088f108f04577304f95d2b178ac068a9972bba"
        ],
        [
            "apply sym_not_eq; exact (ParallelogrammDistinctAB _ _ _ _ H1).",
            "VernacExtend",
            "310884804168c2370e9de85b1b0826f8c4be5b7c"
        ],
        [
            "apply HalfLineSym.",
            "VernacExtend",
            "db45086aeefcf4852d4438b9e7f1c2f7046818c7"
        ],
        [
            "autoClockwise.",
            "VernacExtend",
            "9409e85b86446941015e1da6ca2353051468a0c2"
        ],
        [
            "exact (BetweenHalfLine _ _ _ H0).",
            "VernacExtend",
            "3ec6ad3d14cf6fce8b3c0cb0325192eabfa40436"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "exact (ParallelogrammDistinctCD _ _ _ _ H).",
            "VernacExtend",
            "db0f3a2cdfc3fbf7f029d014e98a703ec82d39bc"
        ],
        [
            "exact (BetweenDistinctAB _ _ _ H14).",
            "VernacExtend",
            "374ed7ce58501dcdca8445b326f255024a43400c"
        ],
        [
            "do 3 apply ParallelogrammPermut; exact H15.",
            "VernacExtend",
            "e16aa52c3a5251fe3cef61593ccb8fdf69808edf"
        ],
        [
            "exact (BetweenSym _ _ _ H14).",
            "VernacExtend",
            "ca0cfdb9de6814eab0c8a176dbb3e726eb0946f7"
        ],
        [
            "exact (ParallelogrammDistinctCD _ _ _ _ H15).",
            "VernacExtend",
            "9d86bb33675f466620944d8aa6c8bbcb92bf3c99"
        ],
        [
            "exact (BetweenSym _ _ _ H14).",
            "VernacExtend",
            "ca0cfdb9de6814eab0c8a176dbb3e726eb0946f7"
        ],
        [
            "assert (H19 : Clockwise C F J).",
            "VernacExtend",
            "8d1194308cf398fcf06b6bf1c611ae6bf63a3b44"
        ],
        [
            "clear H0 H3 H4 H14; generalizeChange.",
            "VernacExtend",
            "84c544c7fd8f62b755d8566ca89ea891e8e9cd2e"
        ],
        [
            "apply H11; apply ClockwiseBCA.",
            "VernacExtend",
            "7acd2c266cc0fbc74efa9d321823122f170d759c"
        ],
        [
            "apply H21; autoClockwise.",
            "VernacExtend",
            "1c3fdf4111b5ad39a9a2af636b46edbb2b32b98c"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "apply sym_not_eq; auto.",
            "VernacExtend",
            "d6f0eb49492609f6c19273f166097f96ae85e5fa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ExistsClockwiseParallelogrammSym : forall A B C D E : Point, Parallelogramm A B C D -> Between A E C -> exists F : Point, Collinear D E F /\\ Clockwise B A F.",
            "VernacStartTheoremProof",
            "ef955b1e92a69c25d64e9b40baa1e977c8a86a32"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Hacd : Clockwise A C D).",
            "VernacExtend",
            "1522fde719ab737512f830f5096e789d1f3259d8"
        ],
        [
            "unfold Parallelogramm in *; intuition.",
            "VernacExtend",
            "035a1abdd2b0ad0756ec5e9ded5a5c0d05f84971"
        ],
        [
            "destruct (ExistsDParallelogramm E C D) as (G, H1).",
            "VernacExtend",
            "e3b52a79d300ca29185dcde0d49aac813127b3a5"
        ],
        [
            "exact (BetweenClockwiseMBC A C D E Hacd H0).",
            "VernacExtend",
            "75f1270553e41a7e1a8421edbbb1307711246d2d"
        ],
        [
            "assert (Hcge : Clockwise C G E).",
            "VernacExtend",
            "a6c0c3f13b1bde6a166a1b141b59d11c1e44f4b5"
        ],
        [
            "exact (ParallelogrammClockwiseBDA _ _ _ _ H1).",
            "VernacExtend",
            "ed16ceaf972e707645bcb00b4f734b279352d3ab"
        ],
        [
            "assert (Hedg : Clockwise E D G).",
            "VernacExtend",
            "bef898f61c2a77aa79a010b75f3e7378a9b3feba"
        ],
        [
            "unfold Parallelogramm in *; intuition.",
            "VernacExtend",
            "035a1abdd2b0ad0756ec5e9ded5a5c0d05f84971"
        ],
        [
            "destruct (PaschABC A C D E G Hacd H0) as [(I, (H3, H4))| (I, (H3, H4))].",
            "VernacExtend",
            "547ca5a2ce30b0984c9405aafb014bbc31b784f7"
        ],
        [
            "apply ClockwiseNotCollinear; assert (H2 := EquiOrientedRev _ _ _ H0); canonize.",
            "VernacExtend",
            "3f091a6fc236292e4a4c134a9db2b119283bb3db"
        ],
        [
            "apply H2; autoClockwise.",
            "VernacExtend",
            "0fd401ece9e64fee5d01e8b940b1725b8bb272b4"
        ],
        [
            "intro; elim (ClockwiseNotCollinear _ _ _ Hcge); autoCollinear.",
            "VernacExtend",
            "78c981e2c5bcb71d78aa17fe5c1dfe69c547cf7b"
        ],
        [
            "intro; elim (ClockwiseNotCollinear _ _ _ Hedg); autoCollinear.",
            "VernacExtend",
            "51e950bd1fb5d86c85890182a8fff592548ed2f8"
        ],
        [
            "assert (Hdie : Clockwise D I E).",
            "VernacExtend",
            "c1223ee250729a8c38309d272ff7dda39e9b9224"
        ],
        [
            "apply (BetweenClockwiseAMC D A E I).",
            "VernacExtend",
            "dcabfecff3db14eeade7646d8b7c3fc486039755"
        ],
        [
            "apply ClockwiseCAB; apply (BetweenClockwiseAMC A C D E Hacd H0).",
            "VernacExtend",
            "981b7c235ba34c1578a897979b7e4d13ed848693"
        ],
        [
            "exact (BetweenSym _ _ _ H4).",
            "VernacExtend",
            "316a7500c0b630367dfcd23cc007ef4003608369"
        ],
        [
            "assert (H5 := sym_not_eq (BetweenDistinctBC _ _ _ H4)).",
            "VernacExtend",
            "d40010b5a87b2267fa25d16c199a4c56d91a850e"
        ],
        [
            "destruct (Archimedian D I A H5) as (n, H6).",
            "VernacExtend",
            "337239b3cf5b65eb25fef1bdc74d3c2c03ebb64f"
        ],
        [
            "assert (H7 : n > 0).",
            "VernacExtend",
            "ebea762b45f04bb1d02fab31b6a4f83ebd46cc43"
        ],
        [
            "destruct n.",
            "VernacExtend",
            "1582bf847770c098bee882393a48b146dcc37a8c"
        ],
        [
            "simpl in H6.",
            "VernacExtend",
            "a1cfe6bf72a31f34bf109464b9fb8288a8f3124d"
        ],
        [
            "elim (AntisymLSlt D A D (BetweenDistinctCA _ _ _ H4) H6).",
            "VernacExtend",
            "74d312d99d7f29911b696187185866f40ffd0e2e"
        ],
        [
            "rewrite NullDist; apply (NullLSlt D A (BetweenDistinctCA _ _ _ H4)).",
            "VernacExtend",
            "2ff21acf6449d8d8ec090ac9e99b55b7bf9dc933"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "destruct (StrongGraduation D I H5 n) as (J, (H8, (H9, H10))).",
            "VernacExtend",
            "0ff7bda0f40af24ac62b19361a60d7610f6d4940"
        ],
        [
            "destruct (StrongGraduation D E (sym_not_eq (ParallelogrammDistinctAC _ _ _ _ H1)) n) as (F, (H11, (H12, H13))).",
            "VernacExtend",
            "eaf6b74d92cb5b1f4a10b38e1bc061b2b56c9d7d"
        ],
        [
            "assert (H14 : Between D A J).",
            "VernacExtend",
            "d432426998654d72ecb7de49ee78b4f631f6c029"
        ],
        [
            "apply LSltBetween.",
            "VernacExtend",
            "af896a206b44f3ae0fd045bcb4353c00b4c71895"
        ],
        [
            "apply (BetweenDistinctCA _ _ _ H4).",
            "VernacExtend",
            "4a645f0eaa2b2e05d7550ddde991c98e3fcd11e7"
        ],
        [
            "assert (H14 := BetweenSymHalfLine _ _ _ H4); apply (HalfLineSym D J A (H10 H7)).",
            "VernacExtend",
            "77a0604f0451c2c6c6f61bec139e2edc312d6874"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "rewrite H9; trivial.",
            "VernacExtend",
            "09ae93b5940b269dbc52647a4c1a288c283101f5"
        ],
        [
            "exists F; split.",
            "VernacExtend",
            "ee947613c53640791a788c1fb24a4c87b953e0ac"
        ],
        [
            "apply CollinearACB; apply (HalfLineCollinear _ _ _ H11).",
            "VernacExtend",
            "fe6b8eac8ab457e72420d515cc8d8776679cd36a"
        ],
        [
            "destruct (ExistsDParallelogramm B A J) as (K, H15).",
            "VernacExtend",
            "f686ee4d737335b331b99257ecd9346f90635e67"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "apply ClockwiseCAB; apply H18.",
            "VernacExtend",
            "e173f51184ebefc8b76e0cd416f779a6fe4234f4"
        ],
        [
            "apply (ParallelogrammClockwiseBCD C D A B); do 2 apply ParallelogrammPermut; trivial.",
            "VernacExtend",
            "4859e51f866bc5e642d58fa4fbe79228712b03f3"
        ],
        [
            "apply (ParallelHalfLine _ _ _ _ F H15).",
            "VernacExtend",
            "6cba530e84bd0c27d834959532fd8c1c6166d5d1"
        ],
        [
            "apply (AngleBHalfLine J K D F).",
            "VernacExtend",
            "3390193a248e0ee8eb5ec0c15d5de160e7ba4cf1"
        ],
        [
            "apply ClockwiseBCA; apply (ClockwiseBetweenMBC D J K A H14).",
            "VernacExtend",
            "b02980c5437cf66c3be310db0709450242d1a992"
        ],
        [
            "exact (ParallelogrammClockwiseBCD _ _ _ _ H15).",
            "VernacExtend",
            "7f9d2dee6948aa386a1ed9485c31ce3d3783d925"
        ],
        [
            "clear H0 H3 H4 H14; generalizeChange.",
            "VernacExtend",
            "84c544c7fd8f62b755d8566ca89ea891e8e9cd2e"
        ],
        [
            "apply ClockwiseCAB; apply H3.",
            "VernacExtend",
            "c9ca45eab46cb5f461eadf20cff0b8f625a2bb14"
        ],
        [
            "apply ClockwiseCAB; apply (H13 E Hdie).",
            "VernacExtend",
            "4ed3c2299a7a14d92920afe48089652238c00f88"
        ],
        [
            "assert (H16 : Angle K J D = Angle B A D).",
            "VernacExtend",
            "ad6c8d0e31594211c2991ecd4a8b973b00eaa1f1"
        ],
        [
            "rewrite (CongruentItself J K D K A).",
            "VernacExtend",
            "246c1c84625a23f4f0929ce2d5ae3dd99c28fbb2"
        ],
        [
            "rewrite (CongruentStrictTrianglesB A J K K B A).",
            "VernacExtend",
            "539a511145f520799467ccd999171665e2eb3895"
        ],
        [
            "apply (ExternParallelogramm K B A J D).",
            "VernacExtend",
            "f0b5c04e6c7163b188f6d51ed05b8d3e43e5c41e"
        ],
        [
            "do 3 apply ParallelogrammPermut; exact H15.",
            "VernacExtend",
            "e16aa52c3a5251fe3cef61593ccb8fdf69808edf"
        ],
        [
            "exact (BetweenSym _ _ _ H14).",
            "VernacExtend",
            "ca0cfdb9de6814eab0c8a176dbb3e726eb0946f7"
        ],
        [
            "apply ParallelogrammCongruentTrianglesAC.",
            "VernacExtend",
            "f93c87573359ac70664b386c2e3d7a6322cbfc62"
        ],
        [
            "exact (ParallelogrammPermut _ _ _ _ H15).",
            "VernacExtend",
            "f7aa51b712aa3eb02da99cc0fcb6905ee9ef0b34"
        ],
        [
            "exact (ParallelogrammDistinctCD _ _ _ _ H15).",
            "VernacExtend",
            "9d86bb33675f466620944d8aa6c8bbcb92bf3c99"
        ],
        [
            "exact (BetweenDistinctCA _ _ _ H14).",
            "VernacExtend",
            "90cfeb6eebd1179390f2cdd7274167fa3b995e6c"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "apply HalfLineSym.",
            "VernacExtend",
            "db45086aeefcf4852d4438b9e7f1c2f7046818c7"
        ],
        [
            "exact (sym_not_eq (BetweenDistinctBC _ _ _ H14)).",
            "VernacExtend",
            "11fdafb9c493ae07df46f52429fc236f0c3a6f43"
        ],
        [
            "exact (BetweenSymHalfLine _ _ _ H14).",
            "VernacExtend",
            "621e79791acb055cd3c3311b3fb38caf4acde44e"
        ],
        [
            "rewrite H16.",
            "VernacExtend",
            "d46611b9926d3411ed586aec14fbb4de59848bae"
        ],
        [
            "rewrite (Supplement A J B D I A E D).",
            "VernacExtend",
            "09dc15f671d419e3f28063e30d657e092969a666"
        ],
        [
            "rewrite (AngleSym I).",
            "VernacExtend",
            "28c2457f723cab450ee1e8a60a445caa8ed47731"
        ],
        [
            "rewrite (AngleSym J).",
            "VernacExtend",
            "3c35d18aff8ad5747aa1106ab5ed528afdb25dfa"
        ],
        [
            "destruct (EmbeddedSimilarTriangles D I E n Hdie H7 J F).",
            "VernacExtend",
            "7b56edb7f56945a701ddec2d3bb6f83c699130d8"
        ],
        [
            "exact (HalfLineSym _ _ _ (H10 H7) H8).",
            "VernacExtend",
            "3870eba552fa99777efab70f97fa0b6884c132d3"
        ],
        [
            "exact (HalfLineSym _ _ _ (H13 H7) H11).",
            "VernacExtend",
            "c0fd73942f8f714d83cef244a5818bf71b69436b"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply (ClockwiseDistinctBC D J F).",
            "VernacExtend",
            "59a9d234ab71061ce68927dd7c323116a9d02577"
        ],
        [
            "clear H0 H3 H4 H14; generalizeChange.",
            "VernacExtend",
            "84c544c7fd8f62b755d8566ca89ea891e8e9cd2e"
        ],
        [
            "apply ClockwiseBCA; apply H3.",
            "VernacExtend",
            "7061d1a67302081607c329b2f7e48c29f64179e3"
        ],
        [
            "apply ClockwiseCAB; apply (H13 E Hdie).",
            "VernacExtend",
            "4ed3c2299a7a14d92920afe48089652238c00f88"
        ],
        [
            "exact (BetweenDistinctCA _ _ _ H14).",
            "VernacExtend",
            "90cfeb6eebd1179390f2cdd7274167fa3b995e6c"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "exact (ParallelogrammDistinctAB _ _ _ _ H).",
            "VernacExtend",
            "d0a6a3e515a2cbd8bc8ba81de71ecf88211fece6"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "exact (BetweenSym _ _ _ H14).",
            "VernacExtend",
            "ca0cfdb9de6814eab0c8a176dbb3e726eb0946f7"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "rewrite (AngleSym A).",
            "VernacExtend",
            "2400793fb2c333f2dfd3283a5e9db9238d0d7bf7"
        ],
        [
            "rewrite <- (ExternOppParallelogramm C D A B J).",
            "VernacExtend",
            "ae4a53e6b4e0a0ad59c8db10bd974aca06a8668b"
        ],
        [
            "rewrite (AngleSym D).",
            "VernacExtend",
            "3ef9e2c582e5415cede36e8cbc6c379ef5c331ea"
        ],
        [
            "apply sym_eq; apply TwoEmbeddedTriangles.",
            "VernacExtend",
            "fb5bc8a42638aecf407f28c7f8be6fb78f18265f"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "assert (H17 := ParallelogrammPermut _ _ _ _ H1).",
            "VernacExtend",
            "38f32068e7a0b0ac625f41e210152662730857d5"
        ],
        [
            "rewrite <- (BetweenAngleB C E D A).",
            "VernacExtend",
            "41338b30716df4431cd46e12026378c479e52675"
        ],
        [
            "rewrite (CongruentStrictTrianglesB _ _ _ _ _ _ (ParallelogrammCongruentTrianglesAC _ _ _ _ H1)) .",
            "VernacExtend",
            "a5878a949e3c28e747cccd1a6b120efa3d8b2ce9"
        ],
        [
            "rewrite (ExternParallelogramm D G E C A).",
            "VernacExtend",
            "cb3fe3dfd9f7f2d1403194102c40a22311965e27"
        ],
        [
            "apply CongruentItself.",
            "VernacExtend",
            "4a4cbb2ec2c336da30611c578b1d7feeba8517f4"
        ],
        [
            "apply sym_not_eq; exact (BetweenDistinctAB _ _ _ H0).",
            "VernacExtend",
            "00863c02c19891d44ad066e98c21baf3dcfae861"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "destruct (ExclusiveCollinear E I G).",
            "VernacExtend",
            "83b3c9ad04c7468eadca9e721104eab43c4030ed"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "autoCollinear.",
            "VernacExtend",
            "f9b5517305c4ea7b3088acc38c4b180fb95147f1"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "elim (ClockwiseNotClockwise G E D).",
            "VernacExtend",
            "2deda1c8a1fc23eb315f995cd2a6f45ab471df3c"
        ],
        [
            "autoClockwise.",
            "VernacExtend",
            "9409e85b86446941015e1da6ca2353051468a0c2"
        ],
        [
            "assert (H18 := BetweenSym _ _ _ H2); canonize.",
            "VernacExtend",
            "3e6439ac171744287242a92b8e299bfe127ebdb4"
        ],
        [
            "apply H25; autoClockwise.",
            "VernacExtend",
            "b34b060c11bb7e7dd1988aa9c66f2c97825a164a"
        ],
        [
            "apply ParallelogrammPermut; trivial.",
            "VernacExtend",
            "05ff81ca75d471a635eefffac9f4682a5c50f339"
        ],
        [
            "exact (BetweenSym _ _ _ H0).",
            "VernacExtend",
            "2ef2970185d61f80f40c0b660ca90efb4b4b9131"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "exact (BetweenSym _ _ _ H0).",
            "VernacExtend",
            "2ef2970185d61f80f40c0b660ca90efb4b4b9131"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "do 2 apply ParallelogrammPermut; trivial.",
            "VernacExtend",
            "2fd8ec38c0db1b897a1883cb33fefc1cd23f07c0"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "exact (BetweenDistinctBC _ _ _ H14).",
            "VernacExtend",
            "ee23f5091aa5a16b84d62197ca6b2645e03bff63"
        ],
        [
            "exact (ParallelogrammDistinctAB _ _ _ _ H).",
            "VernacExtend",
            "d0a6a3e515a2cbd8bc8ba81de71ecf88211fece6"
        ],
        [
            "elim (BetweenNotClockwiseABC _ _ _ (BetweenSym _ _ _ H4)).",
            "VernacExtend",
            "e611bdd092e69bb3810e17da958c7a7b95f40bda"
        ],
        [
            "apply ClockwiseBCA; destruct (CollinearHalfLine _ _ _ H3).",
            "VernacExtend",
            "38c00f45daa3d584268b8c9073fabff87d9f181e"
        ],
        [
            "apply (HalfLineParallel C D G E I).",
            "VernacExtend",
            "a18ad9131fb52044ba92ee85cc82691787a83d84"
        ],
        [
            "apply ParallelogrammPermut; trivial.",
            "VernacExtend",
            "05ff81ca75d471a635eefffac9f4682a5c50f339"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply (ParallelHalfLine C D G E I).",
            "VernacExtend",
            "beea28a42d5fe3199de377e31a72535cba7e6ad4"
        ],
        [
            "apply ParallelogrammPermut; trivial.",
            "VernacExtend",
            "05ff81ca75d471a635eefffac9f4682a5c50f339"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma SecantParallelogrammSecant : forall A B : Point, forall F F' : Figure, forall D : Line F, forall D' : Line F', Parallelogramm (LineA F D) (LineB F D) A B -> F' A -> ~F' B -> SecantLines F F' D D'.",
            "VernacStartTheoremProof",
            "ba436cb17e5aa16ea270e3a00548ff78aba74b29"
        ],
        [
            "intros; destruct (InOrOutLine (LineA F D) F' D').",
            "VernacExtend",
            "f35a663c0771d539a89f84718156c46aafa8aeeb"
        ],
        [
            "apply (TwoPointsSecantLines A (LineA F D)).",
            "VernacExtend",
            "e1ae4145b950a4903793be63f19bf081334f8951"
        ],
        [
            "unfold Parallelogramm in *; intuition.",
            "VernacExtend",
            "035a1abdd2b0ad0756ec5e9ded5a5c0d05f84971"
        ],
        [
            "apply NotClockwiseABA.",
            "VernacExtend",
            "1929f9382f3eafbe2fa414d468bdb46f165d0777"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "destruct (CentralSymetPoint B A (sym_not_eq (ParallelogrammDistinctCD _ _ _ _ H))) as (C, (H3, H4)).",
            "VernacExtend",
            "2f64986e94b84ff88eb11e9c3ff4f59b228537e4"
        ],
        [
            "destruct (Apart (LineA F' D') (LineB F' D') A (LineH F' D')).",
            "VernacExtend",
            "abf46f4916c5f5b14598a3e21cbbad010ee088ee"
        ],
        [
            "destruct (PaschABC C B (LineA F D) A (LineA F' D')) as [(E, (H6, H7))| (E, (H6, H7))].",
            "VernacExtend",
            "4c86cb46ae3394238d7be230797c36d2e13f8ffb"
        ],
        [
            "apply (ClockwiseBetweenMBC C B (LineA F D) A).",
            "VernacExtend",
            "3c554f2dd1c13744c8c3236c3f2f047ee613bfcf"
        ],
        [
            "apply BetweenSym; trivial.",
            "VernacExtend",
            "4b64e2e034d8805eeb392d09c64cc0f02b3100e4"
        ],
        [
            "apply ClockwiseBCA; unfold Parallelogramm in *; intuition.",
            "VernacExtend",
            "17676e649b59a057894203d70cb80d9286a721eb"
        ],
        [
            "apply BetweenSym; trivial.",
            "VernacExtend",
            "4b64e2e034d8805eeb392d09c64cc0f02b3100e4"
        ],
        [
            "intro; elim H1; apply (InFLine F' D').",
            "VernacExtend",
            "f69df6593b887c48c81caeb046f207bb80204f02"
        ],
        [
            "apply (CollinearTrans (LineA F' D') A (LineB F' D') B H5).",
            "VernacExtend",
            "2ba6b79cf423ce9cd18fde2e829516998a3a3c64"
        ],
        [
            "apply CollinearACB; apply FLineIn; trivial.",
            "VernacExtend",
            "82d2a59acf8bf642361a4775bea6f9dad214e3ec"
        ],
        [
            "apply CollinearCAB; apply (CollinearTrans A C B (LineA F' D') (BetweenDistinctBC _ _ _ H4)).",
            "VernacExtend",
            "9313b41daaf831b0138ccb617987e00aa701e117"
        ],
        [
            "apply CollinearBCA; apply BetweenCollinear; trivial.",
            "VernacExtend",
            "064e58ed80240fc93a58d54d87f106ffbea8ac1d"
        ],
        [
            "autoCollinear.",
            "VernacExtend",
            "f9b5517305c4ea7b3088acc38c4b180fb95147f1"
        ],
        [
            "intro; elim H1; apply (InFLine F' D').",
            "VernacExtend",
            "f69df6593b887c48c81caeb046f207bb80204f02"
        ],
        [
            "apply (CollinearTrans (LineA F' D') A (LineB F' D') B H5).",
            "VernacExtend",
            "2ba6b79cf423ce9cd18fde2e829516998a3a3c64"
        ],
        [
            "apply CollinearACB; apply FLineIn; trivial.",
            "VernacExtend",
            "82d2a59acf8bf642361a4775bea6f9dad214e3ec"
        ],
        [
            "autoCollinear.",
            "VernacExtend",
            "f9b5517305c4ea7b3088acc38c4b180fb95147f1"
        ],
        [
            "intro; elim H2; apply (InFLine F' D').",
            "VernacExtend",
            "c26587f2c6224b63eed9fa8b4a6e6fb56f2677a7"
        ],
        [
            "apply (CollinearTrans (LineA F' D') A (LineB F' D') (LineA F D) H5).",
            "VernacExtend",
            "2ead88980ae5c448530d233a0e0068ffe38d1565"
        ],
        [
            "apply CollinearACB; apply FLineIn; trivial.",
            "VernacExtend",
            "82d2a59acf8bf642361a4775bea6f9dad214e3ec"
        ],
        [
            "autoCollinear.",
            "VernacExtend",
            "f9b5517305c4ea7b3088acc38c4b180fb95147f1"
        ],
        [
            "destruct (ExistsClockwiseParallelogrammSym (LineA F D) (LineB F D) C A E) as (G, (H8, H9)).",
            "VernacExtend",
            "eb7968ba16a6dfb810961f406b319289f47e36b7"
        ],
        [
            "apply (ParallelogrammSym (LineA F D) (LineB F D) A B C H H3 H4).",
            "VernacExtend",
            "d9771887508b1ffcc73be4fe1852df8f93ff9a63"
        ],
        [
            "apply BetweenSym; trivial.",
            "VernacExtend",
            "4b64e2e034d8805eeb392d09c64cc0f02b3100e4"
        ],
        [
            "apply (TwoPointsSecantLines A G).",
            "VernacExtend",
            "2f5204eb50b9d1d19a36c3b8e05dfe0098fa53f3"
        ],
        [
            "unfold Parallelogramm in *; intuition.",
            "VernacExtend",
            "035a1abdd2b0ad0756ec5e9ded5a5c0d05f84971"
        ],
        [
            "apply ClockwiseNotClockwise; trivial.",
            "VernacExtend",
            "ce19b391312e4ba8eba4049369c8f598f37b4679"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply (InFLine F' D').",
            "VernacExtend",
            "0be857cb24647b26549c0558ab1575441add34fb"
        ],
        [
            "apply (CollinearTrans (LineA F' D') A (LineB F' D') G H5).",
            "VernacExtend",
            "f669088e5f3a643e053b4c88a1c3664ff1f27247"
        ],
        [
            "apply CollinearACB; apply FLineIn; trivial.",
            "VernacExtend",
            "82d2a59acf8bf642361a4775bea6f9dad214e3ec"
        ],
        [
            "apply CollinearBAC; apply (CollinearTrans A E).",
            "VernacExtend",
            "a299728a591347cbccd72937f7d885c98d45fdda"
        ],
        [
            "intro; subst; elim (CollinearNotClockwiseABC (LineA F D) C E).",
            "VernacExtend",
            "eab4e2f99cc6c9ac4b87b83147cd7dd209978bd3"
        ],
        [
            "apply CollinearCAB; apply BetweenCollinear; trivial.",
            "VernacExtend",
            "e273ab155acb344f03c6a0bff521849b1b9e8c0e"
        ],
        [
            "assert (H10 := EquiOrientedRev _ _ _ (BetweenSym _ _ _ H4)).",
            "VernacExtend",
            "5c59aad84df3078b0edbd927598fd14ff41412ad"
        ],
        [
            "apply ClockwiseCAB; unfold Parallelogramm in *; intuition; canonize.",
            "VernacExtend",
            "db6d94588aec58a168a769790afdbf21b38df068"
        ],
        [
            "apply H10; autoClockwise.",
            "VernacExtend",
            "29706d109f26d6c40dc2cfef6242980d420a1f6e"
        ],
        [
            "autoCollinear.",
            "VernacExtend",
            "f9b5517305c4ea7b3088acc38c4b180fb95147f1"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "destruct (ExistsClockwiseParallelogramm _ _ _ _ E H H7) as (G, (H8, H9)).",
            "VernacExtend",
            "7969a0f212e8e4a2e2104ac841ae51aff4d0a80a"
        ],
        [
            "apply (TwoPointsSecantLines A G).",
            "VernacExtend",
            "2f5204eb50b9d1d19a36c3b8e05dfe0098fa53f3"
        ],
        [
            "unfold Parallelogramm in *; intuition.",
            "VernacExtend",
            "035a1abdd2b0ad0756ec5e9ded5a5c0d05f84971"
        ],
        [
            "apply ClockwiseNotClockwise; trivial.",
            "VernacExtend",
            "ce19b391312e4ba8eba4049369c8f598f37b4679"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply (InFLine F' D').",
            "VernacExtend",
            "0be857cb24647b26549c0558ab1575441add34fb"
        ],
        [
            "apply (CollinearTrans (LineA F' D') A (LineB F' D') G H5).",
            "VernacExtend",
            "f669088e5f3a643e053b4c88a1c3664ff1f27247"
        ],
        [
            "apply CollinearACB; apply FLineIn; trivial.",
            "VernacExtend",
            "82d2a59acf8bf642361a4775bea6f9dad214e3ec"
        ],
        [
            "apply CollinearBAC; apply (CollinearTrans A E).",
            "VernacExtend",
            "a299728a591347cbccd72937f7d885c98d45fdda"
        ],
        [
            "intro; subst; elim (CollinearNotClockwiseABC (LineA F D) E B).",
            "VernacExtend",
            "cb37f2a4ccf9f866939b279ceec08fe65c932bb6"
        ],
        [
            "apply CollinearCBA; apply BetweenCollinear; trivial.",
            "VernacExtend",
            "f626fd4e41c7c0042466883541bc76d5b0f7fa94"
        ],
        [
            "unfold Parallelogramm in *; intuition.",
            "VernacExtend",
            "035a1abdd2b0ad0756ec5e9ded5a5c0d05f84971"
        ],
        [
            "autoCollinear.",
            "VernacExtend",
            "f9b5517305c4ea7b3088acc38c4b180fb95147f1"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "destruct (PaschABC C B (LineA F D) A (LineB F' D')) as [(E, (H6, H7))| (E, (H6, H7))].",
            "VernacExtend",
            "0e56ec3dfcb39006f79e1e75e54bd019d41046a2"
        ],
        [
            "apply (ClockwiseBetweenMBC C B (LineA F D) A).",
            "VernacExtend",
            "3c554f2dd1c13744c8c3236c3f2f047ee613bfcf"
        ],
        [
            "apply BetweenSym; trivial.",
            "VernacExtend",
            "4b64e2e034d8805eeb392d09c64cc0f02b3100e4"
        ],
        [
            "apply ClockwiseBCA; unfold Parallelogramm in *; intuition.",
            "VernacExtend",
            "17676e649b59a057894203d70cb80d9286a721eb"
        ],
        [
            "apply BetweenSym; trivial.",
            "VernacExtend",
            "4b64e2e034d8805eeb392d09c64cc0f02b3100e4"
        ],
        [
            "intro; elim H1; apply (InFLine F' D').",
            "VernacExtend",
            "f69df6593b887c48c81caeb046f207bb80204f02"
        ],
        [
            "apply CollinearBAC; apply (CollinearTrans (LineB F' D') A (LineA F' D') B H5).",
            "VernacExtend",
            "6119fa9ba8ab52c8134739129f8ad84024d3cf5d"
        ],
        [
            "apply CollinearBCA; apply FLineIn; trivial.",
            "VernacExtend",
            "bf1978be09ee6d6a3e24772c9d6455b8201f76fb"
        ],
        [
            "apply CollinearCAB; apply (CollinearTrans A C B (LineB F' D') (BetweenDistinctBC _ _ _ H4)).",
            "VernacExtend",
            "a0b216dcba3961eaec6c310472eacee3e59e12b3"
        ],
        [
            "apply CollinearBCA; apply BetweenCollinear; trivial.",
            "VernacExtend",
            "064e58ed80240fc93a58d54d87f106ffbea8ac1d"
        ],
        [
            "autoCollinear.",
            "VernacExtend",
            "f9b5517305c4ea7b3088acc38c4b180fb95147f1"
        ],
        [
            "intro; elim H1; apply (InFLine F' D').",
            "VernacExtend",
            "f69df6593b887c48c81caeb046f207bb80204f02"
        ],
        [
            "apply CollinearBAC; apply (CollinearTrans (LineB F' D') A (LineA F' D') B H5).",
            "VernacExtend",
            "6119fa9ba8ab52c8134739129f8ad84024d3cf5d"
        ],
        [
            "apply CollinearBCA; apply FLineIn; trivial.",
            "VernacExtend",
            "bf1978be09ee6d6a3e24772c9d6455b8201f76fb"
        ],
        [
            "autoCollinear.",
            "VernacExtend",
            "f9b5517305c4ea7b3088acc38c4b180fb95147f1"
        ],
        [
            "intro; elim H2; apply (InFLine F' D').",
            "VernacExtend",
            "c26587f2c6224b63eed9fa8b4a6e6fb56f2677a7"
        ],
        [
            "apply CollinearBAC; apply (CollinearTrans (LineB F' D') A (LineA F' D') (LineA F D) H5).",
            "VernacExtend",
            "905b5a0d0b65bde2389936de331f9244f8fe5af3"
        ],
        [
            "apply CollinearBCA; apply FLineIn; trivial.",
            "VernacExtend",
            "bf1978be09ee6d6a3e24772c9d6455b8201f76fb"
        ],
        [
            "autoCollinear.",
            "VernacExtend",
            "f9b5517305c4ea7b3088acc38c4b180fb95147f1"
        ],
        [
            "destruct (ExistsClockwiseParallelogrammSym (LineA F D) (LineB F D) C A E) as (G, (H8, H9)).",
            "VernacExtend",
            "eb7968ba16a6dfb810961f406b319289f47e36b7"
        ],
        [
            "apply (ParallelogrammSym (LineA F D) (LineB F D) A B C H H3 H4).",
            "VernacExtend",
            "d9771887508b1ffcc73be4fe1852df8f93ff9a63"
        ],
        [
            "apply BetweenSym; trivial.",
            "VernacExtend",
            "4b64e2e034d8805eeb392d09c64cc0f02b3100e4"
        ],
        [
            "apply (TwoPointsSecantLines A G).",
            "VernacExtend",
            "2f5204eb50b9d1d19a36c3b8e05dfe0098fa53f3"
        ],
        [
            "unfold Parallelogramm in *; intuition.",
            "VernacExtend",
            "035a1abdd2b0ad0756ec5e9ded5a5c0d05f84971"
        ],
        [
            "apply ClockwiseNotClockwise; trivial.",
            "VernacExtend",
            "ce19b391312e4ba8eba4049369c8f598f37b4679"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply (InFLine F' D').",
            "VernacExtend",
            "0be857cb24647b26549c0558ab1575441add34fb"
        ],
        [
            "apply CollinearBAC; apply (CollinearTrans (LineB F' D') A (LineA F' D') G H5).",
            "VernacExtend",
            "2849b06ad2673bc2ddfb2f70729b8de511a540dd"
        ],
        [
            "apply CollinearBCA; apply FLineIn; trivial.",
            "VernacExtend",
            "bf1978be09ee6d6a3e24772c9d6455b8201f76fb"
        ],
        [
            "apply CollinearBAC; apply (CollinearTrans A E).",
            "VernacExtend",
            "a299728a591347cbccd72937f7d885c98d45fdda"
        ],
        [
            "intro; subst; elim (CollinearNotClockwiseABC (LineA F D) C E).",
            "VernacExtend",
            "eab4e2f99cc6c9ac4b87b83147cd7dd209978bd3"
        ],
        [
            "apply CollinearCAB; apply BetweenCollinear; trivial.",
            "VernacExtend",
            "e273ab155acb344f03c6a0bff521849b1b9e8c0e"
        ],
        [
            "assert (H10 := EquiOrientedRev _ _ _ (BetweenSym _ _ _ H4)).",
            "VernacExtend",
            "5c59aad84df3078b0edbd927598fd14ff41412ad"
        ],
        [
            "apply ClockwiseCAB; unfold Parallelogramm in *; intuition; canonize.",
            "VernacExtend",
            "db6d94588aec58a168a769790afdbf21b38df068"
        ],
        [
            "apply H10; autoClockwise.",
            "VernacExtend",
            "29706d109f26d6c40dc2cfef6242980d420a1f6e"
        ],
        [
            "autoCollinear.",
            "VernacExtend",
            "f9b5517305c4ea7b3088acc38c4b180fb95147f1"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "destruct (ExistsClockwiseParallelogramm _ _ _ _ E H H7) as (G, (H8, H9)).",
            "VernacExtend",
            "7969a0f212e8e4a2e2104ac841ae51aff4d0a80a"
        ],
        [
            "apply (TwoPointsSecantLines A G).",
            "VernacExtend",
            "2f5204eb50b9d1d19a36c3b8e05dfe0098fa53f3"
        ],
        [
            "unfold Parallelogramm in *; intuition.",
            "VernacExtend",
            "035a1abdd2b0ad0756ec5e9ded5a5c0d05f84971"
        ],
        [
            "apply ClockwiseNotClockwise; trivial.",
            "VernacExtend",
            "ce19b391312e4ba8eba4049369c8f598f37b4679"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply (InFLine F' D').",
            "VernacExtend",
            "0be857cb24647b26549c0558ab1575441add34fb"
        ],
        [
            "apply CollinearBAC; apply (CollinearTrans (LineB F' D') A (LineA F' D') G H5).",
            "VernacExtend",
            "2849b06ad2673bc2ddfb2f70729b8de511a540dd"
        ],
        [
            "apply CollinearBCA; apply FLineIn; trivial.",
            "VernacExtend",
            "bf1978be09ee6d6a3e24772c9d6455b8201f76fb"
        ],
        [
            "apply CollinearBAC; apply (CollinearTrans A E).",
            "VernacExtend",
            "a299728a591347cbccd72937f7d885c98d45fdda"
        ],
        [
            "intro; subst; elim (CollinearNotClockwiseABC (LineA F D) E B).",
            "VernacExtend",
            "cb37f2a4ccf9f866939b279ceec08fe65c932bb6"
        ],
        [
            "apply CollinearCBA; apply BetweenCollinear; trivial.",
            "VernacExtend",
            "f626fd4e41c7c0042466883541bc76d5b0f7fa94"
        ],
        [
            "unfold Parallelogramm in *; intuition.",
            "VernacExtend",
            "035a1abdd2b0ad0756ec5e9ded5a5c0d05f84971"
        ],
        [
            "autoCollinear.",
            "VernacExtend",
            "f9b5517305c4ea7b3088acc38c4b180fb95147f1"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ParallelogrammSuperimposed : forall A B C E : Point, forall F : Figure, forall D : Line F, Parallelogramm A B C E -> EquiDirected A B (LineA F D) (LineB F D) -> F C -> Superimposed F (Collinear C E).",
            "VernacStartTheoremProof",
            "9f6c1ad0042fad63b4d2c78ed23da05797d2e251"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (Apart (LineA F D) (LineB F D) C (LineH F D)).",
            "VernacExtend",
            "126a54d355bb780c0627a72cadfbef055fb611db"
        ],
        [
            "decompose [or] (ThreeCases (LineA F D) C E).",
            "VernacExtend",
            "3173df3036d2d589c508d5d7d88b9e7fb7e52393"
        ],
        [
            "elim (SecantParallelogrammSecant C E (Collinear A B) F (Ruler A B (ParallelogrammDistinctAB _ _ _ _ H)) D H H1).",
            "VernacExtend",
            "d26bbdc6599f85257aebbff6e11dc5e7100a782e"
        ],
        [
            "intro; elim (ClockwiseNotCollinear _ _ _ H3).",
            "VernacExtend",
            "2be8402aeea4ed3c8d2dc876abcf3e6a736dd6b2"
        ],
        [
            "apply (CollinearTrans (LineA F D) (LineB F D) C E (LineH F D) (FLineIn F D C H1) (FLineIn F D E H4)).",
            "VernacExtend",
            "9a5f29b8af26079c2065bc185778014f60cff918"
        ],
        [
            "exact H0.",
            "VernacExtend",
            "3920fece303e3c4728f9cdc71daff99239237dbd"
        ],
        [
            "elim (SecantParallelogrammSecant C E (Collinear A B) F (Ruler A B (ParallelogrammDistinctAB _ _ _ _ H)) D H H1).",
            "VernacExtend",
            "d26bbdc6599f85257aebbff6e11dc5e7100a782e"
        ],
        [
            "intro; elim (ClockwiseNotCollinear _ _ _ H4); apply CollinearBAC.",
            "VernacExtend",
            "b6da1ee3da8ba07d29d0ac94ac6e85f7fc3ae27f"
        ],
        [
            "apply (CollinearTrans (LineA F D) (LineB F D) C E (LineH F D) (FLineIn F D C H1) (FLineIn F D E H3)).",
            "VernacExtend",
            "b12c28689c70573440bb1d8666c654fee0c3af18"
        ],
        [
            "exact H0.",
            "VernacExtend",
            "3920fece303e3c4728f9cdc71daff99239237dbd"
        ],
        [
            "apply LineAB; auto.",
            "VernacExtend",
            "6bf9e635c2908b60dac7d4f6eec092dbff95c442"
        ],
        [
            "apply (ParallelogrammDistinctCD _ _ _ _ H).",
            "VernacExtend",
            "39b2a0dd4458ff534e10d46ee9393320e64cc277"
        ],
        [
            "apply (InFLine F D E); apply (CollinearTrans (LineA F D) C (LineB F D) E H2 (CollinearACB _ _ _ (FLineIn F D C H1)) H4).",
            "VernacExtend",
            "3e82623fa89de980d149fa37a8e0832ffaf2f914"
        ],
        [
            "decompose [or] (ThreeCases (LineB F D) C E).",
            "VernacExtend",
            "94b2e343848e306cd8df1cf33452d030e51f7e39"
        ],
        [
            "elim (SecantParallelogrammSecant C E (Collinear A B) F (Ruler A B (ParallelogrammDistinctAB _ _ _ _ H)) D H H1).",
            "VernacExtend",
            "d26bbdc6599f85257aebbff6e11dc5e7100a782e"
        ],
        [
            "intro; elim (ClockwiseNotCollinear _ _ _ H3).",
            "VernacExtend",
            "2be8402aeea4ed3c8d2dc876abcf3e6a736dd6b2"
        ],
        [
            "apply (CollinearTrans (LineB F D) (LineA F D) C E (sym_not_eq (LineH F D)) (CollinearBAC _ _ _ (FLineIn F D C H1)) (CollinearBAC _ _ _ (FLineIn F D E H4))).",
            "VernacExtend",
            "a3c729388166cebbdc93ec0e8d6d3b4e16a1c127"
        ],
        [
            "exact H0.",
            "VernacExtend",
            "3920fece303e3c4728f9cdc71daff99239237dbd"
        ],
        [
            "elim (SecantParallelogrammSecant C E (Collinear A B) F (Ruler A B (ParallelogrammDistinctAB _ _ _ _ H)) D H H1).",
            "VernacExtend",
            "d26bbdc6599f85257aebbff6e11dc5e7100a782e"
        ],
        [
            "intro; elim (ClockwiseNotCollinear _ _ _ H4); apply CollinearBAC.",
            "VernacExtend",
            "b6da1ee3da8ba07d29d0ac94ac6e85f7fc3ae27f"
        ],
        [
            "apply (CollinearTrans (LineB F D) (LineA F D) C E (sym_not_eq (LineH F D)) (CollinearBAC _ _ _ (FLineIn F D C H1)) (CollinearBAC _ _ _ (FLineIn F D E H3))).",
            "VernacExtend",
            "804faa53faa039128fb943f5dc5e5c49ee37a8fd"
        ],
        [
            "exact H0.",
            "VernacExtend",
            "3920fece303e3c4728f9cdc71daff99239237dbd"
        ],
        [
            "apply LineAB; auto.",
            "VernacExtend",
            "6bf9e635c2908b60dac7d4f6eec092dbff95c442"
        ],
        [
            "apply (ParallelogrammDistinctCD _ _ _ _ H).",
            "VernacExtend",
            "39b2a0dd4458ff534e10d46ee9393320e64cc277"
        ],
        [
            "apply (InFLine F D E); apply CollinearBAC.",
            "VernacExtend",
            "b5fb8c6776a5c3ec354d7aa88d65c0997fe22d92"
        ],
        [
            "apply (CollinearTrans (LineB F D) C (LineA F D) E H2 (CollinearBCA _ _ _ (FLineIn F D C H1)) H4).",
            "VernacExtend",
            "c6e962135836e4bc4973a840063086c9b20f98f4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End DISTINCT_PARALLEL.",
            "VernacEndSegment",
            "5be14ab1656a128068088cc9d97d66bd461a8c41"
        ]
    ],
    "proofs": [
        {
            "name": "ThreeEmbeddedTriangles",
            "line_nb": 3,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (H8 : Clockwise E D F).",
                        "VernacExtend",
                        "63af3df39c803c9d5f2b69149fb41186573a76d8"
                    ]
                },
                {
                    "command": [
                        "generalizeChangeSense.",
                        "VernacExtend",
                        "be975c77c59224ac5239b36f960f98e48421bb54"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseCAB; apply H9; apply H0.",
                        "VernacExtend",
                        "f8484517774496d189fa654442a43bf073a7c1a0"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseBCA; apply H11; autoClockwise.",
                        "VernacExtend",
                        "87a4dfdac9b01ec5035878c8f3b5b5cfac7dc045"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsDParallelogramm _ _ _ H8) as (I, H9).",
                        "VernacExtend",
                        "64adf7ec05116338800c6dfeeb228e6322eb0339"
                    ]
                },
                {
                    "command": [
                        "assert (CongruentStrictTriangles A B C E I G).",
                        "VernacExtend",
                        "385661922a22f3d1a39ee69bd0791db17808622a"
                    ]
                },
                {
                    "command": [
                        "apply CongruentStrictTrianglesSASA.",
                        "VernacExtend",
                        "eed8d6d20c117025cee48565ebf8ee590f5b8f75"
                    ]
                },
                {
                    "command": [
                        "assert (H10 := ParallelogrammCongruentTrianglesAC _ _ _ _ (ParallelogrammPermut _ _ _ _ H9)).",
                        "VernacExtend",
                        "1694a03ad293045a0cea2ea12790767cd745fcd7"
                    ]
                },
                {
                    "command": [
                        "rewrite (DistSym E I); rewrite <- (CongruentStrictTrianglesAB _ _ _ _ _ _ H10); auto.",
                        "VernacExtend",
                        "ed5db94e430c58b2d9bcfbdae7230efb3bea93b1"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq; apply (SumAnglesCorollary E A D I G B C A).",
                        "VernacExtend",
                        "a656105b3aa54332302d2e83197335af99a8abf6"
                    ]
                },
                {
                    "command": [
                        "autoClockwise.",
                        "VernacExtend",
                        "9409e85b86446941015e1da6ca2353051468a0c2"
                    ]
                },
                {
                    "command": [
                        "generalizeChangeSense.",
                        "VernacExtend",
                        "be975c77c59224ac5239b36f960f98e48421bb54"
                    ]
                },
                {
                    "command": [
                        "apply H13; apply ClockwiseCAB; apply H0; autoClockwise.",
                        "VernacExtend",
                        "61747d89537a61e90cda09971560c099abd7b5c4"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseCAB; exact (ParallelogrammClockwiseBDA _ _ _ _ H9).",
                        "VernacExtend",
                        "99161f8753c73214f9853f4d902cbb290e6973a1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H3; apply AngleSym.",
                        "VernacExtend",
                        "4f7f011251c45c775c5d90a0350771bfe4c84635"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "rewrite (AngleSym E).",
                        "VernacExtend",
                        "cb3479ad220c6d5a6511214369065a94a4cb312f"
                    ]
                },
                {
                    "command": [
                        "rewrite (ExternParallelogramm I E D F A).",
                        "VernacExtend",
                        "6a97157de65020c6fec7c6292508f3223b4208f0"
                    ]
                },
                {
                    "command": [
                        "rewrite (AngleSym D).",
                        "VernacExtend",
                        "3ef9e2c582e5415cede36e8cbc6c379ef5c331ea"
                    ]
                },
                {
                    "command": [
                        "rewrite (AngleSym B); auto; autoDistinct.",
                        "VernacExtend",
                        "aa82d248bf6c0f5c28ad024e33453e8d5e4df055"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "exact (sym_not_eq (BetweenDistinctAB _ _ _ H4)).",
                        "VernacExtend",
                        "f0d5a7aaf76bb2fbfe233cfcdbbbce11f2539531"
                    ]
                },
                {
                    "command": [
                        "do 3 apply ParallelogrammPermut; trivial.",
                        "VernacExtend",
                        "b25fc4e6e8434826f12cd2558fc4c53d09236612"
                    ]
                },
                {
                    "command": [
                        "exact (BetweenSym _ _ _ H4).",
                        "VernacExtend",
                        "316a7500c0b630367dfcd23cc007ef4003608369"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "exact (sym_not_eq (ParallelogrammDistinctCD _ _ _ _ (ParallelogrammPermut _ _ _ _ H9))).",
                        "VernacExtend",
                        "dc1753cb38e0536d7075c40856d6c39b7ee0c7b1"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "exact (ClockwiseNotCollinear _ _ _ H).",
                        "VernacExtend",
                        "ea280aab83b9f0c340e88f1eede9e09c8a1506f8"
                    ]
                },
                {
                    "command": [
                        "assert (H11 : Between F I G).",
                        "VernacExtend",
                        "5e0fa44a817c2b5d688a9081a1537627f683cc80"
                    ]
                },
                {
                    "command": [
                        "apply (SupplementaryRec I F E G).",
                        "VernacExtend",
                        "888a2ea06640d1e9f1732c0dc1b3950b02c91fba"
                    ]
                },
                {
                    "command": [
                        "apply (ParallelogrammClockwiseBCD _ _ _ _ (ParallelogrammPermut _ _ _ _ H9)).",
                        "VernacExtend",
                        "a4768ad201ebf3d6e71f32805eebbcf07082ea9f"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseBCA; apply (EquiOrientedRev _ _ _ (BetweenSym _ _ _ H5)).",
                        "VernacExtend",
                        "c41e0a0205270892b49797efd3be067bf71b2e43"
                    ]
                },
                {
                    "command": [
                        "canonize; apply ClockwiseBCA.",
                        "VernacExtend",
                        "957eee7a53ca231759640f480da00e27500b596f"
                    ]
                },
                {
                    "command": [
                        "apply (HalfLineParallel I E D F A).",
                        "VernacExtend",
                        "ab9927ce9d1a94f608eb317258b346d079098c80"
                    ]
                },
                {
                    "command": [
                        "do 3 apply ParallelogrammPermut; trivial.",
                        "VernacExtend",
                        "b25fc4e6e8434826f12cd2558fc4c53d09236612"
                    ]
                },
                {
                    "command": [
                        "apply BetweenSymHalfLine; canonize.",
                        "VernacExtend",
                        "3594e2187a8458742e32d14eedd5332391709ba7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (CongruentStrictTrianglesB _ _ _ _ _ _ H10); rewrite H2.",
                        "VernacExtend",
                        "9af97c558f83f92e31878b93fca8a6bd33f80261"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (CongruentStrictTrianglesB _ _ _ _ _ _ (ParallelogrammCongruentTrianglesAC _ _ _ _ H9)).",
                        "VernacExtend",
                        "e544495aa88af9af2c8edd5aeb305081044443ca"
                    ]
                },
                {
                    "command": [
                        "apply SupplementaryCommut; exists D; exists A; exists E; exists F; intuition.",
                        "VernacExtend",
                        "8296591fb67ae34a0c979d3dc5cf3a76e213cb13"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "rewrite (HalfLineAngleBC F A G D I).",
                        "VernacExtend",
                        "3919de094e87b716ce5903be66e5bf53525e296b"
                    ]
                },
                {
                    "command": [
                        "rewrite (ExternOppParallelogramm D F I E G).",
                        "VernacExtend",
                        "0d494d295b75dfca959990dd4b89b20a4f08f170"
                    ]
                },
                {
                    "command": [
                        "exact (CongruentStrictTrianglesB _ _ _ _ _ _ H10).",
                        "VernacExtend",
                        "288ef9652443d663300d2dfae64ee7e6ee06f841"
                    ]
                },
                {
                    "command": [
                        "exact (ParallelogrammPermut _ _ _ _ H9).",
                        "VernacExtend",
                        "e16de478e170aea87701864c46e903768245e6ea"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "exact (BetweenDistinctCA _ _ _ H4).",
                        "VernacExtend",
                        "85ccd32d63b576a40164f7b45ba643db06cef7ce"
                    ]
                },
                {
                    "command": [
                        "apply sym_not_eq; exact (BetweenDistinctCA _ _ _ H11).",
                        "VernacExtend",
                        "2d896c4b3848822aadca0e7579026305c2177b77"
                    ]
                },
                {
                    "command": [
                        "apply HalfLineSym.",
                        "VernacExtend",
                        "db45086aeefcf4852d4438b9e7f1c2f7046818c7"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "exact (BetweenSymHalfLine _ _ _ H4).",
                        "VernacExtend",
                        "8a2df304705c7c5379c0feb5981eae7079ae38cd"
                    ]
                },
                {
                    "command": [
                        "apply HalfLineSym.",
                        "VernacExtend",
                        "db45086aeefcf4852d4438b9e7f1c2f7046818c7"
                    ]
                },
                {
                    "command": [
                        "exact (BetweenDistinctAB _ _ _ H11).",
                        "VernacExtend",
                        "0c8e9f57f253ae37e86c647fa94765abe3ceed6f"
                    ]
                },
                {
                    "command": [
                        "exact (BetweenHalfLine _ _ _ H11).",
                        "VernacExtend",
                        "747bb44960abf622bfa24d1fb016085dbebef3cc"
                    ]
                },
                {
                    "command": [
                        "rewrite (HalfLineAngleBC G A F E I).",
                        "VernacExtend",
                        "d13e10f8bd42343d183a413d350aebb492e10af9"
                    ]
                },
                {
                    "command": [
                        "exact (CongruentStrictTrianglesC _ _ _ _ _ _ H10).",
                        "VernacExtend",
                        "38b95879012c912b2b1465ba13450e4caf12c99d"
                    ]
                },
                {
                    "command": [
                        "exact (BetweenDistinctCA _ _ _ H5).",
                        "VernacExtend",
                        "9171bf9da1099144a759086d24e0590d182b31c2"
                    ]
                },
                {
                    "command": [
                        "exact (BetweenDistinctCA _ _ _ H11).",
                        "VernacExtend",
                        "27809f2155d47cefeaa7c4e5701b07ae73676916"
                    ]
                },
                {
                    "command": [
                        "apply HalfLineSym.",
                        "VernacExtend",
                        "db45086aeefcf4852d4438b9e7f1c2f7046818c7"
                    ]
                },
                {
                    "command": [
                        "apply sym_not_eq; exact (BetweenDistinctBC _ _ _ H5).",
                        "VernacExtend",
                        "92ac2edf3b3b9a4c73a63e12eb793296892bd262"
                    ]
                },
                {
                    "command": [
                        "exact (BetweenSymHalfLine _ _ _ H5).",
                        "VernacExtend",
                        "5f6d775a7571a1013cf202a39c49ce9d0b4bfedc"
                    ]
                },
                {
                    "command": [
                        "apply HalfLineSym.",
                        "VernacExtend",
                        "db45086aeefcf4852d4438b9e7f1c2f7046818c7"
                    ]
                },
                {
                    "command": [
                        "apply sym_not_eq; exact (BetweenDistinctBC _ _ _ H11).",
                        "VernacExtend",
                        "381707d54bffe35ef74c4192b2c21e8e3eb7c9a6"
                    ]
                },
                {
                    "command": [
                        "exact (BetweenSymHalfLine _ _ _ H11).",
                        "VernacExtend",
                        "91113dd3fb99c3d9a740fde98c30f27a65f6ebc7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "EmbeddedSimilarTriangles",
            "line_nb": 72,
            "steps": [
                {
                    "command": [
                        "intros A B C n H Hn.",
                        "VernacExtend",
                        "808c511417b7c4cc727108c960317a733161b956"
                    ]
                },
                {
                    "command": [
                        "assert (Hab := ClockwiseDistinctAB _ _ _ H).",
                        "VernacExtend",
                        "dba1f4f205edf83c9f24c79f5fb99036704c2ffc"
                    ]
                },
                {
                    "command": [
                        "assert (Hac := sym_not_eq (ClockwiseDistinctCA _ _ _ H)).",
                        "VernacExtend",
                        "308b324136453193090cd5ddfd895d021634b003"
                    ]
                },
                {
                    "command": [
                        "induction Hn.",
                        "VernacExtend",
                        "4932d6bf909fafd1d8b4b3d4b8e2644b31fe509f"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; rewrite NullDist; do 2 rewrite LS0NeutralRight; intros.",
                        "VernacExtend",
                        "b85489f00a6169573921a7cc605ac1fab541ee3a"
                    ]
                },
                {
                    "command": [
                        "rewrite (HalfLineEquidistantEqual A B D Hab H0 (sym_eq H2)).",
                        "VernacExtend",
                        "d1eb5686ba6410f8d4de919cf8b2f1f70127554e"
                    ]
                },
                {
                    "command": [
                        "rewrite (HalfLineEquidistantEqual A C E Hac H1 (sym_eq H3)).",
                        "VernacExtend",
                        "5b436d7a5e29517236b1063b29b336ee4546ed47"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "destruct (StrongGraduation A B Hab m) as (Dm, (H0, (H1, H2))).",
                        "VernacExtend",
                        "e5096e17fb930e6e5b40e4dd1a25e2381fbe020e"
                    ]
                },
                {
                    "command": [
                        "destruct (StrongGraduation A C Hac m) as (Em, (H3, (H4, H5))).",
                        "VernacExtend",
                        "d99e7f559bc2817b62d3ebae0f1b6f15bf1a6539"
                    ]
                },
                {
                    "command": [
                        "assert (A <> Dm).",
                        "VernacExtend",
                        "97a5f65f21a114c1f156acc1444b6b53855c460b"
                    ]
                },
                {
                    "command": [
                        "apply H2; omega.",
                        "VernacExtend",
                        "00986bf5ee6cafd96c671427d117f0c5411b50e2"
                    ]
                },
                {
                    "command": [
                        "assert (A <> Em).",
                        "VernacExtend",
                        "7681f74f56e5f9a7c3abba42de40a6ab6e0d4e09"
                    ]
                },
                {
                    "command": [
                        "apply H5; omega.",
                        "VernacExtend",
                        "57f92c4fab5bff855befc5d02e63e128d2bf1216"
                    ]
                },
                {
                    "command": [
                        "destruct (IHHn Dm Em (HalfLineSym _ _ _ H6 H0) (HalfLineSym _ _ _ H7 H3) H1 H4).",
                        "VernacExtend",
                        "258d6ea9cf2e5362c747637d5466711afbceb657"
                    ]
                },
                {
                    "command": [
                        "clear IHHn H2 H5; simpl in |- *; intros.",
                        "VernacExtend",
                        "92f0c5eb003d79500657c4b43fca7b7f5145fd5a"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsEquidistantBetween A Dm A B H6 Hab) as (DSm, (H12, H13)).",
                        "VernacExtend",
                        "789841eb61f5ccb57affa8d3e1705cf47578d8e5"
                    ]
                },
                {
                    "command": [
                        "assert (H14 := HalfLineEquidistantEqualPoints _ _ _ _ _ _ H0 H1 H2 H6 H10 H12 H13); subst.",
                        "VernacExtend",
                        "e7f69cd0c5910556edf443166c6e78be33d8013b"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsEquidistantBetween A Em A C H7 Hac) as (ESm, (H14, H15)).",
                        "VernacExtend",
                        "b2e8992a84bdb315ef86b7c7525b5fc8d96e49a7"
                    ]
                },
                {
                    "command": [
                        "assert (H16 := HalfLineEquidistantEqualPoints _ _ _ _ _ _ H3 H4 H5 H7 H11 H14 H15); subst.",
                        "VernacExtend",
                        "f4481b8034b02c5bf497ae7b6485b7df1995b930"
                    ]
                },
                {
                    "command": [
                        "apply (ThreeEmbeddedTriangles A B C Dm Em D E); auto.",
                        "VernacExtend",
                        "2741899f41354dc3a8c2a10cb62773ef0bde6997"
                    ]
                },
                {
                    "command": [
                        "apply (HalfLineSym _ _ _ H6 H0).",
                        "VernacExtend",
                        "f164752b286c5e43fdc72b3e608d4b0a6dddff01"
                    ]
                },
                {
                    "command": [
                        "apply (HalfLineSym _ _ _ H7 H3).",
                        "VernacExtend",
                        "c02f59d71ee50325f31fe7fec29d0f6a6ee38e06"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ExistsClockwiseParallelogramm",
            "line_nb": 98,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsDParallelogramm C D E) as (G, H1).",
                        "VernacExtend",
                        "b3fcfdf93f21c9ca71aeaabdd9884261f12dbe94"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseCAB; apply (BetweenClockwiseAMC D A C E).",
                        "VernacExtend",
                        "bfcc234e6500d4e26f34f71a16876753c020c068"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogramm in *; intuition; autoClockwise.",
                        "VernacExtend",
                        "726894742959055c44ebd34ea6a7d988735c6075"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "assert (H2 := ParallelogrammClockwiseBCD _ _ _ _ H1).",
                        "VernacExtend",
                        "f30325aead432750e74f4e4114117486ebecba0c"
                    ]
                },
                {
                    "command": [
                        "destruct (PaschABC D A C E G) as [(I, (H3, H4))| (I, (H3, H4))].",
                        "VernacExtend",
                        "6bc878cb3bf52171bd1810e788b0785a7825f29c"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogramm in *; intuition; autoClockwise.",
                        "VernacExtend",
                        "726894742959055c44ebd34ea6a7d988735c6075"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseNotCollinear; exact H2.",
                        "VernacExtend",
                        "40ec1e0af315b8c5377b961410d9a580c59beef3"
                    ]
                },
                {
                    "command": [
                        "intro; elim (ClockwiseNotCollinear E A G).",
                        "VernacExtend",
                        "d380486b1f2ffa380ba21bba9d5e7bb5dc11cc5b"
                    ]
                },
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "autoCollinear.",
                        "VernacExtend",
                        "f9b5517305c4ea7b3088acc38c4b180fb95147f1"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogramm in *; intuition; autoClockwise.",
                        "VernacExtend",
                        "726894742959055c44ebd34ea6a7d988735c6075"
                    ]
                },
                {
                    "command": [
                        "elim (BetweenNotClockwiseABC D I C H4).",
                        "VernacExtend",
                        "e289794a378b7c42ad67d224eedb1e9cccbccdd9"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseBCA; destruct (CollinearHalfLine _ _ _ H3).",
                        "VernacExtend",
                        "38c00f45daa3d584268b8c9073fabff87d9f181e"
                    ]
                },
                {
                    "command": [
                        "apply (ParallelHalfLine _ _ _ _ _ H1 H5).",
                        "VernacExtend",
                        "001115af8fda5747bff7549a1812bb22cf4a3e3a"
                    ]
                },
                {
                    "command": [
                        "apply (HalfLineParallel _ _ _ _ _ H1 H5).",
                        "VernacExtend",
                        "75c0ca006b3755c88305fea33a681bc155362532"
                    ]
                },
                {
                    "command": [
                        "assert (H5 := sym_not_eq (BetweenDistinctBC _ _ _ H4)).",
                        "VernacExtend",
                        "d40010b5a87b2267fa25d16c199a4c56d91a850e"
                    ]
                },
                {
                    "command": [
                        "destruct (Archimedian C I A H5) as (n, H6).",
                        "VernacExtend",
                        "9e60dc7941d9687c29ff463e4b969b75091f2b20"
                    ]
                },
                {
                    "command": [
                        "assert (H7 : n > 0).",
                        "VernacExtend",
                        "ebea762b45f04bb1d02fab31b6a4f83ebd46cc43"
                    ]
                },
                {
                    "command": [
                        "destruct n.",
                        "VernacExtend",
                        "1582bf847770c098bee882393a48b146dcc37a8c"
                    ]
                },
                {
                    "command": [
                        "simpl in H6.",
                        "VernacExtend",
                        "a1cfe6bf72a31f34bf109464b9fb8288a8f3124d"
                    ]
                },
                {
                    "command": [
                        "elim (AntisymLSlt C A C (BetweenDistinctCA _ _ _ H4) H6).",
                        "VernacExtend",
                        "ce6c17df0497abe307ebb101ea93e925997c5970"
                    ]
                },
                {
                    "command": [
                        "rewrite NullDist; apply (NullLSlt C A (BetweenDistinctCA _ _ _ H4)).",
                        "VernacExtend",
                        "49bcb4226b7e50b97acfd3223eb6661bd9c8c1d5"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "destruct (StrongGraduation C I H5 n) as (J, (H8, (H9, H10))).",
                        "VernacExtend",
                        "03a899e68a2976172f1933a025311bf91715319e"
                    ]
                },
                {
                    "command": [
                        "destruct (StrongGraduation C E (ParallelogrammDistinctAC _ _ _ _ H1) n) as (F, (H11, (H12, H13))).",
                        "VernacExtend",
                        "f1b031344e9ae9972a4b540929ee9a58c1e980c5"
                    ]
                },
                {
                    "command": [
                        "assert (H14 : Between C A J).",
                        "VernacExtend",
                        "01be32571652a17370d55a7b8a2d11a24cb79cf2"
                    ]
                },
                {
                    "command": [
                        "apply LSltBetween.",
                        "VernacExtend",
                        "af896a206b44f3ae0fd045bcb4353c00b4c71895"
                    ]
                },
                {
                    "command": [
                        "apply (BetweenDistinctCA _ _ _ H4).",
                        "VernacExtend",
                        "4a645f0eaa2b2e05d7550ddde991c98e3fcd11e7"
                    ]
                },
                {
                    "command": [
                        "assert (H14 := BetweenSymHalfLine _ _ _ H4); apply (HalfLineSym C J A (H10 H7)).",
                        "VernacExtend",
                        "a38d0ae7978e25d8248e2c0a0263304eeb93312b"
                    ]
                },
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "rewrite H9; trivial.",
                        "VernacExtend",
                        "09ae93b5940b269dbc52647a4c1a288c283101f5"
                    ]
                },
                {
                    "command": [
                        "exists F; split.",
                        "VernacExtend",
                        "ee947613c53640791a788c1fb24a4c87b953e0ac"
                    ]
                },
                {
                    "command": [
                        "apply CollinearACB; apply (HalfLineCollinear _ _ _ H11).",
                        "VernacExtend",
                        "fe6b8eac8ab457e72420d515cc8d8776679cd36a"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsDParallelogramm B A J) as (K, H15).",
                        "VernacExtend",
                        "f686ee4d737335b331b99257ecd9346f90635e67"
                    ]
                },
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseCAB; apply H19.",
                        "VernacExtend",
                        "e0bed351db2b87e034dfafbb4472484389f4d33a"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogramm in *; intuition; autoClockwise.",
                        "VernacExtend",
                        "726894742959055c44ebd34ea6a7d988735c6075"
                    ]
                },
                {
                    "command": [
                        "apply (HalfLineParallel _ _ _ _ F H15).",
                        "VernacExtend",
                        "d33ebc01099809bd0ce62a794ef0da34c950e1b6"
                    ]
                },
                {
                    "command": [
                        "apply BetweenSymHalfLine; apply (SupplementaryRec J F C K).",
                        "VernacExtend",
                        "8afa724610e7fe753cfd7cc61f94370100f37670"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseCAB; apply (ClockwiseBetweenMBC J C F A).",
                        "VernacExtend",
                        "23fead277b82e35131a6377285f8ff6969dd2e0f"
                    ]
                },
                {
                    "command": [
                        "apply BetweenSym; trivial.",
                        "VernacExtend",
                        "4b64e2e034d8805eeb392d09c64cc0f02b3100e4"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseCAB; apply (HalfLineSym C F E (H13 H7) H11).",
                        "VernacExtend",
                        "aa3e78726a84c37bfbbfa16ca3330241bb4f7f2f"
                    ]
                },
                {
                    "command": [
                        "canonize; apply ClockwiseCAB; apply (BetweenClockwiseMBC D A C E).",
                        "VernacExtend",
                        "ee512cc4c9bf845754a1847ce178a8eaf439108d"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseBCA; apply (ParallelogrammClockwiseBCD B C D A (ParallelogrammPermut _ _ _ _ H)).",
                        "VernacExtend",
                        "c760ca46b0b5c0e2157b1ac68289df2d7744b416"
                    ]
                },
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "apply (ClockwiseBetweenMBC C J K A H14).",
                        "VernacExtend",
                        "e0dad197e9e58f079ed9852c1be679bbd15e2bfd"
                    ]
                },
                {
                    "command": [
                        "apply (ParallelogrammClockwiseBCD _ _ _ _ H15).",
                        "VernacExtend",
                        "582b64e174ce807b5e50e629bbdca58b8b3a1e5c"
                    ]
                },
                {
                    "command": [
                        "assert (H16 : Clockwise C E I).",
                        "VernacExtend",
                        "ebf90b54ba8f5276e274a6cb1ae09713dd3f3b96"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseBCA; apply (BetweenClockwiseMBC A C E I).",
                        "VernacExtend",
                        "07b7627396b012c0bb3797057aebd11454a75d6d"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseBCA; apply (BetweenClockwiseMBC D A C E).",
                        "VernacExtend",
                        "e5b7e3e4ec1481e6872d026fade20d03ad94aedd"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseBCA; apply (ParallelogrammClockwiseBCD B C D A).",
                        "VernacExtend",
                        "715fc1d1f95edce3a8d04b6113e453ce58262953"
                    ]
                },
                {
                    "command": [
                        "exact (ParallelogrammPermut _ _ _ _ H).",
                        "VernacExtend",
                        "35b25ddb71bab46169337e0314f6d1cf45fa7931"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "destruct (EmbeddedSimilarTriangles C E I n H16 H7 F J (HalfLineSym _ _ _ (H13 H7) H11) (HalfLineSym _ _ _ (H10 H7) H8) H12 H9).",
                        "VernacExtend",
                        "27368b164884dc2171f5d995e6c675c0c6671578"
                    ]
                },
                {
                    "command": [
                        "rewrite (AngleSym J F C).",
                        "VernacExtend",
                        "ffb9ca9c573e94e4f8bd231ca7cd902aab8e6d9f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H18.",
                        "VernacExtend",
                        "1df286e8f974815839e188c1a60afb808365a918"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (BetweenAngleB J A K C).",
                        "VernacExtend",
                        "729caad8473b97fe9aa20e208c46820d8c752a5b"
                    ]
                },
                {
                    "command": [
                        "assert (H19 := ParallelogrammCongruentTrianglesAC _ _ _ _ (ParallelogrammPermut _ _ _ _ H15)).",
                        "VernacExtend",
                        "bc6205ee55f05666e9ea38471420947445d37162"
                    ]
                },
                {
                    "command": [
                        "rewrite (CongruentStrictTrianglesB _ _ _ _ _ _ H19).",
                        "VernacExtend",
                        "b6764c4061fec881f08415d641528b8a77ab086a"
                    ]
                },
                {
                    "command": [
                        "rewrite (ExternParallelogramm K B A J C).",
                        "VernacExtend",
                        "8b8f3664f001688747dd5bf1ef3484a4c0aa969d"
                    ]
                },
                {
                    "command": [
                        "rewrite (CongruentStrictTrianglesA _ _ _ _ _ _ (ParallelogrammCongruentTrianglesAC _ _ _ _ H)) .",
                        "VernacExtend",
                        "6b8e8a1c43e8b7deb86daf7f0461cab92360c650"
                    ]
                },
                {
                    "command": [
                        "rewrite (AngleSym C).",
                        "VernacExtend",
                        "00ba9363549046f914292385970c6291e2ef2738"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (TwoEmbeddedSymTriangles A C D I E).",
                        "VernacExtend",
                        "b68512ba9c7ffb3c03fed4edec2b0ad5947799ca"
                    ]
                },
                {
                    "command": [
                        "unfold Supplementary in |- *; exists I; exists C; exists E; exists A; intuition.",
                        "VernacExtend",
                        "4375fc994b3096e25c9a25dab7846f3e590b56b8"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "exact (BetweenSym _ _ _ H4).",
                        "VernacExtend",
                        "316a7500c0b630367dfcd23cc007ef4003608369"
                    ]
                },
                {
                    "command": [
                        "apply AngleSym; autoDistinct.",
                        "VernacExtend",
                        "78d12dad913b6e3a291f2c9c2ea77ff8feecbbab"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseCAB; exact (ParallelogrammClockwiseBCD _ _ _ _ (ParallelogrammPermut _ _ _ _ H)).",
                        "VernacExtend",
                        "58232327fa91bea2b948ed4078129549a658ddab"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "exact (BetweenSym _ _ _ H0).",
                        "VernacExtend",
                        "2ef2970185d61f80f40c0b660ca90efb4b4b9131"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq; rewrite (CongruentItself D A C E C).",
                        "VernacExtend",
                        "8b9f34145007c7b7fb64d333e6b37559e9851813"
                    ]
                },
                {
                    "command": [
                        "rewrite (ExternOppParallelogramm _ _ _ _ _ H1 H0).",
                        "VernacExtend",
                        "8b7a4074671b092f9e808cc11698ac681f3b6da6"
                    ]
                },
                {
                    "command": [
                        "apply CongruentItself.",
                        "VernacExtend",
                        "4a4cbb2ec2c336da30611c578b1d7feeba8517f4"
                    ]
                },
                {
                    "command": [
                        "exact (ParallelogrammDistinctCD _ _ _ _ H1).",
                        "VernacExtend",
                        "954dd438ef1456e9140a0da093d44d3fec74caed"
                    ]
                },
                {
                    "command": [
                        "exact (BetweenDistinctBC _ _ _ H0).",
                        "VernacExtend",
                        "872e9d5276db56e6e5cf0b3e51ffcf5cd8276c28"
                    ]
                },
                {
                    "command": [
                        "destruct (ExclusiveCollinear E G I).",
                        "VernacExtend",
                        "4ce4ae8fa30b2a9cf7937bb5c23dc730c45332cb"
                    ]
                },
                {
                    "command": [
                        "exact (ParallelogrammDistinctCD _ _ _ _ H1).",
                        "VernacExtend",
                        "954dd438ef1456e9140a0da093d44d3fec74caed"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "assert (H21 := EquiOrientedRev _ _ _ H20).",
                        "VernacExtend",
                        "9dfab620a941c6d7c9ca9e4ce653a8e88526bcf3"
                    ]
                },
                {
                    "command": [
                        "clear H0 H2 H3 H4 H8 H11 H14 H20; generalizeChangeSide.",
                        "VernacExtend",
                        "b408eb977d84ac848d2afb2fdbe285d0127a4403"
                    ]
                },
                {
                    "command": [
                        "elim (ClockwiseNotClockwise _ _ _ (ParallelogrammClockwiseBCD _ _ _ _ (ParallelogrammPermut _ _ _ _ H1))).",
                        "VernacExtend",
                        "c7268b3d3c3fe4ae1c5cef59b395a5e561e7d10e"
                    ]
                },
                {
                    "command": [
                        "apply H4.",
                        "VernacExtend",
                        "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
                    ]
                },
                {
                    "command": [
                        "exact (ParallelogrammDistinctCD _ _ _ _ H1).",
                        "VernacExtend",
                        "954dd438ef1456e9140a0da093d44d3fec74caed"
                    ]
                },
                {
                    "command": [
                        "autoClockwise.",
                        "VernacExtend",
                        "9409e85b86446941015e1da6ca2353051468a0c2"
                    ]
                },
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "apply sym_not_eq; exact (BetweenDistinctCA _ _ _ H0).",
                        "VernacExtend",
                        "2c088f108f04577304f95d2b178ac068a9972bba"
                    ]
                },
                {
                    "command": [
                        "apply sym_not_eq; exact (ParallelogrammDistinctAB _ _ _ _ H1).",
                        "VernacExtend",
                        "310884804168c2370e9de85b1b0826f8c4be5b7c"
                    ]
                },
                {
                    "command": [
                        "apply HalfLineSym.",
                        "VernacExtend",
                        "db45086aeefcf4852d4438b9e7f1c2f7046818c7"
                    ]
                },
                {
                    "command": [
                        "autoClockwise.",
                        "VernacExtend",
                        "9409e85b86446941015e1da6ca2353051468a0c2"
                    ]
                },
                {
                    "command": [
                        "exact (BetweenHalfLine _ _ _ H0).",
                        "VernacExtend",
                        "3ec6ad3d14cf6fce8b3c0cb0325192eabfa40436"
                    ]
                },
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "exact (ParallelogrammDistinctCD _ _ _ _ H).",
                        "VernacExtend",
                        "db0f3a2cdfc3fbf7f029d014e98a703ec82d39bc"
                    ]
                },
                {
                    "command": [
                        "exact (BetweenDistinctAB _ _ _ H14).",
                        "VernacExtend",
                        "374ed7ce58501dcdca8445b326f255024a43400c"
                    ]
                },
                {
                    "command": [
                        "do 3 apply ParallelogrammPermut; exact H15.",
                        "VernacExtend",
                        "e16aa52c3a5251fe3cef61593ccb8fdf69808edf"
                    ]
                },
                {
                    "command": [
                        "exact (BetweenSym _ _ _ H14).",
                        "VernacExtend",
                        "ca0cfdb9de6814eab0c8a176dbb3e726eb0946f7"
                    ]
                },
                {
                    "command": [
                        "exact (ParallelogrammDistinctCD _ _ _ _ H15).",
                        "VernacExtend",
                        "9d86bb33675f466620944d8aa6c8bbcb92bf3c99"
                    ]
                },
                {
                    "command": [
                        "exact (BetweenSym _ _ _ H14).",
                        "VernacExtend",
                        "ca0cfdb9de6814eab0c8a176dbb3e726eb0946f7"
                    ]
                },
                {
                    "command": [
                        "assert (H19 : Clockwise C F J).",
                        "VernacExtend",
                        "8d1194308cf398fcf06b6bf1c611ae6bf63a3b44"
                    ]
                },
                {
                    "command": [
                        "clear H0 H3 H4 H14; generalizeChange.",
                        "VernacExtend",
                        "84c544c7fd8f62b755d8566ca89ea891e8e9cd2e"
                    ]
                },
                {
                    "command": [
                        "apply H11; apply ClockwiseBCA.",
                        "VernacExtend",
                        "7acd2c266cc0fbc74efa9d321823122f170d759c"
                    ]
                },
                {
                    "command": [
                        "apply H21; autoClockwise.",
                        "VernacExtend",
                        "1c3fdf4111b5ad39a9a2af636b46edbb2b32b98c"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "apply sym_not_eq; auto.",
                        "VernacExtend",
                        "d6f0eb49492609f6c19273f166097f96ae85e5fa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ExistsClockwiseParallelogrammSym",
            "line_nb": 209,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Hacd : Clockwise A C D).",
                        "VernacExtend",
                        "1522fde719ab737512f830f5096e789d1f3259d8"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogramm in *; intuition.",
                        "VernacExtend",
                        "035a1abdd2b0ad0756ec5e9ded5a5c0d05f84971"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsDParallelogramm E C D) as (G, H1).",
                        "VernacExtend",
                        "e3b52a79d300ca29185dcde0d49aac813127b3a5"
                    ]
                },
                {
                    "command": [
                        "exact (BetweenClockwiseMBC A C D E Hacd H0).",
                        "VernacExtend",
                        "75f1270553e41a7e1a8421edbbb1307711246d2d"
                    ]
                },
                {
                    "command": [
                        "assert (Hcge : Clockwise C G E).",
                        "VernacExtend",
                        "a6c0c3f13b1bde6a166a1b141b59d11c1e44f4b5"
                    ]
                },
                {
                    "command": [
                        "exact (ParallelogrammClockwiseBDA _ _ _ _ H1).",
                        "VernacExtend",
                        "ed16ceaf972e707645bcb00b4f734b279352d3ab"
                    ]
                },
                {
                    "command": [
                        "assert (Hedg : Clockwise E D G).",
                        "VernacExtend",
                        "bef898f61c2a77aa79a010b75f3e7378a9b3feba"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogramm in *; intuition.",
                        "VernacExtend",
                        "035a1abdd2b0ad0756ec5e9ded5a5c0d05f84971"
                    ]
                },
                {
                    "command": [
                        "destruct (PaschABC A C D E G Hacd H0) as [(I, (H3, H4))| (I, (H3, H4))].",
                        "VernacExtend",
                        "547ca5a2ce30b0984c9405aafb014bbc31b784f7"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseNotCollinear; assert (H2 := EquiOrientedRev _ _ _ H0); canonize.",
                        "VernacExtend",
                        "3f091a6fc236292e4a4c134a9db2b119283bb3db"
                    ]
                },
                {
                    "command": [
                        "apply H2; autoClockwise.",
                        "VernacExtend",
                        "0fd401ece9e64fee5d01e8b940b1725b8bb272b4"
                    ]
                },
                {
                    "command": [
                        "intro; elim (ClockwiseNotCollinear _ _ _ Hcge); autoCollinear.",
                        "VernacExtend",
                        "78c981e2c5bcb71d78aa17fe5c1dfe69c547cf7b"
                    ]
                },
                {
                    "command": [
                        "intro; elim (ClockwiseNotCollinear _ _ _ Hedg); autoCollinear.",
                        "VernacExtend",
                        "51e950bd1fb5d86c85890182a8fff592548ed2f8"
                    ]
                },
                {
                    "command": [
                        "assert (Hdie : Clockwise D I E).",
                        "VernacExtend",
                        "c1223ee250729a8c38309d272ff7dda39e9b9224"
                    ]
                },
                {
                    "command": [
                        "apply (BetweenClockwiseAMC D A E I).",
                        "VernacExtend",
                        "dcabfecff3db14eeade7646d8b7c3fc486039755"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseCAB; apply (BetweenClockwiseAMC A C D E Hacd H0).",
                        "VernacExtend",
                        "981b7c235ba34c1578a897979b7e4d13ed848693"
                    ]
                },
                {
                    "command": [
                        "exact (BetweenSym _ _ _ H4).",
                        "VernacExtend",
                        "316a7500c0b630367dfcd23cc007ef4003608369"
                    ]
                },
                {
                    "command": [
                        "assert (H5 := sym_not_eq (BetweenDistinctBC _ _ _ H4)).",
                        "VernacExtend",
                        "d40010b5a87b2267fa25d16c199a4c56d91a850e"
                    ]
                },
                {
                    "command": [
                        "destruct (Archimedian D I A H5) as (n, H6).",
                        "VernacExtend",
                        "337239b3cf5b65eb25fef1bdc74d3c2c03ebb64f"
                    ]
                },
                {
                    "command": [
                        "assert (H7 : n > 0).",
                        "VernacExtend",
                        "ebea762b45f04bb1d02fab31b6a4f83ebd46cc43"
                    ]
                },
                {
                    "command": [
                        "destruct n.",
                        "VernacExtend",
                        "1582bf847770c098bee882393a48b146dcc37a8c"
                    ]
                },
                {
                    "command": [
                        "simpl in H6.",
                        "VernacExtend",
                        "a1cfe6bf72a31f34bf109464b9fb8288a8f3124d"
                    ]
                },
                {
                    "command": [
                        "elim (AntisymLSlt D A D (BetweenDistinctCA _ _ _ H4) H6).",
                        "VernacExtend",
                        "74d312d99d7f29911b696187185866f40ffd0e2e"
                    ]
                },
                {
                    "command": [
                        "rewrite NullDist; apply (NullLSlt D A (BetweenDistinctCA _ _ _ H4)).",
                        "VernacExtend",
                        "2ff21acf6449d8d8ec090ac9e99b55b7bf9dc933"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "destruct (StrongGraduation D I H5 n) as (J, (H8, (H9, H10))).",
                        "VernacExtend",
                        "0ff7bda0f40af24ac62b19361a60d7610f6d4940"
                    ]
                },
                {
                    "command": [
                        "destruct (StrongGraduation D E (sym_not_eq (ParallelogrammDistinctAC _ _ _ _ H1)) n) as (F, (H11, (H12, H13))).",
                        "VernacExtend",
                        "eaf6b74d92cb5b1f4a10b38e1bc061b2b56c9d7d"
                    ]
                },
                {
                    "command": [
                        "assert (H14 : Between D A J).",
                        "VernacExtend",
                        "d432426998654d72ecb7de49ee78b4f631f6c029"
                    ]
                },
                {
                    "command": [
                        "apply LSltBetween.",
                        "VernacExtend",
                        "af896a206b44f3ae0fd045bcb4353c00b4c71895"
                    ]
                },
                {
                    "command": [
                        "apply (BetweenDistinctCA _ _ _ H4).",
                        "VernacExtend",
                        "4a645f0eaa2b2e05d7550ddde991c98e3fcd11e7"
                    ]
                },
                {
                    "command": [
                        "assert (H14 := BetweenSymHalfLine _ _ _ H4); apply (HalfLineSym D J A (H10 H7)).",
                        "VernacExtend",
                        "77a0604f0451c2c6c6f61bec139e2edc312d6874"
                    ]
                },
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "rewrite H9; trivial.",
                        "VernacExtend",
                        "09ae93b5940b269dbc52647a4c1a288c283101f5"
                    ]
                },
                {
                    "command": [
                        "exists F; split.",
                        "VernacExtend",
                        "ee947613c53640791a788c1fb24a4c87b953e0ac"
                    ]
                },
                {
                    "command": [
                        "apply CollinearACB; apply (HalfLineCollinear _ _ _ H11).",
                        "VernacExtend",
                        "fe6b8eac8ab457e72420d515cc8d8776679cd36a"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsDParallelogramm B A J) as (K, H15).",
                        "VernacExtend",
                        "f686ee4d737335b331b99257ecd9346f90635e67"
                    ]
                },
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseCAB; apply H18.",
                        "VernacExtend",
                        "e173f51184ebefc8b76e0cd416f779a6fe4234f4"
                    ]
                },
                {
                    "command": [
                        "apply (ParallelogrammClockwiseBCD C D A B); do 2 apply ParallelogrammPermut; trivial.",
                        "VernacExtend",
                        "4859e51f866bc5e642d58fa4fbe79228712b03f3"
                    ]
                },
                {
                    "command": [
                        "apply (ParallelHalfLine _ _ _ _ F H15).",
                        "VernacExtend",
                        "6cba530e84bd0c27d834959532fd8c1c6166d5d1"
                    ]
                },
                {
                    "command": [
                        "apply (AngleBHalfLine J K D F).",
                        "VernacExtend",
                        "3390193a248e0ee8eb5ec0c15d5de160e7ba4cf1"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseBCA; apply (ClockwiseBetweenMBC D J K A H14).",
                        "VernacExtend",
                        "b02980c5437cf66c3be310db0709450242d1a992"
                    ]
                },
                {
                    "command": [
                        "exact (ParallelogrammClockwiseBCD _ _ _ _ H15).",
                        "VernacExtend",
                        "7f9d2dee6948aa386a1ed9485c31ce3d3783d925"
                    ]
                },
                {
                    "command": [
                        "clear H0 H3 H4 H14; generalizeChange.",
                        "VernacExtend",
                        "84c544c7fd8f62b755d8566ca89ea891e8e9cd2e"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseCAB; apply H3.",
                        "VernacExtend",
                        "c9ca45eab46cb5f461eadf20cff0b8f625a2bb14"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseCAB; apply (H13 E Hdie).",
                        "VernacExtend",
                        "4ed3c2299a7a14d92920afe48089652238c00f88"
                    ]
                },
                {
                    "command": [
                        "assert (H16 : Angle K J D = Angle B A D).",
                        "VernacExtend",
                        "ad6c8d0e31594211c2991ecd4a8b973b00eaa1f1"
                    ]
                },
                {
                    "command": [
                        "rewrite (CongruentItself J K D K A).",
                        "VernacExtend",
                        "246c1c84625a23f4f0929ce2d5ae3dd99c28fbb2"
                    ]
                },
                {
                    "command": [
                        "rewrite (CongruentStrictTrianglesB A J K K B A).",
                        "VernacExtend",
                        "539a511145f520799467ccd999171665e2eb3895"
                    ]
                },
                {
                    "command": [
                        "apply (ExternParallelogramm K B A J D).",
                        "VernacExtend",
                        "f0b5c04e6c7163b188f6d51ed05b8d3e43e5c41e"
                    ]
                },
                {
                    "command": [
                        "do 3 apply ParallelogrammPermut; exact H15.",
                        "VernacExtend",
                        "e16aa52c3a5251fe3cef61593ccb8fdf69808edf"
                    ]
                },
                {
                    "command": [
                        "exact (BetweenSym _ _ _ H14).",
                        "VernacExtend",
                        "ca0cfdb9de6814eab0c8a176dbb3e726eb0946f7"
                    ]
                },
                {
                    "command": [
                        "apply ParallelogrammCongruentTrianglesAC.",
                        "VernacExtend",
                        "f93c87573359ac70664b386c2e3d7a6322cbfc62"
                    ]
                },
                {
                    "command": [
                        "exact (ParallelogrammPermut _ _ _ _ H15).",
                        "VernacExtend",
                        "f7aa51b712aa3eb02da99cc0fcb6905ee9ef0b34"
                    ]
                },
                {
                    "command": [
                        "exact (ParallelogrammDistinctCD _ _ _ _ H15).",
                        "VernacExtend",
                        "9d86bb33675f466620944d8aa6c8bbcb92bf3c99"
                    ]
                },
                {
                    "command": [
                        "exact (BetweenDistinctCA _ _ _ H14).",
                        "VernacExtend",
                        "90cfeb6eebd1179390f2cdd7274167fa3b995e6c"
                    ]
                },
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "apply HalfLineSym.",
                        "VernacExtend",
                        "db45086aeefcf4852d4438b9e7f1c2f7046818c7"
                    ]
                },
                {
                    "command": [
                        "exact (sym_not_eq (BetweenDistinctBC _ _ _ H14)).",
                        "VernacExtend",
                        "11fdafb9c493ae07df46f52429fc236f0c3a6f43"
                    ]
                },
                {
                    "command": [
                        "exact (BetweenSymHalfLine _ _ _ H14).",
                        "VernacExtend",
                        "621e79791acb055cd3c3311b3fb38caf4acde44e"
                    ]
                },
                {
                    "command": [
                        "rewrite H16.",
                        "VernacExtend",
                        "d46611b9926d3411ed586aec14fbb4de59848bae"
                    ]
                },
                {
                    "command": [
                        "rewrite (Supplement A J B D I A E D).",
                        "VernacExtend",
                        "09dc15f671d419e3f28063e30d657e092969a666"
                    ]
                },
                {
                    "command": [
                        "rewrite (AngleSym I).",
                        "VernacExtend",
                        "28c2457f723cab450ee1e8a60a445caa8ed47731"
                    ]
                },
                {
                    "command": [
                        "rewrite (AngleSym J).",
                        "VernacExtend",
                        "3c35d18aff8ad5747aa1106ab5ed528afdb25dfa"
                    ]
                },
                {
                    "command": [
                        "destruct (EmbeddedSimilarTriangles D I E n Hdie H7 J F).",
                        "VernacExtend",
                        "7b56edb7f56945a701ddec2d3bb6f83c699130d8"
                    ]
                },
                {
                    "command": [
                        "exact (HalfLineSym _ _ _ (H10 H7) H8).",
                        "VernacExtend",
                        "3870eba552fa99777efab70f97fa0b6884c132d3"
                    ]
                },
                {
                    "command": [
                        "exact (HalfLineSym _ _ _ (H13 H7) H11).",
                        "VernacExtend",
                        "c0fd73942f8f714d83cef244a5818bf71b69436b"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply (ClockwiseDistinctBC D J F).",
                        "VernacExtend",
                        "59a9d234ab71061ce68927dd7c323116a9d02577"
                    ]
                },
                {
                    "command": [
                        "clear H0 H3 H4 H14; generalizeChange.",
                        "VernacExtend",
                        "84c544c7fd8f62b755d8566ca89ea891e8e9cd2e"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseBCA; apply H3.",
                        "VernacExtend",
                        "7061d1a67302081607c329b2f7e48c29f64179e3"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseCAB; apply (H13 E Hdie).",
                        "VernacExtend",
                        "4ed3c2299a7a14d92920afe48089652238c00f88"
                    ]
                },
                {
                    "command": [
                        "exact (BetweenDistinctCA _ _ _ H14).",
                        "VernacExtend",
                        "90cfeb6eebd1179390f2cdd7274167fa3b995e6c"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "exact (ParallelogrammDistinctAB _ _ _ _ H).",
                        "VernacExtend",
                        "d0a6a3e515a2cbd8bc8ba81de71ecf88211fece6"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "exact (BetweenSym _ _ _ H14).",
                        "VernacExtend",
                        "ca0cfdb9de6814eab0c8a176dbb3e726eb0946f7"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "rewrite (AngleSym A).",
                        "VernacExtend",
                        "2400793fb2c333f2dfd3283a5e9db9238d0d7bf7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (ExternOppParallelogramm C D A B J).",
                        "VernacExtend",
                        "ae4a53e6b4e0a0ad59c8db10bd974aca06a8668b"
                    ]
                },
                {
                    "command": [
                        "rewrite (AngleSym D).",
                        "VernacExtend",
                        "3ef9e2c582e5415cede36e8cbc6c379ef5c331ea"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq; apply TwoEmbeddedTriangles.",
                        "VernacExtend",
                        "fb5bc8a42638aecf407f28c7f8be6fb78f18265f"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "assert (H17 := ParallelogrammPermut _ _ _ _ H1).",
                        "VernacExtend",
                        "38f32068e7a0b0ac625f41e210152662730857d5"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (BetweenAngleB C E D A).",
                        "VernacExtend",
                        "41338b30716df4431cd46e12026378c479e52675"
                    ]
                },
                {
                    "command": [
                        "rewrite (CongruentStrictTrianglesB _ _ _ _ _ _ (ParallelogrammCongruentTrianglesAC _ _ _ _ H1)) .",
                        "VernacExtend",
                        "a5878a949e3c28e747cccd1a6b120efa3d8b2ce9"
                    ]
                },
                {
                    "command": [
                        "rewrite (ExternParallelogramm D G E C A).",
                        "VernacExtend",
                        "cb3fe3dfd9f7f2d1403194102c40a22311965e27"
                    ]
                },
                {
                    "command": [
                        "apply CongruentItself.",
                        "VernacExtend",
                        "4a4cbb2ec2c336da30611c578b1d7feeba8517f4"
                    ]
                },
                {
                    "command": [
                        "apply sym_not_eq; exact (BetweenDistinctAB _ _ _ H0).",
                        "VernacExtend",
                        "00863c02c19891d44ad066e98c21baf3dcfae861"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "destruct (ExclusiveCollinear E I G).",
                        "VernacExtend",
                        "83b3c9ad04c7468eadca9e721104eab43c4030ed"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "autoCollinear.",
                        "VernacExtend",
                        "f9b5517305c4ea7b3088acc38c4b180fb95147f1"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "elim (ClockwiseNotClockwise G E D).",
                        "VernacExtend",
                        "2deda1c8a1fc23eb315f995cd2a6f45ab471df3c"
                    ]
                },
                {
                    "command": [
                        "autoClockwise.",
                        "VernacExtend",
                        "9409e85b86446941015e1da6ca2353051468a0c2"
                    ]
                },
                {
                    "command": [
                        "assert (H18 := BetweenSym _ _ _ H2); canonize.",
                        "VernacExtend",
                        "3e6439ac171744287242a92b8e299bfe127ebdb4"
                    ]
                },
                {
                    "command": [
                        "apply H25; autoClockwise.",
                        "VernacExtend",
                        "b34b060c11bb7e7dd1988aa9c66f2c97825a164a"
                    ]
                },
                {
                    "command": [
                        "apply ParallelogrammPermut; trivial.",
                        "VernacExtend",
                        "05ff81ca75d471a635eefffac9f4682a5c50f339"
                    ]
                },
                {
                    "command": [
                        "exact (BetweenSym _ _ _ H0).",
                        "VernacExtend",
                        "2ef2970185d61f80f40c0b660ca90efb4b4b9131"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "exact (BetweenSym _ _ _ H0).",
                        "VernacExtend",
                        "2ef2970185d61f80f40c0b660ca90efb4b4b9131"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "do 2 apply ParallelogrammPermut; trivial.",
                        "VernacExtend",
                        "2fd8ec38c0db1b897a1883cb33fefc1cd23f07c0"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "exact (BetweenDistinctBC _ _ _ H14).",
                        "VernacExtend",
                        "ee23f5091aa5a16b84d62197ca6b2645e03bff63"
                    ]
                },
                {
                    "command": [
                        "exact (ParallelogrammDistinctAB _ _ _ _ H).",
                        "VernacExtend",
                        "d0a6a3e515a2cbd8bc8ba81de71ecf88211fece6"
                    ]
                },
                {
                    "command": [
                        "elim (BetweenNotClockwiseABC _ _ _ (BetweenSym _ _ _ H4)).",
                        "VernacExtend",
                        "e611bdd092e69bb3810e17da958c7a7b95f40bda"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseBCA; destruct (CollinearHalfLine _ _ _ H3).",
                        "VernacExtend",
                        "38c00f45daa3d584268b8c9073fabff87d9f181e"
                    ]
                },
                {
                    "command": [
                        "apply (HalfLineParallel C D G E I).",
                        "VernacExtend",
                        "a18ad9131fb52044ba92ee85cc82691787a83d84"
                    ]
                },
                {
                    "command": [
                        "apply ParallelogrammPermut; trivial.",
                        "VernacExtend",
                        "05ff81ca75d471a635eefffac9f4682a5c50f339"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply (ParallelHalfLine C D G E I).",
                        "VernacExtend",
                        "beea28a42d5fe3199de377e31a72535cba7e6ad4"
                    ]
                },
                {
                    "command": [
                        "apply ParallelogrammPermut; trivial.",
                        "VernacExtend",
                        "05ff81ca75d471a635eefffac9f4682a5c50f339"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "SecantParallelogrammSecant",
            "line_nb": 335,
            "steps": [
                {
                    "command": [
                        "intros; destruct (InOrOutLine (LineA F D) F' D').",
                        "VernacExtend",
                        "f35a663c0771d539a89f84718156c46aafa8aeeb"
                    ]
                },
                {
                    "command": [
                        "apply (TwoPointsSecantLines A (LineA F D)).",
                        "VernacExtend",
                        "e1ae4145b950a4903793be63f19bf081334f8951"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogramm in *; intuition.",
                        "VernacExtend",
                        "035a1abdd2b0ad0756ec5e9ded5a5c0d05f84971"
                    ]
                },
                {
                    "command": [
                        "apply NotClockwiseABA.",
                        "VernacExtend",
                        "1929f9382f3eafbe2fa414d468bdb46f165d0777"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "destruct (CentralSymetPoint B A (sym_not_eq (ParallelogrammDistinctCD _ _ _ _ H))) as (C, (H3, H4)).",
                        "VernacExtend",
                        "2f64986e94b84ff88eb11e9c3ff4f59b228537e4"
                    ]
                },
                {
                    "command": [
                        "destruct (Apart (LineA F' D') (LineB F' D') A (LineH F' D')).",
                        "VernacExtend",
                        "abf46f4916c5f5b14598a3e21cbbad010ee088ee"
                    ]
                },
                {
                    "command": [
                        "destruct (PaschABC C B (LineA F D) A (LineA F' D')) as [(E, (H6, H7))| (E, (H6, H7))].",
                        "VernacExtend",
                        "4c86cb46ae3394238d7be230797c36d2e13f8ffb"
                    ]
                },
                {
                    "command": [
                        "apply (ClockwiseBetweenMBC C B (LineA F D) A).",
                        "VernacExtend",
                        "3c554f2dd1c13744c8c3236c3f2f047ee613bfcf"
                    ]
                },
                {
                    "command": [
                        "apply BetweenSym; trivial.",
                        "VernacExtend",
                        "4b64e2e034d8805eeb392d09c64cc0f02b3100e4"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseBCA; unfold Parallelogramm in *; intuition.",
                        "VernacExtend",
                        "17676e649b59a057894203d70cb80d9286a721eb"
                    ]
                },
                {
                    "command": [
                        "apply BetweenSym; trivial.",
                        "VernacExtend",
                        "4b64e2e034d8805eeb392d09c64cc0f02b3100e4"
                    ]
                },
                {
                    "command": [
                        "intro; elim H1; apply (InFLine F' D').",
                        "VernacExtend",
                        "f69df6593b887c48c81caeb046f207bb80204f02"
                    ]
                },
                {
                    "command": [
                        "apply (CollinearTrans (LineA F' D') A (LineB F' D') B H5).",
                        "VernacExtend",
                        "2ba6b79cf423ce9cd18fde2e829516998a3a3c64"
                    ]
                },
                {
                    "command": [
                        "apply CollinearACB; apply FLineIn; trivial.",
                        "VernacExtend",
                        "82d2a59acf8bf642361a4775bea6f9dad214e3ec"
                    ]
                },
                {
                    "command": [
                        "apply CollinearCAB; apply (CollinearTrans A C B (LineA F' D') (BetweenDistinctBC _ _ _ H4)).",
                        "VernacExtend",
                        "9313b41daaf831b0138ccb617987e00aa701e117"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBCA; apply BetweenCollinear; trivial.",
                        "VernacExtend",
                        "064e58ed80240fc93a58d54d87f106ffbea8ac1d"
                    ]
                },
                {
                    "command": [
                        "autoCollinear.",
                        "VernacExtend",
                        "f9b5517305c4ea7b3088acc38c4b180fb95147f1"
                    ]
                },
                {
                    "command": [
                        "intro; elim H1; apply (InFLine F' D').",
                        "VernacExtend",
                        "f69df6593b887c48c81caeb046f207bb80204f02"
                    ]
                },
                {
                    "command": [
                        "apply (CollinearTrans (LineA F' D') A (LineB F' D') B H5).",
                        "VernacExtend",
                        "2ba6b79cf423ce9cd18fde2e829516998a3a3c64"
                    ]
                },
                {
                    "command": [
                        "apply CollinearACB; apply FLineIn; trivial.",
                        "VernacExtend",
                        "82d2a59acf8bf642361a4775bea6f9dad214e3ec"
                    ]
                },
                {
                    "command": [
                        "autoCollinear.",
                        "VernacExtend",
                        "f9b5517305c4ea7b3088acc38c4b180fb95147f1"
                    ]
                },
                {
                    "command": [
                        "intro; elim H2; apply (InFLine F' D').",
                        "VernacExtend",
                        "c26587f2c6224b63eed9fa8b4a6e6fb56f2677a7"
                    ]
                },
                {
                    "command": [
                        "apply (CollinearTrans (LineA F' D') A (LineB F' D') (LineA F D) H5).",
                        "VernacExtend",
                        "2ead88980ae5c448530d233a0e0068ffe38d1565"
                    ]
                },
                {
                    "command": [
                        "apply CollinearACB; apply FLineIn; trivial.",
                        "VernacExtend",
                        "82d2a59acf8bf642361a4775bea6f9dad214e3ec"
                    ]
                },
                {
                    "command": [
                        "autoCollinear.",
                        "VernacExtend",
                        "f9b5517305c4ea7b3088acc38c4b180fb95147f1"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsClockwiseParallelogrammSym (LineA F D) (LineB F D) C A E) as (G, (H8, H9)).",
                        "VernacExtend",
                        "eb7968ba16a6dfb810961f406b319289f47e36b7"
                    ]
                },
                {
                    "command": [
                        "apply (ParallelogrammSym (LineA F D) (LineB F D) A B C H H3 H4).",
                        "VernacExtend",
                        "d9771887508b1ffcc73be4fe1852df8f93ff9a63"
                    ]
                },
                {
                    "command": [
                        "apply BetweenSym; trivial.",
                        "VernacExtend",
                        "4b64e2e034d8805eeb392d09c64cc0f02b3100e4"
                    ]
                },
                {
                    "command": [
                        "apply (TwoPointsSecantLines A G).",
                        "VernacExtend",
                        "2f5204eb50b9d1d19a36c3b8e05dfe0098fa53f3"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogramm in *; intuition.",
                        "VernacExtend",
                        "035a1abdd2b0ad0756ec5e9ded5a5c0d05f84971"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseNotClockwise; trivial.",
                        "VernacExtend",
                        "ce19b391312e4ba8eba4049369c8f598f37b4679"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply (InFLine F' D').",
                        "VernacExtend",
                        "0be857cb24647b26549c0558ab1575441add34fb"
                    ]
                },
                {
                    "command": [
                        "apply (CollinearTrans (LineA F' D') A (LineB F' D') G H5).",
                        "VernacExtend",
                        "f669088e5f3a643e053b4c88a1c3664ff1f27247"
                    ]
                },
                {
                    "command": [
                        "apply CollinearACB; apply FLineIn; trivial.",
                        "VernacExtend",
                        "82d2a59acf8bf642361a4775bea6f9dad214e3ec"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBAC; apply (CollinearTrans A E).",
                        "VernacExtend",
                        "a299728a591347cbccd72937f7d885c98d45fdda"
                    ]
                },
                {
                    "command": [
                        "intro; subst; elim (CollinearNotClockwiseABC (LineA F D) C E).",
                        "VernacExtend",
                        "eab4e2f99cc6c9ac4b87b83147cd7dd209978bd3"
                    ]
                },
                {
                    "command": [
                        "apply CollinearCAB; apply BetweenCollinear; trivial.",
                        "VernacExtend",
                        "e273ab155acb344f03c6a0bff521849b1b9e8c0e"
                    ]
                },
                {
                    "command": [
                        "assert (H10 := EquiOrientedRev _ _ _ (BetweenSym _ _ _ H4)).",
                        "VernacExtend",
                        "5c59aad84df3078b0edbd927598fd14ff41412ad"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseCAB; unfold Parallelogramm in *; intuition; canonize.",
                        "VernacExtend",
                        "db6d94588aec58a168a769790afdbf21b38df068"
                    ]
                },
                {
                    "command": [
                        "apply H10; autoClockwise.",
                        "VernacExtend",
                        "29706d109f26d6c40dc2cfef6242980d420a1f6e"
                    ]
                },
                {
                    "command": [
                        "autoCollinear.",
                        "VernacExtend",
                        "f9b5517305c4ea7b3088acc38c4b180fb95147f1"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsClockwiseParallelogramm _ _ _ _ E H H7) as (G, (H8, H9)).",
                        "VernacExtend",
                        "7969a0f212e8e4a2e2104ac841ae51aff4d0a80a"
                    ]
                },
                {
                    "command": [
                        "apply (TwoPointsSecantLines A G).",
                        "VernacExtend",
                        "2f5204eb50b9d1d19a36c3b8e05dfe0098fa53f3"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogramm in *; intuition.",
                        "VernacExtend",
                        "035a1abdd2b0ad0756ec5e9ded5a5c0d05f84971"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseNotClockwise; trivial.",
                        "VernacExtend",
                        "ce19b391312e4ba8eba4049369c8f598f37b4679"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply (InFLine F' D').",
                        "VernacExtend",
                        "0be857cb24647b26549c0558ab1575441add34fb"
                    ]
                },
                {
                    "command": [
                        "apply (CollinearTrans (LineA F' D') A (LineB F' D') G H5).",
                        "VernacExtend",
                        "f669088e5f3a643e053b4c88a1c3664ff1f27247"
                    ]
                },
                {
                    "command": [
                        "apply CollinearACB; apply FLineIn; trivial.",
                        "VernacExtend",
                        "82d2a59acf8bf642361a4775bea6f9dad214e3ec"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBAC; apply (CollinearTrans A E).",
                        "VernacExtend",
                        "a299728a591347cbccd72937f7d885c98d45fdda"
                    ]
                },
                {
                    "command": [
                        "intro; subst; elim (CollinearNotClockwiseABC (LineA F D) E B).",
                        "VernacExtend",
                        "cb37f2a4ccf9f866939b279ceec08fe65c932bb6"
                    ]
                },
                {
                    "command": [
                        "apply CollinearCBA; apply BetweenCollinear; trivial.",
                        "VernacExtend",
                        "f626fd4e41c7c0042466883541bc76d5b0f7fa94"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogramm in *; intuition.",
                        "VernacExtend",
                        "035a1abdd2b0ad0756ec5e9ded5a5c0d05f84971"
                    ]
                },
                {
                    "command": [
                        "autoCollinear.",
                        "VernacExtend",
                        "f9b5517305c4ea7b3088acc38c4b180fb95147f1"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "destruct (PaschABC C B (LineA F D) A (LineB F' D')) as [(E, (H6, H7))| (E, (H6, H7))].",
                        "VernacExtend",
                        "0e56ec3dfcb39006f79e1e75e54bd019d41046a2"
                    ]
                },
                {
                    "command": [
                        "apply (ClockwiseBetweenMBC C B (LineA F D) A).",
                        "VernacExtend",
                        "3c554f2dd1c13744c8c3236c3f2f047ee613bfcf"
                    ]
                },
                {
                    "command": [
                        "apply BetweenSym; trivial.",
                        "VernacExtend",
                        "4b64e2e034d8805eeb392d09c64cc0f02b3100e4"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseBCA; unfold Parallelogramm in *; intuition.",
                        "VernacExtend",
                        "17676e649b59a057894203d70cb80d9286a721eb"
                    ]
                },
                {
                    "command": [
                        "apply BetweenSym; trivial.",
                        "VernacExtend",
                        "4b64e2e034d8805eeb392d09c64cc0f02b3100e4"
                    ]
                },
                {
                    "command": [
                        "intro; elim H1; apply (InFLine F' D').",
                        "VernacExtend",
                        "f69df6593b887c48c81caeb046f207bb80204f02"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBAC; apply (CollinearTrans (LineB F' D') A (LineA F' D') B H5).",
                        "VernacExtend",
                        "6119fa9ba8ab52c8134739129f8ad84024d3cf5d"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBCA; apply FLineIn; trivial.",
                        "VernacExtend",
                        "bf1978be09ee6d6a3e24772c9d6455b8201f76fb"
                    ]
                },
                {
                    "command": [
                        "apply CollinearCAB; apply (CollinearTrans A C B (LineB F' D') (BetweenDistinctBC _ _ _ H4)).",
                        "VernacExtend",
                        "a0b216dcba3961eaec6c310472eacee3e59e12b3"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBCA; apply BetweenCollinear; trivial.",
                        "VernacExtend",
                        "064e58ed80240fc93a58d54d87f106ffbea8ac1d"
                    ]
                },
                {
                    "command": [
                        "autoCollinear.",
                        "VernacExtend",
                        "f9b5517305c4ea7b3088acc38c4b180fb95147f1"
                    ]
                },
                {
                    "command": [
                        "intro; elim H1; apply (InFLine F' D').",
                        "VernacExtend",
                        "f69df6593b887c48c81caeb046f207bb80204f02"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBAC; apply (CollinearTrans (LineB F' D') A (LineA F' D') B H5).",
                        "VernacExtend",
                        "6119fa9ba8ab52c8134739129f8ad84024d3cf5d"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBCA; apply FLineIn; trivial.",
                        "VernacExtend",
                        "bf1978be09ee6d6a3e24772c9d6455b8201f76fb"
                    ]
                },
                {
                    "command": [
                        "autoCollinear.",
                        "VernacExtend",
                        "f9b5517305c4ea7b3088acc38c4b180fb95147f1"
                    ]
                },
                {
                    "command": [
                        "intro; elim H2; apply (InFLine F' D').",
                        "VernacExtend",
                        "c26587f2c6224b63eed9fa8b4a6e6fb56f2677a7"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBAC; apply (CollinearTrans (LineB F' D') A (LineA F' D') (LineA F D) H5).",
                        "VernacExtend",
                        "905b5a0d0b65bde2389936de331f9244f8fe5af3"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBCA; apply FLineIn; trivial.",
                        "VernacExtend",
                        "bf1978be09ee6d6a3e24772c9d6455b8201f76fb"
                    ]
                },
                {
                    "command": [
                        "autoCollinear.",
                        "VernacExtend",
                        "f9b5517305c4ea7b3088acc38c4b180fb95147f1"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsClockwiseParallelogrammSym (LineA F D) (LineB F D) C A E) as (G, (H8, H9)).",
                        "VernacExtend",
                        "eb7968ba16a6dfb810961f406b319289f47e36b7"
                    ]
                },
                {
                    "command": [
                        "apply (ParallelogrammSym (LineA F D) (LineB F D) A B C H H3 H4).",
                        "VernacExtend",
                        "d9771887508b1ffcc73be4fe1852df8f93ff9a63"
                    ]
                },
                {
                    "command": [
                        "apply BetweenSym; trivial.",
                        "VernacExtend",
                        "4b64e2e034d8805eeb392d09c64cc0f02b3100e4"
                    ]
                },
                {
                    "command": [
                        "apply (TwoPointsSecantLines A G).",
                        "VernacExtend",
                        "2f5204eb50b9d1d19a36c3b8e05dfe0098fa53f3"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogramm in *; intuition.",
                        "VernacExtend",
                        "035a1abdd2b0ad0756ec5e9ded5a5c0d05f84971"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseNotClockwise; trivial.",
                        "VernacExtend",
                        "ce19b391312e4ba8eba4049369c8f598f37b4679"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply (InFLine F' D').",
                        "VernacExtend",
                        "0be857cb24647b26549c0558ab1575441add34fb"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBAC; apply (CollinearTrans (LineB F' D') A (LineA F' D') G H5).",
                        "VernacExtend",
                        "2849b06ad2673bc2ddfb2f70729b8de511a540dd"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBCA; apply FLineIn; trivial.",
                        "VernacExtend",
                        "bf1978be09ee6d6a3e24772c9d6455b8201f76fb"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBAC; apply (CollinearTrans A E).",
                        "VernacExtend",
                        "a299728a591347cbccd72937f7d885c98d45fdda"
                    ]
                },
                {
                    "command": [
                        "intro; subst; elim (CollinearNotClockwiseABC (LineA F D) C E).",
                        "VernacExtend",
                        "eab4e2f99cc6c9ac4b87b83147cd7dd209978bd3"
                    ]
                },
                {
                    "command": [
                        "apply CollinearCAB; apply BetweenCollinear; trivial.",
                        "VernacExtend",
                        "e273ab155acb344f03c6a0bff521849b1b9e8c0e"
                    ]
                },
                {
                    "command": [
                        "assert (H10 := EquiOrientedRev _ _ _ (BetweenSym _ _ _ H4)).",
                        "VernacExtend",
                        "5c59aad84df3078b0edbd927598fd14ff41412ad"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseCAB; unfold Parallelogramm in *; intuition; canonize.",
                        "VernacExtend",
                        "db6d94588aec58a168a769790afdbf21b38df068"
                    ]
                },
                {
                    "command": [
                        "apply H10; autoClockwise.",
                        "VernacExtend",
                        "29706d109f26d6c40dc2cfef6242980d420a1f6e"
                    ]
                },
                {
                    "command": [
                        "autoCollinear.",
                        "VernacExtend",
                        "f9b5517305c4ea7b3088acc38c4b180fb95147f1"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsClockwiseParallelogramm _ _ _ _ E H H7) as (G, (H8, H9)).",
                        "VernacExtend",
                        "7969a0f212e8e4a2e2104ac841ae51aff4d0a80a"
                    ]
                },
                {
                    "command": [
                        "apply (TwoPointsSecantLines A G).",
                        "VernacExtend",
                        "2f5204eb50b9d1d19a36c3b8e05dfe0098fa53f3"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogramm in *; intuition.",
                        "VernacExtend",
                        "035a1abdd2b0ad0756ec5e9ded5a5c0d05f84971"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseNotClockwise; trivial.",
                        "VernacExtend",
                        "ce19b391312e4ba8eba4049369c8f598f37b4679"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply (InFLine F' D').",
                        "VernacExtend",
                        "0be857cb24647b26549c0558ab1575441add34fb"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBAC; apply (CollinearTrans (LineB F' D') A (LineA F' D') G H5).",
                        "VernacExtend",
                        "2849b06ad2673bc2ddfb2f70729b8de511a540dd"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBCA; apply FLineIn; trivial.",
                        "VernacExtend",
                        "bf1978be09ee6d6a3e24772c9d6455b8201f76fb"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBAC; apply (CollinearTrans A E).",
                        "VernacExtend",
                        "a299728a591347cbccd72937f7d885c98d45fdda"
                    ]
                },
                {
                    "command": [
                        "intro; subst; elim (CollinearNotClockwiseABC (LineA F D) E B).",
                        "VernacExtend",
                        "cb37f2a4ccf9f866939b279ceec08fe65c932bb6"
                    ]
                },
                {
                    "command": [
                        "apply CollinearCBA; apply BetweenCollinear; trivial.",
                        "VernacExtend",
                        "f626fd4e41c7c0042466883541bc76d5b0f7fa94"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogramm in *; intuition.",
                        "VernacExtend",
                        "035a1abdd2b0ad0756ec5e9ded5a5c0d05f84971"
                    ]
                },
                {
                    "command": [
                        "autoCollinear.",
                        "VernacExtend",
                        "f9b5517305c4ea7b3088acc38c4b180fb95147f1"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ParallelogrammSuperimposed",
            "line_nb": 447,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (Apart (LineA F D) (LineB F D) C (LineH F D)).",
                        "VernacExtend",
                        "126a54d355bb780c0627a72cadfbef055fb611db"
                    ]
                },
                {
                    "command": [
                        "decompose [or] (ThreeCases (LineA F D) C E).",
                        "VernacExtend",
                        "3173df3036d2d589c508d5d7d88b9e7fb7e52393"
                    ]
                },
                {
                    "command": [
                        "elim (SecantParallelogrammSecant C E (Collinear A B) F (Ruler A B (ParallelogrammDistinctAB _ _ _ _ H)) D H H1).",
                        "VernacExtend",
                        "d26bbdc6599f85257aebbff6e11dc5e7100a782e"
                    ]
                },
                {
                    "command": [
                        "intro; elim (ClockwiseNotCollinear _ _ _ H3).",
                        "VernacExtend",
                        "2be8402aeea4ed3c8d2dc876abcf3e6a736dd6b2"
                    ]
                },
                {
                    "command": [
                        "apply (CollinearTrans (LineA F D) (LineB F D) C E (LineH F D) (FLineIn F D C H1) (FLineIn F D E H4)).",
                        "VernacExtend",
                        "9a5f29b8af26079c2065bc185778014f60cff918"
                    ]
                },
                {
                    "command": [
                        "exact H0.",
                        "VernacExtend",
                        "3920fece303e3c4728f9cdc71daff99239237dbd"
                    ]
                },
                {
                    "command": [
                        "elim (SecantParallelogrammSecant C E (Collinear A B) F (Ruler A B (ParallelogrammDistinctAB _ _ _ _ H)) D H H1).",
                        "VernacExtend",
                        "d26bbdc6599f85257aebbff6e11dc5e7100a782e"
                    ]
                },
                {
                    "command": [
                        "intro; elim (ClockwiseNotCollinear _ _ _ H4); apply CollinearBAC.",
                        "VernacExtend",
                        "b6da1ee3da8ba07d29d0ac94ac6e85f7fc3ae27f"
                    ]
                },
                {
                    "command": [
                        "apply (CollinearTrans (LineA F D) (LineB F D) C E (LineH F D) (FLineIn F D C H1) (FLineIn F D E H3)).",
                        "VernacExtend",
                        "b12c28689c70573440bb1d8666c654fee0c3af18"
                    ]
                },
                {
                    "command": [
                        "exact H0.",
                        "VernacExtend",
                        "3920fece303e3c4728f9cdc71daff99239237dbd"
                    ]
                },
                {
                    "command": [
                        "apply LineAB; auto.",
                        "VernacExtend",
                        "6bf9e635c2908b60dac7d4f6eec092dbff95c442"
                    ]
                },
                {
                    "command": [
                        "apply (ParallelogrammDistinctCD _ _ _ _ H).",
                        "VernacExtend",
                        "39b2a0dd4458ff534e10d46ee9393320e64cc277"
                    ]
                },
                {
                    "command": [
                        "apply (InFLine F D E); apply (CollinearTrans (LineA F D) C (LineB F D) E H2 (CollinearACB _ _ _ (FLineIn F D C H1)) H4).",
                        "VernacExtend",
                        "3e82623fa89de980d149fa37a8e0832ffaf2f914"
                    ]
                },
                {
                    "command": [
                        "decompose [or] (ThreeCases (LineB F D) C E).",
                        "VernacExtend",
                        "94b2e343848e306cd8df1cf33452d030e51f7e39"
                    ]
                },
                {
                    "command": [
                        "elim (SecantParallelogrammSecant C E (Collinear A B) F (Ruler A B (ParallelogrammDistinctAB _ _ _ _ H)) D H H1).",
                        "VernacExtend",
                        "d26bbdc6599f85257aebbff6e11dc5e7100a782e"
                    ]
                },
                {
                    "command": [
                        "intro; elim (ClockwiseNotCollinear _ _ _ H3).",
                        "VernacExtend",
                        "2be8402aeea4ed3c8d2dc876abcf3e6a736dd6b2"
                    ]
                },
                {
                    "command": [
                        "apply (CollinearTrans (LineB F D) (LineA F D) C E (sym_not_eq (LineH F D)) (CollinearBAC _ _ _ (FLineIn F D C H1)) (CollinearBAC _ _ _ (FLineIn F D E H4))).",
                        "VernacExtend",
                        "a3c729388166cebbdc93ec0e8d6d3b4e16a1c127"
                    ]
                },
                {
                    "command": [
                        "exact H0.",
                        "VernacExtend",
                        "3920fece303e3c4728f9cdc71daff99239237dbd"
                    ]
                },
                {
                    "command": [
                        "elim (SecantParallelogrammSecant C E (Collinear A B) F (Ruler A B (ParallelogrammDistinctAB _ _ _ _ H)) D H H1).",
                        "VernacExtend",
                        "d26bbdc6599f85257aebbff6e11dc5e7100a782e"
                    ]
                },
                {
                    "command": [
                        "intro; elim (ClockwiseNotCollinear _ _ _ H4); apply CollinearBAC.",
                        "VernacExtend",
                        "b6da1ee3da8ba07d29d0ac94ac6e85f7fc3ae27f"
                    ]
                },
                {
                    "command": [
                        "apply (CollinearTrans (LineB F D) (LineA F D) C E (sym_not_eq (LineH F D)) (CollinearBAC _ _ _ (FLineIn F D C H1)) (CollinearBAC _ _ _ (FLineIn F D E H3))).",
                        "VernacExtend",
                        "804faa53faa039128fb943f5dc5e5c49ee37a8fd"
                    ]
                },
                {
                    "command": [
                        "exact H0.",
                        "VernacExtend",
                        "3920fece303e3c4728f9cdc71daff99239237dbd"
                    ]
                },
                {
                    "command": [
                        "apply LineAB; auto.",
                        "VernacExtend",
                        "6bf9e635c2908b60dac7d4f6eec092dbff95c442"
                    ]
                },
                {
                    "command": [
                        "apply (ParallelogrammDistinctCD _ _ _ _ H).",
                        "VernacExtend",
                        "39b2a0dd4458ff534e10d46ee9393320e64cc277"
                    ]
                },
                {
                    "command": [
                        "apply (InFLine F D E); apply CollinearBAC.",
                        "VernacExtend",
                        "b5fb8c6776a5c3ec354d7aa88d65c0997fe22d92"
                    ]
                },
                {
                    "command": [
                        "apply (CollinearTrans (LineB F D) C (LineA F D) E H2 (CollinearBCA _ _ _ (FLineIn F D C H1)) H4).",
                        "VernacExtend",
                        "c6e962135836e4bc4973a840063086c9b20f98f4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}