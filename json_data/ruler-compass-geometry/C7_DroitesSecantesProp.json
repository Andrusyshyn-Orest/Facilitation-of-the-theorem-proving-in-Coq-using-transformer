{
    "filename": "C7_DroitesSecantesProp.v",
    "coq_project": "ruler-compass-geometry",
    "vernac_cmds": [
        [
            "Require Export C6_Parallele_Prop.",
            "VernacRequire",
            "d13619e46fb36b535b7ca631fa177d9590ba68a7"
        ],
        [
            "Section SECANT_LINES_PROPERTIES.",
            "VernacBeginSection",
            "5852b6f297d1cfb978b6de0b017f0df16d8f23d0"
        ],
        [
            "Lemma StrictlyParallel : forall A B C D, EquiOriented A B C D -> ~Collinear A B C -> ~Collinear A B D.",
            "VernacStartTheoremProof",
            "d2360a190db88014e06a2128c55ab21e2de48a86"
        ],
        [
            "intros A B C D H Hn H0; elim Hn.",
            "VernacExtend",
            "83b2a2de01f12fe6b437fe9ae5cf91d16738ba42"
        ],
        [
            "exact (ParallelCollinearABC A B C D H H0).",
            "VernacExtend",
            "4b0ee9c8c0faec9ab5e2f4b401dd8ca3900a58d2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma NotClockwiseTwoCases : forall A B C : Point, ~Clockwise A B C -> Clockwise B A C \\/ Collinear A B C.",
            "VernacStartTheoremProof",
            "f4663b911d6866b70aa6543579f18dbe6d1b5a6e"
        ],
        [
            "intros; decompose [or] (FourCases A B C); intuition.",
            "VernacExtend",
            "37798d18f0798ed5be0dbca7ff31f26f75ba92a8"
        ],
        [
            "right; apply HalfLineCollinear; trivial.",
            "VernacExtend",
            "ec4cb9234d6ab931dc0105c5782666028ad17e99"
        ],
        [
            "right; apply CollinearBAC; apply HalfLineCollinear; trivial.",
            "VernacExtend",
            "8931264be3549cbcc8ee5c19bc2ccd278672cc53"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma FourPointsSecantLine : forall A B C D, Clockwise A B C -> ~Clockwise A B D -> ~EquiDirected A B C D.",
            "VernacStartTheoremProof",
            "b792b3f85df3f130b339b0cf5866d1167d90f7ee"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Hcd : C <> D).",
            "VernacExtend",
            "7f5207078708c78bbd6e0e7198ae8c89ffa739b7"
        ],
        [
            "intro; subst; elim H0; trivial.",
            "VernacExtend",
            "1ad314e9fdb372f353b7390ce94372e989422d47"
        ],
        [
            "generalizeChange.",
            "VernacExtend",
            "d3c977ebf7f2c5588433912c8eb25fd198cbcf67"
        ],
        [
            "elim (NotClockwiseABA C D); autoClockwise.",
            "VernacExtend",
            "5274b725f4bde895745736f5ae512a1197890a26"
        ],
        [
            "elim (NotClockwiseBAA C D); autoClockwise.",
            "VernacExtend",
            "3e21ff14d93e82b6beff99535243a6fa10a191c4"
        ],
        [
            "destruct (NotClockwiseTwoCases _ _ _ H0).",
            "VernacExtend",
            "8363d7a78c4d94c87c2f9b4412b2854967131a5f"
        ],
        [
            "elim (NotClockwiseBAA D C); auto.",
            "VernacExtend",
            "4861b0d50b886dc732c81eac2d3cff64541de7d4"
        ],
        [
            "elim (ClockwiseNotCollinear A B C H); apply CollinearBAC.",
            "VernacExtend",
            "b16110e00acb20586f991f763283cfd9d9e9a6da"
        ],
        [
            "apply (ParallelCollinearABC B A C D H2); autoCollinear.",
            "VernacExtend",
            "f0ef8a88504506deae6bb46bf80b44e60d2fd5df"
        ],
        [
            "destruct (NotClockwiseTwoCases _ _ _ H0).",
            "VernacExtend",
            "8363d7a78c4d94c87c2f9b4412b2854967131a5f"
        ],
        [
            "elim (NotClockwiseABA D C); auto.",
            "VernacExtend",
            "b9ba2876c4192e2b6a24803ab3d38e6728f5c670"
        ],
        [
            "elim (ClockwiseNotCollinear A B C H); apply CollinearBAC.",
            "VernacExtend",
            "b16110e00acb20586f991f763283cfd9d9e9a6da"
        ],
        [
            "apply (ParallelCollinearABD B A D C H1); autoCollinear.",
            "VernacExtend",
            "85b7a44bb65d80ca0ed206cfa587d4e9556fe949"
        ],
        [
            "destruct (NotClockwiseTwoCases _ _ _ H0).",
            "VernacExtend",
            "8363d7a78c4d94c87c2f9b4412b2854967131a5f"
        ],
        [
            "elim (NotClockwiseABA D C); auto.",
            "VernacExtend",
            "b9ba2876c4192e2b6a24803ab3d38e6728f5c670"
        ],
        [
            "elim (ClockwiseNotCollinear A B C H); apply CollinearBAC.",
            "VernacExtend",
            "b16110e00acb20586f991f763283cfd9d9e9a6da"
        ],
        [
            "apply (ParallelCollinearABD B A D C H3); autoCollinear.",
            "VernacExtend",
            "8d38174c0911c9d5236e935351fd5c97d5d17e89"
        ],
        [
            "elim (NotClockwiseBAA C D); autoClockwise.",
            "VernacExtend",
            "3e21ff14d93e82b6beff99535243a6fa10a191c4"
        ],
        [
            "destruct (NotClockwiseTwoCases _ _ _ H0).",
            "VernacExtend",
            "8363d7a78c4d94c87c2f9b4412b2854967131a5f"
        ],
        [
            "elim (NotClockwiseBAA D C); auto.",
            "VernacExtend",
            "4861b0d50b886dc732c81eac2d3cff64541de7d4"
        ],
        [
            "elim (ClockwiseNotCollinear A B C H); apply CollinearBAC.",
            "VernacExtend",
            "b16110e00acb20586f991f763283cfd9d9e9a6da"
        ],
        [
            "apply (ParallelCollinearABC B A C D H3); autoCollinear.",
            "VernacExtend",
            "504962f6e52b100811d1eaed559113a73e617478"
        ],
        [
            "elim (NotClockwiseABA C D); autoClockwise.",
            "VernacExtend",
            "5274b725f4bde895745736f5ae512a1197890a26"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma NotEquidirectedDistinctAB : forall A B C D, ~EquiDirected A B C D-> A<>B.",
            "VernacStartTheoremProof",
            "c33f6b3c8d3e0d3da391bee42a308d498531f3fb"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "elim H1; intros E H9.",
            "VernacExtend",
            "882d8f12340e94dc3734cfb4b865747b52203ff9"
        ],
        [
            "elim (ClockwiseDistinctAB A B E H9); trivial.",
            "VernacExtend",
            "db4b9ee45ef1b2c1698802a3d366587216dbfd0a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma NotEquidirectedDistinctCD : forall A B C D, ~EquiDirected A B C D-> C<>D.",
            "VernacStartTheoremProof",
            "7f03508421a84d78bd228a719077c6320a3bdaa3"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "elim H4; intros E H9.",
            "VernacExtend",
            "6f056750d7ff3b82ce7682d6b1d535ced3173dea"
        ],
        [
            "elim (ClockwiseDistinctAB C D E H9); trivial.",
            "VernacExtend",
            "20cd4395fe9b7e7ec18e992392bf2ded4efd7047"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma LinesIntersectionPoint : forall A B C D, ~EquiDirected A B C D-> {I : Point | Collinear A B I /\\ Collinear C D I}.",
            "VernacStartTheoremProof",
            "2396e45e4b4c74bb546cb583c99909318d8a7276"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "setLine A B (NotEquidirectedDistinctAB A B C D H) ipattern:(F1) ipattern:(L1).",
            "VernacExtend",
            "906ff628af3530d95ea4a17f016b8720149a6ad8"
        ],
        [
            "setLine C D (NotEquidirectedDistinctCD A B C D H) ipattern:(F2) ipattern:(L2).",
            "VernacExtend",
            "c11cb9af2c48931a1f4d301b8cfa11fbd1b39809"
        ],
        [
            "setLinterL F1 F2 L1 L2 ipattern:(J) ipattern:(H2) ipattern:(H3) ipattern:(H4).",
            "VernacExtend",
            "fe59e499b0ba88c0cbe2f81a20cc1c074694b9c8"
        ],
        [
            "unfold SecantLines , F1, F2, L1, L2 in |- *; simpl in |- *; trivial.",
            "VernacExtend",
            "b10e4146bf2e92a84a5d433cf713e09a30715566"
        ],
        [
            "exists J; intuition.",
            "VernacExtend",
            "f517ba6c12dc376e5fc4f3cfddc7bcebb5107d35"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma UniqueIntersectionLines : forall A B C D I J : Point, A <> B -> C <> D -> ~EquiDirected A B C D -> Collinear A B I -> Collinear A B J -> Collinear C D I -> Collinear C D J -> I = J.",
            "VernacStartTheoremProof",
            "e61384a454448c90e6350f551a8dc5c6c0cd3d24"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "setLine A B H ipattern:(F1) ipattern:(L1).",
            "VernacExtend",
            "1950a3eca58ed878cd096139e5ac69e1b6556133"
        ],
        [
            "setLine C D H0 ipattern:(F2) ipattern:(L2).",
            "VernacExtend",
            "641de7582558237379690eacef1078d5e93c8cd5"
        ],
        [
            "setLinterL F1 F2 L1 L2 ipattern:(E) ipattern:(H6) ipattern:(H7) ipattern:(H8).",
            "VernacExtend",
            "7cc076131794e6f3ee1abad29a4bfb1650454cd7"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "unfold Unicity in *.",
            "VernacExtend",
            "418bc009212f583929b80574a716004dd0ac15c9"
        ],
        [
            "rewrite <- (H8 I).",
            "VernacExtend",
            "426605553133b3b99b1af58fb03a21622b92140f"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma FourPointsIntersectionPoint : forall A B C D, Clockwise A B C -> Clockwise B A D -> {I : Point | Collinear A B I /\\ Between C I D}.",
            "VernacStartTheoremProof",
            "5a0e25b76df60521682395a2bf58c2e68d2d2745"
        ],
        [
            "intros A B C D H H0; destruct (LinesIntersectionPoint A B C D) as (E, (H1, H2)).",
            "VernacExtend",
            "ebd5124b33e8d04950b62074d03fce31b791428e"
        ],
        [
            "apply FourPointsSecantLine; autoClockwise.",
            "VernacExtend",
            "15f9a155c15dee7ae572a97646eae45f9c900e04"
        ],
        [
            "exists E; canonize.",
            "VernacExtend",
            "69ce5c2a5c57fdeafe3f624c55d9f9ea53ef0970"
        ],
        [
            "subst; autoClockwise.",
            "VernacExtend",
            "e0971558a5fbec2bfd70c6fa8e581db97f9029c4"
        ],
        [
            "destruct (ExclusiveCollinear E D C).",
            "VernacExtend",
            "d8fc8961220d5fd0582020d784e1f28ba3fbf960"
        ],
        [
            "apply (CollinearClockwiseDistinct B A E D); canonize.",
            "VernacExtend",
            "2d2acc346d7d6fc3b89f51b5cd09e5fdb615b0b1"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "apply CollinearCAB; autoClockwise.",
            "VernacExtend",
            "32ebae703a9c0c9ebd6028a568ee39d5e00c1bb5"
        ],
        [
            "destruct (CollinearHalfLine A B E).",
            "VernacExtend",
            "346b912618319acfc973fbf8f27b90fd8019570c"
        ],
        [
            "autoClockwise.",
            "VernacExtend",
            "9409e85b86446941015e1da6ca2353051468a0c2"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "elim (ClockwiseNotClockwise C E A).",
            "VernacExtend",
            "45e511b49e3632bed782a43c9bd7a7d63038405f"
        ],
        [
            "generalizeChangeSense.",
            "VernacExtend",
            "be975c77c59224ac5239b36f960f98e48421bb54"
        ],
        [
            "apply H7; apply ClockwiseCAB; auto.",
            "VernacExtend",
            "c530a14e72220044b25f456940783ff70f4b7ecd"
        ],
        [
            "apply ClockwiseBCA; auto.",
            "VernacExtend",
            "bfbab48dd4088b57f455dbfbdf61622803397b50"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "elim (ClockwiseNotClockwise E C B).",
            "VernacExtend",
            "1ba1b366a816a962096aa0b105972ad23a5e001a"
        ],
        [
            "apply H6; apply ClockwiseBCA; auto.",
            "VernacExtend",
            "a32500e98112e70dad581162f57f1613ec2aa446"
        ],
        [
            "apply ClockwiseCAB; generalizeChange.",
            "VernacExtend",
            "7c0fa91ae9c451a13c2760c7c2e538561f7f7ac3"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma PaschABC : forall A B C M N, Clockwise A B C -> Between A M B -> ~Collinear A M N -> ~Collinear B M N -> ~Collinear C M N -> (exists P : Point, Collinear M N P /\\ Between A P C) \\/ (exists P : Point, Collinear M N P /\\ Between B P C).",
            "VernacStartTheoremProof",
            "e6e3e5649a230ec28eec531c4e2bbcc7899d81c0"
        ],
        [
            "intros A B C M N H (H0, H1) H2 H3 H4.",
            "VernacExtend",
            "2d5167a45a671c3669797e068a13ecd58e7c57f8"
        ],
        [
            "decompose [or] (ThreeCases A M N).",
            "VernacExtend",
            "b612e8076607ba4c039d017ffda51eb5a2be8348"
        ],
        [
            "clear H2; decompose [or] (ThreeCases B M N).",
            "VernacExtend",
            "8b0329e3c9a004bd8d62b6f6a989dcc396ec1c79"
        ],
        [
            "clear H3 H4; elim (ClockwiseNotClockwise B M N); canonize.",
            "VernacExtend",
            "b58d01f2ce399403b91730158733feb5337915cb"
        ],
        [
            "clear H3; decompose [or] (ThreeCases C M N).",
            "VernacExtend",
            "0d2093fe16725af7046c82562cda6d9a63edffe2"
        ],
        [
            "clear H4; destruct (FourPointsIntersectionPoint N M B C) as (P, (H3, H4)).",
            "VernacExtend",
            "01267d0762a6f8b712c5813def3eb2b3cc134053"
        ],
        [
            "autoClockwise.",
            "VernacExtend",
            "9409e85b86446941015e1da6ca2353051468a0c2"
        ],
        [
            "autoClockwise.",
            "VernacExtend",
            "9409e85b86446941015e1da6ca2353051468a0c2"
        ],
        [
            "right; exists P; canonize.",
            "VernacExtend",
            "7e27ebbed439bc3a5b880eb71eb219aa5699a6f8"
        ],
        [
            "clear H4; destruct (FourPointsIntersectionPoint M N A C) as (P, (H2, H4)).",
            "VernacExtend",
            "4e48ab62352c9d6fac8078033c89679a6d350ccc"
        ],
        [
            "autoClockwise.",
            "VernacExtend",
            "9409e85b86446941015e1da6ca2353051468a0c2"
        ],
        [
            "autoClockwise.",
            "VernacExtend",
            "9409e85b86446941015e1da6ca2353051468a0c2"
        ],
        [
            "left; exists P; canonize.",
            "VernacExtend",
            "1df49c84de5e9eb9a6a1f3384c697270e099d05a"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "clear H2; decompose [or] (ThreeCases B M N).",
            "VernacExtend",
            "8b0329e3c9a004bd8d62b6f6a989dcc396ec1c79"
        ],
        [
            "clear H3; decompose [or] (ThreeCases C M N).",
            "VernacExtend",
            "0d2093fe16725af7046c82562cda6d9a63edffe2"
        ],
        [
            "clear H4; destruct (FourPointsIntersectionPoint N M A C) as (P, (H5, H4)).",
            "VernacExtend",
            "3e44eb7e695552859b21b388b795d53b255fbc2f"
        ],
        [
            "autoClockwise.",
            "VernacExtend",
            "9409e85b86446941015e1da6ca2353051468a0c2"
        ],
        [
            "autoClockwise.",
            "VernacExtend",
            "9409e85b86446941015e1da6ca2353051468a0c2"
        ],
        [
            "left; exists P; canonize.",
            "VernacExtend",
            "1df49c84de5e9eb9a6a1f3384c697270e099d05a"
        ],
        [
            "clear H4; destruct (FourPointsIntersectionPoint M N B C) as (P, (H3, H4)).",
            "VernacExtend",
            "52b64503f77880235df268d44ef7a13fdc540afb"
        ],
        [
            "autoClockwise.",
            "VernacExtend",
            "9409e85b86446941015e1da6ca2353051468a0c2"
        ],
        [
            "autoClockwise.",
            "VernacExtend",
            "9409e85b86446941015e1da6ca2353051468a0c2"
        ],
        [
            "right; exists P; canonize.",
            "VernacExtend",
            "7e27ebbed439bc3a5b880eb71eb219aa5699a6f8"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "clear H3 H4; assert (EquiOriented M B A M).",
            "VernacExtend",
            "e311b83803b5c200ab540f6572ec7cd241aa96cd"
        ],
        [
            "apply EquiOrientedRev; canonize.",
            "VernacExtend",
            "2bf515a29588d9f6f07fb10a7cdaed1f75dbe772"
        ],
        [
            "elim (ClockwiseNotClockwise M A N); canonize.",
            "VernacExtend",
            "8344bb35e80c5a505e39901a877e1e54f0dd317a"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End SECANT_LINES_PROPERTIES.",
            "VernacEndSegment",
            "136dd5aac847332091e8ccc3ae315e72954c8520"
        ]
    ],
    "proofs": [
        {
            "name": "StrictlyParallel",
            "line_nb": 2,
            "steps": [
                {
                    "command": [
                        "intros A B C D H Hn H0; elim Hn.",
                        "VernacExtend",
                        "83b2a2de01f12fe6b437fe9ae5cf91d16738ba42"
                    ]
                },
                {
                    "command": [
                        "exact (ParallelCollinearABC A B C D H H0).",
                        "VernacExtend",
                        "4b0ee9c8c0faec9ab5e2f4b401dd8ca3900a58d2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NotClockwiseTwoCases",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros; decompose [or] (FourCases A B C); intuition.",
                        "VernacExtend",
                        "37798d18f0798ed5be0dbca7ff31f26f75ba92a8"
                    ]
                },
                {
                    "command": [
                        "right; apply HalfLineCollinear; trivial.",
                        "VernacExtend",
                        "ec4cb9234d6ab931dc0105c5782666028ad17e99"
                    ]
                },
                {
                    "command": [
                        "right; apply CollinearBAC; apply HalfLineCollinear; trivial.",
                        "VernacExtend",
                        "8931264be3549cbcc8ee5c19bc2ccd278672cc53"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FourPointsSecantLine",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Hcd : C <> D).",
                        "VernacExtend",
                        "7f5207078708c78bbd6e0e7198ae8c89ffa739b7"
                    ]
                },
                {
                    "command": [
                        "intro; subst; elim H0; trivial.",
                        "VernacExtend",
                        "1ad314e9fdb372f353b7390ce94372e989422d47"
                    ]
                },
                {
                    "command": [
                        "generalizeChange.",
                        "VernacExtend",
                        "d3c977ebf7f2c5588433912c8eb25fd198cbcf67"
                    ]
                },
                {
                    "command": [
                        "elim (NotClockwiseABA C D); autoClockwise.",
                        "VernacExtend",
                        "5274b725f4bde895745736f5ae512a1197890a26"
                    ]
                },
                {
                    "command": [
                        "elim (NotClockwiseBAA C D); autoClockwise.",
                        "VernacExtend",
                        "3e21ff14d93e82b6beff99535243a6fa10a191c4"
                    ]
                },
                {
                    "command": [
                        "destruct (NotClockwiseTwoCases _ _ _ H0).",
                        "VernacExtend",
                        "8363d7a78c4d94c87c2f9b4412b2854967131a5f"
                    ]
                },
                {
                    "command": [
                        "elim (NotClockwiseBAA D C); auto.",
                        "VernacExtend",
                        "4861b0d50b886dc732c81eac2d3cff64541de7d4"
                    ]
                },
                {
                    "command": [
                        "elim (ClockwiseNotCollinear A B C H); apply CollinearBAC.",
                        "VernacExtend",
                        "b16110e00acb20586f991f763283cfd9d9e9a6da"
                    ]
                },
                {
                    "command": [
                        "apply (ParallelCollinearABC B A C D H2); autoCollinear.",
                        "VernacExtend",
                        "f0ef8a88504506deae6bb46bf80b44e60d2fd5df"
                    ]
                },
                {
                    "command": [
                        "destruct (NotClockwiseTwoCases _ _ _ H0).",
                        "VernacExtend",
                        "8363d7a78c4d94c87c2f9b4412b2854967131a5f"
                    ]
                },
                {
                    "command": [
                        "elim (NotClockwiseABA D C); auto.",
                        "VernacExtend",
                        "b9ba2876c4192e2b6a24803ab3d38e6728f5c670"
                    ]
                },
                {
                    "command": [
                        "elim (ClockwiseNotCollinear A B C H); apply CollinearBAC.",
                        "VernacExtend",
                        "b16110e00acb20586f991f763283cfd9d9e9a6da"
                    ]
                },
                {
                    "command": [
                        "apply (ParallelCollinearABD B A D C H1); autoCollinear.",
                        "VernacExtend",
                        "85b7a44bb65d80ca0ed206cfa587d4e9556fe949"
                    ]
                },
                {
                    "command": [
                        "destruct (NotClockwiseTwoCases _ _ _ H0).",
                        "VernacExtend",
                        "8363d7a78c4d94c87c2f9b4412b2854967131a5f"
                    ]
                },
                {
                    "command": [
                        "elim (NotClockwiseABA D C); auto.",
                        "VernacExtend",
                        "b9ba2876c4192e2b6a24803ab3d38e6728f5c670"
                    ]
                },
                {
                    "command": [
                        "elim (ClockwiseNotCollinear A B C H); apply CollinearBAC.",
                        "VernacExtend",
                        "b16110e00acb20586f991f763283cfd9d9e9a6da"
                    ]
                },
                {
                    "command": [
                        "apply (ParallelCollinearABD B A D C H3); autoCollinear.",
                        "VernacExtend",
                        "8d38174c0911c9d5236e935351fd5c97d5d17e89"
                    ]
                },
                {
                    "command": [
                        "elim (NotClockwiseBAA C D); autoClockwise.",
                        "VernacExtend",
                        "3e21ff14d93e82b6beff99535243a6fa10a191c4"
                    ]
                },
                {
                    "command": [
                        "destruct (NotClockwiseTwoCases _ _ _ H0).",
                        "VernacExtend",
                        "8363d7a78c4d94c87c2f9b4412b2854967131a5f"
                    ]
                },
                {
                    "command": [
                        "elim (NotClockwiseBAA D C); auto.",
                        "VernacExtend",
                        "4861b0d50b886dc732c81eac2d3cff64541de7d4"
                    ]
                },
                {
                    "command": [
                        "elim (ClockwiseNotCollinear A B C H); apply CollinearBAC.",
                        "VernacExtend",
                        "b16110e00acb20586f991f763283cfd9d9e9a6da"
                    ]
                },
                {
                    "command": [
                        "apply (ParallelCollinearABC B A C D H3); autoCollinear.",
                        "VernacExtend",
                        "504962f6e52b100811d1eaed559113a73e617478"
                    ]
                },
                {
                    "command": [
                        "elim (NotClockwiseABA C D); autoClockwise.",
                        "VernacExtend",
                        "5274b725f4bde895745736f5ae512a1197890a26"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NotEquidirectedDistinctAB",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "elim H1; intros E H9.",
                        "VernacExtend",
                        "882d8f12340e94dc3734cfb4b865747b52203ff9"
                    ]
                },
                {
                    "command": [
                        "elim (ClockwiseDistinctAB A B E H9); trivial.",
                        "VernacExtend",
                        "db4b9ee45ef1b2c1698802a3d366587216dbfd0a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NotEquidirectedDistinctCD",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "elim H4; intros E H9.",
                        "VernacExtend",
                        "6f056750d7ff3b82ce7682d6b1d535ced3173dea"
                    ]
                },
                {
                    "command": [
                        "elim (ClockwiseDistinctAB C D E H9); trivial.",
                        "VernacExtend",
                        "20cd4395fe9b7e7ec18e992392bf2ded4efd7047"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LinesIntersectionPoint",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "setLine A B (NotEquidirectedDistinctAB A B C D H) ipattern:(F1) ipattern:(L1).",
                        "VernacExtend",
                        "906ff628af3530d95ea4a17f016b8720149a6ad8"
                    ]
                },
                {
                    "command": [
                        "setLine C D (NotEquidirectedDistinctCD A B C D H) ipattern:(F2) ipattern:(L2).",
                        "VernacExtend",
                        "c11cb9af2c48931a1f4d301b8cfa11fbd1b39809"
                    ]
                },
                {
                    "command": [
                        "setLinterL F1 F2 L1 L2 ipattern:(J) ipattern:(H2) ipattern:(H3) ipattern:(H4).",
                        "VernacExtend",
                        "fe59e499b0ba88c0cbe2f81a20cc1c074694b9c8"
                    ]
                },
                {
                    "command": [
                        "unfold SecantLines , F1, F2, L1, L2 in |- *; simpl in |- *; trivial.",
                        "VernacExtend",
                        "b10e4146bf2e92a84a5d433cf713e09a30715566"
                    ]
                },
                {
                    "command": [
                        "exists J; intuition.",
                        "VernacExtend",
                        "f517ba6c12dc376e5fc4f3cfddc7bcebb5107d35"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "UniqueIntersectionLines",
            "line_nb": 55,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "setLine A B H ipattern:(F1) ipattern:(L1).",
                        "VernacExtend",
                        "1950a3eca58ed878cd096139e5ac69e1b6556133"
                    ]
                },
                {
                    "command": [
                        "setLine C D H0 ipattern:(F2) ipattern:(L2).",
                        "VernacExtend",
                        "641de7582558237379690eacef1078d5e93c8cd5"
                    ]
                },
                {
                    "command": [
                        "setLinterL F1 F2 L1 L2 ipattern:(E) ipattern:(H6) ipattern:(H7) ipattern:(H8).",
                        "VernacExtend",
                        "7cc076131794e6f3ee1abad29a4bfb1650454cd7"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "unfold Unicity in *.",
                        "VernacExtend",
                        "418bc009212f583929b80574a716004dd0ac15c9"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (H8 I).",
                        "VernacExtend",
                        "426605553133b3b99b1af58fb03a21622b92140f"
                    ]
                },
                {
                    "command": [
                        "apply H8.",
                        "VernacExtend",
                        "2014720df0411c2963f20792fe424080d05f44aa"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FourPointsIntersectionPoint",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "intros A B C D H H0; destruct (LinesIntersectionPoint A B C D) as (E, (H1, H2)).",
                        "VernacExtend",
                        "ebd5124b33e8d04950b62074d03fce31b791428e"
                    ]
                },
                {
                    "command": [
                        "apply FourPointsSecantLine; autoClockwise.",
                        "VernacExtend",
                        "15f9a155c15dee7ae572a97646eae45f9c900e04"
                    ]
                },
                {
                    "command": [
                        "exists E; canonize.",
                        "VernacExtend",
                        "69ce5c2a5c57fdeafe3f624c55d9f9ea53ef0970"
                    ]
                },
                {
                    "command": [
                        "subst; autoClockwise.",
                        "VernacExtend",
                        "e0971558a5fbec2bfd70c6fa8e581db97f9029c4"
                    ]
                },
                {
                    "command": [
                        "destruct (ExclusiveCollinear E D C).",
                        "VernacExtend",
                        "d8fc8961220d5fd0582020d784e1f28ba3fbf960"
                    ]
                },
                {
                    "command": [
                        "apply (CollinearClockwiseDistinct B A E D); canonize.",
                        "VernacExtend",
                        "2d2acc346d7d6fc3b89f51b5cd09e5fdb615b0b1"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "apply CollinearCAB; autoClockwise.",
                        "VernacExtend",
                        "32ebae703a9c0c9ebd6028a568ee39d5e00c1bb5"
                    ]
                },
                {
                    "command": [
                        "destruct (CollinearHalfLine A B E).",
                        "VernacExtend",
                        "346b912618319acfc973fbf8f27b90fd8019570c"
                    ]
                },
                {
                    "command": [
                        "autoClockwise.",
                        "VernacExtend",
                        "9409e85b86446941015e1da6ca2353051468a0c2"
                    ]
                },
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "elim (ClockwiseNotClockwise C E A).",
                        "VernacExtend",
                        "45e511b49e3632bed782a43c9bd7a7d63038405f"
                    ]
                },
                {
                    "command": [
                        "generalizeChangeSense.",
                        "VernacExtend",
                        "be975c77c59224ac5239b36f960f98e48421bb54"
                    ]
                },
                {
                    "command": [
                        "apply H7; apply ClockwiseCAB; auto.",
                        "VernacExtend",
                        "c530a14e72220044b25f456940783ff70f4b7ecd"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseBCA; auto.",
                        "VernacExtend",
                        "bfbab48dd4088b57f455dbfbdf61622803397b50"
                    ]
                },
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "elim (ClockwiseNotClockwise E C B).",
                        "VernacExtend",
                        "1ba1b366a816a962096aa0b105972ad23a5e001a"
                    ]
                },
                {
                    "command": [
                        "apply H6; apply ClockwiseBCA; auto.",
                        "VernacExtend",
                        "a32500e98112e70dad581162f57f1613ec2aa446"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseCAB; generalizeChange.",
                        "VernacExtend",
                        "7c0fa91ae9c451a13c2760c7c2e538561f7f7ac3"
                    ]
                },
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PaschABC",
            "line_nb": 89,
            "steps": [
                {
                    "command": [
                        "intros A B C M N H (H0, H1) H2 H3 H4.",
                        "VernacExtend",
                        "2d5167a45a671c3669797e068a13ecd58e7c57f8"
                    ]
                },
                {
                    "command": [
                        "decompose [or] (ThreeCases A M N).",
                        "VernacExtend",
                        "b612e8076607ba4c039d017ffda51eb5a2be8348"
                    ]
                },
                {
                    "command": [
                        "clear H2; decompose [or] (ThreeCases B M N).",
                        "VernacExtend",
                        "8b0329e3c9a004bd8d62b6f6a989dcc396ec1c79"
                    ]
                },
                {
                    "command": [
                        "clear H3 H4; elim (ClockwiseNotClockwise B M N); canonize.",
                        "VernacExtend",
                        "b58d01f2ce399403b91730158733feb5337915cb"
                    ]
                },
                {
                    "command": [
                        "clear H3; decompose [or] (ThreeCases C M N).",
                        "VernacExtend",
                        "0d2093fe16725af7046c82562cda6d9a63edffe2"
                    ]
                },
                {
                    "command": [
                        "clear H4; destruct (FourPointsIntersectionPoint N M B C) as (P, (H3, H4)).",
                        "VernacExtend",
                        "01267d0762a6f8b712c5813def3eb2b3cc134053"
                    ]
                },
                {
                    "command": [
                        "autoClockwise.",
                        "VernacExtend",
                        "9409e85b86446941015e1da6ca2353051468a0c2"
                    ]
                },
                {
                    "command": [
                        "autoClockwise.",
                        "VernacExtend",
                        "9409e85b86446941015e1da6ca2353051468a0c2"
                    ]
                },
                {
                    "command": [
                        "right; exists P; canonize.",
                        "VernacExtend",
                        "7e27ebbed439bc3a5b880eb71eb219aa5699a6f8"
                    ]
                },
                {
                    "command": [
                        "clear H4; destruct (FourPointsIntersectionPoint M N A C) as (P, (H2, H4)).",
                        "VernacExtend",
                        "4e48ab62352c9d6fac8078033c89679a6d350ccc"
                    ]
                },
                {
                    "command": [
                        "autoClockwise.",
                        "VernacExtend",
                        "9409e85b86446941015e1da6ca2353051468a0c2"
                    ]
                },
                {
                    "command": [
                        "autoClockwise.",
                        "VernacExtend",
                        "9409e85b86446941015e1da6ca2353051468a0c2"
                    ]
                },
                {
                    "command": [
                        "left; exists P; canonize.",
                        "VernacExtend",
                        "1df49c84de5e9eb9a6a1f3384c697270e099d05a"
                    ]
                },
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "clear H2; decompose [or] (ThreeCases B M N).",
                        "VernacExtend",
                        "8b0329e3c9a004bd8d62b6f6a989dcc396ec1c79"
                    ]
                },
                {
                    "command": [
                        "clear H3; decompose [or] (ThreeCases C M N).",
                        "VernacExtend",
                        "0d2093fe16725af7046c82562cda6d9a63edffe2"
                    ]
                },
                {
                    "command": [
                        "clear H4; destruct (FourPointsIntersectionPoint N M A C) as (P, (H5, H4)).",
                        "VernacExtend",
                        "3e44eb7e695552859b21b388b795d53b255fbc2f"
                    ]
                },
                {
                    "command": [
                        "autoClockwise.",
                        "VernacExtend",
                        "9409e85b86446941015e1da6ca2353051468a0c2"
                    ]
                },
                {
                    "command": [
                        "autoClockwise.",
                        "VernacExtend",
                        "9409e85b86446941015e1da6ca2353051468a0c2"
                    ]
                },
                {
                    "command": [
                        "left; exists P; canonize.",
                        "VernacExtend",
                        "1df49c84de5e9eb9a6a1f3384c697270e099d05a"
                    ]
                },
                {
                    "command": [
                        "clear H4; destruct (FourPointsIntersectionPoint M N B C) as (P, (H3, H4)).",
                        "VernacExtend",
                        "52b64503f77880235df268d44ef7a13fdc540afb"
                    ]
                },
                {
                    "command": [
                        "autoClockwise.",
                        "VernacExtend",
                        "9409e85b86446941015e1da6ca2353051468a0c2"
                    ]
                },
                {
                    "command": [
                        "autoClockwise.",
                        "VernacExtend",
                        "9409e85b86446941015e1da6ca2353051468a0c2"
                    ]
                },
                {
                    "command": [
                        "right; exists P; canonize.",
                        "VernacExtend",
                        "7e27ebbed439bc3a5b880eb71eb219aa5699a6f8"
                    ]
                },
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "clear H3 H4; assert (EquiOriented M B A M).",
                        "VernacExtend",
                        "e311b83803b5c200ab540f6572ec7cd241aa96cd"
                    ]
                },
                {
                    "command": [
                        "apply EquiOrientedRev; canonize.",
                        "VernacExtend",
                        "2bf515a29588d9f6f07fb10a7cdaed1f75dbe772"
                    ]
                },
                {
                    "command": [
                        "elim (ClockwiseNotClockwise M A N); canonize.",
                        "VernacExtend",
                        "8344bb35e80c5a505e39901a877e1e54f0dd317a"
                    ]
                },
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}