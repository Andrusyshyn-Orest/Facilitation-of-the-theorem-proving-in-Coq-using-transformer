{
    "filename": "B11_Angle_prop.v",
    "coq_project": "ruler-compass-geometry",
    "vernac_cmds": [
        [
            "Require Export B10_Longueur_Prop.",
            "VernacRequire",
            "18b6b37cea979a45f5e1aa8d666bc9bbad2356a4"
        ],
        [
            "Section ANGLE_PROPERTIES.",
            "VernacBeginSection",
            "1ffd16ac0691ef05643aece84f3466f204850a5b"
        ],
        [
            "Lemma AngleSym : forall A B C : Point, A <> B -> A <> C -> Angle B A C = Angle C A B.",
            "VernacStartTheoremProof",
            "e25824099088c1b90f040eaa99c69d1f8aa76259"
        ],
        [
            "intros; apply CongruentItself; canonize.",
            "VernacExtend",
            "1eb51fbb834553110723c1cf17118ad03ee06db8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma HalfLineAngleB : forall A B C D : Point, A <> B -> A <> C -> HalfLine A B D -> Angle B A C = Angle D A C.",
            "VernacStartTheoremProof",
            "e61d4a39401450778aec4d50f2e64e3171d215c8"
        ],
        [
            "intros; rewrite AngleSym; auto.",
            "VernacExtend",
            "e81f54db2535ec165f349fcfdd2a4fa2a19fa384"
        ],
        [
            "apply CongruentItself; canonize.",
            "VernacExtend",
            "8cdc66a41af6b886c7aa2c98d5f61b5fff5f8585"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma HalfLineAngleC : forall A B C D : Point, A <> B -> A <> C -> HalfLine A C D -> Angle B A C = Angle B A D.",
            "VernacStartTheoremProof",
            "13b109826d4cd6968e8998af7bfc82a4405d9c3b"
        ],
        [
            "intros; rewrite AngleSym; auto.",
            "VernacExtend",
            "e81f54db2535ec165f349fcfdd2a4fa2a19fa384"
        ],
        [
            "apply CongruentItself; canonize.",
            "VernacExtend",
            "8cdc66a41af6b886c7aa2c98d5f61b5fff5f8585"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma HalfLineAngleBC : forall A B C D E : Point, A <> B -> A <> C -> HalfLine A B D -> HalfLine A C E -> Angle B A C = Angle D A E.",
            "VernacStartTheoremProof",
            "c45c37bc3b679a56817dba1f7f9739691a5cffed"
        ],
        [
            "intros; rewrite AngleSym; auto.",
            "VernacExtend",
            "e81f54db2535ec165f349fcfdd2a4fa2a19fa384"
        ],
        [
            "apply CongruentItself; canonize.",
            "VernacExtend",
            "8cdc66a41af6b886c7aa2c98d5f61b5fff5f8585"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma BetweenAngleBC : forall A B C D E : Point, Between A B D -> Between A C E -> Angle B A C = Angle D A E.",
            "VernacStartTheoremProof",
            "6d225440f65c34ed1f61ef15dddafdf642de5e2b"
        ],
        [
            "intros; apply HalfLineAngleBC.",
            "VernacExtend",
            "7343a77ebe2838ba8b82cfa40aa8aa2d2f0da1ee"
        ],
        [
            "apply (BetweenDistinctAB _ _ _ H).",
            "VernacExtend",
            "f773d7baaf749d215d1b19a5a3d6cd7dd5d871f3"
        ],
        [
            "apply (BetweenDistinctAB _ _ _ H0).",
            "VernacExtend",
            "b5746c70ec86489011d60e17782270c8e3313a51"
        ],
        [
            "apply (BetweenHalfLine _ _ _ H).",
            "VernacExtend",
            "e6cfc8262fc3f61a4b17b305958aeaf4552a020c"
        ],
        [
            "apply (BetweenHalfLine _ _ _ H0).",
            "VernacExtend",
            "e6eab7693941cc777cd0f909db91153891476bc0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma BetweenAngleC : forall A B C D : Point, A <> B -> Between A C D -> Angle B A C = Angle B A D.",
            "VernacStartTheoremProof",
            "3217c1f97f689150955d9b01808638f99361a362"
        ],
        [
            "intros; apply HalfLineAngleC.",
            "VernacExtend",
            "338748f5367ef9db80f7f938b203644470fb2825"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply (BetweenDistinctAB _ _ _ H0).",
            "VernacExtend",
            "b5746c70ec86489011d60e17782270c8e3313a51"
        ],
        [
            "apply (BetweenHalfLine _ _ _ H0).",
            "VernacExtend",
            "e6eab7693941cc777cd0f909db91153891476bc0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma BetweenAngleB : forall A B C D : Point, A <> C -> Between A B D -> Angle B A C = Angle D A C.",
            "VernacStartTheoremProof",
            "b8db0165944703e666f7d1577e29a6f13c24a7b1"
        ],
        [
            "intros; apply HalfLineAngleB.",
            "VernacExtend",
            "b6b16d82f628a97bf287ae9127e28dffe9da62b0"
        ],
        [
            "apply (BetweenDistinctAB _ _ _ H0).",
            "VernacExtend",
            "b5746c70ec86489011d60e17782270c8e3313a51"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply (BetweenHalfLine _ _ _ H0).",
            "VernacExtend",
            "e6eab7693941cc777cd0f909db91153891476bc0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma SASEqualBD : forall A B C D : Point, Clockwise A B C -> Clockwise A D C -> Distance A B = Distance A D -> Angle B A C = Angle D A C -> B = D.",
            "VernacStartTheoremProof",
            "651655368d3ab3d11f84590e8951ba50b2f47616"
        ],
        [
            "intros; apply (SSSEqualBD A B C D); auto.",
            "VernacExtend",
            "43bd96bad8c99a28c2d189d0157c986ccf5d0eb5"
        ],
        [
            "apply (CongruentSAS A B C A D C); auto.",
            "VernacExtend",
            "bcd64455187199a557d2865ada0a7268e2260f49"
        ],
        [
            "exact (ClockwiseDistinctAB A B C H).",
            "VernacExtend",
            "da4e1a429cb145a9f4518b50c1342c4c3c929bc8"
        ],
        [
            "exact (sym_not_eq (ClockwiseDistinctCA A B C H)).",
            "VernacExtend",
            "2ac6d24193ee38f85b530b3bd44fa467bd029a50"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma SASEqualCD : forall A B C D : Point, Clockwise A B C -> Clockwise A B D -> Distance A C = Distance A D -> Angle B A C = Angle B A D -> C = D.",
            "VernacStartTheoremProof",
            "23c3b43b9b2698a02a7c229f883a3d6473f8606c"
        ],
        [
            "intros; apply (SSSEqualCD A B C D); auto.",
            "VernacExtend",
            "eee3ab863b0deaefbea09ffb9b266adfda1e7ef4"
        ],
        [
            "apply (CongruentSAS A B C A B D); auto.",
            "VernacExtend",
            "9c465c01ee5afcaa0c7990b7fbdc0c54a6820ad6"
        ],
        [
            "exact (ClockwiseDistinctAB A B C H).",
            "VernacExtend",
            "da4e1a429cb145a9f4518b50c1342c4c3c929bc8"
        ],
        [
            "exact (sym_not_eq (ClockwiseDistinctCA A B C H)).",
            "VernacExtend",
            "2ac6d24193ee38f85b530b3bd44fa467bd029a50"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma AngleBHalfLine : forall A B C D : Point, Clockwise A B C -> Clockwise A D C -> Angle B A C = Angle D A C -> HalfLine A B D.",
            "VernacStartTheoremProof",
            "df2b46ea79cf8c9ce64bc13c9fe46469c96d1657"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Hab := ClockwiseDistinctAB A B C H).",
            "VernacExtend",
            "2e5faffe75124be03784e6faee4da98c37ef281e"
        ],
        [
            "assert (Had := ClockwiseDistinctAB A D C H0).",
            "VernacExtend",
            "4c1f4ed010b825b2c93b5a520eb6b61ace67f101"
        ],
        [
            "destruct (ExistsHalfLineEquidistant A B A D Hab Had) as (E, (H2, H3)).",
            "VernacExtend",
            "5e82d58870c3341c3214560c58f81bc560734a65"
        ],
        [
            "rewrite (SASEqualBD A D C E H0).",
            "VernacExtend",
            "daabf4e78bb9fd7ab303afedc0bb4a9de62e9420"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite <- H1; apply HalfLineAngleB; auto.",
            "VernacExtend",
            "1a91f94f5d6c13a7d3c9767466020cfe7a82cf26"
        ],
        [
            "exact (sym_not_eq (ClockwiseDistinctCA A B C H)).",
            "VernacExtend",
            "2ac6d24193ee38f85b530b3bd44fa467bd029a50"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma AngleCHalfLine : forall A B C D : Point, Clockwise A B C -> Clockwise A B D -> Angle B A C = Angle B A D -> HalfLine A C D.",
            "VernacStartTheoremProof",
            "73bdeb6eb464ba7554d043426c8d1abaee6c09f7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Hac := sym_not_eq (ClockwiseDistinctCA A B C H)).",
            "VernacExtend",
            "a7222af1b06eb92eb79388849016a88ba4ee82c8"
        ],
        [
            "assert (Had := sym_not_eq (ClockwiseDistinctCA A B D H0)).",
            "VernacExtend",
            "0ee0fc3a4b2fd09b81c4fd1594e9b586c59e64cd"
        ],
        [
            "destruct (ExistsHalfLineEquidistant A C A D Hac Had) as (E, (H2, H3)).",
            "VernacExtend",
            "3ffa0e909e95af8af0b8defafee5a950f7db69ee"
        ],
        [
            "rewrite (SASEqualCD A B D E H0).",
            "VernacExtend",
            "07508d215b8cee59d3d1e3ae9c3d842c22efa6c1"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "generalizeChangeSense.",
            "VernacExtend",
            "be975c77c59224ac5239b36f960f98e48421bb54"
        ],
        [
            "apply ClockwiseBCA; apply H4; apply ClockwiseCAB; trivial.",
            "VernacExtend",
            "65fdee317b61fb1b141ac0d38cd567b192ef1bff"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite <- (HalfLineAngleC A B C E); auto.",
            "VernacExtend",
            "d1fdad87295b1879d751b6045e3ea4b1f3e0652d"
        ],
        [
            "exact (ClockwiseDistinctAB A B C H).",
            "VernacExtend",
            "da4e1a429cb145a9f4518b50c1342c4c3c929bc8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ANGLE_PROPERTIES.",
            "VernacEndSegment",
            "d3d9a474246fc4689dec391641ed3edfa32fb725"
        ],
        [
            "Section PARTICULAR_ANGLES.",
            "VernacBeginSection",
            "6c63516c591e89c9973892c48dacb76118f18ad3"
        ],
        [
            "Definition AS0 := Angle Uu Oo Uu.",
            "VernacDefinition",
            "f0ecbeac1d79134273d0db600e9b68375f265d5d"
        ],
        [
            "Definition Ww : Point.",
            "VernacDefinition",
            "e349d3dd3317476185276eed17d5c990cd79361c"
        ],
        [
            "destruct (CentralSymetPoint Uu Oo (sym_not_eq DistinctOoUu)) as (x,_).",
            "VernacExtend",
            "4c9c6721b069312a7bff4d070cf3e5a6e90f2856"
        ],
        [
            "exact x.",
            "VernacExtend",
            "c10c9a0dd6cb674a83398988fef0d69f21d9b8dc"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma DistOoWw : Distance Uu Oo = Distance Oo Ww.",
            "VernacStartTheoremProof",
            "c390c00611d482beed1a9b522ecc4e5ee7233681"
        ],
        [
            "unfold Ww; destruct (CentralSymetPoint Uu Oo (sym_not_eq DistinctOoUu)).",
            "VernacExtend",
            "626217ce96d0f073acd29dd3ba9f996542a00cff"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma DistinctOoWw : Oo <> Ww.",
            "VernacStartTheoremProof",
            "ec48c60b3b5df6edd332234e80481a2092bad8a7"
        ],
        [
            "apply (EquiDistantDistinct Oo Uu Oo Ww DistinctOoUu).",
            "VernacExtend",
            "7dbbf6658974ca3ab103da6160a65c4def8224e2"
        ],
        [
            "rewrite <- DistOoWw; apply DistSym.",
            "VernacExtend",
            "d29d163f20b12fe14b6a6de536be0ef882fbf971"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma BetweenUuOoWw : Between Uu Oo Ww.",
            "VernacStartTheoremProof",
            "437b6ad0ed87c376b9d9c85f7c9b518fee21654d"
        ],
        [
            "unfold Ww; destruct (CentralSymetPoint Uu Oo (sym_not_eq DistinctOoUu)).",
            "VernacExtend",
            "626217ce96d0f073acd29dd3ba9f996542a00cff"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma BetweenWwOoUu : Between Ww Oo Uu.",
            "VernacStartTheoremProof",
            "140ee62468b5a0aedf2d2ea2d1498352624387a7"
        ],
        [
            "assert (H := BetweenUuOoWw).",
            "VernacExtend",
            "9ee33287e101b7799ffb4b6910c10e9580f06a7e"
        ],
        [
            "generalizeChange.",
            "VernacExtend",
            "d3c977ebf7f2c5588433912c8eb25fd198cbcf67"
        ],
        [
            "destruct (ClockwiseExists Uu Oo H0) as (V, H4).",
            "VernacExtend",
            "0f1a3c8d305e3124cadae1084a15d9a3de89c4a2"
        ],
        [
            "elim (ClockwiseDistinctAB Oo Ww V); auto.",
            "VernacExtend",
            "25362b0f4327278afba7680651e9d89752605796"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ASpi := Angle Uu Oo Ww.",
            "VernacDefinition",
            "ff46548244f9984e54ed38259d6f97607eae1b8d"
        ],
        [
            "Lemma NullAngle : forall A B C : Point, A <> B -> HalfLine A B C -> Angle B A C = AS0.",
            "VernacStartTheoremProof",
            "52979e7bcb8f7eab901a7501e01cfce12ce1149a"
        ],
        [
            "intros; unfold AS0 in |- *.",
            "VernacExtend",
            "316309b7a1286108979c6bcdc06ea18fb5daa317"
        ],
        [
            "destruct (ExistsHalfLineEquidistant A B Oo Uu H DistinctOoUu) as (D, (H1, H2)).",
            "VernacExtend",
            "05e3866f5e6193e14fed3261dd95b9de2ec34135"
        ],
        [
            "rewrite (CongruentItself A B C D D H).",
            "VernacExtend",
            "3108b663bb3faf573582f3e97d6ccb28f470d11a"
        ],
        [
            "assert (H3 := EquiDistantDistinct Oo Uu A D DistinctOoUu (sym_eq H2)).",
            "VernacExtend",
            "3b699b9b05c82888698e526335b3578995aa9466"
        ],
        [
            "apply CongruentSSS; auto.",
            "VernacExtend",
            "62e718db89a1200fb09f01b5d7d4a2e2539f5396"
        ],
        [
            "exact (DistAA D Uu).",
            "VernacExtend",
            "d35b5d11126a6ab7a9cffbbb93fd890e54dc7f73"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "destruct (ClockwiseExists A B H) as (E, H4).",
            "VernacExtend",
            "0234552aec6f8c9c30091ba74e65c63c94047898"
        ],
        [
            "elim (ClockwiseDistinctAB A C E); auto.",
            "VernacExtend",
            "4bea3176c162afc57b41b44be66bfd06a74cdd10"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "generalizeChange.",
            "VernacExtend",
            "d3c977ebf7f2c5588433912c8eb25fd198cbcf67"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ElongatedAngle : forall A B C : Point, Between A B C -> Angle A B C = ASpi.",
            "VernacStartTheoremProof",
            "121ed0769afe867607dfc4d3e7c9e7d094794df3"
        ],
        [
            "intros; unfold ASpi in |- *.",
            "VernacExtend",
            "31834ab00549c0269490fd695e2a5a29b054f21a"
        ],
        [
            "assert (H0 : B <> A).",
            "VernacExtend",
            "eb6fc9669c01330dcdc94592363fa5ca83819b67"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "assert (H1 : B <> C).",
            "VernacExtend",
            "89185102dba07e61099ed172e1e1f975615528a4"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "destruct (ClockwiseExists A B H2) as (D, H4).",
            "VernacExtend",
            "bd574e97b45ba7338d810239ebe2d6b404d1bcda"
        ],
        [
            "elim (ClockwiseDistinctAB B C D); auto.",
            "VernacExtend",
            "1950f612dfec9a5c748a6e7fbd2c07f0c5e7d0e5"
        ],
        [
            "destruct (ExistsHalfLineEquidistant B A Oo Ww H0 DistinctOoWw) as (D, (H2, H3)).",
            "VernacExtend",
            "eb9b775f42a2b6bf46ed860d4a3e7c7d56bab15c"
        ],
        [
            "destruct (ExistsHalfLineEquidistant B C Oo Uu H1 DistinctOoUu) as (E, (H4, H5)).",
            "VernacExtend",
            "66d1ed590ca111c61074af0f46d9b963f170fad2"
        ],
        [
            "rewrite (CongruentItself B A C D E H0 H1 H2 H4).",
            "VernacExtend",
            "07d6554601eaf891c0156077a4580ff02d28959a"
        ],
        [
            "apply CongruentSSS; auto.",
            "VernacExtend",
            "62e718db89a1200fb09f01b5d7d4a2e2539f5396"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "destruct (ClockwiseExists B C H1) as (F, H9).",
            "VernacExtend",
            "a023bfd40da2a23f279f8689a7a52ec2abd996ab"
        ],
        [
            "elim (ClockwiseDistinctAB B E F); auto.",
            "VernacExtend",
            "4da544a9db26a52066c1f7cb56dcd2b190c192b8"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "destruct (ClockwiseExists B A H0) as (F, H9).",
            "VernacExtend",
            "3683c1fb8dd601c0abfc94a9fb097c43d4d29938"
        ],
        [
            "elim (ClockwiseDistinctAB B D F); auto.",
            "VernacExtend",
            "bce813e32a3e54e0f3b7dc0baf9e38223509ca94"
        ],
        [
            "rewrite <- (Chasles E B D).",
            "VernacExtend",
            "0adee61f9b30e1f7f9768bb3db68ff204f20ee43"
        ],
        [
            "rewrite (DistSym E B); rewrite H5; rewrite (DistSym Oo Uu).",
            "VernacExtend",
            "5f2a75e09a27e8def8de97ec8a710d73f83c7c77"
        ],
        [
            "rewrite H3; apply Chasles.",
            "VernacExtend",
            "f94bcca064676f67c5a10c03bf1759bc9dbc3646"
        ],
        [
            "apply BetweenHalfLine; apply BetweenUuOoWw.",
            "VernacExtend",
            "03ca571bbc679425d634b6096526b36c304f1ed4"
        ],
        [
            "apply BetweenHalfLine; apply BetweenWwOoUu.",
            "VernacExtend",
            "d623899d0732a19366e0ba1829d577fddd76c0df"
        ],
        [
            "apply BetweenHalfLine; generalizeChange.",
            "VernacExtend",
            "6de8758d6c4f47d3fd26ef40f9ad4615f1d146a4"
        ],
        [
            "destruct (ClockwiseExists B C H1) as (F, H16).",
            "VernacExtend",
            "6faca3074525de92e9680bedd4d5182fe9a7f80c"
        ],
        [
            "elim (ClockwiseDistinctAB B E F); auto.",
            "VernacExtend",
            "4da544a9db26a52066c1f7cb56dcd2b190c192b8"
        ],
        [
            "apply BetweenHalfLine; generalizeChange.",
            "VernacExtend",
            "6de8758d6c4f47d3fd26ef40f9ad4615f1d146a4"
        ],
        [
            "destruct (ClockwiseExists A B H6) as (F, H16).",
            "VernacExtend",
            "8c85a9d1bea715b915644f34321151f8ad13b022"
        ],
        [
            "elim (ClockwiseDistinctAB D B F); auto.",
            "VernacExtend",
            "520e459a89544ea79c2583f947f41c1beaf85cae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma NullAngleHalfLine : forall A B C : Point, A <> B -> A <> C -> Angle B A C = AS0 -> HalfLine A B C.",
            "VernacStartTheoremProof",
            "a84406091d01522a95ed4665b0a768db25a2fa70"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (ExistsHalfLineEquidistant A B A C H H0) as (D, (H2, H3)).",
            "VernacExtend",
            "6d9dc09f4521024b62e02cd16a21bb1538e9998d"
        ],
        [
            "rewrite (DistNull C D).",
            "VernacExtend",
            "52fda899e5f9617821aad8bc1aadaeb3750705c6"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "rewrite <- (NullDist C).",
            "VernacExtend",
            "c5fb3dbb49413fe881eb98482273a7627b92657f"
        ],
        [
            "apply (CongruentSAS A C D A C C); auto.",
            "VernacExtend",
            "5ccc2294085a7e9e99d6dfc0b662f91cc36680f0"
        ],
        [
            "apply (EquiDistantDistinct A C A D); auto.",
            "VernacExtend",
            "594ac1e08adb06d845055de0ef669c5f33556326"
        ],
        [
            "rewrite <- (HalfLineAngleC A C B D); auto.",
            "VernacExtend",
            "2f9885db193e2522099be7ea765c3277c1910837"
        ],
        [
            "rewrite <- (AngleSym A B C); auto.",
            "VernacExtend",
            "2bc676455dec21b4e238bb9ad0667fe0e8ef957d"
        ],
        [
            "rewrite (NullAngle A C C); auto.",
            "VernacExtend",
            "2b5e22072b35ca8042f41ba2548c48fa65c36a79"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ElongatedAngleChasles : forall A B C : Point, A <> B -> A <> C -> Angle B A C = ASpi -> LSplus (Distance B A) (Distance A C) = Distance B C.",
            "VernacStartTheoremProof",
            "d2f3c57a11e6f02e628642b36687b5faa4ae5b94"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (ExistsBetweenEquidistant A C A B H0 H) as (D, (H2, H3)).",
            "VernacExtend",
            "fa0c913c092101fc19a141d7feb80ddaf9a37719"
        ],
        [
            "rewrite (DistSym B A); rewrite <- H3; rewrite (DistSym A D).",
            "VernacExtend",
            "897c9a807093377c954698312f79678702ed4621"
        ],
        [
            "apply trans_eq with (y := Distance D C).",
            "VernacExtend",
            "af33bed98ddd569f4c2925b3c56da67cf58f4e9a"
        ],
        [
            "apply Chasles.",
            "VernacExtend",
            "f192e78d366cd6e4051afb2f7bc1c386a0a72f97"
        ],
        [
            "apply BetweenHalfLine; trivial.",
            "VernacExtend",
            "a50bf0ba508d8472d7e808e2d960b71aa16ac730"
        ],
        [
            "apply BetweenSymHalfLine; trivial.",
            "VernacExtend",
            "fd3f4190dc2b0635577764c229d941d50ae48c70"
        ],
        [
            "apply sym_eq; apply (CongruentSAS A B C A D C); auto.",
            "VernacExtend",
            "885dfe567da338bff48a98869976b6bd5abdf32d"
        ],
        [
            "rewrite (ElongatedAngle D A C); auto.",
            "VernacExtend",
            "74ed3361a3de963a13012cf58e80ae0c68921c33"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ElongatedAngleRec : forall A B C : Point, A <> B -> A <> C -> Angle B A C = ASpi -> Between B A C.",
            "VernacStartTheoremProof",
            "73607a66adeb9a2b95677e53d153e4027d2ae12f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (H2 := ElongatedAngleChasles A B C H H0 H1).",
            "VernacExtend",
            "e44feefe2333698b41d93c27cd94d067304e7160"
        ],
        [
            "destruct (ChaslesRec _ _ _ H2).",
            "VernacExtend",
            "b9f041fe7e34aa44b91e229e629c11a7b9871e28"
        ],
        [
            "generalizeChange.",
            "VernacExtend",
            "d3c977ebf7f2c5588433912c8eb25fd198cbcf67"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End PARTICULAR_ANGLES.",
            "VernacEndSegment",
            "45797de27188a429d17657dd9e4b7f7d389f5dfb"
        ]
    ],
    "proofs": [
        {
            "name": "AngleSym",
            "line_nb": 2,
            "steps": [
                {
                    "command": [
                        "intros; apply CongruentItself; canonize.",
                        "VernacExtend",
                        "1eb51fbb834553110723c1cf17118ad03ee06db8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "HalfLineAngleB",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros; rewrite AngleSym; auto.",
                        "VernacExtend",
                        "e81f54db2535ec165f349fcfdd2a4fa2a19fa384"
                    ]
                },
                {
                    "command": [
                        "apply CongruentItself; canonize.",
                        "VernacExtend",
                        "8cdc66a41af6b886c7aa2c98d5f61b5fff5f8585"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "HalfLineAngleC",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "intros; rewrite AngleSym; auto.",
                        "VernacExtend",
                        "e81f54db2535ec165f349fcfdd2a4fa2a19fa384"
                    ]
                },
                {
                    "command": [
                        "apply CongruentItself; canonize.",
                        "VernacExtend",
                        "8cdc66a41af6b886c7aa2c98d5f61b5fff5f8585"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "HalfLineAngleBC",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "intros; rewrite AngleSym; auto.",
                        "VernacExtend",
                        "e81f54db2535ec165f349fcfdd2a4fa2a19fa384"
                    ]
                },
                {
                    "command": [
                        "apply CongruentItself; canonize.",
                        "VernacExtend",
                        "8cdc66a41af6b886c7aa2c98d5f61b5fff5f8585"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BetweenAngleBC",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "intros; apply HalfLineAngleBC.",
                        "VernacExtend",
                        "7343a77ebe2838ba8b82cfa40aa8aa2d2f0da1ee"
                    ]
                },
                {
                    "command": [
                        "apply (BetweenDistinctAB _ _ _ H).",
                        "VernacExtend",
                        "f773d7baaf749d215d1b19a5a3d6cd7dd5d871f3"
                    ]
                },
                {
                    "command": [
                        "apply (BetweenDistinctAB _ _ _ H0).",
                        "VernacExtend",
                        "b5746c70ec86489011d60e17782270c8e3313a51"
                    ]
                },
                {
                    "command": [
                        "apply (BetweenHalfLine _ _ _ H).",
                        "VernacExtend",
                        "e6cfc8262fc3f61a4b17b305958aeaf4552a020c"
                    ]
                },
                {
                    "command": [
                        "apply (BetweenHalfLine _ _ _ H0).",
                        "VernacExtend",
                        "e6eab7693941cc777cd0f909db91153891476bc0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BetweenAngleC",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "intros; apply HalfLineAngleC.",
                        "VernacExtend",
                        "338748f5367ef9db80f7f938b203644470fb2825"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply (BetweenDistinctAB _ _ _ H0).",
                        "VernacExtend",
                        "b5746c70ec86489011d60e17782270c8e3313a51"
                    ]
                },
                {
                    "command": [
                        "apply (BetweenHalfLine _ _ _ H0).",
                        "VernacExtend",
                        "e6eab7693941cc777cd0f909db91153891476bc0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BetweenAngleB",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "intros; apply HalfLineAngleB.",
                        "VernacExtend",
                        "b6b16d82f628a97bf287ae9127e28dffe9da62b0"
                    ]
                },
                {
                    "command": [
                        "apply (BetweenDistinctAB _ _ _ H0).",
                        "VernacExtend",
                        "b5746c70ec86489011d60e17782270c8e3313a51"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply (BetweenHalfLine _ _ _ H0).",
                        "VernacExtend",
                        "e6eab7693941cc777cd0f909db91153891476bc0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "SASEqualBD",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "intros; apply (SSSEqualBD A B C D); auto.",
                        "VernacExtend",
                        "43bd96bad8c99a28c2d189d0157c986ccf5d0eb5"
                    ]
                },
                {
                    "command": [
                        "apply (CongruentSAS A B C A D C); auto.",
                        "VernacExtend",
                        "bcd64455187199a557d2865ada0a7268e2260f49"
                    ]
                },
                {
                    "command": [
                        "exact (ClockwiseDistinctAB A B C H).",
                        "VernacExtend",
                        "da4e1a429cb145a9f4518b50c1342c4c3c929bc8"
                    ]
                },
                {
                    "command": [
                        "exact (sym_not_eq (ClockwiseDistinctCA A B C H)).",
                        "VernacExtend",
                        "2ac6d24193ee38f85b530b3bd44fa467bd029a50"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "SASEqualCD",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "intros; apply (SSSEqualCD A B C D); auto.",
                        "VernacExtend",
                        "eee3ab863b0deaefbea09ffb9b266adfda1e7ef4"
                    ]
                },
                {
                    "command": [
                        "apply (CongruentSAS A B C A B D); auto.",
                        "VernacExtend",
                        "9c465c01ee5afcaa0c7990b7fbdc0c54a6820ad6"
                    ]
                },
                {
                    "command": [
                        "exact (ClockwiseDistinctAB A B C H).",
                        "VernacExtend",
                        "da4e1a429cb145a9f4518b50c1342c4c3c929bc8"
                    ]
                },
                {
                    "command": [
                        "exact (sym_not_eq (ClockwiseDistinctCA A B C H)).",
                        "VernacExtend",
                        "2ac6d24193ee38f85b530b3bd44fa467bd029a50"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "AngleBHalfLine",
            "line_nb": 48,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Hab := ClockwiseDistinctAB A B C H).",
                        "VernacExtend",
                        "2e5faffe75124be03784e6faee4da98c37ef281e"
                    ]
                },
                {
                    "command": [
                        "assert (Had := ClockwiseDistinctAB A D C H0).",
                        "VernacExtend",
                        "4c1f4ed010b825b2c93b5a520eb6b61ace67f101"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsHalfLineEquidistant A B A D Hab Had) as (E, (H2, H3)).",
                        "VernacExtend",
                        "5e82d58870c3341c3214560c58f81bc560734a65"
                    ]
                },
                {
                    "command": [
                        "rewrite (SASEqualBD A D C E H0).",
                        "VernacExtend",
                        "daabf4e78bb9fd7ab303afedc0bb4a9de62e9420"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H1; apply HalfLineAngleB; auto.",
                        "VernacExtend",
                        "1a91f94f5d6c13a7d3c9767466020cfe7a82cf26"
                    ]
                },
                {
                    "command": [
                        "exact (sym_not_eq (ClockwiseDistinctCA A B C H)).",
                        "VernacExtend",
                        "2ac6d24193ee38f85b530b3bd44fa467bd029a50"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "AngleCHalfLine",
            "line_nb": 60,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Hac := sym_not_eq (ClockwiseDistinctCA A B C H)).",
                        "VernacExtend",
                        "a7222af1b06eb92eb79388849016a88ba4ee82c8"
                    ]
                },
                {
                    "command": [
                        "assert (Had := sym_not_eq (ClockwiseDistinctCA A B D H0)).",
                        "VernacExtend",
                        "0ee0fc3a4b2fd09b81c4fd1594e9b586c59e64cd"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsHalfLineEquidistant A C A D Hac Had) as (E, (H2, H3)).",
                        "VernacExtend",
                        "3ffa0e909e95af8af0b8defafee5a950f7db69ee"
                    ]
                },
                {
                    "command": [
                        "rewrite (SASEqualCD A B D E H0).",
                        "VernacExtend",
                        "07508d215b8cee59d3d1e3ae9c3d842c22efa6c1"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "generalizeChangeSense.",
                        "VernacExtend",
                        "be975c77c59224ac5239b36f960f98e48421bb54"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseBCA; apply H4; apply ClockwiseCAB; trivial.",
                        "VernacExtend",
                        "65fdee317b61fb1b141ac0d38cd567b192ef1bff"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (HalfLineAngleC A B C E); auto.",
                        "VernacExtend",
                        "d1fdad87295b1879d751b6045e3ea4b1f3e0652d"
                    ]
                },
                {
                    "command": [
                        "exact (ClockwiseDistinctAB A B C H).",
                        "VernacExtend",
                        "da4e1a429cb145a9f4518b50c1342c4c3c929bc8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ww",
            "line_nb": 76,
            "steps": [
                {
                    "command": [
                        "destruct (CentralSymetPoint Uu Oo (sym_not_eq DistinctOoUu)) as (x,_).",
                        "VernacExtend",
                        "4c9c6721b069312a7bff4d070cf3e5a6e90f2856"
                    ]
                },
                {
                    "command": [
                        "exact x.",
                        "VernacExtend",
                        "c10c9a0dd6cb674a83398988fef0d69f21d9b8dc"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "DistOoWw",
            "line_nb": 80,
            "steps": [
                {
                    "command": [
                        "unfold Ww; destruct (CentralSymetPoint Uu Oo (sym_not_eq DistinctOoUu)).",
                        "VernacExtend",
                        "626217ce96d0f073acd29dd3ba9f996542a00cff"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "DistinctOoWw",
            "line_nb": 84,
            "steps": [
                {
                    "command": [
                        "apply (EquiDistantDistinct Oo Uu Oo Ww DistinctOoUu).",
                        "VernacExtend",
                        "7dbbf6658974ca3ab103da6160a65c4def8224e2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- DistOoWw; apply DistSym.",
                        "VernacExtend",
                        "d29d163f20b12fe14b6a6de536be0ef882fbf971"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BetweenUuOoWw",
            "line_nb": 88,
            "steps": [
                {
                    "command": [
                        "unfold Ww; destruct (CentralSymetPoint Uu Oo (sym_not_eq DistinctOoUu)).",
                        "VernacExtend",
                        "626217ce96d0f073acd29dd3ba9f996542a00cff"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BetweenWwOoUu",
            "line_nb": 92,
            "steps": [
                {
                    "command": [
                        "assert (H := BetweenUuOoWw).",
                        "VernacExtend",
                        "9ee33287e101b7799ffb4b6910c10e9580f06a7e"
                    ]
                },
                {
                    "command": [
                        "generalizeChange.",
                        "VernacExtend",
                        "d3c977ebf7f2c5588433912c8eb25fd198cbcf67"
                    ]
                },
                {
                    "command": [
                        "destruct (ClockwiseExists Uu Oo H0) as (V, H4).",
                        "VernacExtend",
                        "0f1a3c8d305e3124cadae1084a15d9a3de89c4a2"
                    ]
                },
                {
                    "command": [
                        "elim (ClockwiseDistinctAB Oo Ww V); auto.",
                        "VernacExtend",
                        "25362b0f4327278afba7680651e9d89752605796"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NullAngle",
            "line_nb": 99,
            "steps": [
                {
                    "command": [
                        "intros; unfold AS0 in |- *.",
                        "VernacExtend",
                        "316309b7a1286108979c6bcdc06ea18fb5daa317"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsHalfLineEquidistant A B Oo Uu H DistinctOoUu) as (D, (H1, H2)).",
                        "VernacExtend",
                        "05e3866f5e6193e14fed3261dd95b9de2ec34135"
                    ]
                },
                {
                    "command": [
                        "rewrite (CongruentItself A B C D D H).",
                        "VernacExtend",
                        "3108b663bb3faf573582f3e97d6ccb28f470d11a"
                    ]
                },
                {
                    "command": [
                        "assert (H3 := EquiDistantDistinct Oo Uu A D DistinctOoUu (sym_eq H2)).",
                        "VernacExtend",
                        "3b699b9b05c82888698e526335b3578995aa9466"
                    ]
                },
                {
                    "command": [
                        "apply CongruentSSS; auto.",
                        "VernacExtend",
                        "62e718db89a1200fb09f01b5d7d4a2e2539f5396"
                    ]
                },
                {
                    "command": [
                        "exact (DistAA D Uu).",
                        "VernacExtend",
                        "d35b5d11126a6ab7a9cffbbb93fd890e54dc7f73"
                    ]
                },
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "destruct (ClockwiseExists A B H) as (E, H4).",
                        "VernacExtend",
                        "0234552aec6f8c9c30091ba74e65c63c94047898"
                    ]
                },
                {
                    "command": [
                        "elim (ClockwiseDistinctAB A C E); auto.",
                        "VernacExtend",
                        "4bea3176c162afc57b41b44be66bfd06a74cdd10"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "generalizeChange.",
                        "VernacExtend",
                        "d3c977ebf7f2c5588433912c8eb25fd198cbcf67"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ElongatedAngle",
            "line_nb": 112,
            "steps": [
                {
                    "command": [
                        "intros; unfold ASpi in |- *.",
                        "VernacExtend",
                        "31834ab00549c0269490fd695e2a5a29b054f21a"
                    ]
                },
                {
                    "command": [
                        "assert (H0 : B <> A).",
                        "VernacExtend",
                        "eb6fc9669c01330dcdc94592363fa5ca83819b67"
                    ]
                },
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "assert (H1 : B <> C).",
                        "VernacExtend",
                        "89185102dba07e61099ed172e1e1f975615528a4"
                    ]
                },
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "destruct (ClockwiseExists A B H2) as (D, H4).",
                        "VernacExtend",
                        "bd574e97b45ba7338d810239ebe2d6b404d1bcda"
                    ]
                },
                {
                    "command": [
                        "elim (ClockwiseDistinctAB B C D); auto.",
                        "VernacExtend",
                        "1950f612dfec9a5c748a6e7fbd2c07f0c5e7d0e5"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsHalfLineEquidistant B A Oo Ww H0 DistinctOoWw) as (D, (H2, H3)).",
                        "VernacExtend",
                        "eb9b775f42a2b6bf46ed860d4a3e7c7d56bab15c"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsHalfLineEquidistant B C Oo Uu H1 DistinctOoUu) as (E, (H4, H5)).",
                        "VernacExtend",
                        "66d1ed590ca111c61074af0f46d9b963f170fad2"
                    ]
                },
                {
                    "command": [
                        "rewrite (CongruentItself B A C D E H0 H1 H2 H4).",
                        "VernacExtend",
                        "07d6554601eaf891c0156077a4580ff02d28959a"
                    ]
                },
                {
                    "command": [
                        "apply CongruentSSS; auto.",
                        "VernacExtend",
                        "62e718db89a1200fb09f01b5d7d4a2e2539f5396"
                    ]
                },
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "destruct (ClockwiseExists B C H1) as (F, H9).",
                        "VernacExtend",
                        "a023bfd40da2a23f279f8689a7a52ec2abd996ab"
                    ]
                },
                {
                    "command": [
                        "elim (ClockwiseDistinctAB B E F); auto.",
                        "VernacExtend",
                        "4da544a9db26a52066c1f7cb56dcd2b190c192b8"
                    ]
                },
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "destruct (ClockwiseExists B A H0) as (F, H9).",
                        "VernacExtend",
                        "3683c1fb8dd601c0abfc94a9fb097c43d4d29938"
                    ]
                },
                {
                    "command": [
                        "elim (ClockwiseDistinctAB B D F); auto.",
                        "VernacExtend",
                        "bce813e32a3e54e0f3b7dc0baf9e38223509ca94"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Chasles E B D).",
                        "VernacExtend",
                        "0adee61f9b30e1f7f9768bb3db68ff204f20ee43"
                    ]
                },
                {
                    "command": [
                        "rewrite (DistSym E B); rewrite H5; rewrite (DistSym Oo Uu).",
                        "VernacExtend",
                        "5f2a75e09a27e8def8de97ec8a710d73f83c7c77"
                    ]
                },
                {
                    "command": [
                        "rewrite H3; apply Chasles.",
                        "VernacExtend",
                        "f94bcca064676f67c5a10c03bf1759bc9dbc3646"
                    ]
                },
                {
                    "command": [
                        "apply BetweenHalfLine; apply BetweenUuOoWw.",
                        "VernacExtend",
                        "03ca571bbc679425d634b6096526b36c304f1ed4"
                    ]
                },
                {
                    "command": [
                        "apply BetweenHalfLine; apply BetweenWwOoUu.",
                        "VernacExtend",
                        "d623899d0732a19366e0ba1829d577fddd76c0df"
                    ]
                },
                {
                    "command": [
                        "apply BetweenHalfLine; generalizeChange.",
                        "VernacExtend",
                        "6de8758d6c4f47d3fd26ef40f9ad4615f1d146a4"
                    ]
                },
                {
                    "command": [
                        "destruct (ClockwiseExists B C H1) as (F, H16).",
                        "VernacExtend",
                        "6faca3074525de92e9680bedd4d5182fe9a7f80c"
                    ]
                },
                {
                    "command": [
                        "elim (ClockwiseDistinctAB B E F); auto.",
                        "VernacExtend",
                        "4da544a9db26a52066c1f7cb56dcd2b190c192b8"
                    ]
                },
                {
                    "command": [
                        "apply BetweenHalfLine; generalizeChange.",
                        "VernacExtend",
                        "6de8758d6c4f47d3fd26ef40f9ad4615f1d146a4"
                    ]
                },
                {
                    "command": [
                        "destruct (ClockwiseExists A B H6) as (F, H16).",
                        "VernacExtend",
                        "8c85a9d1bea715b915644f34321151f8ad13b022"
                    ]
                },
                {
                    "command": [
                        "elim (ClockwiseDistinctAB D B F); auto.",
                        "VernacExtend",
                        "520e459a89544ea79c2583f947f41c1beaf85cae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NullAngleHalfLine",
            "line_nb": 142,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsHalfLineEquidistant A B A C H H0) as (D, (H2, H3)).",
                        "VernacExtend",
                        "6d9dc09f4521024b62e02cd16a21bb1538e9998d"
                    ]
                },
                {
                    "command": [
                        "rewrite (DistNull C D).",
                        "VernacExtend",
                        "52fda899e5f9617821aad8bc1aadaeb3750705c6"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (NullDist C).",
                        "VernacExtend",
                        "c5fb3dbb49413fe881eb98482273a7627b92657f"
                    ]
                },
                {
                    "command": [
                        "apply (CongruentSAS A C D A C C); auto.",
                        "VernacExtend",
                        "5ccc2294085a7e9e99d6dfc0b662f91cc36680f0"
                    ]
                },
                {
                    "command": [
                        "apply (EquiDistantDistinct A C A D); auto.",
                        "VernacExtend",
                        "594ac1e08adb06d845055de0ef669c5f33556326"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (HalfLineAngleC A C B D); auto.",
                        "VernacExtend",
                        "2f9885db193e2522099be7ea765c3277c1910837"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (AngleSym A B C); auto.",
                        "VernacExtend",
                        "2bc676455dec21b4e238bb9ad0667fe0e8ef957d"
                    ]
                },
                {
                    "command": [
                        "rewrite (NullAngle A C C); auto.",
                        "VernacExtend",
                        "2b5e22072b35ca8042f41ba2548c48fa65c36a79"
                    ]
                },
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ElongatedAngleChasles",
            "line_nb": 155,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsBetweenEquidistant A C A B H0 H) as (D, (H2, H3)).",
                        "VernacExtend",
                        "fa0c913c092101fc19a141d7feb80ddaf9a37719"
                    ]
                },
                {
                    "command": [
                        "rewrite (DistSym B A); rewrite <- H3; rewrite (DistSym A D).",
                        "VernacExtend",
                        "897c9a807093377c954698312f79678702ed4621"
                    ]
                },
                {
                    "command": [
                        "apply trans_eq with (y := Distance D C).",
                        "VernacExtend",
                        "af33bed98ddd569f4c2925b3c56da67cf58f4e9a"
                    ]
                },
                {
                    "command": [
                        "apply Chasles.",
                        "VernacExtend",
                        "f192e78d366cd6e4051afb2f7bc1c386a0a72f97"
                    ]
                },
                {
                    "command": [
                        "apply BetweenHalfLine; trivial.",
                        "VernacExtend",
                        "a50bf0ba508d8472d7e808e2d960b71aa16ac730"
                    ]
                },
                {
                    "command": [
                        "apply BetweenSymHalfLine; trivial.",
                        "VernacExtend",
                        "fd3f4190dc2b0635577764c229d941d50ae48c70"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq; apply (CongruentSAS A B C A D C); auto.",
                        "VernacExtend",
                        "885dfe567da338bff48a98869976b6bd5abdf32d"
                    ]
                },
                {
                    "command": [
                        "rewrite (ElongatedAngle D A C); auto.",
                        "VernacExtend",
                        "74ed3361a3de963a13012cf58e80ae0c68921c33"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ElongatedAngleRec",
            "line_nb": 166,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (H2 := ElongatedAngleChasles A B C H H0 H1).",
                        "VernacExtend",
                        "e44feefe2333698b41d93c27cd94d067304e7160"
                    ]
                },
                {
                    "command": [
                        "destruct (ChaslesRec _ _ _ H2).",
                        "VernacExtend",
                        "b9f041fe7e34aa44b91e229e629c11a7b9871e28"
                    ]
                },
                {
                    "command": [
                        "generalizeChange.",
                        "VernacExtend",
                        "d3c977ebf7f2c5588433912c8eb25fd198cbcf67"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}