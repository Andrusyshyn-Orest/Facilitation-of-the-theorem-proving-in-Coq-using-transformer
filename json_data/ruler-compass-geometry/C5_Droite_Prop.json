{
    "filename": "C5_Droite_Prop.v",
    "coq_project": "ruler-compass-geometry",
    "vernac_cmds": [
        [
            "Require Export C4_Triangles_non_degeneres_egaux.",
            "VernacRequire",
            "493aaa4e7bd4d3a5971da92583ede049343fe7d1"
        ],
        [
            "Section LINE_PROPERTIES.",
            "VernacBeginSection",
            "c74a89d4b587863c771e7f9754755f0973f3cc0d"
        ],
        [
            "Lemma ThreeCases : forall A B C, Clockwise A B C \\/ Clockwise B A C \\/ Collinear A B C.",
            "VernacStartTheoremProof",
            "4a0794f53c7e9c48ed38055e01529e44ec3b45bd"
        ],
        [
            "intros; decompose [or] (FourCases A B C); canonize.",
            "VernacExtend",
            "b30f501b881f7929cbf5bc21cbd7504e5ade8dd7"
        ],
        [
            "generalize (HalfLineCollinear A B C H); canonize.",
            "VernacExtend",
            "f3bec435ebb966b2a9b179322aea0d97e30a2c91"
        ],
        [
            "generalize (HalfLineCollinear B A C H); canonize.",
            "VernacExtend",
            "a5790178a7083c7627ff60f06843d82b7c0cb2b6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma InOrOutLine : forall A : Point, forall F : Figure, forall D : Line F, F A \\/ ~F A.",
            "VernacStartTheoremProof",
            "d3cf7c613ad73780afdd90ba040ee9d4ea63a73b"
        ],
        [
            "intros; decompose [or] (ThreeCases (LineA F D) (LineB F D) A).",
            "VernacExtend",
            "5da23aeccaa02e8ead7d2a96f574ba1b7d93d7b4"
        ],
        [
            "right; intro; elim (ClockwiseNotCollinear _ _ _ H).",
            "VernacExtend",
            "a3e2633dc260c74eb5903797c83286984d880098"
        ],
        [
            "apply FLineIn; trivial.",
            "VernacExtend",
            "6e1a9b318c2093116f73fd3494b2084873715aaa"
        ],
        [
            "right; intro; elim (ClockwiseNotCollinear _ _ _ H0).",
            "VernacExtend",
            "1a0b5907f34fbc02b30e78d5c5b6103c20eacfec"
        ],
        [
            "apply CollinearBAC; apply FLineIn; trivial.",
            "VernacExtend",
            "0fe021131a93268a94555e5c533d3829a79492bd"
        ],
        [
            "left; apply (InFLine F D A); trivial.",
            "VernacExtend",
            "0870da510b3ccb5ed8e5b73ede38dd00d25e8e78"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CollinearHalfLine : forall A B C, Collinear A B C -> HalfLine A B C \\/ HalfLine B A C.",
            "VernacStartTheoremProof",
            "08295936cc90b0baa49e9626e3f1b920124be05a"
        ],
        [
            "intros; decompose [or] (FourCases A B C); canonize.",
            "VernacExtend",
            "b30f501b881f7929cbf5bc21cbd7504e5ade8dd7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ExclusiveTwoCases : forall A B C, A <> C -> Collinear A B C -> HalfLine A B C \\/ EquiOriented A B C A.",
            "VernacStartTheoremProof",
            "68a3b89f9dd23236ca6bd80f34941f725697a1f0"
        ],
        [
            "intros A B C H H0; decompose [or] (ExclusiveFourCases A B C H); canonize.",
            "VernacExtend",
            "04a9aa56970509eacca2b60453517844de78e563"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma EquiOrientedSym : forall A B C, A<>B -> EquiOriented A B C A -> EquiOriented C A A B.",
            "VernacStartTheoremProof",
            "0f0c09f866e82532d79db5f64e3b58079ac04e65"
        ],
        [
            "intros A B C H H0; generalize (EquiOrientedCollinear A B C H0); intro H1.",
            "VernacExtend",
            "7f7adb742bd458bcfa7e8fe6e76e18266b793986"
        ],
        [
            "destruct (CollinearHalfLine A B C H1).",
            "VernacExtend",
            "6244a8b266b40bde0ba6e3798a6a79a86629c831"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "destruct (ClockwiseExists A B H) as (D, H5).",
            "VernacExtend",
            "a51113defa183b6a8f1c3545c3e7a81cd6df2b19"
        ],
        [
            "elim (ClockwiseNotClockwise A C D (H2 D H5)); auto.",
            "VernacExtend",
            "d9f4dfa774679ddb295b4e777dd6ed4814781ec5"
        ],
        [
            "destruct (CollinearHalfLine A C B (CollinearACB A B C H1)).",
            "VernacExtend",
            "d59699fe908358a4eed29ca869c9972b2c9a65c6"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "destruct (ClockwiseExists A C (sym_not_eq (ClockwiseDistinctAB C A x H1))) as (D, H6).",
            "VernacExtend",
            "032389b23bfb607b01956ec78f4000faa186bf8d"
        ],
        [
            "elim (ClockwiseNotClockwise A C D H6); auto.",
            "VernacExtend",
            "962001fed994c19024343f6755f4265f3edc136a"
        ],
        [
            "generalizeChange.",
            "VernacExtend",
            "d3c977ebf7f2c5588433912c8eb25fd198cbcf67"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma EquiOrientedRev : forall A B C, Between A B C -> EquiOriented B C A B.",
            "VernacStartTheoremProof",
            "6ee50c3d27ec6a7f4a3315b42ff73c20e1cc0048"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "destruct (ExclusiveTwoCases B C A).",
            "VernacExtend",
            "a7306b2c64ffd45037ae69ad22e7daca1abe9d41"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply CollinearBCA; apply BetweenCollinear; canonize.",
            "VernacExtend",
            "7b1ee4abeb9b53f746bf2c85db1374b6088d894c"
        ],
        [
            "destruct (ClockwiseExists A B H0) as (D, H3).",
            "VernacExtend",
            "bbfd08bb13359a567f3a9c6a2d9fd52d62b2e08b"
        ],
        [
            "elim (ClockwiseNotClockwise A B D); canonize.",
            "VernacExtend",
            "9c29a64d55e97742c3a3e58d3972d485bb3cc4e1"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma BetweenTransC : forall A B C D : Point, Between A B C -> Between A C D -> Between B C D.",
            "VernacStartTheoremProof",
            "bdc490388cc2fffac68d3da4f66d4db2b9ce8f58"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (H1 := BetweenHalfLine A B C H).",
            "VernacExtend",
            "0e7b280591f88830cd989b755b1619382131eb54"
        ],
        [
            "assert (H2 := EquiOrientedRev A B C H).",
            "VernacExtend",
            "1b6105f4450097b45d36487bbdb129071b808aad"
        ],
        [
            "assert (H3 := BetweenDistinctBC A B C H).",
            "VernacExtend",
            "f0e8d2cf944c0511732a7b9aa9affb96d49867f1"
        ],
        [
            "generalizeChange.",
            "VernacExtend",
            "d3c977ebf7f2c5588433912c8eb25fd198cbcf67"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma BetweenTransA : forall A B C D : Point, Between A B C -> Between A C D -> Between A B D.",
            "VernacStartTheoremProof",
            "115ef74b876df7887e23fd9a7c3dea81d681171d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (BetweenAssocLeft A B C D); auto.",
            "VernacExtend",
            "c35f0f23103a6fb5d07ffa55d2558e825a72669a"
        ],
        [
            "apply (BetweenTransC A B C D); auto.",
            "VernacExtend",
            "f2b33bf6e8eacc1eac417322b0138cdb9f92caa5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma NotFourBetween : forall A B C M P Q : Point, Clockwise A M P -> Between A M B -> Between A P C -> Between B Q C -> Between M P Q -> False.",
            "VernacStartTheoremProof",
            "d75a7cd570c939ef8cb2c2765e6c7befbb1d8132"
        ],
        [
            "intros; elim (ClockwiseNotClockwise A M P H).",
            "VernacExtend",
            "ad79064d46a80ac8e15c0ce76cdb027047bbad9a"
        ],
        [
            "generalize (EquiOrientedRev A M B H0); generalize (EquiOrientedRev A P C H1); generalize (EquiOrientedRev B Q C H2); generalize (EquiOrientedRev M P Q H3); generalizeChange.",
            "VernacExtend",
            "a6c5dfedeb61b4cac5c9895809498cad8bba60c1"
        ],
        [
            "apply H20; apply ClockwiseCAB.",
            "VernacExtend",
            "dda9827d1f3e691fbdf4db0c62713b38f5a3074d"
        ],
        [
            "apply H4; apply ClockwiseCAB.",
            "VernacExtend",
            "28cddc808c9c4cbcc472d9c567e4da21a5a96023"
        ],
        [
            "apply H15; apply ClockwiseCAB.",
            "VernacExtend",
            "2654546f6b3cb369cada39c54b4cde7ce9475722"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "apply (BetweenDistinctBC M P Q); canonize.",
            "VernacExtend",
            "f4a64e88a0d2b04d94e80f3e791f276178508347"
        ],
        [
            "apply ClockwiseBCA.",
            "VernacExtend",
            "e7539adf2c8cd07fa59fd559f04a69ba2d94aa0b"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "apply (BetweenDistinctBC A P C); canonize.",
            "VernacExtend",
            "6aebdfe3fd0eb9e8dd4852ad3eb2ea412b968f95"
        ],
        [
            "apply ClockwiseCAB; trivial.",
            "VernacExtend",
            "c36dbed1788c80bd6bada63e4ef6bd8a5fcebab7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ExclusiveCollinear : forall A B C, A <> B -> A <> C -> Collinear A B C -> HalfLine A B C \\/ Between C A B.",
            "VernacStartTheoremProof",
            "8a4064384b59bec267f787ae43d5dfdf364093af"
        ],
        [
            "intros A B C H H0 H1; destruct (ExclusiveTwoCases A B C H0 H1).",
            "VernacExtend",
            "9799e35193c27afe6abedd028b954f0281f3237c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "right; split.",
            "VernacExtend",
            "7f40e6faa2e8d6f2ee2a39b745aa28054e5d87de"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply EquiOrientedSym; auto.",
            "VernacExtend",
            "19a924ba38c259f7e15deb345bbffdeba598d05a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CollinearTrans : forall A B C D, A <> B -> Collinear A B C -> Collinear A B D -> Collinear A C D.",
            "VernacStartTheoremProof",
            "581511dc96a58b18ddd3b87bf8acaf5292486b9c"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "destruct (ExclusiveTwoCases A C B); canonize.",
            "VernacExtend",
            "144a075a246858dbac45d3c2c9807a3f162ad148"
        ],
        [
            "elim H3; autoClockwise.",
            "VernacExtend",
            "356be57dbb7cf443d53978f83da35a733050a444"
        ],
        [
            "elim H2; autoClockwise.",
            "VernacExtend",
            "8b2e1b2017be65e5e39225bc31ed549773df6d3e"
        ],
        [
            "destruct (ExclusiveTwoCases A D B); canonize.",
            "VernacExtend",
            "f2805c92cf243cba81ccf149d609e6212a75e9b2"
        ],
        [
            "elim H4; autoClockwise.",
            "VernacExtend",
            "52eaa7faa4c90cad456dcdfc1ec22155acef7f5c"
        ],
        [
            "elim H0; autoClockwise.",
            "VernacExtend",
            "d639bd571571dcbf44c11ef2b305013d26debd9b"
        ],
        [
            "elim H2; apply H5; autoClockwise.",
            "VernacExtend",
            "66f50a44a303b1e9632ec716e4e6a51ec11f5efc"
        ],
        [
            "elim H3; apply H5; autoClockwise.",
            "VernacExtend",
            "f3830549873a7fbf84d8ca0b7f3c5bcd4f8f1e09"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma MarkChange : forall A B C D, A <> B -> C <> D -> Collinear A B C -> Collinear A B D -> Superimposed (Collinear A B) (Collinear C D).",
            "VernacStartTheoremProof",
            "6e28864ea5e3b4337fdb6bb6b80c4e76e5d685aa"
        ],
        [
            "intros; destruct (Apart C D A H0); split; do 3 red in |- *; intros E H4.",
            "VernacExtend",
            "85d878eb3ab8594d3c79f6032f464cf8bff61cae"
        ],
        [
            "apply (CollinearTrans C A D E H3).",
            "VernacExtend",
            "cabb8d74ddd04afe396f27dafe61414b84a8a5d6"
        ],
        [
            "apply CollinearBAC; apply (CollinearTrans A B C D H); trivial.",
            "VernacExtend",
            "fb948ce0fd5c2c26aeab162edade14ff14c2fdd4"
        ],
        [
            "apply CollinearBAC; apply (CollinearTrans A B C E H); trivial.",
            "VernacExtend",
            "8206bbe0cf0b7acfecfe0188164157edd8f42236"
        ],
        [
            "apply (CollinearTrans A C B E (sym_not_eq H3)).",
            "VernacExtend",
            "adc31f4dbb91cee6b38a8c13860adeccae2adac6"
        ],
        [
            "apply CollinearACB; trivial.",
            "VernacExtend",
            "19acd3809efc67282b9add0753900c2a11f9cd0d"
        ],
        [
            "apply CollinearBAC; apply (CollinearTrans C D A E H0).",
            "VernacExtend",
            "971c01553a973940c5786bc33392bdadb57a5ad5"
        ],
        [
            "apply CollinearBCA; apply (CollinearTrans A B C D H); trivial.",
            "VernacExtend",
            "3babe0abc279dc5fc4c5ada82c93640b7facb065"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply CollinearBAC; apply (CollinearTrans D A C E H3).",
            "VernacExtend",
            "35a7663eec550068c0ea466fd08693c55cf760c9"
        ],
        [
            "apply CollinearBAC; apply (CollinearTrans A B D C H); trivial.",
            "VernacExtend",
            "677fdacbfdc36583eb94890140e1ecc2c4731594"
        ],
        [
            "apply CollinearBAC; apply (CollinearTrans A B D E H); trivial.",
            "VernacExtend",
            "2c8bfab64080f75c1d488edf5739854c3a19dff9"
        ],
        [
            "apply (CollinearTrans A D B E (sym_not_eq H3)).",
            "VernacExtend",
            "91beee7ce4c62f0cd317a9660ff48db6b376a5a7"
        ],
        [
            "apply CollinearACB; trivial.",
            "VernacExtend",
            "19acd3809efc67282b9add0753900c2a11f9cd0d"
        ],
        [
            "apply CollinearBAC; apply (CollinearTrans D C A E (sym_not_eq H0)).",
            "VernacExtend",
            "697450f6780914ed4cd021e86bd6a9d1aef819d9"
        ],
        [
            "apply CollinearCBA; apply (CollinearTrans A B C D H); trivial.",
            "VernacExtend",
            "b9284c8541e40f527d0ba35ec4a94339c61c278f"
        ],
        [
            "apply CollinearBAC; trivial.",
            "VernacExtend",
            "95d2307e8ea434b68182cdc06a32f43da4c9d32f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma LineAB : forall A B : Point, forall F : Figure, forall D : Line F, A <> B -> F A -> F B -> Superimposed F (Collinear A B).",
            "VernacStartTheoremProof",
            "b8862892f5b98d020e8826da5983a5ba3b05dfd0"
        ],
        [
            "intros; assert (H2 := LineSuperimposedAB F D).",
            "VernacExtend",
            "c269c4a61ca74be963013aa4c5e7e369a94b4379"
        ],
        [
            "apply SuperimposedTrans with (F2 := Collinear (LineA F D) (LineB F D)); auto.",
            "VernacExtend",
            "a9771be83f9f5b91217b041571cc20187be0cc2b"
        ],
        [
            "inversion H2; apply MarkChange; auto.",
            "VernacExtend",
            "dfcc9452775e9cdbbdba71e90c0f4245abee20e3"
        ],
        [
            "apply LineH.",
            "VernacExtend",
            "eea30bbc11cac710cff5ed337fc8acc1cd3bd3a4"
        ],
        [
            "apply H3; auto.",
            "VernacExtend",
            "22ff15660c2558c792e23d36c3bbf8c255cb56ba"
        ],
        [
            "apply H3; auto.",
            "VernacExtend",
            "22ff15660c2558c792e23d36c3bbf8c255cb56ba"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End LINE_PROPERTIES.",
            "VernacEndSegment",
            "b3bbb2391227d9ad6ab7865b5d1140c5d39c54f7"
        ]
    ],
    "proofs": [
        {
            "name": "ThreeCases",
            "line_nb": 2,
            "steps": [
                {
                    "command": [
                        "intros; decompose [or] (FourCases A B C); canonize.",
                        "VernacExtend",
                        "b30f501b881f7929cbf5bc21cbd7504e5ade8dd7"
                    ]
                },
                {
                    "command": [
                        "generalize (HalfLineCollinear A B C H); canonize.",
                        "VernacExtend",
                        "f3bec435ebb966b2a9b179322aea0d97e30a2c91"
                    ]
                },
                {
                    "command": [
                        "generalize (HalfLineCollinear B A C H); canonize.",
                        "VernacExtend",
                        "a5790178a7083c7627ff60f06843d82b7c0cb2b6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "InOrOutLine",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "intros; decompose [or] (ThreeCases (LineA F D) (LineB F D) A).",
                        "VernacExtend",
                        "5da23aeccaa02e8ead7d2a96f574ba1b7d93d7b4"
                    ]
                },
                {
                    "command": [
                        "right; intro; elim (ClockwiseNotCollinear _ _ _ H).",
                        "VernacExtend",
                        "a3e2633dc260c74eb5903797c83286984d880098"
                    ]
                },
                {
                    "command": [
                        "apply FLineIn; trivial.",
                        "VernacExtend",
                        "6e1a9b318c2093116f73fd3494b2084873715aaa"
                    ]
                },
                {
                    "command": [
                        "right; intro; elim (ClockwiseNotCollinear _ _ _ H0).",
                        "VernacExtend",
                        "1a0b5907f34fbc02b30e78d5c5b6103c20eacfec"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBAC; apply FLineIn; trivial.",
                        "VernacExtend",
                        "0fe021131a93268a94555e5c533d3829a79492bd"
                    ]
                },
                {
                    "command": [
                        "left; apply (InFLine F D A); trivial.",
                        "VernacExtend",
                        "0870da510b3ccb5ed8e5b73ede38dd00d25e8e78"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CollinearHalfLine",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "intros; decompose [or] (FourCases A B C); canonize.",
                        "VernacExtend",
                        "b30f501b881f7929cbf5bc21cbd7504e5ade8dd7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ExclusiveTwoCases",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "intros A B C H H0; decompose [or] (ExclusiveFourCases A B C H); canonize.",
                        "VernacExtend",
                        "04a9aa56970509eacca2b60453517844de78e563"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "EquiOrientedSym",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "intros A B C H H0; generalize (EquiOrientedCollinear A B C H0); intro H1.",
                        "VernacExtend",
                        "7f7adb742bd458bcfa7e8fe6e76e18266b793986"
                    ]
                },
                {
                    "command": [
                        "destruct (CollinearHalfLine A B C H1).",
                        "VernacExtend",
                        "6244a8b266b40bde0ba6e3798a6a79a86629c831"
                    ]
                },
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "destruct (ClockwiseExists A B H) as (D, H5).",
                        "VernacExtend",
                        "a51113defa183b6a8f1c3545c3e7a81cd6df2b19"
                    ]
                },
                {
                    "command": [
                        "elim (ClockwiseNotClockwise A C D (H2 D H5)); auto.",
                        "VernacExtend",
                        "d9f4dfa774679ddb295b4e777dd6ed4814781ec5"
                    ]
                },
                {
                    "command": [
                        "destruct (CollinearHalfLine A C B (CollinearACB A B C H1)).",
                        "VernacExtend",
                        "d59699fe908358a4eed29ca869c9972b2c9a65c6"
                    ]
                },
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "destruct (ClockwiseExists A C (sym_not_eq (ClockwiseDistinctAB C A x H1))) as (D, H6).",
                        "VernacExtend",
                        "032389b23bfb607b01956ec78f4000faa186bf8d"
                    ]
                },
                {
                    "command": [
                        "elim (ClockwiseNotClockwise A C D H6); auto.",
                        "VernacExtend",
                        "962001fed994c19024343f6755f4265f3edc136a"
                    ]
                },
                {
                    "command": [
                        "generalizeChange.",
                        "VernacExtend",
                        "d3c977ebf7f2c5588433912c8eb25fd198cbcf67"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "EquiOrientedRev",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "destruct (ExclusiveTwoCases B C A).",
                        "VernacExtend",
                        "a7306b2c64ffd45037ae69ad22e7daca1abe9d41"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBCA; apply BetweenCollinear; canonize.",
                        "VernacExtend",
                        "7b1ee4abeb9b53f746bf2c85db1374b6088d894c"
                    ]
                },
                {
                    "command": [
                        "destruct (ClockwiseExists A B H0) as (D, H3).",
                        "VernacExtend",
                        "bbfd08bb13359a567f3a9c6a2d9fd52d62b2e08b"
                    ]
                },
                {
                    "command": [
                        "elim (ClockwiseNotClockwise A B D); canonize.",
                        "VernacExtend",
                        "9c29a64d55e97742c3a3e58d3972d485bb3cc4e1"
                    ]
                },
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BetweenTransC",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (H1 := BetweenHalfLine A B C H).",
                        "VernacExtend",
                        "0e7b280591f88830cd989b755b1619382131eb54"
                    ]
                },
                {
                    "command": [
                        "assert (H2 := EquiOrientedRev A B C H).",
                        "VernacExtend",
                        "1b6105f4450097b45d36487bbdb129071b808aad"
                    ]
                },
                {
                    "command": [
                        "assert (H3 := BetweenDistinctBC A B C H).",
                        "VernacExtend",
                        "f0e8d2cf944c0511732a7b9aa9affb96d49867f1"
                    ]
                },
                {
                    "command": [
                        "generalizeChange.",
                        "VernacExtend",
                        "d3c977ebf7f2c5588433912c8eb25fd198cbcf67"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BetweenTransA",
            "line_nb": 49,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (BetweenAssocLeft A B C D); auto.",
                        "VernacExtend",
                        "c35f0f23103a6fb5d07ffa55d2558e825a72669a"
                    ]
                },
                {
                    "command": [
                        "apply (BetweenTransC A B C D); auto.",
                        "VernacExtend",
                        "f2b33bf6e8eacc1eac417322b0138cdb9f92caa5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NotFourBetween",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "intros; elim (ClockwiseNotClockwise A M P H).",
                        "VernacExtend",
                        "ad79064d46a80ac8e15c0ce76cdb027047bbad9a"
                    ]
                },
                {
                    "command": [
                        "generalize (EquiOrientedRev A M B H0); generalize (EquiOrientedRev A P C H1); generalize (EquiOrientedRev B Q C H2); generalize (EquiOrientedRev M P Q H3); generalizeChange.",
                        "VernacExtend",
                        "a6c5dfedeb61b4cac5c9895809498cad8bba60c1"
                    ]
                },
                {
                    "command": [
                        "apply H20; apply ClockwiseCAB.",
                        "VernacExtend",
                        "dda9827d1f3e691fbdf4db0c62713b38f5a3074d"
                    ]
                },
                {
                    "command": [
                        "apply H4; apply ClockwiseCAB.",
                        "VernacExtend",
                        "28cddc808c9c4cbcc472d9c567e4da21a5a96023"
                    ]
                },
                {
                    "command": [
                        "apply H15; apply ClockwiseCAB.",
                        "VernacExtend",
                        "2654546f6b3cb369cada39c54b4cde7ce9475722"
                    ]
                },
                {
                    "command": [
                        "apply H3.",
                        "VernacExtend",
                        "fa1602da0db2a348e9fad204067364eaad2a120f"
                    ]
                },
                {
                    "command": [
                        "apply (BetweenDistinctBC M P Q); canonize.",
                        "VernacExtend",
                        "f4a64e88a0d2b04d94e80f3e791f276178508347"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseBCA.",
                        "VernacExtend",
                        "e7539adf2c8cd07fa59fd559f04a69ba2d94aa0b"
                    ]
                },
                {
                    "command": [
                        "apply H9.",
                        "VernacExtend",
                        "d0479838914cfca7017024564d1663cd6466cb01"
                    ]
                },
                {
                    "command": [
                        "apply (BetweenDistinctBC A P C); canonize.",
                        "VernacExtend",
                        "6aebdfe3fd0eb9e8dd4852ad3eb2ea412b968f95"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseCAB; trivial.",
                        "VernacExtend",
                        "c36dbed1788c80bd6bada63e4ef6bd8a5fcebab7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ExclusiveCollinear",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "intros A B C H H0 H1; destruct (ExclusiveTwoCases A B C H0 H1).",
                        "VernacExtend",
                        "9799e35193c27afe6abedd028b954f0281f3237c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "right; split.",
                        "VernacExtend",
                        "7f40e6faa2e8d6f2ee2a39b745aa28054e5d87de"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply EquiOrientedSym; auto.",
                        "VernacExtend",
                        "19a924ba38c259f7e15deb345bbffdeba598d05a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CollinearTrans",
            "line_nb": 74,
            "steps": [
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "destruct (ExclusiveTwoCases A C B); canonize.",
                        "VernacExtend",
                        "144a075a246858dbac45d3c2c9807a3f162ad148"
                    ]
                },
                {
                    "command": [
                        "elim H3; autoClockwise.",
                        "VernacExtend",
                        "356be57dbb7cf443d53978f83da35a733050a444"
                    ]
                },
                {
                    "command": [
                        "elim H2; autoClockwise.",
                        "VernacExtend",
                        "8b2e1b2017be65e5e39225bc31ed549773df6d3e"
                    ]
                },
                {
                    "command": [
                        "destruct (ExclusiveTwoCases A D B); canonize.",
                        "VernacExtend",
                        "f2805c92cf243cba81ccf149d609e6212a75e9b2"
                    ]
                },
                {
                    "command": [
                        "elim H4; autoClockwise.",
                        "VernacExtend",
                        "52eaa7faa4c90cad456dcdfc1ec22155acef7f5c"
                    ]
                },
                {
                    "command": [
                        "elim H0; autoClockwise.",
                        "VernacExtend",
                        "d639bd571571dcbf44c11ef2b305013d26debd9b"
                    ]
                },
                {
                    "command": [
                        "elim H2; apply H5; autoClockwise.",
                        "VernacExtend",
                        "66f50a44a303b1e9632ec716e4e6a51ec11f5efc"
                    ]
                },
                {
                    "command": [
                        "elim H3; apply H5; autoClockwise.",
                        "VernacExtend",
                        "f3830549873a7fbf84d8ca0b7f3c5bcd4f8f1e09"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "MarkChange",
            "line_nb": 85,
            "steps": [
                {
                    "command": [
                        "intros; destruct (Apart C D A H0); split; do 3 red in |- *; intros E H4.",
                        "VernacExtend",
                        "85d878eb3ab8594d3c79f6032f464cf8bff61cae"
                    ]
                },
                {
                    "command": [
                        "apply (CollinearTrans C A D E H3).",
                        "VernacExtend",
                        "cabb8d74ddd04afe396f27dafe61414b84a8a5d6"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBAC; apply (CollinearTrans A B C D H); trivial.",
                        "VernacExtend",
                        "fb948ce0fd5c2c26aeab162edade14ff14c2fdd4"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBAC; apply (CollinearTrans A B C E H); trivial.",
                        "VernacExtend",
                        "8206bbe0cf0b7acfecfe0188164157edd8f42236"
                    ]
                },
                {
                    "command": [
                        "apply (CollinearTrans A C B E (sym_not_eq H3)).",
                        "VernacExtend",
                        "adc31f4dbb91cee6b38a8c13860adeccae2adac6"
                    ]
                },
                {
                    "command": [
                        "apply CollinearACB; trivial.",
                        "VernacExtend",
                        "19acd3809efc67282b9add0753900c2a11f9cd0d"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBAC; apply (CollinearTrans C D A E H0).",
                        "VernacExtend",
                        "971c01553a973940c5786bc33392bdadb57a5ad5"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBCA; apply (CollinearTrans A B C D H); trivial.",
                        "VernacExtend",
                        "3babe0abc279dc5fc4c5ada82c93640b7facb065"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBAC; apply (CollinearTrans D A C E H3).",
                        "VernacExtend",
                        "35a7663eec550068c0ea466fd08693c55cf760c9"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBAC; apply (CollinearTrans A B D C H); trivial.",
                        "VernacExtend",
                        "677fdacbfdc36583eb94890140e1ecc2c4731594"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBAC; apply (CollinearTrans A B D E H); trivial.",
                        "VernacExtend",
                        "2c8bfab64080f75c1d488edf5739854c3a19dff9"
                    ]
                },
                {
                    "command": [
                        "apply (CollinearTrans A D B E (sym_not_eq H3)).",
                        "VernacExtend",
                        "91beee7ce4c62f0cd317a9660ff48db6b376a5a7"
                    ]
                },
                {
                    "command": [
                        "apply CollinearACB; trivial.",
                        "VernacExtend",
                        "19acd3809efc67282b9add0753900c2a11f9cd0d"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBAC; apply (CollinearTrans D C A E (sym_not_eq H0)).",
                        "VernacExtend",
                        "697450f6780914ed4cd021e86bd6a9d1aef819d9"
                    ]
                },
                {
                    "command": [
                        "apply CollinearCBA; apply (CollinearTrans A B C D H); trivial.",
                        "VernacExtend",
                        "b9284c8541e40f527d0ba35ec4a94339c61c278f"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBAC; trivial.",
                        "VernacExtend",
                        "95d2307e8ea434b68182cdc06a32f43da4c9d32f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LineAB",
            "line_nb": 104,
            "steps": [
                {
                    "command": [
                        "intros; assert (H2 := LineSuperimposedAB F D).",
                        "VernacExtend",
                        "c269c4a61ca74be963013aa4c5e7e369a94b4379"
                    ]
                },
                {
                    "command": [
                        "apply SuperimposedTrans with (F2 := Collinear (LineA F D) (LineB F D)); auto.",
                        "VernacExtend",
                        "a9771be83f9f5b91217b041571cc20187be0cc2b"
                    ]
                },
                {
                    "command": [
                        "inversion H2; apply MarkChange; auto.",
                        "VernacExtend",
                        "dfcc9452775e9cdbbdba71e90c0f4245abee20e3"
                    ]
                },
                {
                    "command": [
                        "apply LineH.",
                        "VernacExtend",
                        "eea30bbc11cac710cff5ed337fc8acc1cd3bd3a4"
                    ]
                },
                {
                    "command": [
                        "apply H3; auto.",
                        "VernacExtend",
                        "22ff15660c2558c792e23d36c3bbf8c255cb56ba"
                    ]
                },
                {
                    "command": [
                        "apply H3; auto.",
                        "VernacExtend",
                        "22ff15660c2558c792e23d36c3bbf8c255cb56ba"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}