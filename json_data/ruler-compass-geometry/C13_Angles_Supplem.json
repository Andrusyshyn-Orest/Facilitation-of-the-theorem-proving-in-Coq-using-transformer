{
    "filename": "C13_Angles_Supplem.v",
    "coq_project": "ruler-compass-geometry",
    "vernac_cmds": [
        [
            "Require Export C12_Angles_Opposes.",
            "VernacRequire",
            "183da950fe6cd3ef0e80a793b7a877e3926b3077"
        ],
        [
            "Section SUPPLEMENTARY_ANGLES.",
            "VernacBeginSection",
            "6832c64619e4c91e1cfc446f885cdad586e94180"
        ],
        [
            "Definition Supplementary (alpha beta : AS) := exists A : Point, exists B : Point, exists C : Point, exists D : Point, A <> C /\\ Between B A D /\\ Angle B A C = alpha /\\ Angle C A D = beta.",
            "VernacDefinition",
            "cfeb54e8a419e6ad8f3daa65f82571c76f16a8c4"
        ],
        [
            "Lemma SupplementaryCommut : forall alpha beta : AS, Supplementary alpha beta -> Supplementary beta alpha.",
            "VernacStartTheoremProof",
            "afd8250a1b688ffe1ec060e8d3878283bbf98758"
        ],
        [
            "unfold Supplementary in |- *; intros alpha beta (A, (B, (C, (D, (H0, (H1, (H2, H3))))))).",
            "VernacExtend",
            "e921d5d575f283288081b9adc6d6a9a1b7f652fe"
        ],
        [
            "exists A; exists D; exists C; exists B; intuition.",
            "VernacExtend",
            "81abef8939bbf3f3337d3e91912c8fd6bdcdfd55"
        ],
        [
            "apply BetweenSym; trivial.",
            "VernacExtend",
            "4b64e2e034d8805eeb392d09c64cc0f02b3100e4"
        ],
        [
            "rewrite AngleSym.",
            "VernacExtend",
            "61bae63dd4924d748abf43be2b138a8af18fe753"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply (BetweenDistinctBC _ _ _ H1).",
            "VernacExtend",
            "8e70f495e93dd9b07db5780e05efc99f21ee565e"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "rewrite AngleSym.",
            "VernacExtend",
            "61bae63dd4924d748abf43be2b138a8af18fe753"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply (sym_not_eq (BetweenDistinctAB _ _ _ H1)).",
            "VernacExtend",
            "9eb7a8ef55a703778c60f3524de9f81142dd546e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma HalfLineBetweenBetween : forall A B C D : Point, Between A C D -> HalfLine C A B -> Between B C D.",
            "VernacStartTheoremProof",
            "87a80723c88a401a31b6fef3784599d142859ab6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply BetweenSym; apply (BetweenHalfLineBetween D C A B).",
            "VernacExtend",
            "fbc3250fb57c64d67541fc1fedcfc8e5fa15f76f"
        ],
        [
            "apply BetweenSym; trivial.",
            "VernacExtend",
            "4b64e2e034d8805eeb392d09c64cc0f02b3100e4"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma SupplementBC : forall A B C D A' B' C' D' : Point, A <> C -> A' <> C' -> B <> C -> Between B A D -> Between B' A' D' -> Angle B A C = Angle B' A' C' -> Angle C A D = Angle C' A' D'.",
            "VernacStartTheoremProof",
            "879e7f0b6795856a5b1a506f67144ffd268d3e3c"
        ],
        [
            "intros A B C D A' B' C' D' dAC dA'C' dBC H0 H1 H2.",
            "VernacExtend",
            "b8bded43898d41360a2479a52ce7b787bfad7fc2"
        ],
        [
            "assert (dAB := sym_not_eq (BetweenDistinctAB _ _ _ H0)).",
            "VernacExtend",
            "3ceaa428e33e4e7fe4325cace1f2718e15a92de0"
        ],
        [
            "assert (dA'B' := sym_not_eq (BetweenDistinctAB _ _ _ H1)).",
            "VernacExtend",
            "e7f8f273c02525569d4fa7eb8a29263e12970a65"
        ],
        [
            "destruct (ExistsHalfLineEquidistant A' B' A B dA'B' dAB) as (B'', (H3, H4)).",
            "VernacExtend",
            "d45a175032d9f71ab2a9eca4de25d6b99d2954e0"
        ],
        [
            "destruct (ExistsHalfLineEquidistant A' C' A C dA'C' dAC) as (C'', (H5, H6)).",
            "VernacExtend",
            "295001431f50e00785695048225fc920977e36be"
        ],
        [
            "assert (dAD := BetweenDistinctBC _ _ _ H0).",
            "VernacExtend",
            "d5d4ad6e5f28e4a9220c6318c445b5f4ad455eb9"
        ],
        [
            "assert (dA'D' := BetweenDistinctBC _ _ _ H1).",
            "VernacExtend",
            "9b5bcb968be11cb2862722e5fbc302876dc84dcc"
        ],
        [
            "destruct (ExistsHalfLineEquidistant A' D' A D dA'D' dAD) as (D'', (H7, H8)).",
            "VernacExtend",
            "42605430f16e165cbdf1b41b9d0d35c4b44311a5"
        ],
        [
            "rewrite (HalfLineAngleBC A' C' D' C'' D'' dA'C' dA'D' H5 H7).",
            "VernacExtend",
            "67c3a0da8cddfec6f4c219e5795c52b72fd7c8e3"
        ],
        [
            "apply (CongruentSSS A C D A' C'' D'' dAC dAD (sym_eq H6) (sym_eq H8)).",
            "VernacExtend",
            "421c806b68140350ba0ffb1fd7f64fb01ebe0899"
        ],
        [
            "assert (dBD := sym_not_eq (BetweenDistinctCA _ _ _ H0)).",
            "VernacExtend",
            "0727a7e979c7df82e774ee26f154c65fe9cae6e6"
        ],
        [
            "assert (H9 : Distance B C = Distance B'' C'').",
            "VernacExtend",
            "ac5c3a38021af169aa9523e6a99f7f0ed864ac6c"
        ],
        [
            "apply (CongruentSAS A B C A' B'' C'' dAB dAC (sym_eq H4) (sym_eq H6)).",
            "VernacExtend",
            "2d15625c0a4d7895175e396a8c0dd2710613f11d"
        ],
        [
            "rewrite H2; apply (HalfLineAngleBC A' B' C' B'' C'' dA'B' dA'C' H3 H5).",
            "VernacExtend",
            "6b28bff29a9529ff5060fc7273c0c0c8395e6ae8"
        ],
        [
            "assert (H10 : Distance B D = Distance B'' D'').",
            "VernacExtend",
            "c4f462d5dc53cf72aa91e3ed0ae7e254131532e8"
        ],
        [
            "rewrite <- (ChaslesBetween B A D H0).",
            "VernacExtend",
            "39533631b4a57652edee271f0fbc910b4a28e709"
        ],
        [
            "rewrite (DistSym B A); rewrite <- H4.",
            "VernacExtend",
            "6da057cd0fd2cff783ab93475ac28ac85a612ea2"
        ],
        [
            "rewrite <- H8; rewrite (DistSym A' B'').",
            "VernacExtend",
            "e07b9ca5d2aa89352a37aa101fea855a569c2555"
        ],
        [
            "apply ChaslesBetween.",
            "VernacExtend",
            "19f7a2b57f136bcf06da67cb16f53fddfc37810f"
        ],
        [
            "apply (BetweenHalfLineBetween B'' A' D' D'').",
            "VernacExtend",
            "98404144de04033b53ffa3a2dec3a3384bfaed6f"
        ],
        [
            "apply (HalfLineBetweenBetween B'); trivial.",
            "VernacExtend",
            "b897d113603df58d7b30827448191c17964f76bc"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply (CongruentSAS B C D B'' C'' D'' dBC dBD H9 H10).",
            "VernacExtend",
            "d756558e0041264b0ee5620e343f9ac0ddfa2ba1"
        ],
        [
            "rewrite (HalfLineAngleC B C D A dBC dBD).",
            "VernacExtend",
            "4588330138a6a74217f22ec46706bca0a753112c"
        ],
        [
            "rewrite (HalfLineAngleC B'' C'' D'' A').",
            "VernacExtend",
            "6182dfd82492f2a69c7f023fcda077ad7a26d4e3"
        ],
        [
            "apply (CongruentSSS B C A B'' C'' A' dBC (sym_not_eq dAB) H9).",
            "VernacExtend",
            "9030421f4b8d24fe784efe9cff4dce6e862ed95a"
        ],
        [
            "autoDistance.",
            "VernacExtend",
            "0c749375e926c665509e5f0134261461e6f9bac3"
        ],
        [
            "autoDistance.",
            "VernacExtend",
            "0c749375e926c665509e5f0134261461e6f9bac3"
        ],
        [
            "apply (EquiDistantDistinct B C B'' C'' dBC H9).",
            "VernacExtend",
            "f8e030e872de7a9d30451d66ff24fc5507d80af5"
        ],
        [
            "apply (EquiDistantDistinct B D B'' D'' dBD H10).",
            "VernacExtend",
            "2f11983e9016975a09274d66a1e349a1968b6c52"
        ],
        [
            "apply (HalfLineSym B'' A' D'' (sym_not_eq (EquiDistantDistinct A B A' B'' dAB (sym_eq H4)))).",
            "VernacExtend",
            "1a492ab048a9668d65993fdd7c70d1e8069ffd5e"
        ],
        [
            "apply BetweenHalfLine.",
            "VernacExtend",
            "3c93dbed995fc9420a15b07d8cdcb4c080af4de0"
        ],
        [
            "apply (BetweenHalfLineBetween B'' A' D' D'').",
            "VernacExtend",
            "98404144de04033b53ffa3a2dec3a3384bfaed6f"
        ],
        [
            "apply (HalfLineBetweenBetween B'); trivial.",
            "VernacExtend",
            "b897d113603df58d7b30827448191c17964f76bc"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply (HalfLineSym B A D (sym_not_eq dAB)).",
            "VernacExtend",
            "82609e012edc64647733f6969e2a909c815f8c2e"
        ],
        [
            "apply BetweenHalfLine; auto.",
            "VernacExtend",
            "a3e71f5f17166f0ad4d791e8330911a578fd4f96"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Supplement : forall A B C D A' B' C' D' : Point, A <> C -> A' <> C' -> Between B A D -> Between B' A' D' -> Angle B A C = Angle B' A' C' -> Angle C A D = Angle C' A' D'.",
            "VernacStartTheoremProof",
            "dd09bace26f050203fd0409b1ba47b59c864671f"
        ],
        [
            "intros A B C D A' B' C' D' dAC dA'C' H0 H1 H2.",
            "VernacExtend",
            "7f88957aa89260d14f41e95f4cb80a897369e65b"
        ],
        [
            "assert (dAB := sym_not_eq (BetweenDistinctAB _ _ _ H0)).",
            "VernacExtend",
            "3ceaa428e33e4e7fe4325cace1f2718e15a92de0"
        ],
        [
            "destruct (CentralSymetPoint A B dAB) as (B'', (H3, H4)).",
            "VernacExtend",
            "43e71c97637ef83e2a2d279614e04398ea0f6e55"
        ],
        [
            "assert (dBB'' := BetweenDistinctBC A B B'' H4).",
            "VernacExtend",
            "931341fd92475fbb519d8c9863dce4a7850f58a7"
        ],
        [
            "destruct (Apart B B'' C dBB'').",
            "VernacExtend",
            "40c0a271f299518834c00fcb35e442659ee12657"
        ],
        [
            "apply (SupplementBC A B C D A' B' C' D' dAC dA'C' H H0 H1 H2).",
            "VernacExtend",
            "04add8dae740711f0ca2701b72249bb871ab44e6"
        ],
        [
            "apply (SupplementBC A B'' C D A' B' C' D' dAC dA'C' H).",
            "VernacExtend",
            "1dec92de6632b6543da84c6a40cad6a0b8e0969d"
        ],
        [
            "apply (BetweenAssocRight B'' B A D (BetweenSym A B B'' H4) H0).",
            "VernacExtend",
            "8b3b3c16c0774ffe7dfb43b3137dc4ad6943bc06"
        ],
        [
            "exact H1.",
            "VernacExtend",
            "c03ab82d1e411e1dcd211c59917a4946e039be00"
        ],
        [
            "rewrite <- (HalfLineAngleB A B C B'' dAB dAC).",
            "VernacExtend",
            "34010277a15afa71cfd30eb3c8da682302bc5150"
        ],
        [
            "exact H2.",
            "VernacExtend",
            "6cf1ccd4f667f962fca87ce20ad22b06c15c53ad"
        ],
        [
            "apply BetweenHalfLine; auto.",
            "VernacExtend",
            "a3e71f5f17166f0ad4d791e8330911a578fd4f96"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma SupplementaryEq : forall alpha beta gamma : AS, Supplementary alpha beta -> Supplementary alpha gamma -> beta = gamma.",
            "VernacStartTheoremProof",
            "e13f1116c315fc0f470cd5e44e6d78b6733d338d"
        ],
        [
            "unfold Supplementary in |- *; intros alpha beta gamma (A, (B, (C, (D, (H0, (H1, (H2, H3))))))) (A', (B', (C', (D', (H4, (H5, (H6, H7))))))).",
            "VernacExtend",
            "b88277adb3708eede84e515dd87370bff36f57fc"
        ],
        [
            "rewrite <- H3; rewrite <- H7.",
            "VernacExtend",
            "a8de5e084f804ac99df1a08fcce013765684326b"
        ],
        [
            "apply (Supplement A B C D A' B' C' D' H0 H4 H1 H5).",
            "VernacExtend",
            "0bb1b9a5020b469a451ecf170d6d94fce41db702"
        ],
        [
            "subst; auto.",
            "VernacExtend",
            "0dfc636d3b0c9fb40074fb6c1c1b90bf77fecdc8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma OpposedAtVertex : forall A B C D E : Point, Between B A D -> Between C A E -> Angle B A C = Angle D A E.",
            "VernacStartTheoremProof",
            "e4b5036f564f4f44d1a24e375d53892d38af43b6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (dAB := sym_not_eq (BetweenDistinctAB _ _ _ H)).",
            "VernacExtend",
            "c529d877bbc39e8aed8e92a54ed8500d4808e7ef"
        ],
        [
            "assert (dAC := sym_not_eq (BetweenDistinctAB _ _ _ H0)).",
            "VernacExtend",
            "2072e4b045b2a288f9bea373c882751b2606e51d"
        ],
        [
            "rewrite (AngleSym A B C dAB dAC).",
            "VernacExtend",
            "aae5ae4c7f68d84001bbf1104205f56f7abcd442"
        ],
        [
            "assert (dAD := BetweenDistinctBC _ _ _ H).",
            "VernacExtend",
            "6fdc38a36b0a0aa7106c8fcff6f575d5fc40eaa7"
        ],
        [
            "apply (Supplement A D C B A C D E dAC dAD).",
            "VernacExtend",
            "9913a27bdefa1f26f2bc7b9d9ac90093ecfe5ad5"
        ],
        [
            "apply BetweenSym; auto.",
            "VernacExtend",
            "70e1636a2f95d466358db9dd47f688a9fcc52ea3"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply AngleSym; auto.",
            "VernacExtend",
            "4972db1f0a5aef44954fe09537a492c88c1ae8fb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CongruentOpposedTriangles : forall A B C D I : Point, Between A I C -> Between B I D -> Distance I A = Distance I C -> Distance I B = Distance I D -> CongruentTriangles A I B C I D.",
            "VernacStartTheoremProof",
            "ff156476feaf501e6ad1cd72e22b47bbe0ad1d70"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply CongruentTrianglesSASB.",
            "VernacExtend",
            "de608b9040300a0e0cb6afb7c87a0a7afae56536"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply OpposedAtVertex; trivial.",
            "VernacExtend",
            "6e1e7f731380ed52939ae067e463ae9deb65fd1d"
        ],
        [
            "apply sym_not_eq; apply (BetweenDistinctAB _ _ _ H).",
            "VernacExtend",
            "1d31c18e62f1442b141a43f40f79fbf97e75b960"
        ],
        [
            "apply sym_not_eq; apply (BetweenDistinctAB _ _ _ H0).",
            "VernacExtend",
            "2de9ccad59f28d4f3aa7f302dd17f4880a4b4363"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma SupplementaryRec : forall A B C D : Point, Clockwise B A C -> Clockwise C A D -> Supplementary (Angle B A C) (Angle C A D) -> Between B A D.",
            "VernacStartTheoremProof",
            "046d214a45527f914c11dc394131bc5c09b5d45a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H1 as (A', (B', (C', (D', (H1, (H2, (H3, H4))))))).",
            "VernacExtend",
            "b6a7dba417fe561d188ed308f3a610ea708d19dc"
        ],
        [
            "destruct (ExistsHalfLineEquidistant A B A' B') as (B'', (H5, H6)).",
            "VernacExtend",
            "cb2de1bff9ee1afc14498c98d70ec2b47df44715"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "apply sym_not_eq; apply (BetweenDistinctAB _ _ _ H2).",
            "VernacExtend",
            "7ca71fbebd7cbb4d807211b07c77bd9438fe39c5"
        ],
        [
            "destruct (ExistsHalfLineEquidistant A C A' C') as (C'', (H7, H8)).",
            "VernacExtend",
            "8cb12bafdfe33258c0c3e2115db41aa29e098581"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "destruct (ExistsHalfLineEquidistant A D A' D') as (D'', (H9, H10)).",
            "VernacExtend",
            "5388398c110080304cf8632ec69722beee1c6691"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "apply (BetweenDistinctBC _ _ _ H2).",
            "VernacExtend",
            "b50df1e6aad5dab6da130565c650cbde2b23eb81"
        ],
        [
            "destruct (ExistsBetweenEquidistant A B A' D') as (E, (H11, H12)).",
            "VernacExtend",
            "880745bc5aee0127aeab7ee40e8f3249e5bbb559"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "apply (BetweenDistinctBC _ _ _ H2).",
            "VernacExtend",
            "b50df1e6aad5dab6da130565c650cbde2b23eb81"
        ],
        [
            "assert (CongruentStrictTriangles B'' A C'' B' A' C').",
            "VernacExtend",
            "b1df76c13aace68f19087af826b35c7c337f0704"
        ],
        [
            "apply CongruentStrictTrianglesSASB.",
            "VernacExtend",
            "f063c955ddd8dc31e2fc8d07b86cefdea5e87e5e"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "rewrite H3; apply sym_eq; apply HalfLineAngleBC.",
            "VernacExtend",
            "11d4f1c080937561c94ed90a01d585ede0df19e3"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "intro; elim (ClockwiseNotCollinear _ _ _ H).",
            "VernacExtend",
            "d39332ee99633f19ef14faf05276d09e10eaae23"
        ],
        [
            "apply CollinearBAC; apply (CollinearTrans A B'' B C).",
            "VernacExtend",
            "47534de9cad71cd929349005ac2874267e7c1645"
        ],
        [
            "apply (EquiDistantDistinct A' B' A B'').",
            "VernacExtend",
            "ce2bfafb93800c4f8249d65e4c57ad9982e245be"
        ],
        [
            "apply sym_not_eq; apply (BetweenDistinctAB _ _ _ H2).",
            "VernacExtend",
            "7ca71fbebd7cbb4d807211b07c77bd9438fe39c5"
        ],
        [
            "autoDistance.",
            "VernacExtend",
            "0c749375e926c665509e5f0134261461e6f9bac3"
        ],
        [
            "apply CollinearACB; apply (HalfLineCollinear _ _ _ H5).",
            "VernacExtend",
            "f46a8dc91e696fb6534024e2f4c5da203970b3dc"
        ],
        [
            "apply CollinearACB; apply (CollinearTrans A C'').",
            "VernacExtend",
            "d67072e023b28d25a275ace76124a245ef80f063"
        ],
        [
            "apply (EquiDistantDistinct A' C' A C''); auto.",
            "VernacExtend",
            "cec93a0d3b4bc1db6efb9f6d04af2879ba392abc"
        ],
        [
            "apply CollinearACB; apply (HalfLineCollinear _ _ _ H7).",
            "VernacExtend",
            "eb086b2e53094e56cfc663c722f1967f42723163"
        ],
        [
            "autoCollinear.",
            "VernacExtend",
            "f9b5517305c4ea7b3088acc38c4b180fb95147f1"
        ],
        [
            "assert (CongruentStrictTriangles B'' E C'' B' D' C').",
            "VernacExtend",
            "1902cc11a0cdb68ac8a1f487ea4adc50cb948987"
        ],
        [
            "apply CongruentStrictTrianglesSASA.",
            "VernacExtend",
            "eed8d6d20c117025cee48565ebf8ee590f5b8f75"
        ],
        [
            "rewrite <- (ChaslesBetween B'' A E).",
            "VernacExtend",
            "3d9ba80eadeef2fd8709bf75f20627e1c41a3e6a"
        ],
        [
            "rewrite (DistSym B'' A); rewrite H12; rewrite H6.",
            "VernacExtend",
            "10af85c9adbf71e7577b5f8eaa41b86dc7c89737"
        ],
        [
            "rewrite (DistSym A' B'); apply ChaslesBetween; auto.",
            "VernacExtend",
            "85b0cff692fec3acdddc73a33285db5e6c664ad4"
        ],
        [
            "apply BetweenSym; apply (BetweenHalfLineBetween E A B B''); trivial.",
            "VernacExtend",
            "e871f2eb5b32d2b8112849fd79e8e8b2d1d15ad2"
        ],
        [
            "rewrite (DistSym B'' C''); rewrite (DistSym B' C').",
            "VernacExtend",
            "8b56e85d4d0195fea5429939a0358ce1382d797d"
        ],
        [
            "apply (CongruentStrictTrianglesCA _ _ _ _ _ _ H13).",
            "VernacExtend",
            "005ff9fb46fbcf880c9168ef61057eed9556d7d7"
        ],
        [
            "apply trans_eq with (y := Angle A B'' C'').",
            "VernacExtend",
            "44b64d083dfff77d2fb67a9fb23c95cae10cf30b"
        ],
        [
            "apply HalfLineAngleB.",
            "VernacExtend",
            "1b8b2eb55cb34a1ed564e9765a4863c2dc608f5d"
        ],
        [
            "intro; subst; canonize.",
            "VernacExtend",
            "6608c81c4b3699659e437b584fd3cbab4d9424fc"
        ],
        [
            "destruct (ClockwiseExists E A H2) as (F, H17).",
            "VernacExtend",
            "5e2fb501fc994acb422c4c04b501a998651a5853"
        ],
        [
            "elim (ClockwiseNotClockwise _ _ _ H17); auto.",
            "VernacExtend",
            "b8c0e01d10bb7c566ba6d54c754b34654a425be0"
        ],
        [
            "intro; subst; elim (ClockwiseNotCollinear _ _ _ H).",
            "VernacExtend",
            "436ec6c5abc7ac4f334db4960a6e910aba51a1c9"
        ],
        [
            "apply CollinearBAC; apply (CollinearTrans A C'').",
            "VernacExtend",
            "f9e2697033e8cd64767b013817ae927cba6babc2"
        ],
        [
            "apply (EquiDistantDistinct A' C' A C''); auto.",
            "VernacExtend",
            "cec93a0d3b4bc1db6efb9f6d04af2879ba392abc"
        ],
        [
            "apply CollinearACB; apply (HalfLineCollinear _ _ _ H5).",
            "VernacExtend",
            "f46a8dc91e696fb6534024e2f4c5da203970b3dc"
        ],
        [
            "apply CollinearACB; apply (HalfLineCollinear _ _ _ H7).",
            "VernacExtend",
            "eb086b2e53094e56cfc663c722f1967f42723163"
        ],
        [
            "apply HalfLineSym.",
            "VernacExtend",
            "db45086aeefcf4852d4438b9e7f1c2f7046818c7"
        ],
        [
            "apply sym_not_eq; apply (HalfLineDistinct A B B'').",
            "VernacExtend",
            "44ac368bdb9410baf151d26e4b0d47f38e42bdb5"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply BetweenHalfLine.",
            "VernacExtend",
            "3c93dbed995fc9420a15b07d8cdcb4c080af4de0"
        ],
        [
            "apply (HalfLineBetweenBetween B).",
            "VernacExtend",
            "ec6ecffc8420bdfbd93d6a48c699c6ab7e2f07b6"
        ],
        [
            "apply BetweenSym; trivial.",
            "VernacExtend",
            "4b64e2e034d8805eeb392d09c64cc0f02b3100e4"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply trans_eq with (y := Angle A' B' C').",
            "VernacExtend",
            "e4268e5af42d2ee50edf255fd83c49ceeac470d4"
        ],
        [
            "apply CongruentStrictTrianglesA; trivial.",
            "VernacExtend",
            "6416663ee4b5e2feea0af5ab533e59c833ae3619"
        ],
        [
            "apply HalfLineAngleB.",
            "VernacExtend",
            "1b8b2eb55cb34a1ed564e9765a4863c2dc608f5d"
        ],
        [
            "apply (BetweenDistinctAB _ _ _ H2).",
            "VernacExtend",
            "927be2dacbf4868753b2f2292bcd3706bd6a5182"
        ],
        [
            "intro; subst.",
            "VernacExtend",
            "9021e22274b6259ff513a190b208a4a3aa9b2ede"
        ],
        [
            "elim (ClockwiseNotCollinear _ _ _ H).",
            "VernacExtend",
            "2bf46b9516d161aa398e89706af46860e26a0e3c"
        ],
        [
            "apply CollinearBAC; apply HalfLineCollinear.",
            "VernacExtend",
            "133317c052c26b0f7a65d21390a672ac3f76125f"
        ],
        [
            "apply NullAngleHalfLine.",
            "VernacExtend",
            "37c317c2e77c271a7594e93fda05877c11a4b63b"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "rewrite <- H3; apply NullAngle.",
            "VernacExtend",
            "eb37573da540f126611570471ad02a154a3becdc"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "apply BetweenHalfLine; trivial.",
            "VernacExtend",
            "a50bf0ba508d8472d7e808e2d960b71aa16ac730"
        ],
        [
            "intro; destruct H13.",
            "VernacExtend",
            "dbb62445e8c8ae5cee2fd21cb2e076ed3a1b24ed"
        ],
        [
            "elim H15; apply (CollinearTrans B'' E).",
            "VernacExtend",
            "f30253ead9d1a346ec39e0553e193d8ac30d78e1"
        ],
        [
            "intro; subst; canonize.",
            "VernacExtend",
            "6608c81c4b3699659e437b584fd3cbab4d9424fc"
        ],
        [
            "destruct (ClockwiseExists E A H2) as (F, H20).",
            "VernacExtend",
            "e00245b952b0dabc6ed2e0e2cd8bd75d69edd735"
        ],
        [
            "elim (ClockwiseNotClockwise _ _ _ H20); auto.",
            "VernacExtend",
            "45c3f824d599d696946da5521190dc11ceb59e6b"
        ],
        [
            "apply CollinearBCA; apply (CollinearTrans A B).",
            "VernacExtend",
            "bb6d555347b60d05452af6503f248a7369d450e7"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "apply (HalfLineCollinear _ _ _ H5).",
            "VernacExtend",
            "b71e026033518e0f589745a662e7554e93bd5aa5"
        ],
        [
            "apply CollinearBCA; apply (BetweenCollinear _ _ _ H11).",
            "VernacExtend",
            "082e818a36c199ec199d46d625277c8ed24debe2"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "assert (E = D'').",
            "VernacExtend",
            "3fc0e8263514c332cb0b364aed60d5c94ad5b21b"
        ],
        [
            "apply (SSSEqualCD C'' A).",
            "VernacExtend",
            "ebd2019a5644f17efbe638f966eee465243de3f1"
        ],
        [
            "clear H5 H2 H9; generalizeChange.",
            "VernacExtend",
            "befc7821a9aa577abbcc0be87c1dc1fc74d4124d"
        ],
        [
            "apply H15; apply ClockwiseCAB; apply H17; trivial.",
            "VernacExtend",
            "c602be7fe86829e2128d425ee4d39b638d89466a"
        ],
        [
            "clear H2 H5 H11; generalizeChangeSense.",
            "VernacExtend",
            "bf019c8d444a7cb5204bfcabbb51f7ae86301ddb"
        ],
        [
            "apply H2; apply ClockwiseCAB; apply H9; autoClockwise.",
            "VernacExtend",
            "ad46b90713a26e6c72f9d136651649525d8f43ef"
        ],
        [
            "apply trans_eq with (y := Distance C' D').",
            "VernacExtend",
            "db33fb3ae9f31b082f48ded58c0900ee2a63b10c"
        ],
        [
            "apply (CongruentStrictTrianglesBC _ _ _ _ _ _ (CongruentStrictTrianglesACB _ _ _ _ _ _ H14)).",
            "VernacExtend",
            "f07099669a96e7c57512cc0186f231fb6ace0738"
        ],
        [
            "assert (CongruentStrictTriangles C'' A D'' C' A' D').",
            "VernacExtend",
            "5541750d8e45b8e7bc87984b5396a8c8574daee0"
        ],
        [
            "apply CongruentStrictTrianglesSASB.",
            "VernacExtend",
            "f063c955ddd8dc31e2fc8d07b86cefdea5e87e5e"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "rewrite H4; apply sym_eq; apply HalfLineAngleBC.",
            "VernacExtend",
            "7cc5ea88dea7f46fffd6d52bfb126614d6051432"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "intro; elim (ClockwiseNotCollinear _ _ _ H0).",
            "VernacExtend",
            "3b7ae864f3b13c88a399ddc484cf66382fd22248"
        ],
        [
            "apply CollinearBAC; apply (CollinearTrans A C'').",
            "VernacExtend",
            "f9e2697033e8cd64767b013817ae927cba6babc2"
        ],
        [
            "apply (EquiDistantDistinct A' C'); auto.",
            "VernacExtend",
            "d5408c95f73e7139da7d133cbe130fc98610e843"
        ],
        [
            "apply CollinearACB; apply (HalfLineCollinear _ _ _ H7).",
            "VernacExtend",
            "eb086b2e53094e56cfc663c722f1967f42723163"
        ],
        [
            "apply (CollinearTrans A D'').",
            "VernacExtend",
            "10d68648d61130965735840b2ff5205f3151ff77"
        ],
        [
            "apply (EquiDistantDistinct A' D').",
            "VernacExtend",
            "9bb2d545b4acbd4aa63557af0c626701c1b126ef"
        ],
        [
            "apply (BetweenDistinctBC _ _ _ H2).",
            "VernacExtend",
            "b50df1e6aad5dab6da130565c650cbde2b23eb81"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "autoCollinear.",
            "VernacExtend",
            "f9b5517305c4ea7b3088acc38c4b180fb95147f1"
        ],
        [
            "apply CollinearACB; apply (HalfLineCollinear _ _ _ H9).",
            "VernacExtend",
            "cb77104f8e53cf96bd5067a63e9e121d03fd399f"
        ],
        [
            "apply sym_eq; apply (CongruentStrictTrianglesCA _ _ _ _ _ _ (CongruentStrictTrianglesCBA _ _ _ _ _ _ H15)).",
            "VernacExtend",
            "7c20d63a3e136980ce7c0f37ef2d59e1537c6bca"
        ],
        [
            "autoDistance.",
            "VernacExtend",
            "0c749375e926c665509e5f0134261461e6f9bac3"
        ],
        [
            "apply (BetweenHalfLineBetween B A D'').",
            "VernacExtend",
            "727fdfcf5c1b35a0e57565d3aa4d5235bdc541c2"
        ],
        [
            "subst; apply (BetweenSym _ _ _ H11).",
            "VernacExtend",
            "6c735f013838302d2a9b5afe7cc676356d089595"
        ],
        [
            "apply HalfLineSym.",
            "VernacExtend",
            "db45086aeefcf4852d4438b9e7f1c2f7046818c7"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End SUPPLEMENTARY_ANGLES.",
            "VernacEndSegment",
            "5ad6c829e8a3791cd00a6866ea921ff40954d5b8"
        ]
    ],
    "proofs": [
        {
            "name": "SupplementaryCommut",
            "line_nb": 3,
            "steps": [
                {
                    "command": [
                        "unfold Supplementary in |- *; intros alpha beta (A, (B, (C, (D, (H0, (H1, (H2, H3))))))).",
                        "VernacExtend",
                        "e921d5d575f283288081b9adc6d6a9a1b7f652fe"
                    ]
                },
                {
                    "command": [
                        "exists A; exists D; exists C; exists B; intuition.",
                        "VernacExtend",
                        "81abef8939bbf3f3337d3e91912c8fd6bdcdfd55"
                    ]
                },
                {
                    "command": [
                        "apply BetweenSym; trivial.",
                        "VernacExtend",
                        "4b64e2e034d8805eeb392d09c64cc0f02b3100e4"
                    ]
                },
                {
                    "command": [
                        "rewrite AngleSym.",
                        "VernacExtend",
                        "61bae63dd4924d748abf43be2b138a8af18fe753"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply (BetweenDistinctBC _ _ _ H1).",
                        "VernacExtend",
                        "8e70f495e93dd9b07db5780e05efc99f21ee565e"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "rewrite AngleSym.",
                        "VernacExtend",
                        "61bae63dd4924d748abf43be2b138a8af18fe753"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply (sym_not_eq (BetweenDistinctAB _ _ _ H1)).",
                        "VernacExtend",
                        "9eb7a8ef55a703778c60f3524de9f81142dd546e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "HalfLineBetweenBetween",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply BetweenSym; apply (BetweenHalfLineBetween D C A B).",
                        "VernacExtend",
                        "fbc3250fb57c64d67541fc1fedcfc8e5fa15f76f"
                    ]
                },
                {
                    "command": [
                        "apply BetweenSym; trivial.",
                        "VernacExtend",
                        "4b64e2e034d8805eeb392d09c64cc0f02b3100e4"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "SupplementBC",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "intros A B C D A' B' C' D' dAC dA'C' dBC H0 H1 H2.",
                        "VernacExtend",
                        "b8bded43898d41360a2479a52ce7b787bfad7fc2"
                    ]
                },
                {
                    "command": [
                        "assert (dAB := sym_not_eq (BetweenDistinctAB _ _ _ H0)).",
                        "VernacExtend",
                        "3ceaa428e33e4e7fe4325cace1f2718e15a92de0"
                    ]
                },
                {
                    "command": [
                        "assert (dA'B' := sym_not_eq (BetweenDistinctAB _ _ _ H1)).",
                        "VernacExtend",
                        "e7f8f273c02525569d4fa7eb8a29263e12970a65"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsHalfLineEquidistant A' B' A B dA'B' dAB) as (B'', (H3, H4)).",
                        "VernacExtend",
                        "d45a175032d9f71ab2a9eca4de25d6b99d2954e0"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsHalfLineEquidistant A' C' A C dA'C' dAC) as (C'', (H5, H6)).",
                        "VernacExtend",
                        "295001431f50e00785695048225fc920977e36be"
                    ]
                },
                {
                    "command": [
                        "assert (dAD := BetweenDistinctBC _ _ _ H0).",
                        "VernacExtend",
                        "d5d4ad6e5f28e4a9220c6318c445b5f4ad455eb9"
                    ]
                },
                {
                    "command": [
                        "assert (dA'D' := BetweenDistinctBC _ _ _ H1).",
                        "VernacExtend",
                        "9b5bcb968be11cb2862722e5fbc302876dc84dcc"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsHalfLineEquidistant A' D' A D dA'D' dAD) as (D'', (H7, H8)).",
                        "VernacExtend",
                        "42605430f16e165cbdf1b41b9d0d35c4b44311a5"
                    ]
                },
                {
                    "command": [
                        "rewrite (HalfLineAngleBC A' C' D' C'' D'' dA'C' dA'D' H5 H7).",
                        "VernacExtend",
                        "67c3a0da8cddfec6f4c219e5795c52b72fd7c8e3"
                    ]
                },
                {
                    "command": [
                        "apply (CongruentSSS A C D A' C'' D'' dAC dAD (sym_eq H6) (sym_eq H8)).",
                        "VernacExtend",
                        "421c806b68140350ba0ffb1fd7f64fb01ebe0899"
                    ]
                },
                {
                    "command": [
                        "assert (dBD := sym_not_eq (BetweenDistinctCA _ _ _ H0)).",
                        "VernacExtend",
                        "0727a7e979c7df82e774ee26f154c65fe9cae6e6"
                    ]
                },
                {
                    "command": [
                        "assert (H9 : Distance B C = Distance B'' C'').",
                        "VernacExtend",
                        "ac5c3a38021af169aa9523e6a99f7f0ed864ac6c"
                    ]
                },
                {
                    "command": [
                        "apply (CongruentSAS A B C A' B'' C'' dAB dAC (sym_eq H4) (sym_eq H6)).",
                        "VernacExtend",
                        "2d15625c0a4d7895175e396a8c0dd2710613f11d"
                    ]
                },
                {
                    "command": [
                        "rewrite H2; apply (HalfLineAngleBC A' B' C' B'' C'' dA'B' dA'C' H3 H5).",
                        "VernacExtend",
                        "6b28bff29a9529ff5060fc7273c0c0c8395e6ae8"
                    ]
                },
                {
                    "command": [
                        "assert (H10 : Distance B D = Distance B'' D'').",
                        "VernacExtend",
                        "c4f462d5dc53cf72aa91e3ed0ae7e254131532e8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (ChaslesBetween B A D H0).",
                        "VernacExtend",
                        "39533631b4a57652edee271f0fbc910b4a28e709"
                    ]
                },
                {
                    "command": [
                        "rewrite (DistSym B A); rewrite <- H4.",
                        "VernacExtend",
                        "6da057cd0fd2cff783ab93475ac28ac85a612ea2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H8; rewrite (DistSym A' B'').",
                        "VernacExtend",
                        "e07b9ca5d2aa89352a37aa101fea855a569c2555"
                    ]
                },
                {
                    "command": [
                        "apply ChaslesBetween.",
                        "VernacExtend",
                        "19f7a2b57f136bcf06da67cb16f53fddfc37810f"
                    ]
                },
                {
                    "command": [
                        "apply (BetweenHalfLineBetween B'' A' D' D'').",
                        "VernacExtend",
                        "98404144de04033b53ffa3a2dec3a3384bfaed6f"
                    ]
                },
                {
                    "command": [
                        "apply (HalfLineBetweenBetween B'); trivial.",
                        "VernacExtend",
                        "b897d113603df58d7b30827448191c17964f76bc"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply (CongruentSAS B C D B'' C'' D'' dBC dBD H9 H10).",
                        "VernacExtend",
                        "d756558e0041264b0ee5620e343f9ac0ddfa2ba1"
                    ]
                },
                {
                    "command": [
                        "rewrite (HalfLineAngleC B C D A dBC dBD).",
                        "VernacExtend",
                        "4588330138a6a74217f22ec46706bca0a753112c"
                    ]
                },
                {
                    "command": [
                        "rewrite (HalfLineAngleC B'' C'' D'' A').",
                        "VernacExtend",
                        "6182dfd82492f2a69c7f023fcda077ad7a26d4e3"
                    ]
                },
                {
                    "command": [
                        "apply (CongruentSSS B C A B'' C'' A' dBC (sym_not_eq dAB) H9).",
                        "VernacExtend",
                        "9030421f4b8d24fe784efe9cff4dce6e862ed95a"
                    ]
                },
                {
                    "command": [
                        "autoDistance.",
                        "VernacExtend",
                        "0c749375e926c665509e5f0134261461e6f9bac3"
                    ]
                },
                {
                    "command": [
                        "autoDistance.",
                        "VernacExtend",
                        "0c749375e926c665509e5f0134261461e6f9bac3"
                    ]
                },
                {
                    "command": [
                        "apply (EquiDistantDistinct B C B'' C'' dBC H9).",
                        "VernacExtend",
                        "f8e030e872de7a9d30451d66ff24fc5507d80af5"
                    ]
                },
                {
                    "command": [
                        "apply (EquiDistantDistinct B D B'' D'' dBD H10).",
                        "VernacExtend",
                        "2f11983e9016975a09274d66a1e349a1968b6c52"
                    ]
                },
                {
                    "command": [
                        "apply (HalfLineSym B'' A' D'' (sym_not_eq (EquiDistantDistinct A B A' B'' dAB (sym_eq H4)))).",
                        "VernacExtend",
                        "1a492ab048a9668d65993fdd7c70d1e8069ffd5e"
                    ]
                },
                {
                    "command": [
                        "apply BetweenHalfLine.",
                        "VernacExtend",
                        "3c93dbed995fc9420a15b07d8cdcb4c080af4de0"
                    ]
                },
                {
                    "command": [
                        "apply (BetweenHalfLineBetween B'' A' D' D'').",
                        "VernacExtend",
                        "98404144de04033b53ffa3a2dec3a3384bfaed6f"
                    ]
                },
                {
                    "command": [
                        "apply (HalfLineBetweenBetween B'); trivial.",
                        "VernacExtend",
                        "b897d113603df58d7b30827448191c17964f76bc"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply (HalfLineSym B A D (sym_not_eq dAB)).",
                        "VernacExtend",
                        "82609e012edc64647733f6969e2a909c815f8c2e"
                    ]
                },
                {
                    "command": [
                        "apply BetweenHalfLine; auto.",
                        "VernacExtend",
                        "a3e71f5f17166f0ad4d791e8330911a578fd4f96"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Supplement",
            "line_nb": 61,
            "steps": [
                {
                    "command": [
                        "intros A B C D A' B' C' D' dAC dA'C' H0 H1 H2.",
                        "VernacExtend",
                        "7f88957aa89260d14f41e95f4cb80a897369e65b"
                    ]
                },
                {
                    "command": [
                        "assert (dAB := sym_not_eq (BetweenDistinctAB _ _ _ H0)).",
                        "VernacExtend",
                        "3ceaa428e33e4e7fe4325cace1f2718e15a92de0"
                    ]
                },
                {
                    "command": [
                        "destruct (CentralSymetPoint A B dAB) as (B'', (H3, H4)).",
                        "VernacExtend",
                        "43e71c97637ef83e2a2d279614e04398ea0f6e55"
                    ]
                },
                {
                    "command": [
                        "assert (dBB'' := BetweenDistinctBC A B B'' H4).",
                        "VernacExtend",
                        "931341fd92475fbb519d8c9863dce4a7850f58a7"
                    ]
                },
                {
                    "command": [
                        "destruct (Apart B B'' C dBB'').",
                        "VernacExtend",
                        "40c0a271f299518834c00fcb35e442659ee12657"
                    ]
                },
                {
                    "command": [
                        "apply (SupplementBC A B C D A' B' C' D' dAC dA'C' H H0 H1 H2).",
                        "VernacExtend",
                        "04add8dae740711f0ca2701b72249bb871ab44e6"
                    ]
                },
                {
                    "command": [
                        "apply (SupplementBC A B'' C D A' B' C' D' dAC dA'C' H).",
                        "VernacExtend",
                        "1dec92de6632b6543da84c6a40cad6a0b8e0969d"
                    ]
                },
                {
                    "command": [
                        "apply (BetweenAssocRight B'' B A D (BetweenSym A B B'' H4) H0).",
                        "VernacExtend",
                        "8b3b3c16c0774ffe7dfb43b3137dc4ad6943bc06"
                    ]
                },
                {
                    "command": [
                        "exact H1.",
                        "VernacExtend",
                        "c03ab82d1e411e1dcd211c59917a4946e039be00"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (HalfLineAngleB A B C B'' dAB dAC).",
                        "VernacExtend",
                        "34010277a15afa71cfd30eb3c8da682302bc5150"
                    ]
                },
                {
                    "command": [
                        "exact H2.",
                        "VernacExtend",
                        "6cf1ccd4f667f962fca87ce20ad22b06c15c53ad"
                    ]
                },
                {
                    "command": [
                        "apply BetweenHalfLine; auto.",
                        "VernacExtend",
                        "a3e71f5f17166f0ad4d791e8330911a578fd4f96"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "SupplementaryEq",
            "line_nb": 75,
            "steps": [
                {
                    "command": [
                        "unfold Supplementary in |- *; intros alpha beta gamma (A, (B, (C, (D, (H0, (H1, (H2, H3))))))) (A', (B', (C', (D', (H4, (H5, (H6, H7))))))).",
                        "VernacExtend",
                        "b88277adb3708eede84e515dd87370bff36f57fc"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H3; rewrite <- H7.",
                        "VernacExtend",
                        "a8de5e084f804ac99df1a08fcce013765684326b"
                    ]
                },
                {
                    "command": [
                        "apply (Supplement A B C D A' B' C' D' H0 H4 H1 H5).",
                        "VernacExtend",
                        "0bb1b9a5020b469a451ecf170d6d94fce41db702"
                    ]
                },
                {
                    "command": [
                        "subst; auto.",
                        "VernacExtend",
                        "0dfc636d3b0c9fb40074fb6c1c1b90bf77fecdc8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "OpposedAtVertex",
            "line_nb": 81,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (dAB := sym_not_eq (BetweenDistinctAB _ _ _ H)).",
                        "VernacExtend",
                        "c529d877bbc39e8aed8e92a54ed8500d4808e7ef"
                    ]
                },
                {
                    "command": [
                        "assert (dAC := sym_not_eq (BetweenDistinctAB _ _ _ H0)).",
                        "VernacExtend",
                        "2072e4b045b2a288f9bea373c882751b2606e51d"
                    ]
                },
                {
                    "command": [
                        "rewrite (AngleSym A B C dAB dAC).",
                        "VernacExtend",
                        "aae5ae4c7f68d84001bbf1104205f56f7abcd442"
                    ]
                },
                {
                    "command": [
                        "assert (dAD := BetweenDistinctBC _ _ _ H).",
                        "VernacExtend",
                        "6fdc38a36b0a0aa7106c8fcff6f575d5fc40eaa7"
                    ]
                },
                {
                    "command": [
                        "apply (Supplement A D C B A C D E dAC dAD).",
                        "VernacExtend",
                        "9913a27bdefa1f26f2bc7b9d9ac90093ecfe5ad5"
                    ]
                },
                {
                    "command": [
                        "apply BetweenSym; auto.",
                        "VernacExtend",
                        "70e1636a2f95d466358db9dd47f688a9fcc52ea3"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply AngleSym; auto.",
                        "VernacExtend",
                        "4972db1f0a5aef44954fe09537a492c88c1ae8fb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CongruentOpposedTriangles",
            "line_nb": 92,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply CongruentTrianglesSASB.",
                        "VernacExtend",
                        "de608b9040300a0e0cb6afb7c87a0a7afae56536"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply OpposedAtVertex; trivial.",
                        "VernacExtend",
                        "6e1e7f731380ed52939ae067e463ae9deb65fd1d"
                    ]
                },
                {
                    "command": [
                        "apply sym_not_eq; apply (BetweenDistinctAB _ _ _ H).",
                        "VernacExtend",
                        "1d31c18e62f1442b141a43f40f79fbf97e75b960"
                    ]
                },
                {
                    "command": [
                        "apply sym_not_eq; apply (BetweenDistinctAB _ _ _ H0).",
                        "VernacExtend",
                        "2de9ccad59f28d4f3aa7f302dd17f4880a4b4363"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "SupplementaryRec",
            "line_nb": 101,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as (A', (B', (C', (D', (H1, (H2, (H3, H4))))))).",
                        "VernacExtend",
                        "b6a7dba417fe561d188ed308f3a610ea708d19dc"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsHalfLineEquidistant A B A' B') as (B'', (H5, H6)).",
                        "VernacExtend",
                        "cb2de1bff9ee1afc14498c98d70ec2b47df44715"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "apply sym_not_eq; apply (BetweenDistinctAB _ _ _ H2).",
                        "VernacExtend",
                        "7ca71fbebd7cbb4d807211b07c77bd9438fe39c5"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsHalfLineEquidistant A C A' C') as (C'', (H7, H8)).",
                        "VernacExtend",
                        "8cb12bafdfe33258c0c3e2115db41aa29e098581"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsHalfLineEquidistant A D A' D') as (D'', (H9, H10)).",
                        "VernacExtend",
                        "5388398c110080304cf8632ec69722beee1c6691"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "apply (BetweenDistinctBC _ _ _ H2).",
                        "VernacExtend",
                        "b50df1e6aad5dab6da130565c650cbde2b23eb81"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsBetweenEquidistant A B A' D') as (E, (H11, H12)).",
                        "VernacExtend",
                        "880745bc5aee0127aeab7ee40e8f3249e5bbb559"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "apply (BetweenDistinctBC _ _ _ H2).",
                        "VernacExtend",
                        "b50df1e6aad5dab6da130565c650cbde2b23eb81"
                    ]
                },
                {
                    "command": [
                        "assert (CongruentStrictTriangles B'' A C'' B' A' C').",
                        "VernacExtend",
                        "b1df76c13aace68f19087af826b35c7c337f0704"
                    ]
                },
                {
                    "command": [
                        "apply CongruentStrictTrianglesSASB.",
                        "VernacExtend",
                        "f063c955ddd8dc31e2fc8d07b86cefdea5e87e5e"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "rewrite H3; apply sym_eq; apply HalfLineAngleBC.",
                        "VernacExtend",
                        "11d4f1c080937561c94ed90a01d585ede0df19e3"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "intro; elim (ClockwiseNotCollinear _ _ _ H).",
                        "VernacExtend",
                        "d39332ee99633f19ef14faf05276d09e10eaae23"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBAC; apply (CollinearTrans A B'' B C).",
                        "VernacExtend",
                        "47534de9cad71cd929349005ac2874267e7c1645"
                    ]
                },
                {
                    "command": [
                        "apply (EquiDistantDistinct A' B' A B'').",
                        "VernacExtend",
                        "ce2bfafb93800c4f8249d65e4c57ad9982e245be"
                    ]
                },
                {
                    "command": [
                        "apply sym_not_eq; apply (BetweenDistinctAB _ _ _ H2).",
                        "VernacExtend",
                        "7ca71fbebd7cbb4d807211b07c77bd9438fe39c5"
                    ]
                },
                {
                    "command": [
                        "autoDistance.",
                        "VernacExtend",
                        "0c749375e926c665509e5f0134261461e6f9bac3"
                    ]
                },
                {
                    "command": [
                        "apply CollinearACB; apply (HalfLineCollinear _ _ _ H5).",
                        "VernacExtend",
                        "f46a8dc91e696fb6534024e2f4c5da203970b3dc"
                    ]
                },
                {
                    "command": [
                        "apply CollinearACB; apply (CollinearTrans A C'').",
                        "VernacExtend",
                        "d67072e023b28d25a275ace76124a245ef80f063"
                    ]
                },
                {
                    "command": [
                        "apply (EquiDistantDistinct A' C' A C''); auto.",
                        "VernacExtend",
                        "cec93a0d3b4bc1db6efb9f6d04af2879ba392abc"
                    ]
                },
                {
                    "command": [
                        "apply CollinearACB; apply (HalfLineCollinear _ _ _ H7).",
                        "VernacExtend",
                        "eb086b2e53094e56cfc663c722f1967f42723163"
                    ]
                },
                {
                    "command": [
                        "autoCollinear.",
                        "VernacExtend",
                        "f9b5517305c4ea7b3088acc38c4b180fb95147f1"
                    ]
                },
                {
                    "command": [
                        "assert (CongruentStrictTriangles B'' E C'' B' D' C').",
                        "VernacExtend",
                        "1902cc11a0cdb68ac8a1f487ea4adc50cb948987"
                    ]
                },
                {
                    "command": [
                        "apply CongruentStrictTrianglesSASA.",
                        "VernacExtend",
                        "eed8d6d20c117025cee48565ebf8ee590f5b8f75"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (ChaslesBetween B'' A E).",
                        "VernacExtend",
                        "3d9ba80eadeef2fd8709bf75f20627e1c41a3e6a"
                    ]
                },
                {
                    "command": [
                        "rewrite (DistSym B'' A); rewrite H12; rewrite H6.",
                        "VernacExtend",
                        "10af85c9adbf71e7577b5f8eaa41b86dc7c89737"
                    ]
                },
                {
                    "command": [
                        "rewrite (DistSym A' B'); apply ChaslesBetween; auto.",
                        "VernacExtend",
                        "85b0cff692fec3acdddc73a33285db5e6c664ad4"
                    ]
                },
                {
                    "command": [
                        "apply BetweenSym; apply (BetweenHalfLineBetween E A B B''); trivial.",
                        "VernacExtend",
                        "e871f2eb5b32d2b8112849fd79e8e8b2d1d15ad2"
                    ]
                },
                {
                    "command": [
                        "rewrite (DistSym B'' C''); rewrite (DistSym B' C').",
                        "VernacExtend",
                        "8b56e85d4d0195fea5429939a0358ce1382d797d"
                    ]
                },
                {
                    "command": [
                        "apply (CongruentStrictTrianglesCA _ _ _ _ _ _ H13).",
                        "VernacExtend",
                        "005ff9fb46fbcf880c9168ef61057eed9556d7d7"
                    ]
                },
                {
                    "command": [
                        "apply trans_eq with (y := Angle A B'' C'').",
                        "VernacExtend",
                        "44b64d083dfff77d2fb67a9fb23c95cae10cf30b"
                    ]
                },
                {
                    "command": [
                        "apply HalfLineAngleB.",
                        "VernacExtend",
                        "1b8b2eb55cb34a1ed564e9765a4863c2dc608f5d"
                    ]
                },
                {
                    "command": [
                        "intro; subst; canonize.",
                        "VernacExtend",
                        "6608c81c4b3699659e437b584fd3cbab4d9424fc"
                    ]
                },
                {
                    "command": [
                        "destruct (ClockwiseExists E A H2) as (F, H17).",
                        "VernacExtend",
                        "5e2fb501fc994acb422c4c04b501a998651a5853"
                    ]
                },
                {
                    "command": [
                        "elim (ClockwiseNotClockwise _ _ _ H17); auto.",
                        "VernacExtend",
                        "b8c0e01d10bb7c566ba6d54c754b34654a425be0"
                    ]
                },
                {
                    "command": [
                        "intro; subst; elim (ClockwiseNotCollinear _ _ _ H).",
                        "VernacExtend",
                        "436ec6c5abc7ac4f334db4960a6e910aba51a1c9"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBAC; apply (CollinearTrans A C'').",
                        "VernacExtend",
                        "f9e2697033e8cd64767b013817ae927cba6babc2"
                    ]
                },
                {
                    "command": [
                        "apply (EquiDistantDistinct A' C' A C''); auto.",
                        "VernacExtend",
                        "cec93a0d3b4bc1db6efb9f6d04af2879ba392abc"
                    ]
                },
                {
                    "command": [
                        "apply CollinearACB; apply (HalfLineCollinear _ _ _ H5).",
                        "VernacExtend",
                        "f46a8dc91e696fb6534024e2f4c5da203970b3dc"
                    ]
                },
                {
                    "command": [
                        "apply CollinearACB; apply (HalfLineCollinear _ _ _ H7).",
                        "VernacExtend",
                        "eb086b2e53094e56cfc663c722f1967f42723163"
                    ]
                },
                {
                    "command": [
                        "apply HalfLineSym.",
                        "VernacExtend",
                        "db45086aeefcf4852d4438b9e7f1c2f7046818c7"
                    ]
                },
                {
                    "command": [
                        "apply sym_not_eq; apply (HalfLineDistinct A B B'').",
                        "VernacExtend",
                        "44ac368bdb9410baf151d26e4b0d47f38e42bdb5"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply BetweenHalfLine.",
                        "VernacExtend",
                        "3c93dbed995fc9420a15b07d8cdcb4c080af4de0"
                    ]
                },
                {
                    "command": [
                        "apply (HalfLineBetweenBetween B).",
                        "VernacExtend",
                        "ec6ecffc8420bdfbd93d6a48c699c6ab7e2f07b6"
                    ]
                },
                {
                    "command": [
                        "apply BetweenSym; trivial.",
                        "VernacExtend",
                        "4b64e2e034d8805eeb392d09c64cc0f02b3100e4"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply trans_eq with (y := Angle A' B' C').",
                        "VernacExtend",
                        "e4268e5af42d2ee50edf255fd83c49ceeac470d4"
                    ]
                },
                {
                    "command": [
                        "apply CongruentStrictTrianglesA; trivial.",
                        "VernacExtend",
                        "6416663ee4b5e2feea0af5ab533e59c833ae3619"
                    ]
                },
                {
                    "command": [
                        "apply HalfLineAngleB.",
                        "VernacExtend",
                        "1b8b2eb55cb34a1ed564e9765a4863c2dc608f5d"
                    ]
                },
                {
                    "command": [
                        "apply (BetweenDistinctAB _ _ _ H2).",
                        "VernacExtend",
                        "927be2dacbf4868753b2f2292bcd3706bd6a5182"
                    ]
                },
                {
                    "command": [
                        "intro; subst.",
                        "VernacExtend",
                        "9021e22274b6259ff513a190b208a4a3aa9b2ede"
                    ]
                },
                {
                    "command": [
                        "elim (ClockwiseNotCollinear _ _ _ H).",
                        "VernacExtend",
                        "2bf46b9516d161aa398e89706af46860e26a0e3c"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBAC; apply HalfLineCollinear.",
                        "VernacExtend",
                        "133317c052c26b0f7a65d21390a672ac3f76125f"
                    ]
                },
                {
                    "command": [
                        "apply NullAngleHalfLine.",
                        "VernacExtend",
                        "37c317c2e77c271a7594e93fda05877c11a4b63b"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H3; apply NullAngle.",
                        "VernacExtend",
                        "eb37573da540f126611570471ad02a154a3becdc"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "apply BetweenHalfLine; trivial.",
                        "VernacExtend",
                        "a50bf0ba508d8472d7e808e2d960b71aa16ac730"
                    ]
                },
                {
                    "command": [
                        "intro; destruct H13.",
                        "VernacExtend",
                        "dbb62445e8c8ae5cee2fd21cb2e076ed3a1b24ed"
                    ]
                },
                {
                    "command": [
                        "elim H15; apply (CollinearTrans B'' E).",
                        "VernacExtend",
                        "f30253ead9d1a346ec39e0553e193d8ac30d78e1"
                    ]
                },
                {
                    "command": [
                        "intro; subst; canonize.",
                        "VernacExtend",
                        "6608c81c4b3699659e437b584fd3cbab4d9424fc"
                    ]
                },
                {
                    "command": [
                        "destruct (ClockwiseExists E A H2) as (F, H20).",
                        "VernacExtend",
                        "e00245b952b0dabc6ed2e0e2cd8bd75d69edd735"
                    ]
                },
                {
                    "command": [
                        "elim (ClockwiseNotClockwise _ _ _ H20); auto.",
                        "VernacExtend",
                        "45c3f824d599d696946da5521190dc11ceb59e6b"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBCA; apply (CollinearTrans A B).",
                        "VernacExtend",
                        "bb6d555347b60d05452af6503f248a7369d450e7"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "apply (HalfLineCollinear _ _ _ H5).",
                        "VernacExtend",
                        "b71e026033518e0f589745a662e7554e93bd5aa5"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBCA; apply (BetweenCollinear _ _ _ H11).",
                        "VernacExtend",
                        "082e818a36c199ec199d46d625277c8ed24debe2"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "assert (E = D'').",
                        "VernacExtend",
                        "3fc0e8263514c332cb0b364aed60d5c94ad5b21b"
                    ]
                },
                {
                    "command": [
                        "apply (SSSEqualCD C'' A).",
                        "VernacExtend",
                        "ebd2019a5644f17efbe638f966eee465243de3f1"
                    ]
                },
                {
                    "command": [
                        "clear H5 H2 H9; generalizeChange.",
                        "VernacExtend",
                        "befc7821a9aa577abbcc0be87c1dc1fc74d4124d"
                    ]
                },
                {
                    "command": [
                        "apply H15; apply ClockwiseCAB; apply H17; trivial.",
                        "VernacExtend",
                        "c602be7fe86829e2128d425ee4d39b638d89466a"
                    ]
                },
                {
                    "command": [
                        "clear H2 H5 H11; generalizeChangeSense.",
                        "VernacExtend",
                        "bf019c8d444a7cb5204bfcabbb51f7ae86301ddb"
                    ]
                },
                {
                    "command": [
                        "apply H2; apply ClockwiseCAB; apply H9; autoClockwise.",
                        "VernacExtend",
                        "ad46b90713a26e6c72f9d136651649525d8f43ef"
                    ]
                },
                {
                    "command": [
                        "apply trans_eq with (y := Distance C' D').",
                        "VernacExtend",
                        "db33fb3ae9f31b082f48ded58c0900ee2a63b10c"
                    ]
                },
                {
                    "command": [
                        "apply (CongruentStrictTrianglesBC _ _ _ _ _ _ (CongruentStrictTrianglesACB _ _ _ _ _ _ H14)).",
                        "VernacExtend",
                        "f07099669a96e7c57512cc0186f231fb6ace0738"
                    ]
                },
                {
                    "command": [
                        "assert (CongruentStrictTriangles C'' A D'' C' A' D').",
                        "VernacExtend",
                        "5541750d8e45b8e7bc87984b5396a8c8574daee0"
                    ]
                },
                {
                    "command": [
                        "apply CongruentStrictTrianglesSASB.",
                        "VernacExtend",
                        "f063c955ddd8dc31e2fc8d07b86cefdea5e87e5e"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "rewrite H4; apply sym_eq; apply HalfLineAngleBC.",
                        "VernacExtend",
                        "7cc5ea88dea7f46fffd6d52bfb126614d6051432"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "intro; elim (ClockwiseNotCollinear _ _ _ H0).",
                        "VernacExtend",
                        "3b7ae864f3b13c88a399ddc484cf66382fd22248"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBAC; apply (CollinearTrans A C'').",
                        "VernacExtend",
                        "f9e2697033e8cd64767b013817ae927cba6babc2"
                    ]
                },
                {
                    "command": [
                        "apply (EquiDistantDistinct A' C'); auto.",
                        "VernacExtend",
                        "d5408c95f73e7139da7d133cbe130fc98610e843"
                    ]
                },
                {
                    "command": [
                        "apply CollinearACB; apply (HalfLineCollinear _ _ _ H7).",
                        "VernacExtend",
                        "eb086b2e53094e56cfc663c722f1967f42723163"
                    ]
                },
                {
                    "command": [
                        "apply (CollinearTrans A D'').",
                        "VernacExtend",
                        "10d68648d61130965735840b2ff5205f3151ff77"
                    ]
                },
                {
                    "command": [
                        "apply (EquiDistantDistinct A' D').",
                        "VernacExtend",
                        "9bb2d545b4acbd4aa63557af0c626701c1b126ef"
                    ]
                },
                {
                    "command": [
                        "apply (BetweenDistinctBC _ _ _ H2).",
                        "VernacExtend",
                        "b50df1e6aad5dab6da130565c650cbde2b23eb81"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "autoCollinear.",
                        "VernacExtend",
                        "f9b5517305c4ea7b3088acc38c4b180fb95147f1"
                    ]
                },
                {
                    "command": [
                        "apply CollinearACB; apply (HalfLineCollinear _ _ _ H9).",
                        "VernacExtend",
                        "cb77104f8e53cf96bd5067a63e9e121d03fd399f"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq; apply (CongruentStrictTrianglesCA _ _ _ _ _ _ (CongruentStrictTrianglesCBA _ _ _ _ _ _ H15)).",
                        "VernacExtend",
                        "7c20d63a3e136980ce7c0f37ef2d59e1537c6bca"
                    ]
                },
                {
                    "command": [
                        "autoDistance.",
                        "VernacExtend",
                        "0c749375e926c665509e5f0134261461e6f9bac3"
                    ]
                },
                {
                    "command": [
                        "apply (BetweenHalfLineBetween B A D'').",
                        "VernacExtend",
                        "727fdfcf5c1b35a0e57565d3aa4d5235bdc541c2"
                    ]
                },
                {
                    "command": [
                        "subst; apply (BetweenSym _ _ _ H11).",
                        "VernacExtend",
                        "6c735f013838302d2a9b5afe7cc676356d089595"
                    ]
                },
                {
                    "command": [
                        "apply HalfLineSym.",
                        "VernacExtend",
                        "db45086aeefcf4852d4438b9e7f1c2f7046818c7"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}