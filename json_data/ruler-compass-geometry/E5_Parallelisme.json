{
    "filename": "E5_Parallelisme.v",
    "coq_project": "ruler-compass-geometry",
    "vernac_cmds": [
        [
            "Require Export E4_Continuite.",
            "VernacRequire",
            "0764d13e5d25947cb588ad404aca6c0b402aebef"
        ],
        [
            "Section PARALLEL.",
            "VernacBeginSection",
            "e61e52089b1c0f0797bbc69ca8ed1171b346758e"
        ],
        [
            "Theorem Parallel_exists : forall A : Point, forall (F : Figure) (D : Line F), exists F' : Figure, (exists D' : Line F', ParallelLines F F' D D' /\\ F' A).",
            "VernacStartTheoremProof",
            "e125e5615a6183f77468fcb99a21d52de9e67e50"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose (B := LineA F D); pose (C := LineB F D).",
            "VernacExtend",
            "d3e84d0455c4ee88fab93bac1ece7f7109c3d316"
        ],
        [
            "decompose [or] (FourCases B C A).",
            "VernacExtend",
            "93048d4e02acdb65b8d87fb59f947699df316960"
        ],
        [
            "destruct (ParallelClockwise _ _ _ H) as (E, (H0, H1)).",
            "VernacExtend",
            "6a39ded96c59ee2f692b82f32824ee0d9fd71491"
        ],
        [
            "exists (Collinear A E).",
            "VernacExtend",
            "96869e7d396e6a3cf7df077a9999513e51beb493"
        ],
        [
            "exists (Ruler A E H1).",
            "VernacExtend",
            "71ec72e197c22d9ec9afcaaec63c7f1a55788296"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold ParallelLines in |- *; auto.",
            "VernacExtend",
            "c3e05c516a810fd140c395a0d54eb056cab78220"
        ],
        [
            "autoCollinear.",
            "VernacExtend",
            "f9b5517305c4ea7b3088acc38c4b180fb95147f1"
        ],
        [
            "destruct (ParallelClockwise _ _ _ H0) as (E, (H, H1)).",
            "VernacExtend",
            "5a439f40de6b0f2e70837cb5dde78e0361d82ce2"
        ],
        [
            "exists (Collinear A E).",
            "VernacExtend",
            "96869e7d396e6a3cf7df077a9999513e51beb493"
        ],
        [
            "exists (Ruler A E H1).",
            "VernacExtend",
            "71ec72e197c22d9ec9afcaaec63c7f1a55788296"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold ParallelLines in |- *; simpl in |- *.",
            "VernacExtend",
            "625d0f1179861b1e019d79c9f50215405fec2b78"
        ],
        [
            "apply EquiDirectedPermut; trivial.",
            "VernacExtend",
            "ad6475af22714442b62f19e881d6ceed777816de"
        ],
        [
            "autoCollinear.",
            "VernacExtend",
            "f9b5517305c4ea7b3088acc38c4b180fb95147f1"
        ],
        [
            "exists F; exists D; split.",
            "VernacExtend",
            "cb0d7aaf04055e1165d4c026fcc3adaa6c9b09ec"
        ],
        [
            "unfold ParallelLines in |- *; apply EquiDirectedRefl.",
            "VernacExtend",
            "d365d981adeaed88522ee0a09a60be08a71fe584"
        ],
        [
            "apply (InFLine F D).",
            "VernacExtend",
            "15fddd2e4e84b32e0765be1d1ace971a0be4bbbb"
        ],
        [
            "apply HalfLineCollinear; trivial.",
            "VernacExtend",
            "24e355190a97439732330070116732a52abd8cde"
        ],
        [
            "exists F; exists D; split.",
            "VernacExtend",
            "cb0d7aaf04055e1165d4c026fcc3adaa6c9b09ec"
        ],
        [
            "unfold ParallelLines in |- *; apply EquiDirectedRefl.",
            "VernacExtend",
            "d365d981adeaed88522ee0a09a60be08a71fe584"
        ],
        [
            "apply (InFLine F D).",
            "VernacExtend",
            "15fddd2e4e84b32e0765be1d1ace971a0be4bbbb"
        ],
        [
            "apply CollinearBAC; apply HalfLineCollinear; trivial.",
            "VernacExtend",
            "f5c39eefea8e7e52d5f1636e4436e997b1635206"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Parallel_unicity : forall A : Point, forall (F : Figure) (D : Line F), forall (F' F'' : Figure) (D' : Line F') (D'' : Line F''), ParallelLines F F' D D' -> F' A -> ParallelLines F F'' D D'' -> F'' A -> Superimposed F' F''.",
            "VernacStartTheoremProof",
            "4fa39511903ebcf1c0fbdd1c3cbb6953b8ae2f03"
        ],
        [
            "unfold ParallelLines in |- *; intros.",
            "VernacExtend",
            "abf117e92ef8522a5dce2d7d7f653e2af7b201ef"
        ],
        [
            "decompose [or] (ThreeCases (LineA F D) (LineB F D) A).",
            "VernacExtend",
            "f0e28b24c09cfd37bd58d40e51b7e17e0e28ba1c"
        ],
        [
            "destruct (ExistsDParallelogramm _ _ _ H3) as (B, H4).",
            "VernacExtend",
            "734c46ec514fda0d191f92ced5ca470afc3e9ce9"
        ],
        [
            "apply (SuperimposedTrans F' (Collinear A B) F'').",
            "VernacExtend",
            "3c3b24837955ec72ed27a5cbf2c12dd074375061"
        ],
        [
            "apply (ParallelogrammSuperimposed _ _ _ _ _ _ H4 H H0).",
            "VernacExtend",
            "1034974a7027245231e07436b13256a1c7309433"
        ],
        [
            "apply SuperimposedSym; apply (ParallelogrammSuperimposed _ _ _ _ _ _ H4 H1 H2).",
            "VernacExtend",
            "d72e7c12d52f6db1c20112b778e18d59706a918f"
        ],
        [
            "destruct (ExistsDParallelogramm _ _ _ H4) as (B, H5).",
            "VernacExtend",
            "6d6bf1f43b2cbbe064a5a3a2d72b78fe2b25e027"
        ],
        [
            "apply (SuperimposedTrans F' (Collinear A B) F'').",
            "VernacExtend",
            "3c3b24837955ec72ed27a5cbf2c12dd074375061"
        ],
        [
            "apply (ParallelogrammSuperimposed _ _ _ _ _ _ H5 (EquiDirectedPermut _ _ _ _ H) H0).",
            "VernacExtend",
            "a85ef9cb0d5845c4683906f756e87c597d9e0544"
        ],
        [
            "apply SuperimposedSym; apply (ParallelogrammSuperimposed _ _ _ _ _ _ H5 (EquiDirectedPermut _ _ _ _ H1) H2).",
            "VernacExtend",
            "0ef3512916fe4673cfcf467d2b0334d7dff25ac8"
        ],
        [
            "apply (SuperimposedTrans F' F F'').",
            "VernacExtend",
            "fc56723e7583667cdecf552f2f24c09de7cec00b"
        ],
        [
            "apply SuperimposedSym; apply (CollinearSuperimposed _ _ _ _ _ H (InFLine _ _ _ H4) H0).",
            "VernacExtend",
            "a6e9809540c8db4a7ef00607ec3db8b1fd5fa3e7"
        ],
        [
            "apply (CollinearSuperimposed _ _ _ _ _ H1 (InFLine _ _ _ H4) H2).",
            "VernacExtend",
            "374d61353a0dee4991e936266b19fccfa5cff3f8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End PARALLEL.",
            "VernacEndSegment",
            "e849c365946b8ab44c36c45734ad743cae909665"
        ]
    ],
    "proofs": [
        {
            "name": "Parallel_exists",
            "line_nb": 2,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose (B := LineA F D); pose (C := LineB F D).",
                        "VernacExtend",
                        "d3e84d0455c4ee88fab93bac1ece7f7109c3d316"
                    ]
                },
                {
                    "command": [
                        "decompose [or] (FourCases B C A).",
                        "VernacExtend",
                        "93048d4e02acdb65b8d87fb59f947699df316960"
                    ]
                },
                {
                    "command": [
                        "destruct (ParallelClockwise _ _ _ H) as (E, (H0, H1)).",
                        "VernacExtend",
                        "6a39ded96c59ee2f692b82f32824ee0d9fd71491"
                    ]
                },
                {
                    "command": [
                        "exists (Collinear A E).",
                        "VernacExtend",
                        "96869e7d396e6a3cf7df077a9999513e51beb493"
                    ]
                },
                {
                    "command": [
                        "exists (Ruler A E H1).",
                        "VernacExtend",
                        "71ec72e197c22d9ec9afcaaec63c7f1a55788296"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "unfold ParallelLines in |- *; auto.",
                        "VernacExtend",
                        "c3e05c516a810fd140c395a0d54eb056cab78220"
                    ]
                },
                {
                    "command": [
                        "autoCollinear.",
                        "VernacExtend",
                        "f9b5517305c4ea7b3088acc38c4b180fb95147f1"
                    ]
                },
                {
                    "command": [
                        "destruct (ParallelClockwise _ _ _ H0) as (E, (H, H1)).",
                        "VernacExtend",
                        "5a439f40de6b0f2e70837cb5dde78e0361d82ce2"
                    ]
                },
                {
                    "command": [
                        "exists (Collinear A E).",
                        "VernacExtend",
                        "96869e7d396e6a3cf7df077a9999513e51beb493"
                    ]
                },
                {
                    "command": [
                        "exists (Ruler A E H1).",
                        "VernacExtend",
                        "71ec72e197c22d9ec9afcaaec63c7f1a55788296"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "unfold ParallelLines in |- *; simpl in |- *.",
                        "VernacExtend",
                        "625d0f1179861b1e019d79c9f50215405fec2b78"
                    ]
                },
                {
                    "command": [
                        "apply EquiDirectedPermut; trivial.",
                        "VernacExtend",
                        "ad6475af22714442b62f19e881d6ceed777816de"
                    ]
                },
                {
                    "command": [
                        "autoCollinear.",
                        "VernacExtend",
                        "f9b5517305c4ea7b3088acc38c4b180fb95147f1"
                    ]
                },
                {
                    "command": [
                        "exists F; exists D; split.",
                        "VernacExtend",
                        "cb0d7aaf04055e1165d4c026fcc3adaa6c9b09ec"
                    ]
                },
                {
                    "command": [
                        "unfold ParallelLines in |- *; apply EquiDirectedRefl.",
                        "VernacExtend",
                        "d365d981adeaed88522ee0a09a60be08a71fe584"
                    ]
                },
                {
                    "command": [
                        "apply (InFLine F D).",
                        "VernacExtend",
                        "15fddd2e4e84b32e0765be1d1ace971a0be4bbbb"
                    ]
                },
                {
                    "command": [
                        "apply HalfLineCollinear; trivial.",
                        "VernacExtend",
                        "24e355190a97439732330070116732a52abd8cde"
                    ]
                },
                {
                    "command": [
                        "exists F; exists D; split.",
                        "VernacExtend",
                        "cb0d7aaf04055e1165d4c026fcc3adaa6c9b09ec"
                    ]
                },
                {
                    "command": [
                        "unfold ParallelLines in |- *; apply EquiDirectedRefl.",
                        "VernacExtend",
                        "d365d981adeaed88522ee0a09a60be08a71fe584"
                    ]
                },
                {
                    "command": [
                        "apply (InFLine F D).",
                        "VernacExtend",
                        "15fddd2e4e84b32e0765be1d1ace971a0be4bbbb"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBAC; apply HalfLineCollinear; trivial.",
                        "VernacExtend",
                        "f5c39eefea8e7e52d5f1636e4436e997b1635206"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Parallel_unicity",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "unfold ParallelLines in |- *; intros.",
                        "VernacExtend",
                        "abf117e92ef8522a5dce2d7d7f653e2af7b201ef"
                    ]
                },
                {
                    "command": [
                        "decompose [or] (ThreeCases (LineA F D) (LineB F D) A).",
                        "VernacExtend",
                        "f0e28b24c09cfd37bd58d40e51b7e17e0e28ba1c"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsDParallelogramm _ _ _ H3) as (B, H4).",
                        "VernacExtend",
                        "734c46ec514fda0d191f92ced5ca470afc3e9ce9"
                    ]
                },
                {
                    "command": [
                        "apply (SuperimposedTrans F' (Collinear A B) F'').",
                        "VernacExtend",
                        "3c3b24837955ec72ed27a5cbf2c12dd074375061"
                    ]
                },
                {
                    "command": [
                        "apply (ParallelogrammSuperimposed _ _ _ _ _ _ H4 H H0).",
                        "VernacExtend",
                        "1034974a7027245231e07436b13256a1c7309433"
                    ]
                },
                {
                    "command": [
                        "apply SuperimposedSym; apply (ParallelogrammSuperimposed _ _ _ _ _ _ H4 H1 H2).",
                        "VernacExtend",
                        "d72e7c12d52f6db1c20112b778e18d59706a918f"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsDParallelogramm _ _ _ H4) as (B, H5).",
                        "VernacExtend",
                        "6d6bf1f43b2cbbe064a5a3a2d72b78fe2b25e027"
                    ]
                },
                {
                    "command": [
                        "apply (SuperimposedTrans F' (Collinear A B) F'').",
                        "VernacExtend",
                        "3c3b24837955ec72ed27a5cbf2c12dd074375061"
                    ]
                },
                {
                    "command": [
                        "apply (ParallelogrammSuperimposed _ _ _ _ _ _ H5 (EquiDirectedPermut _ _ _ _ H) H0).",
                        "VernacExtend",
                        "a85ef9cb0d5845c4683906f756e87c597d9e0544"
                    ]
                },
                {
                    "command": [
                        "apply SuperimposedSym; apply (ParallelogrammSuperimposed _ _ _ _ _ _ H5 (EquiDirectedPermut _ _ _ _ H1) H2).",
                        "VernacExtend",
                        "0ef3512916fe4673cfcf467d2b0334d7dff25ac8"
                    ]
                },
                {
                    "command": [
                        "apply (SuperimposedTrans F' F F'').",
                        "VernacExtend",
                        "fc56723e7583667cdecf552f2f24c09de7cec00b"
                    ]
                },
                {
                    "command": [
                        "apply SuperimposedSym; apply (CollinearSuperimposed _ _ _ _ _ H (InFLine _ _ _ H4) H0).",
                        "VernacExtend",
                        "a6e9809540c8db4a7ef00607ec3db8b1fd5fa3e7"
                    ]
                },
                {
                    "command": [
                        "apply (CollinearSuperimposed _ _ _ _ _ H1 (InFLine _ _ _ H4) H2).",
                        "VernacExtend",
                        "374d61353a0dee4991e936266b19fccfa5cff3f8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}