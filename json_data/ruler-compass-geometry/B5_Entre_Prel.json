{
    "filename": "B5_Entre_Prel.v",
    "coq_project": "ruler-compass-geometry",
    "vernac_cmds": [
        [
            "Require Export B4_Droite_Def.",
            "VernacRequire",
            "ffa72f58d48818e8bab78012ea2d395dd5c1b0d4"
        ],
        [
            "Section BETWEEN_PRELIMINARS.",
            "VernacBeginSection",
            "f0544150caa3bfdb6c31c24eaa50dd84c22cf795"
        ],
        [
            "Lemma BetweenDistinctAB : forall A B C, Between A B C -> A <> B.",
            "VernacStartTheoremProof",
            "89407c8e7461f52e9b43d3c7603569bc6f04871b"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma BetweenNotClockwiseABC : forall A B C, Between A B C -> ~Clockwise A B C.",
            "VernacStartTheoremProof",
            "f88108348ff959372d15bd1d56855d4ed2ad2601"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "elim (NotClockwiseBAA C B).",
            "VernacExtend",
            "6340d01daec8f809c2075077dd9bf80c18817e11"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ClockwiseNotBetweenABC : forall A B C, Clockwise A B C -> ~Between A B C.",
            "VernacStartTheoremProof",
            "48fecc90eec46eebc35b7a3ea73fe28ea850c97f"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "elim (NotClockwiseBAA C B); auto.",
            "VernacExtend",
            "b24d14d17801e9f0f26a4f26dbd1f4377067e148"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma BetweenNotClockwiseBAC : forall A B C, Between A B C -> ~Clockwise B A C.",
            "VernacStartTheoremProof",
            "b1ae7ae329dcb761da369eedda7b247438efb0a0"
        ],
        [
            "generalizeChange.",
            "VernacExtend",
            "d3c977ebf7f2c5588433912c8eb25fd198cbcf67"
        ],
        [
            "elim (NotClockwiseBAA A B).",
            "VernacExtend",
            "71cb69235face2e0b21392603b0312bd1eafd7dc"
        ],
        [
            "apply H3; apply ClockwiseCAB; trivial.",
            "VernacExtend",
            "1603fbc2ec4b12289c9bfd43e2129d8924da4a9f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma BetweenHalfLine : forall A B C, Between A B C -> HalfLine A B C.",
            "VernacStartTheoremProof",
            "54b36cb78dbc5f484028baa46042482ea92952d6"
        ],
        [
            "intros; decompose [or] (FourCases A B C).",
            "VernacExtend",
            "7d1775d0c419eed9b5a133feed7074daed1034a6"
        ],
        [
            "elim (BetweenNotClockwiseABC A B C H); trivial.",
            "VernacExtend",
            "2bc1fac7aacd6787484e1e5867856314b9702211"
        ],
        [
            "elim (BetweenNotClockwiseBAC A B C H); trivial.",
            "VernacExtend",
            "03be349ae33e9d7278dce0142aa90d3e068f5ef6"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "generalizeChange; elim (ClockwiseNotClockwise A B x); auto.",
            "VernacExtend",
            "693a734a807d57cf9e31e17c40a0715a821f2f18"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma BetweenSymHalfLine : forall A B C, Between A B C -> HalfLine C B A.",
            "VernacStartTheoremProof",
            "d46b58bb200b1b2c8d9521dc942a0c2bbbdd68d7"
        ],
        [
            "intros; decompose [or] (FourCases C B A).",
            "VernacExtend",
            "b155a6f286057fe31762ac5af73faf2534bb6e48"
        ],
        [
            "elim (BetweenNotClockwiseBAC A B C H); apply ClockwiseBCA; trivial.",
            "VernacExtend",
            "96d42240e1502ab396e3995fae744e0037854907"
        ],
        [
            "elim (BetweenNotClockwiseABC A B C H); apply ClockwiseCAB; trivial.",
            "VernacExtend",
            "346f01e99e25c9d5a14ad64b88a48b2952721255"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "generalizeChange; elim (ClockwiseNotClockwise B A x); auto.",
            "VernacExtend",
            "caaa4f28bf3d2e3d3618f83f63e1f74570814d9e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End BETWEEN_PRELIMINARS.",
            "VernacEndSegment",
            "1b1308fd74ea19808a2ecab56db11d374e32f0b1"
        ]
    ],
    "proofs": [
        {
            "name": "BetweenDistinctAB",
            "line_nb": 2,
            "steps": [
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BetweenNotClockwiseABC",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "elim (NotClockwiseBAA C B).",
                        "VernacExtend",
                        "6340d01daec8f809c2075077dd9bf80c18817e11"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ClockwiseNotBetweenABC",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "elim (NotClockwiseBAA C B); auto.",
                        "VernacExtend",
                        "b24d14d17801e9f0f26a4f26dbd1f4377067e148"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BetweenNotClockwiseBAC",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "generalizeChange.",
                        "VernacExtend",
                        "d3c977ebf7f2c5588433912c8eb25fd198cbcf67"
                    ]
                },
                {
                    "command": [
                        "elim (NotClockwiseBAA A B).",
                        "VernacExtend",
                        "71cb69235face2e0b21392603b0312bd1eafd7dc"
                    ]
                },
                {
                    "command": [
                        "apply H3; apply ClockwiseCAB; trivial.",
                        "VernacExtend",
                        "1603fbc2ec4b12289c9bfd43e2129d8924da4a9f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BetweenHalfLine",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "intros; decompose [or] (FourCases A B C).",
                        "VernacExtend",
                        "7d1775d0c419eed9b5a133feed7074daed1034a6"
                    ]
                },
                {
                    "command": [
                        "elim (BetweenNotClockwiseABC A B C H); trivial.",
                        "VernacExtend",
                        "2bc1fac7aacd6787484e1e5867856314b9702211"
                    ]
                },
                {
                    "command": [
                        "elim (BetweenNotClockwiseBAC A B C H); trivial.",
                        "VernacExtend",
                        "03be349ae33e9d7278dce0142aa90d3e068f5ef6"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "generalizeChange; elim (ClockwiseNotClockwise A B x); auto.",
                        "VernacExtend",
                        "693a734a807d57cf9e31e17c40a0715a821f2f18"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BetweenSymHalfLine",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "intros; decompose [or] (FourCases C B A).",
                        "VernacExtend",
                        "b155a6f286057fe31762ac5af73faf2534bb6e48"
                    ]
                },
                {
                    "command": [
                        "elim (BetweenNotClockwiseBAC A B C H); apply ClockwiseBCA; trivial.",
                        "VernacExtend",
                        "96d42240e1502ab396e3995fae744e0037854907"
                    ]
                },
                {
                    "command": [
                        "elim (BetweenNotClockwiseABC A B C H); apply ClockwiseCAB; trivial.",
                        "VernacExtend",
                        "346f01e99e25c9d5a14ad64b88a48b2952721255"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "generalizeChange; elim (ClockwiseNotClockwise B A x); auto.",
                        "VernacExtend",
                        "caaa4f28bf3d2e3d3618f83f63e1f74570814d9e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}