{
    "filename": "D5_ParalleleConst.v",
    "coq_project": "ruler-compass-geometry",
    "vernac_cmds": [
        [
            "Require Export D4_CongruenceProp.",
            "VernacRequire",
            "baab77cbd5ed71fa5b0d77dc006ca40638a86e04"
        ],
        [
            "Section PARALLELOGRAMM_PROP.",
            "VernacBeginSection",
            "12ea770cfe17e56242d467f737164edb63313f1f"
        ],
        [
            "Lemma ExistsDParallelogramm : forall A B C : Point, Clockwise A B C -> {D : Point | Parallelogramm A B C D}.",
            "VernacStartTheoremProof",
            "1c9da432c986e2155971bae4e2b6dd48ef78f049"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Hab := ClockwiseDistinctAB _ _ _ H).",
            "VernacExtend",
            "dba1f4f205edf83c9f24c79f5fb99036704c2ffc"
        ],
        [
            "assert (Hbc := ClockwiseDistinctBC _ _ _ H).",
            "VernacExtend",
            "d508b1557af71d0ffe655ce26e4fe316d5794ed4"
        ],
        [
            "setCircle A B C Hbc ipattern:(F1) ipattern:(G1).",
            "VernacExtend",
            "58c63f2d95f6210688135c7b22b11e6319610390"
        ],
        [
            "setCircle C A B Hab ipattern:(F2) ipattern:(G2).",
            "VernacExtend",
            "49c2a05ddd0c808979b54c16a603d1722c433736"
        ],
        [
            "setCinterclockC F1 F2 G1 G2 ipattern:(D) ipattern:(H1) ipattern:(H2) ipattern:(H3) ipattern:(H4).",
            "VernacExtend",
            "ff8545e5a8b6ae4a5566c8ace3beeaea26ec0b95"
        ],
        [
            "rewrite (DistSym A C); apply TriangleSpecComm; try autoDistinct.",
            "VernacExtend",
            "6fec018169e86adab905834a8cc9e3333675e0b1"
        ],
        [
            "apply ClockwiseTriangleSpec; autoClockwise.",
            "VernacExtend",
            "30994d1865bbedbacc70103e68e06c19a16f2241"
        ],
        [
            "exists D; unfold Parallelogramm in |- *; intuition.",
            "VernacExtend",
            "ceab41e861c7ea3d6a453274ad9778d53a0e4782"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ParallelogrammCenterClockwiseABI : forall A B C D I : Point, forall H : Parallelogramm A B C D, ParallelogrammCenter A B C D H I -> Clockwise A B I.",
            "VernacStartTheoremProof",
            "0d1dafdb9a3a9b478050337083ce820582d14267"
        ],
        [
            "unfold ParallelogrammCenter, Parallelogramm in |- *; intuition.",
            "VernacExtend",
            "282b6d60bddb91ac829f7a58ad07493087a15fb4"
        ],
        [
            "apply ClockwiseBCA; apply (BetweenClockwiseMBC C A B I).",
            "VernacExtend",
            "3eff08a667be86c9932c57c0edccf3cfdc1b1b04"
        ],
        [
            "autoClockwise.",
            "VernacExtend",
            "9409e85b86446941015e1da6ca2353051468a0c2"
        ],
        [
            "apply BetweenSym; trivial.",
            "VernacExtend",
            "4b64e2e034d8805eeb392d09c64cc0f02b3100e4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ParallelogrammCenterClockwiseAID : forall A B C D I : Point, forall H : Parallelogramm A B C D, ParallelogrammCenter A B C D H I -> Clockwise A I D.",
            "VernacStartTheoremProof",
            "230878f7cf86b604a382b9cf5b39d7134e19cde1"
        ],
        [
            "unfold ParallelogrammCenter, Parallelogramm in |- *; intuition.",
            "VernacExtend",
            "282b6d60bddb91ac829f7a58ad07493087a15fb4"
        ],
        [
            "apply (BetweenClockwiseAMC _ _ _ _ H0 H).",
            "VernacExtend",
            "c12de4fbda96ab8f17673a982abaf7f86e88db06"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ParallelogrammCenterClockwiseICD : forall A B C D I : Point, forall H : Parallelogramm A B C D, ParallelogrammCenter A B C D H I -> Clockwise I C D.",
            "VernacStartTheoremProof",
            "646d8773d488ab17637fd51f7d3ddc7155c5aa8d"
        ],
        [
            "unfold ParallelogrammCenter, Parallelogramm in |- *; intuition.",
            "VernacExtend",
            "282b6d60bddb91ac829f7a58ad07493087a15fb4"
        ],
        [
            "apply (BetweenClockwiseMBC _ _ _ _ H0 H).",
            "VernacExtend",
            "371a3582443f440789edd069cf7b912b3fbbb83a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ParallelogrammCenterClockwiseIBC : forall A B C D I : Point, forall H : Parallelogramm A B C D, ParallelogrammCenter A B C D H I -> Clockwise I B C.",
            "VernacStartTheoremProof",
            "0beeeb3d0fe22505241a1a89e22a42a731beaba4"
        ],
        [
            "unfold ParallelogrammCenter, Parallelogramm in |- *; intuition.",
            "VernacExtend",
            "282b6d60bddb91ac829f7a58ad07493087a15fb4"
        ],
        [
            "apply ClockwiseBCA; apply (BetweenClockwiseAMC C A B I).",
            "VernacExtend",
            "242e4c0482bf3e3ecbaf197127f9249c9212029f"
        ],
        [
            "autoClockwise.",
            "VernacExtend",
            "9409e85b86446941015e1da6ca2353051468a0c2"
        ],
        [
            "apply BetweenSym; trivial.",
            "VernacExtend",
            "4b64e2e034d8805eeb392d09c64cc0f02b3100e4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ParallelogrammCenterCongruentTriangles : forall A B C D I : Point, forall H : Parallelogramm A B C D, ParallelogrammCenter A B C D H I -> CongruentStrictTriangles A I B C I D.",
            "VernacStartTheoremProof",
            "e515901a4d31b76a7154eab1aa2a7feb0a1e5eec"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (H1 := ParallelogrammCongruentTrianglesAC _ _ _ _ H).",
            "VernacExtend",
            "714a8272ce68de67ab3d654a9003479259a55c5f"
        ],
        [
            "assert (H2 := ParallelogrammCenterClockwiseABI _ _ _ _ _ _ H0).",
            "VernacExtend",
            "ad051b534493d197dcfa4accafcf59902d25814d"
        ],
        [
            "unfold ParallelogrammCenter, Parallelogramm in *; intuition.",
            "VernacExtend",
            "94c84f1e01f7bd418b9994f991bbd1882659235c"
        ],
        [
            "apply CongruentStrictTrianglesSASA.",
            "VernacExtend",
            "eed8d6d20c117025cee48565ebf8ee590f5b8f75"
        ],
        [
            "autoDistance.",
            "VernacExtend",
            "0c749375e926c665509e5f0134261461e6f9bac3"
        ],
        [
            "autoDistance.",
            "VernacExtend",
            "0c749375e926c665509e5f0134261461e6f9bac3"
        ],
        [
            "rewrite (BetweenAngleB A I B C).",
            "VernacExtend",
            "5d281fbc939097b80625bced744e6d74691cf3e9"
        ],
        [
            "rewrite (BetweenAngleB C I D A).",
            "VernacExtend",
            "9499df1807de251e19763105782322014d6686bb"
        ],
        [
            "apply CongruentStrictTrianglesA.",
            "VernacExtend",
            "b3ec2281705f5059ca2e6df1a88d47d2f19ad4a0"
        ],
        [
            "apply (CongruentStrictTrianglesACB _ _ _ _ _ _ H1).",
            "VernacExtend",
            "79d08674975e75f822f944f1b2ccc928268ff552"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "apply (BetweenSym _ _ _ H).",
            "VernacExtend",
            "c262d1f724db6c237e184a9d05f1c8adf746958a"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "intro; elim (ClockwiseNotCollinear _ _ _ H2); autoCollinear.",
            "VernacExtend",
            "42fbcafba3907ced26e3e7548b520d29e0cbfb98"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ParallelogrammCenterBetweenBID : forall A B C D I : Point, forall H : Parallelogramm A B C D, ParallelogrammCenter A B C D H I -> Between B I D.",
            "VernacStartTheoremProof",
            "551f65702a29fd5b65891cd41b5f16209feb8eee"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (SupplementaryRec I B A D).",
            "VernacExtend",
            "8eae3b256ca65b2dfb0f779cd04f636e27e84ea2"
        ],
        [
            "apply ClockwiseBCA; apply (ParallelogrammCenterClockwiseABI _ _ _ _ _ H H0).",
            "VernacExtend",
            "a361e60e3786d5e9f7455c06136a2f287d42f2d5"
        ],
        [
            "apply (ParallelogrammCenterClockwiseAID _ _ _ _ _ H H0).",
            "VernacExtend",
            "2ecb1fc2f7ce0c681f538c6b52b632a9fddc9275"
        ],
        [
            "assert (H1 := ParallelogrammCenterCongruentTriangles A B C D I H H0).",
            "VernacExtend",
            "c91e748bf4da7e12a4b00ba026a93e14a7e59a41"
        ],
        [
            "rewrite (CongruentStrictTrianglesB _ _ _ _ _ _ (CongruentStrictTrianglesCBA _ _ _ _ _ _ H1)).",
            "VernacExtend",
            "ae6295e05e7a13bcdfdc88f282da5f97c5f43f4e"
        ],
        [
            "apply SupplementaryCommut.",
            "VernacExtend",
            "cb3cc742e4f15f943b6fbad33fe475a9bbe998b5"
        ],
        [
            "exists I; exists A; exists D; exists C; intuition.",
            "VernacExtend",
            "19b286ef688d38ed878dfab831ace84e19e41ff2"
        ],
        [
            "elim (ClockwiseDistinctBC _ _ _ (ParallelogrammCenterClockwiseAID _ _ _ _ _ H H0) H2).",
            "VernacExtend",
            "4d0d0a5bca6bc4671fa1cf1122ad7d48f99893c0"
        ],
        [
            "unfold ParallelogrammCenter in *; intuition.",
            "VernacExtend",
            "264627f380dc3dc0ac16813e329c80a65fbe89ce"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ParallelogrammCenterMidPointBD : forall A B C D I : Point, forall H : Parallelogramm A B C D, ParallelogrammCenter A B C D H I -> Distance I B = Distance I D.",
            "VernacStartTheoremProof",
            "75896251104391e770768d57e24428ea82e28c90"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (H1 := ParallelogrammCenterCongruentTriangles A B C D I H H0).",
            "VernacExtend",
            "c91e748bf4da7e12a4b00ba026a93e14a7e59a41"
        ],
        [
            "apply (CongruentStrictTrianglesBC _ _ _ _ _ _ H1).",
            "VernacExtend",
            "15e555565caf99c6ab4edb775cf61548aaf4d4ac"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ParallelHalfLine : forall A B C D E : Point, forall H : Parallelogramm A B C D, HalfLine C D E -> Clockwise A B E.",
            "VernacStartTheoremProof",
            "fc264eb52e65dbfe87e679246b808777ca5d79d2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (ExistsParallelogrammCenter A B C D H) as (I, H1).",
            "VernacExtend",
            "b6b2eb6d16370f50c0fdbb9bf8a4b1ac9225219f"
        ],
        [
            "assert (H2 := ParallelogrammCenterClockwiseABI _ _ _ _ _ _ H1).",
            "VernacExtend",
            "47c7e3fd5f82190b8fffc7e024d384f04f8d4ac5"
        ],
        [
            "assert (H3 := ParallelogrammCenterCongruentTriangles _ _ _ _ _ _ H1).",
            "VernacExtend",
            "495370bb0d74c28defa02890ee59627018bb80f8"
        ],
        [
            "assert (H4 := ParallelogrammCenterClockwiseICD _ _ _ _ _ _ H1).",
            "VernacExtend",
            "78fd2bde1d0927e32343191b1057c0250b9a7375"
        ],
        [
            "destruct (CentralSymetPoint E I) as (F, (H5, H6)).",
            "VernacExtend",
            "f90a79fc70983f787ecce641f0118c9acfbebcf8"
        ],
        [
            "intro; subst; elim (ClockwiseNotCollinear _ _ _ H4).",
            "VernacExtend",
            "354e96b2170ff943ed5058650d7f3d5f7fa4ed20"
        ],
        [
            "apply CollinearCAB; apply (HalfLineCollinear _ _ _ H0).",
            "VernacExtend",
            "09029b051706d97bd2e6365901c29b7d895e3df3"
        ],
        [
            "assert (H7 : Clockwise C E I).",
            "VernacExtend",
            "b613bf081367f8ff670d618c73aea569c5a829a0"
        ],
        [
            "apply H0; autoClockwise.",
            "VernacExtend",
            "246452e801864344c431d94f1174d0d9d3305fa3"
        ],
        [
            "assert (H8 : Clockwise F E A).",
            "VernacExtend",
            "4bc2aa4e8e2a39275ff879933f0613cc23efa273"
        ],
        [
            "apply (ClockwiseBetweenMBC F E A I).",
            "VernacExtend",
            "3f8d80cf407d730330ba0d229ae74ee56f54eb2f"
        ],
        [
            "apply (BetweenSym _ _ _ H6).",
            "VernacExtend",
            "89dd484f106e80ba03205da7ee7b713d8748e55c"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "apply ClockwiseBCA; apply (EquiOrientedRev _ _ _ H1).",
            "VernacExtend",
            "28247bec3f59b1ef8d2f156c5f25b00e1176a178"
        ],
        [
            "autoClockwise.",
            "VernacExtend",
            "9409e85b86446941015e1da6ca2353051468a0c2"
        ],
        [
            "assert (CongruentStrictTriangles E I C F I A).",
            "VernacExtend",
            "66e6f072868aab3058764bbf4918a74c0f80b450"
        ],
        [
            "unfold ParallelogrammCenter in H1; apply CongruentOpposedStrictTriangles.",
            "VernacExtend",
            "81c6118b3082156d78bc124be877b59217260ebe"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply BetweenSym; intuition.",
            "VernacExtend",
            "7fa3289e671fd5fb066b84380bede757372bb1c9"
        ],
        [
            "autoDistance.",
            "VernacExtend",
            "0c749375e926c665509e5f0134261461e6f9bac3"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "intro; elim (ClockwiseNotCollinear _ _ _ H7); autoCollinear.",
            "VernacExtend",
            "5cc531fbcf46b5afc6d4f027c76d3a3b0ac67cbc"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "assert (H10 : HalfLine A B F).",
            "VernacExtend",
            "11a960c110eba0058300e52cde48e0d578a43d48"
        ],
        [
            "apply (AngleBHalfLine A B I F).",
            "VernacExtend",
            "6fbc9c9263162f57513796c8a4e57b881219030c"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply ClockwiseCAB; apply (BetweenClockwiseAMC F E A I).",
            "VernacExtend",
            "d0ac8c6aab41a9032c98658542d6ba94fa894cfa"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply BetweenSym; trivial.",
            "VernacExtend",
            "4b64e2e034d8805eeb392d09c64cc0f02b3100e4"
        ],
        [
            "rewrite (CongruentStrictTrianglesA _ _ _ _ _ _ (CongruentStrictTrianglesACB _ _ _ _ _ _ H3)).",
            "VernacExtend",
            "7398738a3d8a0db062828afc7a629eee3399126b"
        ],
        [
            "rewrite <- (CongruentStrictTrianglesC _ _ _ _ _ _ H9).",
            "VernacExtend",
            "3abd9e8cdf64b9ea1204286c11dfb16c14b11c5f"
        ],
        [
            "apply HalfLineAngleB.",
            "VernacExtend",
            "1b8b2eb55cb34a1ed564e9765a4863c2dc608f5d"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply (HalfLineSym A B F).",
            "VernacExtend",
            "6b20c57a357ca67d7fcf5ccb80df96553ea49973"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "autoClockwise.",
            "VernacExtend",
            "9409e85b86446941015e1da6ca2353051468a0c2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem HalfLineParallel : forall A B C D E : Point, forall H : Parallelogramm A B C D, HalfLine D C E -> Clockwise A B E.",
            "VernacStartTheoremProof",
            "157540dfb90c5049ce6bea0dffbd055f83d4ded2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (ExistsParallelogrammCenter A B C D H) as (I, H1).",
            "VernacExtend",
            "b6b2eb6d16370f50c0fdbb9bf8a4b1ac9225219f"
        ],
        [
            "assert (H2 := ParallelogrammCenterClockwiseABI _ _ _ _ _ _ H1).",
            "VernacExtend",
            "47c7e3fd5f82190b8fffc7e024d384f04f8d4ac5"
        ],
        [
            "assert (H3 := ParallelogrammCenterCongruentTriangles _ _ _ _ _ _ H1).",
            "VernacExtend",
            "495370bb0d74c28defa02890ee59627018bb80f8"
        ],
        [
            "assert (H4 := ParallelogrammCenterClockwiseICD _ _ _ _ _ _ H1).",
            "VernacExtend",
            "78fd2bde1d0927e32343191b1057c0250b9a7375"
        ],
        [
            "destruct (CentralSymetPoint E I) as (F, (H5, H6)).",
            "VernacExtend",
            "f90a79fc70983f787ecce641f0118c9acfbebcf8"
        ],
        [
            "intro; subst; elim (ClockwiseNotCollinear _ _ _ H4).",
            "VernacExtend",
            "354e96b2170ff943ed5058650d7f3d5f7fa4ed20"
        ],
        [
            "apply CollinearCBA; apply (HalfLineCollinear _ _ _ H0).",
            "VernacExtend",
            "29336dbd642749b526d8f7225acb8c5b7b280a28"
        ],
        [
            "assert (H7 : Clockwise E D I).",
            "VernacExtend",
            "ba67b35095955b02a9ad6216c05a0ba97fb0dcb9"
        ],
        [
            "generalizeChangeSense.",
            "VernacExtend",
            "be975c77c59224ac5239b36f960f98e48421bb54"
        ],
        [
            "apply H6; autoClockwise.",
            "VernacExtend",
            "3da5d3b632a0c49a7f89455a3591e4a79c375bd2"
        ],
        [
            "assert (H8 : Clockwise E F B).",
            "VernacExtend",
            "162a758d1e865b589f7106249e73be05f2c7a679"
        ],
        [
            "apply (ClockwiseBetweenAMC E F B I).",
            "VernacExtend",
            "30ca18449481686beedc59a04da59efbafd223c9"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "assert (H8 := BetweenSym _ _ _ (ParallelogrammCenterBetweenBID _ _ _ _ _ _ H1)).",
            "VernacExtend",
            "6e59a08478b3d3491abbe1a0d90ce5d56d1b91e5"
        ],
        [
            "apply ClockwiseCAB; canonize.",
            "VernacExtend",
            "e901920a306de779af262d61d4c22173bdf5d275"
        ],
        [
            "apply H11; autoClockwise.",
            "VernacExtend",
            "70b9a16e6e967b060bfefee6117f7ee601b9d0d1"
        ],
        [
            "assert (CongruentStrictTriangles D I E B I F).",
            "VernacExtend",
            "8c384ba7b2163fa24459c92deac07473796b6f00"
        ],
        [
            "unfold ParallelogrammCenter in H1; apply CongruentOpposedStrictTriangles.",
            "VernacExtend",
            "81c6118b3082156d78bc124be877b59217260ebe"
        ],
        [
            "apply (BetweenSym B I D (ParallelogrammCenterBetweenBID A B C D I H H1)).",
            "VernacExtend",
            "d37a0c5b21c160a554984b23ad02833889ffbe23"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "assert (H9 := ParallelogrammCenterMidPointBD A B C D I H H1); auto.",
            "VernacExtend",
            "730561d3ab3ea48eb0332e0f37d091bdc6431ba3"
        ],
        [
            "autoDistance.",
            "VernacExtend",
            "0c749375e926c665509e5f0134261461e6f9bac3"
        ],
        [
            "intro; elim (ClockwiseNotCollinear _ _ _ H7); autoCollinear.",
            "VernacExtend",
            "5cc531fbcf46b5afc6d4f027c76d3a3b0ac67cbc"
        ],
        [
            "assert (H10 : HalfLine B A F).",
            "VernacExtend",
            "63351bdab3c86622f888b9b93dbe5e02c5d0449d"
        ],
        [
            "apply (AngleCHalfLine B I A F).",
            "VernacExtend",
            "90bb37e97565e1750dbec93c01b33316822a970c"
        ],
        [
            "autoClockwise.",
            "VernacExtend",
            "9409e85b86446941015e1da6ca2353051468a0c2"
        ],
        [
            "apply ClockwiseCAB; apply (BetweenClockwiseMBC E F B I); trivial.",
            "VernacExtend",
            "052145610e19cb9d9a9486773dc62279aebc27fe"
        ],
        [
            "rewrite (CongruentStrictTrianglesB _ _ _ _ _ _ (CongruentStrictTrianglesBCA _ _ _ _ _ _ H3)).",
            "VernacExtend",
            "b3abb8d3d51ae351ee4ba137a0994b1ad250e078"
        ],
        [
            "rewrite <- (CongruentStrictTrianglesA _ _ _ _ _ _ H9).",
            "VernacExtend",
            "c8db13f9220c5330b91431937a3f1f6d3aa856c3"
        ],
        [
            "apply HalfLineAngleC.",
            "VernacExtend",
            "911c8c97796f8b265e85385f475924f72b00a9b6"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "generalizeChangeSide.",
            "VernacExtend",
            "5e228b6b7c592e98c7b8e296efd481fe42ece523"
        ],
        [
            "apply H12.",
            "VernacExtend",
            "5a745b26a30edb1cd58baf290f56d389ba5cf959"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "autoClockwise.",
            "VernacExtend",
            "9409e85b86446941015e1da6ca2353051468a0c2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ParallelClockwise : forall A B C : Point, Clockwise A B C -> exists D : Point, EquiDirected A B C D /\\ C <> D.",
            "VernacStartTheoremProof",
            "64a19649525ad2b9181ccbcbd1ce93f74bee6046"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (ExistsDParallelogramm _ _ _ H) as (D, H0).",
            "VernacExtend",
            "0f901eb9700534d59658686f308286fde3b9d582"
        ],
        [
            "exists D; canonize.",
            "VernacExtend",
            "7e9f1d97f8f7a48fdcf733436820619ca35d25ef"
        ],
        [
            "do 6 right; left; intros E H4.",
            "VernacExtend",
            "3574e126cf85796802502defc341093ed7261f55"
        ],
        [
            "destruct (FourPointsIntersectionPoint C D A E) as (F, (H5, H6)).",
            "VernacExtend",
            "c62436bb40ddba2af9079e55b36dce37d7173ccf"
        ],
        [
            "unfold Parallelogramm in *; autoClockwise.",
            "VernacExtend",
            "5910a2271ae431b27f04b8f3489cd7daca0fe389"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply ClockwiseBCA; apply (ClockwiseBetweenMBC E A B F).",
            "VernacExtend",
            "5bf11edb7db978830f7e991906ebfd47cff615f7"
        ],
        [
            "apply BetweenSym; trivial.",
            "VernacExtend",
            "4b64e2e034d8805eeb392d09c64cc0f02b3100e4"
        ],
        [
            "destruct (CollinearHalfLine _ _ _ H5).",
            "VernacExtend",
            "102e6070c197517eb4f842aaed55f8d8eed93f7e"
        ],
        [
            "apply ClockwiseCAB; apply (ParallelHalfLine A B C D F H0 H1).",
            "VernacExtend",
            "82cf34e9e530eeba0bf7a6e6b7f4c1e8c2f1829e"
        ],
        [
            "apply ClockwiseCAB; apply (HalfLineParallel A B C D F H0 H1).",
            "VernacExtend",
            "f3fcfa96c5f8a368cf2fcf196c348d8e72602952"
        ],
        [
            "unfold Parallelogramm in *; intuition.",
            "VernacExtend",
            "035a1abdd2b0ad0756ec5e9ded5a5c0d05f84971"
        ],
        [
            "autoDistinct.",
            "VernacExtend",
            "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ParallelogrammParallelogrammBetween : forall A B C D E : Point, Parallelogramm A B C D -> Parallelogramm C A B E -> Between D C E.",
            "VernacStartTheoremProof",
            "e9e5eb26c856958c8d0ce63b03b9b84e642f771f"
        ],
        [
            "intros; apply (SumAngles C D A B E).",
            "VernacExtend",
            "1fd78dcd040edf1e36f4a2bbe95885d5e50b5c97"
        ],
        [
            "unfold Parallelogramm in *; intuition; autoClockwise.",
            "VernacExtend",
            "726894742959055c44ebd34ea6a7d988735c6075"
        ],
        [
            "unfold Parallelogramm in *; intuition; autoClockwise.",
            "VernacExtend",
            "726894742959055c44ebd34ea6a7d988735c6075"
        ],
        [
            "unfold Parallelogramm in *; intuition; autoClockwise.",
            "VernacExtend",
            "726894742959055c44ebd34ea6a7d988735c6075"
        ],
        [
            "apply sym_eq; rewrite (AngleSym A C B).",
            "VernacExtend",
            "f36047b06769b60569c4fd3df70749665441dd6b"
        ],
        [
            "apply CongruentStrictTrianglesB.",
            "VernacExtend",
            "8598090a0d3aa2fdb4d94c16201cbfcfaebf5ee9"
        ],
        [
            "apply CongruentStrictTrianglesBAC; apply (ParallelogrammCongruentTrianglesAC _ _ _ _ H).",
            "VernacExtend",
            "e6b3388d11e88bd700a3f0d3399d1b5d82abd632"
        ],
        [
            "apply (ParallelogrammDistinctAC _ _ _ _ H).",
            "VernacExtend",
            "8b2f1558e3cbeee03a48897cafea58a2cd38a328"
        ],
        [
            "apply (ParallelogrammDistinctAB _ _ _ _ H).",
            "VernacExtend",
            "af71b92cdf661de812bc389e5ce2f6fb107179db"
        ],
        [
            "apply sym_eq; apply CongruentStrictTrianglesC.",
            "VernacExtend",
            "70337fbe6f00d02f39cadecd9beb59edc22abe49"
        ],
        [
            "apply (ParallelogrammCongruentTrianglesAC _ _ _ _ H0).",
            "VernacExtend",
            "d9edf611a42127b1ed01e5b78955bc004042859a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ParallelogrammClockwiseBCD : forall A B C D : Point, Parallelogramm A B C D -> Clockwise B C D.",
            "VernacStartTheoremProof",
            "a3c7eede4945a6a7ac4040bb7859ac0f9bbe00f2"
        ],
        [
            "intros; destruct (ExistsParallelogrammCenter _ _ _ _ H) as (I, H0).",
            "VernacExtend",
            "5190edf4ec75ce3ea89745f6b955bf096caae350"
        ],
        [
            "apply ClockwiseBCA; apply (ClockwiseBetweenMBC D B C I).",
            "VernacExtend",
            "ba1b9f65e997b653059081365834ff3798d481c3"
        ],
        [
            "apply BetweenSym; apply (ParallelogrammCenterBetweenBID _ _ _ _ _ H H0).",
            "VernacExtend",
            "aa15c991ccc11694fda9ba589d0e6d18217a35eb"
        ],
        [
            "apply (ParallelogrammCenterClockwiseIBC _ _ _ _ _ H H0).",
            "VernacExtend",
            "90ff8498e54f8fcd66668b02e7efededd7deb2c9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ParallelogrammClockwiseBDA : forall A B C D : Point, Parallelogramm A B C D -> Clockwise B D A.",
            "VernacStartTheoremProof",
            "ff13f9c0171dfa1c021bbe29d93fd50b95ce67e4"
        ],
        [
            "intros; destruct (ExistsParallelogrammCenter _ _ _ _ H) as (I, H0).",
            "VernacExtend",
            "5190edf4ec75ce3ea89745f6b955bf096caae350"
        ],
        [
            "apply (ClockwiseBetweenAMC B D A I).",
            "VernacExtend",
            "7205047e1c2fb127ef32f8988925a1472aecc1ee"
        ],
        [
            "apply (ParallelogrammCenterBetweenBID _ _ _ _ _ H H0).",
            "VernacExtend",
            "73ece614b34585d4ab9cc34520f105a4b4a17840"
        ],
        [
            "apply ClockwiseBCA; apply (ParallelogrammCenterClockwiseABI _ _ _ _ _ H H0).",
            "VernacExtend",
            "a361e60e3786d5e9f7455c06136a2f287d42f2d5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ParallelogrammPermut : forall A B C D : Point, Parallelogramm A B C D -> Parallelogramm B C D A.",
            "VernacStartTheoremProof",
            "64a15b4b26ecfd10975d5376baba3777e7e77d51"
        ],
        [
            "intros; unfold Parallelogramm in |- *; intuition.",
            "VernacExtend",
            "305c1cce2bcc3f03495646fa4711c16cb16b6e67"
        ],
        [
            "apply (ParallelogrammClockwiseBCD _ _ _ _ H).",
            "VernacExtend",
            "18808cf8d4500f65a18ed15356c1c6e888dc4dda"
        ],
        [
            "apply (ParallelogrammClockwiseBDA _ _ _ _ H).",
            "VernacExtend",
            "1804b4567eeb95d3e1b5cf3bf8f2c0ebcdeeb5ac"
        ],
        [
            "unfold Parallelogramm in *; intuition; autoDistance.",
            "VernacExtend",
            "75da055db45e868c55f18d310ccb1f13c8815ba0"
        ],
        [
            "unfold Parallelogramm in *; intuition; autoDistance.",
            "VernacExtend",
            "75da055db45e868c55f18d310ccb1f13c8815ba0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ParallelogrammSym : forall A B C D E : Point, Parallelogramm A B C D -> Distance D C = Distance C E -> Between D C E -> Parallelogramm A B E C.",
            "VernacStartTheoremProof",
            "2b77fdbff5499816a42b128cfbb5fda549674528"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (ExistsDParallelogramm C A B) as (F, H2).",
            "VernacExtend",
            "8974a474dbad5a7d4e74c86bb58c089361a10a93"
        ],
        [
            "unfold Parallelogramm in *; intuition; autoClockwise.",
            "VernacExtend",
            "726894742959055c44ebd34ea6a7d988735c6075"
        ],
        [
            "assert (H3 : E = F).",
            "VernacExtend",
            "41ddf40f6cb4af5751de5c4f202b49c4377d0441"
        ],
        [
            "apply (HalfLineEquidistantEqual C E F).",
            "VernacExtend",
            "9440f22a5505063ff4bc23c8c08120c3daa3d041"
        ],
        [
            "apply (BetweenDistinctBC _ _ _ H1).",
            "VernacExtend",
            "8e70f495e93dd9b07db5780e05efc99f21ee565e"
        ],
        [
            "assert (H3 := ParallelogrammParallelogrammBetween _ _ _ _ _ H H2).",
            "VernacExtend",
            "1c7c9a2fbef7c76830daf1152c22e69cd8f5f406"
        ],
        [
            "assert (H4 := EquiOrientedRev _ _ _ H1); canonize.",
            "VernacExtend",
            "c6faef84abcddeab163d4457d3ab7a493c05ab80"
        ],
        [
            "unfold Parallelogramm in *; intuition; autoDistance.",
            "VernacExtend",
            "75da055db45e868c55f18d310ccb1f13c8815ba0"
        ],
        [
            "rewrite H3; apply (ParallelogrammPermut _ _ _ _ H2).",
            "VernacExtend",
            "fed65ae165ecd3f4922beda132e9f1fa9ebcee22"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End PARALLELOGRAMM_PROP.",
            "VernacEndSegment",
            "958a0e9bb9e9ce890d9f722c98aa748ab2008b2b"
        ]
    ],
    "proofs": [
        {
            "name": "ExistsDParallelogramm",
            "line_nb": 2,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Hab := ClockwiseDistinctAB _ _ _ H).",
                        "VernacExtend",
                        "dba1f4f205edf83c9f24c79f5fb99036704c2ffc"
                    ]
                },
                {
                    "command": [
                        "assert (Hbc := ClockwiseDistinctBC _ _ _ H).",
                        "VernacExtend",
                        "d508b1557af71d0ffe655ce26e4fe316d5794ed4"
                    ]
                },
                {
                    "command": [
                        "setCircle A B C Hbc ipattern:(F1) ipattern:(G1).",
                        "VernacExtend",
                        "58c63f2d95f6210688135c7b22b11e6319610390"
                    ]
                },
                {
                    "command": [
                        "setCircle C A B Hab ipattern:(F2) ipattern:(G2).",
                        "VernacExtend",
                        "49c2a05ddd0c808979b54c16a603d1722c433736"
                    ]
                },
                {
                    "command": [
                        "setCinterclockC F1 F2 G1 G2 ipattern:(D) ipattern:(H1) ipattern:(H2) ipattern:(H3) ipattern:(H4).",
                        "VernacExtend",
                        "ff8545e5a8b6ae4a5566c8ace3beeaea26ec0b95"
                    ]
                },
                {
                    "command": [
                        "rewrite (DistSym A C); apply TriangleSpecComm; try autoDistinct.",
                        "VernacExtend",
                        "6fec018169e86adab905834a8cc9e3333675e0b1"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseTriangleSpec; autoClockwise.",
                        "VernacExtend",
                        "30994d1865bbedbacc70103e68e06c19a16f2241"
                    ]
                },
                {
                    "command": [
                        "exists D; unfold Parallelogramm in |- *; intuition.",
                        "VernacExtend",
                        "ceab41e861c7ea3d6a453274ad9778d53a0e4782"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ParallelogrammCenterClockwiseABI",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "unfold ParallelogrammCenter, Parallelogramm in |- *; intuition.",
                        "VernacExtend",
                        "282b6d60bddb91ac829f7a58ad07493087a15fb4"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseBCA; apply (BetweenClockwiseMBC C A B I).",
                        "VernacExtend",
                        "3eff08a667be86c9932c57c0edccf3cfdc1b1b04"
                    ]
                },
                {
                    "command": [
                        "autoClockwise.",
                        "VernacExtend",
                        "9409e85b86446941015e1da6ca2353051468a0c2"
                    ]
                },
                {
                    "command": [
                        "apply BetweenSym; trivial.",
                        "VernacExtend",
                        "4b64e2e034d8805eeb392d09c64cc0f02b3100e4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ParallelogrammCenterClockwiseAID",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "unfold ParallelogrammCenter, Parallelogramm in |- *; intuition.",
                        "VernacExtend",
                        "282b6d60bddb91ac829f7a58ad07493087a15fb4"
                    ]
                },
                {
                    "command": [
                        "apply (BetweenClockwiseAMC _ _ _ _ H0 H).",
                        "VernacExtend",
                        "c12de4fbda96ab8f17673a982abaf7f86e88db06"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ParallelogrammCenterClockwiseICD",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "unfold ParallelogrammCenter, Parallelogramm in |- *; intuition.",
                        "VernacExtend",
                        "282b6d60bddb91ac829f7a58ad07493087a15fb4"
                    ]
                },
                {
                    "command": [
                        "apply (BetweenClockwiseMBC _ _ _ _ H0 H).",
                        "VernacExtend",
                        "371a3582443f440789edd069cf7b912b3fbbb83a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ParallelogrammCenterClockwiseIBC",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "unfold ParallelogrammCenter, Parallelogramm in |- *; intuition.",
                        "VernacExtend",
                        "282b6d60bddb91ac829f7a58ad07493087a15fb4"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseBCA; apply (BetweenClockwiseAMC C A B I).",
                        "VernacExtend",
                        "242e4c0482bf3e3ecbaf197127f9249c9212029f"
                    ]
                },
                {
                    "command": [
                        "autoClockwise.",
                        "VernacExtend",
                        "9409e85b86446941015e1da6ca2353051468a0c2"
                    ]
                },
                {
                    "command": [
                        "apply BetweenSym; trivial.",
                        "VernacExtend",
                        "4b64e2e034d8805eeb392d09c64cc0f02b3100e4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ParallelogrammCenterCongruentTriangles",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (H1 := ParallelogrammCongruentTrianglesAC _ _ _ _ H).",
                        "VernacExtend",
                        "714a8272ce68de67ab3d654a9003479259a55c5f"
                    ]
                },
                {
                    "command": [
                        "assert (H2 := ParallelogrammCenterClockwiseABI _ _ _ _ _ _ H0).",
                        "VernacExtend",
                        "ad051b534493d197dcfa4accafcf59902d25814d"
                    ]
                },
                {
                    "command": [
                        "unfold ParallelogrammCenter, Parallelogramm in *; intuition.",
                        "VernacExtend",
                        "94c84f1e01f7bd418b9994f991bbd1882659235c"
                    ]
                },
                {
                    "command": [
                        "apply CongruentStrictTrianglesSASA.",
                        "VernacExtend",
                        "eed8d6d20c117025cee48565ebf8ee590f5b8f75"
                    ]
                },
                {
                    "command": [
                        "autoDistance.",
                        "VernacExtend",
                        "0c749375e926c665509e5f0134261461e6f9bac3"
                    ]
                },
                {
                    "command": [
                        "autoDistance.",
                        "VernacExtend",
                        "0c749375e926c665509e5f0134261461e6f9bac3"
                    ]
                },
                {
                    "command": [
                        "rewrite (BetweenAngleB A I B C).",
                        "VernacExtend",
                        "5d281fbc939097b80625bced744e6d74691cf3e9"
                    ]
                },
                {
                    "command": [
                        "rewrite (BetweenAngleB C I D A).",
                        "VernacExtend",
                        "9499df1807de251e19763105782322014d6686bb"
                    ]
                },
                {
                    "command": [
                        "apply CongruentStrictTrianglesA.",
                        "VernacExtend",
                        "b3ec2281705f5059ca2e6df1a88d47d2f19ad4a0"
                    ]
                },
                {
                    "command": [
                        "apply (CongruentStrictTrianglesACB _ _ _ _ _ _ H1).",
                        "VernacExtend",
                        "79d08674975e75f822f944f1b2ccc928268ff552"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "apply (BetweenSym _ _ _ H).",
                        "VernacExtend",
                        "c262d1f724db6c237e184a9d05f1c8adf746958a"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "intro; elim (ClockwiseNotCollinear _ _ _ H2); autoCollinear.",
                        "VernacExtend",
                        "42fbcafba3907ced26e3e7548b520d29e0cbfb98"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ParallelogrammCenterBetweenBID",
            "line_nb": 51,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (SupplementaryRec I B A D).",
                        "VernacExtend",
                        "8eae3b256ca65b2dfb0f779cd04f636e27e84ea2"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseBCA; apply (ParallelogrammCenterClockwiseABI _ _ _ _ _ H H0).",
                        "VernacExtend",
                        "a361e60e3786d5e9f7455c06136a2f287d42f2d5"
                    ]
                },
                {
                    "command": [
                        "apply (ParallelogrammCenterClockwiseAID _ _ _ _ _ H H0).",
                        "VernacExtend",
                        "2ecb1fc2f7ce0c681f538c6b52b632a9fddc9275"
                    ]
                },
                {
                    "command": [
                        "assert (H1 := ParallelogrammCenterCongruentTriangles A B C D I H H0).",
                        "VernacExtend",
                        "c91e748bf4da7e12a4b00ba026a93e14a7e59a41"
                    ]
                },
                {
                    "command": [
                        "rewrite (CongruentStrictTrianglesB _ _ _ _ _ _ (CongruentStrictTrianglesCBA _ _ _ _ _ _ H1)).",
                        "VernacExtend",
                        "ae6295e05e7a13bcdfdc88f282da5f97c5f43f4e"
                    ]
                },
                {
                    "command": [
                        "apply SupplementaryCommut.",
                        "VernacExtend",
                        "cb3cc742e4f15f943b6fbad33fe475a9bbe998b5"
                    ]
                },
                {
                    "command": [
                        "exists I; exists A; exists D; exists C; intuition.",
                        "VernacExtend",
                        "19b286ef688d38ed878dfab831ace84e19e41ff2"
                    ]
                },
                {
                    "command": [
                        "elim (ClockwiseDistinctBC _ _ _ (ParallelogrammCenterClockwiseAID _ _ _ _ _ H H0) H2).",
                        "VernacExtend",
                        "4d0d0a5bca6bc4671fa1cf1122ad7d48f99893c0"
                    ]
                },
                {
                    "command": [
                        "unfold ParallelogrammCenter in *; intuition.",
                        "VernacExtend",
                        "264627f380dc3dc0ac16813e329c80a65fbe89ce"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ParallelogrammCenterMidPointBD",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (H1 := ParallelogrammCenterCongruentTriangles A B C D I H H0).",
                        "VernacExtend",
                        "c91e748bf4da7e12a4b00ba026a93e14a7e59a41"
                    ]
                },
                {
                    "command": [
                        "apply (CongruentStrictTrianglesBC _ _ _ _ _ _ H1).",
                        "VernacExtend",
                        "15e555565caf99c6ab4edb775cf61548aaf4d4ac"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ParallelHalfLine",
            "line_nb": 68,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsParallelogrammCenter A B C D H) as (I, H1).",
                        "VernacExtend",
                        "b6b2eb6d16370f50c0fdbb9bf8a4b1ac9225219f"
                    ]
                },
                {
                    "command": [
                        "assert (H2 := ParallelogrammCenterClockwiseABI _ _ _ _ _ _ H1).",
                        "VernacExtend",
                        "47c7e3fd5f82190b8fffc7e024d384f04f8d4ac5"
                    ]
                },
                {
                    "command": [
                        "assert (H3 := ParallelogrammCenterCongruentTriangles _ _ _ _ _ _ H1).",
                        "VernacExtend",
                        "495370bb0d74c28defa02890ee59627018bb80f8"
                    ]
                },
                {
                    "command": [
                        "assert (H4 := ParallelogrammCenterClockwiseICD _ _ _ _ _ _ H1).",
                        "VernacExtend",
                        "78fd2bde1d0927e32343191b1057c0250b9a7375"
                    ]
                },
                {
                    "command": [
                        "destruct (CentralSymetPoint E I) as (F, (H5, H6)).",
                        "VernacExtend",
                        "f90a79fc70983f787ecce641f0118c9acfbebcf8"
                    ]
                },
                {
                    "command": [
                        "intro; subst; elim (ClockwiseNotCollinear _ _ _ H4).",
                        "VernacExtend",
                        "354e96b2170ff943ed5058650d7f3d5f7fa4ed20"
                    ]
                },
                {
                    "command": [
                        "apply CollinearCAB; apply (HalfLineCollinear _ _ _ H0).",
                        "VernacExtend",
                        "09029b051706d97bd2e6365901c29b7d895e3df3"
                    ]
                },
                {
                    "command": [
                        "assert (H7 : Clockwise C E I).",
                        "VernacExtend",
                        "b613bf081367f8ff670d618c73aea569c5a829a0"
                    ]
                },
                {
                    "command": [
                        "apply H0; autoClockwise.",
                        "VernacExtend",
                        "246452e801864344c431d94f1174d0d9d3305fa3"
                    ]
                },
                {
                    "command": [
                        "assert (H8 : Clockwise F E A).",
                        "VernacExtend",
                        "4bc2aa4e8e2a39275ff879933f0613cc23efa273"
                    ]
                },
                {
                    "command": [
                        "apply (ClockwiseBetweenMBC F E A I).",
                        "VernacExtend",
                        "3f8d80cf407d730330ba0d229ae74ee56f54eb2f"
                    ]
                },
                {
                    "command": [
                        "apply (BetweenSym _ _ _ H6).",
                        "VernacExtend",
                        "89dd484f106e80ba03205da7ee7b713d8748e55c"
                    ]
                },
                {
                    "command": [
                        "destruct H1.",
                        "VernacExtend",
                        "e752c2122f55c888e09082f784a6da990b01fbe7"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseBCA; apply (EquiOrientedRev _ _ _ H1).",
                        "VernacExtend",
                        "28247bec3f59b1ef8d2f156c5f25b00e1176a178"
                    ]
                },
                {
                    "command": [
                        "autoClockwise.",
                        "VernacExtend",
                        "9409e85b86446941015e1da6ca2353051468a0c2"
                    ]
                },
                {
                    "command": [
                        "assert (CongruentStrictTriangles E I C F I A).",
                        "VernacExtend",
                        "66e6f072868aab3058764bbf4918a74c0f80b450"
                    ]
                },
                {
                    "command": [
                        "unfold ParallelogrammCenter in H1; apply CongruentOpposedStrictTriangles.",
                        "VernacExtend",
                        "81c6118b3082156d78bc124be877b59217260ebe"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply BetweenSym; intuition.",
                        "VernacExtend",
                        "7fa3289e671fd5fb066b84380bede757372bb1c9"
                    ]
                },
                {
                    "command": [
                        "autoDistance.",
                        "VernacExtend",
                        "0c749375e926c665509e5f0134261461e6f9bac3"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "intro; elim (ClockwiseNotCollinear _ _ _ H7); autoCollinear.",
                        "VernacExtend",
                        "5cc531fbcf46b5afc6d4f027c76d3a3b0ac67cbc"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "assert (H10 : HalfLine A B F).",
                        "VernacExtend",
                        "11a960c110eba0058300e52cde48e0d578a43d48"
                    ]
                },
                {
                    "command": [
                        "apply (AngleBHalfLine A B I F).",
                        "VernacExtend",
                        "6fbc9c9263162f57513796c8a4e57b881219030c"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseCAB; apply (BetweenClockwiseAMC F E A I).",
                        "VernacExtend",
                        "d0ac8c6aab41a9032c98658542d6ba94fa894cfa"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply BetweenSym; trivial.",
                        "VernacExtend",
                        "4b64e2e034d8805eeb392d09c64cc0f02b3100e4"
                    ]
                },
                {
                    "command": [
                        "rewrite (CongruentStrictTrianglesA _ _ _ _ _ _ (CongruentStrictTrianglesACB _ _ _ _ _ _ H3)).",
                        "VernacExtend",
                        "7398738a3d8a0db062828afc7a629eee3399126b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (CongruentStrictTrianglesC _ _ _ _ _ _ H9).",
                        "VernacExtend",
                        "3abd9e8cdf64b9ea1204286c11dfb16c14b11c5f"
                    ]
                },
                {
                    "command": [
                        "apply HalfLineAngleB.",
                        "VernacExtend",
                        "1b8b2eb55cb34a1ed564e9765a4863c2dc608f5d"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply (HalfLineSym A B F).",
                        "VernacExtend",
                        "6b20c57a357ca67d7fcf5ccb80df96553ea49973"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "autoClockwise.",
                        "VernacExtend",
                        "9409e85b86446941015e1da6ca2353051468a0c2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "HalfLineParallel",
            "line_nb": 110,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsParallelogrammCenter A B C D H) as (I, H1).",
                        "VernacExtend",
                        "b6b2eb6d16370f50c0fdbb9bf8a4b1ac9225219f"
                    ]
                },
                {
                    "command": [
                        "assert (H2 := ParallelogrammCenterClockwiseABI _ _ _ _ _ _ H1).",
                        "VernacExtend",
                        "47c7e3fd5f82190b8fffc7e024d384f04f8d4ac5"
                    ]
                },
                {
                    "command": [
                        "assert (H3 := ParallelogrammCenterCongruentTriangles _ _ _ _ _ _ H1).",
                        "VernacExtend",
                        "495370bb0d74c28defa02890ee59627018bb80f8"
                    ]
                },
                {
                    "command": [
                        "assert (H4 := ParallelogrammCenterClockwiseICD _ _ _ _ _ _ H1).",
                        "VernacExtend",
                        "78fd2bde1d0927e32343191b1057c0250b9a7375"
                    ]
                },
                {
                    "command": [
                        "destruct (CentralSymetPoint E I) as (F, (H5, H6)).",
                        "VernacExtend",
                        "f90a79fc70983f787ecce641f0118c9acfbebcf8"
                    ]
                },
                {
                    "command": [
                        "intro; subst; elim (ClockwiseNotCollinear _ _ _ H4).",
                        "VernacExtend",
                        "354e96b2170ff943ed5058650d7f3d5f7fa4ed20"
                    ]
                },
                {
                    "command": [
                        "apply CollinearCBA; apply (HalfLineCollinear _ _ _ H0).",
                        "VernacExtend",
                        "29336dbd642749b526d8f7225acb8c5b7b280a28"
                    ]
                },
                {
                    "command": [
                        "assert (H7 : Clockwise E D I).",
                        "VernacExtend",
                        "ba67b35095955b02a9ad6216c05a0ba97fb0dcb9"
                    ]
                },
                {
                    "command": [
                        "generalizeChangeSense.",
                        "VernacExtend",
                        "be975c77c59224ac5239b36f960f98e48421bb54"
                    ]
                },
                {
                    "command": [
                        "apply H6; autoClockwise.",
                        "VernacExtend",
                        "3da5d3b632a0c49a7f89455a3591e4a79c375bd2"
                    ]
                },
                {
                    "command": [
                        "assert (H8 : Clockwise E F B).",
                        "VernacExtend",
                        "162a758d1e865b589f7106249e73be05f2c7a679"
                    ]
                },
                {
                    "command": [
                        "apply (ClockwiseBetweenAMC E F B I).",
                        "VernacExtend",
                        "30ca18449481686beedc59a04da59efbafd223c9"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "assert (H8 := BetweenSym _ _ _ (ParallelogrammCenterBetweenBID _ _ _ _ _ _ H1)).",
                        "VernacExtend",
                        "6e59a08478b3d3491abbe1a0d90ce5d56d1b91e5"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseCAB; canonize.",
                        "VernacExtend",
                        "e901920a306de779af262d61d4c22173bdf5d275"
                    ]
                },
                {
                    "command": [
                        "apply H11; autoClockwise.",
                        "VernacExtend",
                        "70b9a16e6e967b060bfefee6117f7ee601b9d0d1"
                    ]
                },
                {
                    "command": [
                        "assert (CongruentStrictTriangles D I E B I F).",
                        "VernacExtend",
                        "8c384ba7b2163fa24459c92deac07473796b6f00"
                    ]
                },
                {
                    "command": [
                        "unfold ParallelogrammCenter in H1; apply CongruentOpposedStrictTriangles.",
                        "VernacExtend",
                        "81c6118b3082156d78bc124be877b59217260ebe"
                    ]
                },
                {
                    "command": [
                        "apply (BetweenSym B I D (ParallelogrammCenterBetweenBID A B C D I H H1)).",
                        "VernacExtend",
                        "d37a0c5b21c160a554984b23ad02833889ffbe23"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "assert (H9 := ParallelogrammCenterMidPointBD A B C D I H H1); auto.",
                        "VernacExtend",
                        "730561d3ab3ea48eb0332e0f37d091bdc6431ba3"
                    ]
                },
                {
                    "command": [
                        "autoDistance.",
                        "VernacExtend",
                        "0c749375e926c665509e5f0134261461e6f9bac3"
                    ]
                },
                {
                    "command": [
                        "intro; elim (ClockwiseNotCollinear _ _ _ H7); autoCollinear.",
                        "VernacExtend",
                        "5cc531fbcf46b5afc6d4f027c76d3a3b0ac67cbc"
                    ]
                },
                {
                    "command": [
                        "assert (H10 : HalfLine B A F).",
                        "VernacExtend",
                        "63351bdab3c86622f888b9b93dbe5e02c5d0449d"
                    ]
                },
                {
                    "command": [
                        "apply (AngleCHalfLine B I A F).",
                        "VernacExtend",
                        "90bb37e97565e1750dbec93c01b33316822a970c"
                    ]
                },
                {
                    "command": [
                        "autoClockwise.",
                        "VernacExtend",
                        "9409e85b86446941015e1da6ca2353051468a0c2"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseCAB; apply (BetweenClockwiseMBC E F B I); trivial.",
                        "VernacExtend",
                        "052145610e19cb9d9a9486773dc62279aebc27fe"
                    ]
                },
                {
                    "command": [
                        "rewrite (CongruentStrictTrianglesB _ _ _ _ _ _ (CongruentStrictTrianglesBCA _ _ _ _ _ _ H3)).",
                        "VernacExtend",
                        "b3abb8d3d51ae351ee4ba137a0994b1ad250e078"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (CongruentStrictTrianglesA _ _ _ _ _ _ H9).",
                        "VernacExtend",
                        "c8db13f9220c5330b91431937a3f1f6d3aa856c3"
                    ]
                },
                {
                    "command": [
                        "apply HalfLineAngleC.",
                        "VernacExtend",
                        "911c8c97796f8b265e85385f475924f72b00a9b6"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "generalizeChangeSide.",
                        "VernacExtend",
                        "5e228b6b7c592e98c7b8e296efd481fe42ece523"
                    ]
                },
                {
                    "command": [
                        "apply H12.",
                        "VernacExtend",
                        "5a745b26a30edb1cd58baf290f56d389ba5cf959"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "autoClockwise.",
                        "VernacExtend",
                        "9409e85b86446941015e1da6ca2353051468a0c2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ParallelClockwise",
            "line_nb": 150,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsDParallelogramm _ _ _ H) as (D, H0).",
                        "VernacExtend",
                        "0f901eb9700534d59658686f308286fde3b9d582"
                    ]
                },
                {
                    "command": [
                        "exists D; canonize.",
                        "VernacExtend",
                        "7e9f1d97f8f7a48fdcf733436820619ca35d25ef"
                    ]
                },
                {
                    "command": [
                        "do 6 right; left; intros E H4.",
                        "VernacExtend",
                        "3574e126cf85796802502defc341093ed7261f55"
                    ]
                },
                {
                    "command": [
                        "destruct (FourPointsIntersectionPoint C D A E) as (F, (H5, H6)).",
                        "VernacExtend",
                        "c62436bb40ddba2af9079e55b36dce37d7173ccf"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogramm in *; autoClockwise.",
                        "VernacExtend",
                        "5910a2271ae431b27f04b8f3489cd7daca0fe389"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseBCA; apply (ClockwiseBetweenMBC E A B F).",
                        "VernacExtend",
                        "5bf11edb7db978830f7e991906ebfd47cff615f7"
                    ]
                },
                {
                    "command": [
                        "apply BetweenSym; trivial.",
                        "VernacExtend",
                        "4b64e2e034d8805eeb392d09c64cc0f02b3100e4"
                    ]
                },
                {
                    "command": [
                        "destruct (CollinearHalfLine _ _ _ H5).",
                        "VernacExtend",
                        "102e6070c197517eb4f842aaed55f8d8eed93f7e"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseCAB; apply (ParallelHalfLine A B C D F H0 H1).",
                        "VernacExtend",
                        "82cf34e9e530eeba0bf7a6e6b7f4c1e8c2f1829e"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseCAB; apply (HalfLineParallel A B C D F H0 H1).",
                        "VernacExtend",
                        "f3fcfa96c5f8a368cf2fcf196c348d8e72602952"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogramm in *; intuition.",
                        "VernacExtend",
                        "035a1abdd2b0ad0756ec5e9ded5a5c0d05f84971"
                    ]
                },
                {
                    "command": [
                        "autoDistinct.",
                        "VernacExtend",
                        "1dccbc4e736bbf8115e8a9e3ef867678fdeebbe8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ParallelogrammParallelogrammBetween",
            "line_nb": 166,
            "steps": [
                {
                    "command": [
                        "intros; apply (SumAngles C D A B E).",
                        "VernacExtend",
                        "1fd78dcd040edf1e36f4a2bbe95885d5e50b5c97"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogramm in *; intuition; autoClockwise.",
                        "VernacExtend",
                        "726894742959055c44ebd34ea6a7d988735c6075"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogramm in *; intuition; autoClockwise.",
                        "VernacExtend",
                        "726894742959055c44ebd34ea6a7d988735c6075"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogramm in *; intuition; autoClockwise.",
                        "VernacExtend",
                        "726894742959055c44ebd34ea6a7d988735c6075"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq; rewrite (AngleSym A C B).",
                        "VernacExtend",
                        "f36047b06769b60569c4fd3df70749665441dd6b"
                    ]
                },
                {
                    "command": [
                        "apply CongruentStrictTrianglesB.",
                        "VernacExtend",
                        "8598090a0d3aa2fdb4d94c16201cbfcfaebf5ee9"
                    ]
                },
                {
                    "command": [
                        "apply CongruentStrictTrianglesBAC; apply (ParallelogrammCongruentTrianglesAC _ _ _ _ H).",
                        "VernacExtend",
                        "e6b3388d11e88bd700a3f0d3399d1b5d82abd632"
                    ]
                },
                {
                    "command": [
                        "apply (ParallelogrammDistinctAC _ _ _ _ H).",
                        "VernacExtend",
                        "8b2f1558e3cbeee03a48897cafea58a2cd38a328"
                    ]
                },
                {
                    "command": [
                        "apply (ParallelogrammDistinctAB _ _ _ _ H).",
                        "VernacExtend",
                        "af71b92cdf661de812bc389e5ce2f6fb107179db"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq; apply CongruentStrictTrianglesC.",
                        "VernacExtend",
                        "70337fbe6f00d02f39cadecd9beb59edc22abe49"
                    ]
                },
                {
                    "command": [
                        "apply (ParallelogrammCongruentTrianglesAC _ _ _ _ H0).",
                        "VernacExtend",
                        "d9edf611a42127b1ed01e5b78955bc004042859a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ParallelogrammClockwiseBCD",
            "line_nb": 179,
            "steps": [
                {
                    "command": [
                        "intros; destruct (ExistsParallelogrammCenter _ _ _ _ H) as (I, H0).",
                        "VernacExtend",
                        "5190edf4ec75ce3ea89745f6b955bf096caae350"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseBCA; apply (ClockwiseBetweenMBC D B C I).",
                        "VernacExtend",
                        "ba1b9f65e997b653059081365834ff3798d481c3"
                    ]
                },
                {
                    "command": [
                        "apply BetweenSym; apply (ParallelogrammCenterBetweenBID _ _ _ _ _ H H0).",
                        "VernacExtend",
                        "aa15c991ccc11694fda9ba589d0e6d18217a35eb"
                    ]
                },
                {
                    "command": [
                        "apply (ParallelogrammCenterClockwiseIBC _ _ _ _ _ H H0).",
                        "VernacExtend",
                        "90ff8498e54f8fcd66668b02e7efededd7deb2c9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ParallelogrammClockwiseBDA",
            "line_nb": 185,
            "steps": [
                {
                    "command": [
                        "intros; destruct (ExistsParallelogrammCenter _ _ _ _ H) as (I, H0).",
                        "VernacExtend",
                        "5190edf4ec75ce3ea89745f6b955bf096caae350"
                    ]
                },
                {
                    "command": [
                        "apply (ClockwiseBetweenAMC B D A I).",
                        "VernacExtend",
                        "7205047e1c2fb127ef32f8988925a1472aecc1ee"
                    ]
                },
                {
                    "command": [
                        "apply (ParallelogrammCenterBetweenBID _ _ _ _ _ H H0).",
                        "VernacExtend",
                        "73ece614b34585d4ab9cc34520f105a4b4a17840"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseBCA; apply (ParallelogrammCenterClockwiseABI _ _ _ _ _ H H0).",
                        "VernacExtend",
                        "a361e60e3786d5e9f7455c06136a2f287d42f2d5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ParallelogrammPermut",
            "line_nb": 191,
            "steps": [
                {
                    "command": [
                        "intros; unfold Parallelogramm in |- *; intuition.",
                        "VernacExtend",
                        "305c1cce2bcc3f03495646fa4711c16cb16b6e67"
                    ]
                },
                {
                    "command": [
                        "apply (ParallelogrammClockwiseBCD _ _ _ _ H).",
                        "VernacExtend",
                        "18808cf8d4500f65a18ed15356c1c6e888dc4dda"
                    ]
                },
                {
                    "command": [
                        "apply (ParallelogrammClockwiseBDA _ _ _ _ H).",
                        "VernacExtend",
                        "1804b4567eeb95d3e1b5cf3bf8f2c0ebcdeeb5ac"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogramm in *; intuition; autoDistance.",
                        "VernacExtend",
                        "75da055db45e868c55f18d310ccb1f13c8815ba0"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogramm in *; intuition; autoDistance.",
                        "VernacExtend",
                        "75da055db45e868c55f18d310ccb1f13c8815ba0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ParallelogrammSym",
            "line_nb": 198,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsDParallelogramm C A B) as (F, H2).",
                        "VernacExtend",
                        "8974a474dbad5a7d4e74c86bb58c089361a10a93"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogramm in *; intuition; autoClockwise.",
                        "VernacExtend",
                        "726894742959055c44ebd34ea6a7d988735c6075"
                    ]
                },
                {
                    "command": [
                        "assert (H3 : E = F).",
                        "VernacExtend",
                        "41ddf40f6cb4af5751de5c4f202b49c4377d0441"
                    ]
                },
                {
                    "command": [
                        "apply (HalfLineEquidistantEqual C E F).",
                        "VernacExtend",
                        "9440f22a5505063ff4bc23c8c08120c3daa3d041"
                    ]
                },
                {
                    "command": [
                        "apply (BetweenDistinctBC _ _ _ H1).",
                        "VernacExtend",
                        "8e70f495e93dd9b07db5780e05efc99f21ee565e"
                    ]
                },
                {
                    "command": [
                        "assert (H3 := ParallelogrammParallelogrammBetween _ _ _ _ _ H H2).",
                        "VernacExtend",
                        "1c7c9a2fbef7c76830daf1152c22e69cd8f5f406"
                    ]
                },
                {
                    "command": [
                        "assert (H4 := EquiOrientedRev _ _ _ H1); canonize.",
                        "VernacExtend",
                        "c6faef84abcddeab163d4457d3ab7a493c05ab80"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogramm in *; intuition; autoDistance.",
                        "VernacExtend",
                        "75da055db45e868c55f18d310ccb1f13c8815ba0"
                    ]
                },
                {
                    "command": [
                        "rewrite H3; apply (ParallelogrammPermut _ _ _ _ H2).",
                        "VernacExtend",
                        "fed65ae165ecd3f4922beda132e9f1fa9ebcee22"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}