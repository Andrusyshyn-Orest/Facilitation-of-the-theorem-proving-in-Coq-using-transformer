{
    "filename": "D2_Axe.v",
    "coq_project": "ruler-compass-geometry",
    "vernac_cmds": [
        [
            "Require Export D1_DistanceProp.",
            "VernacRequire",
            "4f9c4125abb60e99a02ea8e6eaefdc0b0548f4f9"
        ],
        [
            "Section AXIS.",
            "VernacBeginSection",
            "a307531525bbd94bc1b371bcd9d07f5c2cd2a727"
        ],
        [
            "Require Export Arith.",
            "VernacRequire",
            "70e550b9603a7aa23f63274fffcc443ce7c8f433"
        ],
        [
            "Variables A B : Point.",
            "VernacAssumption",
            "8cdfde23f7bceb821def0ba0d92931187e26edd0"
        ],
        [
            "Hypothesis Hab : A <> B.",
            "VernacAssumption",
            "37ee101cfdff4d0d75fd9cb5b4a8e322657722c4"
        ],
        [
            "Definition StrongGraduation : forall n : nat, {N : Point | HalfLine A N B /\\ Distance A N = DistTimesn n A B /\\ (n > 0 -> A <> N)}.",
            "VernacDefinition",
            "294d3e410d607b12d2b26c3f5bda8f87e4ae5d1a"
        ],
        [
            "intro n.",
            "VernacExtend",
            "7b184e6f13215b0f6a04b4277e277a724a645d52"
        ],
        [
            "case n.",
            "VernacExtend",
            "11697c0361eed9b7e10df873f1d76a9d8f9f100a"
        ],
        [
            "exists A; repeat split.",
            "VernacExtend",
            "4129c8ac404b8d2fca1e4c8e9c4cae88933ffd67"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "elim (NotClockwiseAAB A x H).",
            "VernacExtend",
            "a674537c6f325e323a7a90110d379d06abe725e0"
        ],
        [
            "intro H; inversion H.",
            "VernacExtend",
            "60ff4146ff3a4de992ef4eada3323062cc0bd18f"
        ],
        [
            "induction n0.",
            "VernacExtend",
            "68655e776196c40e2d506edc563548ecabf16016"
        ],
        [
            "exists B; repeat split.",
            "VernacExtend",
            "b55c1716ec3f8eaf9a159e36818541a64feccd01"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite NullDist; rewrite LS0NeutralRight; trivial.",
            "VernacExtend",
            "8f331126eaf771e99c2786406b88231e7a63272e"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "destruct IHn0 as (N, (H1, (H2, H3))).",
            "VernacExtend",
            "3c4353973bee5e9bffedcf13d0186352eeb05508"
        ],
        [
            "assert (H : A <> N).",
            "VernacExtend",
            "3e79d94c01a290ad5220eacc8607da97c7721d3b"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "destruct (ExistsBetweenEquidistant N A A B) as (P, (H4, H5)).",
            "VernacExtend",
            "c95d25f62f94921f908b94745287b846b4264205"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "exists P; repeat split.",
            "VernacExtend",
            "36401c9dec3953a5565fd78ba1a7b5dce689986a"
        ],
        [
            "assert (H6 := BetweenSymHalfLine _ _ _ H4).",
            "VernacExtend",
            "66fc342b1c13f835f66c9712e2b65b18b72453d2"
        ],
        [
            "assert (H7 := HalfLineSym A N P H H6).",
            "VernacExtend",
            "0fea92fc809bfea724d993730963ad3e1af675fc"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "change (DistTimesn (S (S n0)) A B) with (LSplus (Distance A B) (DistTimesn (S n0) A B)) in |- *.",
            "VernacExtend",
            "a622ac0ac064b46833b28f83c5c2da74dee95169"
        ],
        [
            "rewrite <- H2; rewrite <- H5; rewrite LSplusComm.",
            "VernacExtend",
            "f3381843ba6f37a3f26d364314dd84aad1f913f6"
        ],
        [
            "rewrite ChaslesBetween.",
            "VernacExtend",
            "832933b1c55c35b9f8b316e166254dc21beb75f3"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply BetweenSym; trivial.",
            "VernacExtend",
            "4b64e2e034d8805eeb392d09c64cc0f02b3100e4"
        ],
        [
            "apply (EquiDistantDistinct A B); trivial.",
            "VernacExtend",
            "4031efc6df57a1c300df816f02791b5bdbdb827c"
        ],
        [
            "autoDistance.",
            "VernacExtend",
            "0c749375e926c665509e5f0134261461e6f9bac3"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "intros _; exact (BetweenDistinctCA _ _ _ H4).",
            "VernacExtend",
            "59417db5443f2a5b547d808dec87d086eba230dd"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition Graduation : forall n : nat, {N : Point | HalfLine A N B /\\ Distance A N = DistTimesn n A B}.",
            "VernacDefinition",
            "0b16dd4d3e976a28225a1ab133062c5036bb37cc"
        ],
        [
            "intro n; destruct (StrongGraduation n) as (P, H0); exists P; intuition.",
            "VernacExtend",
            "e10a9f33e8c06ddce1877388f5c087e8e7787a23"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End AXIS.",
            "VernacEndSegment",
            "32b1de23681f211e148e77c765b53b6c0e3b8c00"
        ]
    ],
    "proofs": [
        {
            "name": "StrongGraduation",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intro n.",
                        "VernacExtend",
                        "7b184e6f13215b0f6a04b4277e277a724a645d52"
                    ]
                },
                {
                    "command": [
                        "case n.",
                        "VernacExtend",
                        "11697c0361eed9b7e10df873f1d76a9d8f9f100a"
                    ]
                },
                {
                    "command": [
                        "exists A; repeat split.",
                        "VernacExtend",
                        "4129c8ac404b8d2fca1e4c8e9c4cae88933ffd67"
                    ]
                },
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "elim (NotClockwiseAAB A x H).",
                        "VernacExtend",
                        "a674537c6f325e323a7a90110d379d06abe725e0"
                    ]
                },
                {
                    "command": [
                        "intro H; inversion H.",
                        "VernacExtend",
                        "60ff4146ff3a4de992ef4eada3323062cc0bd18f"
                    ]
                },
                {
                    "command": [
                        "induction n0.",
                        "VernacExtend",
                        "68655e776196c40e2d506edc563548ecabf16016"
                    ]
                },
                {
                    "command": [
                        "exists B; repeat split.",
                        "VernacExtend",
                        "b55c1716ec3f8eaf9a159e36818541a64feccd01"
                    ]
                },
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite NullDist; rewrite LS0NeutralRight; trivial.",
                        "VernacExtend",
                        "8f331126eaf771e99c2786406b88231e7a63272e"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "destruct IHn0 as (N, (H1, (H2, H3))).",
                        "VernacExtend",
                        "3c4353973bee5e9bffedcf13d0186352eeb05508"
                    ]
                },
                {
                    "command": [
                        "assert (H : A <> N).",
                        "VernacExtend",
                        "3e79d94c01a290ad5220eacc8607da97c7721d3b"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsBetweenEquidistant N A A B) as (P, (H4, H5)).",
                        "VernacExtend",
                        "c95d25f62f94921f908b94745287b846b4264205"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "exists P; repeat split.",
                        "VernacExtend",
                        "36401c9dec3953a5565fd78ba1a7b5dce689986a"
                    ]
                },
                {
                    "command": [
                        "assert (H6 := BetweenSymHalfLine _ _ _ H4).",
                        "VernacExtend",
                        "66fc342b1c13f835f66c9712e2b65b18b72453d2"
                    ]
                },
                {
                    "command": [
                        "assert (H7 := HalfLineSym A N P H H6).",
                        "VernacExtend",
                        "0fea92fc809bfea724d993730963ad3e1af675fc"
                    ]
                },
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "change (DistTimesn (S (S n0)) A B) with (LSplus (Distance A B) (DistTimesn (S n0) A B)) in |- *.",
                        "VernacExtend",
                        "a622ac0ac064b46833b28f83c5c2da74dee95169"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H2; rewrite <- H5; rewrite LSplusComm.",
                        "VernacExtend",
                        "f3381843ba6f37a3f26d364314dd84aad1f913f6"
                    ]
                },
                {
                    "command": [
                        "rewrite ChaslesBetween.",
                        "VernacExtend",
                        "832933b1c55c35b9f8b316e166254dc21beb75f3"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply BetweenSym; trivial.",
                        "VernacExtend",
                        "4b64e2e034d8805eeb392d09c64cc0f02b3100e4"
                    ]
                },
                {
                    "command": [
                        "apply (EquiDistantDistinct A B); trivial.",
                        "VernacExtend",
                        "4031efc6df57a1c300df816f02791b5bdbdb827c"
                    ]
                },
                {
                    "command": [
                        "autoDistance.",
                        "VernacExtend",
                        "0c749375e926c665509e5f0134261461e6f9bac3"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "intros _; exact (BetweenDistinctCA _ _ _ H4).",
                        "VernacExtend",
                        "59417db5443f2a5b547d808dec87d086eba230dd"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Graduation",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "intro n; destruct (StrongGraduation n) as (P, H0); exists P; intuition.",
                        "VernacExtend",
                        "e10a9f33e8c06ddce1877388f5c087e8e7787a23"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        }
    ]
}