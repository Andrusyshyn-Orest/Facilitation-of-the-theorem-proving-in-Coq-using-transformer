{
    "filename": "C8_DroitesConfondues.v",
    "coq_project": "ruler-compass-geometry",
    "vernac_cmds": [
        [
            "Require Export C7_DroitesSecantesProp.",
            "VernacRequire",
            "ab3e5ad66edaea77e982cee49c25336e48a7c649"
        ],
        [
            "Section PARALLEL_SUPERIMPOSED.",
            "VernacBeginSection",
            "ed02cb5f366a4e3aa0d04eaea7969b905596fe4c"
        ],
        [
            "Lemma EquiDirectedCollinearEquiDirected : forall A B C D E : Point, EquiDirected A B C D -> Collinear C D E -> C <> D -> C <> E -> EquiDirected A B C E.",
            "VernacStartTheoremProof",
            "ff6e1c4d9338cbad3e6cebf6280da1ae2f737504"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (ExclusiveTwoCases _ _ _ H2 H0).",
            "VernacExtend",
            "e4edb76c40bbe070bb40e3371f9a3d68b3668557"
        ],
        [
            "generalizeChange.",
            "VernacExtend",
            "d3c977ebf7f2c5588433912c8eb25fd198cbcf67"
        ],
        [
            "assert (H4 := EquiOrientedSym C D E H1 H3).",
            "VernacExtend",
            "4ded647823bb4469bcf2cef6c91484ac57505e7e"
        ],
        [
            "generalizeChange.",
            "VernacExtend",
            "d3c977ebf7f2c5588433912c8eb25fd198cbcf67"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma EquiDirectedCollinearCollinearEquiDirected : forall A B C D E F : Point, EquiDirected A B C D -> Collinear C D E -> C <> D -> Collinear C D F -> E <> F -> EquiDirected A B E F.",
            "VernacStartTheoremProof",
            "94da6ce9fb315cb365cad1ee321db7f1eda0b7a1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (Apart C D E H1).",
            "VernacExtend",
            "4c7c1c1166beddd204778cdd554786b17fd74b32"
        ],
        [
            "apply (EquiDirectedCollinearEquiDirected A B E C F).",
            "VernacExtend",
            "0ecab6b6096ef6244369584064260419d29b500f"
        ],
        [
            "apply EquiDirectedPermutCD; apply (EquiDirectedCollinearEquiDirected A B C D E H H0 H1 H4).",
            "VernacExtend",
            "561bdb2cdf2aaae5cb5672456dfaae531db49605"
        ],
        [
            "apply CollinearBAC; apply (CollinearTrans C D E F H1 H0 H2).",
            "VernacExtend",
            "5af1c27abbd2d71abe0d154c313eead8242a2f89"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply (EquiDirectedCollinearEquiDirected A B E D F).",
            "VernacExtend",
            "18d96bf13fc0adb06155f459bb40ddcf5b1c3560"
        ],
        [
            "apply EquiDirectedPermutCD; apply (EquiDirectedCollinearEquiDirected A B D C E).",
            "VernacExtend",
            "f39a80843dbc24c994b0b14658df63a1e7e58a90"
        ],
        [
            "apply EquiDirectedPermutCD; trivial.",
            "VernacExtend",
            "830c766838edbc5f91018cbc7985ca2b5016be73"
        ],
        [
            "autoCollinear.",
            "VernacExtend",
            "f9b5517305c4ea7b3088acc38c4b180fb95147f1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply CollinearBAC; apply (CollinearTrans D C E F); autoCollinear.",
            "VernacExtend",
            "d6fc62f8e99f6ab43d5361b2ee71e54fc66ed0e8"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma TwoPointsSecantLines : forall A B : Point, forall F F' : Figure, forall D : Line F, forall D' : Line F', Clockwise (LineA F D) (LineB F D) A -> ~Clockwise (LineA F D) (LineB F D) B -> F' A -> F' B -> SecantLines F F' D D'.",
            "VernacStartTheoremProof",
            "e31b9132db3548464d40b4364138782143656bac"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold SecantLines, ParallelLines in |- *.",
            "VernacExtend",
            "cf5a9bb70d1561bba713d1fed2f420f2e0a6f7f3"
        ],
        [
            "intro; elim (FourPointsSecantLine (LineA F D) (LineB F D) A B H H0).",
            "VernacExtend",
            "91a4c87eb965d8ae8cf07e7a091c7d4d8e17661f"
        ],
        [
            "apply (EquiDirectedCollinearCollinearEquiDirected _ _ _ _ A B H3).",
            "VernacExtend",
            "f92119792030b5a5e6f7463d085a9ea6904a15e9"
        ],
        [
            "apply FLineIn; trivial.",
            "VernacExtend",
            "6e1a9b318c2093116f73fd3494b2084873715aaa"
        ],
        [
            "apply LineH.",
            "VernacExtend",
            "eea30bbc11cac710cff5ed337fc8acc1cd3bd3a4"
        ],
        [
            "apply FLineIn; trivial.",
            "VernacExtend",
            "6e1a9b318c2093116f73fd3494b2084873715aaa"
        ],
        [
            "intro; elim H0; subst; auto.",
            "VernacExtend",
            "b2b850963e761c19884183e8d1a64cae82d03655"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma EquiDirectedLineACollinear : forall A : Point, forall F F' : Figure, forall D : Line F, forall D' : Line F', EquiDirected (LineA F D) (LineB F D) (LineA F' D') (LineB F' D') -> F A -> F' A -> LineA F D <> A -> F' (LineA F D).",
            "VernacStartTheoremProof",
            "3cbeeb17c718fe2ab69fd9fa74272adcdf56cd2e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "decompose [or] (ThreeCases (LineA F' D') (LineB F' D') (LineA F D)).",
            "VernacExtend",
            "57cc8cc591cfdf3ebe07310e349faea2b60488ba"
        ],
        [
            "elim (FourPointsSecantLine (LineA F' D') (LineB F' D') (LineA F D) A H3).",
            "VernacExtend",
            "f76ba0462ba21f8e04d1d2c31e7c9e03630f4fa0"
        ],
        [
            "apply CollinearNotClockwiseABC; apply FLineIn; trivial.",
            "VernacExtend",
            "dacdf752393bee845385ce82bde1a50bf0744d34"
        ],
        [
            "apply (EquiDirectedCollinearEquiDirected (LineA F' D') (LineB F' D') (LineA F D) (LineB F D) A).",
            "VernacExtend",
            "e9cb17b2f401de6d1c510f48532d3b9dfd432027"
        ],
        [
            "apply EquiDirectedSym; trivial.",
            "VernacExtend",
            "2c3597205da9ef10934b2bb5307417c9a09a422f"
        ],
        [
            "apply FLineIn; trivial.",
            "VernacExtend",
            "6e1a9b318c2093116f73fd3494b2084873715aaa"
        ],
        [
            "apply LineH.",
            "VernacExtend",
            "eea30bbc11cac710cff5ed337fc8acc1cd3bd3a4"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "elim (FourPointsSecantLine (LineB F' D') (LineA F' D') (LineA F D) A H4).",
            "VernacExtend",
            "e962015d2fd5724145b3424fb0008d70423f6063"
        ],
        [
            "apply CollinearNotClockwiseBAC; apply FLineIn; trivial.",
            "VernacExtend",
            "b1aa3cfb2fe932a9931f8021283925599b7489ae"
        ],
        [
            "apply EquiDirectedPermut; apply (EquiDirectedCollinearEquiDirected (LineA F' D') (LineB F' D') (LineA F D) (LineB F D) A).",
            "VernacExtend",
            "6288c3fe8e154cc5a1dbedb547a9bc3bf0e00701"
        ],
        [
            "apply EquiDirectedSym; trivial.",
            "VernacExtend",
            "2c3597205da9ef10934b2bb5307417c9a09a422f"
        ],
        [
            "apply FLineIn; trivial.",
            "VernacExtend",
            "6e1a9b318c2093116f73fd3494b2084873715aaa"
        ],
        [
            "apply LineH.",
            "VernacExtend",
            "eea30bbc11cac710cff5ed337fc8acc1cd3bd3a4"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply (InFLine F' D'); trivial.",
            "VernacExtend",
            "709ed84cef40f6deaf1616073e53c656b43119e3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma EquiDirectedLineBCollinear : forall A : Point, forall F F' : Figure, forall D : Line F, forall D' : Line F', EquiDirected (LineA F D) (LineB F D) (LineA F' D') (LineB F' D') -> F A -> F' A -> LineB F D <> A -> F' (LineB F D).",
            "VernacStartTheoremProof",
            "52e9a8efacf124a4bf54cff9b0760a8cae9e6d82"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "decompose [or] (ThreeCases (LineA F' D') (LineB F' D') (LineB F D)).",
            "VernacExtend",
            "546be0f1cea74ed8033244f5f4986b27c6f4722e"
        ],
        [
            "elim (FourPointsSecantLine (LineA F' D') (LineB F' D') (LineB F D) A H3).",
            "VernacExtend",
            "248d6d94d791cd67272b8e4cbb6782381d878e32"
        ],
        [
            "apply CollinearNotClockwiseABC; apply FLineIn; trivial.",
            "VernacExtend",
            "dacdf752393bee845385ce82bde1a50bf0744d34"
        ],
        [
            "apply (EquiDirectedCollinearEquiDirected (LineA F' D') (LineB F' D') (LineB F D) (LineA F D) A).",
            "VernacExtend",
            "fb91b9fae5a2792b4b5d36987521001a75c17248"
        ],
        [
            "apply EquiDirectedSym; apply EquiDirectedPermut; trivial.",
            "VernacExtend",
            "b002d1032e1a054bfdc78377dc98174ca4277eec"
        ],
        [
            "apply CollinearBAC; apply FLineIn; trivial.",
            "VernacExtend",
            "0fe021131a93268a94555e5c533d3829a79492bd"
        ],
        [
            "apply sym_not_eq; apply LineH.",
            "VernacExtend",
            "a9a1bcc8f693759284c4b85467a265a50726133d"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "elim (FourPointsSecantLine (LineB F' D') (LineA F' D') (LineB F D) A H4).",
            "VernacExtend",
            "7bcc8388d2b96fa442cc2ebc9b18f7aedeb592ac"
        ],
        [
            "apply CollinearNotClockwiseBAC; apply FLineIn; trivial.",
            "VernacExtend",
            "b1aa3cfb2fe932a9931f8021283925599b7489ae"
        ],
        [
            "apply EquiDirectedPermut; apply (EquiDirectedCollinearEquiDirected (LineA F' D') (LineB F' D') (LineB F D) (LineA F D) A).",
            "VernacExtend",
            "b6f1be1d25aae6d80e17a617afafca5f1f4761c8"
        ],
        [
            "apply EquiDirectedSym; apply EquiDirectedPermut; trivial.",
            "VernacExtend",
            "b002d1032e1a054bfdc78377dc98174ca4277eec"
        ],
        [
            "apply CollinearBAC; apply FLineIn; trivial.",
            "VernacExtend",
            "0fe021131a93268a94555e5c533d3829a79492bd"
        ],
        [
            "apply sym_not_eq; apply LineH.",
            "VernacExtend",
            "a9a1bcc8f693759284c4b85467a265a50726133d"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply (InFLine F' D'); trivial.",
            "VernacExtend",
            "709ed84cef40f6deaf1616073e53c656b43119e3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CollinearSuperimposed : forall A : Point, forall F F' : Figure, forall D : Line F, forall D' : Line F', EquiDirected (LineA F D) (LineB F D) (LineA F' D') (LineB F' D') -> F A -> F' A -> Superimposed F F'.",
            "VernacStartTheoremProof",
            "86e67683a5a3af43fea5462b1a6550c497b9d5ce"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (Apart (LineA F D) (LineB F D) A (LineH F D)).",
            "VernacExtend",
            "337cc168ce5a3a06abd0ca701b442f96067e0776"
        ],
        [
            "apply (SuperimposedTrans F (Collinear A (LineA F D)) F').",
            "VernacExtend",
            "0839eb171d98674129bcb8b904427cfe872261d0"
        ],
        [
            "apply (LineAB A (LineA F D) F D (sym_not_eq H2) H0 (FLineA F D)).",
            "VernacExtend",
            "4b128048488e6d441e06327c467480bb809f8065"
        ],
        [
            "apply SuperimposedSym; apply (LineAB A (LineA F D) F' D' (sym_not_eq H2) H1).",
            "VernacExtend",
            "9629aafc3a7296e64853b28d01f898a8947059cb"
        ],
        [
            "apply (EquiDirectedLineACollinear A F F' D D' H H0 H1 H2).",
            "VernacExtend",
            "870aa8b821822e431d91fe79d0395b30046f13ac"
        ],
        [
            "apply (SuperimposedTrans F (Collinear A (LineB F D)) F').",
            "VernacExtend",
            "da167afb9e5e8c1e1b65d9fc1feea35ccb120e2d"
        ],
        [
            "apply (LineAB A (LineB F D) F D (sym_not_eq H2) H0 (FLineB F D)).",
            "VernacExtend",
            "2b0020f4b947b2da3add5143e234133850414896"
        ],
        [
            "apply SuperimposedSym; apply (LineAB A (LineB F D) F' D' (sym_not_eq H2) H1).",
            "VernacExtend",
            "68d540e4756f83b2e02ae2a225b52124d80dd88b"
        ],
        [
            "apply (EquiDirectedLineBCollinear A F F' D D' H H0 H1 H2).",
            "VernacExtend",
            "dc46ed94954010164dda51f5fb1f45e1ee58245f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End PARALLEL_SUPERIMPOSED.",
            "VernacEndSegment",
            "ee25c7ef8d744990f6aa755da6e6b9aef888d1f9"
        ]
    ],
    "proofs": [
        {
            "name": "EquiDirectedCollinearEquiDirected",
            "line_nb": 2,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (ExclusiveTwoCases _ _ _ H2 H0).",
                        "VernacExtend",
                        "e4edb76c40bbe070bb40e3371f9a3d68b3668557"
                    ]
                },
                {
                    "command": [
                        "generalizeChange.",
                        "VernacExtend",
                        "d3c977ebf7f2c5588433912c8eb25fd198cbcf67"
                    ]
                },
                {
                    "command": [
                        "assert (H4 := EquiOrientedSym C D E H1 H3).",
                        "VernacExtend",
                        "4ded647823bb4469bcf2cef6c91484ac57505e7e"
                    ]
                },
                {
                    "command": [
                        "generalizeChange.",
                        "VernacExtend",
                        "d3c977ebf7f2c5588433912c8eb25fd198cbcf67"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "EquiDirectedCollinearCollinearEquiDirected",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (Apart C D E H1).",
                        "VernacExtend",
                        "4c7c1c1166beddd204778cdd554786b17fd74b32"
                    ]
                },
                {
                    "command": [
                        "apply (EquiDirectedCollinearEquiDirected A B E C F).",
                        "VernacExtend",
                        "0ecab6b6096ef6244369584064260419d29b500f"
                    ]
                },
                {
                    "command": [
                        "apply EquiDirectedPermutCD; apply (EquiDirectedCollinearEquiDirected A B C D E H H0 H1 H4).",
                        "VernacExtend",
                        "561bdb2cdf2aaae5cb5672456dfaae531db49605"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBAC; apply (CollinearTrans C D E F H1 H0 H2).",
                        "VernacExtend",
                        "5af1c27abbd2d71abe0d154c313eead8242a2f89"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply (EquiDirectedCollinearEquiDirected A B E D F).",
                        "VernacExtend",
                        "18d96bf13fc0adb06155f459bb40ddcf5b1c3560"
                    ]
                },
                {
                    "command": [
                        "apply EquiDirectedPermutCD; apply (EquiDirectedCollinearEquiDirected A B D C E).",
                        "VernacExtend",
                        "f39a80843dbc24c994b0b14658df63a1e7e58a90"
                    ]
                },
                {
                    "command": [
                        "apply EquiDirectedPermutCD; trivial.",
                        "VernacExtend",
                        "830c766838edbc5f91018cbc7985ca2b5016be73"
                    ]
                },
                {
                    "command": [
                        "autoCollinear.",
                        "VernacExtend",
                        "f9b5517305c4ea7b3088acc38c4b180fb95147f1"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBAC; apply (CollinearTrans D C E F); autoCollinear.",
                        "VernacExtend",
                        "d6fc62f8e99f6ab43d5361b2ee71e54fc66ed0e8"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "TwoPointsSecantLines",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold SecantLines, ParallelLines in |- *.",
                        "VernacExtend",
                        "cf5a9bb70d1561bba713d1fed2f420f2e0a6f7f3"
                    ]
                },
                {
                    "command": [
                        "intro; elim (FourPointsSecantLine (LineA F D) (LineB F D) A B H H0).",
                        "VernacExtend",
                        "91a4c87eb965d8ae8cf07e7a091c7d4d8e17661f"
                    ]
                },
                {
                    "command": [
                        "apply (EquiDirectedCollinearCollinearEquiDirected _ _ _ _ A B H3).",
                        "VernacExtend",
                        "f92119792030b5a5e6f7463d085a9ea6904a15e9"
                    ]
                },
                {
                    "command": [
                        "apply FLineIn; trivial.",
                        "VernacExtend",
                        "6e1a9b318c2093116f73fd3494b2084873715aaa"
                    ]
                },
                {
                    "command": [
                        "apply LineH.",
                        "VernacExtend",
                        "eea30bbc11cac710cff5ed337fc8acc1cd3bd3a4"
                    ]
                },
                {
                    "command": [
                        "apply FLineIn; trivial.",
                        "VernacExtend",
                        "6e1a9b318c2093116f73fd3494b2084873715aaa"
                    ]
                },
                {
                    "command": [
                        "intro; elim H0; subst; auto.",
                        "VernacExtend",
                        "b2b850963e761c19884183e8d1a64cae82d03655"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "EquiDirectedLineACollinear",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "decompose [or] (ThreeCases (LineA F' D') (LineB F' D') (LineA F D)).",
                        "VernacExtend",
                        "57cc8cc591cfdf3ebe07310e349faea2b60488ba"
                    ]
                },
                {
                    "command": [
                        "elim (FourPointsSecantLine (LineA F' D') (LineB F' D') (LineA F D) A H3).",
                        "VernacExtend",
                        "f76ba0462ba21f8e04d1d2c31e7c9e03630f4fa0"
                    ]
                },
                {
                    "command": [
                        "apply CollinearNotClockwiseABC; apply FLineIn; trivial.",
                        "VernacExtend",
                        "dacdf752393bee845385ce82bde1a50bf0744d34"
                    ]
                },
                {
                    "command": [
                        "apply (EquiDirectedCollinearEquiDirected (LineA F' D') (LineB F' D') (LineA F D) (LineB F D) A).",
                        "VernacExtend",
                        "e9cb17b2f401de6d1c510f48532d3b9dfd432027"
                    ]
                },
                {
                    "command": [
                        "apply EquiDirectedSym; trivial.",
                        "VernacExtend",
                        "2c3597205da9ef10934b2bb5307417c9a09a422f"
                    ]
                },
                {
                    "command": [
                        "apply FLineIn; trivial.",
                        "VernacExtend",
                        "6e1a9b318c2093116f73fd3494b2084873715aaa"
                    ]
                },
                {
                    "command": [
                        "apply LineH.",
                        "VernacExtend",
                        "eea30bbc11cac710cff5ed337fc8acc1cd3bd3a4"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "elim (FourPointsSecantLine (LineB F' D') (LineA F' D') (LineA F D) A H4).",
                        "VernacExtend",
                        "e962015d2fd5724145b3424fb0008d70423f6063"
                    ]
                },
                {
                    "command": [
                        "apply CollinearNotClockwiseBAC; apply FLineIn; trivial.",
                        "VernacExtend",
                        "b1aa3cfb2fe932a9931f8021283925599b7489ae"
                    ]
                },
                {
                    "command": [
                        "apply EquiDirectedPermut; apply (EquiDirectedCollinearEquiDirected (LineA F' D') (LineB F' D') (LineA F D) (LineB F D) A).",
                        "VernacExtend",
                        "6288c3fe8e154cc5a1dbedb547a9bc3bf0e00701"
                    ]
                },
                {
                    "command": [
                        "apply EquiDirectedSym; trivial.",
                        "VernacExtend",
                        "2c3597205da9ef10934b2bb5307417c9a09a422f"
                    ]
                },
                {
                    "command": [
                        "apply FLineIn; trivial.",
                        "VernacExtend",
                        "6e1a9b318c2093116f73fd3494b2084873715aaa"
                    ]
                },
                {
                    "command": [
                        "apply LineH.",
                        "VernacExtend",
                        "eea30bbc11cac710cff5ed337fc8acc1cd3bd3a4"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply (InFLine F' D'); trivial.",
                        "VernacExtend",
                        "709ed84cef40f6deaf1616073e53c656b43119e3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "EquiDirectedLineBCollinear",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "decompose [or] (ThreeCases (LineA F' D') (LineB F' D') (LineB F D)).",
                        "VernacExtend",
                        "546be0f1cea74ed8033244f5f4986b27c6f4722e"
                    ]
                },
                {
                    "command": [
                        "elim (FourPointsSecantLine (LineA F' D') (LineB F' D') (LineB F D) A H3).",
                        "VernacExtend",
                        "248d6d94d791cd67272b8e4cbb6782381d878e32"
                    ]
                },
                {
                    "command": [
                        "apply CollinearNotClockwiseABC; apply FLineIn; trivial.",
                        "VernacExtend",
                        "dacdf752393bee845385ce82bde1a50bf0744d34"
                    ]
                },
                {
                    "command": [
                        "apply (EquiDirectedCollinearEquiDirected (LineA F' D') (LineB F' D') (LineB F D) (LineA F D) A).",
                        "VernacExtend",
                        "fb91b9fae5a2792b4b5d36987521001a75c17248"
                    ]
                },
                {
                    "command": [
                        "apply EquiDirectedSym; apply EquiDirectedPermut; trivial.",
                        "VernacExtend",
                        "b002d1032e1a054bfdc78377dc98174ca4277eec"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBAC; apply FLineIn; trivial.",
                        "VernacExtend",
                        "0fe021131a93268a94555e5c533d3829a79492bd"
                    ]
                },
                {
                    "command": [
                        "apply sym_not_eq; apply LineH.",
                        "VernacExtend",
                        "a9a1bcc8f693759284c4b85467a265a50726133d"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "elim (FourPointsSecantLine (LineB F' D') (LineA F' D') (LineB F D) A H4).",
                        "VernacExtend",
                        "7bcc8388d2b96fa442cc2ebc9b18f7aedeb592ac"
                    ]
                },
                {
                    "command": [
                        "apply CollinearNotClockwiseBAC; apply FLineIn; trivial.",
                        "VernacExtend",
                        "b1aa3cfb2fe932a9931f8021283925599b7489ae"
                    ]
                },
                {
                    "command": [
                        "apply EquiDirectedPermut; apply (EquiDirectedCollinearEquiDirected (LineA F' D') (LineB F' D') (LineB F D) (LineA F D) A).",
                        "VernacExtend",
                        "b6f1be1d25aae6d80e17a617afafca5f1f4761c8"
                    ]
                },
                {
                    "command": [
                        "apply EquiDirectedSym; apply EquiDirectedPermut; trivial.",
                        "VernacExtend",
                        "b002d1032e1a054bfdc78377dc98174ca4277eec"
                    ]
                },
                {
                    "command": [
                        "apply CollinearBAC; apply FLineIn; trivial.",
                        "VernacExtend",
                        "0fe021131a93268a94555e5c533d3829a79492bd"
                    ]
                },
                {
                    "command": [
                        "apply sym_not_eq; apply LineH.",
                        "VernacExtend",
                        "a9a1bcc8f693759284c4b85467a265a50726133d"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply (InFLine F' D'); trivial.",
                        "VernacExtend",
                        "709ed84cef40f6deaf1616073e53c656b43119e3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CollinearSuperimposed",
            "line_nb": 75,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (Apart (LineA F D) (LineB F D) A (LineH F D)).",
                        "VernacExtend",
                        "337cc168ce5a3a06abd0ca701b442f96067e0776"
                    ]
                },
                {
                    "command": [
                        "apply (SuperimposedTrans F (Collinear A (LineA F D)) F').",
                        "VernacExtend",
                        "0839eb171d98674129bcb8b904427cfe872261d0"
                    ]
                },
                {
                    "command": [
                        "apply (LineAB A (LineA F D) F D (sym_not_eq H2) H0 (FLineA F D)).",
                        "VernacExtend",
                        "4b128048488e6d441e06327c467480bb809f8065"
                    ]
                },
                {
                    "command": [
                        "apply SuperimposedSym; apply (LineAB A (LineA F D) F' D' (sym_not_eq H2) H1).",
                        "VernacExtend",
                        "9629aafc3a7296e64853b28d01f898a8947059cb"
                    ]
                },
                {
                    "command": [
                        "apply (EquiDirectedLineACollinear A F F' D D' H H0 H1 H2).",
                        "VernacExtend",
                        "870aa8b821822e431d91fe79d0395b30046f13ac"
                    ]
                },
                {
                    "command": [
                        "apply (SuperimposedTrans F (Collinear A (LineB F D)) F').",
                        "VernacExtend",
                        "da167afb9e5e8c1e1b65d9fc1feea35ccb120e2d"
                    ]
                },
                {
                    "command": [
                        "apply (LineAB A (LineB F D) F D (sym_not_eq H2) H0 (FLineB F D)).",
                        "VernacExtend",
                        "2b0020f4b947b2da3add5143e234133850414896"
                    ]
                },
                {
                    "command": [
                        "apply SuperimposedSym; apply (LineAB A (LineB F D) F' D' (sym_not_eq H2) H1).",
                        "VernacExtend",
                        "68d540e4756f83b2e02ae2a225b52124d80dd88b"
                    ]
                },
                {
                    "command": [
                        "apply (EquiDirectedLineBCollinear A F F' D D' H H0 H1 H2).",
                        "VernacExtend",
                        "dc46ed94954010164dda51f5fb1f45e1ee58245f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}