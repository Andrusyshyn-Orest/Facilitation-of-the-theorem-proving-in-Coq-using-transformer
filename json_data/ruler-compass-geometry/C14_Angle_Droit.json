{
    "filename": "C14_Angle_Droit.v",
    "coq_project": "ruler-compass-geometry",
    "vernac_cmds": [
        [
            "Require Export C13_Angles_Supplem.",
            "VernacRequire",
            "b813d8e0217674d7c3b6a04096160d29f5bffcf3"
        ],
        [
            "Unset Standard Proposition Elimination Names.",
            "VernacUnsetOption",
            "911574cdf91989455d0d3d11c7a9b0ca10fd1ae6"
        ],
        [
            "Section RIGHTANGLE.",
            "VernacBeginSection",
            "62e024342782d4c99802762a5f328ceda2017043"
        ],
        [
            "Definition Vv : Point.",
            "VernacDefinition",
            "22fb84d9bd2758b70ab3914b5b30c727e49f18e5"
        ],
        [
            "destruct (EquilateralClockwise Uu Ww (BetweenDistinctCA Ww Oo Uu BetweenWwOoUu)) as (X, (H1,H2)).",
            "VernacExtend",
            "54a0638494b7a2c88d214c5220cfd6d48916991d"
        ],
        [
            "destruct (ExistsHalfLineEquidistant Oo X Oo Uu) as (Y, (H3, H4)).",
            "VernacExtend",
            "684d4f84e5cd39ab95475f376add95d63081625d"
        ],
        [
            "intro; subst.",
            "VernacExtend",
            "9021e22274b6259ff513a190b208a4a3aa9b2ede"
        ],
        [
            "elim (ClockwiseNotCollinear _ _ _ H2).",
            "VernacExtend",
            "d9beb211b6d1b40ad5ee83d75ad5f0720b4823d8"
        ],
        [
            "apply CollinearACB; exact (BetweenCollinear _ _ _ BetweenUuOoWw).",
            "VernacExtend",
            "344597f0537b98e0fa1497701e306f26dd1a60d7"
        ],
        [
            "exact DistinctOoUu.",
            "VernacExtend",
            "9efc6bea4f999954225741dd37dfa40fdc0f9eae"
        ],
        [
            "exact Y.",
            "VernacExtend",
            "ef3ccd5289ca7f26ac2544c13f2f466b08972873"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma DistOoVv : Distance Oo Vv = Distance Oo Uu.",
            "VernacStartTheoremProof",
            "13c9e6c88016e1bd63ee3080d67962a4f051b9d4"
        ],
        [
            "unfold Vv in |- *.",
            "VernacExtend",
            "17ef84f18839afdcc62297a1a89155e0b3c93726"
        ],
        [
            "destruct (EquilateralClockwise Uu Ww (BetweenDistinctCA Ww Oo Uu BetweenWwOoUu)).",
            "VernacExtend",
            "de03c5f008add7c3de00d137c6728afc1de56892"
        ],
        [
            "case a; simpl in |- *; intros.",
            "VernacExtend",
            "c5c14b6ebf6e4e9269113883b4854e8b9bfe276f"
        ],
        [
            "destruct (ExistsHalfLineEquidistant Oo x Oo Uu (fun H : Oo = x => eq_ind Oo (fun X : Point => Equilateral Uu Ww X -> Clockwise Uu Ww X -> False) (fun (_ : Equilateral Uu Ww Oo) (H2 : Clockwise Uu Ww Oo) => False_ind False (ClockwiseNotCollinear Uu Ww Oo H2 (CollinearACB Uu Oo Ww (BetweenCollinear Uu Oo Ww BetweenUuOoWw)))) x H e c) DistinctOoUu).",
            "VernacExtend",
            "21ae9cb238afa204b052187e94cc357c14cf5182"
        ],
        [
            "case a0; simpl in |- *; intros.",
            "VernacExtend",
            "8891a3a4d48d606c02f1145fd10ced17e16e8fb5"
        ],
        [
            "autoDistance.",
            "VernacExtend",
            "0c749375e926c665509e5f0134261461e6f9bac3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma DistinctOoVv : Oo <> Vv.",
            "VernacStartTheoremProof",
            "4b88717a0e45fc9245088dc44433bc030d6549e8"
        ],
        [
            "apply (EquiDistantDistinct Oo Uu Oo Vv DistinctOoUu).",
            "VernacExtend",
            "d95056c54e6eb5876f24345e32109de636dee26e"
        ],
        [
            "apply sym_eq; exact DistOoVv.",
            "VernacExtend",
            "9e000f5a7c77a4d0fe99a908fc13e1218ff38572"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ClockwiseUuOoVv : Clockwise Uu Oo Vv.",
            "VernacStartTheoremProof",
            "dc0a66112fa0c5aa8c549a7d5dbe13659da790b4"
        ],
        [
            "unfold Vv in |- *.",
            "VernacExtend",
            "17ef84f18839afdcc62297a1a89155e0b3c93726"
        ],
        [
            "destruct (EquilateralClockwise Uu Ww (BetweenDistinctCA Ww Oo Uu BetweenWwOoUu)).",
            "VernacExtend",
            "de03c5f008add7c3de00d137c6728afc1de56892"
        ],
        [
            "case a; simpl in |- *; intros.",
            "VernacExtend",
            "c5c14b6ebf6e4e9269113883b4854e8b9bfe276f"
        ],
        [
            "destruct (ExistsHalfLineEquidistant Oo x Oo Uu (fun H : Oo = x => eq_ind Oo (fun X : Point => Equilateral Uu Ww X -> Clockwise Uu Ww X -> False) (fun (_ : Equilateral Uu Ww Oo) (H2 : Clockwise Uu Ww Oo) => False_ind False (ClockwiseNotCollinear Uu Ww Oo H2 (CollinearACB Uu Oo Ww (BetweenCollinear Uu Oo Ww BetweenUuOoWw)))) x H e c) DistinctOoUu).",
            "VernacExtend",
            "21ae9cb238afa204b052187e94cc357c14cf5182"
        ],
        [
            "case a0; simpl in |- *; intros.",
            "VernacExtend",
            "8891a3a4d48d606c02f1145fd10ced17e16e8fb5"
        ],
        [
            "apply ClockwiseCAB; apply h; unfold HalfPlane, In in |- *.",
            "VernacExtend",
            "d51b5e4856af72ceaf891fe13aecaa7dca482e0c"
        ],
        [
            "apply ClockwiseBCA; apply (BetweenClockwiseAMC Uu Ww x Oo c BetweenUuOoWw).",
            "VernacExtend",
            "ccf4f40ee4ed8d9aa0624120cfebd42780367a64"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma AngleUuOoVv : Angle Uu Oo Vv = Angle Ww Oo Vv.",
            "VernacStartTheoremProof",
            "785dc9fd6fb968cd1d9cebe616090f085f187a6f"
        ],
        [
            "unfold Vv in |- *.",
            "VernacExtend",
            "17ef84f18839afdcc62297a1a89155e0b3c93726"
        ],
        [
            "destruct (EquilateralClockwise Uu Ww (BetweenDistinctCA Ww Oo Uu BetweenWwOoUu)).",
            "VernacExtend",
            "de03c5f008add7c3de00d137c6728afc1de56892"
        ],
        [
            "case a; simpl in |- *; intros.",
            "VernacExtend",
            "c5c14b6ebf6e4e9269113883b4854e8b9bfe276f"
        ],
        [
            "destruct (ExistsHalfLineEquidistant Oo x Oo Uu (fun H : Oo = x => eq_ind Oo (fun X : Point => Equilateral Uu Ww X -> Clockwise Uu Ww X -> False) (fun (_ : Equilateral Uu Ww Oo) (H2 : Clockwise Uu Ww Oo) => False_ind False (ClockwiseNotCollinear Uu Ww Oo H2 (CollinearACB Uu Oo Ww (BetweenCollinear Uu Oo Ww BetweenUuOoWw)))) x H e c) DistinctOoUu).",
            "VernacExtend",
            "21ae9cb238afa204b052187e94cc357c14cf5182"
        ],
        [
            "case a0; simpl in |- *; intros.",
            "VernacExtend",
            "8891a3a4d48d606c02f1145fd10ced17e16e8fb5"
        ],
        [
            "assert (Oo <> x).",
            "VernacExtend",
            "132d0f817498d8639d9540b5a576d74083251edd"
        ],
        [
            "intro; subst.",
            "VernacExtend",
            "9021e22274b6259ff513a190b208a4a3aa9b2ede"
        ],
        [
            "elim (ClockwiseNotCollinear _ _ _ c).",
            "VernacExtend",
            "5421d3a47b59669380f59a5e1c98c9e97f95e267"
        ],
        [
            "apply CollinearACB; exact (BetweenCollinear _ _ _ BetweenUuOoWw).",
            "VernacExtend",
            "344597f0537b98e0fa1497701e306f26dd1a60d7"
        ],
        [
            "rewrite <- (HalfLineAngleC Oo Uu x x0 DistinctOoUu H h).",
            "VernacExtend",
            "b989c5c4f034b50af41f4dd9e367c97bd29a0ba1"
        ],
        [
            "rewrite <- (HalfLineAngleC Oo Ww x x0 DistinctOoWw H h).",
            "VernacExtend",
            "17efc536acf3b4ace9bca7614acbce2cfc94ad6a"
        ],
        [
            "apply CongruentSSS.",
            "VernacExtend",
            "b11d2f27037c8d073173ca2ae792e341a099db91"
        ],
        [
            "exact DistinctOoUu.",
            "VernacExtend",
            "9efc6bea4f999954225741dd37dfa40fdc0f9eae"
        ],
        [
            "exact H.",
            "VernacExtend",
            "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
        ],
        [
            "rewrite DistSym; exact DistOoWw.",
            "VernacExtend",
            "9f25bcb275cd098a7bac06f069d3a0a832c6cd40"
        ],
        [
            "destruct e; autoDistance.",
            "VernacExtend",
            "c79716f071df7e03a57b90257835274e9987cd62"
        ],
        [
            "destruct e; autoDistance.",
            "VernacExtend",
            "c79716f071df7e03a57b90257835274e9987cd62"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma DistVvUu : Distance Vv Uu = Distance Vv Ww.",
            "VernacStartTheoremProof",
            "1b0abcffd9c5c833092930ce6afae8c1ca8818d4"
        ],
        [
            "apply (CongruentSAS Oo Vv Uu Oo Vv Ww).",
            "VernacExtend",
            "8714ddc9579eb3c8c731281030352c26911d2834"
        ],
        [
            "exact DistinctOoVv.",
            "VernacExtend",
            "ee6f48028d221eebbf90bb6963ce31f77bfca7c0"
        ],
        [
            "exact DistinctOoUu.",
            "VernacExtend",
            "9efc6bea4f999954225741dd37dfa40fdc0f9eae"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "rewrite DistSym; exact DistOoWw.",
            "VernacExtend",
            "9f25bcb275cd098a7bac06f069d3a0a832c6cd40"
        ],
        [
            "rewrite (AngleSym Oo Vv Uu DistinctOoVv DistinctOoUu).",
            "VernacExtend",
            "ab1f864fdeaab0847d1ba4ca4c46c400fa528859"
        ],
        [
            "rewrite (AngleSym Oo Vv Ww DistinctOoVv DistinctOoWw).",
            "VernacExtend",
            "52e143dbd9045fdbda44e8004741474dd8c12ffa"
        ],
        [
            "exact AngleUuOoVv.",
            "VernacExtend",
            "9100738fe0bc175403168bda474f4d8560bddb8e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition RightAS := Angle Uu Oo Vv.",
            "VernacDefinition",
            "ba34aa9fa615886014123c7e80106bd6c7398441"
        ],
        [
            "Lemma DoubleRight : Supplementary RightAS RightAS.",
            "VernacStartTheoremProof",
            "9af2e5fd1ac2545a9b2cf3d150c0d03d5bddaefb"
        ],
        [
            "unfold Supplementary, RightAS in |- *.",
            "VernacExtend",
            "7a4b0af331a210be434636e50042e7440d0f34a0"
        ],
        [
            "exists Oo; exists Uu; exists Vv; exists Ww; split.",
            "VernacExtend",
            "ffd4d86d69d0508b8e88664610aaa138c9a363f7"
        ],
        [
            "exact DistinctOoVv.",
            "VernacExtend",
            "ee6f48028d221eebbf90bb6963ce31f77bfca7c0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exact BetweenUuOoWw.",
            "VernacExtend",
            "f595bbd6dd6a8e912f9c43de22a80ac330649eea"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "rewrite (AngleSym Oo Vv Ww DistinctOoVv DistinctOoWw).",
            "VernacExtend",
            "52e143dbd9045fdbda44e8004741474dd8c12ffa"
        ],
        [
            "apply sym_eq; exact AngleUuOoVv.",
            "VernacExtend",
            "96551b411abfc88051118adda96d99af2ff1dbed"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End RIGHTANGLE.",
            "VernacEndSegment",
            "81cf77a5d71129c0decf9f6aaf0974fcd7326588"
        ]
    ],
    "proofs": [
        {
            "name": "Vv",
            "line_nb": 3,
            "steps": [
                {
                    "command": [
                        "destruct (EquilateralClockwise Uu Ww (BetweenDistinctCA Ww Oo Uu BetweenWwOoUu)) as (X, (H1,H2)).",
                        "VernacExtend",
                        "54a0638494b7a2c88d214c5220cfd6d48916991d"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsHalfLineEquidistant Oo X Oo Uu) as (Y, (H3, H4)).",
                        "VernacExtend",
                        "684d4f84e5cd39ab95475f376add95d63081625d"
                    ]
                },
                {
                    "command": [
                        "intro; subst.",
                        "VernacExtend",
                        "9021e22274b6259ff513a190b208a4a3aa9b2ede"
                    ]
                },
                {
                    "command": [
                        "elim (ClockwiseNotCollinear _ _ _ H2).",
                        "VernacExtend",
                        "d9beb211b6d1b40ad5ee83d75ad5f0720b4823d8"
                    ]
                },
                {
                    "command": [
                        "apply CollinearACB; exact (BetweenCollinear _ _ _ BetweenUuOoWw).",
                        "VernacExtend",
                        "344597f0537b98e0fa1497701e306f26dd1a60d7"
                    ]
                },
                {
                    "command": [
                        "exact DistinctOoUu.",
                        "VernacExtend",
                        "9efc6bea4f999954225741dd37dfa40fdc0f9eae"
                    ]
                },
                {
                    "command": [
                        "exact Y.",
                        "VernacExtend",
                        "ef3ccd5289ca7f26ac2544c13f2f466b08972873"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "DistOoVv",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "unfold Vv in |- *.",
                        "VernacExtend",
                        "17ef84f18839afdcc62297a1a89155e0b3c93726"
                    ]
                },
                {
                    "command": [
                        "destruct (EquilateralClockwise Uu Ww (BetweenDistinctCA Ww Oo Uu BetweenWwOoUu)).",
                        "VernacExtend",
                        "de03c5f008add7c3de00d137c6728afc1de56892"
                    ]
                },
                {
                    "command": [
                        "case a; simpl in |- *; intros.",
                        "VernacExtend",
                        "c5c14b6ebf6e4e9269113883b4854e8b9bfe276f"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsHalfLineEquidistant Oo x Oo Uu (fun H : Oo = x => eq_ind Oo (fun X : Point => Equilateral Uu Ww X -> Clockwise Uu Ww X -> False) (fun (_ : Equilateral Uu Ww Oo) (H2 : Clockwise Uu Ww Oo) => False_ind False (ClockwiseNotCollinear Uu Ww Oo H2 (CollinearACB Uu Oo Ww (BetweenCollinear Uu Oo Ww BetweenUuOoWw)))) x H e c) DistinctOoUu).",
                        "VernacExtend",
                        "21ae9cb238afa204b052187e94cc357c14cf5182"
                    ]
                },
                {
                    "command": [
                        "case a0; simpl in |- *; intros.",
                        "VernacExtend",
                        "8891a3a4d48d606c02f1145fd10ced17e16e8fb5"
                    ]
                },
                {
                    "command": [
                        "autoDistance.",
                        "VernacExtend",
                        "0c749375e926c665509e5f0134261461e6f9bac3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "DistinctOoVv",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "apply (EquiDistantDistinct Oo Uu Oo Vv DistinctOoUu).",
                        "VernacExtend",
                        "d95056c54e6eb5876f24345e32109de636dee26e"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq; exact DistOoVv.",
                        "VernacExtend",
                        "9e000f5a7c77a4d0fe99a908fc13e1218ff38572"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ClockwiseUuOoVv",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "unfold Vv in |- *.",
                        "VernacExtend",
                        "17ef84f18839afdcc62297a1a89155e0b3c93726"
                    ]
                },
                {
                    "command": [
                        "destruct (EquilateralClockwise Uu Ww (BetweenDistinctCA Ww Oo Uu BetweenWwOoUu)).",
                        "VernacExtend",
                        "de03c5f008add7c3de00d137c6728afc1de56892"
                    ]
                },
                {
                    "command": [
                        "case a; simpl in |- *; intros.",
                        "VernacExtend",
                        "c5c14b6ebf6e4e9269113883b4854e8b9bfe276f"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsHalfLineEquidistant Oo x Oo Uu (fun H : Oo = x => eq_ind Oo (fun X : Point => Equilateral Uu Ww X -> Clockwise Uu Ww X -> False) (fun (_ : Equilateral Uu Ww Oo) (H2 : Clockwise Uu Ww Oo) => False_ind False (ClockwiseNotCollinear Uu Ww Oo H2 (CollinearACB Uu Oo Ww (BetweenCollinear Uu Oo Ww BetweenUuOoWw)))) x H e c) DistinctOoUu).",
                        "VernacExtend",
                        "21ae9cb238afa204b052187e94cc357c14cf5182"
                    ]
                },
                {
                    "command": [
                        "case a0; simpl in |- *; intros.",
                        "VernacExtend",
                        "8891a3a4d48d606c02f1145fd10ced17e16e8fb5"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseCAB; apply h; unfold HalfPlane, In in |- *.",
                        "VernacExtend",
                        "d51b5e4856af72ceaf891fe13aecaa7dca482e0c"
                    ]
                },
                {
                    "command": [
                        "apply ClockwiseBCA; apply (BetweenClockwiseAMC Uu Ww x Oo c BetweenUuOoWw).",
                        "VernacExtend",
                        "ccf4f40ee4ed8d9aa0624120cfebd42780367a64"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "AngleUuOoVv",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "unfold Vv in |- *.",
                        "VernacExtend",
                        "17ef84f18839afdcc62297a1a89155e0b3c93726"
                    ]
                },
                {
                    "command": [
                        "destruct (EquilateralClockwise Uu Ww (BetweenDistinctCA Ww Oo Uu BetweenWwOoUu)).",
                        "VernacExtend",
                        "de03c5f008add7c3de00d137c6728afc1de56892"
                    ]
                },
                {
                    "command": [
                        "case a; simpl in |- *; intros.",
                        "VernacExtend",
                        "c5c14b6ebf6e4e9269113883b4854e8b9bfe276f"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsHalfLineEquidistant Oo x Oo Uu (fun H : Oo = x => eq_ind Oo (fun X : Point => Equilateral Uu Ww X -> Clockwise Uu Ww X -> False) (fun (_ : Equilateral Uu Ww Oo) (H2 : Clockwise Uu Ww Oo) => False_ind False (ClockwiseNotCollinear Uu Ww Oo H2 (CollinearACB Uu Oo Ww (BetweenCollinear Uu Oo Ww BetweenUuOoWw)))) x H e c) DistinctOoUu).",
                        "VernacExtend",
                        "21ae9cb238afa204b052187e94cc357c14cf5182"
                    ]
                },
                {
                    "command": [
                        "case a0; simpl in |- *; intros.",
                        "VernacExtend",
                        "8891a3a4d48d606c02f1145fd10ced17e16e8fb5"
                    ]
                },
                {
                    "command": [
                        "assert (Oo <> x).",
                        "VernacExtend",
                        "132d0f817498d8639d9540b5a576d74083251edd"
                    ]
                },
                {
                    "command": [
                        "intro; subst.",
                        "VernacExtend",
                        "9021e22274b6259ff513a190b208a4a3aa9b2ede"
                    ]
                },
                {
                    "command": [
                        "elim (ClockwiseNotCollinear _ _ _ c).",
                        "VernacExtend",
                        "5421d3a47b59669380f59a5e1c98c9e97f95e267"
                    ]
                },
                {
                    "command": [
                        "apply CollinearACB; exact (BetweenCollinear _ _ _ BetweenUuOoWw).",
                        "VernacExtend",
                        "344597f0537b98e0fa1497701e306f26dd1a60d7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (HalfLineAngleC Oo Uu x x0 DistinctOoUu H h).",
                        "VernacExtend",
                        "b989c5c4f034b50af41f4dd9e367c97bd29a0ba1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (HalfLineAngleC Oo Ww x x0 DistinctOoWw H h).",
                        "VernacExtend",
                        "17efc536acf3b4ace9bca7614acbce2cfc94ad6a"
                    ]
                },
                {
                    "command": [
                        "apply CongruentSSS.",
                        "VernacExtend",
                        "b11d2f27037c8d073173ca2ae792e341a099db91"
                    ]
                },
                {
                    "command": [
                        "exact DistinctOoUu.",
                        "VernacExtend",
                        "9efc6bea4f999954225741dd37dfa40fdc0f9eae"
                    ]
                },
                {
                    "command": [
                        "exact H.",
                        "VernacExtend",
                        "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
                    ]
                },
                {
                    "command": [
                        "rewrite DistSym; exact DistOoWw.",
                        "VernacExtend",
                        "9f25bcb275cd098a7bac06f069d3a0a832c6cd40"
                    ]
                },
                {
                    "command": [
                        "destruct e; autoDistance.",
                        "VernacExtend",
                        "c79716f071df7e03a57b90257835274e9987cd62"
                    ]
                },
                {
                    "command": [
                        "destruct e; autoDistance.",
                        "VernacExtend",
                        "c79716f071df7e03a57b90257835274e9987cd62"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "DistVvUu",
            "line_nb": 52,
            "steps": [
                {
                    "command": [
                        "apply (CongruentSAS Oo Vv Uu Oo Vv Ww).",
                        "VernacExtend",
                        "8714ddc9579eb3c8c731281030352c26911d2834"
                    ]
                },
                {
                    "command": [
                        "exact DistinctOoVv.",
                        "VernacExtend",
                        "ee6f48028d221eebbf90bb6963ce31f77bfca7c0"
                    ]
                },
                {
                    "command": [
                        "exact DistinctOoUu.",
                        "VernacExtend",
                        "9efc6bea4f999954225741dd37dfa40fdc0f9eae"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "rewrite DistSym; exact DistOoWw.",
                        "VernacExtend",
                        "9f25bcb275cd098a7bac06f069d3a0a832c6cd40"
                    ]
                },
                {
                    "command": [
                        "rewrite (AngleSym Oo Vv Uu DistinctOoVv DistinctOoUu).",
                        "VernacExtend",
                        "ab1f864fdeaab0847d1ba4ca4c46c400fa528859"
                    ]
                },
                {
                    "command": [
                        "rewrite (AngleSym Oo Vv Ww DistinctOoVv DistinctOoWw).",
                        "VernacExtend",
                        "52e143dbd9045fdbda44e8004741474dd8c12ffa"
                    ]
                },
                {
                    "command": [
                        "exact AngleUuOoVv.",
                        "VernacExtend",
                        "9100738fe0bc175403168bda474f4d8560bddb8e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "DoubleRight",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "unfold Supplementary, RightAS in |- *.",
                        "VernacExtend",
                        "7a4b0af331a210be434636e50042e7440d0f34a0"
                    ]
                },
                {
                    "command": [
                        "exists Oo; exists Uu; exists Vv; exists Ww; split.",
                        "VernacExtend",
                        "ffd4d86d69d0508b8e88664610aaa138c9a363f7"
                    ]
                },
                {
                    "command": [
                        "exact DistinctOoVv.",
                        "VernacExtend",
                        "ee6f48028d221eebbf90bb6963ce31f77bfca7c0"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "exact BetweenUuOoWw.",
                        "VernacExtend",
                        "f595bbd6dd6a8e912f9c43de22a80ac330649eea"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "rewrite (AngleSym Oo Vv Ww DistinctOoVv DistinctOoWw).",
                        "VernacExtend",
                        "52e143dbd9045fdbda44e8004741474dd8c12ffa"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq; exact AngleUuOoVv.",
                        "VernacExtend",
                        "96551b411abfc88051118adda96d99af2ff1dbed"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}