{
    "filename": "B8_Point_Def.v",
    "coq_project": "ruler-compass-geometry",
    "vernac_cmds": [
        [
            "Require Export B7_Triangle_Equilateral.",
            "VernacRequire",
            "9f2be572ab76ce288636e3a24b8e81727835b351"
        ],
        [
            "Section POINT_PROPERTIES.",
            "VernacBeginSection",
            "716251e4bcf1411552a38bab24a0b02d8d44d231"
        ],
        [
            "Lemma ExistsHalfLineEquidistant : forall A B C D : Point, A <> B -> C <> D -> {E : Point | HalfLine A B E /\\ Distance A E = Distance C D}.",
            "VernacStartTheoremProof",
            "6c44163c2e46216c0c34126982cc2877c091bb1d"
        ],
        [
            "intros A B C D Hab Hcd.",
            "VernacExtend",
            "1c9ed69aa661ef7b53601319dffbe09ce6f80564"
        ],
        [
            "setLine A B Hab ipattern:(L) ipattern:(AB).",
            "VernacExtend",
            "3566490ff4c67f37b6d50d732a4024be1819d399"
        ],
        [
            "setCircle A C D Hcd ipattern:(G) ipattern:(ACD).",
            "VernacExtend",
            "07535346f59a88d40bf943fa35de0b3d143dbf39"
        ],
        [
            "setLinterposC L G AB ACD ipattern:(E) ipattern:(H1) ipattern:(H2) ipattern:(H3) ipattern:(H4).",
            "VernacExtend",
            "075c4e897ebabdbdd8ce1b78eb2cac670d5c542f"
        ],
        [
            "apply CollinearABA.",
            "VernacExtend",
            "9cc0e818d78988c8f429ee4893a0d0e389635659"
        ],
        [
            "exists E; canonize.",
            "VernacExtend",
            "69ce5c2a5c57fdeafe3f624c55d9f9ea53ef0970"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma HalfLineEquidistantEqual : forall A B C : Point, A <> B -> HalfLine A B C -> Distance A B = Distance A C -> B = C.",
            "VernacStartTheoremProof",
            "2f9be8b0486df27a863d12414de805805c34ca63"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "setLine A B H ipattern:(L) ipattern:(AB).",
            "VernacExtend",
            "72b79fa45eb4464cea7fba22df2be10886f5e3cc"
        ],
        [
            "setCircle A A B H ipattern:(G) ipattern:(Aab).",
            "VernacExtend",
            "7e49292060f7d819aee842191bb616490af76b44"
        ],
        [
            "setLinterposC L G AB Aab ipattern:(D) ipattern:(H2) ipattern:(H3) ipattern:(H4) ipattern:(H5).",
            "VernacExtend",
            "496d440e6d95c0f9769658e042711c1f84b9d02c"
        ],
        [
            "apply CollinearABA.",
            "VernacExtend",
            "9cc0e818d78988c8f429ee4893a0d0e389635659"
        ],
        [
            "rewrite <- (H5 B).",
            "VernacExtend",
            "3b393102312c842a04e20e4ea40cd892306ace9c"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "elim (NotClockwiseBAA C A); auto.",
            "VernacExtend",
            "00a9d6f0c102968f5aa57a0f29b5e7c2e2c33e97"
        ],
        [
            "generalizeChangeSense.",
            "VernacExtend",
            "be975c77c59224ac5239b36f960f98e48421bb54"
        ],
        [
            "elim (NotClockwiseABA C A); auto.",
            "VernacExtend",
            "ba8e1e0d618fd676ca0098a4074ca8fb054525eb"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "exact (NotClockwiseBAA B A H2).",
            "VernacExtend",
            "9199f058c50f7c04ee69b5402c170fa6e60c4f62"
        ],
        [
            "exact (NotClockwiseABA B A H2).",
            "VernacExtend",
            "7093d4b6272eea518c70c5f5785133c9784acca0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ExistsBetweenEquidistant : forall A B C D : Point, A <> B -> C <> D -> {E : Point | Between E A B /\\ Distance A E = Distance C D}.",
            "VernacStartTheoremProof",
            "10edab18403f982fa97002c2e43588e24e806a75"
        ],
        [
            "intros A B C D Hab Hcd.",
            "VernacExtend",
            "1c9ed69aa661ef7b53601319dffbe09ce6f80564"
        ],
        [
            "setLine A B Hab ipattern:(L) ipattern:(AB).",
            "VernacExtend",
            "3566490ff4c67f37b6d50d732a4024be1819d399"
        ],
        [
            "setCircle A C D Hcd ipattern:(G) ipattern:(ACD).",
            "VernacExtend",
            "07535346f59a88d40bf943fa35de0b3d143dbf39"
        ],
        [
            "setLinternegC L G AB ACD ipattern:(E) ipattern:(H1) ipattern:(H2) ipattern:(H3) ipattern:(H4).",
            "VernacExtend",
            "cbde1a1e3a0d748ca2f455cb36a4f444f98a5c7e"
        ],
        [
            "apply CollinearABA.",
            "VernacExtend",
            "9cc0e818d78988c8f429ee4893a0d0e389635659"
        ],
        [
            "exists E; canonize.",
            "VernacExtend",
            "69ce5c2a5c57fdeafe3f624c55d9f9ea53ef0970"
        ],
        [
            "destruct (ClockwiseExists B A (sym_not_eq Hab)) as (F, H5).",
            "VernacExtend",
            "3b505085ea3baaa4c2c3d091fb6ef34058807460"
        ],
        [
            "subst; elim (NotClockwiseAAB A F); auto.",
            "VernacExtend",
            "147451ddda80a44cc6b79497dd2d7ff301287f47"
        ],
        [
            "generalizeChangeSide.",
            "VernacExtend",
            "5e228b6b7c592e98c7b8e296efd481fe42ece523"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ExistsEquidistantBetween : forall A B C D : Point, A <> B -> C <> D -> {E : Point | Between A B E /\\ Distance B E = Distance C D}.",
            "VernacStartTheoremProof",
            "62d2dc1ef11198e8e83ed9fb15958fdbc40f170a"
        ],
        [
            "intros A B C D Hab Hcd.",
            "VernacExtend",
            "1c9ed69aa661ef7b53601319dffbe09ce6f80564"
        ],
        [
            "setLine A B Hab ipattern:(L) ipattern:(AB).",
            "VernacExtend",
            "3566490ff4c67f37b6d50d732a4024be1819d399"
        ],
        [
            "setCircle B C D Hcd ipattern:(G) ipattern:(BCD).",
            "VernacExtend",
            "737ccf8b4c968e027fe1966a374d9c593ff79f8e"
        ],
        [
            "setLinterposC L G AB BCD ipattern:(E) ipattern:(H1) ipattern:(H2) ipattern:(H3) ipattern:(H4).",
            "VernacExtend",
            "d684108d8a0b1bb0dd2da6db3ea98af3047c72d7"
        ],
        [
            "apply CollinearABB.",
            "VernacExtend",
            "11d754a8b18fa57bf1e76328d5de721c235c7fa9"
        ],
        [
            "exists E; canonize.",
            "VernacExtend",
            "69ce5c2a5c57fdeafe3f624c55d9f9ea53ef0970"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CentralSymetPoint : forall A B : Point, A <> B -> {C : Point | Distance A B = Distance B C /\\ Between A B C}.",
            "VernacStartTheoremProof",
            "53cb5913c8743e26bacca4a96ed186aa1345c846"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (ExistsBetweenEquidistant B A A B (sym_not_eq H) H) as (C, (H0, H1)).",
            "VernacExtend",
            "1ae2acdde8f7bc43fac541f8713f4a9483d1943a"
        ],
        [
            "exists C; generalizeChangeSide.",
            "VernacExtend",
            "66916db9a96b4ee36ae4c6f94d1ceb36f3cb6aa8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CoordinatePoint : forall A B : Point, A <> B -> {C : Point | HalfLine Oo Uu C /\\ Distance Oo C = Distance A B}.",
            "VernacStartTheoremProof",
            "602b2e1e27d6358e06eb9a4b3aa4acf15ee43c57"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exact (ExistsHalfLineEquidistant Oo Uu A B DistinctOoUu H).",
            "VernacExtend",
            "1886809c640e4d2bab59e5940dbfd519b382dff2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End POINT_PROPERTIES.",
            "VernacEndSegment",
            "244608a0f81132387d0b30e92820daa4a31e874c"
        ]
    ],
    "proofs": [
        {
            "name": "ExistsHalfLineEquidistant",
            "line_nb": 2,
            "steps": [
                {
                    "command": [
                        "intros A B C D Hab Hcd.",
                        "VernacExtend",
                        "1c9ed69aa661ef7b53601319dffbe09ce6f80564"
                    ]
                },
                {
                    "command": [
                        "setLine A B Hab ipattern:(L) ipattern:(AB).",
                        "VernacExtend",
                        "3566490ff4c67f37b6d50d732a4024be1819d399"
                    ]
                },
                {
                    "command": [
                        "setCircle A C D Hcd ipattern:(G) ipattern:(ACD).",
                        "VernacExtend",
                        "07535346f59a88d40bf943fa35de0b3d143dbf39"
                    ]
                },
                {
                    "command": [
                        "setLinterposC L G AB ACD ipattern:(E) ipattern:(H1) ipattern:(H2) ipattern:(H3) ipattern:(H4).",
                        "VernacExtend",
                        "075c4e897ebabdbdd8ce1b78eb2cac670d5c542f"
                    ]
                },
                {
                    "command": [
                        "apply CollinearABA.",
                        "VernacExtend",
                        "9cc0e818d78988c8f429ee4893a0d0e389635659"
                    ]
                },
                {
                    "command": [
                        "exists E; canonize.",
                        "VernacExtend",
                        "69ce5c2a5c57fdeafe3f624c55d9f9ea53ef0970"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "HalfLineEquidistantEqual",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "setLine A B H ipattern:(L) ipattern:(AB).",
                        "VernacExtend",
                        "72b79fa45eb4464cea7fba22df2be10886f5e3cc"
                    ]
                },
                {
                    "command": [
                        "setCircle A A B H ipattern:(G) ipattern:(Aab).",
                        "VernacExtend",
                        "7e49292060f7d819aee842191bb616490af76b44"
                    ]
                },
                {
                    "command": [
                        "setLinterposC L G AB Aab ipattern:(D) ipattern:(H2) ipattern:(H3) ipattern:(H4) ipattern:(H5).",
                        "VernacExtend",
                        "496d440e6d95c0f9769658e042711c1f84b9d02c"
                    ]
                },
                {
                    "command": [
                        "apply CollinearABA.",
                        "VernacExtend",
                        "9cc0e818d78988c8f429ee4893a0d0e389635659"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (H5 B).",
                        "VernacExtend",
                        "3b393102312c842a04e20e4ea40cd892306ace9c"
                    ]
                },
                {
                    "command": [
                        "apply H5.",
                        "VernacExtend",
                        "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
                    ]
                },
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "elim (NotClockwiseBAA C A); auto.",
                        "VernacExtend",
                        "00a9d6f0c102968f5aa57a0f29b5e7c2e2c33e97"
                    ]
                },
                {
                    "command": [
                        "generalizeChangeSense.",
                        "VernacExtend",
                        "be975c77c59224ac5239b36f960f98e48421bb54"
                    ]
                },
                {
                    "command": [
                        "elim (NotClockwiseABA C A); auto.",
                        "VernacExtend",
                        "ba8e1e0d618fd676ca0098a4074ca8fb054525eb"
                    ]
                },
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "exact (NotClockwiseBAA B A H2).",
                        "VernacExtend",
                        "9199f058c50f7c04ee69b5402c170fa6e60c4f62"
                    ]
                },
                {
                    "command": [
                        "exact (NotClockwiseABA B A H2).",
                        "VernacExtend",
                        "7093d4b6272eea518c70c5f5785133c9784acca0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ExistsBetweenEquidistant",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "intros A B C D Hab Hcd.",
                        "VernacExtend",
                        "1c9ed69aa661ef7b53601319dffbe09ce6f80564"
                    ]
                },
                {
                    "command": [
                        "setLine A B Hab ipattern:(L) ipattern:(AB).",
                        "VernacExtend",
                        "3566490ff4c67f37b6d50d732a4024be1819d399"
                    ]
                },
                {
                    "command": [
                        "setCircle A C D Hcd ipattern:(G) ipattern:(ACD).",
                        "VernacExtend",
                        "07535346f59a88d40bf943fa35de0b3d143dbf39"
                    ]
                },
                {
                    "command": [
                        "setLinternegC L G AB ACD ipattern:(E) ipattern:(H1) ipattern:(H2) ipattern:(H3) ipattern:(H4).",
                        "VernacExtend",
                        "cbde1a1e3a0d748ca2f455cb36a4f444f98a5c7e"
                    ]
                },
                {
                    "command": [
                        "apply CollinearABA.",
                        "VernacExtend",
                        "9cc0e818d78988c8f429ee4893a0d0e389635659"
                    ]
                },
                {
                    "command": [
                        "exists E; canonize.",
                        "VernacExtend",
                        "69ce5c2a5c57fdeafe3f624c55d9f9ea53ef0970"
                    ]
                },
                {
                    "command": [
                        "destruct (ClockwiseExists B A (sym_not_eq Hab)) as (F, H5).",
                        "VernacExtend",
                        "3b505085ea3baaa4c2c3d091fb6ef34058807460"
                    ]
                },
                {
                    "command": [
                        "subst; elim (NotClockwiseAAB A F); auto.",
                        "VernacExtend",
                        "147451ddda80a44cc6b79497dd2d7ff301287f47"
                    ]
                },
                {
                    "command": [
                        "generalizeChangeSide.",
                        "VernacExtend",
                        "5e228b6b7c592e98c7b8e296efd481fe42ece523"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ExistsEquidistantBetween",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "intros A B C D Hab Hcd.",
                        "VernacExtend",
                        "1c9ed69aa661ef7b53601319dffbe09ce6f80564"
                    ]
                },
                {
                    "command": [
                        "setLine A B Hab ipattern:(L) ipattern:(AB).",
                        "VernacExtend",
                        "3566490ff4c67f37b6d50d732a4024be1819d399"
                    ]
                },
                {
                    "command": [
                        "setCircle B C D Hcd ipattern:(G) ipattern:(BCD).",
                        "VernacExtend",
                        "737ccf8b4c968e027fe1966a374d9c593ff79f8e"
                    ]
                },
                {
                    "command": [
                        "setLinterposC L G AB BCD ipattern:(E) ipattern:(H1) ipattern:(H2) ipattern:(H3) ipattern:(H4).",
                        "VernacExtend",
                        "d684108d8a0b1bb0dd2da6db3ea98af3047c72d7"
                    ]
                },
                {
                    "command": [
                        "apply CollinearABB.",
                        "VernacExtend",
                        "11d754a8b18fa57bf1e76328d5de721c235c7fa9"
                    ]
                },
                {
                    "command": [
                        "exists E; canonize.",
                        "VernacExtend",
                        "69ce5c2a5c57fdeafe3f624c55d9f9ea53ef0970"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CentralSymetPoint",
            "line_nb": 45,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsBetweenEquidistant B A A B (sym_not_eq H) H) as (C, (H0, H1)).",
                        "VernacExtend",
                        "1ae2acdde8f7bc43fac541f8713f4a9483d1943a"
                    ]
                },
                {
                    "command": [
                        "exists C; generalizeChangeSide.",
                        "VernacExtend",
                        "66916db9a96b4ee36ae4c6f94d1ceb36f3cb6aa8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CoordinatePoint",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exact (ExistsHalfLineEquidistant Oo Uu A B DistinctOoUu H).",
                        "VernacExtend",
                        "1886809c640e4d2bab59e5940dbfd519b382dff2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}