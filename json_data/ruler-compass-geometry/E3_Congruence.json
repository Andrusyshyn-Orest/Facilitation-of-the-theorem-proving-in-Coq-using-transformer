{
    "filename": "E3_Congruence.v",
    "coq_project": "ruler-compass-geometry",
    "vernac_cmds": [
        [
            "Require Export E2_Ordre.",
            "VernacRequire",
            "d51398a2744971f6b0236311b4711317018b1b65"
        ],
        [
            "Section CONGRUENCE.",
            "VernacBeginSection",
            "8f6d151693f78d2fd1a64bb0714659300309f213"
        ],
        [
            "Lemma C1a : forall A B C D : Point, A <> B -> C <> D -> exists E : Point, HalfLine C D E /\\ Distance A B = Distance C E.",
            "VernacStartTheoremProof",
            "a7c55833eafdd8191899c206953359811e0c169e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (ExistsHalfLineEquidistant C D A B) as (E, (H1, H2)); auto.",
            "VernacExtend",
            "289d081364e54db43142574b9854444db9ca933c"
        ],
        [
            "exists E; intuition.",
            "VernacExtend",
            "cdcb4808b725a56f9923230ca08e9e1c20d1e94e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma C1b : forall A B C D E F : Point, A <> B -> C <> D -> HalfLine C D E -> Distance A B = Distance C E -> HalfLine C D F -> Distance A B = Distance C F -> E = F.",
            "VernacStartTheoremProof",
            "4d62d782be1f6647da6c9d06c6fa2ce52643a552"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "setLine C D H0 ipattern:(L) ipattern:(CD).",
            "VernacExtend",
            "fe9a1fc18e3baaf6d097f4dffe9049108a1469de"
        ],
        [
            "setCircle C A B H ipattern:(G) ipattern:(CAB).",
            "VernacExtend",
            "78b012d91879e091509378815b9c4a28db7a35b5"
        ],
        [
            "setLinterposC L G CD CAB ipattern:(J) ipattern:(H5) ipattern:(H6) ipattern:(H7) ipattern:(H8).",
            "VernacExtend",
            "ee72335c12a36ddf41b8a3bc015b6f7e7320b98d"
        ],
        [
            "autoCollinear.",
            "VernacExtend",
            "f9b5517305c4ea7b3088acc38c4b180fb95147f1"
        ],
        [
            "apply trans_eq with (y := J).",
            "VernacExtend",
            "39011ecd22ba8c4a3af377c8b328da1cb3af8fe5"
        ],
        [
            "apply sym_eq; apply H8.",
            "VernacExtend",
            "ad6960559f9b893a28131bbb8658336144ca0f71"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply HalfLineCollinear; trivial.",
            "VernacExtend",
            "24e355190a97439732330070116732a52abd8cde"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "autoDistance.",
            "VernacExtend",
            "0c749375e926c665509e5f0134261461e6f9bac3"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "apply H8; split.",
            "VernacExtend",
            "4cf62bcb1bad540f76d79bf080b72751f65d90f2"
        ],
        [
            "apply HalfLineCollinear; trivial.",
            "VernacExtend",
            "24e355190a97439732330070116732a52abd8cde"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "autoDistance.",
            "VernacExtend",
            "0c749375e926c665509e5f0134261461e6f9bac3"
        ],
        [
            "canonize.",
            "VernacExtend",
            "d86154be330fc32ce6876fd84daa5559bf6d4594"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma C2a : forall A B C D E F : Point, Distance A B = Distance C D -> Distance A B = Distance E F -> Distance C D = Distance E F.",
            "VernacStartTheoremProof",
            "c72dd33b01caf386c062c1db360dc5bd03362d46"
        ],
        [
            "intros A B C D E F H H0; rewrite <- H; auto.",
            "VernacExtend",
            "fcbbaf914fab3728e8363bcad285fc98003f03f3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma C2b : forall A B : Point, Distance A B = Distance A B.",
            "VernacStartTheoremProof",
            "7e424ff0f93ec70d9d8ee9147a42ed8326f817b6"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma C3 : forall A B C D E F : Point, Between A B C -> Between D E F -> Distance A B = Distance D E -> Distance B C = Distance E F -> Distance A C = Distance D F.",
            "VernacStartTheoremProof",
            "fa60c519015f77e384e1dd0711fe6157c50648a1"
        ],
        [
            "intros; rewrite <- (Chasles A B C).",
            "VernacExtend",
            "0e30d8c089319b0dbf51f73b5fbab7438e2de271"
        ],
        [
            "rewrite H1; rewrite H2; apply Chasles; auto.",
            "VernacExtend",
            "c78982c6a4004a2bca2e84c01823a02dfc3acbf8"
        ],
        [
            "apply BetweenHalfLine; trivial.",
            "VernacExtend",
            "a50bf0ba508d8472d7e808e2d960b71aa16ac730"
        ],
        [
            "apply BetweenSymHalfLine; trivial.",
            "VernacExtend",
            "fd3f4190dc2b0635577764c229d941d50ae48c70"
        ],
        [
            "apply BetweenHalfLine; trivial.",
            "VernacExtend",
            "a50bf0ba508d8472d7e808e2d960b71aa16ac730"
        ],
        [
            "apply BetweenSymHalfLine; trivial.",
            "VernacExtend",
            "fd3f4190dc2b0635577764c229d941d50ae48c70"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma C4a : forall A B C D F : Point, A <> B -> A <> C -> D <> F -> exists E : Point, D <> E /\\ ~Clockwise D F E /\\ Angle B A C = Angle E D F.",
            "VernacStartTheoremProof",
            "7a95a764f5968404efd368f1c032bfc420b4d3d8"
        ],
        [
            "intros; decompose [or] (ExclusiveFourCases A B C H0).",
            "VernacExtend",
            "2fe81d5e82a29109a0d7880fccd80d8509e8a511"
        ],
        [
            "destruct (ExistsHalfLineEquidistant D F A B H1 H) as (G, (H3, H4)).",
            "VernacExtend",
            "b27c9cfddbefd9f2b61e2daeb50fd50f9e9b5510"
        ],
        [
            "destruct (EqualTriangleAntiClockwise A B C D G) as (E, (H5, (H6, H7))); auto.",
            "VernacExtend",
            "99fdd446922b558d66fd7865d68f449f035fdd7c"
        ],
        [
            "assert (H8 := ClockwiseDistinctAB D E G H5); exists E; intuition.",
            "VernacExtend",
            "1c430f69df45a10883bbeaf590c55d653ac6deb7"
        ],
        [
            "elim (ClockwiseNotClockwise D E G H5); apply ClockwiseCAB; canonize.",
            "VernacExtend",
            "60b8b450774945ac5f1d0f3e2ae59e8ea55db3ef"
        ],
        [
            "rewrite (CongruentItself D E F E G); canonize.",
            "VernacExtend",
            "faf4523fc411d409c376dfd3427f7d32b70cee54"
        ],
        [
            "apply CongruentSSS; autoDistance.",
            "VernacExtend",
            "e7a8a820913e3bcd83dba867db8658e3f5f87f5d"
        ],
        [
            "destruct (ExistsHalfLineEquidistant D F A C H1 H0) as (G, (H2, H4)).",
            "VernacExtend",
            "bcde488545c649b8904a22942bc23b94677cc2b8"
        ],
        [
            "destruct (EqualTriangleAntiClockwise A C B D G) as (E, (H5, (H6, H7))).",
            "VernacExtend",
            "b02396d31838b55367638c683ea42ab1c2ea6fdd"
        ],
        [
            "autoClockwise.",
            "VernacExtend",
            "9409e85b86446941015e1da6ca2353051468a0c2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (H8 := ClockwiseDistinctAB D E G H5); exists E; intuition.",
            "VernacExtend",
            "1c430f69df45a10883bbeaf590c55d653ac6deb7"
        ],
        [
            "elim (ClockwiseNotClockwise D E G H5); apply ClockwiseCAB; canonize.",
            "VernacExtend",
            "60b8b450774945ac5f1d0f3e2ae59e8ea55db3ef"
        ],
        [
            "rewrite (HalfLineAngleC D E F G); canonize.",
            "VernacExtend",
            "6bad3397c15c21ca32068dc0f258113263320cc4"
        ],
        [
            "apply CongruentSSS; autoDistance.",
            "VernacExtend",
            "e7a8a820913e3bcd83dba867db8658e3f5f87f5d"
        ],
        [
            "exists F; intuition.",
            "VernacExtend",
            "9a127741b46d86d5abd364d11a423741e4c7c89f"
        ],
        [
            "autoClockwise.",
            "VernacExtend",
            "9409e85b86446941015e1da6ca2353051468a0c2"
        ],
        [
            "rewrite (NullAngle D F F); canonize.",
            "VernacExtend",
            "a0a5ac6373027104ef74fae6e1f343e539c4becb"
        ],
        [
            "apply NullAngle; auto.",
            "VernacExtend",
            "2cdc87ca798bef6d9c51eac919b969f69f04b4e0"
        ],
        [
            "destruct (CentralSymetPoint F D (sym_not_eq H1)) as (E, (H3, H4)).",
            "VernacExtend",
            "c010fc76c974ae0922d54aae19af1f96030c900d"
        ],
        [
            "exists E; intuition.",
            "VernacExtend",
            "cdcb4808b725a56f9923230ca08e9e1c20d1e94e"
        ],
        [
            "elim (BetweenDistinctBC F D E H4); trivial.",
            "VernacExtend",
            "092bcf0b9b5216921d1b54ea1392cec53de1a50d"
        ],
        [
            "elim (BetweenNotClockwiseBAC F D E H4); trivial.",
            "VernacExtend",
            "646708e80e3674ecb5a202a2466f571961695b24"
        ],
        [
            "rewrite (ElongatedAngle E D F (BetweenSym F D E H4)).",
            "VernacExtend",
            "67c029f715e3bfdc82997a9979f1d0383cffbe57"
        ],
        [
            "apply ElongatedAngle; split.",
            "VernacExtend",
            "24ae1924f3f7656686534787a16c1759d6612b31"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply EquiOrientedSym; generalizeChangeSide.",
            "VernacExtend",
            "74f967d6c128d7cab48c5ae039dae95aea8eb3e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma C4b : forall A B C D F : Point, A <> B -> A <> C -> D <> F -> exists E : Point, D <> E /\\ ~Clockwise D E F /\\ Angle B A C = Angle E D F.",
            "VernacStartTheoremProof",
            "8a8e5679ee2469a4c60171afb1bd3ca874fa08d9"
        ],
        [
            "intros; decompose [or] (ExclusiveFourCases A B C H0).",
            "VernacExtend",
            "2fe81d5e82a29109a0d7880fccd80d8509e8a511"
        ],
        [
            "destruct (ExistsHalfLineEquidistant D F A B H1 H) as (G, (H3, H4)).",
            "VernacExtend",
            "b27c9cfddbefd9f2b61e2daeb50fd50f9e9b5510"
        ],
        [
            "destruct (EqualTriangleClockwise A B C D G) as (E, (H5, (H6, H7))); auto.",
            "VernacExtend",
            "389d2d04759bc870d8af7e9e1dcfbbdf346e610a"
        ],
        [
            "assert (H8 := ClockwiseDistinctCA D G E H5); exists E; intuition.",
            "VernacExtend",
            "a2439da9f7cbbb65b857c244b090339a98d88df8"
        ],
        [
            "generalizeChangeSense; elim (ClockwiseNotClockwise D G E H5).",
            "VernacExtend",
            "14e91c3ea76138d6ec90ed2e648bdcc706bb0518"
        ],
        [
            "apply H10; autoClockwise.",
            "VernacExtend",
            "29706d109f26d6c40dc2cfef6242980d420a1f6e"
        ],
        [
            "rewrite (CongruentItself D E F E G); canonize.",
            "VernacExtend",
            "faf4523fc411d409c376dfd3427f7d32b70cee54"
        ],
        [
            "apply CongruentSSS; autoDistance.",
            "VernacExtend",
            "e7a8a820913e3bcd83dba867db8658e3f5f87f5d"
        ],
        [
            "destruct (ExistsHalfLineEquidistant D F A C H1 H0) as (G, (H2, H4)).",
            "VernacExtend",
            "bcde488545c649b8904a22942bc23b94677cc2b8"
        ],
        [
            "destruct (EqualTriangleClockwise A C B D G) as (E, (H5, (H6, H7))).",
            "VernacExtend",
            "7c96aed3e6b4741a5eb7e2dd55f8af5e5b14f462"
        ],
        [
            "autoClockwise.",
            "VernacExtend",
            "9409e85b86446941015e1da6ca2353051468a0c2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (H8 := ClockwiseDistinctCA D G E H5); exists E; intuition.",
            "VernacExtend",
            "a2439da9f7cbbb65b857c244b090339a98d88df8"
        ],
        [
            "generalizeChangeSense; elim (ClockwiseNotClockwise D G E H5).",
            "VernacExtend",
            "14e91c3ea76138d6ec90ed2e648bdcc706bb0518"
        ],
        [
            "apply H10; autoClockwise.",
            "VernacExtend",
            "29706d109f26d6c40dc2cfef6242980d420a1f6e"
        ],
        [
            "rewrite (HalfLineAngleC D E F G); canonize.",
            "VernacExtend",
            "6bad3397c15c21ca32068dc0f258113263320cc4"
        ],
        [
            "apply CongruentSSS; autoDistance.",
            "VernacExtend",
            "e7a8a820913e3bcd83dba867db8658e3f5f87f5d"
        ],
        [
            "exists F; intuition.",
            "VernacExtend",
            "9a127741b46d86d5abd364d11a423741e4c7c89f"
        ],
        [
            "autoClockwise.",
            "VernacExtend",
            "9409e85b86446941015e1da6ca2353051468a0c2"
        ],
        [
            "rewrite (NullAngle D F F); canonize.",
            "VernacExtend",
            "a0a5ac6373027104ef74fae6e1f343e539c4becb"
        ],
        [
            "apply NullAngle; auto.",
            "VernacExtend",
            "2cdc87ca798bef6d9c51eac919b969f69f04b4e0"
        ],
        [
            "destruct (CentralSymetPoint F D (sym_not_eq H1)) as (E, (H3, H4)).",
            "VernacExtend",
            "c010fc76c974ae0922d54aae19af1f96030c900d"
        ],
        [
            "exists E; intuition.",
            "VernacExtend",
            "cdcb4808b725a56f9923230ca08e9e1c20d1e94e"
        ],
        [
            "elim (BetweenDistinctBC F D E H4); trivial.",
            "VernacExtend",
            "092bcf0b9b5216921d1b54ea1392cec53de1a50d"
        ],
        [
            "elim (BetweenNotClockwiseABC F D E H4); autoClockwise.",
            "VernacExtend",
            "e8c46636f64136020058e2fcba24821e9f88775e"
        ],
        [
            "rewrite (ElongatedAngle E D F (BetweenSym F D E H4)).",
            "VernacExtend",
            "67c029f715e3bfdc82997a9979f1d0383cffbe57"
        ],
        [
            "apply ElongatedAngle; split.",
            "VernacExtend",
            "24ae1924f3f7656686534787a16c1759d6612b31"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply EquiOrientedSym; generalizeChangeSide.",
            "VernacExtend",
            "74f967d6c128d7cab48c5ae039dae95aea8eb3e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma C4c : forall A B C D F E E' : Point, A <> B -> A <> C -> D <> F -> D <> E -> D <> E' -> ~Clockwise D E F -> ~Clockwise D E' F -> Angle B A C = Angle E D F -> Angle B A C = Angle E' D F -> Superimposed (HalfLine D E) (HalfLine D E').",
            "VernacStartTheoremProof",
            "ad99785364552198f5c142d2f5122f15010cb07a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply SuperimposedHalfLines; auto.",
            "VernacExtend",
            "86ac62a7a425fe3f8c21f7490f655c1e5b37b5ca"
        ],
        [
            "apply (EqualAngleHalfLineB D E E' F); auto.",
            "VernacExtend",
            "f6d3200574ed2d2bc10a27b749cf8f49fab24515"
        ],
        [
            "rewrite <- H6; auto.",
            "VernacExtend",
            "1014ae15ea6d7b5f7bb53f6d5ecb5fb4029ac6df"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma C4d : forall A B C D F E E' : Point, A <> B -> A <> C -> D <> F -> D <> E -> D <> E' -> ~Clockwise D F E -> ~Clockwise D F E' -> (Angle B A C) = (Angle E D F) -> (Angle B A C) = (Angle E' D F) -> Superimposed (HalfLine D E) (HalfLine D E').",
            "VernacStartTheoremProof",
            "c1b4e7392843ae0e31f97e1a2f377fc31d9821e0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply SuperimposedHalfLines; auto.",
            "VernacExtend",
            "86ac62a7a425fe3f8c21f7490f655c1e5b37b5ca"
        ],
        [
            "apply (EqualAngleHalfLineC D F E E'); auto.",
            "VernacExtend",
            "94284dc63b7ce2f6a6f6ac360fc9d7a86aa1e720"
        ],
        [
            "rewrite <- H6; auto.",
            "VernacExtend",
            "1014ae15ea6d7b5f7bb53f6d5ecb5fb4029ac6df"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma C5a : forall A B C : Point, Angle B A C = Angle B A C.",
            "VernacStartTheoremProof",
            "da15a64b40822ef46135e5e9c5d09b038f8ba792"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma C5b : forall A B C D E F G H J : Point, Angle B A C = Angle E D F -> Angle B A C = Angle H G J -> Angle E D F = Angle H G J.",
            "VernacStartTheoremProof",
            "4e923ca6ec070d9919c15432d5737d1ab7f98acd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- H0; trivial.",
            "VernacExtend",
            "27f8bb95b40a4924fa2a953846525ec538c6f9ac"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma C6a : forall A B C D E F : Point, A <> B -> A <> C -> Distance A B = Distance D E -> Distance A C = Distance D F -> Angle B A C = Angle E D F -> Distance B C = Distance E F.",
            "VernacStartTheoremProof",
            "23d32ef6510023fc37b93e9ddb7ec64f458d6033"
        ],
        [
            "intros; apply (CongruentSAS A B C D E F); auto.",
            "VernacExtend",
            "7af15a8c2dac49080509ed748d819ef7f0005097"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma C6b : forall A B C D E F : Point, A <> B -> A <> C -> B <> C -> Distance A B = Distance D E -> Distance A C = Distance D F -> Angle B A C = Angle E D F -> Angle A B C = Angle D E F.",
            "VernacStartTheoremProof",
            "c2855bca42ddf5134187281b17cc441bb5334100"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply CongruentSSS; auto.",
            "VernacExtend",
            "62e718db89a1200fb09f01b5d7d4a2e2539f5396"
        ],
        [
            "rewrite (DistSym B A); rewrite (DistSym E D); trivial.",
            "VernacExtend",
            "c1ce900e27f0b9a054e2b944bf87ddae05f5421e"
        ],
        [
            "apply (CongruentSAS A B C D E F); auto.",
            "VernacExtend",
            "26b3bde57c97977bb413867c9516e269d2a59cc1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma C6c : forall A B C D E F : Point, A <> B -> A <> C -> B <> C -> Distance A B = Distance D E -> Distance A C = Distance D F -> Angle B A C = Angle E D F -> Angle A C B = Angle D F E.",
            "VernacStartTheoremProof",
            "f9673db0c16c74951e03de03683db91b3ea56539"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply CongruentSSS; auto.",
            "VernacExtend",
            "62e718db89a1200fb09f01b5d7d4a2e2539f5396"
        ],
        [
            "rewrite (DistSym C A); rewrite (DistSym F D); trivial.",
            "VernacExtend",
            "c1cfebbc1d9d449322efb9de7200eeb1b7d9006f"
        ],
        [
            "rewrite (DistSym C B); rewrite (DistSym F E).",
            "VernacExtend",
            "b1a1b2ee57c4945b50dab01cc927ea65dc33f6a9"
        ],
        [
            "apply (CongruentSAS A B C D E F); auto.",
            "VernacExtend",
            "26b3bde57c97977bb413867c9516e269d2a59cc1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End CONGRUENCE.",
            "VernacEndSegment",
            "42e99c03e1ca6c80ce3393f3241add6cf78680a8"
        ]
    ],
    "proofs": [
        {
            "name": "C1a",
            "line_nb": 2,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsHalfLineEquidistant C D A B) as (E, (H1, H2)); auto.",
                        "VernacExtend",
                        "289d081364e54db43142574b9854444db9ca933c"
                    ]
                },
                {
                    "command": [
                        "exists E; intuition.",
                        "VernacExtend",
                        "cdcb4808b725a56f9923230ca08e9e1c20d1e94e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "C1b",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "setLine C D H0 ipattern:(L) ipattern:(CD).",
                        "VernacExtend",
                        "fe9a1fc18e3baaf6d097f4dffe9049108a1469de"
                    ]
                },
                {
                    "command": [
                        "setCircle C A B H ipattern:(G) ipattern:(CAB).",
                        "VernacExtend",
                        "78b012d91879e091509378815b9c4a28db7a35b5"
                    ]
                },
                {
                    "command": [
                        "setLinterposC L G CD CAB ipattern:(J) ipattern:(H5) ipattern:(H6) ipattern:(H7) ipattern:(H8).",
                        "VernacExtend",
                        "ee72335c12a36ddf41b8a3bc015b6f7e7320b98d"
                    ]
                },
                {
                    "command": [
                        "autoCollinear.",
                        "VernacExtend",
                        "f9b5517305c4ea7b3088acc38c4b180fb95147f1"
                    ]
                },
                {
                    "command": [
                        "apply trans_eq with (y := J).",
                        "VernacExtend",
                        "39011ecd22ba8c4a3af377c8b328da1cb3af8fe5"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq; apply H8.",
                        "VernacExtend",
                        "ad6960559f9b893a28131bbb8658336144ca0f71"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply HalfLineCollinear; trivial.",
                        "VernacExtend",
                        "24e355190a97439732330070116732a52abd8cde"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "autoDistance.",
                        "VernacExtend",
                        "0c749375e926c665509e5f0134261461e6f9bac3"
                    ]
                },
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "apply H8; split.",
                        "VernacExtend",
                        "4cf62bcb1bad540f76d79bf080b72751f65d90f2"
                    ]
                },
                {
                    "command": [
                        "apply HalfLineCollinear; trivial.",
                        "VernacExtend",
                        "24e355190a97439732330070116732a52abd8cde"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "autoDistance.",
                        "VernacExtend",
                        "0c749375e926c665509e5f0134261461e6f9bac3"
                    ]
                },
                {
                    "command": [
                        "canonize.",
                        "VernacExtend",
                        "d86154be330fc32ce6876fd84daa5559bf6d4594"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "C2a",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "intros A B C D E F H H0; rewrite <- H; auto.",
                        "VernacExtend",
                        "fcbbaf914fab3728e8363bcad285fc98003f03f3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "C2b",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "C3",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "intros; rewrite <- (Chasles A B C).",
                        "VernacExtend",
                        "0e30d8c089319b0dbf51f73b5fbab7438e2de271"
                    ]
                },
                {
                    "command": [
                        "rewrite H1; rewrite H2; apply Chasles; auto.",
                        "VernacExtend",
                        "c78982c6a4004a2bca2e84c01823a02dfc3acbf8"
                    ]
                },
                {
                    "command": [
                        "apply BetweenHalfLine; trivial.",
                        "VernacExtend",
                        "a50bf0ba508d8472d7e808e2d960b71aa16ac730"
                    ]
                },
                {
                    "command": [
                        "apply BetweenSymHalfLine; trivial.",
                        "VernacExtend",
                        "fd3f4190dc2b0635577764c229d941d50ae48c70"
                    ]
                },
                {
                    "command": [
                        "apply BetweenHalfLine; trivial.",
                        "VernacExtend",
                        "a50bf0ba508d8472d7e808e2d960b71aa16ac730"
                    ]
                },
                {
                    "command": [
                        "apply BetweenSymHalfLine; trivial.",
                        "VernacExtend",
                        "fd3f4190dc2b0635577764c229d941d50ae48c70"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "C4a",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "intros; decompose [or] (ExclusiveFourCases A B C H0).",
                        "VernacExtend",
                        "2fe81d5e82a29109a0d7880fccd80d8509e8a511"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsHalfLineEquidistant D F A B H1 H) as (G, (H3, H4)).",
                        "VernacExtend",
                        "b27c9cfddbefd9f2b61e2daeb50fd50f9e9b5510"
                    ]
                },
                {
                    "command": [
                        "destruct (EqualTriangleAntiClockwise A B C D G) as (E, (H5, (H6, H7))); auto.",
                        "VernacExtend",
                        "99fdd446922b558d66fd7865d68f449f035fdd7c"
                    ]
                },
                {
                    "command": [
                        "assert (H8 := ClockwiseDistinctAB D E G H5); exists E; intuition.",
                        "VernacExtend",
                        "1c430f69df45a10883bbeaf590c55d653ac6deb7"
                    ]
                },
                {
                    "command": [
                        "elim (ClockwiseNotClockwise D E G H5); apply ClockwiseCAB; canonize.",
                        "VernacExtend",
                        "60b8b450774945ac5f1d0f3e2ae59e8ea55db3ef"
                    ]
                },
                {
                    "command": [
                        "rewrite (CongruentItself D E F E G); canonize.",
                        "VernacExtend",
                        "faf4523fc411d409c376dfd3427f7d32b70cee54"
                    ]
                },
                {
                    "command": [
                        "apply CongruentSSS; autoDistance.",
                        "VernacExtend",
                        "e7a8a820913e3bcd83dba867db8658e3f5f87f5d"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsHalfLineEquidistant D F A C H1 H0) as (G, (H2, H4)).",
                        "VernacExtend",
                        "bcde488545c649b8904a22942bc23b94677cc2b8"
                    ]
                },
                {
                    "command": [
                        "destruct (EqualTriangleAntiClockwise A C B D G) as (E, (H5, (H6, H7))).",
                        "VernacExtend",
                        "b02396d31838b55367638c683ea42ab1c2ea6fdd"
                    ]
                },
                {
                    "command": [
                        "autoClockwise.",
                        "VernacExtend",
                        "9409e85b86446941015e1da6ca2353051468a0c2"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "assert (H8 := ClockwiseDistinctAB D E G H5); exists E; intuition.",
                        "VernacExtend",
                        "1c430f69df45a10883bbeaf590c55d653ac6deb7"
                    ]
                },
                {
                    "command": [
                        "elim (ClockwiseNotClockwise D E G H5); apply ClockwiseCAB; canonize.",
                        "VernacExtend",
                        "60b8b450774945ac5f1d0f3e2ae59e8ea55db3ef"
                    ]
                },
                {
                    "command": [
                        "rewrite (HalfLineAngleC D E F G); canonize.",
                        "VernacExtend",
                        "6bad3397c15c21ca32068dc0f258113263320cc4"
                    ]
                },
                {
                    "command": [
                        "apply CongruentSSS; autoDistance.",
                        "VernacExtend",
                        "e7a8a820913e3bcd83dba867db8658e3f5f87f5d"
                    ]
                },
                {
                    "command": [
                        "exists F; intuition.",
                        "VernacExtend",
                        "9a127741b46d86d5abd364d11a423741e4c7c89f"
                    ]
                },
                {
                    "command": [
                        "autoClockwise.",
                        "VernacExtend",
                        "9409e85b86446941015e1da6ca2353051468a0c2"
                    ]
                },
                {
                    "command": [
                        "rewrite (NullAngle D F F); canonize.",
                        "VernacExtend",
                        "a0a5ac6373027104ef74fae6e1f343e539c4becb"
                    ]
                },
                {
                    "command": [
                        "apply NullAngle; auto.",
                        "VernacExtend",
                        "2cdc87ca798bef6d9c51eac919b969f69f04b4e0"
                    ]
                },
                {
                    "command": [
                        "destruct (CentralSymetPoint F D (sym_not_eq H1)) as (E, (H3, H4)).",
                        "VernacExtend",
                        "c010fc76c974ae0922d54aae19af1f96030c900d"
                    ]
                },
                {
                    "command": [
                        "exists E; intuition.",
                        "VernacExtend",
                        "cdcb4808b725a56f9923230ca08e9e1c20d1e94e"
                    ]
                },
                {
                    "command": [
                        "elim (BetweenDistinctBC F D E H4); trivial.",
                        "VernacExtend",
                        "092bcf0b9b5216921d1b54ea1392cec53de1a50d"
                    ]
                },
                {
                    "command": [
                        "elim (BetweenNotClockwiseBAC F D E H4); trivial.",
                        "VernacExtend",
                        "646708e80e3674ecb5a202a2466f571961695b24"
                    ]
                },
                {
                    "command": [
                        "rewrite (ElongatedAngle E D F (BetweenSym F D E H4)).",
                        "VernacExtend",
                        "67c029f715e3bfdc82997a9979f1d0383cffbe57"
                    ]
                },
                {
                    "command": [
                        "apply ElongatedAngle; split.",
                        "VernacExtend",
                        "24ae1924f3f7656686534787a16c1759d6612b31"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply EquiOrientedSym; generalizeChangeSide.",
                        "VernacExtend",
                        "74f967d6c128d7cab48c5ae039dae95aea8eb3e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "C4b",
            "line_nb": 69,
            "steps": [
                {
                    "command": [
                        "intros; decompose [or] (ExclusiveFourCases A B C H0).",
                        "VernacExtend",
                        "2fe81d5e82a29109a0d7880fccd80d8509e8a511"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsHalfLineEquidistant D F A B H1 H) as (G, (H3, H4)).",
                        "VernacExtend",
                        "b27c9cfddbefd9f2b61e2daeb50fd50f9e9b5510"
                    ]
                },
                {
                    "command": [
                        "destruct (EqualTriangleClockwise A B C D G) as (E, (H5, (H6, H7))); auto.",
                        "VernacExtend",
                        "389d2d04759bc870d8af7e9e1dcfbbdf346e610a"
                    ]
                },
                {
                    "command": [
                        "assert (H8 := ClockwiseDistinctCA D G E H5); exists E; intuition.",
                        "VernacExtend",
                        "a2439da9f7cbbb65b857c244b090339a98d88df8"
                    ]
                },
                {
                    "command": [
                        "generalizeChangeSense; elim (ClockwiseNotClockwise D G E H5).",
                        "VernacExtend",
                        "14e91c3ea76138d6ec90ed2e648bdcc706bb0518"
                    ]
                },
                {
                    "command": [
                        "apply H10; autoClockwise.",
                        "VernacExtend",
                        "29706d109f26d6c40dc2cfef6242980d420a1f6e"
                    ]
                },
                {
                    "command": [
                        "rewrite (CongruentItself D E F E G); canonize.",
                        "VernacExtend",
                        "faf4523fc411d409c376dfd3427f7d32b70cee54"
                    ]
                },
                {
                    "command": [
                        "apply CongruentSSS; autoDistance.",
                        "VernacExtend",
                        "e7a8a820913e3bcd83dba867db8658e3f5f87f5d"
                    ]
                },
                {
                    "command": [
                        "destruct (ExistsHalfLineEquidistant D F A C H1 H0) as (G, (H2, H4)).",
                        "VernacExtend",
                        "bcde488545c649b8904a22942bc23b94677cc2b8"
                    ]
                },
                {
                    "command": [
                        "destruct (EqualTriangleClockwise A C B D G) as (E, (H5, (H6, H7))).",
                        "VernacExtend",
                        "7c96aed3e6b4741a5eb7e2dd55f8af5e5b14f462"
                    ]
                },
                {
                    "command": [
                        "autoClockwise.",
                        "VernacExtend",
                        "9409e85b86446941015e1da6ca2353051468a0c2"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "assert (H8 := ClockwiseDistinctCA D G E H5); exists E; intuition.",
                        "VernacExtend",
                        "a2439da9f7cbbb65b857c244b090339a98d88df8"
                    ]
                },
                {
                    "command": [
                        "generalizeChangeSense; elim (ClockwiseNotClockwise D G E H5).",
                        "VernacExtend",
                        "14e91c3ea76138d6ec90ed2e648bdcc706bb0518"
                    ]
                },
                {
                    "command": [
                        "apply H10; autoClockwise.",
                        "VernacExtend",
                        "29706d109f26d6c40dc2cfef6242980d420a1f6e"
                    ]
                },
                {
                    "command": [
                        "rewrite (HalfLineAngleC D E F G); canonize.",
                        "VernacExtend",
                        "6bad3397c15c21ca32068dc0f258113263320cc4"
                    ]
                },
                {
                    "command": [
                        "apply CongruentSSS; autoDistance.",
                        "VernacExtend",
                        "e7a8a820913e3bcd83dba867db8658e3f5f87f5d"
                    ]
                },
                {
                    "command": [
                        "exists F; intuition.",
                        "VernacExtend",
                        "9a127741b46d86d5abd364d11a423741e4c7c89f"
                    ]
                },
                {
                    "command": [
                        "autoClockwise.",
                        "VernacExtend",
                        "9409e85b86446941015e1da6ca2353051468a0c2"
                    ]
                },
                {
                    "command": [
                        "rewrite (NullAngle D F F); canonize.",
                        "VernacExtend",
                        "a0a5ac6373027104ef74fae6e1f343e539c4becb"
                    ]
                },
                {
                    "command": [
                        "apply NullAngle; auto.",
                        "VernacExtend",
                        "2cdc87ca798bef6d9c51eac919b969f69f04b4e0"
                    ]
                },
                {
                    "command": [
                        "destruct (CentralSymetPoint F D (sym_not_eq H1)) as (E, (H3, H4)).",
                        "VernacExtend",
                        "c010fc76c974ae0922d54aae19af1f96030c900d"
                    ]
                },
                {
                    "command": [
                        "exists E; intuition.",
                        "VernacExtend",
                        "cdcb4808b725a56f9923230ca08e9e1c20d1e94e"
                    ]
                },
                {
                    "command": [
                        "elim (BetweenDistinctBC F D E H4); trivial.",
                        "VernacExtend",
                        "092bcf0b9b5216921d1b54ea1392cec53de1a50d"
                    ]
                },
                {
                    "command": [
                        "elim (BetweenNotClockwiseABC F D E H4); autoClockwise.",
                        "VernacExtend",
                        "e8c46636f64136020058e2fcba24821e9f88775e"
                    ]
                },
                {
                    "command": [
                        "rewrite (ElongatedAngle E D F (BetweenSym F D E H4)).",
                        "VernacExtend",
                        "67c029f715e3bfdc82997a9979f1d0383cffbe57"
                    ]
                },
                {
                    "command": [
                        "apply ElongatedAngle; split.",
                        "VernacExtend",
                        "24ae1924f3f7656686534787a16c1759d6612b31"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply EquiOrientedSym; generalizeChangeSide.",
                        "VernacExtend",
                        "74f967d6c128d7cab48c5ae039dae95aea8eb3e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "C4c",
            "line_nb": 100,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply SuperimposedHalfLines; auto.",
                        "VernacExtend",
                        "86ac62a7a425fe3f8c21f7490f655c1e5b37b5ca"
                    ]
                },
                {
                    "command": [
                        "apply (EqualAngleHalfLineB D E E' F); auto.",
                        "VernacExtend",
                        "f6d3200574ed2d2bc10a27b749cf8f49fab24515"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H6; auto.",
                        "VernacExtend",
                        "1014ae15ea6d7b5f7bb53f6d5ecb5fb4029ac6df"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "C4d",
            "line_nb": 106,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply SuperimposedHalfLines; auto.",
                        "VernacExtend",
                        "86ac62a7a425fe3f8c21f7490f655c1e5b37b5ca"
                    ]
                },
                {
                    "command": [
                        "apply (EqualAngleHalfLineC D F E E'); auto.",
                        "VernacExtend",
                        "94284dc63b7ce2f6a6f6ac360fc9d7a86aa1e720"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H6; auto.",
                        "VernacExtend",
                        "1014ae15ea6d7b5f7bb53f6d5ecb5fb4029ac6df"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "C5a",
            "line_nb": 112,
            "steps": [
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "C5b",
            "line_nb": 115,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0; trivial.",
                        "VernacExtend",
                        "27f8bb95b40a4924fa2a953846525ec538c6f9ac"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "C6a",
            "line_nb": 119,
            "steps": [
                {
                    "command": [
                        "intros; apply (CongruentSAS A B C D E F); auto.",
                        "VernacExtend",
                        "7af15a8c2dac49080509ed748d819ef7f0005097"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "C6b",
            "line_nb": 122,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply CongruentSSS; auto.",
                        "VernacExtend",
                        "62e718db89a1200fb09f01b5d7d4a2e2539f5396"
                    ]
                },
                {
                    "command": [
                        "rewrite (DistSym B A); rewrite (DistSym E D); trivial.",
                        "VernacExtend",
                        "c1ce900e27f0b9a054e2b944bf87ddae05f5421e"
                    ]
                },
                {
                    "command": [
                        "apply (CongruentSAS A B C D E F); auto.",
                        "VernacExtend",
                        "26b3bde57c97977bb413867c9516e269d2a59cc1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "C6c",
            "line_nb": 128,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply CongruentSSS; auto.",
                        "VernacExtend",
                        "62e718db89a1200fb09f01b5d7d4a2e2539f5396"
                    ]
                },
                {
                    "command": [
                        "rewrite (DistSym C A); rewrite (DistSym F D); trivial.",
                        "VernacExtend",
                        "c1cfebbc1d9d449322efb9de7200eeb1b7d9006f"
                    ]
                },
                {
                    "command": [
                        "rewrite (DistSym C B); rewrite (DistSym F E).",
                        "VernacExtend",
                        "b1a1b2ee57c4945b50dab01cc927ea65dc33f6a9"
                    ]
                },
                {
                    "command": [
                        "apply (CongruentSAS A B C D E F); auto.",
                        "VernacExtend",
                        "26b3bde57c97977bb413867c9516e269d2a59cc1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}