{
    "filename": "Functions.v",
    "coq_project": "schroeder",
    "vernac_cmds": [
        [
            "Require Import Ensembles.",
            "VernacRequire",
            "63f80d6be2b42bad6c3542a86c69acf401d90a4a"
        ],
        [
            "Require Import Relations_1.",
            "VernacRequire",
            "49c733c10349a78f9f2197cca78f05286f29edcc"
        ],
        [
            "Section Functions.",
            "VernacBeginSection",
            "eca510aab8f8d0c56f6af0a771f3a13aa2e4f90b"
        ],
        [
            "Variable U : Type.",
            "VernacAssumption",
            "eb05258af3da16894daf420a97be779934a15d7e"
        ],
        [
            "Inductive Rel (U : Type) (A B : Ensemble U) (R : Relation U) : Prop := Rel_intro : (forall x y : U, R x y -> In U A x) -> (forall x y : U, R x y -> In U B y) -> Rel U A B R.",
            "VernacInductive",
            "30a0f1d46ad924707a1134cef4394ceb7f95a018"
        ],
        [
            "Section Image.",
            "VernacBeginSection",
            "b2d4a85d0530585f40e48306f07be6fb0b63b45a"
        ],
        [
            "Inductive Im (R : Relation U) (A : Ensemble U) (y : U) : Prop := Im_intro : forall x : U, R x y -> In U A x -> Im R A y.",
            "VernacInductive",
            "449ec4e962cb8524b9ab2110a8ba167cf913e318"
        ],
        [
            "Lemma Im_stable_par_incl : forall (R : Relation U) (A1 A2 : Ensemble U), Included U A1 A2 -> Included U (Im R A1) (Im R A2).",
            "VernacStartTheoremProof",
            "8189e48cd8ba0a8db495a86fc705501432ca6cea"
        ],
        [
            "do 3 intro; intros A1_Included_A2; red in |- *; red in |- *; intros x x_in_Im_A1.",
            "VernacExtend",
            "8341ba7411ff7712200683f4068c4506943e1e70"
        ],
        [
            "elim x_in_Im_A1.",
            "VernacExtend",
            "83460e234fcacd79956c1993313ca48b47f4f137"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Im_intro with x0; try assumption.",
            "VernacExtend",
            "c4fa8e6c5024f859fd179424c6ee6a45e1e596b3"
        ],
        [
            "apply A1_Included_A2; assumption.",
            "VernacExtend",
            "d9dac54071e526b7e7d2e2343da9f8c375063653"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Image.",
            "VernacEndSegment",
            "b3c4c5183dc74a8fbdb4487f7d6a42f64df09104"
        ],
        [
            "Variable A B : Ensemble U.",
            "VernacAssumption",
            "52e401ac5009f1dec8b6eae0e8615f780369e5c1"
        ],
        [
            "Variable f : Relation U.",
            "VernacAssumption",
            "c8e627f297f50078992d2639f873fe15ff781315"
        ],
        [
            "Definition to_at_most_one_output := forall x y z : U, f x y -> f x z -> y = z.",
            "VernacDefinition",
            "9524b23a44d197b00eee2e0f969f238d8000fd34"
        ],
        [
            "Definition to_at_least_one_output := forall x : U, In U A x -> exists y, f x y.",
            "VernacDefinition",
            "63560b3de6bac1b73103d8bb5f7bb838a48428ad"
        ],
        [
            "Definition from_at_most_one_input := forall x y z : U, f x z -> f y z -> x = y.",
            "VernacDefinition",
            "98c1f31bef8cd4c493d5cab77a6dd4b05e285211"
        ],
        [
            "Definition from_at_least_one_input := forall y : U, In U B y -> exists x, f x y.",
            "VernacDefinition",
            "1e040913c783fc958a664a92a871e42568516d4e"
        ],
        [
            "Inductive function : Prop := function_intro : Rel U A B f -> to_at_most_one_output -> to_at_least_one_output -> function.",
            "VernacInductive",
            "d7ca3a2a51f949e2aea4f3a058dca9ae04291570"
        ],
        [
            "Inductive surjection : Prop := surjection_intro : Rel U A B f -> to_at_most_one_output -> to_at_least_one_output -> from_at_least_one_input -> surjection.",
            "VernacInductive",
            "5df789c62e0508fe3f11993fc9ecf56bec8132b3"
        ],
        [
            "Inductive injection : Prop := injection_intro : Rel U A B f -> to_at_most_one_output -> to_at_least_one_output -> from_at_most_one_input -> injection.",
            "VernacInductive",
            "9be201f5a8736e3453475a5f45e4adff97805928"
        ],
        [
            "Inductive bijection : Prop := bijection_intro : Rel U A B f -> to_at_most_one_output -> to_at_least_one_output -> from_at_most_one_input -> from_at_least_one_input -> bijection.",
            "VernacInductive",
            "acbb32b89946c3c30bec3ae972764a85f25c9bdd"
        ],
        [
            "End Functions.",
            "VernacEndSegment",
            "83cb5eb3dfcae4dc903f334918ff4058af20206a"
        ]
    ],
    "proofs": [
        {
            "name": "Im_stable_par_incl",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "do 3 intro; intros A1_Included_A2; red in |- *; red in |- *; intros x x_in_Im_A1.",
                        "VernacExtend",
                        "8341ba7411ff7712200683f4068c4506943e1e70"
                    ]
                },
                {
                    "command": [
                        "elim x_in_Im_A1.",
                        "VernacExtend",
                        "83460e234fcacd79956c1993313ca48b47f4f137"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Im_intro with x0; try assumption.",
                        "VernacExtend",
                        "c4fa8e6c5024f859fd179424c6ee6a45e1e596b3"
                    ]
                },
                {
                    "command": [
                        "apply A1_Included_A2; assumption.",
                        "VernacExtend",
                        "d9dac54071e526b7e7d2e2343da9f8c375063653"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}