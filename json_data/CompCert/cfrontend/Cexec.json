{
    "filename": "cfrontend/Cexec.v",
    "coq_project": "CompCert",
    "vernac_cmds": [
        [
            "Require Import FunInd.",
            "VernacRequire",
            "1f538423fd5f4dcde5fea5ac239a919904a47729"
        ],
        [
            "Require Import Axioms Classical.",
            "VernacRequire",
            "1c543b6b522d7646400b3449a3def7edd7a2a909"
        ],
        [
            "Require Import String Coqlib Decidableplus.",
            "VernacRequire",
            "eb7664bfd26e4183f45556eb3689a319d28f2476"
        ],
        [
            "Require Import Errors Maps Integers Floats.",
            "VernacRequire",
            "9d3f847141190f76ba0dc0fa3dc0818c8ce98a4c"
        ],
        [
            "Require Import AST Values Memory Events Globalenvs Determinism.",
            "VernacRequire",
            "8871fe7e137b887cf523bd605c7497098b81b915"
        ],
        [
            "Require Import Ctypes Cop Csyntax Csem.",
            "VernacRequire",
            "36c667e4171d9161a69d88860d9fcd6cc40dfdba"
        ],
        [
            "Require Cstrategy.",
            "VernacRequire",
            "d03d012326146739bb00b7a66970530c50791836"
        ],
        [
            "Local Open Scope string_scope.",
            "VernacOpenCloseScope",
            "347f91aff322dccfab9c81382e495d8430d8e803"
        ],
        [
            "Local Open Scope list_scope.",
            "VernacOpenCloseScope",
            "b7ffbc8664ccf2e54673194b986563efc763189d"
        ],
        [
            "Notation \"'do' X <- A ; B\" := (match A with Some X => B | None => None end) (at level 200, X ident, A at level 100, B at level 200) : option_monad_scope.",
            "VernacNotation",
            "9ced2ff46975f46c3c7843c682110e6612e4eea8"
        ],
        [
            "Notation \"'do' X , Y <- A ; B\" := (match A with Some (X, Y) => B | None => None end) (at level 200, X ident, Y ident, A at level 100, B at level 200) : option_monad_scope.",
            "VernacNotation",
            "bd05539efa845d67b2f0149a801e9dda3977477f"
        ],
        [
            "Notation \"'do' X , Y , Z <- A ; B\" := (match A with Some (X, Y, Z) => B | None => None end) (at level 200, X ident, Y ident, Z ident, A at level 100, B at level 200) : option_monad_scope.",
            "VernacNotation",
            "c827e5eb1bbcf51e3d6ba4acaf1ec5d1236a9cac"
        ],
        [
            "Notation \" 'check' A ; B\" := (if A then B else None) (at level 200, A at level 100, B at level 200) : option_monad_scope.",
            "VernacNotation",
            "fc197bdef1851ad7983004565469b59874ece0e7"
        ],
        [
            "Notation \"'do' X <- A ; B\" := (match A with Some X => B | None => nil end) (at level 200, X ident, A at level 100, B at level 200) : list_monad_scope.",
            "VernacNotation",
            "3a2fcec13866729db3007f1219cecf674b2baee1"
        ],
        [
            "Notation \" 'check' A ; B\" := (if A then B else nil) (at level 200, A at level 100, B at level 200) : list_monad_scope.",
            "VernacNotation",
            "8cb37d8b832e12921f743349459eb25257fc1865"
        ],
        [
            "Definition is_val (a: expr) : option (val * type) := match a with | Eval v ty => Some(v, ty) | _ => None end.",
            "VernacDefinition",
            "b3ebcb76ad0f9513ee690daa192d0d95684bff8d"
        ],
        [
            "Lemma is_val_inv: forall a v ty, is_val a = Some(v, ty) -> a = Eval v ty.",
            "VernacStartTheoremProof",
            "68efb2995a37ec2729debe8eb8ae341c2efda762"
        ],
        [
            "intros until ty.",
            "VernacExtend",
            "b54f1d784bf202c721649b659ba03c4cc796f31b"
        ],
        [
            "destruct a; simpl; congruence.",
            "VernacExtend",
            "f5218f54440230e80bae286d3a6a9eb69fd3597c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition is_loc (a: expr) : option (block * ptrofs * type) := match a with | Eloc b ofs ty => Some(b, ofs, ty) | _ => None end.",
            "VernacDefinition",
            "f5a1790ad2623dde6ad50642ab787747c914411d"
        ],
        [
            "Lemma is_loc_inv: forall a b ofs ty, is_loc a = Some(b, ofs, ty) -> a = Eloc b ofs ty.",
            "VernacStartTheoremProof",
            "73b801b9983295ffaa28860efaf57a230dd8004d"
        ],
        [
            "intros until ty.",
            "VernacExtend",
            "b54f1d784bf202c721649b659ba03c4cc796f31b"
        ],
        [
            "destruct a; simpl; congruence.",
            "VernacExtend",
            "f5218f54440230e80bae286d3a6a9eb69fd3597c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Open Scope option_monad_scope.",
            "VernacOpenCloseScope",
            "ecd70258a790d16ac5ecf2ae933d7b21f9ec9c66"
        ],
        [
            "Fixpoint is_val_list (al: exprlist) : option (list (val * type)) := match al with | Enil => Some nil | Econs a1 al => do vt1 <- is_val a1; do vtl <- is_val_list al; Some(vt1::vtl) end.",
            "VernacFixpoint",
            "da93a711a38a47eef3c4630684f7bc003b852b32"
        ],
        [
            "Definition is_skip (s: statement) : {s = Sskip} + {s <> Sskip}.",
            "VernacDefinition",
            "0b0af7983549545b56f02ce38162c03a9b8ba34c"
        ],
        [
            "destruct s; (left; congruence) || (right; congruence).",
            "VernacExtend",
            "e0ded53651905ee5dd93a3f74548e744e55b93d9"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Section EXEC.",
            "VernacBeginSection",
            "4c3c4f99604fda348434ee29badd746f5ddf7ee0"
        ],
        [
            "Variable ge: genv.",
            "VernacAssumption",
            "5dcbd76196753bb6e2da03561ae76151d62a94d8"
        ],
        [
            "Definition eventval_of_val (v: val) (t: typ) : option eventval := match v with | Vint i => check (typ_eq t AST.Tint); Some (EVint i) | Vfloat f => check (typ_eq t AST.Tfloat); Some (EVfloat f) | Vsingle f => check (typ_eq t AST.Tsingle); Some (EVsingle f) | Vlong n => check (typ_eq t AST.Tlong); Some (EVlong n) | Vptr b ofs => do id <- Genv.invert_symbol ge b; check (Genv.public_symbol ge id); check (typ_eq t AST.Tptr); Some (EVptr_global id ofs) | _ => None end.",
            "VernacDefinition",
            "7363d326d3d53d73154dca9fdb951683befe7c5c"
        ],
        [
            "Fixpoint list_eventval_of_val (vl: list val) (tl: list typ) : option (list eventval) := match vl, tl with | nil, nil => Some nil | v1::vl, t1::tl => do ev1 <- eventval_of_val v1 t1; do evl <- list_eventval_of_val vl tl; Some (ev1 :: evl) | _, _ => None end.",
            "VernacFixpoint",
            "b3a65ee96a61cf45b760cbf0818fd4374bfede31"
        ],
        [
            "Definition val_of_eventval (ev: eventval) (t: typ) : option val := match ev with | EVint i => check (typ_eq t AST.Tint); Some (Vint i) | EVfloat f => check (typ_eq t AST.Tfloat); Some (Vfloat f) | EVsingle f => check (typ_eq t AST.Tsingle); Some (Vsingle f) | EVlong n => check (typ_eq t AST.Tlong); Some (Vlong n) | EVptr_global id ofs => check (Genv.public_symbol ge id); check (typ_eq t AST.Tptr); do b <- Genv.find_symbol ge id; Some (Vptr b ofs) end.",
            "VernacDefinition",
            "539f34cc6c885a54dafe173908e43a126682f4c5"
        ],
        [
            "Ltac mydestr := match goal with | [ |- None = Some _ -> _ ] => let X := fresh \"X\" in intro X; discriminate | [ |- Some _ = Some _ -> _ ] => let X := fresh \"X\" in intro X; inv X | [ |- match ?x with Some _ => _ | None => _ end = Some _ -> _ ] => destruct x eqn:?; mydestr | [ |- match ?x with true => _ | false => _ end = Some _ -> _ ] => destruct x eqn:?; mydestr | [ |- match ?x with left _ => _ | right _ => _ end = Some _ -> _ ] => destruct x; mydestr | _ => idtac end.",
            "VernacExtend",
            "dee22b451798554cad87586cc8c88c7aa979cf36"
        ],
        [
            "Lemma eventval_of_val_sound: forall v t ev, eventval_of_val v t = Some ev -> eventval_match ge ev t v.",
            "VernacStartTheoremProof",
            "08871ba7e8cbe914ab514a3db6f9bd29d50bcbe0"
        ],
        [
            "intros until ev.",
            "VernacExtend",
            "fc4885238a3ca2931f55818688f1ca3706c45dcb"
        ],
        [
            "destruct v; simpl; mydestr; constructor.",
            "VernacExtend",
            "42f501e454bb7c58b03fbece47930e8b834c14b5"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply Genv.invert_find_symbol; auto.",
            "VernacExtend",
            "2c0a5424bfdf1ad44c38195a576009789505ee15"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eventval_of_val_complete: forall ev t v, eventval_match ge ev t v -> eventval_of_val v t = Some ev.",
            "VernacStartTheoremProof",
            "cb730e9ee10234ace3b4a0839496d851a6b0b4b5"
        ],
        [
            "induction 1; simpl.",
            "VernacExtend",
            "7a487009c144d86c422c5127aa0fc0ff1707bb8b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite (Genv.find_invert_symbol _ _ H0).",
            "VernacExtend",
            "192c659f580ac0c8089f701a7d53aa8eb8b90205"
        ],
        [
            "simpl in H; rewrite H.",
            "VernacExtend",
            "0e32ce81b090f217ca5901e8c7a2aa8bca44de30"
        ],
        [
            "rewrite dec_eq_true.",
            "VernacExtend",
            "28b046c22f8f69c0651cbac642dd4f2013af7847"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma list_eventval_of_val_sound: forall vl tl evl, list_eventval_of_val vl tl = Some evl -> eventval_list_match ge evl tl vl.",
            "VernacStartTheoremProof",
            "0685c182d9547ba2f23e30eb6a1f77145875baa7"
        ],
        [
            "Proof with try discriminate.",
            "VernacProof",
            "3d32ec508666ffadd4f3b32abd3c0b531dc537b6"
        ],
        [
            "induction vl; destruct tl; simpl; intros; inv H.",
            "VernacExtend",
            "ade514742eed0c04c85e366466c399a03f05a3ad"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "destruct (eventval_of_val a t) as [ev1|] eqn:?...",
            "VernacExtend",
            "58dd2dd100818b705fa3d311fe870962fb91b5fb"
        ],
        [
            "destruct (list_eventval_of_val vl tl) as [evl'|] eqn:?...",
            "VernacExtend",
            "a2896d5254b5394432e0799ae0951952eb8e3ffc"
        ],
        [
            "inv H1.",
            "VernacExtend",
            "2c43d1971eb5aa98166f6ec686cc2a4f1886b0a4"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply eventval_of_val_sound; auto.",
            "VernacExtend",
            "71a0d8feb917359b6933ac1c50eb7cde06483071"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma list_eventval_of_val_complete: forall evl tl vl, eventval_list_match ge evl tl vl -> list_eventval_of_val vl tl = Some evl.",
            "VernacStartTheoremProof",
            "bea03964a4e35ad1d768f3559fb7de3555a46bad"
        ],
        [
            "induction 1; simpl.",
            "VernacExtend",
            "7a487009c144d86c422c5127aa0fc0ff1707bb8b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite (eventval_of_val_complete _ _ _ H).",
            "VernacExtend",
            "ed3330c77aa547d9253972fc8cb6c8ea21c4c1cf"
        ],
        [
            "rewrite IHeventval_list_match.",
            "VernacExtend",
            "399a5eac9407e1d6d1d2d08fbfc0b9183f6a5320"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma val_of_eventval_sound: forall ev t v, val_of_eventval ev t = Some v -> eventval_match ge ev t v.",
            "VernacStartTheoremProof",
            "f3879f268e714973794465f8cdb0204fa713abd9"
        ],
        [
            "intros until v.",
            "VernacExtend",
            "e8ae8d9afb8414a68e0fc34542631f9d672009d9"
        ],
        [
            "destruct ev; simpl; mydestr; constructor; auto.",
            "VernacExtend",
            "d71edd716febf37bacf0e6357c5f36a50612215c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma val_of_eventval_complete: forall ev t v, eventval_match ge ev t v -> val_of_eventval ev t = Some v.",
            "VernacStartTheoremProof",
            "7b6a20599c6916f6cb8938f4bfdefbf0792d0a3c"
        ],
        [
            "induction 1; simpl.",
            "VernacExtend",
            "7a487009c144d86c422c5127aa0fc0ff1707bb8b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "rewrite H, H0.",
            "VernacExtend",
            "6a2c6e8b471f6fb686cf1a7e2e3992d01a326476"
        ],
        [
            "rewrite dec_eq_true.",
            "VernacExtend",
            "28b046c22f8f69c0651cbac642dd4f2013af7847"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition do_volatile_load (w: world) (chunk: memory_chunk) (m: mem) (b: block) (ofs: ptrofs) : option (world * trace * val) := if Genv.block_is_volatile ge b then do id <- Genv.invert_symbol ge b; match nextworld_vload w chunk id ofs with | None => None | Some(res, w') => do vres <- val_of_eventval res (type_of_chunk chunk); Some(w', Event_vload chunk id ofs res :: nil, Val.load_result chunk vres) end else do v <- Mem.load chunk m b (Ptrofs.unsigned ofs); Some(w, E0, v).",
            "VernacDefinition",
            "d4232d72bf016e5cb6a5dc320c31df0cb145bfe5"
        ],
        [
            "Definition do_volatile_store (w: world) (chunk: memory_chunk) (m: mem) (b: block) (ofs: ptrofs) (v: val) : option (world * trace * mem) := if Genv.block_is_volatile ge b then do id <- Genv.invert_symbol ge b; do ev <- eventval_of_val (Val.load_result chunk v) (type_of_chunk chunk); do w' <- nextworld_vstore w chunk id ofs ev; Some(w', Event_vstore chunk id ofs ev :: nil, m) else do m' <- Mem.store chunk m b (Ptrofs.unsigned ofs) v; Some(w, E0, m').",
            "VernacDefinition",
            "26722f6e4cd52023cb6a3875c234af6de44bb2fc"
        ],
        [
            "Lemma do_volatile_load_sound: forall w chunk m b ofs w' t v, do_volatile_load w chunk m b ofs = Some(w', t, v) -> volatile_load ge chunk m b ofs t v /\\ possible_trace w t w'.",
            "VernacStartTheoremProof",
            "972ad2af37cd50e189a8054b77925c75fc4c6852"
        ],
        [
            "intros until v.",
            "VernacExtend",
            "e8ae8d9afb8414a68e0fc34542631f9d672009d9"
        ],
        [
            "unfold do_volatile_load.",
            "VernacExtend",
            "9ef38bdbcf861009e0dad5b6527f3f57ed3229a5"
        ],
        [
            "mydestr.",
            "VernacExtend",
            "15ccaff78debd7ea5535997272bb5d089d56456f"
        ],
        [
            "destruct p as [ev w''].",
            "VernacExtend",
            "11650196805198f32f878524697e2e69d70ae58d"
        ],
        [
            "mydestr.",
            "VernacExtend",
            "15ccaff78debd7ea5535997272bb5d089d56456f"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "apply Genv.invert_find_symbol; auto.",
            "VernacExtend",
            "2c0a5424bfdf1ad44c38195a576009789505ee15"
        ],
        [
            "apply val_of_eventval_sound; auto.",
            "VernacExtend",
            "5b729affb08db48764f223a7dad261fe8439ffe1"
        ],
        [
            "econstructor.",
            "VernacExtend",
            "57e0061dc596e77c9d30460f8165a53e99efafc2"
        ],
        [
            "constructor; eauto.",
            "VernacExtend",
            "e0e7f3b9c455b20aabae95754dcd431c74b5b789"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma do_volatile_load_complete: forall w chunk m b ofs w' t v, volatile_load ge chunk m b ofs t v -> possible_trace w t w' -> do_volatile_load w chunk m b ofs = Some(w', t, v).",
            "VernacStartTheoremProof",
            "4afa2fde96d6c710d25d3c51c664b79b97a29dfe"
        ],
        [
            "unfold do_volatile_load; intros.",
            "VernacExtend",
            "63063f179b7a8d160152cab30358d8e0a9a334d3"
        ],
        [
            "inv H; simpl in *.",
            "VernacExtend",
            "56a7d62488949798e4bf6d708412135f02450cad"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "rewrite (Genv.find_invert_symbol _ _ H2).",
            "VernacExtend",
            "34c1cad1bcc31d4851d1baf1e1a07b43b1e62ffe"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "inv H8.",
            "VernacExtend",
            "295ed8193db9e0fc900e88537474c82260cb5c8a"
        ],
        [
            "inv H6.",
            "VernacExtend",
            "18148ecb90898142481b96ce8d75b495e98fc93a"
        ],
        [
            "rewrite H9.",
            "VernacExtend",
            "7e513e390abfc88b77648f4c54df1434c5ffa9d3"
        ],
        [
            "rewrite (val_of_eventval_complete _ _ _ H3).",
            "VernacExtend",
            "855e4c3e14ebc8eb3a220aeb77cef063baad230f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma do_volatile_store_sound: forall w chunk m b ofs v w' t m', do_volatile_store w chunk m b ofs v = Some(w', t, m') -> volatile_store ge chunk m b ofs v t m' /\\ possible_trace w t w'.",
            "VernacStartTheoremProof",
            "70371e8b03bf92519cdfbdfac802472dca01e9c5"
        ],
        [
            "intros until m'.",
            "VernacExtend",
            "cd098e47d0bef4f796664753dec3dab785aabdcb"
        ],
        [
            "unfold do_volatile_store.",
            "VernacExtend",
            "46772ec0399f4febd2fc1ad60ef99fae703b0693"
        ],
        [
            "mydestr.",
            "VernacExtend",
            "15ccaff78debd7ea5535997272bb5d089d56456f"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "apply Genv.invert_find_symbol; auto.",
            "VernacExtend",
            "2c0a5424bfdf1ad44c38195a576009789505ee15"
        ],
        [
            "apply eventval_of_val_sound; auto.",
            "VernacExtend",
            "71a0d8feb917359b6933ac1c50eb7cde06483071"
        ],
        [
            "econstructor.",
            "VernacExtend",
            "57e0061dc596e77c9d30460f8165a53e99efafc2"
        ],
        [
            "constructor; eauto.",
            "VernacExtend",
            "e0e7f3b9c455b20aabae95754dcd431c74b5b789"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma do_volatile_store_complete: forall w chunk m b ofs v w' t m', volatile_store ge chunk m b ofs v t m' -> possible_trace w t w' -> do_volatile_store w chunk m b ofs v = Some(w', t, m').",
            "VernacStartTheoremProof",
            "0a768d98271dfc7df38164de958651f9bd43b60e"
        ],
        [
            "unfold do_volatile_store; intros.",
            "VernacExtend",
            "6763a4333c2ce4bbca68ecf032ec9f3617d003e3"
        ],
        [
            "inv H; simpl in *.",
            "VernacExtend",
            "56a7d62488949798e4bf6d708412135f02450cad"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "rewrite (Genv.find_invert_symbol _ _ H2).",
            "VernacExtend",
            "34c1cad1bcc31d4851d1baf1e1a07b43b1e62ffe"
        ],
        [
            "rewrite (eventval_of_val_complete _ _ _ H3).",
            "VernacExtend",
            "2f7fe04772b79e271be9af07274681f6e76eecaa"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "inv H8.",
            "VernacExtend",
            "295ed8193db9e0fc900e88537474c82260cb5c8a"
        ],
        [
            "inv H6.",
            "VernacExtend",
            "18148ecb90898142481b96ce8d75b495e98fc93a"
        ],
        [
            "rewrite H9.",
            "VernacExtend",
            "7e513e390abfc88b77648f4c54df1434c5ffa9d3"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition do_deref_loc (w: world) (ty: type) (m: mem) (b: block) (ofs: ptrofs) : option (world * trace * val) := match access_mode ty with | By_value chunk => match type_is_volatile ty with | false => do v <- Mem.loadv chunk m (Vptr b ofs); Some(w, E0, v) | true => do_volatile_load w chunk m b ofs end | By_reference => Some(w, E0, Vptr b ofs) | By_copy => Some(w, E0, Vptr b ofs) | _ => None end.",
            "VernacDefinition",
            "1e355cbc88826c4d40f6a9543b53e8704d76d1f0"
        ],
        [
            "Definition assign_copy_ok (ty: type) (b: block) (ofs: ptrofs) (b': block) (ofs': ptrofs) : Prop := (alignof_blockcopy ge ty | Ptrofs.unsigned ofs') /\\ (alignof_blockcopy ge ty | Ptrofs.unsigned ofs) /\\ (b' <> b \\/ Ptrofs.unsigned ofs' = Ptrofs.unsigned ofs \\/ Ptrofs.unsigned ofs' + sizeof ge ty <= Ptrofs.unsigned ofs \\/ Ptrofs.unsigned ofs + sizeof ge ty <= Ptrofs.unsigned ofs').",
            "VernacDefinition",
            "c50de2dc2bcdc8df1fe09ab5edcfa4938ce13120"
        ],
        [
            "Remark check_assign_copy: forall (ty: type) (b: block) (ofs: ptrofs) (b': block) (ofs': ptrofs), { assign_copy_ok ty b ofs b' ofs' } + {~ assign_copy_ok ty b ofs b' ofs' }.",
            "VernacStartTheoremProof",
            "63139f4c30f108eea30aa3a98f61879be99f377b"
        ],
        [
            "Proof with try (right; intuition omega).",
            "VernacProof",
            "f30c3e2c04ee579e270ba5acaf52589c480a7770"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold assign_copy_ok.",
            "VernacExtend",
            "c8193893c653359fba7c8167d334f584fe075475"
        ],
        [
            "assert (alignof_blockcopy ge ty > 0) by apply alignof_blockcopy_pos.",
            "VernacExtend",
            "a4dc5c6e4e254e52842c67c3db99ce0c9c190293"
        ],
        [
            "destruct (Zdivide_dec (alignof_blockcopy ge ty) (Ptrofs.unsigned ofs')); auto...",
            "VernacExtend",
            "e5b924a8a2ad9e57b5d7202f513bcd5317dff073"
        ],
        [
            "destruct (Zdivide_dec (alignof_blockcopy ge ty) (Ptrofs.unsigned ofs)); auto...",
            "VernacExtend",
            "427c80d081e1e49690e02f6b248e5b21415cf868"
        ],
        [
            "assert (Y: {b' <> b \\/ Ptrofs.unsigned ofs' = Ptrofs.unsigned ofs \\/ Ptrofs.unsigned ofs' + sizeof ge ty <= Ptrofs.unsigned ofs \\/ Ptrofs.unsigned ofs + sizeof ge ty <= Ptrofs.unsigned ofs'} + {~(b' <> b \\/ Ptrofs.unsigned ofs' = Ptrofs.unsigned ofs \\/ Ptrofs.unsigned ofs' + sizeof ge ty <= Ptrofs.unsigned ofs \\/ Ptrofs.unsigned ofs + sizeof ge ty <= Ptrofs.unsigned ofs')}).",
            "VernacExtend",
            "92b1752dbe02b228e19d84316b6bca71b3e1b6f4"
        ],
        [
            "destruct (eq_block b' b); auto.",
            "VernacExtend",
            "282555034676535d6fc85c86d79c2b33f3256327"
        ],
        [
            "destruct (zeq (Ptrofs.unsigned ofs') (Ptrofs.unsigned ofs)); auto.",
            "VernacExtend",
            "40d601e0ff5af602afd5ee07d1543c754adafe8c"
        ],
        [
            "destruct (zle (Ptrofs.unsigned ofs' + sizeof ge ty) (Ptrofs.unsigned ofs)); auto.",
            "VernacExtend",
            "76984f490dd1bc49f49ea7531728ee714e4e200a"
        ],
        [
            "destruct (zle (Ptrofs.unsigned ofs + sizeof ge ty) (Ptrofs.unsigned ofs')); auto.",
            "VernacExtend",
            "0841c6adda2f2daa1fcde6df7e19eba3def0edfc"
        ],
        [
            "right; intuition omega.",
            "VernacExtend",
            "96599421014213030a37ebbd7bd80b1cd9419526"
        ],
        [
            "destruct Y...",
            "VernacExtend",
            "17d3ee53e449fd7b4a05949160b5428d82f6cc24"
        ],
        [
            "left; intuition omega.",
            "VernacExtend",
            "444f35bc2c5a51b56cf57f18bb119319375d1ba1"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition do_assign_loc (w: world) (ty: type) (m: mem) (b: block) (ofs: ptrofs) (v: val): option (world * trace * mem) := match access_mode ty with | By_value chunk => match type_is_volatile ty with | false => do m' <- Mem.storev chunk m (Vptr b ofs) v; Some(w, E0, m') | true => do_volatile_store w chunk m b ofs v end | By_copy => match v with | Vptr b' ofs' => if check_assign_copy ty b ofs b' ofs' then do bytes <- Mem.loadbytes m b' (Ptrofs.unsigned ofs') (sizeof ge ty); do m' <- Mem.storebytes m b (Ptrofs.unsigned ofs) bytes; Some(w, E0, m') else None | _ => None end | _ => None end.",
            "VernacDefinition",
            "489e6262790d361d98c670997baf260e07011233"
        ],
        [
            "Lemma do_deref_loc_sound: forall w ty m b ofs w' t v, do_deref_loc w ty m b ofs = Some(w', t, v) -> deref_loc ge ty m b ofs t v /\\ possible_trace w t w'.",
            "VernacStartTheoremProof",
            "bb8f9d5071df2bda15056d76ca1533f92970aae9"
        ],
        [
            "unfold do_deref_loc; intros until v.",
            "VernacExtend",
            "51bdac6aeed4d5596d00adaa2113b3f2f605037f"
        ],
        [
            "destruct (access_mode ty) eqn:?; mydestr.",
            "VernacExtend",
            "12b7240923782f4a4420f08b7e2c8ac14cbc0e53"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exploit do_volatile_load_sound; eauto.",
            "VernacExtend",
            "178d2626c151905bbf26640d5796ebbb81716d45"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "eapply deref_loc_volatile; eauto.",
            "VernacExtend",
            "85e6a5100157608207a475f4263a59838da0d1a6"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply deref_loc_value; eauto.",
            "VernacExtend",
            "51d8923c2fc5b19d27034e12d473b75839e99fde"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply deref_loc_reference; eauto.",
            "VernacExtend",
            "9a2359ad3c2bfc69d80898c5b31edca0fbe23ca8"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply deref_loc_copy; eauto.",
            "VernacExtend",
            "cd1c12264c7da12f4f7a9174d3a7f76ea5f0bae7"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma do_deref_loc_complete: forall w ty m b ofs w' t v, deref_loc ge ty m b ofs t v -> possible_trace w t w' -> do_deref_loc w ty m b ofs = Some(w', t, v).",
            "VernacStartTheoremProof",
            "3ffadfc30defe40c7e9f39c05216cec09ac12049"
        ],
        [
            "unfold do_deref_loc; intros.",
            "VernacExtend",
            "f20475a139528347e110a46f66289f3abc4d3258"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "rewrite H1; rewrite H2; rewrite H3; auto.",
            "VernacExtend",
            "db14f9914b4f1f8f20c5af02e5aabbf7c03f57b0"
        ],
        [
            "rewrite H1; rewrite H2.",
            "VernacExtend",
            "8d018a8547fa22724706a4da5d7a7d5d3ce49c8e"
        ],
        [
            "apply do_volatile_load_complete; auto.",
            "VernacExtend",
            "f49abebd9592a79b866f171dfc1a90504e0e6022"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma do_assign_loc_sound: forall w ty m b ofs v w' t m', do_assign_loc w ty m b ofs v = Some(w', t, m') -> assign_loc ge ty m b ofs v t m' /\\ possible_trace w t w'.",
            "VernacStartTheoremProof",
            "db9edc330199baa80e310dcfa5f887ab1ec7da0b"
        ],
        [
            "unfold do_assign_loc; intros until m'.",
            "VernacExtend",
            "3e61c45f5b7dd24561ee9c357dcf910dde98f5f1"
        ],
        [
            "destruct (access_mode ty) eqn:?; mydestr.",
            "VernacExtend",
            "12b7240923782f4a4420f08b7e2c8ac14cbc0e53"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exploit do_volatile_store_sound; eauto.",
            "VernacExtend",
            "c9b795d130695470f7698b4206d93fdf548c1464"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "eapply assign_loc_volatile; eauto.",
            "VernacExtend",
            "b3996732ff1facb91e497bc8a3af12e7ef9b3e53"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply assign_loc_value; eauto.",
            "VernacExtend",
            "0ea323c62a3e2d80b50a68344159dfcd15775743"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "destruct v; mydestr.",
            "VernacExtend",
            "a5f1445037f9acf633a37886d38022095863db42"
        ],
        [
            "destruct a as [P [Q R]].",
            "VernacExtend",
            "ec633949f39c089b9f52b7a2cd7fe14ab63596de"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply assign_loc_copy; eauto.",
            "VernacExtend",
            "704c1252e1345484b5fcebecb3cc0790f97a84c3"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma do_assign_loc_complete: forall w ty m b ofs v w' t m', assign_loc ge ty m b ofs v t m' -> possible_trace w t w' -> do_assign_loc w ty m b ofs v = Some(w', t, m').",
            "VernacStartTheoremProof",
            "7946871290e337adfbdb22ffa1beb3fb287bdec7"
        ],
        [
            "unfold do_assign_loc; intros.",
            "VernacExtend",
            "75765c56f234ce94cee130d043d0d4d5c3fe4d66"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "rewrite H1; rewrite H2; rewrite H3; auto.",
            "VernacExtend",
            "db14f9914b4f1f8f20c5af02e5aabbf7c03f57b0"
        ],
        [
            "rewrite H1; rewrite H2.",
            "VernacExtend",
            "8d018a8547fa22724706a4da5d7a7d5d3ce49c8e"
        ],
        [
            "apply do_volatile_store_complete; auto.",
            "VernacExtend",
            "024d0fda83f00bb0fb77e08ef55ff133e77409ac"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "destruct (check_assign_copy ty b ofs b' ofs').",
            "VernacExtend",
            "1093770cce3d6571cc90c1fa3c4dac98b755264d"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "rewrite H5; rewrite H6; auto.",
            "VernacExtend",
            "618a47874fd2445696ebb225054d491ae363991b"
        ],
        [
            "elim n.",
            "VernacExtend",
            "c68f766a88bb5402d72ee6adaca953661a5d18b2"
        ],
        [
            "red; tauto.",
            "VernacExtend",
            "86096a8f01fc632f49d98392e9366840d4a279cc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variable do_external_function: string -> signature -> Senv.t -> world -> list val -> mem -> option (world * trace * val * mem).",
            "VernacAssumption",
            "8288ad407222c675b641015972167c85dd67a301"
        ],
        [
            "Hypothesis do_external_function_sound: forall id sg ge vargs m t vres m' w w', do_external_function id sg ge w vargs m = Some(w', t, vres, m') -> external_functions_sem id sg ge vargs m t vres m' /\\ possible_trace w t w'.",
            "VernacAssumption",
            "2450349c7db666ee264ee17da930b7fb905ee7b3"
        ],
        [
            "Hypothesis do_external_function_complete: forall id sg ge vargs m t vres m' w w', external_functions_sem id sg ge vargs m t vres m' -> possible_trace w t w' -> do_external_function id sg ge w vargs m = Some(w', t, vres, m').",
            "VernacAssumption",
            "260fb1c7c12117659cf359a56d68c3d7a5543b69"
        ],
        [
            "Variable do_inline_assembly: string -> signature -> Senv.t -> world -> list val -> mem -> option (world * trace * val * mem).",
            "VernacAssumption",
            "2fffb44ec3b0550719655516ea25fd7fbaab64f1"
        ],
        [
            "Hypothesis do_inline_assembly_sound: forall txt sg ge vargs m t vres m' w w', do_inline_assembly txt sg ge w vargs m = Some(w', t, vres, m') -> inline_assembly_sem txt sg ge vargs m t vres m' /\\ possible_trace w t w'.",
            "VernacAssumption",
            "08eda7170e3af09866e0a93f778d0423e92c1435"
        ],
        [
            "Hypothesis do_inline_assembly_complete: forall txt sg ge vargs m t vres m' w w', inline_assembly_sem txt sg ge vargs m t vres m' -> possible_trace w t w' -> do_inline_assembly txt sg ge w vargs m = Some(w', t, vres, m').",
            "VernacAssumption",
            "1bd20b74ce1a6f3535b4e60f9eebe87175cfb34f"
        ],
        [
            "Definition do_ef_volatile_load (chunk: memory_chunk) (w: world) (vargs: list val) (m: mem) : option (world * trace * val * mem) := match vargs with | Vptr b ofs :: nil => do w',t,v <- do_volatile_load w chunk m b ofs; Some(w',t,v,m) | _ => None end.",
            "VernacDefinition",
            "d3961cc579879ddb338bddf9a5e16ea61a20c690"
        ],
        [
            "Definition do_ef_volatile_store (chunk: memory_chunk) (w: world) (vargs: list val) (m: mem) : option (world * trace * val * mem) := match vargs with | Vptr b ofs :: v :: nil => do w',t,m' <- do_volatile_store w chunk m b ofs v; Some(w',t,Vundef,m') | _ => None end.",
            "VernacDefinition",
            "92adc15d97fe64b234bcdc1d3e829800e75acbaf"
        ],
        [
            "Definition do_ef_volatile_load_global (chunk: memory_chunk) (id: ident) (ofs: ptrofs) (w: world) (vargs: list val) (m: mem) : option (world * trace * val * mem) := do b <- Genv.find_symbol ge id; do_ef_volatile_load chunk w (Vptr b ofs :: vargs) m.",
            "VernacDefinition",
            "3312d29bd94d535da851f229df8908f29b4c58ff"
        ],
        [
            "Definition do_ef_volatile_store_global (chunk: memory_chunk) (id: ident) (ofs: ptrofs) (w: world) (vargs: list val) (m: mem) : option (world * trace * val * mem) := do b <- Genv.find_symbol ge id; do_ef_volatile_store chunk w (Vptr b ofs :: vargs) m.",
            "VernacDefinition",
            "ced123ad5ba87a453cde6e06fcfaeb3cdba3e84e"
        ],
        [
            "Definition do_alloc_size (v: val) : option ptrofs := match v with | Vint n => if Archi.ptr64 then None else Some (Ptrofs.of_int n) | Vlong n => if Archi.ptr64 then Some (Ptrofs.of_int64 n) else None | _ => None end.",
            "VernacDefinition",
            "98b46e5621b3dc86ce8e0584b316486701c430ea"
        ],
        [
            "Definition do_ef_malloc (w: world) (vargs: list val) (m: mem) : option (world * trace * val * mem) := match vargs with | v :: nil => do sz <- do_alloc_size v; let (m', b) := Mem.alloc m (- size_chunk Mptr) (Ptrofs.unsigned sz) in do m'' <- Mem.store Mptr m' b (- size_chunk Mptr) v; Some(w, E0, Vptr b Ptrofs.zero, m'') | _ => None end.",
            "VernacDefinition",
            "c0c90b0c8472a47d961cbd6e1bf6746a51b6607a"
        ],
        [
            "Definition do_ef_free (w: world) (vargs: list val) (m: mem) : option (world * trace * val * mem) := match vargs with | Vptr b lo :: nil => do vsz <- Mem.load Mptr m b (Ptrofs.unsigned lo - size_chunk Mptr); do sz <- do_alloc_size vsz; check (zlt 0 (Ptrofs.unsigned sz)); do m' <- Mem.free m b (Ptrofs.unsigned lo - size_chunk Mptr) (Ptrofs.unsigned lo + Ptrofs.unsigned sz); Some(w, E0, Vundef, m') | _ => None end.",
            "VernacDefinition",
            "092be1f22e7d60f7afad576bf576cf5da42662b0"
        ],
        [
            "Definition memcpy_args_ok (sz al: Z) (bdst: block) (odst: Z) (bsrc: block) (osrc: Z) : Prop := (al = 1 \\/ al = 2 \\/ al = 4 \\/ al = 8) /\\ sz >= 0 /\\ (al | sz) /\\ (sz > 0 -> (al | osrc)) /\\ (sz > 0 -> (al | odst)) /\\ (bsrc <> bdst \\/ osrc = odst \\/ osrc + sz <= odst \\/ odst + sz <= osrc).",
            "VernacDefinition",
            "929a32e3772d118b558606f30db02aeb3c693c76"
        ],
        [
            "Definition do_ef_memcpy (sz al: Z) (w: world) (vargs: list val) (m: mem) : option (world * trace * val * mem) := match vargs with | Vptr bdst odst :: Vptr bsrc osrc :: nil => if decide (memcpy_args_ok sz al bdst (Ptrofs.unsigned odst) bsrc (Ptrofs.unsigned osrc)) then do bytes <- Mem.loadbytes m bsrc (Ptrofs.unsigned osrc) sz; do m' <- Mem.storebytes m bdst (Ptrofs.unsigned odst) bytes; Some(w, E0, Vundef, m') else None | _ => None end.",
            "VernacDefinition",
            "110e26a53f33d9330cfc54996fd39ac0feb191bf"
        ],
        [
            "Definition do_ef_annot (text: string) (targs: list typ) (w: world) (vargs: list val) (m: mem) : option (world * trace * val * mem) := do args <- list_eventval_of_val vargs targs; Some(w, Event_annot text args :: E0, Vundef, m).",
            "VernacDefinition",
            "a0285dcf0a8189d8b2eef27a7ac1ac0e3376a6d8"
        ],
        [
            "Definition do_ef_annot_val (text: string) (targ: typ) (w: world) (vargs: list val) (m: mem) : option (world * trace * val * mem) := match vargs with | varg :: nil => do arg <- eventval_of_val varg targ; Some(w, Event_annot text (arg :: nil) :: E0, varg, m) | _ => None end.",
            "VernacDefinition",
            "552edfd41b22a965f63c50d8a7b1c9d101bb544a"
        ],
        [
            "Definition do_ef_debug (kind: positive) (text: ident) (targs: list typ) (w: world) (vargs: list val) (m: mem) : option (world * trace * val * mem) := Some(w, E0, Vundef, m).",
            "VernacDefinition",
            "06c9be64caed41373b5a6d28b4ee56316081ad15"
        ],
        [
            "Definition do_external (ef: external_function): world -> list val -> mem -> option (world * trace * val * mem) := match ef with | EF_external name sg => do_external_function name sg ge | EF_builtin name sg => do_external_function name sg ge | EF_runtime name sg => do_external_function name sg ge | EF_vload chunk => do_ef_volatile_load chunk | EF_vstore chunk => do_ef_volatile_store chunk | EF_malloc => do_ef_malloc | EF_free => do_ef_free | EF_memcpy sz al => do_ef_memcpy sz al | EF_annot kind text targs => do_ef_annot text targs | EF_annot_val kind text targ => do_ef_annot_val text targ | EF_inline_asm text sg clob => do_inline_assembly text sg ge | EF_debug kind text targs => do_ef_debug kind text targs end.",
            "VernacDefinition",
            "6513032dcb12320cd421d01e35cd6f0ce6a065ff"
        ],
        [
            "Lemma do_ef_external_sound: forall ef w vargs m w' t vres m', do_external ef w vargs m = Some(w', t, vres, m') -> external_call ef ge vargs m t vres m' /\\ possible_trace w t w'.",
            "VernacStartTheoremProof",
            "d90c58114a73c41705d2e6088537bc33934843e9"
        ],
        [
            "Proof with try congruence.",
            "VernacProof",
            "25798d586df531fb479782ff4265d93254af6dfe"
        ],
        [
            "assert (SIZE: forall v sz, do_alloc_size v = Some sz -> v = Vptrofs sz).",
            "VernacExtend",
            "73af15122494b8ae40eb9a187b455bed3d997e6b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros until sz; unfold Vptrofs; destruct v; simpl; destruct Archi.ptr64 eqn:SF; intros EQ; inv EQ; f_equal; symmetry; eauto with ptrofs.",
            "VernacExtend",
            "3a2c5335e9011d7568399530c1b1b9897eb876c9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intros until m'.",
            "VernacExtend",
            "cd098e47d0bef4f796664753dec3dab785aabdcb"
        ],
        [
            "destruct ef; simpl.",
            "VernacExtend",
            "b95ae69f973f9a16497cef059fafd46f23d5a636"
        ],
        [
            "eapply do_external_function_sound; eauto.",
            "VernacExtend",
            "82fb977097037b008e6368029a690503878e3b93"
        ],
        [
            "eapply do_external_function_sound; eauto.",
            "VernacExtend",
            "82fb977097037b008e6368029a690503878e3b93"
        ],
        [
            "eapply do_external_function_sound; eauto.",
            "VernacExtend",
            "82fb977097037b008e6368029a690503878e3b93"
        ],
        [
            "unfold do_ef_volatile_load.",
            "VernacExtend",
            "f5f3a7e5236b86bdd2bb4bc6f025788bd878ed9c"
        ],
        [
            "destruct vargs...",
            "VernacExtend",
            "2664fb4340acc1e006e2135036202197cb29dca8"
        ],
        [
            "destruct v...",
            "VernacExtend",
            "b5e9c83f74029ebcc08113bdd184567b4efb7d22"
        ],
        [
            "destruct vargs...",
            "VernacExtend",
            "2664fb4340acc1e006e2135036202197cb29dca8"
        ],
        [
            "mydestr.",
            "VernacExtend",
            "15ccaff78debd7ea5535997272bb5d089d56456f"
        ],
        [
            "destruct p as [[w'' t''] v]; mydestr.",
            "VernacExtend",
            "33e1f1bc2ba7e9089b97c8c0cd5bcad512a886dc"
        ],
        [
            "exploit do_volatile_load_sound; eauto.",
            "VernacExtend",
            "178d2626c151905bbf26640d5796ebbb81716d45"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "econstructor; eauto.",
            "VernacExtend",
            "faa93781fb8bbf289e651728c4588af1c4169d34"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold do_ef_volatile_store.",
            "VernacExtend",
            "d714f6926c43ebd4eef4f9c4af25f4131f31bc14"
        ],
        [
            "destruct vargs...",
            "VernacExtend",
            "2664fb4340acc1e006e2135036202197cb29dca8"
        ],
        [
            "destruct v...",
            "VernacExtend",
            "b5e9c83f74029ebcc08113bdd184567b4efb7d22"
        ],
        [
            "destruct vargs...",
            "VernacExtend",
            "2664fb4340acc1e006e2135036202197cb29dca8"
        ],
        [
            "destruct vargs...",
            "VernacExtend",
            "2664fb4340acc1e006e2135036202197cb29dca8"
        ],
        [
            "mydestr.",
            "VernacExtend",
            "15ccaff78debd7ea5535997272bb5d089d56456f"
        ],
        [
            "destruct p as [[w'' t''] m''].",
            "VernacExtend",
            "50c1a739c8f5de4b9494e1795cdfa093964739b6"
        ],
        [
            "mydestr.",
            "VernacExtend",
            "15ccaff78debd7ea5535997272bb5d089d56456f"
        ],
        [
            "exploit do_volatile_store_sound; eauto.",
            "VernacExtend",
            "c9b795d130695470f7698b4206d93fdf548c1464"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "econstructor; eauto.",
            "VernacExtend",
            "faa93781fb8bbf289e651728c4588af1c4169d34"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold do_ef_malloc.",
            "VernacExtend",
            "b6f391184366c38538b3070aa9710d755426de30"
        ],
        [
            "destruct vargs...",
            "VernacExtend",
            "2664fb4340acc1e006e2135036202197cb29dca8"
        ],
        [
            "destruct vargs...",
            "VernacExtend",
            "2664fb4340acc1e006e2135036202197cb29dca8"
        ],
        [
            "mydestr.",
            "VernacExtend",
            "15ccaff78debd7ea5535997272bb5d089d56456f"
        ],
        [
            "destruct (Mem.alloc m (- size_chunk Mptr) (Ptrofs.unsigned i)) as [m1 b] eqn:?.",
            "VernacExtend",
            "fbfb56955f5d35f63490b51a4e82811f8de4f293"
        ],
        [
            "mydestr.",
            "VernacExtend",
            "15ccaff78debd7ea5535997272bb5d089d56456f"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply SIZE in Heqo.",
            "VernacExtend",
            "c1a4e7c46dc9c9b1e9a7de423865607509bd999e"
        ],
        [
            "subst v.",
            "VernacExtend",
            "a1d4af197c860364e3e3c9b734079b6e191cf10c"
        ],
        [
            "econstructor; eauto.",
            "VernacExtend",
            "faa93781fb8bbf289e651728c4588af1c4169d34"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "unfold do_ef_free.",
            "VernacExtend",
            "7d2877c305f890df5748524e28ed81094b652b5e"
        ],
        [
            "destruct vargs...",
            "VernacExtend",
            "2664fb4340acc1e006e2135036202197cb29dca8"
        ],
        [
            "destruct v...",
            "VernacExtend",
            "b5e9c83f74029ebcc08113bdd184567b4efb7d22"
        ],
        [
            "destruct vargs...",
            "VernacExtend",
            "2664fb4340acc1e006e2135036202197cb29dca8"
        ],
        [
            "mydestr.",
            "VernacExtend",
            "15ccaff78debd7ea5535997272bb5d089d56456f"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply SIZE in Heqo0.",
            "VernacExtend",
            "9c5e0aac82535899a627108253b6e310f03cfc1c"
        ],
        [
            "econstructor; eauto.",
            "VernacExtend",
            "faa93781fb8bbf289e651728c4588af1c4169d34"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "unfold do_ef_memcpy.",
            "VernacExtend",
            "252d314d95d4b6e817f52522ba37b0b55f8279be"
        ],
        [
            "destruct vargs...",
            "VernacExtend",
            "2664fb4340acc1e006e2135036202197cb29dca8"
        ],
        [
            "destruct v...",
            "VernacExtend",
            "b5e9c83f74029ebcc08113bdd184567b4efb7d22"
        ],
        [
            "destruct vargs...",
            "VernacExtend",
            "2664fb4340acc1e006e2135036202197cb29dca8"
        ],
        [
            "destruct v...",
            "VernacExtend",
            "b5e9c83f74029ebcc08113bdd184567b4efb7d22"
        ],
        [
            "destruct vargs...",
            "VernacExtend",
            "2664fb4340acc1e006e2135036202197cb29dca8"
        ],
        [
            "mydestr.",
            "VernacExtend",
            "15ccaff78debd7ea5535997272bb5d089d56456f"
        ],
        [
            "apply Decidable_sound in Heqb1.",
            "VernacExtend",
            "2d38a9e4583a413dfab16d8b456df97cb59b4dc8"
        ],
        [
            "red in Heqb1.",
            "VernacExtend",
            "ff1baf9f3035a54897dedfb03f2a8c9f4628e101"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "econstructor; eauto; tauto.",
            "VernacExtend",
            "9a0a8e00e6d8aef1ab5b3ace3732a074218df828"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "unfold do_ef_annot.",
            "VernacExtend",
            "0201aad72ed76e08f581a201738915640c0488a6"
        ],
        [
            "mydestr.",
            "VernacExtend",
            "15ccaff78debd7ea5535997272bb5d089d56456f"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply list_eventval_of_val_sound; auto.",
            "VernacExtend",
            "11f5d89de941b46a57aea558e711d5495a8cc92f"
        ],
        [
            "econstructor.",
            "VernacExtend",
            "57e0061dc596e77c9d30460f8165a53e99efafc2"
        ],
        [
            "constructor; eauto.",
            "VernacExtend",
            "e0e7f3b9c455b20aabae95754dcd431c74b5b789"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "unfold do_ef_annot_val.",
            "VernacExtend",
            "a4e56402556004bd3da16eafb4f3591327afae50"
        ],
        [
            "destruct vargs...",
            "VernacExtend",
            "2664fb4340acc1e006e2135036202197cb29dca8"
        ],
        [
            "destruct vargs...",
            "VernacExtend",
            "2664fb4340acc1e006e2135036202197cb29dca8"
        ],
        [
            "mydestr.",
            "VernacExtend",
            "15ccaff78debd7ea5535997272bb5d089d56456f"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply eventval_of_val_sound; auto.",
            "VernacExtend",
            "71a0d8feb917359b6933ac1c50eb7cde06483071"
        ],
        [
            "econstructor.",
            "VernacExtend",
            "57e0061dc596e77c9d30460f8165a53e99efafc2"
        ],
        [
            "constructor; eauto.",
            "VernacExtend",
            "e0e7f3b9c455b20aabae95754dcd431c74b5b789"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "eapply do_inline_assembly_sound; eauto.",
            "VernacExtend",
            "43ddf2d7ce5b4bd813d0924ffc991ee68b4ca340"
        ],
        [
            "unfold do_ef_debug.",
            "VernacExtend",
            "46090cb7f44ff8edf4aed4233378eac72dc05442"
        ],
        [
            "mydestr.",
            "VernacExtend",
            "15ccaff78debd7ea5535997272bb5d089d56456f"
        ],
        [
            "split; constructor.",
            "VernacExtend",
            "a4eee33b07a871264fa4a3f83ef4d82d5e66f990"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma do_ef_external_complete: forall ef w vargs m w' t vres m', external_call ef ge vargs m t vres m' -> possible_trace w t w' -> do_external ef w vargs m = Some(w', t, vres, m').",
            "VernacStartTheoremProof",
            "e87b1ff192b7f854d79fc1f9658f50fc9d23c12b"
        ],
        [
            "assert (SIZE: forall n, do_alloc_size (Vptrofs n) = Some n).",
            "VernacExtend",
            "be353dc4557d3b9272e5b1871a91b9299452138a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold Vptrofs, do_alloc_size; intros; destruct Archi.ptr64 eqn:SF.",
            "VernacExtend",
            "f4cbc88e8ae8db35a7440d85b3b02cf071ae40ca"
        ],
        [
            "rewrite Ptrofs.of_int64_to_int64; auto.",
            "VernacExtend",
            "fe8ccc501ab2d8e1f100457409fe64f68dc773fc"
        ],
        [
            "rewrite Ptrofs.of_int_to_int; auto.",
            "VernacExtend",
            "923b9b631a8926ce990433215d2bf13190d0ecfc"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct ef; simpl in *.",
            "VernacExtend",
            "7ea6653f761ffb81a91a4716952679b88a9913f1"
        ],
        [
            "eapply do_external_function_complete; eauto.",
            "VernacExtend",
            "ea9c44bb8473d78d3476dfbfb1d93ffc98eb56a4"
        ],
        [
            "eapply do_external_function_complete; eauto.",
            "VernacExtend",
            "ea9c44bb8473d78d3476dfbfb1d93ffc98eb56a4"
        ],
        [
            "eapply do_external_function_complete; eauto.",
            "VernacExtend",
            "ea9c44bb8473d78d3476dfbfb1d93ffc98eb56a4"
        ],
        [
            "inv H; unfold do_ef_volatile_load.",
            "VernacExtend",
            "7911c23d72d143f73100263b7de4b06cc5b2a2c9"
        ],
        [
            "exploit do_volatile_load_complete; eauto.",
            "VernacExtend",
            "fb00bceefe9a346eeb9a1edbee5e55484ad352b7"
        ],
        [
            "intros EQ; rewrite EQ; auto.",
            "VernacExtend",
            "5ebac0108403f8a0d8ef3ebb0583ae24208d69b7"
        ],
        [
            "inv H; unfold do_ef_volatile_store.",
            "VernacExtend",
            "38bc36638611f4ad61156a4ab957ab4c302a203a"
        ],
        [
            "exploit do_volatile_store_complete; eauto.",
            "VernacExtend",
            "36dcc50103dcbe430be07310182984b5467fe09b"
        ],
        [
            "intros EQ; rewrite EQ; auto.",
            "VernacExtend",
            "5ebac0108403f8a0d8ef3ebb0583ae24208d69b7"
        ],
        [
            "inv H; unfold do_ef_malloc.",
            "VernacExtend",
            "6568994a4f61497e670cd9bb0cf06a92da060726"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "erewrite SIZE by eauto.",
            "VernacExtend",
            "8779a16ebbc97110ad04b2abb194c85363f80c02"
        ],
        [
            "rewrite H1, H2.",
            "VernacExtend",
            "0ce0ee884f848b2a2759f8abce9a0e685be27984"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "inv H; unfold do_ef_free.",
            "VernacExtend",
            "d8ef5e37f6f58bed863d58fadc9f15eb3414fcb3"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "erewrite SIZE by eauto.",
            "VernacExtend",
            "8779a16ebbc97110ad04b2abb194c85363f80c02"
        ],
        [
            "rewrite zlt_true.",
            "VernacExtend",
            "b49135e183425368b4318af106711c28871bcc77"
        ],
        [
            "rewrite H3.",
            "VernacExtend",
            "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "inv H; unfold do_ef_memcpy.",
            "VernacExtend",
            "611af939a8a2db46a68458add661acf44b1631a6"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "rewrite Decidable_complete.",
            "VernacExtend",
            "9e3c184b776a875b45bf213393903782b06aacb9"
        ],
        [
            "rewrite H7; rewrite H8; auto.",
            "VernacExtend",
            "5b20f3bce0e577f2871e5e71eed0ec0015a77a36"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "inv H; unfold do_ef_annot.",
            "VernacExtend",
            "1fe26f1b488c9e0f59d065063c08b4a0a42d600c"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "inv H6.",
            "VernacExtend",
            "18148ecb90898142481b96ce8d75b495e98fc93a"
        ],
        [
            "inv H4.",
            "VernacExtend",
            "f5fbbd659e4642cab66975bb4756634e17e3a560"
        ],
        [
            "rewrite (list_eventval_of_val_complete _ _ _ H1).",
            "VernacExtend",
            "0a2dcebd7487e43418dd04df0b4434ffa2b3008c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "inv H; unfold do_ef_annot_val.",
            "VernacExtend",
            "6cc8eb235f2012b970ae9045b7a3d6784de8e7a7"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "inv H6.",
            "VernacExtend",
            "18148ecb90898142481b96ce8d75b495e98fc93a"
        ],
        [
            "inv H4.",
            "VernacExtend",
            "f5fbbd659e4642cab66975bb4756634e17e3a560"
        ],
        [
            "rewrite (eventval_of_val_complete _ _ _ H1).",
            "VernacExtend",
            "687a3f450ddcac3994bc634733c28aca1400cbdd"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "eapply do_inline_assembly_complete; eauto.",
            "VernacExtend",
            "af1f077df067523bb9b31062398caf8c2cc23ca7"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive reduction: Type := | Lred (rule: string) (l': expr) (m': mem) | Rred (rule: string) (r': expr) (m': mem) (t: trace) | Callred (rule: string) (fd: fundef) (args: list val) (tyres: type) (m': mem) | Stuckred.",
            "VernacInductive",
            "0318b2de12cd8a1b40a23d0bb7c536aa46808f48"
        ],
        [
            "Section EXPRS.",
            "VernacBeginSection",
            "047f3d8cbf9b29dd5dbc36d29280a2aeef4139df"
        ],
        [
            "Variable e: env.",
            "VernacAssumption",
            "246a24d9eb5be930b928cc64176ad206a11440ce"
        ],
        [
            "Variable w: world.",
            "VernacAssumption",
            "a4b108a65a0ce993960245fb85c96388568f2c47"
        ],
        [
            "Fixpoint sem_cast_arguments (vtl: list (val * type)) (tl: typelist) (m: mem) : option (list val) := match vtl, tl with | nil, Tnil => Some nil | (v1,t1)::vtl, Tcons t1' tl => do v <- sem_cast v1 t1 t1' m; do vl <- sem_cast_arguments vtl tl m; Some(v::vl) | _, _ => None end.",
            "VernacFixpoint",
            "80e51a6fd3f17ea89e310a319296db5b55164e3a"
        ],
        [
            "Definition reducts (A: Type): Type := list ((expr -> A) * reduction).",
            "VernacDefinition",
            "e3797ce37bbd927a3d51b073330700c038b8c99d"
        ],
        [
            "Definition topred (r: reduction) : reducts expr := ((fun (x: expr) => x), r) :: nil.",
            "VernacDefinition",
            "9a750d525430ce49445c6f2134585310787c3b48"
        ],
        [
            "Definition stuck : reducts expr := ((fun (x: expr) => x), Stuckred) :: nil.",
            "VernacDefinition",
            "9a44503ada6157db2a10b532099e9c25b98338bb"
        ],
        [
            "Definition incontext {A B: Type} (ctx: A -> B) (ll: reducts A) : reducts B := map (fun z => ((fun (x: expr) => ctx(fst z x)), snd z)) ll.",
            "VernacDefinition",
            "c447027498e2cbf04cfeaf6ba1439e21ac10951d"
        ],
        [
            "Definition incontext2 {A1 A2 B: Type} (ctx1: A1 -> B) (ll1: reducts A1) (ctx2: A2 -> B) (ll2: reducts A2) : reducts B := incontext ctx1 ll1 ++ incontext ctx2 ll2.",
            "VernacDefinition",
            "7e40de71c180ab345cb8e80f1e44255feffc4ab9"
        ],
        [
            "Notation \"'do' X <- A ; B\" := (match A with Some X => B | None => stuck end) (at level 200, X ident, A at level 100, B at level 200) : reducts_monad_scope.",
            "VernacNotation",
            "44ad46f663f5a136d6604e1f8e1d63f4e2579ae9"
        ],
        [
            "Notation \"'do' X , Y <- A ; B\" := (match A with Some (X, Y) => B | None => stuck end) (at level 200, X ident, Y ident, A at level 100, B at level 200) : reducts_monad_scope.",
            "VernacNotation",
            "f6cdce602ceef9c91936d46d2a0d631851c83cc5"
        ],
        [
            "Notation \"'do' X , Y , Z <- A ; B\" := (match A with Some (X, Y, Z) => B | None => stuck end) (at level 200, X ident, Y ident, Z ident, A at level 100, B at level 200) : reducts_monad_scope.",
            "VernacNotation",
            "8591ba4607085505ed23913be4dc0d32a0f486f2"
        ],
        [
            "Notation \" 'check' A ; B\" := (if A then B else stuck) (at level 200, A at level 100, B at level 200) : reducts_monad_scope.",
            "VernacNotation",
            "9b3bba7a1878489ef4b145fa21d14732b92e82b3"
        ],
        [
            "Local Open Scope reducts_monad_scope.",
            "VernacOpenCloseScope",
            "3191d6559908c25da314f4a6bf48fd9783d2e23d"
        ],
        [
            "Fixpoint step_expr (k: kind) (a: expr) (m: mem): reducts expr := match k, a with | LV, Eloc b ofs ty => nil | LV, Evar x ty => match e!x with | Some(b, ty') => check type_eq ty ty'; topred (Lred \"red_var_local\" (Eloc b Ptrofs.zero ty) m) | None => do b <- Genv.find_symbol ge x; topred (Lred \"red_var_global\" (Eloc b Ptrofs.zero ty) m) end | LV, Ederef r ty => match is_val r with | Some(Vptr b ofs, ty') => topred (Lred \"red_deref\" (Eloc b ofs ty) m) | Some _ => stuck | None => incontext (fun x => Ederef x ty) (step_expr RV r m) end | LV, Efield r f ty => match is_val r with | Some(Vptr b ofs, ty') => match ty' with | Tstruct id _ => do co <- ge.(genv_cenv)!id; match field_offset ge f (co_members co) with | Error _ => stuck | OK delta => topred (Lred \"red_field_struct\" (Eloc b (Ptrofs.add ofs (Ptrofs.repr delta)) ty) m) end | Tunion id _ => do co <- ge.(genv_cenv)!id; topred (Lred \"red_field_union\" (Eloc b ofs ty) m) | _ => stuck end | Some _ => stuck | None => incontext (fun x => Efield x f ty) (step_expr RV r m) end | RV, Eval v ty => nil | RV, Evalof l ty => match is_loc l with | Some(b, ofs, ty') => check type_eq ty ty'; do w',t,v <- do_deref_loc w ty m b ofs; topred (Rred \"red_rvalof\" (Eval v ty) m t) | None => incontext (fun x => Evalof x ty) (step_expr LV l m) end | RV, Eaddrof l ty => match is_loc l with | Some(b, ofs, ty') => topred (Rred \"red_addrof\" (Eval (Vptr b ofs) ty) m E0) | None => incontext (fun x => Eaddrof x ty) (step_expr LV l m) end | RV, Eunop op r1 ty => match is_val r1 with | Some(v1, ty1) => do v <- sem_unary_operation op v1 ty1 m; topred (Rred \"red_unop\" (Eval v ty) m E0) | None => incontext (fun x => Eunop op x ty) (step_expr RV r1 m) end | RV, Ebinop op r1 r2 ty => match is_val r1, is_val r2 with | Some(v1, ty1), Some(v2, ty2) => do v <- sem_binary_operation ge op v1 ty1 v2 ty2 m; topred (Rred \"red_binop\" (Eval v ty) m E0) | _, _ => incontext2 (fun x => Ebinop op x r2 ty) (step_expr RV r1 m) (fun x => Ebinop op r1 x ty) (step_expr RV r2 m) end | RV, Ecast r1 ty => match is_val r1 with | Some(v1, ty1) => do v <- sem_cast v1 ty1 ty m; topred (Rred \"red_cast\" (Eval v ty) m E0) | None => incontext (fun x => Ecast x ty) (step_expr RV r1 m) end | RV, Eseqand r1 r2 ty => match is_val r1 with | Some(v1, ty1) => do b <- bool_val v1 ty1 m; if b then topred (Rred \"red_seqand_true\" (Eparen r2 type_bool ty) m E0) else topred (Rred \"red_seqand_false\" (Eval (Vint Int.zero) ty) m E0) | None => incontext (fun x => Eseqand x r2 ty) (step_expr RV r1 m) end | RV, Eseqor r1 r2 ty => match is_val r1 with | Some(v1, ty1) => do b <- bool_val v1 ty1 m; if b then topred (Rred \"red_seqor_true\" (Eval (Vint Int.one) ty) m E0) else topred (Rred \"red_seqor_false\" (Eparen r2 type_bool ty) m E0) | None => incontext (fun x => Eseqor x r2 ty) (step_expr RV r1 m) end | RV, Econdition r1 r2 r3 ty => match is_val r1 with | Some(v1, ty1) => do b <- bool_val v1 ty1 m; topred (Rred \"red_condition\" (Eparen (if b then r2 else r3) ty ty) m E0) | None => incontext (fun x => Econdition x r2 r3 ty) (step_expr RV r1 m) end | RV, Esizeof ty' ty => topred (Rred \"red_sizeof\" (Eval (Vptrofs (Ptrofs.repr (sizeof ge ty'))) ty) m E0) | RV, Ealignof ty' ty => topred (Rred \"red_alignof\" (Eval (Vptrofs (Ptrofs.repr (alignof ge ty'))) ty) m E0) | RV, Eassign l1 r2 ty => match is_loc l1, is_val r2 with | Some(b, ofs, ty1), Some(v2, ty2) => check type_eq ty1 ty; do v <- sem_cast v2 ty2 ty1 m; do w',t,m' <- do_assign_loc w ty1 m b ofs v; topred (Rred \"red_assign\" (Eval v ty) m' t) | _, _ => incontext2 (fun x => Eassign x r2 ty) (step_expr LV l1 m) (fun x => Eassign l1 x ty) (step_expr RV r2 m) end | RV, Eassignop op l1 r2 tyres ty => match is_loc l1, is_val r2 with | Some(b, ofs, ty1), Some(v2, ty2) => check type_eq ty1 ty; do w',t,v1 <- do_deref_loc w ty1 m b ofs; let r' := Eassign (Eloc b ofs ty1) (Ebinop op (Eval v1 ty1) (Eval v2 ty2) tyres) ty1 in topred (Rred \"red_assignop\" r' m t) | _, _ => incontext2 (fun x => Eassignop op x r2 tyres ty) (step_expr LV l1 m) (fun x => Eassignop op l1 x tyres ty) (step_expr RV r2 m) end | RV, Epostincr id l ty => match is_loc l with | Some(b, ofs, ty1) => check type_eq ty1 ty; do w',t, v1 <- do_deref_loc w ty m b ofs; let op := match id with Incr => Oadd | Decr => Osub end in let r' := Ecomma (Eassign (Eloc b ofs ty) (Ebinop op (Eval v1 ty) (Eval (Vint Int.one) type_int32s) (incrdecr_type ty)) ty) (Eval v1 ty) ty in topred (Rred \"red_postincr\" r' m t) | None => incontext (fun x => Epostincr id x ty) (step_expr LV l m) end | RV, Ecomma r1 r2 ty => match is_val r1 with | Some _ => check type_eq (typeof r2) ty; topred (Rred \"red_comma\" r2 m E0) | None => incontext (fun x => Ecomma x r2 ty) (step_expr RV r1 m) end | RV, Eparen r1 tycast ty => match is_val r1 with | Some (v1, ty1) => do v <- sem_cast v1 ty1 tycast m; topred (Rred \"red_paren\" (Eval v ty) m E0) | None => incontext (fun x => Eparen x tycast ty) (step_expr RV r1 m) end | RV, Ecall r1 rargs ty => match is_val r1, is_val_list rargs with | Some(vf, tyf), Some vtl => match classify_fun tyf with | fun_case_f tyargs tyres cconv => do fd <- Genv.find_funct ge vf; do vargs <- sem_cast_arguments vtl tyargs m; check type_eq (type_of_fundef fd) (Tfunction tyargs tyres cconv); topred (Callred \"red_call\" fd vargs ty m) | _ => stuck end | _, _ => incontext2 (fun x => Ecall x rargs ty) (step_expr RV r1 m) (fun x => Ecall r1 x ty) (step_exprlist rargs m) end | RV, Ebuiltin ef tyargs rargs ty => match is_val_list rargs with | Some vtl => do vargs <- sem_cast_arguments vtl tyargs m; match do_external ef w vargs m with | None => stuck | Some(w',t,v,m') => topred (Rred \"red_builtin\" (Eval v ty) m' t) end | _ => incontext (fun x => Ebuiltin ef tyargs x ty) (step_exprlist rargs m) end | _, _ => stuck end with step_exprlist (rl: exprlist) (m: mem): reducts exprlist := match rl with | Enil => nil | Econs r1 rs => incontext2 (fun x => Econs x rs) (step_expr RV r1 m) (fun x => Econs r1 x) (step_exprlist rs m) end.",
            "VernacFixpoint",
            "1ee29cb49e4debaadc1d4e0d14743467d48565f6"
        ],
        [
            "Inductive imm_safe_t: kind -> expr -> mem -> Prop := | imm_safe_t_val: forall v ty m, imm_safe_t RV (Eval v ty) m | imm_safe_t_loc: forall b ofs ty m, imm_safe_t LV (Eloc b ofs ty) m | imm_safe_t_lred: forall to C l m l' m', lred ge e l m l' m' -> context LV to C -> imm_safe_t to (C l) m | imm_safe_t_rred: forall to C r m t r' m' w', rred ge r m t r' m' -> possible_trace w t w' -> context RV to C -> imm_safe_t to (C r) m | imm_safe_t_callred: forall to C r m fd args ty, callred ge r m fd args ty -> context RV to C -> imm_safe_t to (C r) m.",
            "VernacInductive",
            "3b350429bc82350a738917722e317cf69f3c1a3e"
        ],
        [
            "Remark imm_safe_t_imm_safe: forall k a m, imm_safe_t k a m -> imm_safe ge e k a m.",
            "VernacStartTheoremProof",
            "d7b561291ce28c45b83f550d0af427d9e41321f6"
        ],
        [
            "induction 1.",
            "VernacExtend",
            "dfe896305621800fcbb03b32d51d497edbdf1dc5"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "eapply imm_safe_lred; eauto.",
            "VernacExtend",
            "aa03c1abf67c2d2d0eb467b0e8bb990c21eddd9e"
        ],
        [
            "eapply imm_safe_rred; eauto.",
            "VernacExtend",
            "42053057043f22b80c26ff942fa0cfb5584a092a"
        ],
        [
            "eapply imm_safe_callred; eauto.",
            "VernacExtend",
            "6ab1dd238e97b90dece80ecf3041a56850f5a67b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint exprlist_all_values (rl: exprlist) : Prop := match rl with | Enil => True | Econs (Eval v ty) rl' => exprlist_all_values rl' | Econs _ _ => False end.",
            "VernacFixpoint",
            "99da9da7361e7c8ca2c98c93d4214b00a2efb735"
        ],
        [
            "Definition invert_expr_prop (a: expr) (m: mem) : Prop := match a with | Eloc b ofs ty => False | Evar x ty => exists b, e!x = Some(b, ty) \\/ (e!x = None /\\ Genv.find_symbol ge x = Some b) | Ederef (Eval v ty1) ty => exists b, exists ofs, v = Vptr b ofs | Efield (Eval v ty1) f ty => exists b, exists ofs, v = Vptr b ofs /\\ match ty1 with | Tstruct id _ => exists co delta, ge.(genv_cenv)!id = Some co /\\ field_offset ge f (co_members co) = OK delta | Tunion id _ => exists co, ge.(genv_cenv)!id = Some co | _ => False end | Eval v ty => False | Evalof (Eloc b ofs ty') ty => ty' = ty /\\ exists t, exists v, exists w', deref_loc ge ty m b ofs t v /\\ possible_trace w t w' | Eunop op (Eval v1 ty1) ty => exists v, sem_unary_operation op v1 ty1 m = Some v | Ebinop op (Eval v1 ty1) (Eval v2 ty2) ty => exists v, sem_binary_operation ge op v1 ty1 v2 ty2 m = Some v | Ecast (Eval v1 ty1) ty => exists v, sem_cast v1 ty1 ty m = Some v | Eseqand (Eval v1 ty1) r2 ty => exists b, bool_val v1 ty1 m = Some b | Eseqor (Eval v1 ty1) r2 ty => exists b, bool_val v1 ty1 m = Some b | Econdition (Eval v1 ty1) r1 r2 ty => exists b, bool_val v1 ty1 m = Some b | Eassign (Eloc b ofs ty1) (Eval v2 ty2) ty => exists v, exists m', exists t, exists w', ty = ty1 /\\ sem_cast v2 ty2 ty1 m = Some v /\\ assign_loc ge ty1 m b ofs v t m' /\\ possible_trace w t w' | Eassignop op (Eloc b ofs ty1) (Eval v2 ty2) tyres ty => exists t, exists v1, exists w', ty = ty1 /\\ deref_loc ge ty1 m b ofs t v1 /\\ possible_trace w t w' | Epostincr id (Eloc b ofs ty1) ty => exists t, exists v1, exists w', ty = ty1 /\\ deref_loc ge ty m b ofs t v1 /\\ possible_trace w t w' | Ecomma (Eval v ty1) r2 ty => typeof r2 = ty | Eparen (Eval v1 ty1) tycast ty => exists v, sem_cast v1 ty1 tycast m = Some v | Ecall (Eval vf tyf) rargs ty => exprlist_all_values rargs -> exists tyargs tyres cconv fd vl, classify_fun tyf = fun_case_f tyargs tyres cconv /\\ Genv.find_funct ge vf = Some fd /\\ cast_arguments m rargs tyargs vl /\\ type_of_fundef fd = Tfunction tyargs tyres cconv | Ebuiltin ef tyargs rargs ty => exprlist_all_values rargs -> exists vargs t vres m' w', cast_arguments m rargs tyargs vargs /\\ external_call ef ge vargs m t vres m' /\\ possible_trace w t w' | _ => True end.",
            "VernacDefinition",
            "cd63ee5adb3466dcc803d83e760096eae4606d39"
        ],
        [
            "Lemma lred_invert: forall l m l' m', lred ge e l m l' m' -> invert_expr_prop l m.",
            "VernacStartTheoremProof",
            "5b0e36f9668b3616f833bb1d4623a4d400d2aa5a"
        ],
        [
            "induction 1; red; auto.",
            "VernacExtend",
            "ed9f41615bd3a7a1f899921c704c3837692f1534"
        ],
        [
            "exists b; auto.",
            "VernacExtend",
            "2e71eac2fffee5e38189419c0aff6774b0942c8c"
        ],
        [
            "exists b; auto.",
            "VernacExtend",
            "2e71eac2fffee5e38189419c0aff6774b0942c8c"
        ],
        [
            "exists b; exists ofs; auto.",
            "VernacExtend",
            "f1cd3b4697c2c67e2ee8d46867f41a7992562c5e"
        ],
        [
            "exists b; exists ofs; split; auto.",
            "VernacExtend",
            "3055298f4a95556c74f97495e1ebf3c1ca686bc2"
        ],
        [
            "exists co, delta; auto.",
            "VernacExtend",
            "c65cd5453b0d813d37fea0e8d68790ba2dcddf71"
        ],
        [
            "exists b; exists ofs; split; auto.",
            "VernacExtend",
            "3055298f4a95556c74f97495e1ebf3c1ca686bc2"
        ],
        [
            "exists co; auto.",
            "VernacExtend",
            "7769c0e369428564dec82bc42deb571b70b442ca"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rred_invert: forall w' r m t r' m', rred ge r m t r' m' -> possible_trace w t w' -> invert_expr_prop r m.",
            "VernacStartTheoremProof",
            "5a7fd5169b3fdc39aae4201afc0ddb860653a45d"
        ],
        [
            "induction 1; intros; red; auto.",
            "VernacExtend",
            "71c0dadf41a0def4e359a4217e47dc8a58863a58"
        ],
        [
            "split; auto; exists t; exists v; exists w'; auto.",
            "VernacExtend",
            "25db403f99c0a3f38adc450185e2a3a6b1825b65"
        ],
        [
            "exists v; auto.",
            "VernacExtend",
            "863f124117e3794411b95ae7c6344e625907c1cb"
        ],
        [
            "exists v; auto.",
            "VernacExtend",
            "863f124117e3794411b95ae7c6344e625907c1cb"
        ],
        [
            "exists v; auto.",
            "VernacExtend",
            "863f124117e3794411b95ae7c6344e625907c1cb"
        ],
        [
            "exists true; auto.",
            "VernacExtend",
            "c9c0c36d931a79e7a23e2c53bb5bf5cbc45e93f6"
        ],
        [
            "exists false; auto.",
            "VernacExtend",
            "bee606723e33c2c74fb8bd973f917b55fa284799"
        ],
        [
            "exists true; auto.",
            "VernacExtend",
            "c9c0c36d931a79e7a23e2c53bb5bf5cbc45e93f6"
        ],
        [
            "exists false; auto.",
            "VernacExtend",
            "bee606723e33c2c74fb8bd973f917b55fa284799"
        ],
        [
            "exists b; auto.",
            "VernacExtend",
            "2e71eac2fffee5e38189419c0aff6774b0942c8c"
        ],
        [
            "exists v; exists m'; exists t; exists w'; auto.",
            "VernacExtend",
            "945d65061aabd9ed67d573dbd1a08280e1a998e1"
        ],
        [
            "exists t; exists v1; exists w'; auto.",
            "VernacExtend",
            "038ac41750799d424a902d194db0bdc3da66572c"
        ],
        [
            "exists t; exists v1; exists w'; auto.",
            "VernacExtend",
            "038ac41750799d424a902d194db0bdc3da66572c"
        ],
        [
            "exists v; auto.",
            "VernacExtend",
            "863f124117e3794411b95ae7c6344e625907c1cb"
        ],
        [
            "intros; exists vargs; exists t; exists vres; exists m'; exists w'; auto.",
            "VernacExtend",
            "5e10766ef77061644b6a2b9b779d6d01a15b15ae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma callred_invert: forall r fd args ty m, callred ge r m fd args ty -> invert_expr_prop r m.",
            "VernacStartTheoremProof",
            "41eeb407642ce6dac864fab6f4b82fa152804723"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exists tyargs, tyres, cconv, fd, args; auto.",
            "VernacExtend",
            "44edcccf69c96e736b681a3aed42cf3cc37a6663"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Scheme context_ind2 := Minimality for context Sort Prop with contextlist_ind2 := Minimality for contextlist Sort Prop.",
            "VernacScheme",
            "8c19c813edb31418935abc92b167367f1956f6ea"
        ],
        [
            "Combined Scheme context_contextlist_ind from context_ind2, contextlist_ind2.",
            "VernacCombinedScheme",
            "258eca03bbd9cd5e2dbc73876a3265ed02221537"
        ],
        [
            "Lemma invert_expr_context: (forall from to C, context from to C -> forall a m, invert_expr_prop a m -> invert_expr_prop (C a) m) /\\(forall from C, contextlist from C -> forall a m, invert_expr_prop a m -> ~exprlist_all_values (C a)).",
            "VernacStartTheoremProof",
            "dd54c065638e34f2296b267deb7da3a8f4ec4502"
        ],
        [
            "apply context_contextlist_ind; intros; try (exploit H0; [eauto|intros]); simpl.",
            "VernacExtend",
            "80cfd10622ac7cc4a679adab33f37795a4ae377e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct (C a); auto; contradiction.",
            "VernacExtend",
            "94a25cbefd95ca28d484826b68d2d616f602e552"
        ],
        [
            "destruct (C a); auto; contradiction.",
            "VernacExtend",
            "94a25cbefd95ca28d484826b68d2d616f602e552"
        ],
        [
            "destruct (C a); auto; contradiction.",
            "VernacExtend",
            "94a25cbefd95ca28d484826b68d2d616f602e552"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct (C a); auto; contradiction.",
            "VernacExtend",
            "94a25cbefd95ca28d484826b68d2d616f602e552"
        ],
        [
            "destruct (C a); auto; contradiction.",
            "VernacExtend",
            "94a25cbefd95ca28d484826b68d2d616f602e552"
        ],
        [
            "destruct e1; auto; destruct (C a); auto; contradiction.",
            "VernacExtend",
            "d2c5de6fdb180894723152d072fec21c44abb0ed"
        ],
        [
            "destruct (C a); auto; contradiction.",
            "VernacExtend",
            "94a25cbefd95ca28d484826b68d2d616f602e552"
        ],
        [
            "destruct (C a); auto; contradiction.",
            "VernacExtend",
            "94a25cbefd95ca28d484826b68d2d616f602e552"
        ],
        [
            "destruct (C a); auto; contradiction.",
            "VernacExtend",
            "94a25cbefd95ca28d484826b68d2d616f602e552"
        ],
        [
            "destruct (C a); auto; contradiction.",
            "VernacExtend",
            "94a25cbefd95ca28d484826b68d2d616f602e552"
        ],
        [
            "destruct (C a); auto; contradiction.",
            "VernacExtend",
            "94a25cbefd95ca28d484826b68d2d616f602e552"
        ],
        [
            "destruct e1; auto; destruct (C a); auto; contradiction.",
            "VernacExtend",
            "d2c5de6fdb180894723152d072fec21c44abb0ed"
        ],
        [
            "destruct (C a); auto; contradiction.",
            "VernacExtend",
            "94a25cbefd95ca28d484826b68d2d616f602e552"
        ],
        [
            "destruct e1; auto; destruct (C a); auto; contradiction.",
            "VernacExtend",
            "d2c5de6fdb180894723152d072fec21c44abb0ed"
        ],
        [
            "destruct (C a); auto; contradiction.",
            "VernacExtend",
            "94a25cbefd95ca28d484826b68d2d616f602e552"
        ],
        [
            "destruct (C a); auto; contradiction.",
            "VernacExtend",
            "94a25cbefd95ca28d484826b68d2d616f602e552"
        ],
        [
            "destruct e1; auto.",
            "VernacExtend",
            "9a8628f92899f36a8c150b74ba2c1acd8076e6a1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim (H0 a m); auto.",
            "VernacExtend",
            "ab2a5009712ced699bb7ae8b06bfc92dc2439d09"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim (H0 a m); auto.",
            "VernacExtend",
            "ab2a5009712ced699bb7ae8b06bfc92dc2439d09"
        ],
        [
            "destruct (C a); auto; contradiction.",
            "VernacExtend",
            "94a25cbefd95ca28d484826b68d2d616f602e552"
        ],
        [
            "destruct (C a); auto; contradiction.",
            "VernacExtend",
            "94a25cbefd95ca28d484826b68d2d616f602e552"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct (C a); auto.",
            "VernacExtend",
            "49d07db92880d8a6e6ab7ea2b6c023ce8c8e00aa"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct e1; auto.",
            "VernacExtend",
            "9a8628f92899f36a8c150b74ba2c1acd8076e6a1"
        ],
        [
            "elim (H0 a m); auto.",
            "VernacExtend",
            "ab2a5009712ced699bb7ae8b06bfc92dc2439d09"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma imm_safe_t_inv: forall k a m, imm_safe_t k a m -> match a with | Eloc _ _ _ => True | Eval _ _ => True | _ => invert_expr_prop a m end.",
            "VernacStartTheoremProof",
            "6c49b4bf8869fb7326f65e37b264a74fc07dd049"
        ],
        [
            "destruct invert_expr_context as [A B].",
            "VernacExtend",
            "f62efbb9f1213a2bdece3df3a285816f33115e41"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (invert_expr_prop (C l) m).",
            "VernacExtend",
            "8e8b06ea9e6432ff9a527757cac330d7a548d51d"
        ],
        [
            "eapply A; eauto.",
            "VernacExtend",
            "9b924320e329fc6ac1e04403134f32fc478929d0"
        ],
        [
            "eapply lred_invert; eauto.",
            "VernacExtend",
            "aabd0b22d8ca390de6dd26af4525cb8a417c95ca"
        ],
        [
            "red in H.",
            "VernacExtend",
            "a4b4bf9e03eb87c8fa06c84cfda5cac7b43f2be8"
        ],
        [
            "destruct (C l); auto; contradiction.",
            "VernacExtend",
            "c7a60f2b6438783a42975ab50421b4d058f00f04"
        ],
        [
            "assert (invert_expr_prop (C r) m).",
            "VernacExtend",
            "fbdfc1bc1a6429ee14e51df92ac5c6e2a30f0981"
        ],
        [
            "eapply A; eauto.",
            "VernacExtend",
            "9b924320e329fc6ac1e04403134f32fc478929d0"
        ],
        [
            "eapply rred_invert; eauto.",
            "VernacExtend",
            "5b0165802b3c474bbdce4ee2a7a629115e497c3b"
        ],
        [
            "red in H.",
            "VernacExtend",
            "a4b4bf9e03eb87c8fa06c84cfda5cac7b43f2be8"
        ],
        [
            "destruct (C r); auto; contradiction.",
            "VernacExtend",
            "76389b61157530a750aef26b653e8d282790ca0f"
        ],
        [
            "assert (invert_expr_prop (C r) m).",
            "VernacExtend",
            "fbdfc1bc1a6429ee14e51df92ac5c6e2a30f0981"
        ],
        [
            "eapply A; eauto.",
            "VernacExtend",
            "9b924320e329fc6ac1e04403134f32fc478929d0"
        ],
        [
            "eapply callred_invert; eauto.",
            "VernacExtend",
            "68e5731d7dd08e30265510654ba59c5a6db60955"
        ],
        [
            "red in H.",
            "VernacExtend",
            "a4b4bf9e03eb87c8fa06c84cfda5cac7b43f2be8"
        ],
        [
            "destruct (C r); auto; contradiction.",
            "VernacExtend",
            "76389b61157530a750aef26b653e8d282790ca0f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma context_compose: forall k2 k3 C2, context k2 k3 C2 -> forall k1 C1, context k1 k2 C1 -> context k1 k3 (fun x => C2(C1 x)) with contextlist_compose: forall k2 C2, contextlist k2 C2 -> forall k1 C1, context k1 k2 C1 -> contextlist k1 (fun x => C2(C1 x)).",
            "VernacStartTheoremProof",
            "84fa07886e58105e3453fd8b76ac1bac102f6d09"
        ],
        [
            "induction 1; intros; try (constructor; eauto).",
            "VernacExtend",
            "c0cf927e07acbbbe591ff4cf38bca748d1f2ab70"
        ],
        [
            "replace (fun x => C1 x) with C1.",
            "VernacExtend",
            "e199dcbd06bfd3ede26f5402c22e125de81c058b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply extensionality; auto.",
            "VernacExtend",
            "12b051f1d6e36e7724dfee1a551595e3bc88e7c4"
        ],
        [
            "induction 1; intros; constructor; eauto.",
            "VernacExtend",
            "6cc89d013f3542ca28e4d74762f3d08bf53a48dd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Constructors context contextlist.",
            "VernacHints",
            "68ad8d02530fa40fd0647e25b1e66649d3383440"
        ],
        [
            "Hint Resolve context_compose contextlist_compose.",
            "VernacHints",
            "161f606b1885778a702cf708b8be1b62d5934b33"
        ],
        [
            "Definition reduction_ok (k: kind) (a: expr) (m: mem) (rd: reduction) : Prop := match k, rd with | LV, Lred _ l' m' => lred ge e a m l' m' | RV, Rred _ r' m' t => rred ge a m t r' m' /\\ exists w', possible_trace w t w' | RV, Callred _ fd args tyres m' => callred ge a m fd args tyres /\\ m' = m | LV, Stuckred => ~imm_safe_t k a m | RV, Stuckred => ~imm_safe_t k a m | _, _ => False end.",
            "VernacDefinition",
            "77d4a2982d8e8762f74e4881830f4ac2c00a6f04"
        ],
        [
            "Definition reducts_ok (k: kind) (a: expr) (m: mem) (ll: reducts expr) : Prop := (forall C rd, In (C, rd) ll -> exists a', exists k', context k' k C /\\ a = C a' /\\ reduction_ok k' a' m rd) /\\ (ll = nil -> match k with LV => is_loc a <> None | RV => is_val a <> None end).",
            "VernacDefinition",
            "d4623610761efcbe3c6aed5a6207ab4044fca155"
        ],
        [
            "Definition list_reducts_ok (al: exprlist) (m: mem) (ll: reducts exprlist) : Prop := (forall C rd, In (C, rd) ll -> exists a', exists k', contextlist k' C /\\ al = C a' /\\ reduction_ok k' a' m rd) /\\ (ll = nil -> is_val_list al <> None).",
            "VernacDefinition",
            "73db2c02aa5ad7b1d70dd010fa681eb63fa18246"
        ],
        [
            "Ltac monadInv := match goal with | [ H: match ?x with Some _ => _ | None => None end = Some ?y |- _ ] => destruct x eqn:?; [monadInv|discriminate] | [ H: match ?x with left _ => _ | right _ => None end = Some ?y |- _ ] => destruct x; [monadInv|discriminate] | _ => idtac end.",
            "VernacExtend",
            "2879d497451aea2344ac2653aef361b0637c9eb5"
        ],
        [
            "Lemma sem_cast_arguments_sound: forall m rargs vtl tyargs vargs, is_val_list rargs = Some vtl -> sem_cast_arguments vtl tyargs m = Some vargs -> cast_arguments m rargs tyargs vargs.",
            "VernacStartTheoremProof",
            "07aa30ab89136f75b6252289a44ce16f2ab0074f"
        ],
        [
            "induction rargs; simpl; intros.",
            "VernacExtend",
            "1e7a0b3bc103013d46327e2b6ebf93807743d061"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "destruct tyargs; simpl in H0; inv H0.",
            "VernacExtend",
            "af7f65f6bf45c9298f5279ef13567bb9cec478db"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "monadInv.",
            "VernacExtend",
            "d73c4df55978a3f582b7b97922bbf9a137853027"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "destruct p as [v1 t1].",
            "VernacExtend",
            "dc1b9111ffe1b2b3362fe29651ad3041780b3909"
        ],
        [
            "destruct tyargs; try congruence.",
            "VernacExtend",
            "f85f2a48580b4d7be0f69879170ae3e515d1f4ba"
        ],
        [
            "monadInv.",
            "VernacExtend",
            "d73c4df55978a3f582b7b97922bbf9a137853027"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "rewrite (is_val_inv _ _ _ Heqo).",
            "VernacExtend",
            "83a2d61bfd14d8c9cdb98893a35d2e262f0c1491"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sem_cast_arguments_complete: forall m al tyl vl, cast_arguments m al tyl vl -> exists vtl, is_val_list al = Some vtl /\\ sem_cast_arguments vtl tyl m = Some vl.",
            "VernacStartTheoremProof",
            "79617c74c937f729fc073589584ed75f9194f32e"
        ],
        [
            "induction 1.",
            "VernacExtend",
            "dfe896305621800fcbb03b32d51d497edbdf1dc5"
        ],
        [
            "exists (@nil (val * type)); auto.",
            "VernacExtend",
            "5b2a41e1e68e5bcdf2056bac49196d409d40a7d7"
        ],
        [
            "destruct IHcast_arguments as [vtl [A B]].",
            "VernacExtend",
            "47a0e42c466d4a7e0c5c47f1ab42660c4d5fab41"
        ],
        [
            "exists ((v, ty) :: vtl); simpl.",
            "VernacExtend",
            "9d9ccd80e7b728e8c4b451b30ed3e7ceaa3f9d57"
        ],
        [
            "rewrite A; rewrite B; rewrite H.",
            "VernacExtend",
            "6316ac89b0bf01b05b9e8ee62f80cc7ae0f1fa09"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma topred_ok: forall k a m rd, reduction_ok k a m rd -> reducts_ok k a m (topred rd).",
            "VernacStartTheoremProof",
            "a14a295d21519c901b58a5002330596d9f8c9ddc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold topred; split; simpl; intros.",
            "VernacExtend",
            "7727809119d98751b7f3377530f3776d945aece5"
        ],
        [
            "destruct H0; try contradiction.",
            "VernacExtend",
            "ced5a61f27ab7d2ddde8683b150fe0e24118db92"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "exists a; exists k; auto.",
            "VernacExtend",
            "37cc0c5a30defef98a7ff046127b06bb3e2e2ce2"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma stuck_ok: forall k a m, ~imm_safe_t k a m -> reducts_ok k a m stuck.",
            "VernacStartTheoremProof",
            "7745e26181f0ccafbef283ceca2fa7ef9c017aa4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold stuck; split; simpl; intros.",
            "VernacExtend",
            "62a60926fb028aff51fe3ea90cd9a92706057fa6"
        ],
        [
            "destruct H0; try contradiction.",
            "VernacExtend",
            "ced5a61f27ab7d2ddde8683b150fe0e24118db92"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "exists a; exists k; intuition.",
            "VernacExtend",
            "ff59016d68fd66cb765853880daceb8cef17394f"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "destruct k; auto.",
            "VernacExtend",
            "943c329a25d961e7ca9cede3777de77116d51f41"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wrong_kind_ok: forall k a m, k <> Cstrategy.expr_kind a -> reducts_ok k a m stuck.",
            "VernacStartTheoremProof",
            "5c2f90c019a051ec48fd21976f3f600d8d068af4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply stuck_ok.",
            "VernacExtend",
            "e1c579782d3a84b5eaaf900ea76cd1107cbf3359"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "exploit Cstrategy.imm_safe_kind; eauto.",
            "VernacExtend",
            "3f468ab2561af1eb07546e323b4d38827b804046"
        ],
        [
            "eapply imm_safe_t_imm_safe; eauto.",
            "VernacExtend",
            "40b9ded4a49ffe66034fcff11e4b300a02ce7c1a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_invert_ok: forall k a m, match a with | Eloc _ _ _ => False | Eval _ _ => False | _ => invert_expr_prop a m -> False end -> reducts_ok k a m stuck.",
            "VernacStartTheoremProof",
            "77d67ff6af87f2109718417a3cf90b304199ccaa"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply stuck_ok.",
            "VernacExtend",
            "e1c579782d3a84b5eaaf900ea76cd1107cbf3359"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "exploit imm_safe_t_inv; eauto.",
            "VernacExtend",
            "48a1ceeb801da242af46db8031320ecfaf0b241c"
        ],
        [
            "destruct a; auto.",
            "VernacExtend",
            "7f3d8b3039d2691d4be2748b78f9d8a9a90a4b44"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma incontext_ok: forall k a m C res k' a', reducts_ok k' a' m res -> a = C a' -> context k' k C -> match k' with LV => is_loc a' = None | RV => is_val a' = None end -> reducts_ok k a m (incontext C res).",
            "VernacStartTheoremProof",
            "14713b6ded8300fc8c7bfdc98d71dd2e2a37f442"
        ],
        [
            "unfold reducts_ok, incontext; intros.",
            "VernacExtend",
            "49ea85aae67ad0b0ffa710a1dce113a764d27727"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "exploit list_in_map_inv; eauto.",
            "VernacExtend",
            "235c0bd1949d253ef4954ae1790ac9b7759ffe85"
        ],
        [
            "intros [[C1 rd1] [P Q]].",
            "VernacExtend",
            "a71e5cf10ebf5c3dc97cdde456a8831cdba4e470"
        ],
        [
            "inv P.",
            "VernacExtend",
            "9db9e551d407fb52f890fa8275c215698a67094e"
        ],
        [
            "exploit H; eauto.",
            "VernacExtend",
            "e4042976bceeb1e0a2b61f377ada9badc4c146f3"
        ],
        [
            "intros [a'' [k'' [U [V W]]]].",
            "VernacExtend",
            "7eaba5190470249f79afc05258970c4b702421de"
        ],
        [
            "exists a''; exists k''.",
            "VernacExtend",
            "3d7cb486152ffe4d28f724ec7879343059799c72"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply context_compose; eauto.",
            "VernacExtend",
            "b02d0dba291c194d83ab6e0059a0279305142f48"
        ],
        [
            "rewrite V; auto.",
            "VernacExtend",
            "cdbf39212179c2d69106e0d4ab294d0cc7e0e438"
        ],
        [
            "destruct res; simpl in H4; try congruence.",
            "VernacExtend",
            "f134f81ee5b76a24d7b640affe6d05c87618ebe3"
        ],
        [
            "destruct k'; intuition congruence.",
            "VernacExtend",
            "2f242a843e289510aad8595f1e766a4072252cde"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma incontext2_ok: forall k a m k1 a1 res1 k2 a2 res2 C1 C2, reducts_ok k1 a1 m res1 -> reducts_ok k2 a2 m res2 -> a = C1 a1 -> a = C2 a2 -> context k1 k C1 -> context k2 k C2 -> match k1 with LV => is_loc a1 = None | RV => is_val a1 = None end \\/ match k2 with LV => is_loc a2 = None | RV => is_val a2 = None end -> reducts_ok k a m (incontext2 C1 res1 C2 res2).",
            "VernacStartTheoremProof",
            "c25c0391b99b8bbdf8d356269fb201bf86a98f68"
        ],
        [
            "unfold reducts_ok, incontext2, incontext; intros.",
            "VernacExtend",
            "84ca2263b7e94f137d3fbd84d8cf7276e729acc8"
        ],
        [
            "destruct H; destruct H0; split; intros.",
            "VernacExtend",
            "7031a030bd7c22efdda2dd73c7483c9c022a7ca6"
        ],
        [
            "destruct (in_app_or _ _ _ H8).",
            "VernacExtend",
            "512260a43c54ac3b8914be518024f194500c908a"
        ],
        [
            "exploit list_in_map_inv; eauto.",
            "VernacExtend",
            "235c0bd1949d253ef4954ae1790ac9b7759ffe85"
        ],
        [
            "intros [[C' rd'] [P Q]].",
            "VernacExtend",
            "0acf54498b0c65786f81c02c2014d674296b64fe"
        ],
        [
            "inv P.",
            "VernacExtend",
            "9db9e551d407fb52f890fa8275c215698a67094e"
        ],
        [
            "exploit H; eauto.",
            "VernacExtend",
            "e4042976bceeb1e0a2b61f377ada9badc4c146f3"
        ],
        [
            "intros [a'' [k'' [U [V W]]]].",
            "VernacExtend",
            "7eaba5190470249f79afc05258970c4b702421de"
        ],
        [
            "exists a''; exists k''.",
            "VernacExtend",
            "3d7cb486152ffe4d28f724ec7879343059799c72"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply context_compose; eauto.",
            "VernacExtend",
            "b02d0dba291c194d83ab6e0059a0279305142f48"
        ],
        [
            "rewrite V; auto.",
            "VernacExtend",
            "cdbf39212179c2d69106e0d4ab294d0cc7e0e438"
        ],
        [
            "exploit list_in_map_inv; eauto.",
            "VernacExtend",
            "235c0bd1949d253ef4954ae1790ac9b7759ffe85"
        ],
        [
            "intros [[C' rd'] [P Q]].",
            "VernacExtend",
            "0acf54498b0c65786f81c02c2014d674296b64fe"
        ],
        [
            "inv P.",
            "VernacExtend",
            "9db9e551d407fb52f890fa8275c215698a67094e"
        ],
        [
            "exploit H0; eauto.",
            "VernacExtend",
            "e2bb62237be4af6f3df33a06be0bda055849b007"
        ],
        [
            "intros [a'' [k'' [U [V W]]]].",
            "VernacExtend",
            "7eaba5190470249f79afc05258970c4b702421de"
        ],
        [
            "exists a''; exists k''.",
            "VernacExtend",
            "3d7cb486152ffe4d28f724ec7879343059799c72"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply context_compose; eauto.",
            "VernacExtend",
            "b02d0dba291c194d83ab6e0059a0279305142f48"
        ],
        [
            "rewrite H2; rewrite V; auto.",
            "VernacExtend",
            "eae1b183405f36931e739890bdeeaf86e398b0e2"
        ],
        [
            "destruct res1; simpl in H8; try congruence.",
            "VernacExtend",
            "9cba53925c35063fcc084b3fada482af5286c549"
        ],
        [
            "destruct res2; simpl in H8; try congruence.",
            "VernacExtend",
            "3c5b40df729dee0b862ee7f392588ca13a6a7324"
        ],
        [
            "destruct H5.",
            "VernacExtend",
            "ed9c2c1b0fd20c14ad03acc37362cc2c315199ed"
        ],
        [
            "destruct k1; intuition congruence.",
            "VernacExtend",
            "46f813c71d67d3393543eaecf2cdbdb9eda895f9"
        ],
        [
            "destruct k2; intuition congruence.",
            "VernacExtend",
            "4d3b1aba57bf31197352991de4c3fb04114b9d3d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma incontext_list_ok: forall ef tyargs al ty m res, list_reducts_ok al m res -> is_val_list al = None -> reducts_ok RV (Ebuiltin ef tyargs al ty) m (incontext (fun x => Ebuiltin ef tyargs x ty) res).",
            "VernacStartTheoremProof",
            "61caf4169afc972f7fb9d11b960b497077a1e081"
        ],
        [
            "unfold reducts_ok, incontext; intros.",
            "VernacExtend",
            "49ea85aae67ad0b0ffa710a1dce113a764d27727"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "exploit list_in_map_inv; eauto.",
            "VernacExtend",
            "235c0bd1949d253ef4954ae1790ac9b7759ffe85"
        ],
        [
            "intros [[C1 rd1] [P Q]].",
            "VernacExtend",
            "a71e5cf10ebf5c3dc97cdde456a8831cdba4e470"
        ],
        [
            "inv P.",
            "VernacExtend",
            "9db9e551d407fb52f890fa8275c215698a67094e"
        ],
        [
            "exploit H; eauto.",
            "VernacExtend",
            "e4042976bceeb1e0a2b61f377ada9badc4c146f3"
        ],
        [
            "intros [a'' [k'' [U [V W]]]].",
            "VernacExtend",
            "7eaba5190470249f79afc05258970c4b702421de"
        ],
        [
            "exists a''; exists k''.",
            "VernacExtend",
            "3d7cb486152ffe4d28f724ec7879343059799c72"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "rewrite V; auto.",
            "VernacExtend",
            "cdbf39212179c2d69106e0d4ab294d0cc7e0e438"
        ],
        [
            "destruct res; simpl in H2.",
            "VernacExtend",
            "80835cb5f604f229f83dd4bcc802d5de3b1d3f2b"
        ],
        [
            "elim H1; auto.",
            "VernacExtend",
            "d50026b5dc31929f05ffbd310861b147378ba238"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma incontext2_list_ok: forall a1 a2 ty m res1 res2, reducts_ok RV a1 m res1 -> list_reducts_ok a2 m res2 -> is_val a1 = None \\/ is_val_list a2 = None -> reducts_ok RV (Ecall a1 a2 ty) m (incontext2 (fun x => Ecall x a2 ty) res1 (fun x => Ecall a1 x ty) res2).",
            "VernacStartTheoremProof",
            "b02c93aa9012983fb5d55b2d7c583f32f65c12f1"
        ],
        [
            "unfold reducts_ok, incontext2, incontext; intros.",
            "VernacExtend",
            "84ca2263b7e94f137d3fbd84d8cf7276e729acc8"
        ],
        [
            "destruct H; destruct H0; split; intros.",
            "VernacExtend",
            "7031a030bd7c22efdda2dd73c7483c9c022a7ca6"
        ],
        [
            "destruct (in_app_or _ _ _ H4).",
            "VernacExtend",
            "97bad3e88b13eb1b809fd09da67680824c0680fa"
        ],
        [
            "exploit list_in_map_inv; eauto.",
            "VernacExtend",
            "235c0bd1949d253ef4954ae1790ac9b7759ffe85"
        ],
        [
            "intros [[C' rd'] [P Q]].",
            "VernacExtend",
            "0acf54498b0c65786f81c02c2014d674296b64fe"
        ],
        [
            "inv P.",
            "VernacExtend",
            "9db9e551d407fb52f890fa8275c215698a67094e"
        ],
        [
            "exploit H; eauto.",
            "VernacExtend",
            "e4042976bceeb1e0a2b61f377ada9badc4c146f3"
        ],
        [
            "intros [a'' [k'' [U [V W]]]].",
            "VernacExtend",
            "7eaba5190470249f79afc05258970c4b702421de"
        ],
        [
            "exists a''; exists k''.",
            "VernacExtend",
            "3d7cb486152ffe4d28f724ec7879343059799c72"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "rewrite V; auto.",
            "VernacExtend",
            "cdbf39212179c2d69106e0d4ab294d0cc7e0e438"
        ],
        [
            "exploit list_in_map_inv; eauto.",
            "VernacExtend",
            "235c0bd1949d253ef4954ae1790ac9b7759ffe85"
        ],
        [
            "intros [[C' rd'] [P Q]].",
            "VernacExtend",
            "0acf54498b0c65786f81c02c2014d674296b64fe"
        ],
        [
            "inv P.",
            "VernacExtend",
            "9db9e551d407fb52f890fa8275c215698a67094e"
        ],
        [
            "exploit H0; eauto.",
            "VernacExtend",
            "e2bb62237be4af6f3df33a06be0bda055849b007"
        ],
        [
            "intros [a'' [k'' [U [V W]]]].",
            "VernacExtend",
            "7eaba5190470249f79afc05258970c4b702421de"
        ],
        [
            "exists a''; exists k''.",
            "VernacExtend",
            "3d7cb486152ffe4d28f724ec7879343059799c72"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "rewrite V; auto.",
            "VernacExtend",
            "cdbf39212179c2d69106e0d4ab294d0cc7e0e438"
        ],
        [
            "destruct res1; simpl in H4; try congruence.",
            "VernacExtend",
            "08d9e5ee3bb3da9c34b6731f2112741641fb446e"
        ],
        [
            "destruct res2; simpl in H4; try congruence.",
            "VernacExtend",
            "95023442ca88c9734b7190e0f31e6fa4e0602325"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma incontext2_list_ok': forall a1 a2 m res1 res2, reducts_ok RV a1 m res1 -> list_reducts_ok a2 m res2 -> list_reducts_ok (Econs a1 a2) m (incontext2 (fun x => Econs x a2) res1 (fun x => Econs a1 x) res2).",
            "VernacStartTheoremProof",
            "be80f8dd38195464e386c04a3177bb11529981ec"
        ],
        [
            "unfold reducts_ok, list_reducts_ok, incontext2, incontext; intros.",
            "VernacExtend",
            "bb3d4e8527116c7dfa08ad440d8925d443dcb49e"
        ],
        [
            "destruct H; destruct H0.",
            "VernacExtend",
            "38ce24e768d236828eb7ecf6275c249693553750"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "destruct (in_app_or _ _ _ H3).",
            "VernacExtend",
            "b345eac1736ac25cc077937b8398fb49ffa76196"
        ],
        [
            "exploit list_in_map_inv; eauto.",
            "VernacExtend",
            "235c0bd1949d253ef4954ae1790ac9b7759ffe85"
        ],
        [
            "intros [[C' rd'] [P Q]].",
            "VernacExtend",
            "0acf54498b0c65786f81c02c2014d674296b64fe"
        ],
        [
            "inv P.",
            "VernacExtend",
            "9db9e551d407fb52f890fa8275c215698a67094e"
        ],
        [
            "exploit H; eauto.",
            "VernacExtend",
            "e4042976bceeb1e0a2b61f377ada9badc4c146f3"
        ],
        [
            "intros [a'' [k'' [U [V W]]]].",
            "VernacExtend",
            "7eaba5190470249f79afc05258970c4b702421de"
        ],
        [
            "exists a''; exists k''.",
            "VernacExtend",
            "3d7cb486152ffe4d28f724ec7879343059799c72"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "rewrite V; auto.",
            "VernacExtend",
            "cdbf39212179c2d69106e0d4ab294d0cc7e0e438"
        ],
        [
            "exploit list_in_map_inv; eauto.",
            "VernacExtend",
            "235c0bd1949d253ef4954ae1790ac9b7759ffe85"
        ],
        [
            "intros [[C' rd'] [P Q]].",
            "VernacExtend",
            "0acf54498b0c65786f81c02c2014d674296b64fe"
        ],
        [
            "inv P.",
            "VernacExtend",
            "9db9e551d407fb52f890fa8275c215698a67094e"
        ],
        [
            "exploit H0; eauto.",
            "VernacExtend",
            "e2bb62237be4af6f3df33a06be0bda055849b007"
        ],
        [
            "intros [a'' [k'' [U [V W]]]].",
            "VernacExtend",
            "7eaba5190470249f79afc05258970c4b702421de"
        ],
        [
            "exists a''; exists k''.",
            "VernacExtend",
            "3d7cb486152ffe4d28f724ec7879343059799c72"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "rewrite V; auto.",
            "VernacExtend",
            "cdbf39212179c2d69106e0d4ab294d0cc7e0e438"
        ],
        [
            "destruct res1; simpl in H3; try congruence.",
            "VernacExtend",
            "e27541ad790809ae06ae1b92976a96a538f01683"
        ],
        [
            "destruct res2; simpl in H3; try congruence.",
            "VernacExtend",
            "3b9e2cf3349604b8d2d45e4b92b084dbca719cd3"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (is_val a1).",
            "VernacExtend",
            "2fb4729660aae6a33309e538bc139670b06f099b"
        ],
        [
            "destruct (is_val_list a2).",
            "VernacExtend",
            "4c25d1782509596608d4d5d0ca1f23d204327ccf"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "intuition congruence.",
            "VernacExtend",
            "2cba3542847e3f4ea52f3f62375adc6e8f8f04bc"
        ],
        [
            "intuition congruence.",
            "VernacExtend",
            "2cba3542847e3f4ea52f3f62375adc6e8f8f04bc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_val_list_all_values: forall al vtl, is_val_list al = Some vtl -> exprlist_all_values al.",
            "VernacStartTheoremProof",
            "1f3edabc75d619be810940a5e861adce7d720532"
        ],
        [
            "induction al; simpl; intros.",
            "VernacExtend",
            "2458ad1ef33fcb3c375c382d6021431a548022f5"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct (is_val r1) as [[v ty]|] eqn:?; try discriminate.",
            "VernacExtend",
            "8091c89096bc8334f5ef75c7ed3d3272d56db757"
        ],
        [
            "destruct (is_val_list al) as [vtl'|] eqn:?; try discriminate.",
            "VernacExtend",
            "1f9dbc6162476d4becbd3a1b3a308e23fd37d36a"
        ],
        [
            "rewrite (is_val_inv _ _ _ Heqo).",
            "VernacExtend",
            "83a2d61bfd14d8c9cdb98893a35d2e262f0c1491"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac myinv := match goal with | [ H: False |- _ ] => destruct H | [ H: _ /\\ _ |- _ ] => destruct H; myinv | [ H: exists _, _ |- _ ] => destruct H; myinv | _ => idtac end.",
            "VernacExtend",
            "fded607cf6456b538efeb5d395d3c52d6ba4cb5d"
        ],
        [
            "Theorem step_expr_sound: forall a k m, reducts_ok k a m (step_expr k a m) with step_exprlist_sound: forall al m, list_reducts_ok al m (step_exprlist al m).",
            "VernacStartTheoremProof",
            "5a8519b9de7c79b92d29ecfa001788204a99b435"
        ],
        [
            "Proof with (try (apply not_invert_ok; simpl; intro; myinv; intuition congruence; fail)).",
            "VernacProof",
            "3df4f6acf4ccbf1af4fa3d706deec1e2603be5d0"
        ],
        [
            "induction a; intros; simpl; destruct k; try (apply wrong_kind_ok; simpl; congruence).",
            "VernacExtend",
            "2289fa4a2f6bc7302f4572bb2142406a78778d85"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "simpl; congruence.",
            "VernacExtend",
            "9dc8adbf60f5d5d5eff96b8af6106e0c466f306f"
        ],
        [
            "destruct (e!x) as [[b ty']|] eqn:?.",
            "VernacExtend",
            "1edce9512623903c9f5b14cdb6861232b2e2cd18"
        ],
        [
            "destruct (type_eq ty ty')...",
            "VernacExtend",
            "15735a3f2107956a6412a0cd22e0ff6931600bc2"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "apply topred_ok; auto.",
            "VernacExtend",
            "a701f2baf1ce0d33dc85b6d9011bec102c823b9d"
        ],
        [
            "apply red_var_local; auto.",
            "VernacExtend",
            "0c8ec9ac67d7a39d9ea0fefa8b3d526e363ed1ce"
        ],
        [
            "destruct (Genv.find_symbol ge x) as [b|] eqn:?...",
            "VernacExtend",
            "a03df731cd8360ab3e763345ef485820b6057cfa"
        ],
        [
            "apply topred_ok; auto.",
            "VernacExtend",
            "a701f2baf1ce0d33dc85b6d9011bec102c823b9d"
        ],
        [
            "apply red_var_global; auto.",
            "VernacExtend",
            "dac477c3c3bab954928f7c30552c5af9360226e3"
        ],
        [
            "destruct (is_val a) as [[v ty'] | ] eqn:?.",
            "VernacExtend",
            "4b21547482fc47f7237ccbf1fe852efb26494db1"
        ],
        [
            "rewrite (is_val_inv _ _ _ Heqo).",
            "VernacExtend",
            "83a2d61bfd14d8c9cdb98893a35d2e262f0c1491"
        ],
        [
            "destruct v...",
            "VernacExtend",
            "b5e9c83f74029ebcc08113bdd184567b4efb7d22"
        ],
        [
            "destruct ty'...",
            "VernacExtend",
            "6036796ec39860c310549383e086e01cd821a44f"
        ],
        [
            "destruct (ge.(genv_cenv)!i0) as [co|] eqn:?...",
            "VernacExtend",
            "ca3f22c4da7859dbdefac1e082a4d6cc2fcb4aec"
        ],
        [
            "destruct (field_offset ge f (co_members co)) as [delta|] eqn:?...",
            "VernacExtend",
            "2c222221802e1da368e88a36886e789189048274"
        ],
        [
            "apply topred_ok; auto.",
            "VernacExtend",
            "a701f2baf1ce0d33dc85b6d9011bec102c823b9d"
        ],
        [
            "eapply red_field_struct; eauto.",
            "VernacExtend",
            "87385e5da53dbbfdcd055419fa077835266a84be"
        ],
        [
            "destruct (ge.(genv_cenv)!i0) as [co|] eqn:?...",
            "VernacExtend",
            "ca3f22c4da7859dbdefac1e082a4d6cc2fcb4aec"
        ],
        [
            "apply topred_ok; auto.",
            "VernacExtend",
            "a701f2baf1ce0d33dc85b6d9011bec102c823b9d"
        ],
        [
            "eapply red_field_union; eauto.",
            "VernacExtend",
            "21a1dbc2e5a4d262598bc1c5ff4fac041748fb18"
        ],
        [
            "eapply incontext_ok; eauto.",
            "VernacExtend",
            "814f92fab0d92ecb9306e26c886963f1ffe20356"
        ],
        [
            "destruct (is_loc a) as [[[b ofs] ty'] | ] eqn:?.",
            "VernacExtend",
            "0b6b942bfa00d44e57928de5a15f2c3784e04da7"
        ],
        [
            "rewrite (is_loc_inv _ _ _ _ Heqo).",
            "VernacExtend",
            "aa1c3990e2415aabf323e7f3103b0d4a90feea1a"
        ],
        [
            "destruct (type_eq ty ty')...",
            "VernacExtend",
            "15735a3f2107956a6412a0cd22e0ff6931600bc2"
        ],
        [
            "subst ty'.",
            "VernacExtend",
            "538e2ebf4b09b883f6ed1fb4505bc00d36fa490a"
        ],
        [
            "destruct (do_deref_loc w ty m b ofs) as [[[w' t] v] | ] eqn:?.",
            "VernacExtend",
            "afb64e54b5f919362364520df4193b2c29fee19f"
        ],
        [
            "exploit do_deref_loc_sound; eauto.",
            "VernacExtend",
            "ea361fbf5c346d1c022c4201946e2f231632f99d"
        ],
        [
            "intros [A B].",
            "VernacExtend",
            "269ecc1b12a78cad85161d58003fb0ebdea8ebc3"
        ],
        [
            "apply topred_ok; auto.",
            "VernacExtend",
            "a701f2baf1ce0d33dc85b6d9011bec102c823b9d"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply red_rvalof; auto.",
            "VernacExtend",
            "8d624c0f4abeb3abf53614d078ed73ab0b9bc91d"
        ],
        [
            "exists w'; auto.",
            "VernacExtend",
            "6443859f1e3d2782a780d0c6da8b42b1fe7d7c3a"
        ],
        [
            "apply not_invert_ok; simpl; intros; myinv.",
            "VernacExtend",
            "149b20d74ec5150d0b075405e8385fcfd9bd9bf9"
        ],
        [
            "exploit do_deref_loc_complete; eauto.",
            "VernacExtend",
            "861c7c568e84189a7a4ca6e634d8bcf146c192fe"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "eapply incontext_ok; eauto.",
            "VernacExtend",
            "814f92fab0d92ecb9306e26c886963f1ffe20356"
        ],
        [
            "destruct (is_val a) as [[v ty'] | ] eqn:?.",
            "VernacExtend",
            "4b21547482fc47f7237ccbf1fe852efb26494db1"
        ],
        [
            "rewrite (is_val_inv _ _ _ Heqo).",
            "VernacExtend",
            "83a2d61bfd14d8c9cdb98893a35d2e262f0c1491"
        ],
        [
            "destruct v...",
            "VernacExtend",
            "b5e9c83f74029ebcc08113bdd184567b4efb7d22"
        ],
        [
            "apply topred_ok; auto.",
            "VernacExtend",
            "a701f2baf1ce0d33dc85b6d9011bec102c823b9d"
        ],
        [
            "apply red_deref; auto.",
            "VernacExtend",
            "a91163b4276567b99b39986e830894525bc57d58"
        ],
        [
            "eapply incontext_ok; eauto.",
            "VernacExtend",
            "814f92fab0d92ecb9306e26c886963f1ffe20356"
        ],
        [
            "destruct (is_loc a) as [[[b ofs] ty'] | ] eqn:?.",
            "VernacExtend",
            "0b6b942bfa00d44e57928de5a15f2c3784e04da7"
        ],
        [
            "rewrite (is_loc_inv _ _ _ _ Heqo).",
            "VernacExtend",
            "aa1c3990e2415aabf323e7f3103b0d4a90feea1a"
        ],
        [
            "apply topred_ok; auto.",
            "VernacExtend",
            "a701f2baf1ce0d33dc85b6d9011bec102c823b9d"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply red_addrof; auto.",
            "VernacExtend",
            "ecbba2e4b91d43fe18cfd657a3a38417ff001e14"
        ],
        [
            "exists w; constructor.",
            "VernacExtend",
            "3e8a6ccd47fef87b179dcfb38b927d3cefa731da"
        ],
        [
            "eapply incontext_ok; eauto.",
            "VernacExtend",
            "814f92fab0d92ecb9306e26c886963f1ffe20356"
        ],
        [
            "destruct (is_val a) as [[v ty'] | ] eqn:?.",
            "VernacExtend",
            "4b21547482fc47f7237ccbf1fe852efb26494db1"
        ],
        [
            "rewrite (is_val_inv _ _ _ Heqo).",
            "VernacExtend",
            "83a2d61bfd14d8c9cdb98893a35d2e262f0c1491"
        ],
        [
            "destruct (sem_unary_operation op v ty' m) as [v'|] eqn:?...",
            "VernacExtend",
            "ba63d06bac80aa70677f9217197b3f8b43cdea07"
        ],
        [
            "apply topred_ok; auto.",
            "VernacExtend",
            "a701f2baf1ce0d33dc85b6d9011bec102c823b9d"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply red_unop; auto.",
            "VernacExtend",
            "0f336077eccbfcba3c69cf5ba457b7f6702684b5"
        ],
        [
            "exists w; constructor.",
            "VernacExtend",
            "3e8a6ccd47fef87b179dcfb38b927d3cefa731da"
        ],
        [
            "eapply incontext_ok; eauto.",
            "VernacExtend",
            "814f92fab0d92ecb9306e26c886963f1ffe20356"
        ],
        [
            "destruct (is_val a1) as [[v1 ty1] | ] eqn:?.",
            "VernacExtend",
            "5749f0de077b0e612bc82c163e1c49f2f5115a2c"
        ],
        [
            "destruct (is_val a2) as [[v2 ty2] | ] eqn:?.",
            "VernacExtend",
            "65d3a5368f79e9fbf08a943e0b79d5311970c586"
        ],
        [
            "rewrite (is_val_inv _ _ _ Heqo).",
            "VernacExtend",
            "83a2d61bfd14d8c9cdb98893a35d2e262f0c1491"
        ],
        [
            "rewrite (is_val_inv _ _ _ Heqo0).",
            "VernacExtend",
            "133ed66f419f59201bd25fa2cee3b719c85c47be"
        ],
        [
            "destruct (sem_binary_operation ge op v1 ty1 v2 ty2 m) as [v|] eqn:?...",
            "VernacExtend",
            "7a4b90ea61cb739ede5b4fdc15a21c61854b5095"
        ],
        [
            "apply topred_ok; auto.",
            "VernacExtend",
            "a701f2baf1ce0d33dc85b6d9011bec102c823b9d"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply red_binop; auto.",
            "VernacExtend",
            "cb50a0214cc86ca06c50430ea576a233a78e9e5e"
        ],
        [
            "exists w; constructor.",
            "VernacExtend",
            "3e8a6ccd47fef87b179dcfb38b927d3cefa731da"
        ],
        [
            "eapply incontext2_ok; eauto.",
            "VernacExtend",
            "b76c4d94da57b214494b3817d454d5d967a97fb8"
        ],
        [
            "eapply incontext2_ok; eauto.",
            "VernacExtend",
            "b76c4d94da57b214494b3817d454d5d967a97fb8"
        ],
        [
            "destruct (is_val a) as [[v ty'] | ] eqn:?.",
            "VernacExtend",
            "4b21547482fc47f7237ccbf1fe852efb26494db1"
        ],
        [
            "rewrite (is_val_inv _ _ _ Heqo).",
            "VernacExtend",
            "83a2d61bfd14d8c9cdb98893a35d2e262f0c1491"
        ],
        [
            "destruct (sem_cast v ty' ty m) as [v'|] eqn:?...",
            "VernacExtend",
            "dd6d31e61b7c26b0e4ddfb2d34dc0b343b276919"
        ],
        [
            "apply topred_ok; auto.",
            "VernacExtend",
            "a701f2baf1ce0d33dc85b6d9011bec102c823b9d"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply red_cast; auto.",
            "VernacExtend",
            "44c4b73721673e7402a308d703f86d82aa216d0a"
        ],
        [
            "exists w; constructor.",
            "VernacExtend",
            "3e8a6ccd47fef87b179dcfb38b927d3cefa731da"
        ],
        [
            "eapply incontext_ok; eauto.",
            "VernacExtend",
            "814f92fab0d92ecb9306e26c886963f1ffe20356"
        ],
        [
            "destruct (is_val a1) as [[v ty'] | ] eqn:?.",
            "VernacExtend",
            "d244781286b51758702f29daab1e9b3d53490fc0"
        ],
        [
            "rewrite (is_val_inv _ _ _ Heqo).",
            "VernacExtend",
            "83a2d61bfd14d8c9cdb98893a35d2e262f0c1491"
        ],
        [
            "destruct (bool_val v ty' m) as [v'|] eqn:?...",
            "VernacExtend",
            "e17b2b12901fe56b130e89c6c1930749a7421a1b"
        ],
        [
            "destruct v'.",
            "VernacExtend",
            "535800575ab398db3c778b4fa3b4140c176c3cd5"
        ],
        [
            "apply topred_ok; auto.",
            "VernacExtend",
            "a701f2baf1ce0d33dc85b6d9011bec102c823b9d"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply red_seqand_true; eauto.",
            "VernacExtend",
            "e9023ced0c3bfec13e8260f05b1bc5f37c5add5a"
        ],
        [
            "exists w; constructor.",
            "VernacExtend",
            "3e8a6ccd47fef87b179dcfb38b927d3cefa731da"
        ],
        [
            "apply topred_ok; auto.",
            "VernacExtend",
            "a701f2baf1ce0d33dc85b6d9011bec102c823b9d"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply red_seqand_false; eauto.",
            "VernacExtend",
            "3d7235b89ef41884018285b04deca424a02bc397"
        ],
        [
            "exists w; constructor.",
            "VernacExtend",
            "3e8a6ccd47fef87b179dcfb38b927d3cefa731da"
        ],
        [
            "eapply incontext_ok; eauto.",
            "VernacExtend",
            "814f92fab0d92ecb9306e26c886963f1ffe20356"
        ],
        [
            "destruct (is_val a1) as [[v ty'] | ] eqn:?.",
            "VernacExtend",
            "d244781286b51758702f29daab1e9b3d53490fc0"
        ],
        [
            "rewrite (is_val_inv _ _ _ Heqo).",
            "VernacExtend",
            "83a2d61bfd14d8c9cdb98893a35d2e262f0c1491"
        ],
        [
            "destruct (bool_val v ty' m) as [v'|] eqn:?...",
            "VernacExtend",
            "e17b2b12901fe56b130e89c6c1930749a7421a1b"
        ],
        [
            "destruct v'.",
            "VernacExtend",
            "535800575ab398db3c778b4fa3b4140c176c3cd5"
        ],
        [
            "apply topred_ok; auto.",
            "VernacExtend",
            "a701f2baf1ce0d33dc85b6d9011bec102c823b9d"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply red_seqor_true; eauto.",
            "VernacExtend",
            "a40feb1da2a0d307d9434a5adad0bd0b9af22b2f"
        ],
        [
            "exists w; constructor.",
            "VernacExtend",
            "3e8a6ccd47fef87b179dcfb38b927d3cefa731da"
        ],
        [
            "apply topred_ok; auto.",
            "VernacExtend",
            "a701f2baf1ce0d33dc85b6d9011bec102c823b9d"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply red_seqor_false; eauto.",
            "VernacExtend",
            "d49792c639104c9d12c155dfc18092e006307731"
        ],
        [
            "exists w; constructor.",
            "VernacExtend",
            "3e8a6ccd47fef87b179dcfb38b927d3cefa731da"
        ],
        [
            "eapply incontext_ok; eauto.",
            "VernacExtend",
            "814f92fab0d92ecb9306e26c886963f1ffe20356"
        ],
        [
            "destruct (is_val a1) as [[v ty'] | ] eqn:?.",
            "VernacExtend",
            "d244781286b51758702f29daab1e9b3d53490fc0"
        ],
        [
            "rewrite (is_val_inv _ _ _ Heqo).",
            "VernacExtend",
            "83a2d61bfd14d8c9cdb98893a35d2e262f0c1491"
        ],
        [
            "destruct (bool_val v ty' m) as [v'|] eqn:?...",
            "VernacExtend",
            "e17b2b12901fe56b130e89c6c1930749a7421a1b"
        ],
        [
            "apply topred_ok; auto.",
            "VernacExtend",
            "a701f2baf1ce0d33dc85b6d9011bec102c823b9d"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply red_condition; eauto.",
            "VernacExtend",
            "4bdbd8ba3b0f3f2bbbdedb6c458a9fbb90ddca91"
        ],
        [
            "exists w; constructor.",
            "VernacExtend",
            "3e8a6ccd47fef87b179dcfb38b927d3cefa731da"
        ],
        [
            "eapply incontext_ok; eauto.",
            "VernacExtend",
            "814f92fab0d92ecb9306e26c886963f1ffe20356"
        ],
        [
            "apply topred_ok; auto.",
            "VernacExtend",
            "a701f2baf1ce0d33dc85b6d9011bec102c823b9d"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply red_sizeof.",
            "VernacExtend",
            "5a91d0f0a10a08e25cb1d5b385f6c69e0e14cc52"
        ],
        [
            "exists w; constructor.",
            "VernacExtend",
            "3e8a6ccd47fef87b179dcfb38b927d3cefa731da"
        ],
        [
            "apply topred_ok; auto.",
            "VernacExtend",
            "a701f2baf1ce0d33dc85b6d9011bec102c823b9d"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply red_alignof.",
            "VernacExtend",
            "c9816dc7d960f3ba69030fa63df46b69188af592"
        ],
        [
            "exists w; constructor.",
            "VernacExtend",
            "3e8a6ccd47fef87b179dcfb38b927d3cefa731da"
        ],
        [
            "destruct (is_loc a1) as [[[b ofs] ty1] | ] eqn:?.",
            "VernacExtend",
            "2051f4a52f6ee3440bddcdbacd2bdb9bc422c459"
        ],
        [
            "destruct (is_val a2) as [[v2 ty2] | ] eqn:?.",
            "VernacExtend",
            "65d3a5368f79e9fbf08a943e0b79d5311970c586"
        ],
        [
            "rewrite (is_loc_inv _ _ _ _ Heqo).",
            "VernacExtend",
            "aa1c3990e2415aabf323e7f3103b0d4a90feea1a"
        ],
        [
            "rewrite (is_val_inv _ _ _ Heqo0).",
            "VernacExtend",
            "133ed66f419f59201bd25fa2cee3b719c85c47be"
        ],
        [
            "destruct (type_eq ty1 ty)...",
            "VernacExtend",
            "ca55f0762f9801dd26cf0074ae670d66e89ba3e5"
        ],
        [
            "subst ty1.",
            "VernacExtend",
            "88f6bba1a4a022ec8bb221e0543d9d02c3d01543"
        ],
        [
            "destruct (sem_cast v2 ty2 ty m) as [v|] eqn:?...",
            "VernacExtend",
            "853574d19c4b482d18c99b8c2f11fea74543b1d5"
        ],
        [
            "destruct (do_assign_loc w ty m b ofs v) as [[[w' t] m']|] eqn:?.",
            "VernacExtend",
            "589c9446b3147331e87bc9d247944d1a10b3614e"
        ],
        [
            "exploit do_assign_loc_sound; eauto.",
            "VernacExtend",
            "46ddd2cd900528bdebc9ba5f97853deab9f98186"
        ],
        [
            "intros [P Q].",
            "VernacExtend",
            "663dc907ccc489647d55e233d550455f27ce8429"
        ],
        [
            "apply topred_ok; auto.",
            "VernacExtend",
            "a701f2baf1ce0d33dc85b6d9011bec102c823b9d"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply red_assign; auto.",
            "VernacExtend",
            "c65bf3a797c9448948e4ed506647bceb06ed87f6"
        ],
        [
            "exists w'; auto.",
            "VernacExtend",
            "6443859f1e3d2782a780d0c6da8b42b1fe7d7c3a"
        ],
        [
            "apply not_invert_ok; simpl; intros; myinv.",
            "VernacExtend",
            "149b20d74ec5150d0b075405e8385fcfd9bd9bf9"
        ],
        [
            "exploit do_assign_loc_complete; eauto.",
            "VernacExtend",
            "9e68719420b56c0f961c4b51ba2254e6f610b191"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "eapply incontext2_ok; eauto.",
            "VernacExtend",
            "b76c4d94da57b214494b3817d454d5d967a97fb8"
        ],
        [
            "eapply incontext2_ok; eauto.",
            "VernacExtend",
            "b76c4d94da57b214494b3817d454d5d967a97fb8"
        ],
        [
            "destruct (is_loc a1) as [[[b ofs] ty1] | ] eqn:?.",
            "VernacExtend",
            "2051f4a52f6ee3440bddcdbacd2bdb9bc422c459"
        ],
        [
            "destruct (is_val a2) as [[v2 ty2] | ] eqn:?.",
            "VernacExtend",
            "65d3a5368f79e9fbf08a943e0b79d5311970c586"
        ],
        [
            "rewrite (is_loc_inv _ _ _ _ Heqo).",
            "VernacExtend",
            "aa1c3990e2415aabf323e7f3103b0d4a90feea1a"
        ],
        [
            "rewrite (is_val_inv _ _ _ Heqo0).",
            "VernacExtend",
            "133ed66f419f59201bd25fa2cee3b719c85c47be"
        ],
        [
            "destruct (type_eq ty1 ty)...",
            "VernacExtend",
            "ca55f0762f9801dd26cf0074ae670d66e89ba3e5"
        ],
        [
            "subst ty1.",
            "VernacExtend",
            "88f6bba1a4a022ec8bb221e0543d9d02c3d01543"
        ],
        [
            "destruct (do_deref_loc w ty m b ofs) as [[[w' t] v] | ] eqn:?.",
            "VernacExtend",
            "afb64e54b5f919362364520df4193b2c29fee19f"
        ],
        [
            "exploit do_deref_loc_sound; eauto.",
            "VernacExtend",
            "ea361fbf5c346d1c022c4201946e2f231632f99d"
        ],
        [
            "intros [A B].",
            "VernacExtend",
            "269ecc1b12a78cad85161d58003fb0ebdea8ebc3"
        ],
        [
            "apply topred_ok; auto.",
            "VernacExtend",
            "a701f2baf1ce0d33dc85b6d9011bec102c823b9d"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply red_assignop; auto.",
            "VernacExtend",
            "9c6eaccde00abcbf019756d6ad3ae06e762482ab"
        ],
        [
            "exists w'; auto.",
            "VernacExtend",
            "6443859f1e3d2782a780d0c6da8b42b1fe7d7c3a"
        ],
        [
            "apply not_invert_ok; simpl; intros; myinv.",
            "VernacExtend",
            "149b20d74ec5150d0b075405e8385fcfd9bd9bf9"
        ],
        [
            "exploit do_deref_loc_complete; eauto.",
            "VernacExtend",
            "861c7c568e84189a7a4ca6e634d8bcf146c192fe"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "eapply incontext2_ok; eauto.",
            "VernacExtend",
            "b76c4d94da57b214494b3817d454d5d967a97fb8"
        ],
        [
            "eapply incontext2_ok; eauto.",
            "VernacExtend",
            "b76c4d94da57b214494b3817d454d5d967a97fb8"
        ],
        [
            "destruct (is_loc a) as [[[b ofs] ty'] | ] eqn:?.",
            "VernacExtend",
            "0b6b942bfa00d44e57928de5a15f2c3784e04da7"
        ],
        [
            "rewrite (is_loc_inv _ _ _ _ Heqo).",
            "VernacExtend",
            "aa1c3990e2415aabf323e7f3103b0d4a90feea1a"
        ],
        [
            "destruct (type_eq ty' ty)...",
            "VernacExtend",
            "8e7c0caa22e9555951dc2eaf24d64c4e08021ca0"
        ],
        [
            "subst ty'.",
            "VernacExtend",
            "538e2ebf4b09b883f6ed1fb4505bc00d36fa490a"
        ],
        [
            "destruct (do_deref_loc w ty m b ofs) as [[[w' t] v] | ] eqn:?.",
            "VernacExtend",
            "afb64e54b5f919362364520df4193b2c29fee19f"
        ],
        [
            "exploit do_deref_loc_sound; eauto.",
            "VernacExtend",
            "ea361fbf5c346d1c022c4201946e2f231632f99d"
        ],
        [
            "intros [A B].",
            "VernacExtend",
            "269ecc1b12a78cad85161d58003fb0ebdea8ebc3"
        ],
        [
            "apply topred_ok; auto.",
            "VernacExtend",
            "a701f2baf1ce0d33dc85b6d9011bec102c823b9d"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply red_postincr; auto.",
            "VernacExtend",
            "33189119de1bdf0554b8706da82b44d8523b99f5"
        ],
        [
            "exists w'; auto.",
            "VernacExtend",
            "6443859f1e3d2782a780d0c6da8b42b1fe7d7c3a"
        ],
        [
            "apply not_invert_ok; simpl; intros; myinv.",
            "VernacExtend",
            "149b20d74ec5150d0b075405e8385fcfd9bd9bf9"
        ],
        [
            "exploit do_deref_loc_complete; eauto.",
            "VernacExtend",
            "861c7c568e84189a7a4ca6e634d8bcf146c192fe"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "eapply incontext_ok; eauto.",
            "VernacExtend",
            "814f92fab0d92ecb9306e26c886963f1ffe20356"
        ],
        [
            "destruct (is_val a1) as [[v ty'] | ] eqn:?.",
            "VernacExtend",
            "d244781286b51758702f29daab1e9b3d53490fc0"
        ],
        [
            "rewrite (is_val_inv _ _ _ Heqo).",
            "VernacExtend",
            "83a2d61bfd14d8c9cdb98893a35d2e262f0c1491"
        ],
        [
            "destruct (type_eq (typeof a2) ty)...",
            "VernacExtend",
            "56c779055f3f5c55ff6cda11c9be35ba8d500eb4"
        ],
        [
            "subst ty.",
            "VernacExtend",
            "e208fabe5f185c48b1af2afc361f1ceb3a2eba51"
        ],
        [
            "apply topred_ok; auto.",
            "VernacExtend",
            "a701f2baf1ce0d33dc85b6d9011bec102c823b9d"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply red_comma; auto.",
            "VernacExtend",
            "e7d4ff12b2f5223762327649749379f2aa618b56"
        ],
        [
            "exists w; constructor.",
            "VernacExtend",
            "3e8a6ccd47fef87b179dcfb38b927d3cefa731da"
        ],
        [
            "eapply incontext_ok; eauto.",
            "VernacExtend",
            "814f92fab0d92ecb9306e26c886963f1ffe20356"
        ],
        [
            "destruct (is_val a) as [[vf tyf] | ] eqn:?.",
            "VernacExtend",
            "0f126fade3d8c9c7cbc15659a3591e12bbb8da15"
        ],
        [
            "destruct (is_val_list rargs) as [vtl | ] eqn:?.",
            "VernacExtend",
            "a761ad4ea972697c2038b9c6d39c0a37316d7e3e"
        ],
        [
            "rewrite (is_val_inv _ _ _ Heqo).",
            "VernacExtend",
            "83a2d61bfd14d8c9cdb98893a35d2e262f0c1491"
        ],
        [
            "exploit is_val_list_all_values; eauto.",
            "VernacExtend",
            "272de964d1dfa6034c24a4d7ea1100c88b3f5edd"
        ],
        [
            "intros ALLVAL.",
            "VernacExtend",
            "c97b1b7279682e4ff3b7e23b66c10ceda46ca826"
        ],
        [
            "destruct (classify_fun tyf) as [tyargs tyres cconv|] eqn:?...",
            "VernacExtend",
            "4e18bde0c4789e0ca6e3c8512cb5b5567b868507"
        ],
        [
            "destruct (Genv.find_funct ge vf) as [fd|] eqn:?...",
            "VernacExtend",
            "1ade253f466dfb3119a0ee9d38dbbd3533d4e84d"
        ],
        [
            "destruct (sem_cast_arguments vtl tyargs m) as [vargs|] eqn:?...",
            "VernacExtend",
            "6dcb767c1df18ca851eb9618e43b5d97803f9db5"
        ],
        [
            "destruct (type_eq (type_of_fundef fd) (Tfunction tyargs tyres cconv))...",
            "VernacExtend",
            "6bdeeb3560121be506ae4d7bedbf6c340d11e337"
        ],
        [
            "apply topred_ok; auto.",
            "VernacExtend",
            "a701f2baf1ce0d33dc85b6d9011bec102c823b9d"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "eapply red_call; eauto.",
            "VernacExtend",
            "f2a7a2e7aab3cff3bb50831abd8c730c08740afb"
        ],
        [
            "eapply sem_cast_arguments_sound; eauto.",
            "VernacExtend",
            "519d7bf9b6202055405913a39be4aff66bb0d88b"
        ],
        [
            "apply not_invert_ok; simpl; intros; myinv.",
            "VernacExtend",
            "149b20d74ec5150d0b075405e8385fcfd9bd9bf9"
        ],
        [
            "specialize (H ALLVAL).",
            "VernacExtend",
            "f078a36def9a17f07ff82edd79fae6a42014386b"
        ],
        [
            "myinv.",
            "VernacExtend",
            "7fcc5048e0a952ce400e407a071bffac059de1c3"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "apply not_invert_ok; simpl; intros; myinv.",
            "VernacExtend",
            "149b20d74ec5150d0b075405e8385fcfd9bd9bf9"
        ],
        [
            "specialize (H ALLVAL).",
            "VernacExtend",
            "f078a36def9a17f07ff82edd79fae6a42014386b"
        ],
        [
            "myinv.",
            "VernacExtend",
            "7fcc5048e0a952ce400e407a071bffac059de1c3"
        ],
        [
            "exploit sem_cast_arguments_complete; eauto.",
            "VernacExtend",
            "d506b7f4872be292e88d6efa2c2ea21df22a9cf5"
        ],
        [
            "intros [vtl' [P Q]].",
            "VernacExtend",
            "4f8578720f5acb474a14a7671a9c7a63e3d5b79e"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "apply not_invert_ok; simpl; intros; myinv.",
            "VernacExtend",
            "149b20d74ec5150d0b075405e8385fcfd9bd9bf9"
        ],
        [
            "specialize (H ALLVAL).",
            "VernacExtend",
            "f078a36def9a17f07ff82edd79fae6a42014386b"
        ],
        [
            "myinv.",
            "VernacExtend",
            "7fcc5048e0a952ce400e407a071bffac059de1c3"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "apply not_invert_ok; simpl; intros; myinv.",
            "VernacExtend",
            "149b20d74ec5150d0b075405e8385fcfd9bd9bf9"
        ],
        [
            "specialize (H ALLVAL).",
            "VernacExtend",
            "f078a36def9a17f07ff82edd79fae6a42014386b"
        ],
        [
            "myinv.",
            "VernacExtend",
            "7fcc5048e0a952ce400e407a071bffac059de1c3"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "eapply incontext2_list_ok; eauto.",
            "VernacExtend",
            "28eb9694995f9ff5d9c22f2cf839abda6eb87306"
        ],
        [
            "eapply incontext2_list_ok; eauto.",
            "VernacExtend",
            "28eb9694995f9ff5d9c22f2cf839abda6eb87306"
        ],
        [
            "destruct (is_val_list rargs) as [vtl | ] eqn:?.",
            "VernacExtend",
            "a761ad4ea972697c2038b9c6d39c0a37316d7e3e"
        ],
        [
            "exploit is_val_list_all_values; eauto.",
            "VernacExtend",
            "272de964d1dfa6034c24a4d7ea1100c88b3f5edd"
        ],
        [
            "intros ALLVAL.",
            "VernacExtend",
            "c97b1b7279682e4ff3b7e23b66c10ceda46ca826"
        ],
        [
            "destruct (sem_cast_arguments vtl tyargs m) as [vargs|] eqn:?...",
            "VernacExtend",
            "6dcb767c1df18ca851eb9618e43b5d97803f9db5"
        ],
        [
            "destruct (do_external ef w vargs m) as [[[[? ?] v] m'] | ] eqn:?...",
            "VernacExtend",
            "61da72fbfac85f1201e352bc8cf89c10f540b8aa"
        ],
        [
            "exploit do_ef_external_sound; eauto.",
            "VernacExtend",
            "9fb6229d2938d8b3af43b754403944d3240524c6"
        ],
        [
            "intros [EC PT].",
            "VernacExtend",
            "61169264f0daaa2808c5a0ed1a8abe7b8a0d5b4e"
        ],
        [
            "apply topred_ok; auto.",
            "VernacExtend",
            "a701f2baf1ce0d33dc85b6d9011bec102c823b9d"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "eapply red_builtin; eauto.",
            "VernacExtend",
            "ba2d1db6c318f2e5fd620f7b94d777e591e853d5"
        ],
        [
            "eapply sem_cast_arguments_sound; eauto.",
            "VernacExtend",
            "519d7bf9b6202055405913a39be4aff66bb0d88b"
        ],
        [
            "exists w0; auto.",
            "VernacExtend",
            "88ff0260bbf2a3c715fd02659b12379ca41645c5"
        ],
        [
            "apply not_invert_ok; simpl; intros; myinv.",
            "VernacExtend",
            "149b20d74ec5150d0b075405e8385fcfd9bd9bf9"
        ],
        [
            "specialize (H ALLVAL).",
            "VernacExtend",
            "f078a36def9a17f07ff82edd79fae6a42014386b"
        ],
        [
            "myinv.",
            "VernacExtend",
            "7fcc5048e0a952ce400e407a071bffac059de1c3"
        ],
        [
            "assert (x = vargs).",
            "VernacExtend",
            "ee9ab391545a765151edd050a966778ecada62a8"
        ],
        [
            "exploit sem_cast_arguments_complete; eauto.",
            "VernacExtend",
            "d506b7f4872be292e88d6efa2c2ea21df22a9cf5"
        ],
        [
            "intros [vtl' [A B]].",
            "VernacExtend",
            "f9699331098325877c55f2347b6124f2673f17a5"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "subst x.",
            "VernacExtend",
            "76c28b0a6a4a7c1568fa30e26ee411c5e5d54968"
        ],
        [
            "exploit do_ef_external_complete; eauto.",
            "VernacExtend",
            "f0fd8b88c6068571bc6c9d2d488c520d398619c9"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "apply not_invert_ok; simpl; intros; myinv.",
            "VernacExtend",
            "149b20d74ec5150d0b075405e8385fcfd9bd9bf9"
        ],
        [
            "specialize (H ALLVAL).",
            "VernacExtend",
            "f078a36def9a17f07ff82edd79fae6a42014386b"
        ],
        [
            "myinv.",
            "VernacExtend",
            "7fcc5048e0a952ce400e407a071bffac059de1c3"
        ],
        [
            "exploit sem_cast_arguments_complete; eauto.",
            "VernacExtend",
            "d506b7f4872be292e88d6efa2c2ea21df22a9cf5"
        ],
        [
            "intros [vtl' [A B]].",
            "VernacExtend",
            "f9699331098325877c55f2347b6124f2673f17a5"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "eapply incontext_list_ok; eauto.",
            "VernacExtend",
            "7694c03c716aa3439267cab663fb0d454f198507"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "simpl; congruence.",
            "VernacExtend",
            "9dc8adbf60f5d5d5eff96b8af6106e0c466f306f"
        ],
        [
            "destruct (is_val a) as [[v ty'] | ] eqn:?.",
            "VernacExtend",
            "4b21547482fc47f7237ccbf1fe852efb26494db1"
        ],
        [
            "rewrite (is_val_inv _ _ _ Heqo).",
            "VernacExtend",
            "83a2d61bfd14d8c9cdb98893a35d2e262f0c1491"
        ],
        [
            "destruct (sem_cast v ty' tycast m) as [v'|] eqn:?...",
            "VernacExtend",
            "92d4a2d65a21afe3a4cc4c5876ddf9843ff96ecf"
        ],
        [
            "apply topred_ok; auto.",
            "VernacExtend",
            "a701f2baf1ce0d33dc85b6d9011bec102c823b9d"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply red_paren; auto.",
            "VernacExtend",
            "f3b2fdc3df70cda4059f939051ce097e402f29dc"
        ],
        [
            "exists w; constructor.",
            "VernacExtend",
            "3e8a6ccd47fef87b179dcfb38b927d3cefa731da"
        ],
        [
            "eapply incontext_ok; eauto.",
            "VernacExtend",
            "814f92fab0d92ecb9306e26c886963f1ffe20356"
        ],
        [
            "induction al; simpl; intros.",
            "VernacExtend",
            "2458ad1ef33fcb3c375c382d6021431a548022f5"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "simpl; congruence.",
            "VernacExtend",
            "9dc8adbf60f5d5d5eff96b8af6106e0c466f306f"
        ],
        [
            "eapply incontext2_list_ok'; eauto.",
            "VernacExtend",
            "231574ac8729d046c8a49181a182d829a00ea613"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma step_exprlist_val_list: forall m al, is_val_list al <> None -> step_exprlist al m = nil.",
            "VernacStartTheoremProof",
            "3ae514dd61e525353792cd8196ce60fae571e1ba"
        ],
        [
            "induction al; simpl; intros.",
            "VernacExtend",
            "2458ad1ef33fcb3c375c382d6021431a548022f5"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct (is_val r1) as [[v1 ty1]|] eqn:?; try congruence.",
            "VernacExtend",
            "93659c5674b0aae156c21c97abd737048bafdbf0"
        ],
        [
            "destruct (is_val_list al) eqn:?; try congruence.",
            "VernacExtend",
            "19194d764ddb36eae55c97a2d556bb8ade2ed795"
        ],
        [
            "rewrite (is_val_inv _ _ _ Heqo).",
            "VernacExtend",
            "83a2d61bfd14d8c9cdb98893a35d2e262f0c1491"
        ],
        [
            "rewrite IHal.",
            "VernacExtend",
            "bf398502453228dad511ef6db0be233445fc274d"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lred_topred: forall l1 m1 l2 m2, lred ge e l1 m1 l2 m2 -> exists rule, step_expr LV l1 m1 = topred (Lred rule l2 m2).",
            "VernacStartTheoremProof",
            "6aac6dd88551a1b94d3c1d9a4b99894c77a4add7"
        ],
        [
            "induction 1; simpl.",
            "VernacExtend",
            "7a487009c144d86c422c5127aa0fc0ff1707bb8b"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "rewrite dec_eq_true.",
            "VernacExtend",
            "28b046c22f8f69c0651cbac642dd4f2013af7847"
        ],
        [
            "econstructor; eauto.",
            "VernacExtend",
            "faa93781fb8bbf289e651728c4588af1c4169d34"
        ],
        [
            "rewrite H; rewrite H0.",
            "VernacExtend",
            "cadacb31556a02adbe2c6bc962279414f9ba19d0"
        ],
        [
            "econstructor; eauto.",
            "VernacExtend",
            "faa93781fb8bbf289e651728c4588af1c4169d34"
        ],
        [
            "econstructor; eauto.",
            "VernacExtend",
            "faa93781fb8bbf289e651728c4588af1c4169d34"
        ],
        [
            "rewrite H, H0; econstructor; eauto.",
            "VernacExtend",
            "03b5a18c2c6d3cc7ceb575b2d0e4a11ba85e31e2"
        ],
        [
            "rewrite H; econstructor; eauto.",
            "VernacExtend",
            "d2c111590b6e7e053bbfc0b99ac4c3220d80b201"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rred_topred: forall w' r1 m1 t r2 m2, rred ge r1 m1 t r2 m2 -> possible_trace w t w' -> exists rule, step_expr RV r1 m1 = topred (Rred rule r2 m2 t).",
            "VernacStartTheoremProof",
            "1062017d71ef3eb3ffebe5f0aeb0b64816f6462c"
        ],
        [
            "induction 1; simpl; intros.",
            "VernacExtend",
            "34c415c4beb6a44207941dd3a1249a87d73af3a3"
        ],
        [
            "rewrite dec_eq_true.",
            "VernacExtend",
            "28b046c22f8f69c0651cbac642dd4f2013af7847"
        ],
        [
            "rewrite (do_deref_loc_complete _ _ _ _ _ _ _ _ H H0).",
            "VernacExtend",
            "f0cdb535228ec9ac0f01bc1ba684511629fa724d"
        ],
        [
            "econstructor; eauto.",
            "VernacExtend",
            "faa93781fb8bbf289e651728c4588af1c4169d34"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "econstructor; eauto.",
            "VernacExtend",
            "faa93781fb8bbf289e651728c4588af1c4169d34"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "rewrite H; econstructor; eauto.",
            "VernacExtend",
            "d2c111590b6e7e053bbfc0b99ac4c3220d80b201"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "rewrite H; econstructor; eauto.",
            "VernacExtend",
            "d2c111590b6e7e053bbfc0b99ac4c3220d80b201"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "rewrite H; econstructor; eauto.",
            "VernacExtend",
            "d2c111590b6e7e053bbfc0b99ac4c3220d80b201"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "rewrite H; econstructor; eauto.",
            "VernacExtend",
            "d2c111590b6e7e053bbfc0b99ac4c3220d80b201"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "rewrite H; econstructor; eauto.",
            "VernacExtend",
            "d2c111590b6e7e053bbfc0b99ac4c3220d80b201"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "rewrite H; econstructor; eauto.",
            "VernacExtend",
            "d2c111590b6e7e053bbfc0b99ac4c3220d80b201"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "rewrite H; econstructor; eauto.",
            "VernacExtend",
            "d2c111590b6e7e053bbfc0b99ac4c3220d80b201"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "rewrite H; econstructor; eauto.",
            "VernacExtend",
            "d2c111590b6e7e053bbfc0b99ac4c3220d80b201"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "econstructor; eauto.",
            "VernacExtend",
            "faa93781fb8bbf289e651728c4588af1c4169d34"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "econstructor; eauto.",
            "VernacExtend",
            "faa93781fb8bbf289e651728c4588af1c4169d34"
        ],
        [
            "rewrite dec_eq_true.",
            "VernacExtend",
            "28b046c22f8f69c0651cbac642dd4f2013af7847"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "rewrite (do_assign_loc_complete _ _ _ _ _ _ _ _ _ H0 H1).",
            "VernacExtend",
            "399e0f3c7957c8b624b7bb9a9cc60b543d3c3fe4"
        ],
        [
            "econstructor; eauto.",
            "VernacExtend",
            "faa93781fb8bbf289e651728c4588af1c4169d34"
        ],
        [
            "rewrite dec_eq_true.",
            "VernacExtend",
            "28b046c22f8f69c0651cbac642dd4f2013af7847"
        ],
        [
            "rewrite (do_deref_loc_complete _ _ _ _ _ _ _ _ H H0).",
            "VernacExtend",
            "f0cdb535228ec9ac0f01bc1ba684511629fa724d"
        ],
        [
            "econstructor; eauto.",
            "VernacExtend",
            "faa93781fb8bbf289e651728c4588af1c4169d34"
        ],
        [
            "rewrite dec_eq_true.",
            "VernacExtend",
            "28b046c22f8f69c0651cbac642dd4f2013af7847"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "rewrite (do_deref_loc_complete _ _ _ _ _ _ _ _ H H1).",
            "VernacExtend",
            "3335681316a9eb82163a49f01294aec3ad06dd29"
        ],
        [
            "econstructor; eauto.",
            "VernacExtend",
            "faa93781fb8bbf289e651728c4588af1c4169d34"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "rewrite dec_eq_true.",
            "VernacExtend",
            "28b046c22f8f69c0651cbac642dd4f2013af7847"
        ],
        [
            "econstructor; eauto.",
            "VernacExtend",
            "faa93781fb8bbf289e651728c4588af1c4169d34"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "rewrite H; econstructor; eauto.",
            "VernacExtend",
            "d2c111590b6e7e053bbfc0b99ac4c3220d80b201"
        ],
        [
            "exploit sem_cast_arguments_complete; eauto.",
            "VernacExtend",
            "d506b7f4872be292e88d6efa2c2ea21df22a9cf5"
        ],
        [
            "intros [vtl [A B]].",
            "VernacExtend",
            "e52ebcd7b4d090d403a8d50aa30fecd69b5be328"
        ],
        [
            "exploit do_ef_external_complete; eauto.",
            "VernacExtend",
            "f0fd8b88c6068571bc6c9d2d488c520d398619c9"
        ],
        [
            "intros C.",
            "VernacExtend",
            "815d4ae757176a139c5c7aa2e053513c4e9e1c7c"
        ],
        [
            "rewrite A.",
            "VernacExtend",
            "66a3aec75a717b72a3c9a20459f4dabe8d0df2c1"
        ],
        [
            "rewrite B.",
            "VernacExtend",
            "6bc7e557f9b9a2c4deba8e6f4ced1bbbccc735f9"
        ],
        [
            "rewrite C.",
            "VernacExtend",
            "6522c35db68091b070ccdd4e87749a3d6da8e69d"
        ],
        [
            "econstructor; eauto.",
            "VernacExtend",
            "faa93781fb8bbf289e651728c4588af1c4169d34"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma callred_topred: forall a fd args ty m, callred ge a m fd args ty -> exists rule, step_expr RV a m = topred (Callred rule fd args ty m).",
            "VernacStartTheoremProof",
            "2bc7ae1b0e41b00aba49cd3edc7e751823a1632b"
        ],
        [
            "induction 1; simpl.",
            "VernacExtend",
            "7a487009c144d86c422c5127aa0fc0ff1707bb8b"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "exploit sem_cast_arguments_complete; eauto.",
            "VernacExtend",
            "d506b7f4872be292e88d6efa2c2ea21df22a9cf5"
        ],
        [
            "intros [vtl [A B]].",
            "VernacExtend",
            "e52ebcd7b4d090d403a8d50aa30fecd69b5be328"
        ],
        [
            "rewrite A; rewrite H; rewrite B; rewrite H1; rewrite dec_eq_true.",
            "VernacExtend",
            "2820ccd5623a02fc16bc1ab28a541dc4d577c543"
        ],
        [
            "econstructor; eauto.",
            "VernacExtend",
            "faa93781fb8bbf289e651728c4588af1c4169d34"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition reducts_incl {A B: Type} (C: A -> B) (res1: reducts A) (res2: reducts B) : Prop := forall C1 rd, In (C1, rd) res1 -> In ((fun x => C(C1 x)), rd) res2.",
            "VernacDefinition",
            "efad99bf7b7835835a39d76a03e052d1d38c28dd"
        ],
        [
            "Lemma reducts_incl_trans: forall (A1 A2: Type) (C: A1 -> A2) res1 res2, reducts_incl C res1 res2 -> forall (A3: Type) (C': A2 -> A3) res3, reducts_incl C' res2 res3 -> reducts_incl (fun x => C'(C x)) res1 res3.",
            "VernacStartTheoremProof",
            "7d72dd3e74df4edf92cee395d951685fc66e0445"
        ],
        [
            "unfold reducts_incl; intros.",
            "VernacExtend",
            "7baa2762530575a9e33db24e5627e4d0ccc686fd"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma reducts_incl_nil: forall (A B: Type) (C: A -> B) res, reducts_incl C nil res.",
            "VernacStartTheoremProof",
            "54bbeb485b13284466ad274526f7627ca5869ef8"
        ],
        [
            "intros; red.",
            "VernacExtend",
            "3393be941ed81b8e4a79e80db41d01425f14b126"
        ],
        [
            "intros; contradiction.",
            "VernacExtend",
            "7ccb8bf562612369e81bdac2d697a84266b31872"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma reducts_incl_val: forall (A: Type) a m v ty (C: expr -> A) res, is_val a = Some(v, ty) -> reducts_incl C (step_expr RV a m) res.",
            "VernacStartTheoremProof",
            "458a490cb4a2144e651699a08e4ad823c101e402"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (is_val_inv _ _ _ H).",
            "VernacExtend",
            "2767ab861400a7a9c21072ba794a163106d3da37"
        ],
        [
            "apply reducts_incl_nil.",
            "VernacExtend",
            "0ae2ef2be7b63fe7053abc407f6bdace705fb184"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma reducts_incl_loc: forall (A: Type) a m b ofs ty (C: expr -> A) res, is_loc a = Some(b, ofs, ty) -> reducts_incl C (step_expr LV a m) res.",
            "VernacStartTheoremProof",
            "c8601664a1fd4abfb12154d67a5915bab21706a0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (is_loc_inv _ _ _ _ H).",
            "VernacExtend",
            "e977613803be89db9005d97f95600039250569e1"
        ],
        [
            "apply reducts_incl_nil.",
            "VernacExtend",
            "0ae2ef2be7b63fe7053abc407f6bdace705fb184"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma reducts_incl_listval: forall (A: Type) a m vtl (C: exprlist -> A) res, is_val_list a = Some vtl -> reducts_incl C (step_exprlist a m) res.",
            "VernacStartTheoremProof",
            "75c9c1650b62683aef51486c2c3a7c674adf0c0d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite step_exprlist_val_list.",
            "VernacExtend",
            "e08acd24ea9af3e05129b19d1faf2baa15b150a5"
        ],
        [
            "apply reducts_incl_nil.",
            "VernacExtend",
            "0ae2ef2be7b63fe7053abc407f6bdace705fb184"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma reducts_incl_incontext: forall (A B: Type) (C: A -> B) res, reducts_incl C res (incontext C res).",
            "VernacStartTheoremProof",
            "0b01ff10316247976e27c37cf050d46422263864"
        ],
        [
            "unfold reducts_incl, incontext.",
            "VernacExtend",
            "3c0f5d1ba2cdda95c1c23cd6efcee77aac3ac856"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "set (f := fun z : (expr -> A) * reduction => (fun x : expr => C (fst z x), snd z)).",
            "VernacExtend",
            "2240aa4c48bf024e9c7746f7c34f744c12c1d2ff"
        ],
        [
            "change (In (f (C1, rd)) (map f res)).",
            "VernacExtend",
            "0539449a63118934048cf792e35853dbaa5dc74a"
        ],
        [
            "apply in_map.",
            "VernacExtend",
            "8b1d6650eff402b483dc29bd25bb3e04ea7f525b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma reducts_incl_incontext2_left: forall (A1 A2 B: Type) (C1: A1 -> B) res1 (C2: A2 -> B) res2, reducts_incl C1 res1 (incontext2 C1 res1 C2 res2).",
            "VernacStartTheoremProof",
            "d37201eace956d54f8d0812a640f2bbe60504022"
        ],
        [
            "unfold reducts_incl, incontext2, incontext.",
            "VernacExtend",
            "42d0076da5c95104fe102aa65e7c20d95d85028c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite in_app_iff.",
            "VernacExtend",
            "a44ebd311b9e7b2b97af8cffa97bd78b6ed93921"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "set (f := fun z : (expr -> A1) * reduction => (fun x : expr => C1 (fst z x), snd z)).",
            "VernacExtend",
            "e90bbd8c46dfde1305e0a9191b7284fde2606fc5"
        ],
        [
            "change (In (f (C0, rd)) (map f res1)).",
            "VernacExtend",
            "d03279d0b921358ee9a22fa1a98696dcd41040cc"
        ],
        [
            "apply in_map; auto.",
            "VernacExtend",
            "2059af05b402fab7c36eaeb726ab8ef5abc28e20"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma reducts_incl_incontext2_right: forall (A1 A2 B: Type) (C1: A1 -> B) res1 (C2: A2 -> B) res2, reducts_incl C2 res2 (incontext2 C1 res1 C2 res2).",
            "VernacStartTheoremProof",
            "6a46b83dd2f3a8b40782d0f33bdd5dd2edd09601"
        ],
        [
            "unfold reducts_incl, incontext2, incontext.",
            "VernacExtend",
            "42d0076da5c95104fe102aa65e7c20d95d85028c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite in_app_iff.",
            "VernacExtend",
            "a44ebd311b9e7b2b97af8cffa97bd78b6ed93921"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "set (f := fun z : (expr -> A2) * reduction => (fun x : expr => C2 (fst z x), snd z)).",
            "VernacExtend",
            "82da20437cfeedae905da04ddc874b8e22e61606"
        ],
        [
            "change (In (f (C0, rd)) (map f res2)).",
            "VernacExtend",
            "a77f1f437dd134998d10ab9bedc9c3676ec847c6"
        ],
        [
            "apply in_map; auto.",
            "VernacExtend",
            "2059af05b402fab7c36eaeb726ab8ef5abc28e20"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve reducts_incl_val reducts_incl_loc reducts_incl_listval reducts_incl_incontext reducts_incl_incontext2_left reducts_incl_incontext2_right.",
            "VernacHints",
            "3c3c6c5185835066f5477d7968664363da7b8d36"
        ],
        [
            "Lemma step_expr_context: forall from to C, context from to C -> forall a m, reducts_incl C (step_expr from a m) (step_expr to (C a) m) with step_exprlist_context: forall from C, contextlist from C -> forall a m, reducts_incl C (step_expr from a m) (step_exprlist (C a) m).",
            "VernacStartTheoremProof",
            "1de3021336e92b1b6c846064a844da7d0cd483b0"
        ],
        [
            "induction 1; simpl; intros.",
            "VernacExtend",
            "34c415c4beb6a44207941dd3a1249a87d73af3a3"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "destruct (step_expr k a m); auto.",
            "VernacExtend",
            "9ab8780b91c002e0bcf12beddf271bd2a45e79c4"
        ],
        [
            "try (intros; replace (fun x => C1 x) with C1 by (apply extensionality; auto); auto).",
            "VernacExtend",
            "96b444692458616d7e1e1ebf6e15c0f58e88bfeb"
        ],
        [
            "eapply reducts_incl_trans with (C' := fun x => Ederef x ty); eauto.",
            "VernacExtend",
            "5c5b5b095f2da0d69961e08d01193b9bd7e39490"
        ],
        [
            "destruct (is_val (C a)) as [[v ty']|] eqn:?; eauto.",
            "VernacExtend",
            "4e4c68e1096f1af88bd5f84ce970de733056453d"
        ],
        [
            "eapply reducts_incl_trans with (C' := fun x => Efield x f ty); eauto.",
            "VernacExtend",
            "3c6511d860455655b91f2cfce18e2c4da57c0e2b"
        ],
        [
            "destruct (is_val (C a)) as [[v ty']|] eqn:?; eauto.",
            "VernacExtend",
            "4e4c68e1096f1af88bd5f84ce970de733056453d"
        ],
        [
            "eapply reducts_incl_trans with (C' := fun x => Evalof x ty); eauto.",
            "VernacExtend",
            "4f042c15584dd7b54060661bbd0c893d29919794"
        ],
        [
            "destruct (is_loc (C a)) as [[[b ofs] ty']|] eqn:?; eauto.",
            "VernacExtend",
            "c6e8ebe4ca061beac89880b6cbe9bf558febf1b4"
        ],
        [
            "eapply reducts_incl_trans with (C' := fun x => Eaddrof x ty); eauto.",
            "VernacExtend",
            "e64215e34968dce33faa9442b5fabf4bafc929ce"
        ],
        [
            "destruct (is_loc (C a)) as [[[b ofs] ty']|] eqn:?; eauto.",
            "VernacExtend",
            "c6e8ebe4ca061beac89880b6cbe9bf558febf1b4"
        ],
        [
            "eapply reducts_incl_trans with (C' := fun x => Eunop op x ty); eauto.",
            "VernacExtend",
            "92814a0276e309d77d8e9ad2d4f7978c6e48dc9e"
        ],
        [
            "destruct (is_val (C a)) as [[v ty']|] eqn:?; eauto.",
            "VernacExtend",
            "4e4c68e1096f1af88bd5f84ce970de733056453d"
        ],
        [
            "eapply reducts_incl_trans with (C' := fun x => Ebinop op x e2 ty); eauto.",
            "VernacExtend",
            "bda17e8d007e25186fd702fbd6e81201876015e5"
        ],
        [
            "destruct (is_val (C a)) as [[v ty']|] eqn:?; eauto.",
            "VernacExtend",
            "4e4c68e1096f1af88bd5f84ce970de733056453d"
        ],
        [
            "eapply reducts_incl_trans with (C' := fun x => Ebinop op e1 x ty); eauto.",
            "VernacExtend",
            "155bc0c37a455d5c54dc81675e26c74d0cd5e099"
        ],
        [
            "destruct (is_val e1) as [[v1 ty1]|] eqn:?; eauto.",
            "VernacExtend",
            "28d4039dba64cea5ba7e6116f06729794d269be4"
        ],
        [
            "destruct (is_val (C a)) as [[v2 ty2]|] eqn:?; eauto.",
            "VernacExtend",
            "a876d024722931472a7c159191f6c95df6fff669"
        ],
        [
            "eapply reducts_incl_trans with (C' := fun x => Ecast x ty); eauto.",
            "VernacExtend",
            "2bed029de68c208ff9ac30195d4d0b67bae7fd22"
        ],
        [
            "destruct (is_val (C a)) as [[v ty']|] eqn:?; eauto.",
            "VernacExtend",
            "4e4c68e1096f1af88bd5f84ce970de733056453d"
        ],
        [
            "eapply reducts_incl_trans with (C' := fun x => Eseqand x r2 ty); eauto.",
            "VernacExtend",
            "b6a0b2f9b21f9fd064d105f6f461874896c43424"
        ],
        [
            "destruct (is_val (C a)) as [[v ty']|] eqn:?; eauto.",
            "VernacExtend",
            "4e4c68e1096f1af88bd5f84ce970de733056453d"
        ],
        [
            "eapply reducts_incl_trans with (C' := fun x => Eseqor x r2 ty); eauto.",
            "VernacExtend",
            "b6c942fca0e1056dfa2ae023f624a72cb7bf89dc"
        ],
        [
            "destruct (is_val (C a)) as [[v ty']|] eqn:?; eauto.",
            "VernacExtend",
            "4e4c68e1096f1af88bd5f84ce970de733056453d"
        ],
        [
            "eapply reducts_incl_trans with (C' := fun x => Econdition x r2 r3 ty); eauto.",
            "VernacExtend",
            "a96d025f662d7ae4013c8526534fc2a9f197b111"
        ],
        [
            "destruct (is_val (C a)) as [[v ty']|] eqn:?; eauto.",
            "VernacExtend",
            "4e4c68e1096f1af88bd5f84ce970de733056453d"
        ],
        [
            "eapply reducts_incl_trans with (C' := fun x => Eassign x e2 ty); eauto.",
            "VernacExtend",
            "a27070eb2ee9e0bfccced6bf16cbfeee3e7ac471"
        ],
        [
            "destruct (is_loc (C a)) as [[[b ofs] ty']|] eqn:?; eauto.",
            "VernacExtend",
            "c6e8ebe4ca061beac89880b6cbe9bf558febf1b4"
        ],
        [
            "eapply reducts_incl_trans with (C' := fun x => Eassign e1 x ty); eauto.",
            "VernacExtend",
            "8cfcbfd7d48c221759f0cc42cc7773bb197b6ff3"
        ],
        [
            "destruct (is_loc e1) as [[[b ofs] ty1]|] eqn:?; eauto.",
            "VernacExtend",
            "8dc4c27d9e7720ea7c7bdd32c6f0eca011ac0964"
        ],
        [
            "destruct (is_val (C a)) as [[v2 ty2]|] eqn:?; eauto.",
            "VernacExtend",
            "a876d024722931472a7c159191f6c95df6fff669"
        ],
        [
            "eapply reducts_incl_trans with (C' := fun x => Eassignop op x e2 tyres ty); eauto.",
            "VernacExtend",
            "640c84a5dc81720eb3e25258939483d20506014d"
        ],
        [
            "destruct (is_loc (C a)) as [[[b ofs] ty']|] eqn:?; eauto.",
            "VernacExtend",
            "c6e8ebe4ca061beac89880b6cbe9bf558febf1b4"
        ],
        [
            "eapply reducts_incl_trans with (C' := fun x => Eassignop op e1 x tyres ty); eauto.",
            "VernacExtend",
            "cce1cbe92abdf9932c7b52119cc4acdd681bf0f5"
        ],
        [
            "destruct (is_loc e1) as [[[b ofs] ty1]|] eqn:?; eauto.",
            "VernacExtend",
            "8dc4c27d9e7720ea7c7bdd32c6f0eca011ac0964"
        ],
        [
            "destruct (is_val (C a)) as [[v2 ty2]|] eqn:?; eauto.",
            "VernacExtend",
            "a876d024722931472a7c159191f6c95df6fff669"
        ],
        [
            "eapply reducts_incl_trans with (C' := fun x => Epostincr id x ty); eauto.",
            "VernacExtend",
            "8899d98bf024905f0ac4f879d2d6fcbf23704d86"
        ],
        [
            "destruct (is_loc (C a)) as [[[b ofs] ty']|] eqn:?; eauto.",
            "VernacExtend",
            "c6e8ebe4ca061beac89880b6cbe9bf558febf1b4"
        ],
        [
            "eapply reducts_incl_trans with (C' := fun x => Ecall x el ty); eauto.",
            "VernacExtend",
            "7ec2a39d231fa20c9e36ae3fa4c535f79a06fa47"
        ],
        [
            "destruct (is_val (C a)) as [[v ty']|] eqn:?; eauto.",
            "VernacExtend",
            "4e4c68e1096f1af88bd5f84ce970de733056453d"
        ],
        [
            "eapply reducts_incl_trans with (C' := fun x => Ecall e1 x ty).",
            "VernacExtend",
            "0ad1e0ffb837e982deb19a439f087f809225d427"
        ],
        [
            "apply step_exprlist_context.",
            "VernacExtend",
            "47cee2bac95468b6d9a4b48cfc7e943351e8da4a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct (is_val e1) as [[v1 ty1]|] eqn:?; eauto.",
            "VernacExtend",
            "28d4039dba64cea5ba7e6116f06729794d269be4"
        ],
        [
            "destruct (is_val_list (C a)) as [vl|] eqn:?; eauto.",
            "VernacExtend",
            "85a717f3217295020bbb7f60190d2d8cc21ce407"
        ],
        [
            "eapply reducts_incl_trans with (C' := fun x => Ebuiltin ef tyargs x ty).",
            "VernacExtend",
            "7f7691d492d03f320f9758407cf2383a6b354f4f"
        ],
        [
            "apply step_exprlist_context.",
            "VernacExtend",
            "47cee2bac95468b6d9a4b48cfc7e943351e8da4a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct (is_val_list (C a)) as [vl|] eqn:?; eauto.",
            "VernacExtend",
            "85a717f3217295020bbb7f60190d2d8cc21ce407"
        ],
        [
            "eapply reducts_incl_trans with (C' := fun x => Ecomma x e2 ty); eauto.",
            "VernacExtend",
            "679f7aa175cf77fc2c795efa84b81fc750a62e98"
        ],
        [
            "destruct (is_val (C a)) as [[v ty']|] eqn:?; eauto.",
            "VernacExtend",
            "4e4c68e1096f1af88bd5f84ce970de733056453d"
        ],
        [
            "eapply reducts_incl_trans with (C' := fun x => Eparen x tycast ty); eauto.",
            "VernacExtend",
            "020b77e7b3c45205e7c8e5000d4d53dd34fd23ed"
        ],
        [
            "destruct (is_val (C a)) as [[v ty']|] eqn:?; eauto.",
            "VernacExtend",
            "4e4c68e1096f1af88bd5f84ce970de733056453d"
        ],
        [
            "induction 1; simpl; intros.",
            "VernacExtend",
            "34c415c4beb6a44207941dd3a1249a87d73af3a3"
        ],
        [
            "eapply reducts_incl_trans with (C' := fun x => Econs x el).",
            "VernacExtend",
            "2c4768f8c37775a9644da71f3cd9198c10d1f540"
        ],
        [
            "apply step_expr_context; eauto.",
            "VernacExtend",
            "56620ff47ea999d7ea0ab2cc6dbfbec0c1c9f130"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "eapply reducts_incl_trans with (C' := fun x => Econs e1 x).",
            "VernacExtend",
            "ef433e1a6b2c0a049e6aa6e7b906118e3b480e3f"
        ],
        [
            "apply step_exprlist_context; eauto.",
            "VernacExtend",
            "f4b213fea4cecad1c71055cadd0ecd30272ff35d"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_stuckred_imm_safe: forall m a k, (forall C, ~In (C, Stuckred) (step_expr k a m)) -> imm_safe_t k a m.",
            "VernacStartTheoremProof",
            "f5c8fa8927b3783127456ed0b94d33264f248a71"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (step_expr_sound a k m).",
            "VernacExtend",
            "38610766d4da81303fe3b01a387fbe07e6bde98c"
        ],
        [
            "intros [A B].",
            "VernacExtend",
            "269ecc1b12a78cad85161d58003fb0ebdea8ebc3"
        ],
        [
            "destruct (step_expr k a m) as [|[C rd] res] eqn:?.",
            "VernacExtend",
            "58e982cc947d4abba54ea82f5d08677e7f60a413"
        ],
        [
            "specialize (B (eq_refl _)).",
            "VernacExtend",
            "8ceab88781c30dad14c3a956965bcb52024b61bb"
        ],
        [
            "destruct k.",
            "VernacExtend",
            "276a2174e55489a07c8e0fd8db1630e98ae9c376"
        ],
        [
            "destruct a; simpl in B; try congruence.",
            "VernacExtend",
            "fc0b550c56da471bc2c3825369bd94fed40b9288"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "destruct a; simpl in B; try congruence.",
            "VernacExtend",
            "fc0b550c56da471bc2c3825369bd94fed40b9288"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "assert (NOTSTUCK: rd <> Stuckred).",
            "VernacExtend",
            "e4fdce1a467e9cb077e0f5f9c4d878bd1681a4f6"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "elim (H C); subst rd; auto with coqlib.",
            "VernacExtend",
            "a6241671472902f448ac4e3269f6994bb7bf4012"
        ],
        [
            "exploit A.",
            "VernacExtend",
            "e7f27959f8de749772d9ec3ea4064755b5a487ae"
        ],
        [
            "eauto with coqlib.",
            "VernacExtend",
            "936a8c3fe80f3a176ab34cf7ab6314fa7dda6de1"
        ],
        [
            "intros [a' [k' [P [Q R]]]].",
            "VernacExtend",
            "1b655d305b2b1db120172164704d73ff686e7c92"
        ],
        [
            "destruct k'; destruct rd; simpl in R; intuition.",
            "VernacExtend",
            "7f892fd1df8d8a071e9d204b8c7ec41f4c0ade98"
        ],
        [
            "subst a.",
            "VernacExtend",
            "d7670e5f9c196bd417b16b29da3532f33d34884d"
        ],
        [
            "eapply imm_safe_t_lred; eauto.",
            "VernacExtend",
            "1dc1f1791aea18b94c64d396c8adf888cb3287bf"
        ],
        [
            "subst a.",
            "VernacExtend",
            "d7670e5f9c196bd417b16b29da3532f33d34884d"
        ],
        [
            "destruct H1 as [w' PT].",
            "VernacExtend",
            "c0735875666f90427c396b8abc749387e262411a"
        ],
        [
            "eapply imm_safe_t_rred; eauto.",
            "VernacExtend",
            "967e22191c35982417a4721fe8cbd029ed8dab1a"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "eapply imm_safe_t_callred; eauto.",
            "VernacExtend",
            "3f367a33b463ca7bbd2f63e4811211bec091bf8c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_imm_safe_stuck_red: forall m a k C, context k RV C -> ~imm_safe_t k a m -> exists C', In (C', Stuckred) (step_expr RV (C a) m).",
            "VernacStartTheoremProof",
            "f03dfc558f129d6a313148382afef7214d89e888"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (exists C', In (C', Stuckred) (step_expr k a m)).",
            "VernacExtend",
            "6d9c7121a05c61fb9b5bff4ca624f7914642cd09"
        ],
        [
            "destruct (classic (exists C', In (C', Stuckred) (step_expr k a m))); auto.",
            "VernacExtend",
            "11c110ef2d1f6626e56f6ff313a74fc0409ee019"
        ],
        [
            "elim H0.",
            "VernacExtend",
            "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
        ],
        [
            "apply not_stuckred_imm_safe.",
            "VernacExtend",
            "9029fa7ffb45b093a0d1c6329dd55833a3eb6257"
        ],
        [
            "apply not_ex_all_not.",
            "VernacExtend",
            "97769e7dff4c336932645162e543686d7caaa86e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct H1 as [C' IN].",
            "VernacExtend",
            "b68d3ee3119c8b2bf5c3e0a39cb33d4345d211ba"
        ],
        [
            "specialize (step_expr_context _ _ _ H a m).",
            "VernacExtend",
            "b42466e90cc4f4d2d7dfedf9bf40faadf666379a"
        ],
        [
            "unfold reducts_incl.",
            "VernacExtend",
            "480f9835b9533e11059f795b3393a787b5e977f7"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "exists (fun x => (C (C' x))).",
            "VernacExtend",
            "acccf0215216cd479926d00ff652ac4e224ad9a7"
        ],
        [
            "apply H1; auto.",
            "VernacExtend",
            "57fc44af14fcaf3758941b68060efcbab0060c55"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma imm_safe_imm_safe_t: forall k a m, imm_safe ge e k a m -> imm_safe_t k a m \\/ exists C, exists a1, exists t, exists a1', exists m', context RV k C /\\ a = C a1 /\\ rred ge a1 m t a1' m' /\\ forall w', ~possible_trace w t w'.",
            "VernacStartTheoremProof",
            "d8d9f79f563e66f0d1f78f0a43835a3f95208b8a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply imm_safe_t_val.",
            "VernacExtend",
            "ded2f2362375a5ac5bf71338ac3c9a7e126870e8"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply imm_safe_t_loc.",
            "VernacExtend",
            "6cb814e8541d95e77f1d5303f633206ac40c592e"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "eapply imm_safe_t_lred; eauto.",
            "VernacExtend",
            "1dc1f1791aea18b94c64d396c8adf888cb3287bf"
        ],
        [
            "destruct (classic (exists w', possible_trace w t w')) as [[w' A] | A].",
            "VernacExtend",
            "e09ca4f9ebdb38e48080c9324b85536f3c94ad4a"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "eapply imm_safe_t_rred; eauto.",
            "VernacExtend",
            "967e22191c35982417a4721fe8cbd029ed8dab1a"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "exists C; exists e0; exists t; exists e'; exists m'; intuition.",
            "VernacExtend",
            "3024d5b6751a38a28b3a6aa3711881c736a1072d"
        ],
        [
            "apply A; exists w'; auto.",
            "VernacExtend",
            "e5081b99d9ff46127e8c97735bb1f736a4a82b64"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "eapply imm_safe_t_callred; eauto.",
            "VernacExtend",
            "3f367a33b463ca7bbd2f63e4811211bec091bf8c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition can_crash_world (w: world) (S: state) : Prop := exists t, exists S', Csem.step ge S t S' /\\ forall w', ~possible_trace w t w'.",
            "VernacDefinition",
            "b83cc7f9b10e8d0f1c42d7a9adeafe61300d5f56"
        ],
        [
            "Theorem not_imm_safe_t: forall K C a m f k, context K RV C -> ~imm_safe_t K a m -> Csem.step ge (ExprState f (C a) k e m) E0 Stuckstate \\/ can_crash_world w (ExprState f (C a) k e m).",
            "VernacStartTheoremProof",
            "a620dd15daf39961e9f0985143a05e5a50c42770"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (classic (imm_safe ge e K a m)).",
            "VernacExtend",
            "b111dc4a8a6aadf098bdf74c37f8ccf5ce8a4a96"
        ],
        [
            "exploit imm_safe_imm_safe_t; eauto.",
            "VernacExtend",
            "47b47e8f10ca4f3730570bcd8acc8a7f768de562"
        ],
        [
            "intros [A | [C1 [a1 [t [a1' [m' [A [B [D E]]]]]]]]].",
            "VernacExtend",
            "fe4de2d7b1fd32abc92b3214825b45fb3fb5350b"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "exists t; econstructor; split; auto.",
            "VernacExtend",
            "86d193b89c710dd12d272eb4e73f58c4aa06386a"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "rewrite B.",
            "VernacExtend",
            "6bc7e557f9b9a2c4deba8e6f4ced1bbbccc735f9"
        ],
        [
            "eapply step_rred with (C := fun x => C(C1 x)).",
            "VernacExtend",
            "8108e57cd47f179a356dea27a83e8597c41a174f"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "eapply step_stuck; eauto.",
            "VernacExtend",
            "ae1c559e92778e82f46d92f148a7771acdea51d1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End EXPRS.",
            "VernacEndSegment",
            "9af17e89571b83c14dca8d2252689f0eaa8384f5"
        ],
        [
            "Fixpoint do_alloc_variables (e: env) (m: mem) (l: list (ident * type)) {struct l} : env * mem := match l with | nil => (e,m) | (id, ty) :: l' => let (m1,b1) := Mem.alloc m 0 (sizeof ge ty) in do_alloc_variables (PTree.set id (b1, ty) e) m1 l' end.",
            "VernacFixpoint",
            "092558ae2ca91a0184787c0e7214cca4ec8c4ebe"
        ],
        [
            "Lemma do_alloc_variables_sound: forall l e m, alloc_variables ge e m l (fst (do_alloc_variables e m l)) (snd (do_alloc_variables e m l)).",
            "VernacStartTheoremProof",
            "d1e0cbb90d2823664eca368d312d98691ceec6ea"
        ],
        [
            "induction l; intros; simpl.",
            "VernacExtend",
            "6aa9541b4ade8f0ccec4c2034d15d1d35a916300"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "destruct a as [id ty].",
            "VernacExtend",
            "28d2d5def1ffaa9d62c2ea555e8d6a6455fa926c"
        ],
        [
            "destruct (Mem.alloc m 0 (sizeof ge ty)) as [m1 b1] eqn:?; simpl.",
            "VernacExtend",
            "254fcfe6bc0d503347679132d7a0d7147d77b935"
        ],
        [
            "econstructor; eauto.",
            "VernacExtend",
            "faa93781fb8bbf289e651728c4588af1c4169d34"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma do_alloc_variables_complete: forall e1 m1 l e2 m2, alloc_variables ge e1 m1 l e2 m2 -> do_alloc_variables e1 m1 l = (e2, m2).",
            "VernacStartTheoremProof",
            "441569f439e1d7483e72600d3a03a5cf3681284a"
        ],
        [
            "induction 1; simpl.",
            "VernacExtend",
            "7a487009c144d86c422c5127aa0fc0ff1707bb8b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite H; rewrite IHalloc_variables; auto.",
            "VernacExtend",
            "1bf4399a52301dcf9d9b04d15241148ca6d4c08f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Function sem_bind_parameters (w: world) (e: env) (m: mem) (l: list (ident * type)) (lv: list val) {struct l} : option mem := match l, lv with | nil, nil => Some m | (id, ty) :: params, v1::lv => match PTree.get id e with | Some (b, ty') => check (type_eq ty ty'); do w', t, m1 <- do_assign_loc w ty m b Ptrofs.zero v1; match t with nil => sem_bind_parameters w e m1 params lv | _ => None end | None => None end | _, _ => None end.",
            "VernacExtend",
            "bfd6e07bbcff92586d8ac4343fb5a7a1d512109e"
        ],
        [
            "Lemma sem_bind_parameters_sound : forall w e m l lv m', sem_bind_parameters w e m l lv = Some m' -> bind_parameters ge e m l lv m'.",
            "VernacStartTheoremProof",
            "da18adaa90d0b1aa7fa1fe2b4d319fb77437f9ef"
        ],
        [
            "intros; functional induction (sem_bind_parameters w e m l lv); try discriminate.",
            "VernacExtend",
            "57046e98b022aaa333f8eb943df9769fa12de042"
        ],
        [
            "inversion H; constructor; auto.",
            "VernacExtend",
            "e88569ef8d09a1ef3f0dbdbf29c059c6f3d62993"
        ],
        [
            "exploit do_assign_loc_sound; eauto.",
            "VernacExtend",
            "46ddd2cd900528bdebc9ba5f97853deab9f98186"
        ],
        [
            "intros [A B].",
            "VernacExtend",
            "269ecc1b12a78cad85161d58003fb0ebdea8ebc3"
        ],
        [
            "econstructor; eauto.",
            "VernacExtend",
            "faa93781fb8bbf289e651728c4588af1c4169d34"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sem_bind_parameters_complete : forall w e m l lv m', bind_parameters ge e m l lv m' -> sem_bind_parameters w e m l lv = Some m'.",
            "VernacStartTheoremProof",
            "8a1fef8083b8dbcbcfeff4ab7c2b3a7ed71530c3"
        ],
        [
            "induction 1; simpl; auto.",
            "VernacExtend",
            "c744c0db2f17ed7745b4893bfd3017058a6e4828"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "rewrite dec_eq_true.",
            "VernacExtend",
            "28b046c22f8f69c0651cbac642dd4f2013af7847"
        ],
        [
            "assert (possible_trace w E0 w) by constructor.",
            "VernacExtend",
            "59ecc4af27e47b96317a7c202120c77684c0a976"
        ],
        [
            "rewrite (do_assign_loc_complete _ _ _ _ _ _ _ _ _ H0 H2).",
            "VernacExtend",
            "0c8a02e97d9e45f783746c525b0d7f7e8244782e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive transition : Type := TR (rule: string) (t: trace) (S': state).",
            "VernacInductive",
            "0f9baace50dba5a7d776d69c1159d109f0066ffc"
        ],
        [
            "Definition expr_final_state (f: function) (k: cont) (e: env) (C_rd: (expr -> expr) * reduction) := match snd C_rd with | Lred rule a m => TR rule E0 (ExprState f (fst C_rd a) k e m) | Rred rule a m t => TR rule t (ExprState f (fst C_rd a) k e m) | Callred rule fd vargs ty m => TR rule E0 (Callstate fd vargs (Kcall f e (fst C_rd) ty k) m) | Stuckred => TR \"step_stuck\" E0 Stuckstate end.",
            "VernacDefinition",
            "ffa600ffa8dc39f099edef3c167dc27eae62ca1f"
        ],
        [
            "Local Open Scope list_monad_scope.",
            "VernacOpenCloseScope",
            "964352df0cd1564c98a10f6b19e7754101e98f69"
        ],
        [
            "Definition ret (rule: string) (S: state) : list transition := TR rule E0 S :: nil.",
            "VernacDefinition",
            "6b22f3b49cb55578dd36d0e5615d8f04095cf04e"
        ],
        [
            "Definition do_step (w: world) (s: state) : list transition := match s with | ExprState f a k e m => match is_val a with | Some(v, ty) => match k with | Kdo k => ret \"step_do_2\" (State f Sskip k e m ) | Kifthenelse s1 s2 k => do b <- bool_val v ty m; ret \"step_ifthenelse_2\" (State f (if b then s1 else s2) k e m) | Kwhile1 x s k => do b <- bool_val v ty m; if b then ret \"step_while_true\" (State f s (Kwhile2 x s k) e m) else ret \"step_while_false\" (State f Sskip k e m) | Kdowhile2 x s k => do b <- bool_val v ty m; if b then ret \"step_dowhile_true\" (State f (Sdowhile x s) k e m) else ret \"step_dowhile_false\" (State f Sskip k e m) | Kfor2 a2 a3 s k => do b <- bool_val v ty m; if b then ret \"step_for_true\" (State f s (Kfor3 a2 a3 s k) e m) else ret \"step_for_false\" (State f Sskip k e m) | Kreturn k => do v' <- sem_cast v ty f.(fn_return) m; do m' <- Mem.free_list m (blocks_of_env ge e); ret \"step_return_2\" (Returnstate v' (call_cont k) m') | Kswitch1 sl k => do n <- sem_switch_arg v ty; ret \"step_expr_switch\" (State f (seq_of_labeled_statement (select_switch n sl)) (Kswitch2 k) e m) | _ => nil end | None => map (expr_final_state f k e) (step_expr e w RV a m) end | State f (Sdo x) k e m => ret \"step_do_1\" (ExprState f x (Kdo k) e m) | State f (Ssequence s1 s2) k e m => ret \"step_seq\" (State f s1 (Kseq s2 k) e m) | State f Sskip (Kseq s k) e m => ret \"step_skip_seq\" (State f s k e m) | State f Scontinue (Kseq s k) e m => ret \"step_continue_seq\" (State f Scontinue k e m) | State f Sbreak (Kseq s k) e m => ret \"step_break_seq\" (State f Sbreak k e m) | State f (Sifthenelse a s1 s2) k e m => ret \"step_ifthenelse_1\" (ExprState f a (Kifthenelse s1 s2 k) e m) | State f (Swhile x s) k e m => ret \"step_while\" (ExprState f x (Kwhile1 x s k) e m) | State f (Sskip|Scontinue) (Kwhile2 x s k) e m => ret \"step_skip_or_continue_while\" (State f (Swhile x s) k e m) | State f Sbreak (Kwhile2 x s k) e m => ret \"step_break_while\" (State f Sskip k e m) | State f (Sdowhile a s) k e m => ret \"step_dowhile\" (State f s (Kdowhile1 a s k) e m) | State f (Sskip|Scontinue) (Kdowhile1 x s k) e m => ret \"step_skip_or_continue_dowhile\" (ExprState f x (Kdowhile2 x s k) e m) | State f Sbreak (Kdowhile1 x s k) e m => ret \"step_break_dowhile\" (State f Sskip k e m) | State f (Sfor a1 a2 a3 s) k e m => if is_skip a1 then ret \"step_for\" (ExprState f a2 (Kfor2 a2 a3 s k) e m) else ret \"step_for_start\" (State f a1 (Kseq (Sfor Sskip a2 a3 s) k) e m) | State f (Sskip|Scontinue) (Kfor3 a2 a3 s k) e m => ret \"step_skip_or_continue_for3\" (State f a3 (Kfor4 a2 a3 s k) e m) | State f Sbreak (Kfor3 a2 a3 s k) e m => ret \"step_break_for3\" (State f Sskip k e m) | State f Sskip (Kfor4 a2 a3 s k) e m => ret \"step_skip_for4\" (State f (Sfor Sskip a2 a3 s) k e m) | State f (Sreturn None) k e m => do m' <- Mem.free_list m (blocks_of_env ge e); ret \"step_return_0\" (Returnstate Vundef (call_cont k) m') | State f (Sreturn (Some x)) k e m => ret \"step_return_1\" (ExprState f x (Kreturn k) e m) | State f Sskip ((Kstop | Kcall _ _ _ _ _) as k) e m => do m' <- Mem.free_list m (blocks_of_env ge e); ret \"step_skip_call\" (Returnstate Vundef k m') | State f (Sswitch x sl) k e m => ret \"step_switch\" (ExprState f x (Kswitch1 sl k) e m) | State f (Sskip|Sbreak) (Kswitch2 k) e m => ret \"step_skip_break_switch\" (State f Sskip k e m) | State f Scontinue (Kswitch2 k) e m => ret \"step_continue_switch\" (State f Scontinue k e m) | State f (Slabel lbl s) k e m => ret \"step_label\" (State f s k e m) | State f (Sgoto lbl) k e m => match find_label lbl f.(fn_body) (call_cont k) with | Some(s', k') => ret \"step_goto\" (State f s' k' e m) | None => nil end | Callstate (Internal f) vargs k m => check (list_norepet_dec ident_eq (var_names (fn_params f) ++ var_names (fn_vars f))); let (e,m1) := do_alloc_variables empty_env m (f.(fn_params) ++ f.(fn_vars)) in do m2 <- sem_bind_parameters w e m1 f.(fn_params) vargs; ret \"step_internal_function\" (State f f.(fn_body) k e m2) | Callstate (External ef _ _ _) vargs k m => match do_external ef w vargs m with | None => nil | Some(w',t,v,m') => TR \"step_external_function\" t (Returnstate v k m') :: nil end | Returnstate v (Kcall f e C ty k) m => ret \"step_returnstate\" (ExprState f (C (Eval v ty)) k e m) | _ => nil end.",
            "VernacDefinition",
            "8014d5cd48c7d9a12f4edf279a5485593a1027bd"
        ],
        [
            "Ltac myinv := match goal with | [ |- In _ nil -> _ ] => let X := fresh \"X\" in intro X; elim X | [ |- In _ (ret _ _) -> _ ] => let X := fresh \"X\" in intro X; elim X; clear X; [let EQ := fresh \"EQ\" in intro EQ; unfold ret in EQ; inv EQ; myinv | myinv] | [ |- In _ (_ :: nil) -> _ ] => let X := fresh \"X\" in intro X; elim X; clear X; [let EQ := fresh \"EQ\" in intro EQ; inv EQ; myinv | myinv] | [ |- In _ (match ?x with Some _ => _ | None => _ end) -> _ ] => destruct x eqn:?; myinv | [ |- In _ (match ?x with false => _ | true => _ end) -> _ ] => destruct x eqn:?; myinv | [ |- In _ (match ?x with left _ => _ | right _ => _ end) -> _ ] => destruct x; myinv | _ => idtac end.",
            "VernacExtend",
            "7a72c9a79bb69dcb8df297f1ad5978ee88a39f85"
        ],
        [
            "Hint Extern 3 => exact I.",
            "VernacHints",
            "d598e71e0ea36c90f4d50f889cce788a8263cca1"
        ],
        [
            "Theorem do_step_sound: forall w S rule t S', In (TR rule t S') (do_step w S) -> Csem.step ge S t S' \\/ (t = E0 /\\ S' = Stuckstate /\\ can_crash_world w S).",
            "VernacStartTheoremProof",
            "2156a6763a7366e35572afedd182220abfff3cdd"
        ],
        [
            "Proof with try (left; right; econstructor; eauto; fail).",
            "VernacProof",
            "fac223cea6bb574a078abf917ca5b02fef540e5f"
        ],
        [
            "intros until S'.",
            "VernacExtend",
            "47e3fe98495f2d06b4e8c619df5d1d793eca52e8"
        ],
        [
            "destruct S; simpl.",
            "VernacExtend",
            "16cfce7096fa76ae1e8d456cd72b0743c258d4b1"
        ],
        [
            "destruct s; myinv...",
            "VernacExtend",
            "dfabaed80d9ff100546240c03b0870f7ed02507c"
        ],
        [
            "destruct k; myinv...",
            "VernacExtend",
            "bc787affb9047d56a6c8615ffbf454bcb23cfe02"
        ],
        [
            "destruct k; myinv...",
            "VernacExtend",
            "bc787affb9047d56a6c8615ffbf454bcb23cfe02"
        ],
        [
            "destruct k; myinv...",
            "VernacExtend",
            "bc787affb9047d56a6c8615ffbf454bcb23cfe02"
        ],
        [
            "destruct p as [s' k'].",
            "VernacExtend",
            "aa862b1429b30d26c0306bec3b2dea2cd5472803"
        ],
        [
            "myinv...",
            "VernacExtend",
            "563325209bea18f06c37e7c598eacadf1c6bdbbc"
        ],
        [
            "destruct (is_val r) as [[v ty]|] eqn:?.",
            "VernacExtend",
            "be5887a09ff3994f9fd955279666edae76a3b702"
        ],
        [
            "rewrite (is_val_inv _ _ _ Heqo).",
            "VernacExtend",
            "83a2d61bfd14d8c9cdb98893a35d2e262f0c1491"
        ],
        [
            "destruct k; myinv...",
            "VernacExtend",
            "bc787affb9047d56a6c8615ffbf454bcb23cfe02"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exploit list_in_map_inv; eauto.",
            "VernacExtend",
            "235c0bd1949d253ef4954ae1790ac9b7759ffe85"
        ],
        [
            "intros [[C rd] [A B]].",
            "VernacExtend",
            "479c2c045d32eca1a9a5634388c7161ef0d9fe5f"
        ],
        [
            "generalize (step_expr_sound e w r RV m).",
            "VernacExtend",
            "89acc5a8ec0b8847cb805236ef7bc5caaea430e4"
        ],
        [
            "unfold reducts_ok.",
            "VernacExtend",
            "0cd6832e00aabc6ba152f01f12a6c6d89658f430"
        ],
        [
            "intros [P Q].",
            "VernacExtend",
            "663dc907ccc489647d55e233d550455f27ce8429"
        ],
        [
            "exploit P; eauto.",
            "VernacExtend",
            "29e9fcc44e5bdc0e84434c5e2b8d8ae321d675ce"
        ],
        [
            "intros [a' [k' [CTX [EQ RD]]]].",
            "VernacExtend",
            "ce93245f499e7bf30f06aa3e52c353b9d9498dbc"
        ],
        [
            "unfold expr_final_state in A.",
            "VernacExtend",
            "e321827d0667af8afaaf19d724103fddab48c6cd"
        ],
        [
            "simpl in A.",
            "VernacExtend",
            "dc9254dda65038a8da985f434d9893d4e6e0f31e"
        ],
        [
            "destruct k'; destruct rd; inv A; simpl in RD; try contradiction.",
            "VernacExtend",
            "a968999592b694cd0461b0c48c6ad27b724fb421"
        ],
        [
            "left; left; apply step_lred; auto.",
            "VernacExtend",
            "b91e37065c37c822cd057374fad523ac7e00d657"
        ],
        [
            "exploit not_imm_safe_t; eauto.",
            "VernacExtend",
            "c9241c0a909624fa6b04aee0fb343a9abf02f093"
        ],
        [
            "intros [R | R]; eauto.",
            "VernacExtend",
            "1223b472ab72bd9b293c198cc173687b95cc43c5"
        ],
        [
            "destruct RD.",
            "VernacExtend",
            "5ec3ab1218942e1a5a5ddb5556ab2464f08e7db4"
        ],
        [
            "left; left; apply step_rred; auto.",
            "VernacExtend",
            "310ad4b2bbcb44a1fd8e92f32a7544bae3456be9"
        ],
        [
            "destruct RD; subst m'.",
            "VernacExtend",
            "74060a082a1c7f2d9515797a41beb29b52c46eac"
        ],
        [
            "left; left; apply step_call; eauto.",
            "VernacExtend",
            "c2ad26f1bd315fbb34be1b61ed6d7c32d8cb710f"
        ],
        [
            "exploit not_imm_safe_t; eauto.",
            "VernacExtend",
            "c9241c0a909624fa6b04aee0fb343a9abf02f093"
        ],
        [
            "intros [R | R]; eauto.",
            "VernacExtend",
            "1223b472ab72bd9b293c198cc173687b95cc43c5"
        ],
        [
            "destruct fd; myinv.",
            "VernacExtend",
            "3b8d17b02f20ec3acafb7b8c98948d26594bb94f"
        ],
        [
            "destruct (do_alloc_variables empty_env m (fn_params f ++ fn_vars f)) as [e m1] eqn:?.",
            "VernacExtend",
            "7edd9e745bfce5fac14c9fae52e3234ab10f0cbc"
        ],
        [
            "myinv.",
            "VernacExtend",
            "7fcc5048e0a952ce400e407a071bffac059de1c3"
        ],
        [
            "left; right; apply step_internal_function with m1.",
            "VernacExtend",
            "6d72a0b0f5b951478e5c0e0887a66038860626d1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "change e with (fst (e,m1)).",
            "VernacExtend",
            "508659c87186a5caca3c858d4058429a354cc554"
        ],
        [
            "change m1 with (snd (e,m1)) at 2.",
            "VernacExtend",
            "769530ad0277c04dc3542863177702749dc5a532"
        ],
        [
            "rewrite <- Heqp.",
            "VernacExtend",
            "30a0ad24f270566c4dd08b0262509fbeb3a8c1ee"
        ],
        [
            "apply do_alloc_variables_sound.",
            "VernacExtend",
            "973d6e80ab31185d80456497ec40f31424d14859"
        ],
        [
            "eapply sem_bind_parameters_sound; eauto.",
            "VernacExtend",
            "bbaac06a20754cc6ff0ecb132963b66687eb75d4"
        ],
        [
            "destruct p as [[[w' tr] v] m'].",
            "VernacExtend",
            "ef30872a863ea37f7a60f42ff1a3ac3ca9db598c"
        ],
        [
            "myinv.",
            "VernacExtend",
            "7fcc5048e0a952ce400e407a071bffac059de1c3"
        ],
        [
            "left; right; constructor.",
            "VernacExtend",
            "8b59c3afdbc713693d9bfafd36fcfd91a97baf48"
        ],
        [
            "eapply do_ef_external_sound; eauto.",
            "VernacExtend",
            "8b33042c54e3ea6363c4d019b18ef37a2e0c3228"
        ],
        [
            "destruct k; myinv...",
            "VernacExtend",
            "bc787affb9047d56a6c8615ffbf454bcb23cfe02"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark estep_not_val: forall f a k e m t S, estep ge (ExprState f a k e m) t S -> is_val a = None.",
            "VernacStartTheoremProof",
            "2b07a268a8c095779843b76c7b488f9aa5eb980a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (forall b from to C, context from to C -> (from = to /\\ C = fun x => x) \\/ is_val (C b) = None).",
            "VernacExtend",
            "a3a109d5a6e25ac2924efbd4e26529727ed170b0"
        ],
        [
            "induction 1; simpl; auto.",
            "VernacExtend",
            "c744c0db2f17ed7745b4893bfd3017058a6e4828"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "destruct (H0 a0 _ _ _ H9) as [[A B] | A].",
            "VernacExtend",
            "50e893f122e8f7c52a23cb77c8a2a5c38286f104"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "inv H8; auto.",
            "VernacExtend",
            "8724ace073e531eafb27c5b76d4f538cd11ba3a6"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct (H0 a0 _ _ _ H9) as [[A B] | A].",
            "VernacExtend",
            "50e893f122e8f7c52a23cb77c8a2a5c38286f104"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "inv H8; auto.",
            "VernacExtend",
            "8724ace073e531eafb27c5b76d4f538cd11ba3a6"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct (H0 a0 _ _ _ H9) as [[A B] | A].",
            "VernacExtend",
            "50e893f122e8f7c52a23cb77c8a2a5c38286f104"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "inv H8; auto.",
            "VernacExtend",
            "8724ace073e531eafb27c5b76d4f538cd11ba3a6"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct (H0 a0 _ _ _ H8) as [[A B] | A].",
            "VernacExtend",
            "5ce746ffb2e98ff859edfb05ee66f6ca39a9d837"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "destruct a0; auto.",
            "VernacExtend",
            "b5ff52f7060bc8bbecad737487674768cd825546"
        ],
        [
            "elim H9.",
            "VernacExtend",
            "a286665c0a30b630af48a17f5f331041ced3a572"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem do_step_complete: forall w S t S' w', possible_trace w t w' -> Csem.step ge S t S' -> exists rule, In (TR rule t S') (do_step w S).",
            "VernacStartTheoremProof",
            "e7c3adba585dcb0484de41097cead01cbc51e9eb"
        ],
        [
            "Proof with (unfold ret; eauto with coqlib).",
            "VernacProof",
            "895618bc775f54772d2f1360ae07b984fd92c221"
        ],
        [
            "intros until w'; intros PT H.",
            "VernacExtend",
            "49937b62d712d050476fd1b1ce3e945c27cef0ff"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "inversion H; subst; exploit estep_not_val; eauto; intro NOTVAL.",
            "VernacExtend",
            "a4c9cc7acafbde5691b0db867959d212dfb32739"
        ],
        [
            "unfold do_step; rewrite NOTVAL.",
            "VernacExtend",
            "12676c74ff9ed3736a3ab0d466cf4ed033e33f13"
        ],
        [
            "exploit lred_topred; eauto.",
            "VernacExtend",
            "6b5fdbeca410101658970af2b5a84e20cfd12c1d"
        ],
        [
            "instantiate (1 := w).",
            "VernacExtend",
            "526632f6fa43ce1bcaf8edbd38669fc45dfe551b"
        ],
        [
            "intros (rule & STEP).",
            "VernacExtend",
            "fd7598362b0770ca5db603e24e6d3bd5c9c8eac6"
        ],
        [
            "exists rule.",
            "VernacExtend",
            "a2838ef70a4e2150dcc5ae3f17fc65d2babd9e94"
        ],
        [
            "change (TR rule E0 (ExprState f (C a') k e m')) with (expr_final_state f k e (C, Lred rule a' m')).",
            "VernacExtend",
            "9103355b52d0c90bafe0b9950ce79a9007d4fdb4"
        ],
        [
            "apply in_map.",
            "VernacExtend",
            "8b1d6650eff402b483dc29bd25bb3e04ea7f525b"
        ],
        [
            "generalize (step_expr_context e w _ _ _ H1 a m).",
            "VernacExtend",
            "936f91e0fb2da16734cb183aceb8fabd28ac1cc0"
        ],
        [
            "unfold reducts_incl.",
            "VernacExtend",
            "480f9835b9533e11059f795b3393a787b5e977f7"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "replace C with (fun x => C x).",
            "VernacExtend",
            "49f162bcb533f1a3926d2f26f4b21ed62472462c"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "rewrite STEP.",
            "VernacExtend",
            "342c9d4615b81f496048ba07d23d7a4de846fba5"
        ],
        [
            "unfold topred; auto with coqlib.",
            "VernacExtend",
            "79e7a50d3f4f3efcf9281706e1c75cd169f4bae4"
        ],
        [
            "apply extensionality; auto.",
            "VernacExtend",
            "12b051f1d6e36e7724dfee1a551595e3bc88e7c4"
        ],
        [
            "unfold do_step; rewrite NOTVAL.",
            "VernacExtend",
            "12676c74ff9ed3736a3ab0d466cf4ed033e33f13"
        ],
        [
            "exploit rred_topred; eauto.",
            "VernacExtend",
            "47cc205bcfe52cf787633038096ea1edb410f2d3"
        ],
        [
            "instantiate (1 := e).",
            "VernacExtend",
            "cac1dd5e8da4c53d6b99b02f7a4783dd587cba95"
        ],
        [
            "intros (rule & STEP).",
            "VernacExtend",
            "fd7598362b0770ca5db603e24e6d3bd5c9c8eac6"
        ],
        [
            "exists rule.",
            "VernacExtend",
            "a2838ef70a4e2150dcc5ae3f17fc65d2babd9e94"
        ],
        [
            "change (TR rule t (ExprState f (C a') k e m')) with (expr_final_state f k e (C, Rred rule a' m' t)).",
            "VernacExtend",
            "04640920f0c81f50f875fe8ec101d9cd2978a35e"
        ],
        [
            "apply in_map.",
            "VernacExtend",
            "8b1d6650eff402b483dc29bd25bb3e04ea7f525b"
        ],
        [
            "generalize (step_expr_context e w _ _ _ H1 a m).",
            "VernacExtend",
            "936f91e0fb2da16734cb183aceb8fabd28ac1cc0"
        ],
        [
            "unfold reducts_incl.",
            "VernacExtend",
            "480f9835b9533e11059f795b3393a787b5e977f7"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "replace C with (fun x => C x).",
            "VernacExtend",
            "49f162bcb533f1a3926d2f26f4b21ed62472462c"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "rewrite STEP; unfold topred; auto with coqlib.",
            "VernacExtend",
            "29cba0eb8e5fd9c03ba354520f4204228be316b0"
        ],
        [
            "apply extensionality; auto.",
            "VernacExtend",
            "12b051f1d6e36e7724dfee1a551595e3bc88e7c4"
        ],
        [
            "unfold do_step; rewrite NOTVAL.",
            "VernacExtend",
            "12676c74ff9ed3736a3ab0d466cf4ed033e33f13"
        ],
        [
            "exploit callred_topred; eauto.",
            "VernacExtend",
            "d939d53e6e16efa0d0465a208c35485e3e957e4b"
        ],
        [
            "instantiate (1 := w).",
            "VernacExtend",
            "526632f6fa43ce1bcaf8edbd38669fc45dfe551b"
        ],
        [
            "instantiate (1 := e).",
            "VernacExtend",
            "cac1dd5e8da4c53d6b99b02f7a4783dd587cba95"
        ],
        [
            "intros (rule & STEP).",
            "VernacExtend",
            "fd7598362b0770ca5db603e24e6d3bd5c9c8eac6"
        ],
        [
            "exists rule.",
            "VernacExtend",
            "a2838ef70a4e2150dcc5ae3f17fc65d2babd9e94"
        ],
        [
            "change (TR rule E0 (Callstate fd vargs (Kcall f e C ty k) m)) with (expr_final_state f k e (C, Callred rule fd vargs ty m)).",
            "VernacExtend",
            "bd120d46380a0ae45e9f796dc8ec2c507241d736"
        ],
        [
            "apply in_map.",
            "VernacExtend",
            "8b1d6650eff402b483dc29bd25bb3e04ea7f525b"
        ],
        [
            "generalize (step_expr_context e w _ _ _ H1 a m).",
            "VernacExtend",
            "936f91e0fb2da16734cb183aceb8fabd28ac1cc0"
        ],
        [
            "unfold reducts_incl.",
            "VernacExtend",
            "480f9835b9533e11059f795b3393a787b5e977f7"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "replace C with (fun x => C x).",
            "VernacExtend",
            "49f162bcb533f1a3926d2f26f4b21ed62472462c"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "rewrite STEP; unfold topred; auto with coqlib.",
            "VernacExtend",
            "29cba0eb8e5fd9c03ba354520f4204228be316b0"
        ],
        [
            "apply extensionality; auto.",
            "VernacExtend",
            "12b051f1d6e36e7724dfee1a551595e3bc88e7c4"
        ],
        [
            "exploit not_imm_safe_stuck_red.",
            "VernacExtend",
            "d5d6cfaf96911b3823fac8bdd93975435712baef"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "red; intros; elim H1.",
            "VernacExtend",
            "028a79387c5f5d36e39fac5c7591f1a07578ff98"
        ],
        [
            "eapply imm_safe_t_imm_safe.",
            "VernacExtend",
            "210f80d77740917684be31bdc5c3278fe07e5042"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "instantiate (1 := w).",
            "VernacExtend",
            "526632f6fa43ce1bcaf8edbd38669fc45dfe551b"
        ],
        [
            "intros [C' IN].",
            "VernacExtend",
            "8e7942b60a7e52fe8667a5504905a6275303eae1"
        ],
        [
            "simpl do_step.",
            "VernacExtend",
            "9f24b0417f95a207312dc4f0a3f36eccc7c74d25"
        ],
        [
            "rewrite NOTVAL.",
            "VernacExtend",
            "3792540c23e86676f3cfdf3195ee1a24a988dd27"
        ],
        [
            "exists \"step_stuck\".",
            "VernacExtend",
            "6db85952ac6c5491d2e6e7e44613f6ca1ed98db6"
        ],
        [
            "change (TR \"step_stuck\" E0 Stuckstate) with (expr_final_state f k e (C', Stuckred)).",
            "VernacExtend",
            "efd9ae9963eeb30db635d5878d25f488646786f5"
        ],
        [
            "apply in_map.",
            "VernacExtend",
            "8b1d6650eff402b483dc29bd25bb3e04ea7f525b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "inv H; simpl; econstructor...",
            "VernacExtend",
            "a867b4a5c4a4d5fced52c138d0b828c4c266a4ae"
        ],
        [
            "rewrite H0...",
            "VernacExtend",
            "50fce2eb274e9c787791aa79cecdd73ad9f1e643"
        ],
        [
            "rewrite H0...",
            "VernacExtend",
            "50fce2eb274e9c787791aa79cecdd73ad9f1e643"
        ],
        [
            "rewrite H0...",
            "VernacExtend",
            "50fce2eb274e9c787791aa79cecdd73ad9f1e643"
        ],
        [
            "destruct H0; subst s0...",
            "VernacExtend",
            "64f005131fdcebe4b08e757a0384f71cbe006ee0"
        ],
        [
            "destruct H0; subst s0...",
            "VernacExtend",
            "64f005131fdcebe4b08e757a0384f71cbe006ee0"
        ],
        [
            "rewrite H0...",
            "VernacExtend",
            "50fce2eb274e9c787791aa79cecdd73ad9f1e643"
        ],
        [
            "rewrite H0...",
            "VernacExtend",
            "50fce2eb274e9c787791aa79cecdd73ad9f1e643"
        ],
        [
            "rewrite pred_dec_false...",
            "VernacExtend",
            "f655067af5f6e581d50619d19d5f4ce1be126cfa"
        ],
        [
            "rewrite H0...",
            "VernacExtend",
            "50fce2eb274e9c787791aa79cecdd73ad9f1e643"
        ],
        [
            "rewrite H0...",
            "VernacExtend",
            "50fce2eb274e9c787791aa79cecdd73ad9f1e643"
        ],
        [
            "destruct H0; subst x...",
            "VernacExtend",
            "674439074a6147a35f88a7b53190445c652cfc6b"
        ],
        [
            "rewrite H0...",
            "VernacExtend",
            "50fce2eb274e9c787791aa79cecdd73ad9f1e643"
        ],
        [
            "rewrite H0; rewrite H1...",
            "VernacExtend",
            "79f5a51b942df1dda10bd2346e879a1cb96ea9e7"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "red in H0.",
            "VernacExtend",
            "3e33e4fdada8386783e8311d1d4116d148279cb2"
        ],
        [
            "destruct k; try contradiction...",
            "VernacExtend",
            "9cb8ef3a0f1eb5b5911e5a7f68a7db7f1720ec7e"
        ],
        [
            "rewrite H0...",
            "VernacExtend",
            "50fce2eb274e9c787791aa79cecdd73ad9f1e643"
        ],
        [
            "destruct H0; subst x...",
            "VernacExtend",
            "674439074a6147a35f88a7b53190445c652cfc6b"
        ],
        [
            "rewrite H0...",
            "VernacExtend",
            "50fce2eb274e9c787791aa79cecdd73ad9f1e643"
        ],
        [
            "rewrite pred_dec_true; auto.",
            "VernacExtend",
            "73f0c64b2b54fdab358c8f413d9923b71011684e"
        ],
        [
            "rewrite (do_alloc_variables_complete _ _ _ _ _ H1).",
            "VernacExtend",
            "33810f666674f51382dbe5755ef7b258d35efdf0"
        ],
        [
            "rewrite (sem_bind_parameters_complete _ _ _ _ _ _ H2)...",
            "VernacExtend",
            "16be54a778d2cde330d9350cc134c52b0e36a0c0"
        ],
        [
            "exploit do_ef_external_complete; eauto.",
            "VernacExtend",
            "f0fd8b88c6068571bc6c9d2d488c520d398619c9"
        ],
        [
            "intro EQ; rewrite EQ.",
            "VernacExtend",
            "0cb0f936b646de466b5d7ab66d503e64ca11f715"
        ],
        [
            "auto with coqlib.",
            "VernacExtend",
            "bf4be239b4d8868fa0ff9785d68d66d28f74c632"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End EXEC.",
            "VernacEndSegment",
            "d07b460e14b0f610620fb4a843dc8dd240db512e"
        ],
        [
            "Local Open Scope option_monad_scope.",
            "VernacOpenCloseScope",
            "ecd70258a790d16ac5ecf2ae933d7b21f9ec9c66"
        ],
        [
            "Definition do_initial_state (p: program): option (genv * state) := let ge := globalenv p in do m0 <- Genv.init_mem p; do b <- Genv.find_symbol ge p.(prog_main); do f <- Genv.find_funct_ptr ge b; check (type_eq (type_of_fundef f) (Tfunction Tnil type_int32s cc_default)); Some (ge, Callstate f nil Kstop m0).",
            "VernacDefinition",
            "c93c2323cf2290010e29dd49e4d6d675715b529e"
        ],
        [
            "Definition at_final_state (S: state): option int := match S with | Returnstate (Vint r) Kstop m => Some r | _ => None end.",
            "VernacDefinition",
            "619b8c303b844cc795b39f41c0de7902be1a3ff8"
        ]
    ],
    "proofs": [
        {
            "name": "is_val_inv",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "intros until ty.",
                        "VernacExtend",
                        "b54f1d784bf202c721649b659ba03c4cc796f31b"
                    ]
                },
                {
                    "command": [
                        "destruct a; simpl; congruence.",
                        "VernacExtend",
                        "f5218f54440230e80bae286d3a6a9eb69fd3597c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_loc_inv",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "intros until ty.",
                        "VernacExtend",
                        "b54f1d784bf202c721649b659ba03c4cc796f31b"
                    ]
                },
                {
                    "command": [
                        "destruct a; simpl; congruence.",
                        "VernacExtend",
                        "f5218f54440230e80bae286d3a6a9eb69fd3597c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_skip",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "destruct s; (left; congruence) || (right; congruence).",
                        "VernacExtend",
                        "e0ded53651905ee5dd93a3f74548e744e55b93d9"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "eventval_of_val_sound",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "intros until ev.",
                        "VernacExtend",
                        "fc4885238a3ca2931f55818688f1ca3706c45dcb"
                    ]
                },
                {
                    "command": [
                        "destruct v; simpl; mydestr; constructor.",
                        "VernacExtend",
                        "42f501e454bb7c58b03fbece47930e8b834c14b5"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply Genv.invert_find_symbol; auto.",
                        "VernacExtend",
                        "2c0a5424bfdf1ad44c38195a576009789505ee15"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eventval_of_val_complete",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "induction 1; simpl.",
                        "VernacExtend",
                        "7a487009c144d86c422c5127aa0fc0ff1707bb8b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite (Genv.find_invert_symbol _ _ H0).",
                        "VernacExtend",
                        "192c659f580ac0c8089f701a7d53aa8eb8b90205"
                    ]
                },
                {
                    "command": [
                        "simpl in H; rewrite H.",
                        "VernacExtend",
                        "0e32ce81b090f217ca5901e8c7a2aa8bca44de30"
                    ]
                },
                {
                    "command": [
                        "rewrite dec_eq_true.",
                        "VernacExtend",
                        "28b046c22f8f69c0651cbac642dd4f2013af7847"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_eventval_of_val_complete",
            "line_nb": 69,
            "steps": [
                {
                    "command": [
                        "induction 1; simpl.",
                        "VernacExtend",
                        "7a487009c144d86c422c5127aa0fc0ff1707bb8b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite (eventval_of_val_complete _ _ _ H).",
                        "VernacExtend",
                        "ed3330c77aa547d9253972fc8cb6c8ea21c4c1cf"
                    ]
                },
                {
                    "command": [
                        "rewrite IHeventval_list_match.",
                        "VernacExtend",
                        "399a5eac9407e1d6d1d2d08fbfc0b9183f6a5320"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_of_eventval_sound",
            "line_nb": 76,
            "steps": [
                {
                    "command": [
                        "intros until v.",
                        "VernacExtend",
                        "e8ae8d9afb8414a68e0fc34542631f9d672009d9"
                    ]
                },
                {
                    "command": [
                        "destruct ev; simpl; mydestr; constructor; auto.",
                        "VernacExtend",
                        "d71edd716febf37bacf0e6357c5f36a50612215c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_of_eventval_complete",
            "line_nb": 80,
            "steps": [
                {
                    "command": [
                        "induction 1; simpl.",
                        "VernacExtend",
                        "7a487009c144d86c422c5127aa0fc0ff1707bb8b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "rewrite H, H0.",
                        "VernacExtend",
                        "6a2c6e8b471f6fb686cf1a7e2e3992d01a326476"
                    ]
                },
                {
                    "command": [
                        "rewrite dec_eq_true.",
                        "VernacExtend",
                        "28b046c22f8f69c0651cbac642dd4f2013af7847"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "do_volatile_load_complete",
            "line_nb": 115,
            "steps": [
                {
                    "command": [
                        "unfold do_volatile_load; intros.",
                        "VernacExtend",
                        "63063f179b7a8d160152cab30358d8e0a9a334d3"
                    ]
                },
                {
                    "command": [
                        "inv H; simpl in *.",
                        "VernacExtend",
                        "56a7d62488949798e4bf6d708412135f02450cad"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "rewrite (Genv.find_invert_symbol _ _ H2).",
                        "VernacExtend",
                        "34c1cad1bcc31d4851d1baf1e1a07b43b1e62ffe"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "inv H8.",
                        "VernacExtend",
                        "295ed8193db9e0fc900e88537474c82260cb5c8a"
                    ]
                },
                {
                    "command": [
                        "inv H6.",
                        "VernacExtend",
                        "18148ecb90898142481b96ce8d75b495e98fc93a"
                    ]
                },
                {
                    "command": [
                        "rewrite H9.",
                        "VernacExtend",
                        "7e513e390abfc88b77648f4c54df1434c5ffa9d3"
                    ]
                },
                {
                    "command": [
                        "rewrite (val_of_eventval_complete _ _ _ H3).",
                        "VernacExtend",
                        "855e4c3e14ebc8eb3a220aeb77cef063baad230f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "rewrite H2.",
                        "VernacExtend",
                        "c34b98a4ea7c987830199fe378bb7a145a0d652e"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "do_volatile_store_complete",
            "line_nb": 146,
            "steps": [
                {
                    "command": [
                        "unfold do_volatile_store; intros.",
                        "VernacExtend",
                        "6763a4333c2ce4bbca68ecf032ec9f3617d003e3"
                    ]
                },
                {
                    "command": [
                        "inv H; simpl in *.",
                        "VernacExtend",
                        "56a7d62488949798e4bf6d708412135f02450cad"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "rewrite (Genv.find_invert_symbol _ _ H2).",
                        "VernacExtend",
                        "34c1cad1bcc31d4851d1baf1e1a07b43b1e62ffe"
                    ]
                },
                {
                    "command": [
                        "rewrite (eventval_of_val_complete _ _ _ H3).",
                        "VernacExtend",
                        "2f7fe04772b79e271be9af07274681f6e76eecaa"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "inv H8.",
                        "VernacExtend",
                        "295ed8193db9e0fc900e88537474c82260cb5c8a"
                    ]
                },
                {
                    "command": [
                        "inv H6.",
                        "VernacExtend",
                        "18148ecb90898142481b96ce8d75b495e98fc93a"
                    ]
                },
                {
                    "command": [
                        "rewrite H9.",
                        "VernacExtend",
                        "7e513e390abfc88b77648f4c54df1434c5ffa9d3"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "rewrite H2.",
                        "VernacExtend",
                        "c34b98a4ea7c987830199fe378bb7a145a0d652e"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "do_deref_loc_sound",
            "line_nb": 181,
            "steps": [
                {
                    "command": [
                        "unfold do_deref_loc; intros until v.",
                        "VernacExtend",
                        "51bdac6aeed4d5596d00adaa2113b3f2f605037f"
                    ]
                },
                {
                    "command": [
                        "destruct (access_mode ty) eqn:?; mydestr.",
                        "VernacExtend",
                        "12b7240923782f4a4420f08b7e2c8ac14cbc0e53"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exploit do_volatile_load_sound; eauto.",
                        "VernacExtend",
                        "178d2626c151905bbf26640d5796ebbb81716d45"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "eapply deref_loc_volatile; eauto.",
                        "VernacExtend",
                        "85e6a5100157608207a475f4263a59838da0d1a6"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "eapply deref_loc_value; eauto.",
                        "VernacExtend",
                        "51d8923c2fc5b19d27034e12d473b75839e99fde"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "eapply deref_loc_reference; eauto.",
                        "VernacExtend",
                        "9a2359ad3c2bfc69d80898c5b31edca0fbe23ca8"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "eapply deref_loc_copy; eauto.",
                        "VernacExtend",
                        "cd1c12264c7da12f4f7a9174d3a7f76ea5f0bae7"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "do_deref_loc_complete",
            "line_nb": 198,
            "steps": [
                {
                    "command": [
                        "unfold do_deref_loc; intros.",
                        "VernacExtend",
                        "f20475a139528347e110a46f66289f3abc4d3258"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "rewrite H1; rewrite H2; rewrite H3; auto.",
                        "VernacExtend",
                        "db14f9914b4f1f8f20c5af02e5aabbf7c03f57b0"
                    ]
                },
                {
                    "command": [
                        "rewrite H1; rewrite H2.",
                        "VernacExtend",
                        "8d018a8547fa22724706a4da5d7a7d5d3ce49c8e"
                    ]
                },
                {
                    "command": [
                        "apply do_volatile_load_complete; auto.",
                        "VernacExtend",
                        "f49abebd9592a79b866f171dfc1a90504e0e6022"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "do_assign_loc_sound",
            "line_nb": 212,
            "steps": [
                {
                    "command": [
                        "unfold do_assign_loc; intros until m'.",
                        "VernacExtend",
                        "3e61c45f5b7dd24561ee9c357dcf910dde98f5f1"
                    ]
                },
                {
                    "command": [
                        "destruct (access_mode ty) eqn:?; mydestr.",
                        "VernacExtend",
                        "12b7240923782f4a4420f08b7e2c8ac14cbc0e53"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exploit do_volatile_store_sound; eauto.",
                        "VernacExtend",
                        "c9b795d130695470f7698b4206d93fdf548c1464"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "eapply assign_loc_volatile; eauto.",
                        "VernacExtend",
                        "b3996732ff1facb91e497bc8a3af12e7ef9b3e53"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "eapply assign_loc_value; eauto.",
                        "VernacExtend",
                        "0ea323c62a3e2d80b50a68344159dfcd15775743"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "destruct v; mydestr.",
                        "VernacExtend",
                        "a5f1445037f9acf633a37886d38022095863db42"
                    ]
                },
                {
                    "command": [
                        "destruct a as [P [Q R]].",
                        "VernacExtend",
                        "ec633949f39c089b9f52b7a2cd7fe14ab63596de"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "eapply assign_loc_copy; eauto.",
                        "VernacExtend",
                        "704c1252e1345484b5fcebecb3cc0790f97a84c3"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "do_assign_loc_complete",
            "line_nb": 228,
            "steps": [
                {
                    "command": [
                        "unfold do_assign_loc; intros.",
                        "VernacExtend",
                        "75765c56f234ce94cee130d043d0d4d5c3fe4d66"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "rewrite H1; rewrite H2; rewrite H3; auto.",
                        "VernacExtend",
                        "db14f9914b4f1f8f20c5af02e5aabbf7c03f57b0"
                    ]
                },
                {
                    "command": [
                        "rewrite H1; rewrite H2.",
                        "VernacExtend",
                        "8d018a8547fa22724706a4da5d7a7d5d3ce49c8e"
                    ]
                },
                {
                    "command": [
                        "apply do_volatile_store_complete; auto.",
                        "VernacExtend",
                        "024d0fda83f00bb0fb77e08ef55ff133e77409ac"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "destruct (check_assign_copy ty b ofs b' ofs').",
                        "VernacExtend",
                        "1093770cce3d6571cc90c1fa3c4dac98b755264d"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "rewrite H5; rewrite H6; auto.",
                        "VernacExtend",
                        "618a47874fd2445696ebb225054d491ae363991b"
                    ]
                },
                {
                    "command": [
                        "elim n.",
                        "VernacExtend",
                        "c68f766a88bb5402d72ee6adaca953661a5d18b2"
                    ]
                },
                {
                    "command": [
                        "red; tauto.",
                        "VernacExtend",
                        "86096a8f01fc632f49d98392e9366840d4a279cc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "do_ef_external_complete",
            "line_nb": 351,
            "steps": [
                {
                    "command": [
                        "assert (SIZE: forall n, do_alloc_size (Vptrofs n) = Some n).",
                        "VernacExtend",
                        "be353dc4557d3b9272e5b1871a91b9299452138a"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold Vptrofs, do_alloc_size; intros; destruct Archi.ptr64 eqn:SF.",
                        "VernacExtend",
                        "f4cbc88e8ae8db35a7440d85b3b02cf071ae40ca"
                    ]
                },
                {
                    "command": [
                        "rewrite Ptrofs.of_int64_to_int64; auto.",
                        "VernacExtend",
                        "fe8ccc501ab2d8e1f100457409fe64f68dc773fc"
                    ]
                },
                {
                    "command": [
                        "rewrite Ptrofs.of_int_to_int; auto.",
                        "VernacExtend",
                        "923b9b631a8926ce990433215d2bf13190d0ecfc"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct ef; simpl in *.",
                        "VernacExtend",
                        "7ea6653f761ffb81a91a4716952679b88a9913f1"
                    ]
                },
                {
                    "command": [
                        "eapply do_external_function_complete; eauto.",
                        "VernacExtend",
                        "ea9c44bb8473d78d3476dfbfb1d93ffc98eb56a4"
                    ]
                },
                {
                    "command": [
                        "eapply do_external_function_complete; eauto.",
                        "VernacExtend",
                        "ea9c44bb8473d78d3476dfbfb1d93ffc98eb56a4"
                    ]
                },
                {
                    "command": [
                        "eapply do_external_function_complete; eauto.",
                        "VernacExtend",
                        "ea9c44bb8473d78d3476dfbfb1d93ffc98eb56a4"
                    ]
                },
                {
                    "command": [
                        "inv H; unfold do_ef_volatile_load.",
                        "VernacExtend",
                        "7911c23d72d143f73100263b7de4b06cc5b2a2c9"
                    ]
                },
                {
                    "command": [
                        "exploit do_volatile_load_complete; eauto.",
                        "VernacExtend",
                        "fb00bceefe9a346eeb9a1edbee5e55484ad352b7"
                    ]
                },
                {
                    "command": [
                        "intros EQ; rewrite EQ; auto.",
                        "VernacExtend",
                        "5ebac0108403f8a0d8ef3ebb0583ae24208d69b7"
                    ]
                },
                {
                    "command": [
                        "inv H; unfold do_ef_volatile_store.",
                        "VernacExtend",
                        "38bc36638611f4ad61156a4ab957ab4c302a203a"
                    ]
                },
                {
                    "command": [
                        "exploit do_volatile_store_complete; eauto.",
                        "VernacExtend",
                        "36dcc50103dcbe430be07310182984b5467fe09b"
                    ]
                },
                {
                    "command": [
                        "intros EQ; rewrite EQ; auto.",
                        "VernacExtend",
                        "5ebac0108403f8a0d8ef3ebb0583ae24208d69b7"
                    ]
                },
                {
                    "command": [
                        "inv H; unfold do_ef_malloc.",
                        "VernacExtend",
                        "6568994a4f61497e670cd9bb0cf06a92da060726"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "erewrite SIZE by eauto.",
                        "VernacExtend",
                        "8779a16ebbc97110ad04b2abb194c85363f80c02"
                    ]
                },
                {
                    "command": [
                        "rewrite H1, H2.",
                        "VernacExtend",
                        "0ce0ee884f848b2a2759f8abce9a0e685be27984"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "inv H; unfold do_ef_free.",
                        "VernacExtend",
                        "d8ef5e37f6f58bed863d58fadc9f15eb3414fcb3"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "erewrite SIZE by eauto.",
                        "VernacExtend",
                        "8779a16ebbc97110ad04b2abb194c85363f80c02"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true.",
                        "VernacExtend",
                        "b49135e183425368b4318af106711c28871bcc77"
                    ]
                },
                {
                    "command": [
                        "rewrite H3.",
                        "VernacExtend",
                        "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "inv H; unfold do_ef_memcpy.",
                        "VernacExtend",
                        "611af939a8a2db46a68458add661acf44b1631a6"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "rewrite Decidable_complete.",
                        "VernacExtend",
                        "9e3c184b776a875b45bf213393903782b06aacb9"
                    ]
                },
                {
                    "command": [
                        "rewrite H7; rewrite H8; auto.",
                        "VernacExtend",
                        "5b20f3bce0e577f2871e5e71eed0ec0015a77a36"
                    ]
                },
                {
                    "command": [
                        "red.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "inv H; unfold do_ef_annot.",
                        "VernacExtend",
                        "1fe26f1b488c9e0f59d065063c08b4a0a42d600c"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "inv H6.",
                        "VernacExtend",
                        "18148ecb90898142481b96ce8d75b495e98fc93a"
                    ]
                },
                {
                    "command": [
                        "inv H4.",
                        "VernacExtend",
                        "f5fbbd659e4642cab66975bb4756634e17e3a560"
                    ]
                },
                {
                    "command": [
                        "rewrite (list_eventval_of_val_complete _ _ _ H1).",
                        "VernacExtend",
                        "0a2dcebd7487e43418dd04df0b4434ffa2b3008c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "inv H; unfold do_ef_annot_val.",
                        "VernacExtend",
                        "6cc8eb235f2012b970ae9045b7a3d6784de8e7a7"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "inv H6.",
                        "VernacExtend",
                        "18148ecb90898142481b96ce8d75b495e98fc93a"
                    ]
                },
                {
                    "command": [
                        "inv H4.",
                        "VernacExtend",
                        "f5fbbd659e4642cab66975bb4756634e17e3a560"
                    ]
                },
                {
                    "command": [
                        "rewrite (eventval_of_val_complete _ _ _ H1).",
                        "VernacExtend",
                        "687a3f450ddcac3994bc634733c28aca1400cbdd"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "eapply do_inline_assembly_complete; eauto.",
                        "VernacExtend",
                        "af1f077df067523bb9b31062398caf8c2cc23ca7"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "imm_safe_t_imm_safe",
            "line_nb": 422,
            "steps": [
                {
                    "command": [
                        "induction 1.",
                        "VernacExtend",
                        "dfe896305621800fcbb03b32d51d497edbdf1dc5"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "eapply imm_safe_lred; eauto.",
                        "VernacExtend",
                        "aa03c1abf67c2d2d0eb467b0e8bb990c21eddd9e"
                    ]
                },
                {
                    "command": [
                        "eapply imm_safe_rred; eauto.",
                        "VernacExtend",
                        "42053057043f22b80c26ff942fa0cfb5584a092a"
                    ]
                },
                {
                    "command": [
                        "eapply imm_safe_callred; eauto.",
                        "VernacExtend",
                        "6ab1dd238e97b90dece80ecf3041a56850f5a67b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lred_invert",
            "line_nb": 432,
            "steps": [
                {
                    "command": [
                        "induction 1; red; auto.",
                        "VernacExtend",
                        "ed9f41615bd3a7a1f899921c704c3837692f1534"
                    ]
                },
                {
                    "command": [
                        "exists b; auto.",
                        "VernacExtend",
                        "2e71eac2fffee5e38189419c0aff6774b0942c8c"
                    ]
                },
                {
                    "command": [
                        "exists b; auto.",
                        "VernacExtend",
                        "2e71eac2fffee5e38189419c0aff6774b0942c8c"
                    ]
                },
                {
                    "command": [
                        "exists b; exists ofs; auto.",
                        "VernacExtend",
                        "f1cd3b4697c2c67e2ee8d46867f41a7992562c5e"
                    ]
                },
                {
                    "command": [
                        "exists b; exists ofs; split; auto.",
                        "VernacExtend",
                        "3055298f4a95556c74f97495e1ebf3c1ca686bc2"
                    ]
                },
                {
                    "command": [
                        "exists co, delta; auto.",
                        "VernacExtend",
                        "c65cd5453b0d813d37fea0e8d68790ba2dcddf71"
                    ]
                },
                {
                    "command": [
                        "exists b; exists ofs; split; auto.",
                        "VernacExtend",
                        "3055298f4a95556c74f97495e1ebf3c1ca686bc2"
                    ]
                },
                {
                    "command": [
                        "exists co; auto.",
                        "VernacExtend",
                        "7769c0e369428564dec82bc42deb571b70b442ca"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rred_invert",
            "line_nb": 442,
            "steps": [
                {
                    "command": [
                        "induction 1; intros; red; auto.",
                        "VernacExtend",
                        "71c0dadf41a0def4e359a4217e47dc8a58863a58"
                    ]
                },
                {
                    "command": [
                        "split; auto; exists t; exists v; exists w'; auto.",
                        "VernacExtend",
                        "25db403f99c0a3f38adc450185e2a3a6b1825b65"
                    ]
                },
                {
                    "command": [
                        "exists v; auto.",
                        "VernacExtend",
                        "863f124117e3794411b95ae7c6344e625907c1cb"
                    ]
                },
                {
                    "command": [
                        "exists v; auto.",
                        "VernacExtend",
                        "863f124117e3794411b95ae7c6344e625907c1cb"
                    ]
                },
                {
                    "command": [
                        "exists v; auto.",
                        "VernacExtend",
                        "863f124117e3794411b95ae7c6344e625907c1cb"
                    ]
                },
                {
                    "command": [
                        "exists true; auto.",
                        "VernacExtend",
                        "c9c0c36d931a79e7a23e2c53bb5bf5cbc45e93f6"
                    ]
                },
                {
                    "command": [
                        "exists false; auto.",
                        "VernacExtend",
                        "bee606723e33c2c74fb8bd973f917b55fa284799"
                    ]
                },
                {
                    "command": [
                        "exists true; auto.",
                        "VernacExtend",
                        "c9c0c36d931a79e7a23e2c53bb5bf5cbc45e93f6"
                    ]
                },
                {
                    "command": [
                        "exists false; auto.",
                        "VernacExtend",
                        "bee606723e33c2c74fb8bd973f917b55fa284799"
                    ]
                },
                {
                    "command": [
                        "exists b; auto.",
                        "VernacExtend",
                        "2e71eac2fffee5e38189419c0aff6774b0942c8c"
                    ]
                },
                {
                    "command": [
                        "exists v; exists m'; exists t; exists w'; auto.",
                        "VernacExtend",
                        "945d65061aabd9ed67d573dbd1a08280e1a998e1"
                    ]
                },
                {
                    "command": [
                        "exists t; exists v1; exists w'; auto.",
                        "VernacExtend",
                        "038ac41750799d424a902d194db0bdc3da66572c"
                    ]
                },
                {
                    "command": [
                        "exists t; exists v1; exists w'; auto.",
                        "VernacExtend",
                        "038ac41750799d424a902d194db0bdc3da66572c"
                    ]
                },
                {
                    "command": [
                        "exists v; auto.",
                        "VernacExtend",
                        "863f124117e3794411b95ae7c6344e625907c1cb"
                    ]
                },
                {
                    "command": [
                        "intros; exists vargs; exists t; exists vres; exists m'; exists w'; auto.",
                        "VernacExtend",
                        "5e10766ef77061644b6a2b9b779d6d01a15b15ae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "callred_invert",
            "line_nb": 459,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exists tyargs, tyres, cconv, fd, args; auto.",
                        "VernacExtend",
                        "44edcccf69c96e736b681a3aed42cf3cc37a6663"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invert_expr_context",
            "line_nb": 468,
            "steps": [
                {
                    "command": [
                        "apply context_contextlist_ind; intros; try (exploit H0; [eauto|intros]); simpl.",
                        "VernacExtend",
                        "80cfd10622ac7cc4a679adab33f37795a4ae377e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "destruct (C a); auto; contradiction.",
                        "VernacExtend",
                        "94a25cbefd95ca28d484826b68d2d616f602e552"
                    ]
                },
                {
                    "command": [
                        "destruct (C a); auto; contradiction.",
                        "VernacExtend",
                        "94a25cbefd95ca28d484826b68d2d616f602e552"
                    ]
                },
                {
                    "command": [
                        "destruct (C a); auto; contradiction.",
                        "VernacExtend",
                        "94a25cbefd95ca28d484826b68d2d616f602e552"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "destruct (C a); auto; contradiction.",
                        "VernacExtend",
                        "94a25cbefd95ca28d484826b68d2d616f602e552"
                    ]
                },
                {
                    "command": [
                        "destruct (C a); auto; contradiction.",
                        "VernacExtend",
                        "94a25cbefd95ca28d484826b68d2d616f602e552"
                    ]
                },
                {
                    "command": [
                        "destruct e1; auto; destruct (C a); auto; contradiction.",
                        "VernacExtend",
                        "d2c5de6fdb180894723152d072fec21c44abb0ed"
                    ]
                },
                {
                    "command": [
                        "destruct (C a); auto; contradiction.",
                        "VernacExtend",
                        "94a25cbefd95ca28d484826b68d2d616f602e552"
                    ]
                },
                {
                    "command": [
                        "destruct (C a); auto; contradiction.",
                        "VernacExtend",
                        "94a25cbefd95ca28d484826b68d2d616f602e552"
                    ]
                },
                {
                    "command": [
                        "destruct (C a); auto; contradiction.",
                        "VernacExtend",
                        "94a25cbefd95ca28d484826b68d2d616f602e552"
                    ]
                },
                {
                    "command": [
                        "destruct (C a); auto; contradiction.",
                        "VernacExtend",
                        "94a25cbefd95ca28d484826b68d2d616f602e552"
                    ]
                },
                {
                    "command": [
                        "destruct (C a); auto; contradiction.",
                        "VernacExtend",
                        "94a25cbefd95ca28d484826b68d2d616f602e552"
                    ]
                },
                {
                    "command": [
                        "destruct e1; auto; destruct (C a); auto; contradiction.",
                        "VernacExtend",
                        "d2c5de6fdb180894723152d072fec21c44abb0ed"
                    ]
                },
                {
                    "command": [
                        "destruct (C a); auto; contradiction.",
                        "VernacExtend",
                        "94a25cbefd95ca28d484826b68d2d616f602e552"
                    ]
                },
                {
                    "command": [
                        "destruct e1; auto; destruct (C a); auto; contradiction.",
                        "VernacExtend",
                        "d2c5de6fdb180894723152d072fec21c44abb0ed"
                    ]
                },
                {
                    "command": [
                        "destruct (C a); auto; contradiction.",
                        "VernacExtend",
                        "94a25cbefd95ca28d484826b68d2d616f602e552"
                    ]
                },
                {
                    "command": [
                        "destruct (C a); auto; contradiction.",
                        "VernacExtend",
                        "94a25cbefd95ca28d484826b68d2d616f602e552"
                    ]
                },
                {
                    "command": [
                        "destruct e1; auto.",
                        "VernacExtend",
                        "9a8628f92899f36a8c150b74ba2c1acd8076e6a1"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim (H0 a m); auto.",
                        "VernacExtend",
                        "ab2a5009712ced699bb7ae8b06bfc92dc2439d09"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim (H0 a m); auto.",
                        "VernacExtend",
                        "ab2a5009712ced699bb7ae8b06bfc92dc2439d09"
                    ]
                },
                {
                    "command": [
                        "destruct (C a); auto; contradiction.",
                        "VernacExtend",
                        "94a25cbefd95ca28d484826b68d2d616f602e552"
                    ]
                },
                {
                    "command": [
                        "destruct (C a); auto; contradiction.",
                        "VernacExtend",
                        "94a25cbefd95ca28d484826b68d2d616f602e552"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct (C a); auto.",
                        "VernacExtend",
                        "49d07db92880d8a6e6ab7ea2b6c023ce8c8e00aa"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct e1; auto.",
                        "VernacExtend",
                        "9a8628f92899f36a8c150b74ba2c1acd8076e6a1"
                    ]
                },
                {
                    "command": [
                        "elim (H0 a m); auto.",
                        "VernacExtend",
                        "ab2a5009712ced699bb7ae8b06bfc92dc2439d09"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "imm_safe_t_inv",
            "line_nb": 501,
            "steps": [
                {
                    "command": [
                        "destruct invert_expr_context as [A B].",
                        "VernacExtend",
                        "f62efbb9f1213a2bdece3df3a285816f33115e41"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "assert (invert_expr_prop (C l) m).",
                        "VernacExtend",
                        "8e8b06ea9e6432ff9a527757cac330d7a548d51d"
                    ]
                },
                {
                    "command": [
                        "eapply A; eauto.",
                        "VernacExtend",
                        "9b924320e329fc6ac1e04403134f32fc478929d0"
                    ]
                },
                {
                    "command": [
                        "eapply lred_invert; eauto.",
                        "VernacExtend",
                        "aabd0b22d8ca390de6dd26af4525cb8a417c95ca"
                    ]
                },
                {
                    "command": [
                        "red in H.",
                        "VernacExtend",
                        "a4b4bf9e03eb87c8fa06c84cfda5cac7b43f2be8"
                    ]
                },
                {
                    "command": [
                        "destruct (C l); auto; contradiction.",
                        "VernacExtend",
                        "c7a60f2b6438783a42975ab50421b4d058f00f04"
                    ]
                },
                {
                    "command": [
                        "assert (invert_expr_prop (C r) m).",
                        "VernacExtend",
                        "fbdfc1bc1a6429ee14e51df92ac5c6e2a30f0981"
                    ]
                },
                {
                    "command": [
                        "eapply A; eauto.",
                        "VernacExtend",
                        "9b924320e329fc6ac1e04403134f32fc478929d0"
                    ]
                },
                {
                    "command": [
                        "eapply rred_invert; eauto.",
                        "VernacExtend",
                        "5b0165802b3c474bbdce4ee2a7a629115e497c3b"
                    ]
                },
                {
                    "command": [
                        "red in H.",
                        "VernacExtend",
                        "a4b4bf9e03eb87c8fa06c84cfda5cac7b43f2be8"
                    ]
                },
                {
                    "command": [
                        "destruct (C r); auto; contradiction.",
                        "VernacExtend",
                        "76389b61157530a750aef26b653e8d282790ca0f"
                    ]
                },
                {
                    "command": [
                        "assert (invert_expr_prop (C r) m).",
                        "VernacExtend",
                        "fbdfc1bc1a6429ee14e51df92ac5c6e2a30f0981"
                    ]
                },
                {
                    "command": [
                        "eapply A; eauto.",
                        "VernacExtend",
                        "9b924320e329fc6ac1e04403134f32fc478929d0"
                    ]
                },
                {
                    "command": [
                        "eapply callred_invert; eauto.",
                        "VernacExtend",
                        "68e5731d7dd08e30265510654ba59c5a6db60955"
                    ]
                },
                {
                    "command": [
                        "red in H.",
                        "VernacExtend",
                        "a4b4bf9e03eb87c8fa06c84cfda5cac7b43f2be8"
                    ]
                },
                {
                    "command": [
                        "destruct (C r); auto; contradiction.",
                        "VernacExtend",
                        "76389b61157530a750aef26b653e8d282790ca0f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sem_cast_arguments_sound",
            "line_nb": 536,
            "steps": [
                {
                    "command": [
                        "induction rargs; simpl; intros.",
                        "VernacExtend",
                        "1e7a0b3bc103013d46327e2b6ebf93807743d061"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "destruct tyargs; simpl in H0; inv H0.",
                        "VernacExtend",
                        "af7f65f6bf45c9298f5279ef13567bb9cec478db"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "monadInv.",
                        "VernacExtend",
                        "d73c4df55978a3f582b7b97922bbf9a137853027"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "simpl in H0.",
                        "VernacExtend",
                        "a4a6a8421870dbf7255f8d031744eec32f12a941"
                    ]
                },
                {
                    "command": [
                        "destruct p as [v1 t1].",
                        "VernacExtend",
                        "dc1b9111ffe1b2b3362fe29651ad3041780b3909"
                    ]
                },
                {
                    "command": [
                        "destruct tyargs; try congruence.",
                        "VernacExtend",
                        "f85f2a48580b4d7be0f69879170ae3e515d1f4ba"
                    ]
                },
                {
                    "command": [
                        "monadInv.",
                        "VernacExtend",
                        "d73c4df55978a3f582b7b97922bbf9a137853027"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "rewrite (is_val_inv _ _ _ Heqo).",
                        "VernacExtend",
                        "83a2d61bfd14d8c9cdb98893a35d2e262f0c1491"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sem_cast_arguments_complete",
            "line_nb": 553,
            "steps": [
                {
                    "command": [
                        "induction 1.",
                        "VernacExtend",
                        "dfe896305621800fcbb03b32d51d497edbdf1dc5"
                    ]
                },
                {
                    "command": [
                        "exists (@nil (val * type)); auto.",
                        "VernacExtend",
                        "5b2a41e1e68e5bcdf2056bac49196d409d40a7d7"
                    ]
                },
                {
                    "command": [
                        "destruct IHcast_arguments as [vtl [A B]].",
                        "VernacExtend",
                        "47a0e42c466d4a7e0c5c47f1ab42660c4d5fab41"
                    ]
                },
                {
                    "command": [
                        "exists ((v, ty) :: vtl); simpl.",
                        "VernacExtend",
                        "9d9ccd80e7b728e8c4b451b30ed3e7ceaa3f9d57"
                    ]
                },
                {
                    "command": [
                        "rewrite A; rewrite B; rewrite H.",
                        "VernacExtend",
                        "6316ac89b0bf01b05b9e8ee62f80cc7ae0f1fa09"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "topred_ok",
            "line_nb": 561,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold topred; split; simpl; intros.",
                        "VernacExtend",
                        "7727809119d98751b7f3377530f3776d945aece5"
                    ]
                },
                {
                    "command": [
                        "destruct H0; try contradiction.",
                        "VernacExtend",
                        "ced5a61f27ab7d2ddde8683b150fe0e24118db92"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "exists a; exists k; auto.",
                        "VernacExtend",
                        "37cc0c5a30defef98a7ff046127b06bb3e2e2ce2"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "stuck_ok",
            "line_nb": 569,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold stuck; split; simpl; intros.",
                        "VernacExtend",
                        "62a60926fb028aff51fe3ea90cd9a92706057fa6"
                    ]
                },
                {
                    "command": [
                        "destruct H0; try contradiction.",
                        "VernacExtend",
                        "ced5a61f27ab7d2ddde8683b150fe0e24118db92"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "exists a; exists k; intuition.",
                        "VernacExtend",
                        "ff59016d68fd66cb765853880daceb8cef17394f"
                    ]
                },
                {
                    "command": [
                        "red.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "destruct k; auto.",
                        "VernacExtend",
                        "943c329a25d961e7ca9cede3777de77116d51f41"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_invert_ok",
            "line_nb": 586,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply stuck_ok.",
                        "VernacExtend",
                        "e1c579782d3a84b5eaaf900ea76cd1107cbf3359"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "exploit imm_safe_t_inv; eauto.",
                        "VernacExtend",
                        "48a1ceeb801da242af46db8031320ecfaf0b241c"
                    ]
                },
                {
                    "command": [
                        "destruct a; auto.",
                        "VernacExtend",
                        "7f3d8b3039d2691d4be2748b78f9d8a9a90a4b44"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "incontext_ok",
            "line_nb": 593,
            "steps": [
                {
                    "command": [
                        "unfold reducts_ok, incontext; intros.",
                        "VernacExtend",
                        "49ea85aae67ad0b0ffa710a1dce113a764d27727"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "exploit list_in_map_inv; eauto.",
                        "VernacExtend",
                        "235c0bd1949d253ef4954ae1790ac9b7759ffe85"
                    ]
                },
                {
                    "command": [
                        "intros [[C1 rd1] [P Q]].",
                        "VernacExtend",
                        "a71e5cf10ebf5c3dc97cdde456a8831cdba4e470"
                    ]
                },
                {
                    "command": [
                        "inv P.",
                        "VernacExtend",
                        "9db9e551d407fb52f890fa8275c215698a67094e"
                    ]
                },
                {
                    "command": [
                        "exploit H; eauto.",
                        "VernacExtend",
                        "e4042976bceeb1e0a2b61f377ada9badc4c146f3"
                    ]
                },
                {
                    "command": [
                        "intros [a'' [k'' [U [V W]]]].",
                        "VernacExtend",
                        "7eaba5190470249f79afc05258970c4b702421de"
                    ]
                },
                {
                    "command": [
                        "exists a''; exists k''.",
                        "VernacExtend",
                        "3d7cb486152ffe4d28f724ec7879343059799c72"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "eapply context_compose; eauto.",
                        "VernacExtend",
                        "b02d0dba291c194d83ab6e0059a0279305142f48"
                    ]
                },
                {
                    "command": [
                        "rewrite V; auto.",
                        "VernacExtend",
                        "cdbf39212179c2d69106e0d4ab294d0cc7e0e438"
                    ]
                },
                {
                    "command": [
                        "destruct res; simpl in H4; try congruence.",
                        "VernacExtend",
                        "f134f81ee5b76a24d7b640affe6d05c87618ebe3"
                    ]
                },
                {
                    "command": [
                        "destruct k'; intuition congruence.",
                        "VernacExtend",
                        "2f242a843e289510aad8595f1e766a4072252cde"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "incontext2_ok",
            "line_nb": 609,
            "steps": [
                {
                    "command": [
                        "unfold reducts_ok, incontext2, incontext; intros.",
                        "VernacExtend",
                        "84ca2263b7e94f137d3fbd84d8cf7276e729acc8"
                    ]
                },
                {
                    "command": [
                        "destruct H; destruct H0; split; intros.",
                        "VernacExtend",
                        "7031a030bd7c22efdda2dd73c7483c9c022a7ca6"
                    ]
                },
                {
                    "command": [
                        "destruct (in_app_or _ _ _ H8).",
                        "VernacExtend",
                        "512260a43c54ac3b8914be518024f194500c908a"
                    ]
                },
                {
                    "command": [
                        "exploit list_in_map_inv; eauto.",
                        "VernacExtend",
                        "235c0bd1949d253ef4954ae1790ac9b7759ffe85"
                    ]
                },
                {
                    "command": [
                        "intros [[C' rd'] [P Q]].",
                        "VernacExtend",
                        "0acf54498b0c65786f81c02c2014d674296b64fe"
                    ]
                },
                {
                    "command": [
                        "inv P.",
                        "VernacExtend",
                        "9db9e551d407fb52f890fa8275c215698a67094e"
                    ]
                },
                {
                    "command": [
                        "exploit H; eauto.",
                        "VernacExtend",
                        "e4042976bceeb1e0a2b61f377ada9badc4c146f3"
                    ]
                },
                {
                    "command": [
                        "intros [a'' [k'' [U [V W]]]].",
                        "VernacExtend",
                        "7eaba5190470249f79afc05258970c4b702421de"
                    ]
                },
                {
                    "command": [
                        "exists a''; exists k''.",
                        "VernacExtend",
                        "3d7cb486152ffe4d28f724ec7879343059799c72"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "eapply context_compose; eauto.",
                        "VernacExtend",
                        "b02d0dba291c194d83ab6e0059a0279305142f48"
                    ]
                },
                {
                    "command": [
                        "rewrite V; auto.",
                        "VernacExtend",
                        "cdbf39212179c2d69106e0d4ab294d0cc7e0e438"
                    ]
                },
                {
                    "command": [
                        "exploit list_in_map_inv; eauto.",
                        "VernacExtend",
                        "235c0bd1949d253ef4954ae1790ac9b7759ffe85"
                    ]
                },
                {
                    "command": [
                        "intros [[C' rd'] [P Q]].",
                        "VernacExtend",
                        "0acf54498b0c65786f81c02c2014d674296b64fe"
                    ]
                },
                {
                    "command": [
                        "inv P.",
                        "VernacExtend",
                        "9db9e551d407fb52f890fa8275c215698a67094e"
                    ]
                },
                {
                    "command": [
                        "exploit H0; eauto.",
                        "VernacExtend",
                        "e2bb62237be4af6f3df33a06be0bda055849b007"
                    ]
                },
                {
                    "command": [
                        "intros [a'' [k'' [U [V W]]]].",
                        "VernacExtend",
                        "7eaba5190470249f79afc05258970c4b702421de"
                    ]
                },
                {
                    "command": [
                        "exists a''; exists k''.",
                        "VernacExtend",
                        "3d7cb486152ffe4d28f724ec7879343059799c72"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "eapply context_compose; eauto.",
                        "VernacExtend",
                        "b02d0dba291c194d83ab6e0059a0279305142f48"
                    ]
                },
                {
                    "command": [
                        "rewrite H2; rewrite V; auto.",
                        "VernacExtend",
                        "eae1b183405f36931e739890bdeeaf86e398b0e2"
                    ]
                },
                {
                    "command": [
                        "destruct res1; simpl in H8; try congruence.",
                        "VernacExtend",
                        "9cba53925c35063fcc084b3fada482af5286c549"
                    ]
                },
                {
                    "command": [
                        "destruct res2; simpl in H8; try congruence.",
                        "VernacExtend",
                        "3c5b40df729dee0b862ee7f392588ca13a6a7324"
                    ]
                },
                {
                    "command": [
                        "destruct H5.",
                        "VernacExtend",
                        "ed9c2c1b0fd20c14ad03acc37362cc2c315199ed"
                    ]
                },
                {
                    "command": [
                        "destruct k1; intuition congruence.",
                        "VernacExtend",
                        "46f813c71d67d3393543eaecf2cdbdb9eda895f9"
                    ]
                },
                {
                    "command": [
                        "destruct k2; intuition congruence.",
                        "VernacExtend",
                        "4d3b1aba57bf31197352991de4c3fb04114b9d3d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "incontext_list_ok",
            "line_nb": 637,
            "steps": [
                {
                    "command": [
                        "unfold reducts_ok, incontext; intros.",
                        "VernacExtend",
                        "49ea85aae67ad0b0ffa710a1dce113a764d27727"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "exploit list_in_map_inv; eauto.",
                        "VernacExtend",
                        "235c0bd1949d253ef4954ae1790ac9b7759ffe85"
                    ]
                },
                {
                    "command": [
                        "intros [[C1 rd1] [P Q]].",
                        "VernacExtend",
                        "a71e5cf10ebf5c3dc97cdde456a8831cdba4e470"
                    ]
                },
                {
                    "command": [
                        "inv P.",
                        "VernacExtend",
                        "9db9e551d407fb52f890fa8275c215698a67094e"
                    ]
                },
                {
                    "command": [
                        "exploit H; eauto.",
                        "VernacExtend",
                        "e4042976bceeb1e0a2b61f377ada9badc4c146f3"
                    ]
                },
                {
                    "command": [
                        "intros [a'' [k'' [U [V W]]]].",
                        "VernacExtend",
                        "7eaba5190470249f79afc05258970c4b702421de"
                    ]
                },
                {
                    "command": [
                        "exists a''; exists k''.",
                        "VernacExtend",
                        "3d7cb486152ffe4d28f724ec7879343059799c72"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "rewrite V; auto.",
                        "VernacExtend",
                        "cdbf39212179c2d69106e0d4ab294d0cc7e0e438"
                    ]
                },
                {
                    "command": [
                        "destruct res; simpl in H2.",
                        "VernacExtend",
                        "80835cb5f604f229f83dd4bcc802d5de3b1d3f2b"
                    ]
                },
                {
                    "command": [
                        "elim H1; auto.",
                        "VernacExtend",
                        "d50026b5dc31929f05ffbd310861b147378ba238"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "incontext2_list_ok",
            "line_nb": 654,
            "steps": [
                {
                    "command": [
                        "unfold reducts_ok, incontext2, incontext; intros.",
                        "VernacExtend",
                        "84ca2263b7e94f137d3fbd84d8cf7276e729acc8"
                    ]
                },
                {
                    "command": [
                        "destruct H; destruct H0; split; intros.",
                        "VernacExtend",
                        "7031a030bd7c22efdda2dd73c7483c9c022a7ca6"
                    ]
                },
                {
                    "command": [
                        "destruct (in_app_or _ _ _ H4).",
                        "VernacExtend",
                        "97bad3e88b13eb1b809fd09da67680824c0680fa"
                    ]
                },
                {
                    "command": [
                        "exploit list_in_map_inv; eauto.",
                        "VernacExtend",
                        "235c0bd1949d253ef4954ae1790ac9b7759ffe85"
                    ]
                },
                {
                    "command": [
                        "intros [[C' rd'] [P Q]].",
                        "VernacExtend",
                        "0acf54498b0c65786f81c02c2014d674296b64fe"
                    ]
                },
                {
                    "command": [
                        "inv P.",
                        "VernacExtend",
                        "9db9e551d407fb52f890fa8275c215698a67094e"
                    ]
                },
                {
                    "command": [
                        "exploit H; eauto.",
                        "VernacExtend",
                        "e4042976bceeb1e0a2b61f377ada9badc4c146f3"
                    ]
                },
                {
                    "command": [
                        "intros [a'' [k'' [U [V W]]]].",
                        "VernacExtend",
                        "7eaba5190470249f79afc05258970c4b702421de"
                    ]
                },
                {
                    "command": [
                        "exists a''; exists k''.",
                        "VernacExtend",
                        "3d7cb486152ffe4d28f724ec7879343059799c72"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "rewrite V; auto.",
                        "VernacExtend",
                        "cdbf39212179c2d69106e0d4ab294d0cc7e0e438"
                    ]
                },
                {
                    "command": [
                        "exploit list_in_map_inv; eauto.",
                        "VernacExtend",
                        "235c0bd1949d253ef4954ae1790ac9b7759ffe85"
                    ]
                },
                {
                    "command": [
                        "intros [[C' rd'] [P Q]].",
                        "VernacExtend",
                        "0acf54498b0c65786f81c02c2014d674296b64fe"
                    ]
                },
                {
                    "command": [
                        "inv P.",
                        "VernacExtend",
                        "9db9e551d407fb52f890fa8275c215698a67094e"
                    ]
                },
                {
                    "command": [
                        "exploit H0; eauto.",
                        "VernacExtend",
                        "e2bb62237be4af6f3df33a06be0bda055849b007"
                    ]
                },
                {
                    "command": [
                        "intros [a'' [k'' [U [V W]]]].",
                        "VernacExtend",
                        "7eaba5190470249f79afc05258970c4b702421de"
                    ]
                },
                {
                    "command": [
                        "exists a''; exists k''.",
                        "VernacExtend",
                        "3d7cb486152ffe4d28f724ec7879343059799c72"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "rewrite V; auto.",
                        "VernacExtend",
                        "cdbf39212179c2d69106e0d4ab294d0cc7e0e438"
                    ]
                },
                {
                    "command": [
                        "destruct res1; simpl in H4; try congruence.",
                        "VernacExtend",
                        "08d9e5ee3bb3da9c34b6731f2112741641fb446e"
                    ]
                },
                {
                    "command": [
                        "destruct res2; simpl in H4; try congruence.",
                        "VernacExtend",
                        "95023442ca88c9734b7190e0f31e6fa4e0602325"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "incontext2_list_ok'",
            "line_nb": 680,
            "steps": [
                {
                    "command": [
                        "unfold reducts_ok, list_reducts_ok, incontext2, incontext; intros.",
                        "VernacExtend",
                        "bb3d4e8527116c7dfa08ad440d8925d443dcb49e"
                    ]
                },
                {
                    "command": [
                        "destruct H; destruct H0.",
                        "VernacExtend",
                        "38ce24e768d236828eb7ecf6275c249693553750"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "destruct (in_app_or _ _ _ H3).",
                        "VernacExtend",
                        "b345eac1736ac25cc077937b8398fb49ffa76196"
                    ]
                },
                {
                    "command": [
                        "exploit list_in_map_inv; eauto.",
                        "VernacExtend",
                        "235c0bd1949d253ef4954ae1790ac9b7759ffe85"
                    ]
                },
                {
                    "command": [
                        "intros [[C' rd'] [P Q]].",
                        "VernacExtend",
                        "0acf54498b0c65786f81c02c2014d674296b64fe"
                    ]
                },
                {
                    "command": [
                        "inv P.",
                        "VernacExtend",
                        "9db9e551d407fb52f890fa8275c215698a67094e"
                    ]
                },
                {
                    "command": [
                        "exploit H; eauto.",
                        "VernacExtend",
                        "e4042976bceeb1e0a2b61f377ada9badc4c146f3"
                    ]
                },
                {
                    "command": [
                        "intros [a'' [k'' [U [V W]]]].",
                        "VernacExtend",
                        "7eaba5190470249f79afc05258970c4b702421de"
                    ]
                },
                {
                    "command": [
                        "exists a''; exists k''.",
                        "VernacExtend",
                        "3d7cb486152ffe4d28f724ec7879343059799c72"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "rewrite V; auto.",
                        "VernacExtend",
                        "cdbf39212179c2d69106e0d4ab294d0cc7e0e438"
                    ]
                },
                {
                    "command": [
                        "exploit list_in_map_inv; eauto.",
                        "VernacExtend",
                        "235c0bd1949d253ef4954ae1790ac9b7759ffe85"
                    ]
                },
                {
                    "command": [
                        "intros [[C' rd'] [P Q]].",
                        "VernacExtend",
                        "0acf54498b0c65786f81c02c2014d674296b64fe"
                    ]
                },
                {
                    "command": [
                        "inv P.",
                        "VernacExtend",
                        "9db9e551d407fb52f890fa8275c215698a67094e"
                    ]
                },
                {
                    "command": [
                        "exploit H0; eauto.",
                        "VernacExtend",
                        "e2bb62237be4af6f3df33a06be0bda055849b007"
                    ]
                },
                {
                    "command": [
                        "intros [a'' [k'' [U [V W]]]].",
                        "VernacExtend",
                        "7eaba5190470249f79afc05258970c4b702421de"
                    ]
                },
                {
                    "command": [
                        "exists a''; exists k''.",
                        "VernacExtend",
                        "3d7cb486152ffe4d28f724ec7879343059799c72"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "rewrite V; auto.",
                        "VernacExtend",
                        "cdbf39212179c2d69106e0d4ab294d0cc7e0e438"
                    ]
                },
                {
                    "command": [
                        "destruct res1; simpl in H3; try congruence.",
                        "VernacExtend",
                        "e27541ad790809ae06ae1b92976a96a538f01683"
                    ]
                },
                {
                    "command": [
                        "destruct res2; simpl in H3; try congruence.",
                        "VernacExtend",
                        "3b9e2cf3349604b8d2d45e4b92b084dbca719cd3"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct (is_val a1).",
                        "VernacExtend",
                        "2fb4729660aae6a33309e538bc139670b06f099b"
                    ]
                },
                {
                    "command": [
                        "destruct (is_val_list a2).",
                        "VernacExtend",
                        "4c25d1782509596608d4d5d0ca1f23d204327ccf"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "intuition congruence.",
                        "VernacExtend",
                        "2cba3542847e3f4ea52f3f62375adc6e8f8f04bc"
                    ]
                },
                {
                    "command": [
                        "intuition congruence.",
                        "VernacExtend",
                        "2cba3542847e3f4ea52f3f62375adc6e8f8f04bc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_val_list_all_values",
            "line_nb": 712,
            "steps": [
                {
                    "command": [
                        "induction al; simpl; intros.",
                        "VernacExtend",
                        "2458ad1ef33fcb3c375c382d6021431a548022f5"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "destruct (is_val r1) as [[v ty]|] eqn:?; try discriminate.",
                        "VernacExtend",
                        "8091c89096bc8334f5ef75c7ed3d3272d56db757"
                    ]
                },
                {
                    "command": [
                        "destruct (is_val_list al) as [vtl'|] eqn:?; try discriminate.",
                        "VernacExtend",
                        "1f9dbc6162476d4becbd3a1b3a308e23fd37d36a"
                    ]
                },
                {
                    "command": [
                        "rewrite (is_val_inv _ _ _ Heqo).",
                        "VernacExtend",
                        "83a2d61bfd14d8c9cdb98893a35d2e262f0c1491"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "step_exprlist_val_list",
            "line_nb": 989,
            "steps": [
                {
                    "command": [
                        "induction al; simpl; intros.",
                        "VernacExtend",
                        "2458ad1ef33fcb3c375c382d6021431a548022f5"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "destruct (is_val r1) as [[v1 ty1]|] eqn:?; try congruence.",
                        "VernacExtend",
                        "93659c5674b0aae156c21c97abd737048bafdbf0"
                    ]
                },
                {
                    "command": [
                        "destruct (is_val_list al) eqn:?; try congruence.",
                        "VernacExtend",
                        "19194d764ddb36eae55c97a2d556bb8ade2ed795"
                    ]
                },
                {
                    "command": [
                        "rewrite (is_val_inv _ _ _ Heqo).",
                        "VernacExtend",
                        "83a2d61bfd14d8c9cdb98893a35d2e262f0c1491"
                    ]
                },
                {
                    "command": [
                        "rewrite IHal.",
                        "VernacExtend",
                        "bf398502453228dad511ef6db0be233445fc274d"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lred_topred",
            "line_nb": 999,
            "steps": [
                {
                    "command": [
                        "induction 1; simpl.",
                        "VernacExtend",
                        "7a487009c144d86c422c5127aa0fc0ff1707bb8b"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "rewrite dec_eq_true.",
                        "VernacExtend",
                        "28b046c22f8f69c0651cbac642dd4f2013af7847"
                    ]
                },
                {
                    "command": [
                        "econstructor; eauto.",
                        "VernacExtend",
                        "faa93781fb8bbf289e651728c4588af1c4169d34"
                    ]
                },
                {
                    "command": [
                        "rewrite H; rewrite H0.",
                        "VernacExtend",
                        "cadacb31556a02adbe2c6bc962279414f9ba19d0"
                    ]
                },
                {
                    "command": [
                        "econstructor; eauto.",
                        "VernacExtend",
                        "faa93781fb8bbf289e651728c4588af1c4169d34"
                    ]
                },
                {
                    "command": [
                        "econstructor; eauto.",
                        "VernacExtend",
                        "faa93781fb8bbf289e651728c4588af1c4169d34"
                    ]
                },
                {
                    "command": [
                        "rewrite H, H0; econstructor; eauto.",
                        "VernacExtend",
                        "03b5a18c2c6d3cc7ceb575b2d0e4a11ba85e31e2"
                    ]
                },
                {
                    "command": [
                        "rewrite H; econstructor; eauto.",
                        "VernacExtend",
                        "d2c111590b6e7e053bbfc0b99ac4c3220d80b201"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rred_topred",
            "line_nb": 1010,
            "steps": [
                {
                    "command": [
                        "induction 1; simpl; intros.",
                        "VernacExtend",
                        "34c415c4beb6a44207941dd3a1249a87d73af3a3"
                    ]
                },
                {
                    "command": [
                        "rewrite dec_eq_true.",
                        "VernacExtend",
                        "28b046c22f8f69c0651cbac642dd4f2013af7847"
                    ]
                },
                {
                    "command": [
                        "rewrite (do_deref_loc_complete _ _ _ _ _ _ _ _ H H0).",
                        "VernacExtend",
                        "f0cdb535228ec9ac0f01bc1ba684511629fa724d"
                    ]
                },
                {
                    "command": [
                        "econstructor; eauto.",
                        "VernacExtend",
                        "faa93781fb8bbf289e651728c4588af1c4169d34"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "econstructor; eauto.",
                        "VernacExtend",
                        "faa93781fb8bbf289e651728c4588af1c4169d34"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "rewrite H; econstructor; eauto.",
                        "VernacExtend",
                        "d2c111590b6e7e053bbfc0b99ac4c3220d80b201"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "rewrite H; econstructor; eauto.",
                        "VernacExtend",
                        "d2c111590b6e7e053bbfc0b99ac4c3220d80b201"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "rewrite H; econstructor; eauto.",
                        "VernacExtend",
                        "d2c111590b6e7e053bbfc0b99ac4c3220d80b201"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "rewrite H; econstructor; eauto.",
                        "VernacExtend",
                        "d2c111590b6e7e053bbfc0b99ac4c3220d80b201"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "rewrite H; econstructor; eauto.",
                        "VernacExtend",
                        "d2c111590b6e7e053bbfc0b99ac4c3220d80b201"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "rewrite H; econstructor; eauto.",
                        "VernacExtend",
                        "d2c111590b6e7e053bbfc0b99ac4c3220d80b201"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "rewrite H; econstructor; eauto.",
                        "VernacExtend",
                        "d2c111590b6e7e053bbfc0b99ac4c3220d80b201"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "rewrite H; econstructor; eauto.",
                        "VernacExtend",
                        "d2c111590b6e7e053bbfc0b99ac4c3220d80b201"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "econstructor; eauto.",
                        "VernacExtend",
                        "faa93781fb8bbf289e651728c4588af1c4169d34"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "econstructor; eauto.",
                        "VernacExtend",
                        "faa93781fb8bbf289e651728c4588af1c4169d34"
                    ]
                },
                {
                    "command": [
                        "rewrite dec_eq_true.",
                        "VernacExtend",
                        "28b046c22f8f69c0651cbac642dd4f2013af7847"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "rewrite (do_assign_loc_complete _ _ _ _ _ _ _ _ _ H0 H1).",
                        "VernacExtend",
                        "399e0f3c7957c8b624b7bb9a9cc60b543d3c3fe4"
                    ]
                },
                {
                    "command": [
                        "econstructor; eauto.",
                        "VernacExtend",
                        "faa93781fb8bbf289e651728c4588af1c4169d34"
                    ]
                },
                {
                    "command": [
                        "rewrite dec_eq_true.",
                        "VernacExtend",
                        "28b046c22f8f69c0651cbac642dd4f2013af7847"
                    ]
                },
                {
                    "command": [
                        "rewrite (do_deref_loc_complete _ _ _ _ _ _ _ _ H H0).",
                        "VernacExtend",
                        "f0cdb535228ec9ac0f01bc1ba684511629fa724d"
                    ]
                },
                {
                    "command": [
                        "econstructor; eauto.",
                        "VernacExtend",
                        "faa93781fb8bbf289e651728c4588af1c4169d34"
                    ]
                },
                {
                    "command": [
                        "rewrite dec_eq_true.",
                        "VernacExtend",
                        "28b046c22f8f69c0651cbac642dd4f2013af7847"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "rewrite (do_deref_loc_complete _ _ _ _ _ _ _ _ H H1).",
                        "VernacExtend",
                        "3335681316a9eb82163a49f01294aec3ad06dd29"
                    ]
                },
                {
                    "command": [
                        "econstructor; eauto.",
                        "VernacExtend",
                        "faa93781fb8bbf289e651728c4588af1c4169d34"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "rewrite dec_eq_true.",
                        "VernacExtend",
                        "28b046c22f8f69c0651cbac642dd4f2013af7847"
                    ]
                },
                {
                    "command": [
                        "econstructor; eauto.",
                        "VernacExtend",
                        "faa93781fb8bbf289e651728c4588af1c4169d34"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "rewrite H; econstructor; eauto.",
                        "VernacExtend",
                        "d2c111590b6e7e053bbfc0b99ac4c3220d80b201"
                    ]
                },
                {
                    "command": [
                        "exploit sem_cast_arguments_complete; eauto.",
                        "VernacExtend",
                        "d506b7f4872be292e88d6efa2c2ea21df22a9cf5"
                    ]
                },
                {
                    "command": [
                        "intros [vtl [A B]].",
                        "VernacExtend",
                        "e52ebcd7b4d090d403a8d50aa30fecd69b5be328"
                    ]
                },
                {
                    "command": [
                        "exploit do_ef_external_complete; eauto.",
                        "VernacExtend",
                        "f0fd8b88c6068571bc6c9d2d488c520d398619c9"
                    ]
                },
                {
                    "command": [
                        "intros C.",
                        "VernacExtend",
                        "815d4ae757176a139c5c7aa2e053513c4e9e1c7c"
                    ]
                },
                {
                    "command": [
                        "rewrite A.",
                        "VernacExtend",
                        "66a3aec75a717b72a3c9a20459f4dabe8d0df2c1"
                    ]
                },
                {
                    "command": [
                        "rewrite B.",
                        "VernacExtend",
                        "6bc7e557f9b9a2c4deba8e6f4ced1bbbccc735f9"
                    ]
                },
                {
                    "command": [
                        "rewrite C.",
                        "VernacExtend",
                        "6522c35db68091b070ccdd4e87749a3d6da8e69d"
                    ]
                },
                {
                    "command": [
                        "econstructor; eauto.",
                        "VernacExtend",
                        "faa93781fb8bbf289e651728c4588af1c4169d34"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "callred_topred",
            "line_nb": 1062,
            "steps": [
                {
                    "command": [
                        "induction 1; simpl.",
                        "VernacExtend",
                        "7a487009c144d86c422c5127aa0fc0ff1707bb8b"
                    ]
                },
                {
                    "command": [
                        "rewrite H2.",
                        "VernacExtend",
                        "c34b98a4ea7c987830199fe378bb7a145a0d652e"
                    ]
                },
                {
                    "command": [
                        "exploit sem_cast_arguments_complete; eauto.",
                        "VernacExtend",
                        "d506b7f4872be292e88d6efa2c2ea21df22a9cf5"
                    ]
                },
                {
                    "command": [
                        "intros [vtl [A B]].",
                        "VernacExtend",
                        "e52ebcd7b4d090d403a8d50aa30fecd69b5be328"
                    ]
                },
                {
                    "command": [
                        "rewrite A; rewrite H; rewrite B; rewrite H1; rewrite dec_eq_true.",
                        "VernacExtend",
                        "2820ccd5623a02fc16bc1ab28a541dc4d577c543"
                    ]
                },
                {
                    "command": [
                        "econstructor; eauto.",
                        "VernacExtend",
                        "faa93781fb8bbf289e651728c4588af1c4169d34"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reducts_incl_trans",
            "line_nb": 1071,
            "steps": [
                {
                    "command": [
                        "unfold reducts_incl; intros.",
                        "VernacExtend",
                        "7baa2762530575a9e33db24e5627e4d0ccc686fd"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reducts_incl_nil",
            "line_nb": 1075,
            "steps": [
                {
                    "command": [
                        "intros; red.",
                        "VernacExtend",
                        "3393be941ed81b8e4a79e80db41d01425f14b126"
                    ]
                },
                {
                    "command": [
                        "intros; contradiction.",
                        "VernacExtend",
                        "7ccb8bf562612369e81bdac2d697a84266b31872"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reducts_incl_val",
            "line_nb": 1079,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite (is_val_inv _ _ _ H).",
                        "VernacExtend",
                        "2767ab861400a7a9c21072ba794a163106d3da37"
                    ]
                },
                {
                    "command": [
                        "apply reducts_incl_nil.",
                        "VernacExtend",
                        "0ae2ef2be7b63fe7053abc407f6bdace705fb184"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reducts_incl_loc",
            "line_nb": 1084,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite (is_loc_inv _ _ _ _ H).",
                        "VernacExtend",
                        "e977613803be89db9005d97f95600039250569e1"
                    ]
                },
                {
                    "command": [
                        "apply reducts_incl_nil.",
                        "VernacExtend",
                        "0ae2ef2be7b63fe7053abc407f6bdace705fb184"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reducts_incl_listval",
            "line_nb": 1089,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite step_exprlist_val_list.",
                        "VernacExtend",
                        "e08acd24ea9af3e05129b19d1faf2baa15b150a5"
                    ]
                },
                {
                    "command": [
                        "apply reducts_incl_nil.",
                        "VernacExtend",
                        "0ae2ef2be7b63fe7053abc407f6bdace705fb184"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reducts_incl_incontext",
            "line_nb": 1095,
            "steps": [
                {
                    "command": [
                        "unfold reducts_incl, incontext.",
                        "VernacExtend",
                        "3c0f5d1ba2cdda95c1c23cd6efcee77aac3ac856"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "set (f := fun z : (expr -> A) * reduction => (fun x : expr => C (fst z x), snd z)).",
                        "VernacExtend",
                        "2240aa4c48bf024e9c7746f7c34f744c12c1d2ff"
                    ]
                },
                {
                    "command": [
                        "change (In (f (C1, rd)) (map f res)).",
                        "VernacExtend",
                        "0539449a63118934048cf792e35853dbaa5dc74a"
                    ]
                },
                {
                    "command": [
                        "apply in_map.",
                        "VernacExtend",
                        "8b1d6650eff402b483dc29bd25bb3e04ea7f525b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reducts_incl_incontext2_left",
            "line_nb": 1103,
            "steps": [
                {
                    "command": [
                        "unfold reducts_incl, incontext2, incontext.",
                        "VernacExtend",
                        "42d0076da5c95104fe102aa65e7c20d95d85028c"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite in_app_iff.",
                        "VernacExtend",
                        "a44ebd311b9e7b2b97af8cffa97bd78b6ed93921"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "set (f := fun z : (expr -> A1) * reduction => (fun x : expr => C1 (fst z x), snd z)).",
                        "VernacExtend",
                        "e90bbd8c46dfde1305e0a9191b7284fde2606fc5"
                    ]
                },
                {
                    "command": [
                        "change (In (f (C0, rd)) (map f res1)).",
                        "VernacExtend",
                        "d03279d0b921358ee9a22fa1a98696dcd41040cc"
                    ]
                },
                {
                    "command": [
                        "apply in_map; auto.",
                        "VernacExtend",
                        "2059af05b402fab7c36eaeb726ab8ef5abc28e20"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reducts_incl_incontext2_right",
            "line_nb": 1112,
            "steps": [
                {
                    "command": [
                        "unfold reducts_incl, incontext2, incontext.",
                        "VernacExtend",
                        "42d0076da5c95104fe102aa65e7c20d95d85028c"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite in_app_iff.",
                        "VernacExtend",
                        "a44ebd311b9e7b2b97af8cffa97bd78b6ed93921"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "set (f := fun z : (expr -> A2) * reduction => (fun x : expr => C2 (fst z x), snd z)).",
                        "VernacExtend",
                        "82da20437cfeedae905da04ddc874b8e22e61606"
                    ]
                },
                {
                    "command": [
                        "change (In (f (C0, rd)) (map f res2)).",
                        "VernacExtend",
                        "a77f1f437dd134998d10ab9bedc9c3676ec847c6"
                    ]
                },
                {
                    "command": [
                        "apply in_map; auto.",
                        "VernacExtend",
                        "2059af05b402fab7c36eaeb726ab8ef5abc28e20"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_imm_safe_stuck_red",
            "line_nb": 1211,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (exists C', In (C', Stuckred) (step_expr k a m)).",
                        "VernacExtend",
                        "6d9c7121a05c61fb9b5bff4ca624f7914642cd09"
                    ]
                },
                {
                    "command": [
                        "destruct (classic (exists C', In (C', Stuckred) (step_expr k a m))); auto.",
                        "VernacExtend",
                        "11c110ef2d1f6626e56f6ff313a74fc0409ee019"
                    ]
                },
                {
                    "command": [
                        "elim H0.",
                        "VernacExtend",
                        "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
                    ]
                },
                {
                    "command": [
                        "apply not_stuckred_imm_safe.",
                        "VernacExtend",
                        "9029fa7ffb45b093a0d1c6329dd55833a3eb6257"
                    ]
                },
                {
                    "command": [
                        "apply not_ex_all_not.",
                        "VernacExtend",
                        "97769e7dff4c336932645162e543686d7caaa86e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as [C' IN].",
                        "VernacExtend",
                        "b68d3ee3119c8b2bf5c3e0a39cb33d4345d211ba"
                    ]
                },
                {
                    "command": [
                        "specialize (step_expr_context _ _ _ H a m).",
                        "VernacExtend",
                        "b42466e90cc4f4d2d7dfedf9bf40faadf666379a"
                    ]
                },
                {
                    "command": [
                        "unfold reducts_incl.",
                        "VernacExtend",
                        "480f9835b9533e11059f795b3393a787b5e977f7"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "exists (fun x => (C (C' x))).",
                        "VernacExtend",
                        "acccf0215216cd479926d00ff652ac4e224ad9a7"
                    ]
                },
                {
                    "command": [
                        "apply H1; auto.",
                        "VernacExtend",
                        "57fc44af14fcaf3758941b68060efcbab0060c55"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "imm_safe_imm_safe_t",
            "line_nb": 1226,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "apply imm_safe_t_val.",
                        "VernacExtend",
                        "ded2f2362375a5ac5bf71338ac3c9a7e126870e8"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "apply imm_safe_t_loc.",
                        "VernacExtend",
                        "6cb814e8541d95e77f1d5303f633206ac40c592e"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "eapply imm_safe_t_lred; eauto.",
                        "VernacExtend",
                        "1dc1f1791aea18b94c64d396c8adf888cb3287bf"
                    ]
                },
                {
                    "command": [
                        "destruct (classic (exists w', possible_trace w t w')) as [[w' A] | A].",
                        "VernacExtend",
                        "e09ca4f9ebdb38e48080c9324b85536f3c94ad4a"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "eapply imm_safe_t_rred; eauto.",
                        "VernacExtend",
                        "967e22191c35982417a4721fe8cbd029ed8dab1a"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "exists C; exists e0; exists t; exists e'; exists m'; intuition.",
                        "VernacExtend",
                        "3024d5b6751a38a28b3a6aa3711881c736a1072d"
                    ]
                },
                {
                    "command": [
                        "apply A; exists w'; auto.",
                        "VernacExtend",
                        "e5081b99d9ff46127e8c97735bb1f736a4a82b64"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "eapply imm_safe_t_callred; eauto.",
                        "VernacExtend",
                        "3f367a33b463ca7bbd2f63e4811211bec091bf8c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "do_alloc_variables_sound",
            "line_nb": 1265,
            "steps": [
                {
                    "command": [
                        "induction l; intros; simpl.",
                        "VernacExtend",
                        "6aa9541b4ade8f0ccec4c2034d15d1d35a916300"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "destruct a as [id ty].",
                        "VernacExtend",
                        "28d2d5def1ffaa9d62c2ea555e8d6a6455fa926c"
                    ]
                },
                {
                    "command": [
                        "destruct (Mem.alloc m 0 (sizeof ge ty)) as [m1 b1] eqn:?; simpl.",
                        "VernacExtend",
                        "254fcfe6bc0d503347679132d7a0d7147d77b935"
                    ]
                },
                {
                    "command": [
                        "econstructor; eauto.",
                        "VernacExtend",
                        "faa93781fb8bbf289e651728c4588af1c4169d34"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "do_alloc_variables_complete",
            "line_nb": 1272,
            "steps": [
                {
                    "command": [
                        "induction 1; simpl.",
                        "VernacExtend",
                        "7a487009c144d86c422c5127aa0fc0ff1707bb8b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite H; rewrite IHalloc_variables; auto.",
                        "VernacExtend",
                        "1bf4399a52301dcf9d9b04d15241148ca6d4c08f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sem_bind_parameters_sound",
            "line_nb": 1278,
            "steps": [
                {
                    "command": [
                        "intros; functional induction (sem_bind_parameters w e m l lv); try discriminate.",
                        "VernacExtend",
                        "57046e98b022aaa333f8eb943df9769fa12de042"
                    ]
                },
                {
                    "command": [
                        "inversion H; constructor; auto.",
                        "VernacExtend",
                        "e88569ef8d09a1ef3f0dbdbf29c059c6f3d62993"
                    ]
                },
                {
                    "command": [
                        "exploit do_assign_loc_sound; eauto.",
                        "VernacExtend",
                        "46ddd2cd900528bdebc9ba5f97853deab9f98186"
                    ]
                },
                {
                    "command": [
                        "intros [A B].",
                        "VernacExtend",
                        "269ecc1b12a78cad85161d58003fb0ebdea8ebc3"
                    ]
                },
                {
                    "command": [
                        "econstructor; eauto.",
                        "VernacExtend",
                        "faa93781fb8bbf289e651728c4588af1c4169d34"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sem_bind_parameters_complete",
            "line_nb": 1285,
            "steps": [
                {
                    "command": [
                        "induction 1; simpl; auto.",
                        "VernacExtend",
                        "c744c0db2f17ed7745b4893bfd3017058a6e4828"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "rewrite dec_eq_true.",
                        "VernacExtend",
                        "28b046c22f8f69c0651cbac642dd4f2013af7847"
                    ]
                },
                {
                    "command": [
                        "assert (possible_trace w E0 w) by constructor.",
                        "VernacExtend",
                        "59ecc4af27e47b96317a7c202120c77684c0a976"
                    ]
                },
                {
                    "command": [
                        "rewrite (do_assign_loc_complete _ _ _ _ _ _ _ _ _ H0 H2).",
                        "VernacExtend",
                        "0c8a02e97d9e45f783746c525b0d7f7e8244782e"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "estep_not_val",
            "line_nb": 1351,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (forall b from to C, context from to C -> (from = to /\\ C = fun x => x) \\/ is_val (C b) = None).",
                        "VernacExtend",
                        "a3a109d5a6e25ac2924efbd4e26529727ed170b0"
                    ]
                },
                {
                    "command": [
                        "induction 1; simpl; auto.",
                        "VernacExtend",
                        "c744c0db2f17ed7745b4893bfd3017058a6e4828"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "destruct (H0 a0 _ _ _ H9) as [[A B] | A].",
                        "VernacExtend",
                        "50e893f122e8f7c52a23cb77c8a2a5c38286f104"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "inv H8; auto.",
                        "VernacExtend",
                        "8724ace073e531eafb27c5b76d4f538cd11ba3a6"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "destruct (H0 a0 _ _ _ H9) as [[A B] | A].",
                        "VernacExtend",
                        "50e893f122e8f7c52a23cb77c8a2a5c38286f104"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "inv H8; auto.",
                        "VernacExtend",
                        "8724ace073e531eafb27c5b76d4f538cd11ba3a6"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "destruct (H0 a0 _ _ _ H9) as [[A B] | A].",
                        "VernacExtend",
                        "50e893f122e8f7c52a23cb77c8a2a5c38286f104"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "inv H8; auto.",
                        "VernacExtend",
                        "8724ace073e531eafb27c5b76d4f538cd11ba3a6"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "destruct (H0 a0 _ _ _ H8) as [[A B] | A].",
                        "VernacExtend",
                        "5ce746ffb2e98ff859edfb05ee66f6ca39a9d837"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "destruct a0; auto.",
                        "VernacExtend",
                        "b5ff52f7060bc8bbecad737487674768cd825546"
                    ]
                },
                {
                    "command": [
                        "elim H9.",
                        "VernacExtend",
                        "a286665c0a30b630af48a17f5f331041ced3a572"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}