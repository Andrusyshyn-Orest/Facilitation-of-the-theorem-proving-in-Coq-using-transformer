{
    "filename": "flocq/Prop/Fprop_mult_error.v",
    "coq_project": "CompCert",
    "vernac_cmds": [
        [
            "Require Import Fcore.",
            "VernacRequire",
            "0726413a0cd1e00c4c23af78515a8bb580c73ed5"
        ],
        [
            "Require Import Fcalc_ops.",
            "VernacRequire",
            "3d12d40a8c239f3c3d26da4f928dea2f7d34d6d3"
        ],
        [
            "Section Fprop_mult_error.",
            "VernacBeginSection",
            "952204454ea6299986d6ad17e819c8002de37500"
        ],
        [
            "Variable beta : radix.",
            "VernacAssumption",
            "5414570a6751198892ee4a13f107deb4c633e62b"
        ],
        [
            "Notation bpow e := (bpow beta e).",
            "VernacSyntacticDefinition",
            "c796e278ffd17ea9674b52f8e94413782272a594"
        ],
        [
            "Variable prec : Z.",
            "VernacAssumption",
            "2ea8aff61629f0d1c1489d8413fdc04d11ea278f"
        ],
        [
            "Context { prec_gt_0_ : Prec_gt_0 prec }.",
            "VernacContext",
            "c8404f16109f008297dc64925b18a48ad609d64a"
        ],
        [
            "Notation format := (generic_format beta (FLX_exp prec)).",
            "VernacSyntacticDefinition",
            "cbce71094b076b8c23f19367c230e37339b0de5f"
        ],
        [
            "Notation cexp := (canonic_exp beta (FLX_exp prec)).",
            "VernacSyntacticDefinition",
            "6614e35a5f19e29f6317ad2daaa9b68a2534cbc8"
        ],
        [
            "Variable rnd : R -> Z.",
            "VernacAssumption",
            "5bdfd3c40d2aa8ce2b985c638278827c00ad436e"
        ],
        [
            "Context { valid_rnd : Valid_rnd rnd }.",
            "VernacContext",
            "49759e314a3bb9ba66adea1eb824227c77e97e4c"
        ],
        [
            "Lemma mult_error_FLX_aux: forall x y, format x -> format y -> (round beta (FLX_exp prec) rnd (x * y) - (x * y) <> 0)%R -> exists f:float beta, (F2R f = round beta (FLX_exp prec) rnd (x * y) - (x * y))%R /\\ (canonic_exp beta (FLX_exp prec) (F2R f) <= Fexp f)%Z /\\ (Fexp f = cexp x + cexp y)%Z.",
            "VernacStartTheoremProof",
            "aa25a115112da0b4346bd6d908e3b4530f65594f"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros x y Hx Hy Hz.",
            "VernacExtend",
            "0d06e931190f0d98bdf1422dfeb2668a03a66047"
        ],
        [
            "set (f := (round beta (FLX_exp prec) rnd (x * y))).",
            "VernacExtend",
            "121a51ae07cb229c3213cff429a443520b5fda10"
        ],
        [
            "destruct (Req_dec (x * y) 0) as [Hxy0|Hxy0].",
            "VernacExtend",
            "2f541c4ddb95d4171737123b93ab8aecc606ff98"
        ],
        [
            "contradict Hz.",
            "VernacExtend",
            "e371b4dc8c5f249a82e69dfd0bc331688b9d72d6"
        ],
        [
            "rewrite Hxy0.",
            "VernacExtend",
            "8f55db5bfb90139d0526fc9be4e4fe413b0e882d"
        ],
        [
            "rewrite round_0...",
            "VernacExtend",
            "5fbc8a38a813a4cbfdd36466b9d8439a4b4967f1"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "destruct (ln_beta beta (x * y)) as (exy, Hexy).",
            "VernacExtend",
            "ee3518ec0a2eb03767fa0acbc833e0b03942050c"
        ],
        [
            "specialize (Hexy Hxy0).",
            "VernacExtend",
            "1033125daa25ab4a9b7ac1d18e1761c2304ff132"
        ],
        [
            "destruct (ln_beta beta (f - x * y)) as (er, Her).",
            "VernacExtend",
            "9218d0cc2898f7481161a502c38e3a29b08f65a9"
        ],
        [
            "specialize (Her Hz).",
            "VernacExtend",
            "9cdec0bbe93a22b9caab2491681e801cd8e2c232"
        ],
        [
            "destruct (ln_beta beta x) as (ex, Hex).",
            "VernacExtend",
            "21921c4b6ef8de5f8e2c767fee1f9565dd6a946e"
        ],
        [
            "assert (Hx0: (x <> 0)%R).",
            "VernacExtend",
            "e9cdd469ae7734f6924d0098169e5a12e9d8b810"
        ],
        [
            "contradict Hxy0.",
            "VernacExtend",
            "3306f7e0f49e9b1ce2b1785f2555f4359a96c25a"
        ],
        [
            "now rewrite Hxy0, Rmult_0_l.",
            "VernacExtend",
            "d051807209c36a266e535992437304b71a53a747"
        ],
        [
            "specialize (Hex Hx0).",
            "VernacExtend",
            "850a1a5a5ebb64071e353d76c1a5421aeb76f155"
        ],
        [
            "destruct (ln_beta beta y) as (ey, Hey).",
            "VernacExtend",
            "203eb7eefaf1e746c2ab86d336fa0bfb14325f04"
        ],
        [
            "assert (Hy0: (y <> 0)%R).",
            "VernacExtend",
            "46fd397aa068753facc390334b38a5e7a337eac1"
        ],
        [
            "contradict Hxy0.",
            "VernacExtend",
            "3306f7e0f49e9b1ce2b1785f2555f4359a96c25a"
        ],
        [
            "now rewrite Hxy0, Rmult_0_r.",
            "VernacExtend",
            "f4c52f20828666a6e7f7e98a2089d92fc453175c"
        ],
        [
            "specialize (Hey Hy0).",
            "VernacExtend",
            "d154653e4ed193e91dd2d2c17a388f2e06a93232"
        ],
        [
            "assert (Hc1: (cexp (x * y)%R - prec <= cexp x + cexp y)%Z).",
            "VernacExtend",
            "c08dbac038c58069e6c32cda15bd4749761e1efa"
        ],
        [
            "unfold canonic_exp, FLX_exp.",
            "VernacExtend",
            "45d28f41d7553f4a1fffdac21f3b29151351dcfa"
        ],
        [
            "rewrite ln_beta_unique with (1 := Hex).",
            "VernacExtend",
            "6c3abfc7f45ce1e266890ed12bc18a2747077501"
        ],
        [
            "rewrite ln_beta_unique with (1 := Hey).",
            "VernacExtend",
            "82b3a2d1d74dc7a9a33729f6d0b182882e10d529"
        ],
        [
            "rewrite ln_beta_unique with (1 := Hexy).",
            "VernacExtend",
            "dc7577c3121b1435f5354a065fb1ee9480fadc69"
        ],
        [
            "cut (exy - 1 < ex + ey)%Z.",
            "VernacExtend",
            "6f6b18276940cf2c602bc0abd62b7e3c2a736612"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply (lt_bpow beta).",
            "VernacExtend",
            "39756c21a1c38c15bfdc1abca446efcd43b5bc05"
        ],
        [
            "apply Rle_lt_trans with (1 := proj1 Hexy).",
            "VernacExtend",
            "c4c4d53fb763bfb5343cebf2eb75d2b3976125fe"
        ],
        [
            "rewrite Rabs_mult.",
            "VernacExtend",
            "0a976c5fce10a63ed58fa2e07dd76a462e6697c3"
        ],
        [
            "rewrite bpow_plus.",
            "VernacExtend",
            "a66bde7144b19ede4a139295758f63aab8dcbea6"
        ],
        [
            "apply Rmult_le_0_lt_compat.",
            "VernacExtend",
            "a69851b3906699be18ff8bb93fad9e56dcadbf0f"
        ],
        [
            "apply Rabs_pos.",
            "VernacExtend",
            "8e57e214403458a4dc8dafc960971b86cf3b856d"
        ],
        [
            "apply Rabs_pos.",
            "VernacExtend",
            "8e57e214403458a4dc8dafc960971b86cf3b856d"
        ],
        [
            "apply Hex.",
            "VernacExtend",
            "0626b143f310ba29c3689980df03ba1efdab98c5"
        ],
        [
            "apply Hey.",
            "VernacExtend",
            "e938ee0e67294187a39fb64a4eb915ecc5a77238"
        ],
        [
            "assert (Hc2: (cexp x + cexp y <= cexp (x * y)%R)%Z).",
            "VernacExtend",
            "6907a3d9eed92a7e10451a62353c98f804ecdb31"
        ],
        [
            "unfold canonic_exp, FLX_exp.",
            "VernacExtend",
            "45d28f41d7553f4a1fffdac21f3b29151351dcfa"
        ],
        [
            "rewrite ln_beta_unique with (1 := Hex).",
            "VernacExtend",
            "6c3abfc7f45ce1e266890ed12bc18a2747077501"
        ],
        [
            "rewrite ln_beta_unique with (1 := Hey).",
            "VernacExtend",
            "82b3a2d1d74dc7a9a33729f6d0b182882e10d529"
        ],
        [
            "rewrite ln_beta_unique with (1 := Hexy).",
            "VernacExtend",
            "dc7577c3121b1435f5354a065fb1ee9480fadc69"
        ],
        [
            "cut ((ex - 1) + (ey - 1) < exy)%Z.",
            "VernacExtend",
            "1d8272ddff5f0613783b9e2df6b3c535c609cfd0"
        ],
        [
            "generalize (prec_gt_0 prec).",
            "VernacExtend",
            "f827b434a598a8eb871cd50fd31ccf4bfded79d5"
        ],
        [
            "clear ; omega.",
            "VernacExtend",
            "eec4b40e7fab9dab9db362824141f438dba9b179"
        ],
        [
            "apply (lt_bpow beta).",
            "VernacExtend",
            "39756c21a1c38c15bfdc1abca446efcd43b5bc05"
        ],
        [
            "apply Rle_lt_trans with (2 := proj2 Hexy).",
            "VernacExtend",
            "f3a8b7a8219fee811f96a10133315f5ac82e3125"
        ],
        [
            "rewrite Rabs_mult.",
            "VernacExtend",
            "0a976c5fce10a63ed58fa2e07dd76a462e6697c3"
        ],
        [
            "rewrite bpow_plus.",
            "VernacExtend",
            "a66bde7144b19ede4a139295758f63aab8dcbea6"
        ],
        [
            "apply Rmult_le_compat.",
            "VernacExtend",
            "99a65cd1efb8e35313415d4b052731e2b0746daf"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "apply Hex.",
            "VernacExtend",
            "0626b143f310ba29c3689980df03ba1efdab98c5"
        ],
        [
            "apply Hey.",
            "VernacExtend",
            "e938ee0e67294187a39fb64a4eb915ecc5a77238"
        ],
        [
            "assert (Hr: ((F2R (Float beta (- (Ztrunc (scaled_mantissa beta (FLX_exp prec) x) * Ztrunc (scaled_mantissa beta (FLX_exp prec) y)) + rnd (scaled_mantissa beta (FLX_exp prec) (x * y)) * beta ^ (cexp (x * y)%R - (cexp x + cexp y))) (cexp x + cexp y))) = f - x * y)%R).",
            "VernacExtend",
            "273cdd8c3888d10af7c5ea6bb31d293b8833e5b2"
        ],
        [
            "rewrite Hx at 6.",
            "VernacExtend",
            "d0c8c292b056172c5251483917f1fbe9f549f42f"
        ],
        [
            "rewrite Hy at 6.",
            "VernacExtend",
            "134f3caaa09e4f05f9d47a4092bc91d50787bcec"
        ],
        [
            "rewrite <- F2R_mult.",
            "VernacExtend",
            "d8c54479282bdf8337bd590cf21dc0de5aa5bb54"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold f, round, Rminus.",
            "VernacExtend",
            "ee724b678ec72a21c1eef945212df78ebeccd78a"
        ],
        [
            "rewrite <- F2R_opp, Rplus_comm, <- F2R_plus.",
            "VernacExtend",
            "6620feeeea889f5170172e5c3bae488ab0b86e54"
        ],
        [
            "unfold Fplus.",
            "VernacExtend",
            "c54a67894d0ce35c9c1961a2d7d8aa03f0ec71b5"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "now rewrite Zle_imp_le_bool with (1 := Hc2).",
            "VernacExtend",
            "f09cef979612aa534de29297648ed2c43f7dc9b8"
        ],
        [
            "exists (Float beta (- (Ztrunc (scaled_mantissa beta (FLX_exp prec) x) * Ztrunc (scaled_mantissa beta (FLX_exp prec) y)) + rnd (scaled_mantissa beta (FLX_exp prec) (x * y)) * beta ^ (cexp (x * y)%R - (cexp x + cexp y))) (cexp x + cexp y)).",
            "VernacExtend",
            "732012c7599c08e3feac10fd824a1f43b852ea78"
        ],
        [
            "split;[assumption|split].",
            "VernacExtend",
            "89b3cba276519182efc0b1afa2d925f7ae2de400"
        ],
        [
            "rewrite Hr.",
            "VernacExtend",
            "f125d3fd5b288de6b75a9762d9060512a4dedad7"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "clear Hr.",
            "VernacExtend",
            "1142638922dc0327fe64f8d9381b1c5ce678444a"
        ],
        [
            "apply Zle_trans with (cexp (x * y)%R - prec)%Z.",
            "VernacExtend",
            "6e6256f3fab7ff51c9099e477c2a44156d8f3e9f"
        ],
        [
            "unfold canonic_exp, FLX_exp.",
            "VernacExtend",
            "45d28f41d7553f4a1fffdac21f3b29151351dcfa"
        ],
        [
            "apply Zplus_le_compat_r.",
            "VernacExtend",
            "d7f6624ef39938250205d16c9c180f9ac074d651"
        ],
        [
            "rewrite ln_beta_unique with (1 := Hexy).",
            "VernacExtend",
            "dc7577c3121b1435f5354a065fb1ee9480fadc69"
        ],
        [
            "apply ln_beta_le_bpow with (1 := Hz).",
            "VernacExtend",
            "c83950f56fe665a3ecdc178331bb5d81f8fe0a59"
        ],
        [
            "replace (bpow (exy - prec)) with (ulp beta (FLX_exp prec) (x * y)).",
            "VernacExtend",
            "698d7884de209baaa8cb8a4a33527ec10fd6803a"
        ],
        [
            "apply error_lt_ulp...",
            "VernacExtend",
            "cc239a89d957fb00929dd0b52e58f87b7a36d1f3"
        ],
        [
            "rewrite ulp_neq_0; trivial.",
            "VernacExtend",
            "15f172fa8ef4443236132f274b2179ad6f15bde8"
        ],
        [
            "unfold canonic_exp.",
            "VernacExtend",
            "993fc99c30cdbd2e74bd71e0fd5e49f000dffb04"
        ],
        [
            "now rewrite ln_beta_unique with (1 := Hexy).",
            "VernacExtend",
            "6edde472ec3c5f0c6e808394a399e1524c6a32fb"
        ],
        [
            "apply Hc1.",
            "VernacExtend",
            "a04cb6ebb5c9350b0bb0ec8cf5924b94a0e6151e"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mult_error_FLX : forall x y, format x -> format y -> format (round beta (FLX_exp prec) rnd (x * y) - (x * y))%R.",
            "VernacStartTheoremProof",
            "525936f81c3183fbd3313ef01209e7b1c528234d"
        ],
        [
            "intros x y Hx Hy.",
            "VernacExtend",
            "7566bd3dac9a8437bd137c0d7aaa934e9b1723a2"
        ],
        [
            "destruct (Req_dec (round beta (FLX_exp prec) rnd (x * y) - x * y) 0) as [Hr0|Hr0].",
            "VernacExtend",
            "6cafdf7377addaf7375610b14c331676bb889906"
        ],
        [
            "rewrite Hr0.",
            "VernacExtend",
            "dc6865e92a46b2cbe60db3a0ecf0f947e7227259"
        ],
        [
            "apply generic_format_0.",
            "VernacExtend",
            "dc3c4afb013f89f69b2f0e71216d8926d296b3bd"
        ],
        [
            "destruct (mult_error_FLX_aux x y Hx Hy Hr0) as ((m,e),(H1,(H2,H3))).",
            "VernacExtend",
            "53a738352dd2e1bd7da100090842312ccf75283b"
        ],
        [
            "rewrite <- H1.",
            "VernacExtend",
            "b8b417d956609d1854d18921f25bc0ffae73a74e"
        ],
        [
            "now apply generic_format_F2R.",
            "VernacExtend",
            "b0067946a6f4c2aa104b431ee4ea740d8fe85021"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Fprop_mult_error.",
            "VernacEndSegment",
            "f445cb35bcef13129c9d1a7a58ed4200025be66e"
        ],
        [
            "Section Fprop_mult_error_FLT.",
            "VernacBeginSection",
            "09f41c896e8c9c2ce8f82b6782ee991cd6366a9f"
        ],
        [
            "Variable beta : radix.",
            "VernacAssumption",
            "5414570a6751198892ee4a13f107deb4c633e62b"
        ],
        [
            "Notation bpow e := (bpow beta e).",
            "VernacSyntacticDefinition",
            "c796e278ffd17ea9674b52f8e94413782272a594"
        ],
        [
            "Variable emin prec : Z.",
            "VernacAssumption",
            "3ccc0e6889e5cd3c3d9e4dafff4f8ba78f15de33"
        ],
        [
            "Context { prec_gt_0_ : Prec_gt_0 prec }.",
            "VernacContext",
            "c8404f16109f008297dc64925b18a48ad609d64a"
        ],
        [
            "Notation format := (generic_format beta (FLT_exp emin prec)).",
            "VernacSyntacticDefinition",
            "1088ad7586d04865966423eb9adbd660a3512ec4"
        ],
        [
            "Notation cexp := (canonic_exp beta (FLT_exp emin prec)).",
            "VernacSyntacticDefinition",
            "b995b3bcb2a6b3961c9f2913ea4bc849b13378a5"
        ],
        [
            "Variable rnd : R -> Z.",
            "VernacAssumption",
            "5bdfd3c40d2aa8ce2b985c638278827c00ad436e"
        ],
        [
            "Context { valid_rnd : Valid_rnd rnd }.",
            "VernacContext",
            "49759e314a3bb9ba66adea1eb824227c77e97e4c"
        ],
        [
            "Theorem mult_error_FLT : forall x y, format x -> format y -> (x*y = 0)%R \\/ (bpow (emin + 2*prec - 1) <= Rabs (x * y))%R -> format (round beta (FLT_exp emin prec) rnd (x * y) - (x * y))%R.",
            "VernacStartTheoremProof",
            "1cef081f76ec2533231f88dcbe59ff4b3f003e5d"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros x y Hx Hy Hxy.",
            "VernacExtend",
            "448ba15484028e0f39c86589df7b6f7ab356b63d"
        ],
        [
            "set (f := (round beta (FLT_exp emin prec) rnd (x * y))).",
            "VernacExtend",
            "193fcb1c7c635090663351e04ec09571e00954d1"
        ],
        [
            "destruct (Req_dec (f - x * y) 0) as [Hr0|Hr0].",
            "VernacExtend",
            "07b898b6dd0180012b9e4048de84af2a16c261bc"
        ],
        [
            "rewrite Hr0.",
            "VernacExtend",
            "dc6865e92a46b2cbe60db3a0ecf0f947e7227259"
        ],
        [
            "apply generic_format_0.",
            "VernacExtend",
            "dc3c4afb013f89f69b2f0e71216d8926d296b3bd"
        ],
        [
            "destruct Hxy as [Hxy|Hxy].",
            "VernacExtend",
            "dc04a16cf91f4afee78d8c673618555a884b11b3"
        ],
        [
            "unfold f.",
            "VernacExtend",
            "54a386f4161710b69df4a2025df24a14e842ecf2"
        ],
        [
            "rewrite Hxy.",
            "VernacExtend",
            "d3b02e14eceb680d6ea962ead2cb32634a781bf3"
        ],
        [
            "rewrite round_0...",
            "VernacExtend",
            "5fbc8a38a813a4cbfdd36466b9d8439a4b4967f1"
        ],
        [
            "ring_simplify (0 - 0)%R.",
            "VernacExtend",
            "0c763b0a620aea89e29a178ddfd14d38bbf9cf29"
        ],
        [
            "apply generic_format_0.",
            "VernacExtend",
            "dc3c4afb013f89f69b2f0e71216d8926d296b3bd"
        ],
        [
            "destruct (mult_error_FLX_aux beta prec rnd x y) as ((m,e),(H1,(H2,H3))).",
            "VernacExtend",
            "f5af35b82cc2fe4f3b182781b26eeb5adb1c9e1a"
        ],
        [
            "now apply generic_format_FLX_FLT with emin.",
            "VernacExtend",
            "a6f216962a6e826cdb8a934b43f39ee2f41c03b6"
        ],
        [
            "now apply generic_format_FLX_FLT with emin.",
            "VernacExtend",
            "a6f216962a6e826cdb8a934b43f39ee2f41c03b6"
        ],
        [
            "rewrite <- (round_FLT_FLX beta emin).",
            "VernacExtend",
            "ba1e930759426af350d0e06b18202b63928aceeb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply Rle_trans with (2:=Hxy).",
            "VernacExtend",
            "10741e2cd960be8243d43e987f87abd2fd3bf2b0"
        ],
        [
            "apply bpow_le.",
            "VernacExtend",
            "9264f19c0062a0a711efc832825406a995342e90"
        ],
        [
            "generalize (prec_gt_0 prec).",
            "VernacExtend",
            "f827b434a598a8eb871cd50fd31ccf4bfded79d5"
        ],
        [
            "clear ; omega.",
            "VernacExtend",
            "eec4b40e7fab9dab9db362824141f438dba9b179"
        ],
        [
            "rewrite <- (round_FLT_FLX beta emin) in H1.",
            "VernacExtend",
            "ede387ceb0a099def70499ff9f955830cff5331d"
        ],
        [
            "2:apply Rle_trans with (2:=Hxy).",
            "VernacExtend",
            "7ee8f07eaa1c242f8665fbe04705a2918011cce4"
        ],
        [
            "2:apply bpow_le ; generalize (prec_gt_0 prec) ; clear ; omega.",
            "VernacExtend",
            "3695c3b8a9acb5069aae673dd99b54e32a5bc62a"
        ],
        [
            "unfold f; rewrite <- H1.",
            "VernacExtend",
            "f63f6e440f8eeea47428313860793c6ea8f2e623"
        ],
        [
            "apply generic_format_F2R.",
            "VernacExtend",
            "3bbdbef5cecd8cd7887cb9d4ed37843b2dc31e75"
        ],
        [
            "intros _.",
            "VernacExtend",
            "eb0e518a4896777a9a76b3ab973eaf7b4f1b52db"
        ],
        [
            "simpl in H2, H3.",
            "VernacExtend",
            "c63d067fb03c343170e7dbdacd2295c830007759"
        ],
        [
            "unfold canonic_exp, FLT_exp.",
            "VernacExtend",
            "ba83afafe19bdf8ad526af63819ff6444a6995f6"
        ],
        [
            "case (Zmax_spec (ln_beta beta (F2R (Float beta m e)) - prec) emin); intros (M1,M2); rewrite M2.",
            "VernacExtend",
            "67a97826dad4fae47a7e7f48cd0d71d2ad529142"
        ],
        [
            "apply Zle_trans with (2:=H2).",
            "VernacExtend",
            "c93a5188e3610078565439c5b18e0836c11e5673"
        ],
        [
            "unfold canonic_exp, FLX_exp.",
            "VernacExtend",
            "45d28f41d7553f4a1fffdac21f3b29151351dcfa"
        ],
        [
            "apply Zle_refl.",
            "VernacExtend",
            "68a57d6389c7dd3f2c16b824eb0734986d9ff207"
        ],
        [
            "rewrite H3.",
            "VernacExtend",
            "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
        ],
        [
            "unfold canonic_exp, FLX_exp.",
            "VernacExtend",
            "45d28f41d7553f4a1fffdac21f3b29151351dcfa"
        ],
        [
            "assert (Hxy0:(x*y <> 0)%R).",
            "VernacExtend",
            "7e58f7c52a791005d3faa6bc092d2c8f03650774"
        ],
        [
            "contradict Hr0.",
            "VernacExtend",
            "e7b6c8399643455c299e90da3b01917f80c83752"
        ],
        [
            "unfold f.",
            "VernacExtend",
            "54a386f4161710b69df4a2025df24a14e842ecf2"
        ],
        [
            "rewrite Hr0.",
            "VernacExtend",
            "dc6865e92a46b2cbe60db3a0ecf0f947e7227259"
        ],
        [
            "rewrite round_0...",
            "VernacExtend",
            "5fbc8a38a813a4cbfdd36466b9d8439a4b4967f1"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "assert (Hx0: (x <> 0)%R).",
            "VernacExtend",
            "e9cdd469ae7734f6924d0098169e5a12e9d8b810"
        ],
        [
            "contradict Hxy0.",
            "VernacExtend",
            "3306f7e0f49e9b1ce2b1785f2555f4359a96c25a"
        ],
        [
            "now rewrite Hxy0, Rmult_0_l.",
            "VernacExtend",
            "d051807209c36a266e535992437304b71a53a747"
        ],
        [
            "assert (Hy0: (y <> 0)%R).",
            "VernacExtend",
            "46fd397aa068753facc390334b38a5e7a337eac1"
        ],
        [
            "contradict Hxy0.",
            "VernacExtend",
            "3306f7e0f49e9b1ce2b1785f2555f4359a96c25a"
        ],
        [
            "now rewrite Hxy0, Rmult_0_r.",
            "VernacExtend",
            "f4c52f20828666a6e7f7e98a2089d92fc453175c"
        ],
        [
            "destruct (ln_beta beta x) as (ex,Ex) ; simpl.",
            "VernacExtend",
            "b1e4f88c6ee4a9c9d665163dce0c7fa4d6c4566a"
        ],
        [
            "specialize (Ex Hx0).",
            "VernacExtend",
            "9f43a77f0ebe2fd6a7f9807d895cd189ee35d0a0"
        ],
        [
            "destruct (ln_beta beta y) as (ey,Ey) ; simpl.",
            "VernacExtend",
            "418dbd03c0eb2a5fe00f5ce7567184aaf061cf67"
        ],
        [
            "specialize (Ey Hy0).",
            "VernacExtend",
            "d726f05214f60c1d292083f687a603b62e14a5f2"
        ],
        [
            "assert (emin + 2 * prec -1 < ex + ey)%Z.",
            "VernacExtend",
            "963111cc0ebae1ff8221895e014c958fecf20e7a"
        ],
        [
            "2: omega.",
            "VernacExtend",
            "d479151185a43f07b17d29025d6b6de4845088dc"
        ],
        [
            "apply (lt_bpow beta).",
            "VernacExtend",
            "39756c21a1c38c15bfdc1abca446efcd43b5bc05"
        ],
        [
            "apply Rle_lt_trans with (1:=Hxy).",
            "VernacExtend",
            "bfb6a058e6aa79b608959d9250227b33542c507e"
        ],
        [
            "rewrite Rabs_mult, bpow_plus.",
            "VernacExtend",
            "efe16da6f5ba3e113573ccdde2aa39dc9d48ee9c"
        ],
        [
            "apply Rmult_le_0_lt_compat; try apply Rabs_pos.",
            "VernacExtend",
            "4de668282e5cd85e0644906849e9f199daa7e19e"
        ],
        [
            "apply Ex.",
            "VernacExtend",
            "731a0b1d525e39ed5cef08f414754edbca20bc6e"
        ],
        [
            "apply Ey.",
            "VernacExtend",
            "69e4b521496c3ee829fd0481043981acd2ffe625"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Fprop_mult_error_FLT.",
            "VernacEndSegment",
            "9dfd21049e67bd694a3f8b81c7fd69e7c48e6cbd"
        ]
    ],
    "proofs": [
        {
            "name": "mult_error_FLX",
            "line_nb": 95,
            "steps": [
                {
                    "command": [
                        "intros x y Hx Hy.",
                        "VernacExtend",
                        "7566bd3dac9a8437bd137c0d7aaa934e9b1723a2"
                    ]
                },
                {
                    "command": [
                        "destruct (Req_dec (round beta (FLX_exp prec) rnd (x * y) - x * y) 0) as [Hr0|Hr0].",
                        "VernacExtend",
                        "6cafdf7377addaf7375610b14c331676bb889906"
                    ]
                },
                {
                    "command": [
                        "rewrite Hr0.",
                        "VernacExtend",
                        "dc6865e92a46b2cbe60db3a0ecf0f947e7227259"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_0.",
                        "VernacExtend",
                        "dc3c4afb013f89f69b2f0e71216d8926d296b3bd"
                    ]
                },
                {
                    "command": [
                        "destruct (mult_error_FLX_aux x y Hx Hy Hr0) as ((m,e),(H1,(H2,H3))).",
                        "VernacExtend",
                        "53a738352dd2e1bd7da100090842312ccf75283b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H1.",
                        "VernacExtend",
                        "b8b417d956609d1854d18921f25bc0ffae73a74e"
                    ]
                },
                {
                    "command": [
                        "now apply generic_format_F2R.",
                        "VernacExtend",
                        "b0067946a6f4c2aa104b431ee4ea740d8fe85021"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}