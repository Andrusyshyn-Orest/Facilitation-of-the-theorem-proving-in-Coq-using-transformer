{
    "filename": "flocq/Prop/Fprop_div_sqrt_error.v",
    "coq_project": "CompCert",
    "vernac_cmds": [
        [
            "Require Import Fcore.",
            "VernacRequire",
            "0726413a0cd1e00c4c23af78515a8bb580c73ed5"
        ],
        [
            "Require Import Fcalc_ops.",
            "VernacRequire",
            "3d12d40a8c239f3c3d26da4f928dea2f7d34d6d3"
        ],
        [
            "Require Import Fprop_relative.",
            "VernacRequire",
            "f7bcd7888ec6c5b32bc4d40b59ad0864f5edebc8"
        ],
        [
            "Section Fprop_divsqrt_error.",
            "VernacBeginSection",
            "95fe2b0ee497d1b117578c4dd66834dc5b7e6907"
        ],
        [
            "Variable beta : radix.",
            "VernacAssumption",
            "5414570a6751198892ee4a13f107deb4c633e62b"
        ],
        [
            "Notation bpow e := (bpow beta e).",
            "VernacSyntacticDefinition",
            "c796e278ffd17ea9674b52f8e94413782272a594"
        ],
        [
            "Variable prec : Z.",
            "VernacAssumption",
            "2ea8aff61629f0d1c1489d8413fdc04d11ea278f"
        ],
        [
            "Theorem generic_format_plus_prec: forall fexp, (forall e, (fexp e <= e - prec)%Z) -> forall x y (fx fy: float beta), (x = F2R fx)%R -> (y = F2R fy)%R -> (Rabs (x+y) < bpow (prec+Fexp fx))%R -> (Rabs (x+y) < bpow (prec+Fexp fy))%R -> generic_format beta fexp (x+y)%R.",
            "VernacStartTheoremProof",
            "6a38b67f71e7595578c7c69c2df073fd49763bd2"
        ],
        [
            "intros fexp Hfexp x y fx fy Hx Hy H1 H2.",
            "VernacExtend",
            "f9c3e70be6c4c2620cd308b5714e3c5293f06966"
        ],
        [
            "case (Req_dec (x+y) 0); intros H.",
            "VernacExtend",
            "26b93f31ac5f24710f2b92302f8d733357f2c392"
        ],
        [
            "rewrite H; apply generic_format_0.",
            "VernacExtend",
            "871bcc717492020c41c3fe9c6ce09e72831566c1"
        ],
        [
            "rewrite Hx, Hy, <- F2R_plus.",
            "VernacExtend",
            "9564c2b688fa2bb719a0337df67d9306e0aeac82"
        ],
        [
            "apply generic_format_F2R.",
            "VernacExtend",
            "3bbdbef5cecd8cd7887cb9d4ed37843b2dc31e75"
        ],
        [
            "intros _.",
            "VernacExtend",
            "eb0e518a4896777a9a76b3ab973eaf7b4f1b52db"
        ],
        [
            "case_eq (Fplus beta fx fy).",
            "VernacExtend",
            "b0ca9fe78e0cf83b304513c435985e3e867536f9"
        ],
        [
            "intros mz ez Hz.",
            "VernacExtend",
            "0d12508204f408bd0672b22f2b439065ef31c47b"
        ],
        [
            "rewrite <- Hz.",
            "VernacExtend",
            "07288c0bb5e8f7529949ba6b126617755a3c5c53"
        ],
        [
            "apply Zle_trans with (Zmin (Fexp fx) (Fexp fy)).",
            "VernacExtend",
            "ff79942aae7f205feea3453f724539bf4667ca7e"
        ],
        [
            "rewrite F2R_plus, <- Hx, <- Hy.",
            "VernacExtend",
            "8c2e6fd580455093dd4630cacace9ac8d50af46f"
        ],
        [
            "unfold canonic_exp.",
            "VernacExtend",
            "993fc99c30cdbd2e74bd71e0fd5e49f000dffb04"
        ],
        [
            "apply Zle_trans with (1:=Hfexp _).",
            "VernacExtend",
            "3b51e10eded50a9479a623dfa622e0abfcad450d"
        ],
        [
            "apply Zplus_le_reg_l with prec; ring_simplify.",
            "VernacExtend",
            "13df18778753620637bf183f3c2dd903f600fe74"
        ],
        [
            "apply ln_beta_le_bpow with (1 := H).",
            "VernacExtend",
            "ad0f82759addaa5263a178b3630b234cd163d5ac"
        ],
        [
            "now apply Zmin_case.",
            "VernacExtend",
            "4815cffe130cecd4e9370afcdf9854e0fc6af032"
        ],
        [
            "rewrite <- Fexp_Fplus, Hz.",
            "VernacExtend",
            "983c0bb39adc10c1857112ee432887d8df0ea365"
        ],
        [
            "apply Zle_refl.",
            "VernacExtend",
            "68a57d6389c7dd3f2c16b824eb0734986d9ff207"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ex_Fexp_canonic: forall fexp, forall x, generic_format beta fexp x -> exists fx:float beta, (x=F2R fx)%R /\\ Fexp fx = canonic_exp beta fexp x.",
            "VernacStartTheoremProof",
            "d1ad7496a9a908efd610e507fd4a1402967c4ca9"
        ],
        [
            "intros fexp x; unfold generic_format.",
            "VernacExtend",
            "87be9b5340cc7870e8fb8bbfc362459fcabeaf94"
        ],
        [
            "exists (Float beta (Ztrunc (scaled_mantissa beta fexp x)) (canonic_exp beta fexp x)).",
            "VernacExtend",
            "d029c5c290674d83da3836cd6bc44e4ddff3c688"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Context { prec_gt_0_ : Prec_gt_0 prec }.",
            "VernacContext",
            "c8404f16109f008297dc64925b18a48ad609d64a"
        ],
        [
            "Notation format := (generic_format beta (FLX_exp prec)).",
            "VernacSyntacticDefinition",
            "cbce71094b076b8c23f19367c230e37339b0de5f"
        ],
        [
            "Notation cexp := (canonic_exp beta (FLX_exp prec)).",
            "VernacSyntacticDefinition",
            "6614e35a5f19e29f6317ad2daaa9b68a2534cbc8"
        ],
        [
            "Variable choice : Z -> bool.",
            "VernacAssumption",
            "63a0c7d67fa03ac82d9da57cc7a18e006f5ba997"
        ],
        [
            "Theorem div_error_FLX : forall rnd { Zrnd : Valid_rnd rnd } x y, format x -> format y -> format (x - round beta (FLX_exp prec) rnd (x/y) * y)%R.",
            "VernacStartTheoremProof",
            "7cde4be19db0830f8311459794402ca23f6690a2"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros rnd Zrnd x y Hx Hy.",
            "VernacExtend",
            "20e8dda73aff50e4751ae385ddf8b515816071e1"
        ],
        [
            "destruct (Req_dec y 0) as [Zy|Zy].",
            "VernacExtend",
            "80aa5f9bcf7b2549101b661cf0c32c65a2b5ee2b"
        ],
        [
            "now rewrite Zy, Rmult_0_r, Rminus_0_r.",
            "VernacExtend",
            "cb6c050e13271271b77826b68e92386c2da84557"
        ],
        [
            "destruct (Req_dec (round beta (FLX_exp prec) rnd (x/y)) 0) as [Hr|Hr].",
            "VernacExtend",
            "adee1c3c2b3e48b2b107bfad54595e0ac22e268a"
        ],
        [
            "rewrite Hr; ring_simplify (x-0*y)%R; assumption.",
            "VernacExtend",
            "126d4a734094e7891574d7be41602a2d055e6ea0"
        ],
        [
            "assert (Zx: x <> R0).",
            "VernacExtend",
            "273a4077e46fcdfba1a98281e79ebb900fdd6721"
        ],
        [
            "contradict Hr.",
            "VernacExtend",
            "d7320b92820521b8c78c1a811a855b48ee7dcec1"
        ],
        [
            "rewrite Hr.",
            "VernacExtend",
            "f125d3fd5b288de6b75a9762d9060512a4dedad7"
        ],
        [
            "unfold Rdiv.",
            "VernacExtend",
            "d9820df68a5475147f48d29acf89824b27f71597"
        ],
        [
            "now rewrite Rmult_0_l, round_0.",
            "VernacExtend",
            "9ad1d7fb691ac09b023f5deea37f3cb7461daeb5"
        ],
        [
            "destruct (ex_Fexp_canonic _ x Hx) as (fx,(Hx1,Hx2)).",
            "VernacExtend",
            "97948250cde35fed8b6551747440503326420b87"
        ],
        [
            "destruct (ex_Fexp_canonic _ y Hy) as (fy,(Hy1,Hy2)).",
            "VernacExtend",
            "324a0feb0229b560d7485a053412c95917abbf23"
        ],
        [
            "destruct (ex_Fexp_canonic (FLX_exp prec) (round beta (FLX_exp prec) rnd (x / y))) as (fr,(Hr1,Hr2)).",
            "VernacExtend",
            "0e560470c5aab980731094c2b06de00c643dbc26"
        ],
        [
            "apply generic_format_round...",
            "VernacExtend",
            "55b5df3e9c740005b41509d39a039e0b1a6f5f87"
        ],
        [
            "unfold Rminus; apply generic_format_plus_prec with fx (Fopp beta (Fmult beta fr fy)); trivial.",
            "VernacExtend",
            "01113c151f2c468a6da7ef1ec6c8c3d53fb5d683"
        ],
        [
            "intros e; apply Zle_refl.",
            "VernacExtend",
            "557c97ab2822170fbf7e356cceee23c940038574"
        ],
        [
            "now rewrite F2R_opp, F2R_mult, <- Hr1, <- Hy1.",
            "VernacExtend",
            "6b4fffe067093255449a2e4306ef0640c0bbf58f"
        ],
        [
            "destruct (relative_error_FLX_ex beta prec (prec_gt_0 prec) rnd (x / y)%R) as (eps,(Heps1,Heps2)).",
            "VernacExtend",
            "026006dc07b2de2715b45b723534030b18286327"
        ],
        [
            "rewrite Heps2.",
            "VernacExtend",
            "e1601f226e1ca5f994878bdc7b4308885352f59c"
        ],
        [
            "rewrite <- Rabs_Ropp.",
            "VernacExtend",
            "fec698fd86e1df1a29b09f4d0b96a2b8f860ddb2"
        ],
        [
            "replace (-(x + - (x / y * (1 + eps) * y)))%R with (x * eps)%R by now field.",
            "VernacExtend",
            "fd1427d6caef4652436a8b7c1921d02493373ba2"
        ],
        [
            "rewrite Rabs_mult.",
            "VernacExtend",
            "0a976c5fce10a63ed58fa2e07dd76a462e6697c3"
        ],
        [
            "apply Rlt_le_trans with (Rabs x * 1)%R.",
            "VernacExtend",
            "6aefd252cf2099102ab1f559aa0c9c5a97161732"
        ],
        [
            "apply Rmult_lt_compat_l.",
            "VernacExtend",
            "e06ce02cd2654586097cfda8f116dd4fe6d6b2a8"
        ],
        [
            "now apply Rabs_pos_lt.",
            "VernacExtend",
            "6644e63c10a4ebb716152f3789ed696595825302"
        ],
        [
            "apply Rlt_le_trans with (1 := Heps1).",
            "VernacExtend",
            "4512a6b4a9b65b29e4975cc1a1e563e4431ea6cf"
        ],
        [
            "change 1%R with (bpow 0).",
            "VernacExtend",
            "c7ae8ede2e4580ba1d7b359d84144ace66927ecc"
        ],
        [
            "apply bpow_le.",
            "VernacExtend",
            "9264f19c0062a0a711efc832825406a995342e90"
        ],
        [
            "generalize (prec_gt_0 prec).",
            "VernacExtend",
            "f827b434a598a8eb871cd50fd31ccf4bfded79d5"
        ],
        [
            "clear ; omega.",
            "VernacExtend",
            "eec4b40e7fab9dab9db362824141f438dba9b179"
        ],
        [
            "rewrite Rmult_1_r.",
            "VernacExtend",
            "d41d18f77f80ae8595148d0386b68549f3d406cf"
        ],
        [
            "rewrite Hx2.",
            "VernacExtend",
            "762fa2d49508177b00d0e4ad5a9c143b424050e0"
        ],
        [
            "unfold canonic_exp.",
            "VernacExtend",
            "993fc99c30cdbd2e74bd71e0fd5e49f000dffb04"
        ],
        [
            "destruct (ln_beta beta x) as (ex, Hex).",
            "VernacExtend",
            "21921c4b6ef8de5f8e2c767fee1f9565dd6a946e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "specialize (Hex Zx).",
            "VernacExtend",
            "35041bad374adf3a4ad0b8597d710e89f8f39f2b"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "apply Rlt_le_trans with (1 := proj2 Hex).",
            "VernacExtend",
            "20226d365719a1229484be5e7a381d863e214f6d"
        ],
        [
            "apply bpow_le.",
            "VernacExtend",
            "9264f19c0062a0a711efc832825406a995342e90"
        ],
        [
            "unfold FLX_exp.",
            "VernacExtend",
            "71070950ec4cced4c2013495eecfd09baee01732"
        ],
        [
            "ring_simplify.",
            "VernacExtend",
            "31578f61427562191ce5389abf97dbf9985ea04c"
        ],
        [
            "apply Zle_refl.",
            "VernacExtend",
            "68a57d6389c7dd3f2c16b824eb0734986d9ff207"
        ],
        [
            "replace (Fexp (Fopp beta (Fmult beta fr fy))) with (Fexp fr + Fexp fy)%Z.",
            "VernacExtend",
            "388c67b0ee481d97d0cc8e4bb6984619ab8913ad"
        ],
        [
            "2: unfold Fopp, Fmult; destruct fr; destruct fy; now simpl.",
            "VernacExtend",
            "606d0e2806248f23eff2cd965b95843dddc24081"
        ],
        [
            "replace (x + - (round beta (FLX_exp prec) rnd (x / y) * y))%R with (y * (-(round beta (FLX_exp prec) rnd (x / y) - x/y)))%R.",
            "VernacExtend",
            "f420682bceae44df73785ce796e62f44f4cd88b0"
        ],
        [
            "2: field; assumption.",
            "VernacExtend",
            "e88d50fd1a7ddf8072f10254195213bf7c75e9e1"
        ],
        [
            "rewrite Rabs_mult.",
            "VernacExtend",
            "0a976c5fce10a63ed58fa2e07dd76a462e6697c3"
        ],
        [
            "apply Rlt_le_trans with (Rabs y * bpow (Fexp fr))%R.",
            "VernacExtend",
            "6ad93a6ea43540975985d44f639a8bd44a28cd8c"
        ],
        [
            "apply Rmult_lt_compat_l.",
            "VernacExtend",
            "e06ce02cd2654586097cfda8f116dd4fe6d6b2a8"
        ],
        [
            "now apply Rabs_pos_lt.",
            "VernacExtend",
            "6644e63c10a4ebb716152f3789ed696595825302"
        ],
        [
            "rewrite Rabs_Ropp.",
            "VernacExtend",
            "4585414329a0ef757c809f4a4dee3b3a09307b5c"
        ],
        [
            "replace (bpow (Fexp fr)) with (ulp beta (FLX_exp prec) (F2R fr)).",
            "VernacExtend",
            "b524769615d135f4455363a1658383cd4b291712"
        ],
        [
            "rewrite <- Hr1.",
            "VernacExtend",
            "473d10ef54836c176c39b8aca84361ebbaf3f34e"
        ],
        [
            "apply error_lt_ulp_round...",
            "VernacExtend",
            "78a6da6e10aebea6e46de9a9eb0a19a459ee6296"
        ],
        [
            "apply Rmult_integral_contrapositive_currified; try apply Rinv_neq_0_compat; assumption.",
            "VernacExtend",
            "0f662be4d4bdad428ff598bd566519731b261785"
        ],
        [
            "rewrite ulp_neq_0.",
            "VernacExtend",
            "b4bcababf374cfa2a41fe0c19161a11c28a11d32"
        ],
        [
            "2: now rewrite <- Hr1.",
            "VernacExtend",
            "ee09a5ce61b03a52c7808936a93dc2bb18e5c84e"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "now rewrite Hr2, <- Hr1.",
            "VernacExtend",
            "90e2908b31d61a25ef2a47dbf6ef18a9ca2a8c54"
        ],
        [
            "replace (prec+(Fexp fr+Fexp fy))%Z with ((prec+Fexp fy)+Fexp fr)%Z by ring.",
            "VernacExtend",
            "fd065edc63b311e30f0da67ebcf0cfd84f8b670c"
        ],
        [
            "rewrite bpow_plus.",
            "VernacExtend",
            "a66bde7144b19ede4a139295758f63aab8dcbea6"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "rewrite Hy2; unfold canonic_exp, FLX_exp.",
            "VernacExtend",
            "5b1c24c78c2b5fdbe2c754b8630926f5995d13d4"
        ],
        [
            "ring_simplify (prec + (ln_beta beta y - prec))%Z.",
            "VernacExtend",
            "9b0fcccc818118168793e8a4ada0e8b8a53c37ed"
        ],
        [
            "destruct (ln_beta beta y); simpl.",
            "VernacExtend",
            "db271a29c2395d9fdb31c3f21f1997901bcbb71a"
        ],
        [
            "left; now apply a.",
            "VernacExtend",
            "747fb843915c6f851513ba5191aa1bcc02f4d99a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variable Hp1 : Zlt 1 prec.",
            "VernacAssumption",
            "9b9edd9f18b0b413ed19fa5cf3b17d397ed5ac62"
        ],
        [
            "Theorem sqrt_error_FLX_N : forall x, format x -> format (x - Rsqr (round beta (FLX_exp prec) (Znearest choice) (sqrt x)))%R.",
            "VernacStartTheoremProof",
            "be679db6d39a0ea8712c1a078d41b99b695f7794"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "destruct (total_order_T x 0) as [[Hxz|Hxz]|Hxz].",
            "VernacExtend",
            "2df4b97ce73c07153c9adee9bea2b3a58a58934e"
        ],
        [
            "unfold sqrt.",
            "VernacExtend",
            "71ef64092f0003bcdade22760b25585d0190003b"
        ],
        [
            "destruct (Rcase_abs x).",
            "VernacExtend",
            "a6ce7e2807a52ba11247f5cb0035acc6debcdd9f"
        ],
        [
            "rewrite round_0...",
            "VernacExtend",
            "5fbc8a38a813a4cbfdd36466b9d8439a4b4967f1"
        ],
        [
            "unfold Rsqr.",
            "VernacExtend",
            "ee8c595e99ab49bf64a7e1aaaa8933ba6a0b0354"
        ],
        [
            "now rewrite Rmult_0_l, Rminus_0_r.",
            "VernacExtend",
            "89a42b4f061f00ef9084a95ef389158a488012b6"
        ],
        [
            "elim (Rlt_irrefl 0).",
            "VernacExtend",
            "8f1f232dcf06ac70c217f54d4c5ff71211967d65"
        ],
        [
            "now apply Rgt_ge_trans with x.",
            "VernacExtend",
            "14704944d20ed9fea736142f86e967697077b2e1"
        ],
        [
            "rewrite Hxz, sqrt_0, round_0...",
            "VernacExtend",
            "14bc795560867035f3b42a4033a3cf68f13ca611"
        ],
        [
            "unfold Rsqr.",
            "VernacExtend",
            "ee8c595e99ab49bf64a7e1aaaa8933ba6a0b0354"
        ],
        [
            "rewrite Rmult_0_l, Rminus_0_r.",
            "VernacExtend",
            "5dd2fb1ab3b455ee6d1e4113e2b79dfce6f24188"
        ],
        [
            "apply generic_format_0.",
            "VernacExtend",
            "dc3c4afb013f89f69b2f0e71216d8926d296b3bd"
        ],
        [
            "case (Req_dec (round beta (FLX_exp prec) (Znearest choice) (sqrt x)) 0); intros Hr.",
            "VernacExtend",
            "5f8494ceeb7eb695eed6cd372152e96ca8206c43"
        ],
        [
            "rewrite Hr; unfold Rsqr; ring_simplify (x-0*0)%R; assumption.",
            "VernacExtend",
            "5c7225088decb8d0627774e22d6821aed3588a8a"
        ],
        [
            "destruct (ex_Fexp_canonic _ x Hx) as (fx,(Hx1,Hx2)).",
            "VernacExtend",
            "97948250cde35fed8b6551747440503326420b87"
        ],
        [
            "destruct (ex_Fexp_canonic (FLX_exp prec) (round beta (FLX_exp prec) (Znearest choice) (sqrt x))) as (fr,(Hr1,Hr2)).",
            "VernacExtend",
            "0008f8967f02a94e70d1134770a38eaea5496ed4"
        ],
        [
            "apply generic_format_round...",
            "VernacExtend",
            "55b5df3e9c740005b41509d39a039e0b1a6f5f87"
        ],
        [
            "unfold Rminus; apply generic_format_plus_prec with fx (Fopp beta (Fmult beta fr fr)); trivial.",
            "VernacExtend",
            "cf919bb7aa56d34e6222627e5ee6890aa1759a2c"
        ],
        [
            "intros e; apply Zle_refl.",
            "VernacExtend",
            "557c97ab2822170fbf7e356cceee23c940038574"
        ],
        [
            "unfold Rsqr; now rewrite F2R_opp,F2R_mult, <- Hr1.",
            "VernacExtend",
            "1d4709cf55b50800ccd07cfc571c60e632bf06c6"
        ],
        [
            "apply Rle_lt_trans with x.",
            "VernacExtend",
            "7181b013d2841cdb2c737acfede200112b249e1f"
        ],
        [
            "apply Rabs_minus_le.",
            "VernacExtend",
            "4bc333e61b51892a45fae19103631d62439ed871"
        ],
        [
            "apply Rle_0_sqr.",
            "VernacExtend",
            "dab150eb3bf9ea450741d52bf434375cb024aaf1"
        ],
        [
            "destruct (relative_error_N_FLX_ex beta prec (prec_gt_0 prec) choice (sqrt x)) as (eps,(Heps1,Heps2)).",
            "VernacExtend",
            "d130b034e164ef5fff7fa0cb335cadee233c19cc"
        ],
        [
            "rewrite Heps2.",
            "VernacExtend",
            "e1601f226e1ca5f994878bdc7b4308885352f59c"
        ],
        [
            "rewrite Rsqr_mult, Rsqr_sqrt, Rmult_comm.",
            "VernacExtend",
            "2e9898e13ffb7f0cb33a4ca13e5b9f12a8380756"
        ],
        [
            "2: now apply Rlt_le.",
            "VernacExtend",
            "9f23ebd721c661ddcc58b37b3d2937dd87b4451e"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "apply Rle_trans with (5\u00b2/4\u00b2)%R.",
            "VernacExtend",
            "ef0d85bb1f58fcbc6de598b5267921cd17d697ff"
        ],
        [
            "rewrite <- Rsqr_div.",
            "VernacExtend",
            "0fa972cabc754b3f3bf944292ea9416937bcf631"
        ],
        [
            "apply Rsqr_le_abs_1.",
            "VernacExtend",
            "a024df2166c3827ce8b5984e9c68fc97a1142be9"
        ],
        [
            "apply Rle_trans with (1 := Rabs_triang _ _).",
            "VernacExtend",
            "fc3ac622a6b1c2c359ba4392074f9e26d9cb28da"
        ],
        [
            "rewrite Rabs_R1.",
            "VernacExtend",
            "ee4f060b70897ad4f0e80c541351c105d977ce5c"
        ],
        [
            "apply Rplus_le_reg_l with (-1)%R.",
            "VernacExtend",
            "1c9a9b804cbba4390cfd4154b1530a56b3390832"
        ],
        [
            "replace (-1 + (1 + Rabs eps))%R with (Rabs eps) by ring.",
            "VernacExtend",
            "4f45ef653c6806d3e9a86f2b7a218fd4530236cb"
        ],
        [
            "apply Rle_trans with (1 := Heps1).",
            "VernacExtend",
            "7d5a500681b3153defc35c22b3c593ff9124c67f"
        ],
        [
            "rewrite Rabs_pos_eq.",
            "VernacExtend",
            "489e84e15a0f0c3833f18764e3ff39e15bc66da3"
        ],
        [
            "apply Rmult_le_reg_l with 2%R.",
            "VernacExtend",
            "c3b6e0de4fef40278ea6cf30b6c0bc4d4cd023dd"
        ],
        [
            "now apply (Z2R_lt 0 2).",
            "VernacExtend",
            "d115cb8bbe9692198c1512828eb7171baa80bc9e"
        ],
        [
            "rewrite <- Rmult_assoc, Rinv_r, Rmult_1_l.",
            "VernacExtend",
            "577af8c567a4b09d518a21e491748b998485bdea"
        ],
        [
            "apply Rle_trans with (bpow (-1)).",
            "VernacExtend",
            "89c7659db3a0ab318f4bcf6e7e7937d5419d6f56"
        ],
        [
            "apply bpow_le.",
            "VernacExtend",
            "9264f19c0062a0a711efc832825406a995342e90"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "replace (2 * (-1 + 5 / 4))%R with (/2)%R by field.",
            "VernacExtend",
            "7537f102e7cd5f9d6f4b25f02b5c5388116ff629"
        ],
        [
            "apply Rinv_le.",
            "VernacExtend",
            "df9ed9c0ff0a06fae52364d762a5f467e1897f8b"
        ],
        [
            "now apply (Z2R_lt 0 2).",
            "VernacExtend",
            "d115cb8bbe9692198c1512828eb7171baa80bc9e"
        ],
        [
            "apply (Z2R_le 2).",
            "VernacExtend",
            "a279012cca2d7da81553d571f987a3ff96cb7dd1"
        ],
        [
            "unfold Zpower_pos.",
            "VernacExtend",
            "bf96db4f6778a44d1d4b5828986241d7b8d118f4"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Zmult_1_r.",
            "VernacExtend",
            "417376d82024400c741f6570f03b2437a77ee661"
        ],
        [
            "apply Zle_bool_imp_le.",
            "VernacExtend",
            "9fbe4aec09efdd724d40942f53da7cc22fdae5a9"
        ],
        [
            "apply beta.",
            "VernacExtend",
            "5421457e8d66600233e50721247031400f113c21"
        ],
        [
            "apply Rgt_not_eq.",
            "VernacExtend",
            "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
        ],
        [
            "now apply (Z2R_lt 0 2).",
            "VernacExtend",
            "d115cb8bbe9692198c1512828eb7171baa80bc9e"
        ],
        [
            "unfold Rdiv.",
            "VernacExtend",
            "d9820df68a5475147f48d29acf89824b27f71597"
        ],
        [
            "apply Rmult_le_pos.",
            "VernacExtend",
            "e03207c3cef85471384dc0906485b056bc83a80a"
        ],
        [
            "now apply (Z2R_le 0 5).",
            "VernacExtend",
            "2fac4315a141a0c22059a60a9f00f8bec60af9c7"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "apply Rinv_0_lt_compat.",
            "VernacExtend",
            "d7abdc8c3031a09ca2712c9563d7ecf89b4d477e"
        ],
        [
            "now apply (Z2R_lt 0 4).",
            "VernacExtend",
            "af3833aa9d7ad60de4eed329ae0099a3aaf5b82b"
        ],
        [
            "apply Rgt_not_eq.",
            "VernacExtend",
            "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
        ],
        [
            "now apply (Z2R_lt 0 4).",
            "VernacExtend",
            "af3833aa9d7ad60de4eed329ae0099a3aaf5b82b"
        ],
        [
            "unfold Rsqr.",
            "VernacExtend",
            "ee8c595e99ab49bf64a7e1aaaa8933ba6a0b0354"
        ],
        [
            "replace (5 * 5 / (4 * 4))%R with (25 * /16)%R by field.",
            "VernacExtend",
            "b2c16de3066989978fccbe07b3dcf788b3d2ceb9"
        ],
        [
            "apply Rmult_le_reg_r with 16%R.",
            "VernacExtend",
            "ed6b9d11f0153ed91dfda57fc80801697f18b7f8"
        ],
        [
            "now apply (Z2R_lt 0 16).",
            "VernacExtend",
            "0081b64890467f6f215910cb0d2574be078d962b"
        ],
        [
            "rewrite Rmult_assoc, Rinv_l, Rmult_1_r.",
            "VernacExtend",
            "f4535f4e34bfdaf905ff90df2b6c3da69dac4a1d"
        ],
        [
            "now apply (Z2R_le 25 32).",
            "VernacExtend",
            "00027e00c2e518c4c6ea1f73898e426d07df6eb1"
        ],
        [
            "apply Rgt_not_eq.",
            "VernacExtend",
            "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
        ],
        [
            "now apply (Z2R_lt 0 16).",
            "VernacExtend",
            "0081b64890467f6f215910cb0d2574be078d962b"
        ],
        [
            "rewrite Hx2; unfold canonic_exp, FLX_exp.",
            "VernacExtend",
            "1ca9df6171ee9deceb7aa06733cf3c5a16a11514"
        ],
        [
            "ring_simplify (prec + (ln_beta beta x - prec))%Z.",
            "VernacExtend",
            "fbe001c0cd0ab3fd675f44b9065445868f51f428"
        ],
        [
            "destruct (ln_beta beta x); simpl.",
            "VernacExtend",
            "35d17ade42c0472006895c749c291a14133c6f63"
        ],
        [
            "rewrite <- (Rabs_right x).",
            "VernacExtend",
            "60f34e0291a30450a684b8bb85f8814c005fff83"
        ],
        [
            "apply a.",
            "VernacExtend",
            "efcb795685660eed264bd6d68e41b35603ede4a5"
        ],
        [
            "now apply Rgt_not_eq.",
            "VernacExtend",
            "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
        ],
        [
            "now apply Rgt_ge.",
            "VernacExtend",
            "53d7ec5ffbcc44d865de3d67e3e04b929447ae40"
        ],
        [
            "replace (Fexp (Fopp beta (Fmult beta fr fr))) with (Fexp fr + Fexp fr)%Z.",
            "VernacExtend",
            "52e04fd56a161390b89cbc56dccac6a8b0d0e161"
        ],
        [
            "2: unfold Fopp, Fmult; destruct fr; now simpl.",
            "VernacExtend",
            "3edf6c3082a9d15fba440f68bc4581a235941bb6"
        ],
        [
            "rewrite Hr1.",
            "VernacExtend",
            "cf99d607f4a68754bfeb0df909f5b3e3596fbdbe"
        ],
        [
            "replace (x + - Rsqr (F2R fr))%R with (-((F2R fr - sqrt x)*(F2R fr + sqrt x)))%R.",
            "VernacExtend",
            "93885961f9523d7bc5b875c00a87f3097c249546"
        ],
        [
            "2: rewrite <- (sqrt_sqrt x) at 3; auto.",
            "VernacExtend",
            "ea512860cb85b3eb49e76e1b99c230a060c5a114"
        ],
        [
            "2: unfold Rsqr; ring.",
            "VernacExtend",
            "6986209b254d3b434c003f187697b3c5b9750bf8"
        ],
        [
            "rewrite Rabs_Ropp, Rabs_mult.",
            "VernacExtend",
            "bbc9eab8f517ae6b39e9f185671eaa20020c5046"
        ],
        [
            "apply Rle_lt_trans with ((/2*bpow (Fexp fr))* Rabs (F2R fr + sqrt x))%R.",
            "VernacExtend",
            "329a67329df304716767fd788e930c481eb12477"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "apply Rabs_pos.",
            "VernacExtend",
            "8e57e214403458a4dc8dafc960971b86cf3b856d"
        ],
        [
            "apply Rle_trans with (/2*ulp beta (FLX_exp prec) (F2R fr))%R.",
            "VernacExtend",
            "52f80334dde109bcd8fea727d6d4c33605f7429d"
        ],
        [
            "rewrite <- Hr1.",
            "VernacExtend",
            "473d10ef54836c176c39b8aca84361ebbaf3f34e"
        ],
        [
            "apply error_le_half_ulp_round...",
            "VernacExtend",
            "026fdaf1827e364ad8a08469c32462e95d8dfdaa"
        ],
        [
            "right; rewrite ulp_neq_0.",
            "VernacExtend",
            "b4281789299b1dd4e3b697f4d3a3acc294241a78"
        ],
        [
            "2: now rewrite <- Hr1.",
            "VernacExtend",
            "ee09a5ce61b03a52c7808936a93dc2bb18e5c84e"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "rewrite Hr2, <- Hr1; trivial.",
            "VernacExtend",
            "a8a9c3a5bdafc46a33fa18244a6458ae305647bc"
        ],
        [
            "rewrite Rmult_assoc, Rmult_comm.",
            "VernacExtend",
            "6f6eb5e4fa11814d799f3073276df4c34f1f3f52"
        ],
        [
            "replace (prec+(Fexp fr+Fexp fr))%Z with (Fexp fr + (prec+Fexp fr))%Z by ring.",
            "VernacExtend",
            "e7407e50a51f97ff689fa36fa5af3161af0ad530"
        ],
        [
            "rewrite bpow_plus, Rmult_assoc.",
            "VernacExtend",
            "7880b981531ee39ed53cd0aa2623830c162eaf6c"
        ],
        [
            "apply Rmult_lt_compat_l.",
            "VernacExtend",
            "e06ce02cd2654586097cfda8f116dd4fe6d6b2a8"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "apply Rmult_lt_reg_l with (1 := Rlt_0_2).",
            "VernacExtend",
            "e2c7eaa152491292da00d5093a7c0cede6c02c83"
        ],
        [
            "apply Rle_lt_trans with (Rabs (F2R fr + sqrt x)).",
            "VernacExtend",
            "290d000f18f4f4ea27cb06793f590952eed3b941"
        ],
        [
            "right; field.",
            "VernacExtend",
            "745ea5b657a2ce92bd598e5a11292676f3ff684e"
        ],
        [
            "apply Rle_lt_trans with (1:=Rabs_triang _ _).",
            "VernacExtend",
            "f9c6acae1b531169f9dfd40f6360571bc11e9f82"
        ],
        [
            "assert (Rabs (F2R fr) < bpow (prec + Fexp fr))%R.",
            "VernacExtend",
            "faca9c2c0bc1070d29249e60e05683bf341586a0"
        ],
        [
            "rewrite Hr2; unfold canonic_exp; rewrite Hr1.",
            "VernacExtend",
            "37645a569e842e779a6dea54202717d91e1224a2"
        ],
        [
            "unfold FLX_exp.",
            "VernacExtend",
            "71070950ec4cced4c2013495eecfd09baee01732"
        ],
        [
            "ring_simplify (prec + (ln_beta beta (F2R fr) - prec))%Z.",
            "VernacExtend",
            "b15cf53623e74b09b4b74e5bced1e48b307cf494"
        ],
        [
            "destruct (ln_beta beta (F2R fr)); simpl.",
            "VernacExtend",
            "c6020cbbeba884d441f1010cf478d25fe4f3efd3"
        ],
        [
            "apply a.",
            "VernacExtend",
            "efcb795685660eed264bd6d68e41b35603ede4a5"
        ],
        [
            "rewrite <- Hr1; auto.",
            "VernacExtend",
            "7fb09444c72e5bedf3e77be56918e216b9392df3"
        ],
        [
            "apply Rlt_le_trans with (bpow (prec + Fexp fr)+ Rabs (sqrt x))%R.",
            "VernacExtend",
            "bce6cb371629bd27169b137a00058e87e688f9ed"
        ],
        [
            "now apply Rplus_lt_compat_r.",
            "VernacExtend",
            "82b8517a91b5d6c493ed71301bfa528feeb74c47"
        ],
        [
            "replace (2 * bpow (prec + Fexp fr))%R with (bpow (prec + Fexp fr) + bpow (prec + Fexp fr))%R by ring.",
            "VernacExtend",
            "1bf4647f1af475bd314ec6231d52faf6274a0d0f"
        ],
        [
            "apply Rplus_le_compat_l.",
            "VernacExtend",
            "3af9ea371eb281cf0e58041faab020bb6798a832"
        ],
        [
            "assert (sqrt x <> 0)%R.",
            "VernacExtend",
            "9aa6e5646d0a2c33bff32699a9d02097733a5ac9"
        ],
        [
            "apply Rgt_not_eq.",
            "VernacExtend",
            "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
        ],
        [
            "now apply sqrt_lt_R0.",
            "VernacExtend",
            "c6e1277262c6aaa8acb574d7d75e10953268faa4"
        ],
        [
            "destruct (ln_beta beta (sqrt x)) as (es,Es).",
            "VernacExtend",
            "0d97939544655b1ef4ea45099456e7950aeab872"
        ],
        [
            "specialize (Es H0).",
            "VernacExtend",
            "f59e280497bfc19e326405b9180e2c5b148eedc8"
        ],
        [
            "apply Rle_trans with (bpow es).",
            "VernacExtend",
            "33bb87f594ea31773673d45adb25874404d72744"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "apply bpow_le.",
            "VernacExtend",
            "9264f19c0062a0a711efc832825406a995342e90"
        ],
        [
            "case (Zle_or_lt es (prec + Fexp fr)) ; trivial.",
            "VernacExtend",
            "e1afea6ce7401ba20c732c76c7e764f7732e7edf"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "absurd (Rabs (F2R fr) < bpow (es - 1))%R.",
            "VernacExtend",
            "d0b4681e599280cf53f643bef13f97b2d391d273"
        ],
        [
            "apply Rle_not_lt.",
            "VernacExtend",
            "1f0f6b47a7d49626d97b2585f7610e291096035d"
        ],
        [
            "rewrite <- Hr1.",
            "VernacExtend",
            "473d10ef54836c176c39b8aca84361ebbaf3f34e"
        ],
        [
            "apply abs_round_ge_generic...",
            "VernacExtend",
            "eef25b28564387c5e486ca3f59a782eb5dce8876"
        ],
        [
            "apply generic_format_bpow.",
            "VernacExtend",
            "2af66cea358ca19a1ce7ae8db9c4199157b1884b"
        ],
        [
            "unfold FLX_exp; omega.",
            "VernacExtend",
            "3ce6d8ac78a3ac196c10c2dec86586f7271bbd9b"
        ],
        [
            "apply Es.",
            "VernacExtend",
            "641469b24e3ec6f991037ce72ec5a92d3bae0acf"
        ],
        [
            "apply Rlt_le_trans with (1:=H).",
            "VernacExtend",
            "4cd6bf8b9ffdf301bc7c5f322262f3507ca79aef"
        ],
        [
            "apply bpow_le.",
            "VernacExtend",
            "9264f19c0062a0a711efc832825406a995342e90"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Fprop_divsqrt_error.",
            "VernacEndSegment",
            "caaddd949e11d717038833570264129238e58fd2"
        ]
    ],
    "proofs": [
        {
            "name": "generic_format_plus_prec",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "intros fexp Hfexp x y fx fy Hx Hy H1 H2.",
                        "VernacExtend",
                        "f9c3e70be6c4c2620cd308b5714e3c5293f06966"
                    ]
                },
                {
                    "command": [
                        "case (Req_dec (x+y) 0); intros H.",
                        "VernacExtend",
                        "26b93f31ac5f24710f2b92302f8d733357f2c392"
                    ]
                },
                {
                    "command": [
                        "rewrite H; apply generic_format_0.",
                        "VernacExtend",
                        "871bcc717492020c41c3fe9c6ce09e72831566c1"
                    ]
                },
                {
                    "command": [
                        "rewrite Hx, Hy, <- F2R_plus.",
                        "VernacExtend",
                        "9564c2b688fa2bb719a0337df67d9306e0aeac82"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_F2R.",
                        "VernacExtend",
                        "3bbdbef5cecd8cd7887cb9d4ed37843b2dc31e75"
                    ]
                },
                {
                    "command": [
                        "intros _.",
                        "VernacExtend",
                        "eb0e518a4896777a9a76b3ab973eaf7b4f1b52db"
                    ]
                },
                {
                    "command": [
                        "case_eq (Fplus beta fx fy).",
                        "VernacExtend",
                        "b0ca9fe78e0cf83b304513c435985e3e867536f9"
                    ]
                },
                {
                    "command": [
                        "intros mz ez Hz.",
                        "VernacExtend",
                        "0d12508204f408bd0672b22f2b439065ef31c47b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hz.",
                        "VernacExtend",
                        "07288c0bb5e8f7529949ba6b126617755a3c5c53"
                    ]
                },
                {
                    "command": [
                        "apply Zle_trans with (Zmin (Fexp fx) (Fexp fy)).",
                        "VernacExtend",
                        "ff79942aae7f205feea3453f724539bf4667ca7e"
                    ]
                },
                {
                    "command": [
                        "rewrite F2R_plus, <- Hx, <- Hy.",
                        "VernacExtend",
                        "8c2e6fd580455093dd4630cacace9ac8d50af46f"
                    ]
                },
                {
                    "command": [
                        "unfold canonic_exp.",
                        "VernacExtend",
                        "993fc99c30cdbd2e74bd71e0fd5e49f000dffb04"
                    ]
                },
                {
                    "command": [
                        "apply Zle_trans with (1:=Hfexp _).",
                        "VernacExtend",
                        "3b51e10eded50a9479a623dfa622e0abfcad450d"
                    ]
                },
                {
                    "command": [
                        "apply Zplus_le_reg_l with prec; ring_simplify.",
                        "VernacExtend",
                        "13df18778753620637bf183f3c2dd903f600fe74"
                    ]
                },
                {
                    "command": [
                        "apply ln_beta_le_bpow with (1 := H).",
                        "VernacExtend",
                        "ad0f82759addaa5263a178b3630b234cd163d5ac"
                    ]
                },
                {
                    "command": [
                        "now apply Zmin_case.",
                        "VernacExtend",
                        "4815cffe130cecd4e9370afcdf9854e0fc6af032"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Fexp_Fplus, Hz.",
                        "VernacExtend",
                        "983c0bb39adc10c1857112ee432887d8df0ea365"
                    ]
                },
                {
                    "command": [
                        "apply Zle_refl.",
                        "VernacExtend",
                        "68a57d6389c7dd3f2c16b824eb0734986d9ff207"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_Fexp_canonic",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "intros fexp x; unfold generic_format.",
                        "VernacExtend",
                        "87be9b5340cc7870e8fb8bbfc362459fcabeaf94"
                    ]
                },
                {
                    "command": [
                        "exists (Float beta (Ztrunc (scaled_mantissa beta fexp x)) (canonic_exp beta fexp x)).",
                        "VernacExtend",
                        "d029c5c290674d83da3836cd6bc44e4ddff3c688"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}