{
    "filename": "flocq/Core/Fcore_FTZ.v",
    "coq_project": "CompCert",
    "vernac_cmds": [
        [
            "Require Import Fcore_Raux.",
            "VernacRequire",
            "6a49ff899e4733a5492282770f91634f4e2bce84"
        ],
        [
            "Require Import Fcore_defs.",
            "VernacRequire",
            "a5831df34cd1384c0e8566554919e69e523ebc02"
        ],
        [
            "Require Import Fcore_rnd.",
            "VernacRequire",
            "e56b94f747b869d666d08e61f9804bdee8d2613c"
        ],
        [
            "Require Import Fcore_generic_fmt.",
            "VernacRequire",
            "cb86ef6ed7d243b0910cb42e7367eddef0ead8b4"
        ],
        [
            "Require Import Fcore_float_prop.",
            "VernacRequire",
            "cb1b82d62c5b9c01c03fb8d695d9166849c8babe"
        ],
        [
            "Require Import Fcore_ulp.",
            "VernacRequire",
            "a2773216dd151304931c9408d58e4ed4a9223717"
        ],
        [
            "Require Import Fcore_FLX.",
            "VernacRequire",
            "e9b5d5048d054f0cf551c782f104dea9bdd189e7"
        ],
        [
            "Section RND_FTZ.",
            "VernacBeginSection",
            "a7c3b3e9e5e43bd662c5a9e87cb8b207bfc96fbe"
        ],
        [
            "Variable beta : radix.",
            "VernacAssumption",
            "5414570a6751198892ee4a13f107deb4c633e62b"
        ],
        [
            "Notation bpow e := (bpow beta e).",
            "VernacSyntacticDefinition",
            "c796e278ffd17ea9674b52f8e94413782272a594"
        ],
        [
            "Variable emin prec : Z.",
            "VernacAssumption",
            "3ccc0e6889e5cd3c3d9e4dafff4f8ba78f15de33"
        ],
        [
            "Context { prec_gt_0_ : Prec_gt_0 prec }.",
            "VernacContext",
            "c8404f16109f008297dc64925b18a48ad609d64a"
        ],
        [
            "Definition FTZ_format (x : R) := exists f : float beta, x = F2R f /\\ (x <> R0 -> Zpower beta (prec - 1) <= Zabs (Fnum f) < Zpower beta prec)%Z /\\ (emin <= Fexp f)%Z.",
            "VernacDefinition",
            "4f556f50071e34f951ccc701f46e1d46ed75d39b"
        ],
        [
            "Definition FTZ_exp e := if Zlt_bool (e - prec) emin then (emin + prec - 1)%Z else (e - prec)%Z.",
            "VernacDefinition",
            "2704bd6174901e484614d8093a52bf37065d047e"
        ],
        [
            "Global Instance FTZ_exp_valid : Valid_exp FTZ_exp.",
            "VernacInstance",
            "a8c29ad19ce03b73a2872f6348f99ce79821ebf2"
        ],
        [
            "intros k.",
            "VernacExtend",
            "494800a8d2673abb596b8be5a6bf555ab7d2a2fb"
        ],
        [
            "unfold FTZ_exp.",
            "VernacExtend",
            "c95031c6a536b8360a9c32dd158615b402efe8ad"
        ],
        [
            "generalize (Zlt_cases (k - prec) emin).",
            "VernacExtend",
            "fd4ef814dbf92e0d645bca25e71b2c96b7c5654c"
        ],
        [
            "case (Zlt_bool (k - prec) emin) ; intros H1.",
            "VernacExtend",
            "d0700e3fcbe74cf6ba5b5088e0eacf3f7078d154"
        ],
        [
            "split ; intros H2.",
            "VernacExtend",
            "9f667ed972134f684a49bec8f84df56eb7fa366d"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "generalize (Zlt_cases (emin + prec + 1 - prec) emin).",
            "VernacExtend",
            "d5e2fab0a1a68b9fd0eb1175f75a3458090a3c56"
        ],
        [
            "case (Zlt_bool (emin + prec + 1 - prec) emin) ; intros H3.",
            "VernacExtend",
            "a020fcc2398fae0b0841d08a2eb01d2bcc0a7279"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "generalize (Zlt_cases (emin + prec - 1 + 1 - prec) emin).",
            "VernacExtend",
            "a68a84171e06a253dbf90dbbee5ff2f885307bde"
        ],
        [
            "generalize (prec_gt_0 prec).",
            "VernacExtend",
            "f827b434a598a8eb871cd50fd31ccf4bfded79d5"
        ],
        [
            "case (Zlt_bool (emin + prec - 1 + 1 - prec) emin) ; omega.",
            "VernacExtend",
            "a77fba752481b7ddc7ffb868c672a2436874e527"
        ],
        [
            "intros l H3.",
            "VernacExtend",
            "2224e1c9bc95e1e7a67ab28a40388519103ecc08"
        ],
        [
            "generalize (Zlt_cases (l - prec) emin).",
            "VernacExtend",
            "53e0c78ff820c589b709c0fece08214f87cc4d24"
        ],
        [
            "case (Zlt_bool (l - prec) emin) ; omega.",
            "VernacExtend",
            "6a4fa89501c0e0408b5d4c51b29b247133fa6ea9"
        ],
        [
            "split ; intros H2.",
            "VernacExtend",
            "9f667ed972134f684a49bec8f84df56eb7fa366d"
        ],
        [
            "generalize (Zlt_cases (k + 1 - prec) emin).",
            "VernacExtend",
            "332012fe6a4a3ac6e7361331cf4667fcc02e25f6"
        ],
        [
            "case (Zlt_bool (k + 1 - prec) emin) ; omega.",
            "VernacExtend",
            "af732e83e6ac93b0a351ee866964264a8a57f4f4"
        ],
        [
            "generalize (prec_gt_0 prec).",
            "VernacExtend",
            "f827b434a598a8eb871cd50fd31ccf4bfded79d5"
        ],
        [
            "split ; intros ; omega.",
            "VernacExtend",
            "8a8f4244cf689748c6f07a0b5ba7ab73393444b7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem FLXN_format_FTZ : forall x, FTZ_format x -> FLXN_format beta prec x.",
            "VernacStartTheoremProof",
            "227369ef4102ef78895a3f5fb72712f1edc4a97d"
        ],
        [
            "intros x ((xm, xe), (Hx1, (Hx2, Hx3))).",
            "VernacExtend",
            "c522e86c457b24b8703e08224620e95403eeba85"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "apply (conj Hx1 Hx2).",
            "VernacExtend",
            "b706cb2f053927258b989e502f9df2ad2945107e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem generic_format_FTZ : forall x, FTZ_format x -> generic_format beta FTZ_exp x.",
            "VernacStartTheoremProof",
            "f9518ad7457ae8fafb9ddd47d1a849486a0321a5"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "cut (generic_format beta (FLX_exp prec) x).",
            "VernacExtend",
            "3c2759a96a75726ba5ada5dfdbfa36a56956809d"
        ],
        [
            "apply generic_inclusion_ln_beta.",
            "VernacExtend",
            "084c11396ddecfe59843f97c4e3acea4d44cab1b"
        ],
        [
            "intros Zx.",
            "VernacExtend",
            "4e1b3580e03cb42fe9c1a384ada7876f9def89ed"
        ],
        [
            "destruct Hx as ((xm, xe), (Hx1, (Hx2, Hx3))).",
            "VernacExtend",
            "d1d44aa73dc631fd7e044b974271737075871f26"
        ],
        [
            "simpl in Hx2, Hx3.",
            "VernacExtend",
            "c492ff03c290e2eb6d6ae52e7d82501fa31152c0"
        ],
        [
            "specialize (Hx2 Zx).",
            "VernacExtend",
            "020c798cc837c00487d293d89a3dfef36d5b8544"
        ],
        [
            "assert (Zxm: xm <> Z0).",
            "VernacExtend",
            "09a5abb26be5bec68879dba63cdcb8fdc2e4d6c4"
        ],
        [
            "contradict Zx.",
            "VernacExtend",
            "d12ccef1ba065a2ae54cd30425f082ad16750bfd"
        ],
        [
            "rewrite Hx1, Zx.",
            "VernacExtend",
            "01aec96c0a4893eecf59d829ae73033b8af1ca6c"
        ],
        [
            "apply F2R_0.",
            "VernacExtend",
            "196be1ac823d0297c8d480b5085663e7d015d281"
        ],
        [
            "unfold FTZ_exp, FLX_exp.",
            "VernacExtend",
            "7e5a6aa23a725b76211b6e89d6f1cdd35954de23"
        ],
        [
            "rewrite Zlt_bool_false.",
            "VernacExtend",
            "451a47a78e619788d40256c2e4353542d8750de1"
        ],
        [
            "apply Zle_refl.",
            "VernacExtend",
            "68a57d6389c7dd3f2c16b824eb0734986d9ff207"
        ],
        [
            "rewrite Hx1, ln_beta_F2R with (1 := Zxm).",
            "VernacExtend",
            "60febebeb7b272f0958434f6658b00ada61f7f15"
        ],
        [
            "cut (prec - 1 < ln_beta beta (Z2R xm))%Z.",
            "VernacExtend",
            "c7f1192964ea914029ce91c6189adb4126a2a581"
        ],
        [
            "clear -Hx3 ; omega.",
            "VernacExtend",
            "e9d3d398f525500ab714e6ca21728755cd90d110"
        ],
        [
            "apply ln_beta_gt_Zpower with (1 := Zxm).",
            "VernacExtend",
            "3ab49b60399246b74f65e2bc69a0ed789adbecbd"
        ],
        [
            "apply Hx2.",
            "VernacExtend",
            "ab07d2d562dd8a37e9849b36374a81e2aa80f2e0"
        ],
        [
            "apply generic_format_FLXN.",
            "VernacExtend",
            "497e62afec8c295efdaf1e3d94d0f2b2c46f9b2c"
        ],
        [
            "now apply FLXN_format_FTZ.",
            "VernacExtend",
            "21209a04495b1993eb75c59a08c80cf907d1d3ed"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem FTZ_format_generic : forall x, generic_format beta FTZ_exp x -> FTZ_format x.",
            "VernacStartTheoremProof",
            "f0edcc66b15692fed33d19ce66c7667524a46942"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "destruct (Req_dec x 0) as [Hx3|Hx3].",
            "VernacExtend",
            "ca753f2dcfbbbe5c0f15f2d6dada4f52e42edcf0"
        ],
        [
            "exists (Float beta 0 emin).",
            "VernacExtend",
            "c3203b26750aeb331f64c8107de0d4e67ca37976"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold F2R.",
            "VernacExtend",
            "01074792470ba071b62f8438b8d9b8c922ca2998"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "now rewrite Rmult_0_l.",
            "VernacExtend",
            "408137585d2d576cda63de831cb2ec1fdb0b837a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "now elim H.",
            "VernacExtend",
            "25b0f8af2fb84c276497977e57d3240d2a987e06"
        ],
        [
            "apply Zle_refl.",
            "VernacExtend",
            "68a57d6389c7dd3f2c16b824eb0734986d9ff207"
        ],
        [
            "unfold generic_format, scaled_mantissa, canonic_exp, FTZ_exp in Hx.",
            "VernacExtend",
            "69591a74de7fc27c281bf7d80ddd83c1ce5dae95"
        ],
        [
            "destruct (ln_beta beta x) as (ex, Hx4).",
            "VernacExtend",
            "dddd933acf1ad866a02e2de94efbdb1f03002c16"
        ],
        [
            "simpl in Hx.",
            "VernacExtend",
            "5ec81d98094402995a527f35cf2e3fc289afc828"
        ],
        [
            "specialize (Hx4 Hx3).",
            "VernacExtend",
            "b5442390accd2cd7d891d97343cd6b7e69360a47"
        ],
        [
            "generalize (Zlt_cases (ex - prec) emin) Hx.",
            "VernacExtend",
            "7836929e22c9bbe1daf0c70a1586fd67822c94f6"
        ],
        [
            "clear Hx.",
            "VernacExtend",
            "314f2dd08c56e12784d701709c171b860f652dc1"
        ],
        [
            "case (Zlt_bool (ex - prec) emin) ; intros Hx5 Hx2.",
            "VernacExtend",
            "a3db906380222bd20e58bc7ebe679f5aa5de3ef6"
        ],
        [
            "elim Rlt_not_ge with (1 := proj2 Hx4).",
            "VernacExtend",
            "ee106bc7909059c4afbac0cb32bbcb63b5ff1a1e"
        ],
        [
            "apply Rle_ge.",
            "VernacExtend",
            "a688ebddf90443508c57e22ba16f7fa0da42ef9a"
        ],
        [
            "rewrite Hx2, <- F2R_Zabs.",
            "VernacExtend",
            "8ae4bec1079ce3087be8f92dd3c5a084b6a881c8"
        ],
        [
            "rewrite <- (Rmult_1_l (bpow ex)).",
            "VernacExtend",
            "858381436518279c68dd2aa3303334b930796ca7"
        ],
        [
            "unfold F2R.",
            "VernacExtend",
            "01074792470ba071b62f8438b8d9b8c922ca2998"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Rmult_le_compat.",
            "VernacExtend",
            "99a65cd1efb8e35313415d4b052731e2b0746daf"
        ],
        [
            "now apply (Z2R_le 0 1).",
            "VernacExtend",
            "10a3ab1f89a4293323efccf747fabc6d4fb7772c"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "apply (Z2R_le 1).",
            "VernacExtend",
            "0ed9eea66069dc85aaa897c5385949fe4a67943b"
        ],
        [
            "apply (Zlt_le_succ 0).",
            "VernacExtend",
            "4a8500973e3fba074ff26df3722d5272dbcc3511"
        ],
        [
            "apply lt_Z2R.",
            "VernacExtend",
            "c0e615fac753553d0eac3dc2ae4d76c109cb9e3e"
        ],
        [
            "apply Rmult_lt_reg_r with (bpow (emin + prec - 1)).",
            "VernacExtend",
            "e269791ef8a904ebc910bef118a9bf31707176df"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "rewrite Rmult_0_l.",
            "VernacExtend",
            "198c4e4c2aa27e6987cc5bebc1444c8d76760541"
        ],
        [
            "change (0 < F2R (Float beta (Zabs (Ztrunc (x * bpow (- (emin + prec - 1))))) (emin + prec - 1)))%R.",
            "VernacExtend",
            "26501bb44179d2b3f6cca6e34af61d3e452d7bfb"
        ],
        [
            "rewrite F2R_Zabs, <- Hx2.",
            "VernacExtend",
            "958c95fe6298127f9aab8d44cd95dffab6e422d8"
        ],
        [
            "now apply Rabs_pos_lt.",
            "VernacExtend",
            "6644e63c10a4ebb716152f3789ed696595825302"
        ],
        [
            "apply bpow_le.",
            "VernacExtend",
            "9264f19c0062a0a711efc832825406a995342e90"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite Hx2.",
            "VernacExtend",
            "762fa2d49508177b00d0e4ad5a9c143b424050e0"
        ],
        [
            "eexists ; repeat split ; simpl.",
            "VernacExtend",
            "8afff556de8dda2fc48bc3b01a26b6539ccaafbb"
        ],
        [
            "apply le_Z2R.",
            "VernacExtend",
            "1945b4c25beb86c99a51fb31bc5e89da8f443292"
        ],
        [
            "rewrite Z2R_Zpower.",
            "VernacExtend",
            "0e8cafd25f951e5aef33961dec1cfc55c1c015cd"
        ],
        [
            "apply Rmult_le_reg_r with (bpow (ex - prec)).",
            "VernacExtend",
            "568faffff1099c6997dff4cfa7c3087a8e333d73"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "rewrite <- bpow_plus.",
            "VernacExtend",
            "9ebeb3f5611fe78274a1e2e0131c7f7ed66e1cfc"
        ],
        [
            "replace (prec - 1 + (ex - prec))%Z with (ex - 1)%Z by ring.",
            "VernacExtend",
            "6a2f503295d05047d114bf6fa8b081103ca1040c"
        ],
        [
            "change (bpow (ex - 1) <= F2R (Float beta (Zabs (Ztrunc (x * bpow (- (ex - prec))))) (ex - prec)))%R.",
            "VernacExtend",
            "44c58573778682afa3324e668ca2b7fd969f9307"
        ],
        [
            "rewrite F2R_Zabs, <- Hx2.",
            "VernacExtend",
            "958c95fe6298127f9aab8d44cd95dffab6e422d8"
        ],
        [
            "apply Hx4.",
            "VernacExtend",
            "4f6f235a3bc63bb6fef502a56c823652ae18211c"
        ],
        [
            "apply Zle_minus_le_0.",
            "VernacExtend",
            "17de0fc9b8b61e8a1285ec4f7cd279f58ff9d877"
        ],
        [
            "now apply (Zlt_le_succ 0).",
            "VernacExtend",
            "f4f9a8bae382a8e690c277b87e0d4cfcdd02a460"
        ],
        [
            "apply lt_Z2R.",
            "VernacExtend",
            "c0e615fac753553d0eac3dc2ae4d76c109cb9e3e"
        ],
        [
            "rewrite Z2R_Zpower.",
            "VernacExtend",
            "0e8cafd25f951e5aef33961dec1cfc55c1c015cd"
        ],
        [
            "apply Rmult_lt_reg_r with (bpow (ex - prec)).",
            "VernacExtend",
            "b586b65f1689127c52d1b67bca40287a8e34cbe8"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "rewrite <- bpow_plus.",
            "VernacExtend",
            "9ebeb3f5611fe78274a1e2e0131c7f7ed66e1cfc"
        ],
        [
            "replace (prec + (ex - prec))%Z with ex by ring.",
            "VernacExtend",
            "630ab6fc4d63d018f0a35e9d4e0287479896716b"
        ],
        [
            "change (F2R (Float beta (Zabs (Ztrunc (x * bpow (- (ex - prec))))) (ex - prec)) < bpow ex)%R.",
            "VernacExtend",
            "16d0f8b4faf5955c959100232faf46bc77bf66e8"
        ],
        [
            "rewrite F2R_Zabs, <- Hx2.",
            "VernacExtend",
            "958c95fe6298127f9aab8d44cd95dffab6e422d8"
        ],
        [
            "apply Hx4.",
            "VernacExtend",
            "4f6f235a3bc63bb6fef502a56c823652ae18211c"
        ],
        [
            "now apply Zlt_le_weak.",
            "VernacExtend",
            "8df137fb70ba9a1f8f0605f13095da8524766c66"
        ],
        [
            "now apply Zge_le.",
            "VernacExtend",
            "1d4ec826c92301efe81a557699a9ca2ea3ada619"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem FTZ_format_satisfies_any : satisfies_any FTZ_format.",
            "VernacStartTheoremProof",
            "e565b044cf038d62441a46e6f7115afa24e366d0"
        ],
        [
            "refine (satisfies_any_eq _ _ _ (generic_format_satisfies_any beta FTZ_exp)).",
            "VernacExtend",
            "d71ed474e03f52d730d3b1d9074dae4b2aa941f3"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply FTZ_format_generic.",
            "VernacExtend",
            "51f85658ac93edfa17a2ce0701d289a66ad59952"
        ],
        [
            "apply generic_format_FTZ.",
            "VernacExtend",
            "9a574f65f79850007d1fb36ac534623f0bce67d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem FTZ_format_FLXN : forall x : R, (bpow (emin + prec - 1) <= Rabs x)%R -> FLXN_format beta prec x -> FTZ_format x.",
            "VernacStartTheoremProof",
            "18d0f3477dca34fac74b13fe382ae0aab9a0c91c"
        ],
        [
            "intros x Hx Fx.",
            "VernacExtend",
            "31e9c4e85b00a5f588a4b43715be40ecec7c086c"
        ],
        [
            "apply FTZ_format_generic.",
            "VernacExtend",
            "51f85658ac93edfa17a2ce0701d289a66ad59952"
        ],
        [
            "apply generic_format_FLXN in Fx.",
            "VernacExtend",
            "2637fb56f9709d30e0aa421ab8bc94a9896a5bd6"
        ],
        [
            "revert Hx Fx.",
            "VernacExtend",
            "c0f372834569c617ab5934ade936bc9bd5567cae"
        ],
        [
            "apply generic_inclusion_ge.",
            "VernacExtend",
            "b7253b5c9df757020081f07fe92ad1b79962dc13"
        ],
        [
            "intros e He.",
            "VernacExtend",
            "933455ac9e50417dcc771605432cd330296b74b2"
        ],
        [
            "unfold FTZ_exp.",
            "VernacExtend",
            "c95031c6a536b8360a9c32dd158615b402efe8ad"
        ],
        [
            "rewrite Zlt_bool_false.",
            "VernacExtend",
            "451a47a78e619788d40256c2e4353542d8750de1"
        ],
        [
            "apply Zle_refl.",
            "VernacExtend",
            "68a57d6389c7dd3f2c16b824eb0734986d9ff207"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ulp_FTZ_0: ulp beta FTZ_exp 0 = bpow (emin+prec-1).",
            "VernacStartTheoremProof",
            "b8cc69de8d9807d1f85d4ea7c923907886f5586d"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "unfold ulp; rewrite Req_bool_true; trivial.",
            "VernacExtend",
            "18eeb4900b3a6b5b47a11e52365f2023f78359bc"
        ],
        [
            "case (negligible_exp_spec FTZ_exp).",
            "VernacExtend",
            "7e32f26c4cdd2cdacb9cd34b5008ef671a85ec03"
        ],
        [
            "intros T; specialize (T (emin-1)%Z); contradict T.",
            "VernacExtend",
            "43877f2fc5a115e4d3bed88d1122043dda6976d2"
        ],
        [
            "apply Zle_not_lt; unfold FTZ_exp; unfold Prec_gt_0 in prec_gt_0_.",
            "VernacExtend",
            "961403a7d6412e82293121fd7e76183e30f677ce"
        ],
        [
            "rewrite Zlt_bool_true; omega.",
            "VernacExtend",
            "b53f7bb4a207ab852f5c93f4a2558699a5bf3490"
        ],
        [
            "assert (V:(FTZ_exp (emin+prec-1) = emin+prec-1)%Z).",
            "VernacExtend",
            "9f3c08f341a910ce915b5817423ea275e0198e74"
        ],
        [
            "unfold FTZ_exp; rewrite Zlt_bool_true; omega.",
            "VernacExtend",
            "d62d124a551f0f9ea53926023e4984743dd3ffb3"
        ],
        [
            "intros n H2; rewrite <-V.",
            "VernacExtend",
            "3c68b9ef511612c816ef465bea2d28ca5dff6260"
        ],
        [
            "apply f_equal, fexp_negligible_exp_eq...",
            "VernacExtend",
            "d6726aa5330ef193dc296c0aa4d4f4db48a49bda"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section FTZ_round.",
            "VernacBeginSection",
            "6e92c07703261164516009c81b1221319745d74f"
        ],
        [
            "Variable rnd : R -> Z.",
            "VernacAssumption",
            "5bdfd3c40d2aa8ce2b985c638278827c00ad436e"
        ],
        [
            "Context { valid_rnd : Valid_rnd rnd }.",
            "VernacContext",
            "49759e314a3bb9ba66adea1eb824227c77e97e4c"
        ],
        [
            "Definition Zrnd_FTZ x := if Rle_bool 1 (Rabs x) then rnd x else Z0.",
            "VernacDefinition",
            "9e129ac67e17f5e18443cd330f31a1fa2e1c332e"
        ],
        [
            "Global Instance valid_rnd_FTZ : Valid_rnd Zrnd_FTZ.",
            "VernacInstance",
            "e7f923188988b0cb9f3222cd8ba67969ec6aa80a"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros x y Hxy.",
            "VernacExtend",
            "44bac6ec66dd54c6c1d048cac4ab63f977af73cf"
        ],
        [
            "unfold Zrnd_FTZ.",
            "VernacExtend",
            "00a2662fbfc1d53fc1fe4bfc8ae66dc421288e55"
        ],
        [
            "case Rle_bool_spec ; intros Hx ; case Rle_bool_spec ; intros Hy.",
            "VernacExtend",
            "b55351fa99bfd0dd4f2ed93df39222f377dc6d52"
        ],
        [
            "4: easy.",
            "VernacExtend",
            "8f09b31ffc010632f432b15085d4e425debe3de3"
        ],
        [
            "now apply Zrnd_le.",
            "VernacExtend",
            "27d9d073c3ded3d27dc5834cdf232ff235f21773"
        ],
        [
            "rewrite <- (Zrnd_Z2R rnd 0).",
            "VernacExtend",
            "340dadd4a247ce93a191209a0cc392f1db06d747"
        ],
        [
            "apply Zrnd_le...",
            "VernacExtend",
            "219df7220cebaf88d5cc6ed5ee5a4e6b80811f78"
        ],
        [
            "apply Rle_trans with (Z2R (-1)).",
            "VernacExtend",
            "16aa4c838a14e559cc44e417e1861a5b3af84f52"
        ],
        [
            "2: now apply Z2R_le.",
            "VernacExtend",
            "3bc31ca77d30e32f0f8c5c005b61566ebc2444fd"
        ],
        [
            "destruct (Rabs_ge_inv _ _ Hx) as [Hx1|Hx1].",
            "VernacExtend",
            "d9b6182b4ce0d7f78c7cf10e7cf96e61ad9c599c"
        ],
        [
            "exact Hx1.",
            "VernacExtend",
            "619012b5bc303d3813baf09b498945592c82f909"
        ],
        [
            "elim Rle_not_lt with (1 := Hx1).",
            "VernacExtend",
            "d6676f397cbdcb54daecf88a6ba98c82f73fdb4f"
        ],
        [
            "apply Rle_lt_trans with (2 := Hy).",
            "VernacExtend",
            "0f42117986cf67489d7a273fa461699c0e9abc7c"
        ],
        [
            "apply Rle_trans with (1 := Hxy).",
            "VernacExtend",
            "15320367548a991b5ea122fc234978ee63198cbd"
        ],
        [
            "apply RRle_abs.",
            "VernacExtend",
            "1333b00626244e19099bec7e0de632062c4070a3"
        ],
        [
            "rewrite <- (Zrnd_Z2R rnd 0).",
            "VernacExtend",
            "340dadd4a247ce93a191209a0cc392f1db06d747"
        ],
        [
            "apply Zrnd_le...",
            "VernacExtend",
            "219df7220cebaf88d5cc6ed5ee5a4e6b80811f78"
        ],
        [
            "apply Rle_trans with (Z2R 1).",
            "VernacExtend",
            "7406ae5a82cd0c72e3b7416c8b280fe139ab7b12"
        ],
        [
            "now apply Z2R_le.",
            "VernacExtend",
            "58bf5ef017302bba0024780a49c5a9a8c382820b"
        ],
        [
            "destruct (Rabs_ge_inv _ _ Hy) as [Hy1|Hy1].",
            "VernacExtend",
            "9369f6434fbc504d9b960a752afe911276668a3b"
        ],
        [
            "elim Rle_not_lt with (1 := Hy1).",
            "VernacExtend",
            "17f672fe97bad0af47b9e9552d8013de7c4fc2cb"
        ],
        [
            "apply Rlt_le_trans with (2 := Hxy).",
            "VernacExtend",
            "637372b14e191bbb401360117e35aae334cdca7a"
        ],
        [
            "apply (Rabs_def2 _ _ Hx).",
            "VernacExtend",
            "43ea8e8ed2a7772ed3c26aa44c4a62f95824eef6"
        ],
        [
            "exact Hy1.",
            "VernacExtend",
            "d4253bf9e8f723fe7012062e123eb69b16ad4717"
        ],
        [
            "intros n.",
            "VernacExtend",
            "9410cc86153539309ee696ae5785ea70534ece11"
        ],
        [
            "unfold Zrnd_FTZ.",
            "VernacExtend",
            "00a2662fbfc1d53fc1fe4bfc8ae66dc421288e55"
        ],
        [
            "rewrite Zrnd_Z2R...",
            "VernacExtend",
            "d84a1628ed60811688a4119eaa10a7f1e4ebf847"
        ],
        [
            "case Rle_bool_spec.",
            "VernacExtend",
            "60c5f4c9f6f290e0a0d3d03a713a337c45b0b21d"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "rewrite <- Z2R_abs.",
            "VernacExtend",
            "77629e87057563edf3f2c544c80c7822cbaa734b"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "generalize (lt_Z2R _ 1 H).",
            "VernacExtend",
            "6a22606024cf8095d41adecea8cb309a7d0be093"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "now case n ; trivial ; simpl ; intros [p|p|].",
            "VernacExtend",
            "1a6aeccfac6da452c2fd65b0b67052c646c8aaf3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_FTZ_FLX : forall x : R, (bpow (emin + prec - 1) <= Rabs x)%R -> round beta FTZ_exp Zrnd_FTZ x = round beta (FLX_exp prec) rnd x.",
            "VernacStartTheoremProof",
            "7f2ed9b277f551b1da9136ffc2f724e5f8adcd3d"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "unfold round, scaled_mantissa, canonic_exp.",
            "VernacExtend",
            "770e82e59444f7b0a563dadc86949e25d7ecc323"
        ],
        [
            "destruct (ln_beta beta x) as (ex, He).",
            "VernacExtend",
            "c9e86093c3be8ec240600e91efe15e45185c4d0b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "assert (Hx0: x <> 0%R).",
            "VernacExtend",
            "e075ed41f89b0eb917a504060cf49d3baf404e3c"
        ],
        [
            "intros Hx0.",
            "VernacExtend",
            "e4fc7c21bb61d5cc4f68dc5189b0a6f1eb334f15"
        ],
        [
            "apply Rle_not_lt with (1 := Hx).",
            "VernacExtend",
            "7dd563621105450d925cd479033afb35e2b0e522"
        ],
        [
            "rewrite Hx0, Rabs_R0.",
            "VernacExtend",
            "fe606b27198a03390fe26d9216c96f63dbd792a8"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "specialize (He Hx0).",
            "VernacExtend",
            "34ae926afddf55aee6fc8873d4bece74881edf1a"
        ],
        [
            "assert (He': (emin + prec <= ex)%Z).",
            "VernacExtend",
            "7249d85bd70734beb5f8712d2170decee6e290be"
        ],
        [
            "apply (bpow_lt_bpow beta).",
            "VernacExtend",
            "8f3c581332204849527f388cfc22a58ee204a97a"
        ],
        [
            "apply Rle_lt_trans with (1 := Hx).",
            "VernacExtend",
            "db430b518aa17159c7ad33c200e700e4a1e02355"
        ],
        [
            "apply He.",
            "VernacExtend",
            "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
        ],
        [
            "replace (FTZ_exp ex) with (FLX_exp prec ex).",
            "VernacExtend",
            "23c46e0fa95fd5ce99416fa6494f030d8eea0eba"
        ],
        [
            "unfold Zrnd_FTZ.",
            "VernacExtend",
            "00a2662fbfc1d53fc1fe4bfc8ae66dc421288e55"
        ],
        [
            "rewrite Rle_bool_true.",
            "VernacExtend",
            "a9cbb345d80107750a4d675be292ce609218305d"
        ],
        [
            "apply refl_equal.",
            "VernacExtend",
            "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
        ],
        [
            "rewrite Rabs_mult.",
            "VernacExtend",
            "0a976c5fce10a63ed58fa2e07dd76a462e6697c3"
        ],
        [
            "rewrite (Rabs_pos_eq (bpow (- FLX_exp prec ex))).",
            "VernacExtend",
            "634756e197d87f912ecca5a82cc4a2175ca51ae6"
        ],
        [
            "change 1%R with (bpow 0).",
            "VernacExtend",
            "c7ae8ede2e4580ba1d7b359d84144ace66927ecc"
        ],
        [
            "rewrite <- (Zplus_opp_r (FLX_exp prec ex)).",
            "VernacExtend",
            "551c12dada1555accccaa1d8ec7fc1da52cbc847"
        ],
        [
            "rewrite bpow_plus.",
            "VernacExtend",
            "a66bde7144b19ede4a139295758f63aab8dcbea6"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "apply Rle_trans with (2 := proj1 He).",
            "VernacExtend",
            "eb60ff6646fe4357c9b0a27060d306ef7c3cbe60"
        ],
        [
            "apply bpow_le.",
            "VernacExtend",
            "9264f19c0062a0a711efc832825406a995342e90"
        ],
        [
            "unfold FLX_exp.",
            "VernacExtend",
            "71070950ec4cced4c2013495eecfd09baee01732"
        ],
        [
            "generalize (prec_gt_0 prec).",
            "VernacExtend",
            "f827b434a598a8eb871cd50fd31ccf4bfded79d5"
        ],
        [
            "clear -He' ; omega.",
            "VernacExtend",
            "afe98eb913e0b9d52c987eb582fd2d3c30f6ab9e"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "unfold FLX_exp, FTZ_exp.",
            "VernacExtend",
            "475c6de02a7488c6b67e2c5b792cc9526354beb2"
        ],
        [
            "rewrite Zlt_bool_false.",
            "VernacExtend",
            "451a47a78e619788d40256c2e4353542d8750de1"
        ],
        [
            "apply refl_equal.",
            "VernacExtend",
            "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
        ],
        [
            "clear -He' ; omega.",
            "VernacExtend",
            "afe98eb913e0b9d52c987eb582fd2d3c30f6ab9e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_FTZ_small : forall x : R, (Rabs x < bpow (emin + prec - 1))%R -> round beta FTZ_exp Zrnd_FTZ x = R0.",
            "VernacStartTheoremProof",
            "0636d8df0325df24211c6db59442ea22a553f212"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "destruct (Req_dec x 0) as [Hx0|Hx0].",
            "VernacExtend",
            "69fdcf6bda96f2d635c402e78b2df2a462d6ee11"
        ],
        [
            "rewrite Hx0.",
            "VernacExtend",
            "26e3dbf6fcf10fd77c6bbf7908df4cc84be5da3d"
        ],
        [
            "apply round_0...",
            "VernacExtend",
            "acc73e912c36de129bd103d90759fb30ec47be6f"
        ],
        [
            "unfold round, scaled_mantissa, canonic_exp.",
            "VernacExtend",
            "770e82e59444f7b0a563dadc86949e25d7ecc323"
        ],
        [
            "destruct (ln_beta beta x) as (ex, He).",
            "VernacExtend",
            "c9e86093c3be8ec240600e91efe15e45185c4d0b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "specialize (He Hx0).",
            "VernacExtend",
            "34ae926afddf55aee6fc8873d4bece74881edf1a"
        ],
        [
            "unfold Zrnd_FTZ.",
            "VernacExtend",
            "00a2662fbfc1d53fc1fe4bfc8ae66dc421288e55"
        ],
        [
            "rewrite Rle_bool_false.",
            "VernacExtend",
            "9cc550fa73f705343edcd892ccbf44dfd678378a"
        ],
        [
            "apply F2R_0.",
            "VernacExtend",
            "196be1ac823d0297c8d480b5085663e7d015d281"
        ],
        [
            "rewrite Rabs_mult.",
            "VernacExtend",
            "0a976c5fce10a63ed58fa2e07dd76a462e6697c3"
        ],
        [
            "rewrite (Rabs_pos_eq (bpow (- FTZ_exp ex))).",
            "VernacExtend",
            "7bb481cd86a7aa35dde0272ef9edd6778a59e2b4"
        ],
        [
            "change 1%R with (bpow 0).",
            "VernacExtend",
            "c7ae8ede2e4580ba1d7b359d84144ace66927ecc"
        ],
        [
            "rewrite <- (Zplus_opp_r (FTZ_exp ex)).",
            "VernacExtend",
            "37f6e6905ef5b2cd61d7a9b3a7567a2532535380"
        ],
        [
            "rewrite bpow_plus.",
            "VernacExtend",
            "a66bde7144b19ede4a139295758f63aab8dcbea6"
        ],
        [
            "apply Rmult_lt_compat_r.",
            "VernacExtend",
            "e041593c57ec6470673cc705c01d215d230e0676"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "apply Rlt_le_trans with (1 := Hx).",
            "VernacExtend",
            "17cfcea7cef1e39ddff4797053bb05abaf553802"
        ],
        [
            "apply bpow_le.",
            "VernacExtend",
            "9264f19c0062a0a711efc832825406a995342e90"
        ],
        [
            "unfold FTZ_exp.",
            "VernacExtend",
            "c95031c6a536b8360a9c32dd158615b402efe8ad"
        ],
        [
            "generalize (Zlt_cases (ex - prec) emin).",
            "VernacExtend",
            "bc14391d3174c4b31e4cceb580bd86824e375ade"
        ],
        [
            "case Zlt_bool.",
            "VernacExtend",
            "78164fbad2d19950938826c1852753d600318c13"
        ],
        [
            "intros _.",
            "VernacExtend",
            "eb0e518a4896777a9a76b3ab973eaf7b4f1b52db"
        ],
        [
            "apply Zle_refl.",
            "VernacExtend",
            "68a57d6389c7dd3f2c16b824eb0734986d9ff207"
        ],
        [
            "intros He'.",
            "VernacExtend",
            "7643c54943734a5b7b1506fcc88a14f324fca387"
        ],
        [
            "elim Rlt_not_le with (1 := Hx).",
            "VernacExtend",
            "58f61b9167ea4bd16a23de47ef13adf959c0e975"
        ],
        [
            "apply Rle_trans with (2 := proj1 He).",
            "VernacExtend",
            "eb60ff6646fe4357c9b0a27060d306ef7c3cbe60"
        ],
        [
            "apply bpow_le.",
            "VernacExtend",
            "9264f19c0062a0a711efc832825406a995342e90"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End FTZ_round.",
            "VernacEndSegment",
            "493dc57ec85ef2f724f7403acc88aed56f14e928"
        ],
        [
            "End RND_FTZ.",
            "VernacEndSegment",
            "30560ba480ee2a5c849b9e86e47227a4188d40a2"
        ]
    ],
    "proofs": [
        {
            "name": "FTZ_exp_valid",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "intros k.",
                        "VernacExtend",
                        "494800a8d2673abb596b8be5a6bf555ab7d2a2fb"
                    ]
                },
                {
                    "command": [
                        "unfold FTZ_exp.",
                        "VernacExtend",
                        "c95031c6a536b8360a9c32dd158615b402efe8ad"
                    ]
                },
                {
                    "command": [
                        "generalize (Zlt_cases (k - prec) emin).",
                        "VernacExtend",
                        "fd4ef814dbf92e0d645bca25e71b2c96b7c5654c"
                    ]
                },
                {
                    "command": [
                        "case (Zlt_bool (k - prec) emin) ; intros H1.",
                        "VernacExtend",
                        "d0700e3fcbe74cf6ba5b5088e0eacf3f7078d154"
                    ]
                },
                {
                    "command": [
                        "split ; intros H2.",
                        "VernacExtend",
                        "9f667ed972134f684a49bec8f84df56eb7fa366d"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "generalize (Zlt_cases (emin + prec + 1 - prec) emin).",
                        "VernacExtend",
                        "d5e2fab0a1a68b9fd0eb1175f75a3458090a3c56"
                    ]
                },
                {
                    "command": [
                        "case (Zlt_bool (emin + prec + 1 - prec) emin) ; intros H3.",
                        "VernacExtend",
                        "a020fcc2398fae0b0841d08a2eb01d2bcc0a7279"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "generalize (Zlt_cases (emin + prec - 1 + 1 - prec) emin).",
                        "VernacExtend",
                        "a68a84171e06a253dbf90dbbee5ff2f885307bde"
                    ]
                },
                {
                    "command": [
                        "generalize (prec_gt_0 prec).",
                        "VernacExtend",
                        "f827b434a598a8eb871cd50fd31ccf4bfded79d5"
                    ]
                },
                {
                    "command": [
                        "case (Zlt_bool (emin + prec - 1 + 1 - prec) emin) ; omega.",
                        "VernacExtend",
                        "a77fba752481b7ddc7ffb868c672a2436874e527"
                    ]
                },
                {
                    "command": [
                        "intros l H3.",
                        "VernacExtend",
                        "2224e1c9bc95e1e7a67ab28a40388519103ecc08"
                    ]
                },
                {
                    "command": [
                        "generalize (Zlt_cases (l - prec) emin).",
                        "VernacExtend",
                        "53e0c78ff820c589b709c0fece08214f87cc4d24"
                    ]
                },
                {
                    "command": [
                        "case (Zlt_bool (l - prec) emin) ; omega.",
                        "VernacExtend",
                        "6a4fa89501c0e0408b5d4c51b29b247133fa6ea9"
                    ]
                },
                {
                    "command": [
                        "split ; intros H2.",
                        "VernacExtend",
                        "9f667ed972134f684a49bec8f84df56eb7fa366d"
                    ]
                },
                {
                    "command": [
                        "generalize (Zlt_cases (k + 1 - prec) emin).",
                        "VernacExtend",
                        "332012fe6a4a3ac6e7361331cf4667fcc02e25f6"
                    ]
                },
                {
                    "command": [
                        "case (Zlt_bool (k + 1 - prec) emin) ; omega.",
                        "VernacExtend",
                        "af732e83e6ac93b0a351ee866964264a8a57f4f4"
                    ]
                },
                {
                    "command": [
                        "generalize (prec_gt_0 prec).",
                        "VernacExtend",
                        "f827b434a598a8eb871cd50fd31ccf4bfded79d5"
                    ]
                },
                {
                    "command": [
                        "split ; intros ; omega.",
                        "VernacExtend",
                        "8a8f4244cf689748c6f07a0b5ba7ab73393444b7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generic_format_FTZ",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "cut (generic_format beta (FLX_exp prec) x).",
                        "VernacExtend",
                        "3c2759a96a75726ba5ada5dfdbfa36a56956809d"
                    ]
                },
                {
                    "command": [
                        "apply generic_inclusion_ln_beta.",
                        "VernacExtend",
                        "084c11396ddecfe59843f97c4e3acea4d44cab1b"
                    ]
                },
                {
                    "command": [
                        "intros Zx.",
                        "VernacExtend",
                        "4e1b3580e03cb42fe9c1a384ada7876f9def89ed"
                    ]
                },
                {
                    "command": [
                        "destruct Hx as ((xm, xe), (Hx1, (Hx2, Hx3))).",
                        "VernacExtend",
                        "d1d44aa73dc631fd7e044b974271737075871f26"
                    ]
                },
                {
                    "command": [
                        "simpl in Hx2, Hx3.",
                        "VernacExtend",
                        "c492ff03c290e2eb6d6ae52e7d82501fa31152c0"
                    ]
                },
                {
                    "command": [
                        "specialize (Hx2 Zx).",
                        "VernacExtend",
                        "020c798cc837c00487d293d89a3dfef36d5b8544"
                    ]
                },
                {
                    "command": [
                        "assert (Zxm: xm <> Z0).",
                        "VernacExtend",
                        "09a5abb26be5bec68879dba63cdcb8fdc2e4d6c4"
                    ]
                },
                {
                    "command": [
                        "contradict Zx.",
                        "VernacExtend",
                        "d12ccef1ba065a2ae54cd30425f082ad16750bfd"
                    ]
                },
                {
                    "command": [
                        "rewrite Hx1, Zx.",
                        "VernacExtend",
                        "01aec96c0a4893eecf59d829ae73033b8af1ca6c"
                    ]
                },
                {
                    "command": [
                        "apply F2R_0.",
                        "VernacExtend",
                        "196be1ac823d0297c8d480b5085663e7d015d281"
                    ]
                },
                {
                    "command": [
                        "unfold FTZ_exp, FLX_exp.",
                        "VernacExtend",
                        "7e5a6aa23a725b76211b6e89d6f1cdd35954de23"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlt_bool_false.",
                        "VernacExtend",
                        "451a47a78e619788d40256c2e4353542d8750de1"
                    ]
                },
                {
                    "command": [
                        "apply Zle_refl.",
                        "VernacExtend",
                        "68a57d6389c7dd3f2c16b824eb0734986d9ff207"
                    ]
                },
                {
                    "command": [
                        "rewrite Hx1, ln_beta_F2R with (1 := Zxm).",
                        "VernacExtend",
                        "60febebeb7b272f0958434f6658b00ada61f7f15"
                    ]
                },
                {
                    "command": [
                        "cut (prec - 1 < ln_beta beta (Z2R xm))%Z.",
                        "VernacExtend",
                        "c7f1192964ea914029ce91c6189adb4126a2a581"
                    ]
                },
                {
                    "command": [
                        "clear -Hx3 ; omega.",
                        "VernacExtend",
                        "e9d3d398f525500ab714e6ca21728755cd90d110"
                    ]
                },
                {
                    "command": [
                        "apply ln_beta_gt_Zpower with (1 := Zxm).",
                        "VernacExtend",
                        "3ab49b60399246b74f65e2bc69a0ed789adbecbd"
                    ]
                },
                {
                    "command": [
                        "apply Hx2.",
                        "VernacExtend",
                        "ab07d2d562dd8a37e9849b36374a81e2aa80f2e0"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_FLXN.",
                        "VernacExtend",
                        "497e62afec8c295efdaf1e3d94d0f2b2c46f9b2c"
                    ]
                },
                {
                    "command": [
                        "now apply FLXN_format_FTZ.",
                        "VernacExtend",
                        "21209a04495b1993eb75c59a08c80cf907d1d3ed"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FTZ_format_generic",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "destruct (Req_dec x 0) as [Hx3|Hx3].",
                        "VernacExtend",
                        "ca753f2dcfbbbe5c0f15f2d6dada4f52e42edcf0"
                    ]
                },
                {
                    "command": [
                        "exists (Float beta 0 emin).",
                        "VernacExtend",
                        "c3203b26750aeb331f64c8107de0d4e67ca37976"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "unfold F2R.",
                        "VernacExtend",
                        "01074792470ba071b62f8438b8d9b8c922ca2998"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "now rewrite Rmult_0_l.",
                        "VernacExtend",
                        "408137585d2d576cda63de831cb2ec1fdb0b837a"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "now elim H.",
                        "VernacExtend",
                        "25b0f8af2fb84c276497977e57d3240d2a987e06"
                    ]
                },
                {
                    "command": [
                        "apply Zle_refl.",
                        "VernacExtend",
                        "68a57d6389c7dd3f2c16b824eb0734986d9ff207"
                    ]
                },
                {
                    "command": [
                        "unfold generic_format, scaled_mantissa, canonic_exp, FTZ_exp in Hx.",
                        "VernacExtend",
                        "69591a74de7fc27c281bf7d80ddd83c1ce5dae95"
                    ]
                },
                {
                    "command": [
                        "destruct (ln_beta beta x) as (ex, Hx4).",
                        "VernacExtend",
                        "dddd933acf1ad866a02e2de94efbdb1f03002c16"
                    ]
                },
                {
                    "command": [
                        "simpl in Hx.",
                        "VernacExtend",
                        "5ec81d98094402995a527f35cf2e3fc289afc828"
                    ]
                },
                {
                    "command": [
                        "specialize (Hx4 Hx3).",
                        "VernacExtend",
                        "b5442390accd2cd7d891d97343cd6b7e69360a47"
                    ]
                },
                {
                    "command": [
                        "generalize (Zlt_cases (ex - prec) emin) Hx.",
                        "VernacExtend",
                        "7836929e22c9bbe1daf0c70a1586fd67822c94f6"
                    ]
                },
                {
                    "command": [
                        "clear Hx.",
                        "VernacExtend",
                        "314f2dd08c56e12784d701709c171b860f652dc1"
                    ]
                },
                {
                    "command": [
                        "case (Zlt_bool (ex - prec) emin) ; intros Hx5 Hx2.",
                        "VernacExtend",
                        "a3db906380222bd20e58bc7ebe679f5aa5de3ef6"
                    ]
                },
                {
                    "command": [
                        "elim Rlt_not_ge with (1 := proj2 Hx4).",
                        "VernacExtend",
                        "ee106bc7909059c4afbac0cb32bbcb63b5ff1a1e"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge.",
                        "VernacExtend",
                        "a688ebddf90443508c57e22ba16f7fa0da42ef9a"
                    ]
                },
                {
                    "command": [
                        "rewrite Hx2, <- F2R_Zabs.",
                        "VernacExtend",
                        "8ae4bec1079ce3087be8f92dd3c5a084b6a881c8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rmult_1_l (bpow ex)).",
                        "VernacExtend",
                        "858381436518279c68dd2aa3303334b930796ca7"
                    ]
                },
                {
                    "command": [
                        "unfold F2R.",
                        "VernacExtend",
                        "01074792470ba071b62f8438b8d9b8c922ca2998"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat.",
                        "VernacExtend",
                        "99a65cd1efb8e35313415d4b052731e2b0746daf"
                    ]
                },
                {
                    "command": [
                        "now apply (Z2R_le 0 1).",
                        "VernacExtend",
                        "10a3ab1f89a4293323efccf747fabc6d4fb7772c"
                    ]
                },
                {
                    "command": [
                        "apply bpow_ge_0.",
                        "VernacExtend",
                        "21ebde0be0a631dfd60f8ca27e963cec55b52605"
                    ]
                },
                {
                    "command": [
                        "apply (Z2R_le 1).",
                        "VernacExtend",
                        "0ed9eea66069dc85aaa897c5385949fe4a67943b"
                    ]
                },
                {
                    "command": [
                        "apply (Zlt_le_succ 0).",
                        "VernacExtend",
                        "4a8500973e3fba074ff26df3722d5272dbcc3511"
                    ]
                },
                {
                    "command": [
                        "apply lt_Z2R.",
                        "VernacExtend",
                        "c0e615fac753553d0eac3dc2ae4d76c109cb9e3e"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_reg_r with (bpow (emin + prec - 1)).",
                        "VernacExtend",
                        "e269791ef8a904ebc910bef118a9bf31707176df"
                    ]
                },
                {
                    "command": [
                        "apply bpow_gt_0.",
                        "VernacExtend",
                        "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_0_l.",
                        "VernacExtend",
                        "198c4e4c2aa27e6987cc5bebc1444c8d76760541"
                    ]
                },
                {
                    "command": [
                        "change (0 < F2R (Float beta (Zabs (Ztrunc (x * bpow (- (emin + prec - 1))))) (emin + prec - 1)))%R.",
                        "VernacExtend",
                        "26501bb44179d2b3f6cca6e34af61d3e452d7bfb"
                    ]
                },
                {
                    "command": [
                        "rewrite F2R_Zabs, <- Hx2.",
                        "VernacExtend",
                        "958c95fe6298127f9aab8d44cd95dffab6e422d8"
                    ]
                },
                {
                    "command": [
                        "now apply Rabs_pos_lt.",
                        "VernacExtend",
                        "6644e63c10a4ebb716152f3789ed696595825302"
                    ]
                },
                {
                    "command": [
                        "apply bpow_le.",
                        "VernacExtend",
                        "9264f19c0062a0a711efc832825406a995342e90"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite Hx2.",
                        "VernacExtend",
                        "762fa2d49508177b00d0e4ad5a9c143b424050e0"
                    ]
                },
                {
                    "command": [
                        "eexists ; repeat split ; simpl.",
                        "VernacExtend",
                        "8afff556de8dda2fc48bc3b01a26b6539ccaafbb"
                    ]
                },
                {
                    "command": [
                        "apply le_Z2R.",
                        "VernacExtend",
                        "1945b4c25beb86c99a51fb31bc5e89da8f443292"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_Zpower.",
                        "VernacExtend",
                        "0e8cafd25f951e5aef33961dec1cfc55c1c015cd"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_reg_r with (bpow (ex - prec)).",
                        "VernacExtend",
                        "568faffff1099c6997dff4cfa7c3087a8e333d73"
                    ]
                },
                {
                    "command": [
                        "apply bpow_gt_0.",
                        "VernacExtend",
                        "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- bpow_plus.",
                        "VernacExtend",
                        "9ebeb3f5611fe78274a1e2e0131c7f7ed66e1cfc"
                    ]
                },
                {
                    "command": [
                        "replace (prec - 1 + (ex - prec))%Z with (ex - 1)%Z by ring.",
                        "VernacExtend",
                        "6a2f503295d05047d114bf6fa8b081103ca1040c"
                    ]
                },
                {
                    "command": [
                        "change (bpow (ex - 1) <= F2R (Float beta (Zabs (Ztrunc (x * bpow (- (ex - prec))))) (ex - prec)))%R.",
                        "VernacExtend",
                        "44c58573778682afa3324e668ca2b7fd969f9307"
                    ]
                },
                {
                    "command": [
                        "rewrite F2R_Zabs, <- Hx2.",
                        "VernacExtend",
                        "958c95fe6298127f9aab8d44cd95dffab6e422d8"
                    ]
                },
                {
                    "command": [
                        "apply Hx4.",
                        "VernacExtend",
                        "4f6f235a3bc63bb6fef502a56c823652ae18211c"
                    ]
                },
                {
                    "command": [
                        "apply Zle_minus_le_0.",
                        "VernacExtend",
                        "17de0fc9b8b61e8a1285ec4f7cd279f58ff9d877"
                    ]
                },
                {
                    "command": [
                        "now apply (Zlt_le_succ 0).",
                        "VernacExtend",
                        "f4f9a8bae382a8e690c277b87e0d4cfcdd02a460"
                    ]
                },
                {
                    "command": [
                        "apply lt_Z2R.",
                        "VernacExtend",
                        "c0e615fac753553d0eac3dc2ae4d76c109cb9e3e"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_Zpower.",
                        "VernacExtend",
                        "0e8cafd25f951e5aef33961dec1cfc55c1c015cd"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_reg_r with (bpow (ex - prec)).",
                        "VernacExtend",
                        "b586b65f1689127c52d1b67bca40287a8e34cbe8"
                    ]
                },
                {
                    "command": [
                        "apply bpow_gt_0.",
                        "VernacExtend",
                        "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- bpow_plus.",
                        "VernacExtend",
                        "9ebeb3f5611fe78274a1e2e0131c7f7ed66e1cfc"
                    ]
                },
                {
                    "command": [
                        "replace (prec + (ex - prec))%Z with ex by ring.",
                        "VernacExtend",
                        "630ab6fc4d63d018f0a35e9d4e0287479896716b"
                    ]
                },
                {
                    "command": [
                        "change (F2R (Float beta (Zabs (Ztrunc (x * bpow (- (ex - prec))))) (ex - prec)) < bpow ex)%R.",
                        "VernacExtend",
                        "16d0f8b4faf5955c959100232faf46bc77bf66e8"
                    ]
                },
                {
                    "command": [
                        "rewrite F2R_Zabs, <- Hx2.",
                        "VernacExtend",
                        "958c95fe6298127f9aab8d44cd95dffab6e422d8"
                    ]
                },
                {
                    "command": [
                        "apply Hx4.",
                        "VernacExtend",
                        "4f6f235a3bc63bb6fef502a56c823652ae18211c"
                    ]
                },
                {
                    "command": [
                        "now apply Zlt_le_weak.",
                        "VernacExtend",
                        "8df137fb70ba9a1f8f0605f13095da8524766c66"
                    ]
                },
                {
                    "command": [
                        "now apply Zge_le.",
                        "VernacExtend",
                        "1d4ec826c92301efe81a557699a9ca2ea3ada619"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FTZ_format_satisfies_any",
            "line_nb": 129,
            "steps": [
                {
                    "command": [
                        "refine (satisfies_any_eq _ _ _ (generic_format_satisfies_any beta FTZ_exp)).",
                        "VernacExtend",
                        "d71ed474e03f52d730d3b1d9074dae4b2aa941f3"
                    ]
                },
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply FTZ_format_generic.",
                        "VernacExtend",
                        "51f85658ac93edfa17a2ce0701d289a66ad59952"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_FTZ.",
                        "VernacExtend",
                        "9a574f65f79850007d1fb36ac534623f0bce67d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FTZ_format_FLXN",
            "line_nb": 136,
            "steps": [
                {
                    "command": [
                        "intros x Hx Fx.",
                        "VernacExtend",
                        "31e9c4e85b00a5f588a4b43715be40ecec7c086c"
                    ]
                },
                {
                    "command": [
                        "apply FTZ_format_generic.",
                        "VernacExtend",
                        "51f85658ac93edfa17a2ce0701d289a66ad59952"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_FLXN in Fx.",
                        "VernacExtend",
                        "2637fb56f9709d30e0aa421ab8bc94a9896a5bd6"
                    ]
                },
                {
                    "command": [
                        "revert Hx Fx.",
                        "VernacExtend",
                        "c0f372834569c617ab5934ade936bc9bd5567cae"
                    ]
                },
                {
                    "command": [
                        "apply generic_inclusion_ge.",
                        "VernacExtend",
                        "b7253b5c9df757020081f07fe92ad1b79962dc13"
                    ]
                },
                {
                    "command": [
                        "intros e He.",
                        "VernacExtend",
                        "933455ac9e50417dcc771605432cd330296b74b2"
                    ]
                },
                {
                    "command": [
                        "unfold FTZ_exp.",
                        "VernacExtend",
                        "c95031c6a536b8360a9c32dd158615b402efe8ad"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlt_bool_false.",
                        "VernacExtend",
                        "451a47a78e619788d40256c2e4353542d8750de1"
                    ]
                },
                {
                    "command": [
                        "apply Zle_refl.",
                        "VernacExtend",
                        "68a57d6389c7dd3f2c16b824eb0734986d9ff207"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_FTZ_FLX",
            "line_nb": 203,
            "steps": [
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "unfold round, scaled_mantissa, canonic_exp.",
                        "VernacExtend",
                        "770e82e59444f7b0a563dadc86949e25d7ecc323"
                    ]
                },
                {
                    "command": [
                        "destruct (ln_beta beta x) as (ex, He).",
                        "VernacExtend",
                        "c9e86093c3be8ec240600e91efe15e45185c4d0b"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "assert (Hx0: x <> 0%R).",
                        "VernacExtend",
                        "e075ed41f89b0eb917a504060cf49d3baf404e3c"
                    ]
                },
                {
                    "command": [
                        "intros Hx0.",
                        "VernacExtend",
                        "e4fc7c21bb61d5cc4f68dc5189b0a6f1eb334f15"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt with (1 := Hx).",
                        "VernacExtend",
                        "7dd563621105450d925cd479033afb35e2b0e522"
                    ]
                },
                {
                    "command": [
                        "rewrite Hx0, Rabs_R0.",
                        "VernacExtend",
                        "fe606b27198a03390fe26d9216c96f63dbd792a8"
                    ]
                },
                {
                    "command": [
                        "apply bpow_gt_0.",
                        "VernacExtend",
                        "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
                    ]
                },
                {
                    "command": [
                        "specialize (He Hx0).",
                        "VernacExtend",
                        "34ae926afddf55aee6fc8873d4bece74881edf1a"
                    ]
                },
                {
                    "command": [
                        "assert (He': (emin + prec <= ex)%Z).",
                        "VernacExtend",
                        "7249d85bd70734beb5f8712d2170decee6e290be"
                    ]
                },
                {
                    "command": [
                        "apply (bpow_lt_bpow beta).",
                        "VernacExtend",
                        "8f3c581332204849527f388cfc22a58ee204a97a"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (1 := Hx).",
                        "VernacExtend",
                        "db430b518aa17159c7ad33c200e700e4a1e02355"
                    ]
                },
                {
                    "command": [
                        "apply He.",
                        "VernacExtend",
                        "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
                    ]
                },
                {
                    "command": [
                        "replace (FTZ_exp ex) with (FLX_exp prec ex).",
                        "VernacExtend",
                        "23c46e0fa95fd5ce99416fa6494f030d8eea0eba"
                    ]
                },
                {
                    "command": [
                        "unfold Zrnd_FTZ.",
                        "VernacExtend",
                        "00a2662fbfc1d53fc1fe4bfc8ae66dc421288e55"
                    ]
                },
                {
                    "command": [
                        "rewrite Rle_bool_true.",
                        "VernacExtend",
                        "a9cbb345d80107750a4d675be292ce609218305d"
                    ]
                },
                {
                    "command": [
                        "apply refl_equal.",
                        "VernacExtend",
                        "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_mult.",
                        "VernacExtend",
                        "0a976c5fce10a63ed58fa2e07dd76a462e6697c3"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rabs_pos_eq (bpow (- FLX_exp prec ex))).",
                        "VernacExtend",
                        "634756e197d87f912ecca5a82cc4a2175ca51ae6"
                    ]
                },
                {
                    "command": [
                        "change 1%R with (bpow 0).",
                        "VernacExtend",
                        "c7ae8ede2e4580ba1d7b359d84144ace66927ecc"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Zplus_opp_r (FLX_exp prec ex)).",
                        "VernacExtend",
                        "551c12dada1555accccaa1d8ec7fc1da52cbc847"
                    ]
                },
                {
                    "command": [
                        "rewrite bpow_plus.",
                        "VernacExtend",
                        "a66bde7144b19ede4a139295758f63aab8dcbea6"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_r.",
                        "VernacExtend",
                        "6c4c5a82dab802842919dd673f1978a3cb8cff73"
                    ]
                },
                {
                    "command": [
                        "apply bpow_ge_0.",
                        "VernacExtend",
                        "21ebde0be0a631dfd60f8ca27e963cec55b52605"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (2 := proj1 He).",
                        "VernacExtend",
                        "eb60ff6646fe4357c9b0a27060d306ef7c3cbe60"
                    ]
                },
                {
                    "command": [
                        "apply bpow_le.",
                        "VernacExtend",
                        "9264f19c0062a0a711efc832825406a995342e90"
                    ]
                },
                {
                    "command": [
                        "unfold FLX_exp.",
                        "VernacExtend",
                        "71070950ec4cced4c2013495eecfd09baee01732"
                    ]
                },
                {
                    "command": [
                        "generalize (prec_gt_0 prec).",
                        "VernacExtend",
                        "f827b434a598a8eb871cd50fd31ccf4bfded79d5"
                    ]
                },
                {
                    "command": [
                        "clear -He' ; omega.",
                        "VernacExtend",
                        "afe98eb913e0b9d52c987eb582fd2d3c30f6ab9e"
                    ]
                },
                {
                    "command": [
                        "apply bpow_ge_0.",
                        "VernacExtend",
                        "21ebde0be0a631dfd60f8ca27e963cec55b52605"
                    ]
                },
                {
                    "command": [
                        "unfold FLX_exp, FTZ_exp.",
                        "VernacExtend",
                        "475c6de02a7488c6b67e2c5b792cc9526354beb2"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlt_bool_false.",
                        "VernacExtend",
                        "451a47a78e619788d40256c2e4353542d8750de1"
                    ]
                },
                {
                    "command": [
                        "apply refl_equal.",
                        "VernacExtend",
                        "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
                    ]
                },
                {
                    "command": [
                        "clear -He' ; omega.",
                        "VernacExtend",
                        "afe98eb913e0b9d52c987eb582fd2d3c30f6ab9e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}