{
    "filename": "backend/Tailcallproof.v",
    "coq_project": "CompCert",
    "vernac_cmds": [
        [
            "Require Import Coqlib Maps Integers AST Linking.",
            "VernacRequire",
            "7618222862785c312254a64c4e1c2d95b51eecbe"
        ],
        [
            "Require Import Values Memory Events Globalenvs Smallstep.",
            "VernacRequire",
            "176983863c3dde5db7b9f7884403f0283544d71f"
        ],
        [
            "Require Import Op Registers RTL Conventions Tailcall.",
            "VernacRequire",
            "4f011f4b47480f16b20cd181e25ecd8119c862fc"
        ],
        [
            "Fixpoint return_measure_rec (n: nat) (c: code) (pc: node) {struct n}: nat := match n with | O => O | S n' => match c!pc with | Some(Inop s) => S(return_measure_rec n' c s) | Some(Iop op args dst s) => S(return_measure_rec n' c s) | _ => O end end.",
            "VernacFixpoint",
            "d8cacdcbb425153c72106b13e24c512408548d30"
        ],
        [
            "Definition return_measure (c: code) (pc: node) := return_measure_rec niter c pc.",
            "VernacDefinition",
            "5154fa97663adaf2c745b414de1ce095effbf924"
        ],
        [
            "Lemma return_measure_bounds: forall f pc, (return_measure f pc <= niter)%nat.",
            "VernacStartTheoremProof",
            "0b2ca329f4ddb1657a7f386bb38accfd1f1a3904"
        ],
        [
            "intro f.",
            "VernacExtend",
            "cfca43118419dd191a669828299d7df459d583f5"
        ],
        [
            "assert (forall n pc, (return_measure_rec n f pc <= n)%nat).",
            "VernacExtend",
            "521a532576bbdc81a2f2e4ef17507d2278a2e949"
        ],
        [
            "induction n; intros; simpl.",
            "VernacExtend",
            "f27a2774667ef3bddfddc5ec776ca116504c7463"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "destruct (f!pc); try omega.",
            "VernacExtend",
            "68037e657100173babad25e8d05ce93d50d396ca"
        ],
        [
            "destruct i; try omega.",
            "VernacExtend",
            "6b99b374ddfac2946d3afdbc0f87528c06f5acad"
        ],
        [
            "generalize (IHn n0).",
            "VernacExtend",
            "0aefc40b50aafe3becd8f99c61e0c559153296ce"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "generalize (IHn n0).",
            "VernacExtend",
            "0aefc40b50aafe3becd8f99c61e0c559153296ce"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold return_measure.",
            "VernacExtend",
            "b3e9caef0d0627bab50e23678755fb5e45c3d88f"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark return_measure_rec_incr: forall f n1 n2 pc, (n1 <= n2)%nat -> (return_measure_rec n1 f pc <= return_measure_rec n2 f pc)%nat.",
            "VernacStartTheoremProof",
            "90e9eb77abb366b042df7c7bb9fb62897f0a7fd5"
        ],
        [
            "induction n1; intros; simpl.",
            "VernacExtend",
            "76798c8beff908b20ec94e1dac39bf6a7fb82ab4"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "destruct n2.",
            "VernacExtend",
            "cb9c60451c453544c94bf5208e8ca5002d52d715"
        ],
        [
            "omegaContradiction.",
            "VernacExtend",
            "329a0d87fada76e54a403fa49705e937670711cd"
        ],
        [
            "assert (n1 <= n2)%nat by omega.",
            "VernacExtend",
            "d77983cf02b032050805221e70df957f6c29ec72"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct f!pc; try omega.",
            "VernacExtend",
            "68037e657100173babad25e8d05ce93d50d396ca"
        ],
        [
            "destruct i; try omega.",
            "VernacExtend",
            "6b99b374ddfac2946d3afdbc0f87528c06f5acad"
        ],
        [
            "generalize (IHn1 n2 n H0).",
            "VernacExtend",
            "85f66bf373aa3e515ec65fd2a2c84f1d4a37ebc8"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "generalize (IHn1 n2 n H0).",
            "VernacExtend",
            "85f66bf373aa3e515ec65fd2a2c84f1d4a37ebc8"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_return_measure_rec: forall f n n' pc r, is_return n f pc r = true -> (n <= n')%nat -> return_measure_rec n f.(fn_code) pc = return_measure_rec n' f.(fn_code) pc.",
            "VernacStartTheoremProof",
            "f99ed1eb31539b1d94d7357ec2fa0304a24527be"
        ],
        [
            "induction n; simpl; intros.",
            "VernacExtend",
            "f4638561e18037d1d0dd2a07d3cbcf68a41a03a8"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "destruct n'.",
            "VernacExtend",
            "6697461cc7fef4008f21cc451e6085dad5d278f4"
        ],
        [
            "omegaContradiction.",
            "VernacExtend",
            "329a0d87fada76e54a403fa49705e937670711cd"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (fn_code f)!pc; try congruence.",
            "VernacExtend",
            "b89d047f63cd9f8d69c0b7a94f0f6159673078eb"
        ],
        [
            "destruct i; try congruence.",
            "VernacExtend",
            "620e0ba08975d915ef74275a67f7491e9d990f15"
        ],
        [
            "decEq.",
            "VernacExtend",
            "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
        ],
        [
            "apply IHn with r.",
            "VernacExtend",
            "c5e8db601c9eaa7bb7849c9431a8c59a000ecf9e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "destruct (is_move_operation o l); try congruence.",
            "VernacExtend",
            "1ac470e7c07e4f0d6a9e45d243f4697d906e6d87"
        ],
        [
            "destruct (Reg.eq r r1); try congruence.",
            "VernacExtend",
            "3330eb7ad0319c087e2eac7b887ebea191d80be8"
        ],
        [
            "decEq.",
            "VernacExtend",
            "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
        ],
        [
            "apply IHn with r0.",
            "VernacExtend",
            "06124ba15a9294d71734edf4acd133767db7e810"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive is_return_spec (f:function): node -> reg -> Prop := | is_return_none: forall pc r, f.(fn_code)!pc = Some(Ireturn None) -> is_return_spec f pc r | is_return_some: forall pc r, f.(fn_code)!pc = Some(Ireturn (Some r)) -> is_return_spec f pc r | is_return_nop: forall pc r s, f.(fn_code)!pc = Some(Inop s) -> is_return_spec f s r -> (return_measure f.(fn_code) s < return_measure f.(fn_code) pc)%nat -> is_return_spec f pc r | is_return_move: forall pc r r' s, f.(fn_code)!pc = Some(Iop Omove (r::nil) r' s) -> is_return_spec f s r' -> (return_measure f.(fn_code) s < return_measure f.(fn_code) pc)%nat -> is_return_spec f pc r.",
            "VernacInductive",
            "34487fbb46e06c655edd4130d6763862628f58b4"
        ],
        [
            "Lemma is_return_charact: forall f n pc rret, is_return n f pc rret = true -> (n <= niter)%nat -> is_return_spec f pc rret.",
            "VernacStartTheoremProof",
            "0cb1002d2e7dc8e2c42a0452d50d22d9d8a59726"
        ],
        [
            "induction n; intros.",
            "VernacExtend",
            "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "generalize H.",
            "VernacExtend",
            "743bb3d7407250a3128af7c9fa5ed4e9ada826b2"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "caseEq ((fn_code f)!pc); try congruence.",
            "VernacExtend",
            "e37a400a672bc3175fc2622ff588945f6dcfa097"
        ],
        [
            "intro i.",
            "VernacExtend",
            "b1ef927907197c9312276e13d6fd790a77b5f54e"
        ],
        [
            "caseEq i; try congruence.",
            "VernacExtend",
            "4a5d5829d92ef6b900ad3e99a6b6b357139755bb"
        ],
        [
            "intros s; intros.",
            "VernacExtend",
            "987ac06f5f7fee1464a54272792d51b6c8d098db"
        ],
        [
            "eapply is_return_nop; eauto.",
            "VernacExtend",
            "0c134e193954e26c0e50e8d9a2a59138104479ef"
        ],
        [
            "eapply IHn; eauto.",
            "VernacExtend",
            "d9908376f41a48355fc89af086f965ebf5b7c128"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "unfold return_measure.",
            "VernacExtend",
            "b3e9caef0d0627bab50e23678755fb5e45c3d88f"
        ],
        [
            "rewrite <- (is_return_measure_rec f (S n) niter pc rret); auto.",
            "VernacExtend",
            "54645e4d80b0da44c7c42fc5716cc3c6e2da5250"
        ],
        [
            "rewrite <- (is_return_measure_rec f n niter s rret); auto.",
            "VernacExtend",
            "ae4430c315138a900055fc1b21b58832c8e4973e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "intros op args dst s EQ1 EQ2.",
            "VernacExtend",
            "9e85160d16e68ccb88720f2368121c4fb7741dd4"
        ],
        [
            "caseEq (is_move_operation op args); try congruence.",
            "VernacExtend",
            "c1176a71d7448cd7f9d3191194d129b280cac0d3"
        ],
        [
            "intros src IMO.",
            "VernacExtend",
            "1936e23593bf0066b20f45fa9112eb9906832507"
        ],
        [
            "destruct (Reg.eq rret src); try congruence.",
            "VernacExtend",
            "64fa6ea152982a223672ce4fa72ef0beb0b25462"
        ],
        [
            "subst rret.",
            "VernacExtend",
            "2a7cc9f727d6d859b192c50fcd2325f32a798ee6"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "exploit is_move_operation_correct; eauto.",
            "VernacExtend",
            "1a2c98fbfa71e4ee93e877d6b614a69542239122"
        ],
        [
            "intros [A B].",
            "VernacExtend",
            "269ecc1b12a78cad85161d58003fb0ebdea8ebc3"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "eapply is_return_move; eauto.",
            "VernacExtend",
            "aa8c3124463f062293b5ae8d570ad4676a4b56f4"
        ],
        [
            "eapply IHn; eauto.",
            "VernacExtend",
            "d9908376f41a48355fc89af086f965ebf5b7c128"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "unfold return_measure.",
            "VernacExtend",
            "b3e9caef0d0627bab50e23678755fb5e45c3d88f"
        ],
        [
            "rewrite <- (is_return_measure_rec f (S n) niter pc src); auto.",
            "VernacExtend",
            "9ac319af51d7873fc8208071852ca544aae6ece3"
        ],
        [
            "rewrite <- (is_return_measure_rec f n niter s dst); auto.",
            "VernacExtend",
            "c3b855ee2dc6add9245f578164a648d28ea56302"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite EQ2.",
            "VernacExtend",
            "27747523c00798f4ddbbd62d37b19b1b92bddc1a"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "intros or EQ1 EQ2.",
            "VernacExtend",
            "53e5b41c0c22af1f714f2ffbb8806a41f7d24e55"
        ],
        [
            "destruct or; intros.",
            "VernacExtend",
            "4a67e813953d50a2f4a3b506798335bb4ddbe59d"
        ],
        [
            "assert (r = rret).",
            "VernacExtend",
            "269f9d0fb467f4efda57d578f2a32c772f7aa300"
        ],
        [
            "eapply proj_sumbool_true; eauto.",
            "VernacExtend",
            "a33be217d620004d8efbcff5e8cceb9b2bbf4498"
        ],
        [
            "subst r.",
            "VernacExtend",
            "c686b3401e0bea48f47b86c5826fc50275e7fe3d"
        ],
        [
            "apply is_return_some; auto.",
            "VernacExtend",
            "9ada6b05481c04bd9efe4932b3fc236f533b27fa"
        ],
        [
            "apply is_return_none; auto.",
            "VernacExtend",
            "7a06accc3dc399737f39eda08a66bc796eab2dae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive transf_instr_spec (f: function): instruction -> instruction -> Prop := | transf_instr_tailcall: forall sig ros args res s, f.(fn_stacksize) = 0 -> is_return_spec f s res -> transf_instr_spec f (Icall sig ros args res s) (Itailcall sig ros args) | transf_instr_default: forall i, transf_instr_spec f i i.",
            "VernacInductive",
            "787bff26b3e78211a1a47e1a2dbe2ef40046472e"
        ],
        [
            "Lemma transf_instr_charact: forall f pc instr, f.(fn_stacksize) = 0 -> transf_instr_spec f instr (transf_instr f pc instr).",
            "VernacStartTheoremProof",
            "c46e9ecfb7333e7ddc5fd6a3412227cdb894abe0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold transf_instr.",
            "VernacExtend",
            "71de36a4a0e19adeac4061634e9466dec9468b77"
        ],
        [
            "destruct instr; try constructor.",
            "VernacExtend",
            "789e4523534d3d088db05fa67846b6b7b0968829"
        ],
        [
            "caseEq (is_return niter f n r && tailcall_is_possible s && opt_typ_eq (sig_res s) (sig_res (fn_sig f))); intros.",
            "VernacExtend",
            "2aea15690eeed8356c8367a6d51c0b0bc648a499"
        ],
        [
            "destruct (andb_prop _ _ H0).",
            "VernacExtend",
            "d3b9d36e26dde7f08b091c0685b37e6991ff940d"
        ],
        [
            "destruct (andb_prop _ _ H1).",
            "VernacExtend",
            "d0213afb319c649384c768e669eecdc8c20bb71e"
        ],
        [
            "eapply transf_instr_tailcall; eauto.",
            "VernacExtend",
            "6a5c9a5fc9b78178ba16c16a7456ad8a8cb59e8e"
        ],
        [
            "eapply is_return_charact; eauto.",
            "VernacExtend",
            "9cabc1020619c9e3b41999bb8a81f92c8fc78676"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma transf_instr_lookup: forall f pc i, f.(fn_code)!pc = Some i -> exists i', (transf_function f).(fn_code)!pc = Some i' /\\ transf_instr_spec f i i'.",
            "VernacStartTheoremProof",
            "bb8f55f1f7238c1b0bfd12dda3613a17de18b0f2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold transf_function.",
            "VernacExtend",
            "4bc4c9d343a2697d3878b86fb1e42274494b0f80"
        ],
        [
            "destruct (zeq (fn_stacksize f) 0).",
            "VernacExtend",
            "82b0777d671791affb00cf08d5960f3573451f6f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite PTree.gmap.",
            "VernacExtend",
            "0ccc8c9018826e9020b0c1bdc20b21bbfbb49318"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "exists (transf_instr f pc i); split.",
            "VernacExtend",
            "118175fba2afadcdd32cad8dec724826ad3b061a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply transf_instr_charact; auto.",
            "VernacExtend",
            "e391b7a8bf49bc794da276a07dd107341df1a551"
        ],
        [
            "exists i; split.",
            "VernacExtend",
            "477bb23b46dc1bfd6deddc09865e4321a0ecea0c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma regs_lessdef_init_regs: forall params vl vl', Val.lessdef_list vl vl' -> regs_lessdef (init_regs vl params) (init_regs vl' params).",
            "VernacStartTheoremProof",
            "f67f81d5547a275481ab3cace26abff0c80f6d6c"
        ],
        [
            "induction params; intros.",
            "VernacExtend",
            "d159824459958807306e8a976b2a124d4fa07151"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "rewrite Regmap.gi.",
            "VernacExtend",
            "9b14ac55f62ac7451b2c5c78b5e944319b0900e8"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "rewrite Regmap.gi.",
            "VernacExtend",
            "9b14ac55f62ac7451b2c5c78b5e944319b0900e8"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply set_reg_lessdef.",
            "VernacExtend",
            "de8f5f5f4b3bb05ef5e4d06db6dfc27bb847e0ad"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition match_prog (p tp: RTL.program) := match_program (fun cu f tf => tf = transf_fundef f) eq p tp.",
            "VernacDefinition",
            "154e156f2e23b69bd1ddfb005b4bdbcf3b097cb9"
        ],
        [
            "Lemma transf_program_match: forall p, match_prog p (transf_program p).",
            "VernacStartTheoremProof",
            "53be22438320084db4a016a5e1d0605cc93b9b4b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply match_transform_program; auto.",
            "VernacExtend",
            "a9dc402135000f3ff43043b0ae2e28961d55fea2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section PRESERVATION.",
            "VernacBeginSection",
            "a2814d5aa8b8d0cc886862ccd0f0170ad3d37a0d"
        ],
        [
            "Variable prog tprog: program.",
            "VernacAssumption",
            "8470b8f055d41a2d192cfdf1e63075adee06aecc"
        ],
        [
            "Hypothesis TRANSL: match_prog prog tprog.",
            "VernacAssumption",
            "f142a653eba722fb6257c5e7e8b7049978740f24"
        ],
        [
            "Let ge := Genv.globalenv prog.",
            "VernacDefinition",
            "cce8960f9bb57fcaf02f1f588c7dd031df1f13fa"
        ],
        [
            "Let tge := Genv.globalenv tprog.",
            "VernacDefinition",
            "4415189c42cf73371e20d4a5c0bf71a83eebdb01"
        ],
        [
            "Lemma symbols_preserved: forall (s: ident), Genv.find_symbol tge s = Genv.find_symbol ge s.",
            "VernacStartTheoremProof",
            "30f897dad3a16dc2104f2b6883fee411974c0c7d"
        ],
        [
            "Proof (Genv.find_symbol_transf TRANSL).",
            "VernacExactProof",
            "393f03768cd3fc0a77d6ccf9cd9946a90c0db1a4"
        ],
        [
            "Lemma functions_translated: forall (v: val) (f: RTL.fundef), Genv.find_funct ge v = Some f -> Genv.find_funct tge v = Some (transf_fundef f).",
            "VernacStartTheoremProof",
            "3d87fab8ad9b9a00893e04d90cd0b33a24c48a8f"
        ],
        [
            "Proof (Genv.find_funct_transf TRANSL).",
            "VernacExactProof",
            "912a2cef930b3cc3d29b62127c590bc4c1a17566"
        ],
        [
            "Lemma funct_ptr_translated: forall (b: block) (f: RTL.fundef), Genv.find_funct_ptr ge b = Some f -> Genv.find_funct_ptr tge b = Some (transf_fundef f).",
            "VernacStartTheoremProof",
            "8815f3746e7900ca10eb10d40434814f4b76e859"
        ],
        [
            "Proof (Genv.find_funct_ptr_transf TRANSL).",
            "VernacExactProof",
            "f437b4269766a2daa2b09d23138fe960888a697d"
        ],
        [
            "Lemma senv_preserved: Senv.equiv ge tge.",
            "VernacStartTheoremProof",
            "26138f22c10c48a979c59d3e528a91bf09fc9ac8"
        ],
        [
            "Proof (Genv.senv_transf TRANSL).",
            "VernacExactProof",
            "8671789e5170bc72f78e24178b3e9cc8de3b12a6"
        ],
        [
            "Lemma sig_preserved: forall f, funsig (transf_fundef f) = funsig f.",
            "VernacStartTheoremProof",
            "ccc8d62f6555a30848844ba5e62f0cbd0027ab79"
        ],
        [
            "destruct f; auto.",
            "VernacExtend",
            "87f5f254326e71a464ec5523b1f0dfe56f6854c1"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold transf_function.",
            "VernacExtend",
            "4bc4c9d343a2697d3878b86fb1e42274494b0f80"
        ],
        [
            "destruct (zeq (fn_stacksize f) 0); auto.",
            "VernacExtend",
            "4e8fa9ac1b3784b4414266f2be64806be8e2c1d9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma stacksize_preserved: forall f, fn_stacksize (transf_function f) = fn_stacksize f.",
            "VernacStartTheoremProof",
            "8511bbb5e1284c1f34f79e635b290dd22f7ab488"
        ],
        [
            "unfold transf_function.",
            "VernacExtend",
            "4bc4c9d343a2697d3878b86fb1e42274494b0f80"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (zeq (fn_stacksize f) 0); auto.",
            "VernacExtend",
            "4e8fa9ac1b3784b4414266f2be64806be8e2c1d9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma find_function_translated: forall ros rs rs' f, find_function ge ros rs = Some f -> regs_lessdef rs rs' -> find_function tge ros rs' = Some (transf_fundef f).",
            "VernacStartTheoremProof",
            "d5a7fc521cd978bdd94578c61708a063e8d309d3"
        ],
        [
            "intros until f; destruct ros; simpl.",
            "VernacExtend",
            "010c4946c3e073cf533d9c5184e6dd0c4d3b2e12"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (rs'#r = rs#r).",
            "VernacExtend",
            "488ef74149e2023bddd521ec74eee92e3f191d14"
        ],
        [
            "exploit Genv.find_funct_inv; eauto.",
            "VernacExtend",
            "a7f4a7cdbcf4ed68eb3a3fcca933b1f2de9cebe8"
        ],
        [
            "intros [b EQ].",
            "VernacExtend",
            "b38623d83c7351b0edac7a0b9cd09f08bf381a12"
        ],
        [
            "generalize (H0 r).",
            "VernacExtend",
            "c86af4246b13a33ce08af749fd2bc741f1e8b4e0"
        ],
        [
            "rewrite EQ.",
            "VernacExtend",
            "359c5e196f83a6afbd9ede635bddbf545fd1eb82"
        ],
        [
            "intro LD.",
            "VernacExtend",
            "e3c813d98478a10d30f26e186b92f75c47095f44"
        ],
        [
            "inv LD.",
            "VernacExtend",
            "c2dc28a309efcf6aaac33035da2f95c60717094d"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "apply functions_translated; auto.",
            "VernacExtend",
            "dc240557169d25aa7ab64ad5ca0812ca1c6dc94c"
        ],
        [
            "rewrite symbols_preserved.",
            "VernacExtend",
            "6841171a4c7b1113a4595e4c739d96fa04ebb36d"
        ],
        [
            "destruct (Genv.find_symbol ge i); intros.",
            "VernacExtend",
            "d72b89d648295062915ab4fa10153d9efb47c6da"
        ],
        [
            "apply funct_ptr_translated; auto.",
            "VernacExtend",
            "d832cd791bc1cf5c1422c943c8b42fd2b26f2168"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive match_stackframes: list stackframe -> list stackframe -> Prop := | match_stackframes_nil: match_stackframes nil nil | match_stackframes_normal: forall stk stk' res sp pc rs rs' f, match_stackframes stk stk' -> regs_lessdef rs rs' -> match_stackframes (Stackframe res f (Vptr sp Ptrofs.zero) pc rs :: stk) (Stackframe res (transf_function f) (Vptr sp Ptrofs.zero) pc rs' :: stk') | match_stackframes_tail: forall stk stk' res sp pc rs f, match_stackframes stk stk' -> is_return_spec f pc res -> f.(fn_stacksize) = 0 -> match_stackframes (Stackframe res f (Vptr sp Ptrofs.zero) pc rs :: stk) stk'.",
            "VernacInductive",
            "0e390f3d8e925125dcebc95d5728dc33bb66ffb5"
        ],
        [
            "Inductive match_states: state -> state -> Prop := | match_states_normal: forall s sp pc rs m s' rs' m' f (STACKS: match_stackframes s s') (RLD: regs_lessdef rs rs') (MLD: Mem.extends m m'), match_states (State s f (Vptr sp Ptrofs.zero) pc rs m) (State s' (transf_function f) (Vptr sp Ptrofs.zero) pc rs' m') | match_states_call: forall s f args m s' args' m', match_stackframes s s' -> Val.lessdef_list args args' -> Mem.extends m m' -> match_states (Callstate s f args m) (Callstate s' (transf_fundef f) args' m') | match_states_return: forall s v m s' v' m', match_stackframes s s' -> Val.lessdef v v' -> Mem.extends m m' -> match_states (Returnstate s v m) (Returnstate s' v' m') | match_states_interm: forall s sp pc rs m s' m' f r v' (STACKS: match_stackframes s s') (MLD: Mem.extends m m'), is_return_spec f pc r -> f.(fn_stacksize) = 0 -> Val.lessdef (rs#r) v' -> match_states (State s f (Vptr sp Ptrofs.zero) pc rs m) (Returnstate s' v' m').",
            "VernacInductive",
            "5acc6c0dac679cac8eb3cf2ae07b39e01cdd184b"
        ],
        [
            "Definition measure (st: state) : nat := match st with | State s f sp pc rs m => (List.length s * (niter + 2) + return_measure f.(fn_code) pc + 1)%nat | Callstate s f args m => 0%nat | Returnstate s v m => (List.length s * (niter + 2))%nat end.",
            "VernacDefinition",
            "eed3b197ddc6a8f38d0f864d7d5623c422ac4efa"
        ],
        [
            "Ltac TransfInstr := match goal with | H: (PTree.get _ (fn_code _) = _) |- _ => destruct (transf_instr_lookup _ _ _ H) as [i' [TINSTR TSPEC]]; inv TSPEC end.",
            "VernacExtend",
            "c894506a028adfefe156c75731cdccf523d2b639"
        ],
        [
            "Ltac EliminatedInstr := match goal with | H: (is_return_spec _ _ _) |- _ => inv H; try congruence | _ => idtac end.",
            "VernacExtend",
            "f774ee937ab5a81c7ddce5681b5cb19189b4d59b"
        ],
        [
            "Lemma transf_step_correct: forall s1 t s2, step ge s1 t s2 -> forall s1' (MS: match_states s1 s1'), (exists s2', step tge s1' t s2' /\\ match_states s2 s2') \\/ (measure s2 < measure s1 /\\ t = E0 /\\ match_states s2 s1')%nat.",
            "VernacStartTheoremProof",
            "4670badcdce3bf04f98318916d1a467cec2ae5ab"
        ],
        [
            "induction 1; intros; inv MS; EliminatedInstr.",
            "VernacExtend",
            "2220e5abbde94a8e90b353b1fde0cfa3856e5e9b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "TransfInstr.",
            "VernacExtend",
            "b76c8e4741997951c401ceb99674a70bff3130a8"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "econstructor; split.",
            "VernacExtend",
            "11b22cf50026d480fd4ddd40ba5951e5ad64df31"
        ],
        [
            "eapply exec_Inop; eauto.",
            "VernacExtend",
            "280361ecde6c0986f6289665f296b707874f51e9"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (s0 = pc') by congruence.",
            "VernacExtend",
            "355a5e3e4ed32bf6c45cacca26a5db95624ae9d7"
        ],
        [
            "subst s0.",
            "VernacExtend",
            "1a1b534426eb38987c20ab197d58a3b05a1c9a2e"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "econstructor; eauto.",
            "VernacExtend",
            "faa93781fb8bbf289e651728c4588af1c4169d34"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "TransfInstr.",
            "VernacExtend",
            "b76c8e4741997951c401ceb99674a70bff3130a8"
        ],
        [
            "assert (Val.lessdef_list (rs##args) (rs'##args)).",
            "VernacExtend",
            "9f983dc0d66e5d5b8dc22555416641789999d8cc"
        ],
        [
            "apply regs_lessdef_regs; auto.",
            "VernacExtend",
            "d18fc52e9472660e2725c21ffaf3a801968f8fed"
        ],
        [
            "exploit eval_operation_lessdef; eauto.",
            "VernacExtend",
            "0a29e8ad7d26bf761a8cdaafc5f1e0c302078af9"
        ],
        [
            "intros [v' [EVAL' VLD]].",
            "VernacExtend",
            "cbaef5636e9173f0c0d355ace821852489aac074"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "exists (State s' (transf_function f) (Vptr sp0 Ptrofs.zero) pc' (rs'#res <- v') m'); split.",
            "VernacExtend",
            "b6151b6d4dd6718e3ddabecf7435079398b1be82"
        ],
        [
            "eapply exec_Iop; eauto.",
            "VernacExtend",
            "f1df713b8f8562641db9513625be5585515bfe65"
        ],
        [
            "rewrite <- EVAL'.",
            "VernacExtend",
            "8cbbef81fd8a2114861ad1e44174d637063cd776"
        ],
        [
            "apply eval_operation_preserved.",
            "VernacExtend",
            "900ff3d62f8601dddcd670b883e916608a4e1950"
        ],
        [
            "exact symbols_preserved.",
            "VernacExtend",
            "1116fbd2806347b4babd686280e43dd75a449540"
        ],
        [
            "econstructor; eauto.",
            "VernacExtend",
            "faa93781fb8bbf289e651728c4588af1c4169d34"
        ],
        [
            "apply set_reg_lessdef; auto.",
            "VernacExtend",
            "95b874b428034221c5bbe2d6a671c2b6adb214bf"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite H1 in H.",
            "VernacExtend",
            "215f4c64f25f3964f02c3397d1a12602c82b8f1b"
        ],
        [
            "clear H1.",
            "VernacExtend",
            "c05bbc655b5fdcbbabbab72bd73c28fb300d5502"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "econstructor; eauto.",
            "VernacExtend",
            "faa93781fb8bbf289e651728c4588af1c4169d34"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "rewrite PMap.gss.",
            "VernacExtend",
            "b5a245c2e8793ec855a664f9951af0c15417e45b"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "TransfInstr.",
            "VernacExtend",
            "b76c8e4741997951c401ceb99674a70bff3130a8"
        ],
        [
            "assert (Val.lessdef_list (rs##args) (rs'##args)).",
            "VernacExtend",
            "9f983dc0d66e5d5b8dc22555416641789999d8cc"
        ],
        [
            "apply regs_lessdef_regs; auto.",
            "VernacExtend",
            "d18fc52e9472660e2725c21ffaf3a801968f8fed"
        ],
        [
            "exploit eval_addressing_lessdef; eauto.",
            "VernacExtend",
            "9219684fb5a32a8841bc7a0e4e71fd47f3633ec9"
        ],
        [
            "intros [a' [ADDR' ALD]].",
            "VernacExtend",
            "a8bec54379d9c5f567726b856612a1a955a4f1c7"
        ],
        [
            "exploit Mem.loadv_extends; eauto.",
            "VernacExtend",
            "bd66ff4b7f36bf63867da1a15f6ae46d1ff05723"
        ],
        [
            "intros [v' [LOAD' VLD]].",
            "VernacExtend",
            "398f9510a09bdbb4e1f6f7f7ba3a02f071f3735c"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "exists (State s' (transf_function f) (Vptr sp0 Ptrofs.zero) pc' (rs'#dst <- v') m'); split.",
            "VernacExtend",
            "5fc163db9e3b31a89835fdceeeee5bd3fff7329f"
        ],
        [
            "eapply exec_Iload with (a := a').",
            "VernacExtend",
            "04fd2e8e83d80a249bda26b8cf3cd4a295e868c8"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "rewrite <- ADDR'.",
            "VernacExtend",
            "7867307b6bf76bcddfb723e7cde8a10807f9c178"
        ],
        [
            "apply eval_addressing_preserved.",
            "VernacExtend",
            "c0a7a8f7b179e92f5667e2364f4b1c1ec47b31cd"
        ],
        [
            "exact symbols_preserved.",
            "VernacExtend",
            "1116fbd2806347b4babd686280e43dd75a449540"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "econstructor; eauto.",
            "VernacExtend",
            "faa93781fb8bbf289e651728c4588af1c4169d34"
        ],
        [
            "apply set_reg_lessdef; auto.",
            "VernacExtend",
            "95b874b428034221c5bbe2d6a671c2b6adb214bf"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "TransfInstr.",
            "VernacExtend",
            "b76c8e4741997951c401ceb99674a70bff3130a8"
        ],
        [
            "assert (Val.lessdef_list (rs##args) (rs'##args)).",
            "VernacExtend",
            "9f983dc0d66e5d5b8dc22555416641789999d8cc"
        ],
        [
            "apply regs_lessdef_regs; auto.",
            "VernacExtend",
            "d18fc52e9472660e2725c21ffaf3a801968f8fed"
        ],
        [
            "exploit eval_addressing_lessdef; eauto.",
            "VernacExtend",
            "9219684fb5a32a8841bc7a0e4e71fd47f3633ec9"
        ],
        [
            "intros [a' [ADDR' ALD]].",
            "VernacExtend",
            "a8bec54379d9c5f567726b856612a1a955a4f1c7"
        ],
        [
            "exploit Mem.storev_extends.",
            "VernacExtend",
            "dfb3ec83a86aad7bf53c1744deab98abfe849a55"
        ],
        [
            "2: eexact H1.",
            "VernacExtend",
            "7ffcb0a825dc6cee70024acae04d539d758861bb"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "apply RLD.",
            "VernacExtend",
            "dbeb5792dfb8782bdf88d0ad0b59225e92b6fac0"
        ],
        [
            "intros [m'1 [STORE' MLD']].",
            "VernacExtend",
            "cd227db5678e490734e76420358dfcf381d2b876"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "exists (State s' (transf_function f) (Vptr sp0 Ptrofs.zero) pc' rs' m'1); split.",
            "VernacExtend",
            "e1adefae26f195042c5efdc10dd2527603229d8e"
        ],
        [
            "eapply exec_Istore with (a := a').",
            "VernacExtend",
            "0d4a349de01a34fe36245b04c975998957f07145"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "rewrite <- ADDR'.",
            "VernacExtend",
            "7867307b6bf76bcddfb723e7cde8a10807f9c178"
        ],
        [
            "apply eval_addressing_preserved.",
            "VernacExtend",
            "c0a7a8f7b179e92f5667e2364f4b1c1ec47b31cd"
        ],
        [
            "exact symbols_preserved.",
            "VernacExtend",
            "1116fbd2806347b4babd686280e43dd75a449540"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "destruct a; simpl in H1; try discriminate.",
            "VernacExtend",
            "5227dffa9e42428d9334b44e425918d4ad6c0c2a"
        ],
        [
            "econstructor; eauto.",
            "VernacExtend",
            "faa93781fb8bbf289e651728c4588af1c4169d34"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exploit find_function_translated; eauto.",
            "VernacExtend",
            "bcfb6761cefedf6f3414cdd6ec4af83b960bcddb"
        ],
        [
            "intro FIND'.",
            "VernacExtend",
            "2f23f24711818bc5dee74d3d84c8cd2b0de5dbb4"
        ],
        [
            "TransfInstr.",
            "VernacExtend",
            "b76c8e4741997951c401ceb99674a70bff3130a8"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "assert ({ m'' | Mem.free m' sp0 0 (fn_stacksize (transf_function f)) = Some m''}).",
            "VernacExtend",
            "f23ff412dc4d88c620b8f035318d82114ddbf078"
        ],
        [
            "apply Mem.range_perm_free.",
            "VernacExtend",
            "8d96f1bd7dd663410e2d3304332bd9b83ad5d9c8"
        ],
        [
            "rewrite stacksize_preserved.",
            "VernacExtend",
            "ede4c54d7479a83e1ec09617aacdfa56c1988c95"
        ],
        [
            "rewrite H7.",
            "VernacExtend",
            "2b0de906e9dfacfe89c031c2266760d29b5450f6"
        ],
        [
            "red; intros; omegaContradiction.",
            "VernacExtend",
            "87955b816683b74b4f1d5279dc6b42900173c5c6"
        ],
        [
            "destruct X as [m'' FREE].",
            "VernacExtend",
            "708560fb1c9a573bddcf89f81f78a757ef309654"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "exists (Callstate s' (transf_fundef fd) (rs'##args) m''); split.",
            "VernacExtend",
            "06891870057ea509eb97d16f3f69d367ef9f889b"
        ],
        [
            "eapply exec_Itailcall; eauto.",
            "VernacExtend",
            "837eb92aa0e6581e8d7393092d75c2a117f62f0d"
        ],
        [
            "apply sig_preserved.",
            "VernacExtend",
            "d06268764b0e0b02eeb37c83702eb0120b43406d"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "eapply match_stackframes_tail; eauto.",
            "VernacExtend",
            "f58b35a9adc3adcbd4e1a0d1e6247f7491163acb"
        ],
        [
            "apply regs_lessdef_regs; auto.",
            "VernacExtend",
            "d18fc52e9472660e2725c21ffaf3a801968f8fed"
        ],
        [
            "eapply Mem.free_right_extends; eauto.",
            "VernacExtend",
            "b147913b478dd92613ffb3e28703d1cfc0e1a9d4"
        ],
        [
            "rewrite stacksize_preserved.",
            "VernacExtend",
            "ede4c54d7479a83e1ec09617aacdfa56c1988c95"
        ],
        [
            "rewrite H7.",
            "VernacExtend",
            "2b0de906e9dfacfe89c031c2266760d29b5450f6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "omegaContradiction.",
            "VernacExtend",
            "329a0d87fada76e54a403fa49705e937670711cd"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "exists (Callstate (Stackframe res (transf_function f) (Vptr sp0 Ptrofs.zero) pc' rs' :: s') (transf_fundef fd) (rs'##args) m'); split.",
            "VernacExtend",
            "947da324a7b38c299acbd179821cb1f76d3df681"
        ],
        [
            "eapply exec_Icall; eauto.",
            "VernacExtend",
            "d2173d37125caa719e8bad28e6176c406ef82afb"
        ],
        [
            "apply sig_preserved.",
            "VernacExtend",
            "d06268764b0e0b02eeb37c83702eb0120b43406d"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "apply regs_lessdef_regs; auto.",
            "VernacExtend",
            "d18fc52e9472660e2725c21ffaf3a801968f8fed"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exploit find_function_translated; eauto.",
            "VernacExtend",
            "bcfb6761cefedf6f3414cdd6ec4af83b960bcddb"
        ],
        [
            "intro FIND'.",
            "VernacExtend",
            "2f23f24711818bc5dee74d3d84c8cd2b0de5dbb4"
        ],
        [
            "exploit Mem.free_parallel_extends; eauto.",
            "VernacExtend",
            "bacf5ad19812f77ca9a1408273fc33b4a1b324ef"
        ],
        [
            "intros [m'1 [FREE EXT]].",
            "VernacExtend",
            "4c31e7488a745af953fd37a91dc92b1786067415"
        ],
        [
            "TransfInstr.",
            "VernacExtend",
            "b76c8e4741997951c401ceb99674a70bff3130a8"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "exists (Callstate s' (transf_fundef fd) (rs'##args) m'1); split.",
            "VernacExtend",
            "15e577008836db9e934210a773eb75906d45254a"
        ],
        [
            "eapply exec_Itailcall; eauto.",
            "VernacExtend",
            "837eb92aa0e6581e8d7393092d75c2a117f62f0d"
        ],
        [
            "apply sig_preserved.",
            "VernacExtend",
            "d06268764b0e0b02eeb37c83702eb0120b43406d"
        ],
        [
            "rewrite stacksize_preserved; auto.",
            "VernacExtend",
            "c4489df0d6d9abad4f6d77c68990df5822a59b09"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply regs_lessdef_regs; auto.",
            "VernacExtend",
            "d18fc52e9472660e2725c21ffaf3a801968f8fed"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "TransfInstr.",
            "VernacExtend",
            "b76c8e4741997951c401ceb99674a70bff3130a8"
        ],
        [
            "exploit (@eval_builtin_args_lessdef _ ge (fun r => rs#r) (fun r => rs'#r)); eauto.",
            "VernacExtend",
            "ee66796b00c77f6d0ac9ad0b1a44651a1d975f02"
        ],
        [
            "intros (vargs' & P & Q).",
            "VernacExtend",
            "e9a3c392b7906de03262e1f8d2f126f989dd4666"
        ],
        [
            "exploit external_call_mem_extends; eauto.",
            "VernacExtend",
            "f91dc1944695b006b87e5ba03dcb94b6383f52eb"
        ],
        [
            "intros [v' [m'1 [A [B [C D]]]]].",
            "VernacExtend",
            "4acd35a978c380e27af39d4877a1f0f349781197"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "exists (State s' (transf_function f) (Vptr sp0 Ptrofs.zero) pc' (regmap_setres res v' rs') m'1); split.",
            "VernacExtend",
            "567f37e4daeb7d60ac4800c84c77910278921596"
        ],
        [
            "eapply exec_Ibuiltin; eauto.",
            "VernacExtend",
            "8f43d5c3d33a540e13b92ed4750b03354d88944c"
        ],
        [
            "eapply eval_builtin_args_preserved with (ge1 := ge); eauto.",
            "VernacExtend",
            "aa45dfd6bdb60d2a27af21a26864408bff10ac01"
        ],
        [
            "exact symbols_preserved.",
            "VernacExtend",
            "1116fbd2806347b4babd686280e43dd75a449540"
        ],
        [
            "eapply external_call_symbols_preserved; eauto.",
            "VernacExtend",
            "813f92bdb1533e6fa3771b065062bf37abb881d1"
        ],
        [
            "apply senv_preserved.",
            "VernacExtend",
            "0c7fb546d77a2d514e07921bb68b8e894eb87b22"
        ],
        [
            "econstructor; eauto.",
            "VernacExtend",
            "faa93781fb8bbf289e651728c4588af1c4169d34"
        ],
        [
            "apply set_res_lessdef; auto.",
            "VernacExtend",
            "121f85cb695679ee7cd5024478b5793f247c36b6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "TransfInstr.",
            "VernacExtend",
            "b76c8e4741997951c401ceb99674a70bff3130a8"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "exists (State s' (transf_function f) (Vptr sp0 Ptrofs.zero) (if b then ifso else ifnot) rs' m'); split.",
            "VernacExtend",
            "a6e098569483e0b63de86f9523ca4eecbdcd4609"
        ],
        [
            "eapply exec_Icond; eauto.",
            "VernacExtend",
            "c711d5b980028ed04fa6d6ea2e7b22fe7f4fe3b1"
        ],
        [
            "apply eval_condition_lessdef with (rs##args) m; auto.",
            "VernacExtend",
            "2cb9fbca367297849147db64df9b6da9bbb89701"
        ],
        [
            "apply regs_lessdef_regs; auto.",
            "VernacExtend",
            "d18fc52e9472660e2725c21ffaf3a801968f8fed"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "TransfInstr.",
            "VernacExtend",
            "b76c8e4741997951c401ceb99674a70bff3130a8"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "exists (State s' (transf_function f) (Vptr sp0 Ptrofs.zero) pc' rs' m'); split.",
            "VernacExtend",
            "d2a7bac294c66f23e941bb47cc6c625f95a35be5"
        ],
        [
            "eapply exec_Ijumptable; eauto.",
            "VernacExtend",
            "9a4753d838171cc11e2a1a5cfc75b81d80095d6c"
        ],
        [
            "generalize (RLD arg).",
            "VernacExtend",
            "70c3f42b82de2153ea1dc3dd557b38d9bff5a9b4"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "inv H2.",
            "VernacExtend",
            "6144021562e950304ba8e947fdc2423691182458"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exploit Mem.free_parallel_extends; eauto.",
            "VernacExtend",
            "bacf5ad19812f77ca9a1408273fc33b4a1b324ef"
        ],
        [
            "intros [m'1 [FREE EXT]].",
            "VernacExtend",
            "4c31e7488a745af953fd37a91dc92b1786067415"
        ],
        [
            "TransfInstr.",
            "VernacExtend",
            "b76c8e4741997951c401ceb99674a70bff3130a8"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "exists (Returnstate s' (regmap_optget or Vundef rs') m'1); split.",
            "VernacExtend",
            "c321d7e198a9883d1f3bfe3fa09a9382b2040acb"
        ],
        [
            "apply exec_Ireturn; auto.",
            "VernacExtend",
            "9fd0d23bcf762654cae8f54802d3b3882cbaf530"
        ],
        [
            "rewrite stacksize_preserved; auto.",
            "VernacExtend",
            "c4489df0d6d9abad4f6d77c68990df5822a59b09"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct or; simpl.",
            "VernacExtend",
            "ae915000cf950c4580e3a21b62fd14c01af0d97b"
        ],
        [
            "apply RLD.",
            "VernacExtend",
            "dbeb5792dfb8782bdf88d0ad0b59225e92b6fac0"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (or = None) by congruence.",
            "VernacExtend",
            "7465d3b2386fce994df9bf2fb879fda2bcac7557"
        ],
        [
            "subst or.",
            "VernacExtend",
            "7bb92da855e505ac889c2a510ab45a2f967c99c5"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "eapply Mem.free_left_extends; eauto.",
            "VernacExtend",
            "c5787343c64a2c0d0c6795294d5577f3696c5d85"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (or = Some r) by congruence.",
            "VernacExtend",
            "14e6b8d43148270b3b539649fffffe440ab9d46a"
        ],
        [
            "subst or.",
            "VernacExtend",
            "7bb92da855e505ac889c2a510ab45a2f967c99c5"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "eapply Mem.free_left_extends; eauto.",
            "VernacExtend",
            "c5787343c64a2c0d0c6795294d5577f3696c5d85"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exploit Mem.alloc_extends; eauto.",
            "VernacExtend",
            "421d4e50c6efc06b5606827dc884c5993fb1bb17"
        ],
        [
            "instantiate (1 := 0).",
            "VernacExtend",
            "0a5a970845955ff1f59ab9f6daabacbe6eea4d49"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "instantiate (1 := fn_stacksize f).",
            "VernacExtend",
            "62a5adcc2b0053ddad61508decf67068b95604c8"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "intros [m'1 [ALLOC EXT]].",
            "VernacExtend",
            "618f7b51db0f075c1bc43c1ec70c6ebec2cf9e8b"
        ],
        [
            "assert (fn_stacksize (transf_function f) = fn_stacksize f /\\ fn_entrypoint (transf_function f) = fn_entrypoint f /\\ fn_params (transf_function f) = fn_params f).",
            "VernacExtend",
            "6f8f799c2af8f30803904da4984ce3fde2ca9de3"
        ],
        [
            "unfold transf_function.",
            "VernacExtend",
            "4bc4c9d343a2697d3878b86fb1e42274494b0f80"
        ],
        [
            "destruct (zeq (fn_stacksize f) 0); auto.",
            "VernacExtend",
            "4e8fa9ac1b3784b4414266f2be64806be8e2c1d9"
        ],
        [
            "destruct H0 as [EQ1 [EQ2 EQ3]].",
            "VernacExtend",
            "a8907c08761eda743b459f886771cf2897914ce0"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "econstructor; split.",
            "VernacExtend",
            "11b22cf50026d480fd4ddd40ba5951e5ad64df31"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "eapply exec_function_internal; eauto.",
            "VernacExtend",
            "b622ee9bc8a8276d334b3a2c3b5f83eba26f2409"
        ],
        [
            "rewrite EQ1; eauto.",
            "VernacExtend",
            "00eeed6c3744ef177c1b49dd5f15a96643c9267d"
        ],
        [
            "rewrite EQ2.",
            "VernacExtend",
            "27747523c00798f4ddbbd62d37b19b1b92bddc1a"
        ],
        [
            "rewrite EQ3.",
            "VernacExtend",
            "1b6b690dade52697a6f5b33bd7de62c51a1867c3"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "apply regs_lessdef_init_regs.",
            "VernacExtend",
            "bff68d2183438ce4691d8fa2df624b9b00fbd842"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exploit external_call_mem_extends; eauto.",
            "VernacExtend",
            "f91dc1944695b006b87e5ba03dcb94b6383f52eb"
        ],
        [
            "intros [res' [m2' [A [B [C D]]]]].",
            "VernacExtend",
            "726e32b73770ec7f6c326f702081f43df62092a7"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "exists (Returnstate s' res' m2'); split.",
            "VernacExtend",
            "3fe8e8e6aa000871fc1a90b6bc2a6f693d3ccb93"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "econstructor; eauto.",
            "VernacExtend",
            "faa93781fb8bbf289e651728c4588af1c4169d34"
        ],
        [
            "eapply external_call_symbols_preserved; eauto.",
            "VernacExtend",
            "813f92bdb1533e6fa3771b065062bf37abb881d1"
        ],
        [
            "apply senv_preserved.",
            "VernacExtend",
            "0c7fb546d77a2d514e07921bb68b8e894eb87b22"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inv H2.",
            "VernacExtend",
            "6144021562e950304ba8e947fdc2423691182458"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "econstructor; split.",
            "VernacExtend",
            "11b22cf50026d480fd4ddd40ba5951e5ad64df31"
        ],
        [
            "apply exec_return.",
            "VernacExtend",
            "3aff92e813616815613365dfa0deeb8c403bf9ec"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "apply set_reg_lessdef; auto.",
            "VernacExtend",
            "95b874b428034221c5bbe2d6a671c2b6adb214bf"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold measure.",
            "VernacExtend",
            "3edd196dc5a35ed1f4e509f5063d0a5b38750234"
        ],
        [
            "simpl length.",
            "VernacExtend",
            "cab663a1b923ec4538f37af4b3dac18c303feac5"
        ],
        [
            "change (S (length s) * (niter + 2))%nat with ((niter + 2) + (length s) * (niter + 2))%nat.",
            "VernacExtend",
            "6e4f5837a51a49531bc78afd2895133424ae1428"
        ],
        [
            "generalize (return_measure_bounds (fn_code f) pc).",
            "VernacExtend",
            "120f77f6f3c6865500da416239456f69075ffa0d"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "econstructor; eauto.",
            "VernacExtend",
            "faa93781fb8bbf289e651728c4588af1c4169d34"
        ],
        [
            "rewrite Regmap.gss.",
            "VernacExtend",
            "8ee2bc2eb07a5ed78d95ad8d11cb1960f2f2f767"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma transf_initial_states: forall st1, initial_state prog st1 -> exists st2, initial_state tprog st2 /\\ match_states st1 st2.",
            "VernacStartTheoremProof",
            "f105d6fb5590b4a515631c2d07f7975dd7fc9772"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "exploit funct_ptr_translated; eauto.",
            "VernacExtend",
            "a6e3943c1607109713dadd7e54e002a6b821b40c"
        ],
        [
            "intro FIND.",
            "VernacExtend",
            "4592f55029130296cd77b942f74345f04bc97c95"
        ],
        [
            "exists (Callstate nil (transf_fundef f) nil m0); split.",
            "VernacExtend",
            "34c5b9ad248d42fed5fe13cb0ea87822b1c091f2"
        ],
        [
            "econstructor; eauto.",
            "VernacExtend",
            "faa93781fb8bbf289e651728c4588af1c4169d34"
        ],
        [
            "apply (Genv.init_mem_transf TRANSL).",
            "VernacExtend",
            "d8545a751a0e6e6d8f8fdef326da91f501be0497"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "replace (prog_main tprog) with (prog_main prog).",
            "VernacExtend",
            "272d374728f54188bd4ca798b0013bb73e287c33"
        ],
        [
            "rewrite symbols_preserved.",
            "VernacExtend",
            "6841171a4c7b1113a4595e4c739d96fa04ebb36d"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "symmetry; eapply match_program_main; eauto.",
            "VernacExtend",
            "d978bc551cc3dbe97e04bc1099806f184285debb"
        ],
        [
            "rewrite <- H3.",
            "VernacExtend",
            "1eb91ccefb59c504d04364b76e0995592b63f60e"
        ],
        [
            "apply sig_preserved.",
            "VernacExtend",
            "d06268764b0e0b02eeb37c83702eb0120b43406d"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply Mem.extends_refl.",
            "VernacExtend",
            "83c6067c542fea1335008b2e39e21db2c5d56be0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma transf_final_states: forall st1 st2 r, match_states st1 st2 -> final_state st1 r -> final_state st2 r.",
            "VernacStartTheoremProof",
            "8889b3ac97a2b6d3c729058c5ba80b9b672f7427"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "inv H5.",
            "VernacExtend",
            "3b24f58d604fd0d45f8c1024700082cc552e0ce8"
        ],
        [
            "inv H3.",
            "VernacExtend",
            "bf389b6bd23f97715c74ed9eca5a780ee9e91e3c"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem transf_program_correct: forward_simulation (RTL.semantics prog) (RTL.semantics tprog).",
            "VernacStartTheoremProof",
            "4b7c13157fd614f04ee59e555f7a5426b048e8d1"
        ],
        [
            "eapply forward_simulation_opt with (measure := measure); eauto.",
            "VernacExtend",
            "87f52392b2aefd047455a33a24f1d4d1e50f1ccf"
        ],
        [
            "apply senv_preserved.",
            "VernacExtend",
            "0c7fb546d77a2d514e07921bb68b8e894eb87b22"
        ],
        [
            "eexact transf_initial_states.",
            "VernacExtend",
            "879170b7e37fc4f142d27cafca5d36694a713fd4"
        ],
        [
            "eexact transf_final_states.",
            "VernacExtend",
            "f472f08005fa64ded5a1ae3cd19193cc2c5821f8"
        ],
        [
            "exact transf_step_correct.",
            "VernacExtend",
            "ea3637f352370930936289773a9cf2abf3aba079"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End PRESERVATION.",
            "VernacEndSegment",
            "0c982db2ac125e5e033b75cbdbdf765586ec35b6"
        ]
    ],
    "proofs": [
        {
            "name": "return_measure_bounds",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intro f.",
                        "VernacExtend",
                        "cfca43118419dd191a669828299d7df459d583f5"
                    ]
                },
                {
                    "command": [
                        "assert (forall n pc, (return_measure_rec n f pc <= n)%nat).",
                        "VernacExtend",
                        "521a532576bbdc81a2f2e4ef17507d2278a2e949"
                    ]
                },
                {
                    "command": [
                        "induction n; intros; simpl.",
                        "VernacExtend",
                        "f27a2774667ef3bddfddc5ec776ca116504c7463"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "destruct (f!pc); try omega.",
                        "VernacExtend",
                        "68037e657100173babad25e8d05ce93d50d396ca"
                    ]
                },
                {
                    "command": [
                        "destruct i; try omega.",
                        "VernacExtend",
                        "6b99b374ddfac2946d3afdbc0f87528c06f5acad"
                    ]
                },
                {
                    "command": [
                        "generalize (IHn n0).",
                        "VernacExtend",
                        "0aefc40b50aafe3becd8f99c61e0c559153296ce"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "generalize (IHn n0).",
                        "VernacExtend",
                        "0aefc40b50aafe3becd8f99c61e0c559153296ce"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold return_measure.",
                        "VernacExtend",
                        "b3e9caef0d0627bab50e23678755fb5e45c3d88f"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "return_measure_rec_incr",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "induction n1; intros; simpl.",
                        "VernacExtend",
                        "76798c8beff908b20ec94e1dac39bf6a7fb82ab4"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "destruct n2.",
                        "VernacExtend",
                        "cb9c60451c453544c94bf5208e8ca5002d52d715"
                    ]
                },
                {
                    "command": [
                        "omegaContradiction.",
                        "VernacExtend",
                        "329a0d87fada76e54a403fa49705e937670711cd"
                    ]
                },
                {
                    "command": [
                        "assert (n1 <= n2)%nat by omega.",
                        "VernacExtend",
                        "d77983cf02b032050805221e70df957f6c29ec72"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct f!pc; try omega.",
                        "VernacExtend",
                        "68037e657100173babad25e8d05ce93d50d396ca"
                    ]
                },
                {
                    "command": [
                        "destruct i; try omega.",
                        "VernacExtend",
                        "6b99b374ddfac2946d3afdbc0f87528c06f5acad"
                    ]
                },
                {
                    "command": [
                        "generalize (IHn1 n2 n H0).",
                        "VernacExtend",
                        "85f66bf373aa3e515ec65fd2a2c84f1d4a37ebc8"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "generalize (IHn1 n2 n H0).",
                        "VernacExtend",
                        "85f66bf373aa3e515ec65fd2a2c84f1d4a37ebc8"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_return_measure_rec",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "induction n; simpl; intros.",
                        "VernacExtend",
                        "f4638561e18037d1d0dd2a07d3cbcf68a41a03a8"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "destruct n'.",
                        "VernacExtend",
                        "6697461cc7fef4008f21cc451e6085dad5d278f4"
                    ]
                },
                {
                    "command": [
                        "omegaContradiction.",
                        "VernacExtend",
                        "329a0d87fada76e54a403fa49705e937670711cd"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct (fn_code f)!pc; try congruence.",
                        "VernacExtend",
                        "b89d047f63cd9f8d69c0b7a94f0f6159673078eb"
                    ]
                },
                {
                    "command": [
                        "destruct i; try congruence.",
                        "VernacExtend",
                        "620e0ba08975d915ef74275a67f7491e9d990f15"
                    ]
                },
                {
                    "command": [
                        "decEq.",
                        "VernacExtend",
                        "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
                    ]
                },
                {
                    "command": [
                        "apply IHn with r.",
                        "VernacExtend",
                        "c5e8db601c9eaa7bb7849c9431a8c59a000ecf9e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "destruct (is_move_operation o l); try congruence.",
                        "VernacExtend",
                        "1ac470e7c07e4f0d6a9e45d243f4697d906e6d87"
                    ]
                },
                {
                    "command": [
                        "destruct (Reg.eq r r1); try congruence.",
                        "VernacExtend",
                        "3330eb7ad0319c087e2eac7b887ebea191d80be8"
                    ]
                },
                {
                    "command": [
                        "decEq.",
                        "VernacExtend",
                        "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
                    ]
                },
                {
                    "command": [
                        "apply IHn with r0.",
                        "VernacExtend",
                        "06124ba15a9294d71734edf4acd133767db7e810"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_return_charact",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "induction n; intros.",
                        "VernacExtend",
                        "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "generalize H.",
                        "VernacExtend",
                        "743bb3d7407250a3128af7c9fa5ed4e9ada826b2"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "caseEq ((fn_code f)!pc); try congruence.",
                        "VernacExtend",
                        "e37a400a672bc3175fc2622ff588945f6dcfa097"
                    ]
                },
                {
                    "command": [
                        "intro i.",
                        "VernacExtend",
                        "b1ef927907197c9312276e13d6fd790a77b5f54e"
                    ]
                },
                {
                    "command": [
                        "caseEq i; try congruence.",
                        "VernacExtend",
                        "4a5d5829d92ef6b900ad3e99a6b6b357139755bb"
                    ]
                },
                {
                    "command": [
                        "intros s; intros.",
                        "VernacExtend",
                        "987ac06f5f7fee1464a54272792d51b6c8d098db"
                    ]
                },
                {
                    "command": [
                        "eapply is_return_nop; eauto.",
                        "VernacExtend",
                        "0c134e193954e26c0e50e8d9a2a59138104479ef"
                    ]
                },
                {
                    "command": [
                        "eapply IHn; eauto.",
                        "VernacExtend",
                        "d9908376f41a48355fc89af086f965ebf5b7c128"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "unfold return_measure.",
                        "VernacExtend",
                        "b3e9caef0d0627bab50e23678755fb5e45c3d88f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (is_return_measure_rec f (S n) niter pc rret); auto.",
                        "VernacExtend",
                        "54645e4d80b0da44c7c42fc5716cc3c6e2da5250"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (is_return_measure_rec f n niter s rret); auto.",
                        "VernacExtend",
                        "ae4430c315138a900055fc1b21b58832c8e4973e"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite H2.",
                        "VernacExtend",
                        "c34b98a4ea7c987830199fe378bb7a145a0d652e"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "intros op args dst s EQ1 EQ2.",
                        "VernacExtend",
                        "9e85160d16e68ccb88720f2368121c4fb7741dd4"
                    ]
                },
                {
                    "command": [
                        "caseEq (is_move_operation op args); try congruence.",
                        "VernacExtend",
                        "c1176a71d7448cd7f9d3191194d129b280cac0d3"
                    ]
                },
                {
                    "command": [
                        "intros src IMO.",
                        "VernacExtend",
                        "1936e23593bf0066b20f45fa9112eb9906832507"
                    ]
                },
                {
                    "command": [
                        "destruct (Reg.eq rret src); try congruence.",
                        "VernacExtend",
                        "64fa6ea152982a223672ce4fa72ef0beb0b25462"
                    ]
                },
                {
                    "command": [
                        "subst rret.",
                        "VernacExtend",
                        "2a7cc9f727d6d859b192c50fcd2325f32a798ee6"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "exploit is_move_operation_correct; eauto.",
                        "VernacExtend",
                        "1a2c98fbfa71e4ee93e877d6b614a69542239122"
                    ]
                },
                {
                    "command": [
                        "intros [A B].",
                        "VernacExtend",
                        "269ecc1b12a78cad85161d58003fb0ebdea8ebc3"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "eapply is_return_move; eauto.",
                        "VernacExtend",
                        "aa8c3124463f062293b5ae8d570ad4676a4b56f4"
                    ]
                },
                {
                    "command": [
                        "eapply IHn; eauto.",
                        "VernacExtend",
                        "d9908376f41a48355fc89af086f965ebf5b7c128"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "unfold return_measure.",
                        "VernacExtend",
                        "b3e9caef0d0627bab50e23678755fb5e45c3d88f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (is_return_measure_rec f (S n) niter pc src); auto.",
                        "VernacExtend",
                        "9ac319af51d7873fc8208071852ca544aae6ece3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (is_return_measure_rec f n niter s dst); auto.",
                        "VernacExtend",
                        "c3b855ee2dc6add9245f578164a648d28ea56302"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite EQ2.",
                        "VernacExtend",
                        "27747523c00798f4ddbbd62d37b19b1b92bddc1a"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "intros or EQ1 EQ2.",
                        "VernacExtend",
                        "53e5b41c0c22af1f714f2ffbb8806a41f7d24e55"
                    ]
                },
                {
                    "command": [
                        "destruct or; intros.",
                        "VernacExtend",
                        "4a67e813953d50a2f4a3b506798335bb4ddbe59d"
                    ]
                },
                {
                    "command": [
                        "assert (r = rret).",
                        "VernacExtend",
                        "269f9d0fb467f4efda57d578f2a32c772f7aa300"
                    ]
                },
                {
                    "command": [
                        "eapply proj_sumbool_true; eauto.",
                        "VernacExtend",
                        "a33be217d620004d8efbcff5e8cceb9b2bbf4498"
                    ]
                },
                {
                    "command": [
                        "subst r.",
                        "VernacExtend",
                        "c686b3401e0bea48f47b86c5826fc50275e7fe3d"
                    ]
                },
                {
                    "command": [
                        "apply is_return_some; auto.",
                        "VernacExtend",
                        "9ada6b05481c04bd9efe4932b3fc236f533b27fa"
                    ]
                },
                {
                    "command": [
                        "apply is_return_none; auto.",
                        "VernacExtend",
                        "7a06accc3dc399737f39eda08a66bc796eab2dae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "transf_instr_charact",
            "line_nb": 102,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold transf_instr.",
                        "VernacExtend",
                        "71de36a4a0e19adeac4061634e9466dec9468b77"
                    ]
                },
                {
                    "command": [
                        "destruct instr; try constructor.",
                        "VernacExtend",
                        "789e4523534d3d088db05fa67846b6b7b0968829"
                    ]
                },
                {
                    "command": [
                        "caseEq (is_return niter f n r && tailcall_is_possible s && opt_typ_eq (sig_res s) (sig_res (fn_sig f))); intros.",
                        "VernacExtend",
                        "2aea15690eeed8356c8367a6d51c0b0bc648a499"
                    ]
                },
                {
                    "command": [
                        "destruct (andb_prop _ _ H0).",
                        "VernacExtend",
                        "d3b9d36e26dde7f08b091c0685b37e6991ff940d"
                    ]
                },
                {
                    "command": [
                        "destruct (andb_prop _ _ H1).",
                        "VernacExtend",
                        "d0213afb319c649384c768e669eecdc8c20bb71e"
                    ]
                },
                {
                    "command": [
                        "eapply transf_instr_tailcall; eauto.",
                        "VernacExtend",
                        "6a5c9a5fc9b78178ba16c16a7456ad8a8cb59e8e"
                    ]
                },
                {
                    "command": [
                        "eapply is_return_charact; eauto.",
                        "VernacExtend",
                        "9cabc1020619c9e3b41999bb8a81f92c8fc78676"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "transf_instr_lookup",
            "line_nb": 113,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold transf_function.",
                        "VernacExtend",
                        "4bc4c9d343a2697d3878b86fb1e42274494b0f80"
                    ]
                },
                {
                    "command": [
                        "destruct (zeq (fn_stacksize f) 0).",
                        "VernacExtend",
                        "82b0777d671791affb00cf08d5960f3573451f6f"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gmap.",
                        "VernacExtend",
                        "0ccc8c9018826e9020b0c1bdc20b21bbfbb49318"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "exists (transf_instr f pc i); split.",
                        "VernacExtend",
                        "118175fba2afadcdd32cad8dec724826ad3b061a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply transf_instr_charact; auto.",
                        "VernacExtend",
                        "e391b7a8bf49bc794da276a07dd107341df1a551"
                    ]
                },
                {
                    "command": [
                        "exists i; split.",
                        "VernacExtend",
                        "477bb23b46dc1bfd6deddc09865e4321a0ecea0c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "regs_lessdef_init_regs",
            "line_nb": 128,
            "steps": [
                {
                    "command": [
                        "induction params; intros.",
                        "VernacExtend",
                        "d159824459958807306e8a976b2a124d4fa07151"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "rewrite Regmap.gi.",
                        "VernacExtend",
                        "9b14ac55f62ac7451b2c5c78b5e944319b0900e8"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "rewrite Regmap.gi.",
                        "VernacExtend",
                        "9b14ac55f62ac7451b2c5c78b5e944319b0900e8"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "apply set_reg_lessdef.",
                        "VernacExtend",
                        "de8f5f5f4b3bb05ef5e4d06db6dfc27bb847e0ad"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "transf_program_match",
            "line_nb": 144,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply match_transform_program; auto.",
                        "VernacExtend",
                        "a9dc402135000f3ff43043b0ae2e28961d55fea2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sig_preserved",
            "line_nb": 161,
            "steps": [
                {
                    "command": [
                        "destruct f; auto.",
                        "VernacExtend",
                        "87f5f254326e71a464ec5523b1f0dfe56f6854c1"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold transf_function.",
                        "VernacExtend",
                        "4bc4c9d343a2697d3878b86fb1e42274494b0f80"
                    ]
                },
                {
                    "command": [
                        "destruct (zeq (fn_stacksize f) 0); auto.",
                        "VernacExtend",
                        "4e8fa9ac1b3784b4414266f2be64806be8e2c1d9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "stacksize_preserved",
            "line_nb": 167,
            "steps": [
                {
                    "command": [
                        "unfold transf_function.",
                        "VernacExtend",
                        "4bc4c9d343a2697d3878b86fb1e42274494b0f80"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (zeq (fn_stacksize f) 0); auto.",
                        "VernacExtend",
                        "4e8fa9ac1b3784b4414266f2be64806be8e2c1d9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "find_function_translated",
            "line_nb": 172,
            "steps": [
                {
                    "command": [
                        "intros until f; destruct ros; simpl.",
                        "VernacExtend",
                        "010c4946c3e073cf533d9c5184e6dd0c4d3b2e12"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (rs'#r = rs#r).",
                        "VernacExtend",
                        "488ef74149e2023bddd521ec74eee92e3f191d14"
                    ]
                },
                {
                    "command": [
                        "exploit Genv.find_funct_inv; eauto.",
                        "VernacExtend",
                        "a7f4a7cdbcf4ed68eb3a3fcca933b1f2de9cebe8"
                    ]
                },
                {
                    "command": [
                        "intros [b EQ].",
                        "VernacExtend",
                        "b38623d83c7351b0edac7a0b9cd09f08bf381a12"
                    ]
                },
                {
                    "command": [
                        "generalize (H0 r).",
                        "VernacExtend",
                        "c86af4246b13a33ce08af749fd2bc741f1e8b4e0"
                    ]
                },
                {
                    "command": [
                        "rewrite EQ.",
                        "VernacExtend",
                        "359c5e196f83a6afbd9ede635bddbf545fd1eb82"
                    ]
                },
                {
                    "command": [
                        "intro LD.",
                        "VernacExtend",
                        "e3c813d98478a10d30f26e186b92f75c47095f44"
                    ]
                },
                {
                    "command": [
                        "inv LD.",
                        "VernacExtend",
                        "c2dc28a309efcf6aaac33035da2f95c60717094d"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "apply functions_translated; auto.",
                        "VernacExtend",
                        "dc240557169d25aa7ab64ad5ca0812ca1c6dc94c"
                    ]
                },
                {
                    "command": [
                        "rewrite symbols_preserved.",
                        "VernacExtend",
                        "6841171a4c7b1113a4595e4c739d96fa04ebb36d"
                    ]
                },
                {
                    "command": [
                        "destruct (Genv.find_symbol ge i); intros.",
                        "VernacExtend",
                        "d72b89d648295062915ab4fa10153d9efb47c6da"
                    ]
                },
                {
                    "command": [
                        "apply funct_ptr_translated; auto.",
                        "VernacExtend",
                        "d832cd791bc1cf5c1422c943c8b42fd2b26f2168"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "transf_initial_states",
            "line_nb": 457,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "exploit funct_ptr_translated; eauto.",
                        "VernacExtend",
                        "a6e3943c1607109713dadd7e54e002a6b821b40c"
                    ]
                },
                {
                    "command": [
                        "intro FIND.",
                        "VernacExtend",
                        "4592f55029130296cd77b942f74345f04bc97c95"
                    ]
                },
                {
                    "command": [
                        "exists (Callstate nil (transf_fundef f) nil m0); split.",
                        "VernacExtend",
                        "34c5b9ad248d42fed5fe13cb0ea87822b1c091f2"
                    ]
                },
                {
                    "command": [
                        "econstructor; eauto.",
                        "VernacExtend",
                        "faa93781fb8bbf289e651728c4588af1c4169d34"
                    ]
                },
                {
                    "command": [
                        "apply (Genv.init_mem_transf TRANSL).",
                        "VernacExtend",
                        "d8545a751a0e6e6d8f8fdef326da91f501be0497"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "replace (prog_main tprog) with (prog_main prog).",
                        "VernacExtend",
                        "272d374728f54188bd4ca798b0013bb73e287c33"
                    ]
                },
                {
                    "command": [
                        "rewrite symbols_preserved.",
                        "VernacExtend",
                        "6841171a4c7b1113a4595e4c739d96fa04ebb36d"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "symmetry; eapply match_program_main; eauto.",
                        "VernacExtend",
                        "d978bc551cc3dbe97e04bc1099806f184285debb"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H3.",
                        "VernacExtend",
                        "1eb91ccefb59c504d04364b76e0995592b63f60e"
                    ]
                },
                {
                    "command": [
                        "apply sig_preserved.",
                        "VernacExtend",
                        "d06268764b0e0b02eeb37c83702eb0120b43406d"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "apply Mem.extends_refl.",
                        "VernacExtend",
                        "83c6067c542fea1335008b2e39e21db2c5d56be0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "transf_final_states",
            "line_nb": 477,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "inv H5.",
                        "VernacExtend",
                        "3b24f58d604fd0d45f8c1024700082cc552e0ce8"
                    ]
                },
                {
                    "command": [
                        "inv H3.",
                        "VernacExtend",
                        "bf389b6bd23f97715c74ed9eca5a780ee9e91e3c"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}