{
    "filename": "backend/Renumberproof.v",
    "coq_project": "CompCert",
    "vernac_cmds": [
        [
            "Require Import Coqlib Maps Postorder.",
            "VernacRequire",
            "0f6649709983a9caab7d73533497075cb6d81e25"
        ],
        [
            "Require Import AST Linking.",
            "VernacRequire",
            "7d6948a67271bb4c4ddf7fe1b423c370d8e8ffef"
        ],
        [
            "Require Import Values Memory Globalenvs Events Smallstep.",
            "VernacRequire",
            "0e921638af23d9a6ec778249b7ba80e67c6a0801"
        ],
        [
            "Require Import Op Registers RTL Renumber.",
            "VernacRequire",
            "d8aa13efa5942d4123766e810c66138c25203e9b"
        ],
        [
            "Definition match_prog (p tp: RTL.program) := match_program (fun ctx f tf => tf = transf_fundef f) eq p tp.",
            "VernacDefinition",
            "9d0a580d754c9820c95d8dd337d67d1145325169"
        ],
        [
            "Lemma transf_program_match: forall p, match_prog p (transf_program p).",
            "VernacStartTheoremProof",
            "53be22438320084db4a016a5e1d0605cc93b9b4b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply match_transform_program; eauto.",
            "VernacExtend",
            "e119da7bc3917617de94e13e784065017182a6e4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section PRESERVATION.",
            "VernacBeginSection",
            "a2814d5aa8b8d0cc886862ccd0f0170ad3d37a0d"
        ],
        [
            "Variables prog tprog: program.",
            "VernacAssumption",
            "8470b8f055d41a2d192cfdf1e63075adee06aecc"
        ],
        [
            "Hypothesis TRANSL: match_prog prog tprog.",
            "VernacAssumption",
            "f142a653eba722fb6257c5e7e8b7049978740f24"
        ],
        [
            "Let ge := Genv.globalenv prog.",
            "VernacDefinition",
            "cce8960f9bb57fcaf02f1f588c7dd031df1f13fa"
        ],
        [
            "Let tge := Genv.globalenv tprog.",
            "VernacDefinition",
            "4415189c42cf73371e20d4a5c0bf71a83eebdb01"
        ],
        [
            "Lemma functions_translated: forall v f, Genv.find_funct ge v = Some f -> Genv.find_funct tge v = Some (transf_fundef f).",
            "VernacStartTheoremProof",
            "9f638f4dc046b5c7689727887d61d252f2a4dd98"
        ],
        [
            "Proof (Genv.find_funct_transf TRANSL).",
            "VernacExactProof",
            "912a2cef930b3cc3d29b62127c590bc4c1a17566"
        ],
        [
            "Lemma function_ptr_translated: forall v f, Genv.find_funct_ptr ge v = Some f -> Genv.find_funct_ptr tge v = Some (transf_fundef f).",
            "VernacStartTheoremProof",
            "e7205dd2bc944da410e903eec9c5cdbf188b1e5d"
        ],
        [
            "Proof (Genv.find_funct_ptr_transf TRANSL).",
            "VernacExactProof",
            "f437b4269766a2daa2b09d23138fe960888a697d"
        ],
        [
            "Lemma symbols_preserved: forall id, Genv.find_symbol tge id = Genv.find_symbol ge id.",
            "VernacStartTheoremProof",
            "f5b73d7bfe3702be728b6db7d1d056c1e825ecb8"
        ],
        [
            "Proof (Genv.find_symbol_transf TRANSL).",
            "VernacExactProof",
            "393f03768cd3fc0a77d6ccf9cd9946a90c0db1a4"
        ],
        [
            "Lemma senv_preserved: Senv.equiv ge tge.",
            "VernacStartTheoremProof",
            "26138f22c10c48a979c59d3e528a91bf09fc9ac8"
        ],
        [
            "Proof (Genv.senv_transf TRANSL).",
            "VernacExactProof",
            "8671789e5170bc72f78e24178b3e9cc8de3b12a6"
        ],
        [
            "Lemma sig_preserved: forall f, funsig (transf_fundef f) = funsig f.",
            "VernacStartTheoremProof",
            "ccc8d62f6555a30848844ba5e62f0cbd0027ab79"
        ],
        [
            "destruct f; reflexivity.",
            "VernacExtend",
            "57297ed46717213ffc67204d9279ff0e7535f108"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma find_function_translated: forall ros rs fd, find_function ge ros rs = Some fd -> find_function tge ros rs = Some (transf_fundef fd).",
            "VernacStartTheoremProof",
            "af8f7bfdebfd3b3408bfd4f06cc635a99bfce9ec"
        ],
        [
            "unfold find_function; intros.",
            "VernacExtend",
            "8de70867ccf264b5d05adf653696f9a57ce58e96"
        ],
        [
            "destruct ros as [r|id].",
            "VernacExtend",
            "08995ffb166368db2899bdcdca7d2c86907f05fd"
        ],
        [
            "eapply functions_translated; eauto.",
            "VernacExtend",
            "45d424f967733daf81bf2b97c9e5161e94dc05f9"
        ],
        [
            "rewrite symbols_preserved.",
            "VernacExtend",
            "6841171a4c7b1113a4595e4c739d96fa04ebb36d"
        ],
        [
            "destruct (Genv.find_symbol ge id); try congruence.",
            "VernacExtend",
            "b8ba721363db795ad74c45fbbf8c0ae1fa783f8e"
        ],
        [
            "eapply function_ptr_translated; eauto.",
            "VernacExtend",
            "358fe855aa3cfcd4e99a361a2b2fe4cb154b00b7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section RENUMBER.",
            "VernacBeginSection",
            "fef520809841bfbe1d156dbcaad5b9fd6c80b08f"
        ],
        [
            "Variable f: PTree.t positive.",
            "VernacAssumption",
            "3420ea2b2b90f3d2caa13990b362908b1d5931bb"
        ],
        [
            "Hypothesis f_inj: forall x1 x2 y, f!x1 = Some y -> f!x2 = Some y -> x1 = x2.",
            "VernacAssumption",
            "16bde1c1cb427ba1bb1738def08da1785aba3ec2"
        ],
        [
            "Lemma renum_cfg_nodes: forall c x y i, c!x = Some i -> f!x = Some y -> (renum_cfg f c)!y = Some(renum_instr f i).",
            "VernacStartTheoremProof",
            "a35098cc0d2a200b740b3731c454534f9451d2f7"
        ],
        [
            "set (P := fun (c c': code) => forall x y i, c!x = Some i -> f!x = Some y -> c'!y = Some(renum_instr f i)).",
            "VernacExtend",
            "38bb28f14753c6eea048605c3786bff7dc08e45e"
        ],
        [
            "intros c0.",
            "VernacExtend",
            "ce5a90a7b4625d40548c2351c348f1c671355892"
        ],
        [
            "change (P c0 (renum_cfg f c0)).",
            "VernacExtend",
            "6bfcc755ec0d556bb66af398e3560c8956c2f543"
        ],
        [
            "unfold renum_cfg.",
            "VernacExtend",
            "47bb0c8e925bde46662067aac70e1ad0789390b1"
        ],
        [
            "apply PTree_Properties.fold_rec; unfold P; intros.",
            "VernacExtend",
            "266e08681b76218af2a682d3b2dd41c6197df4ff"
        ],
        [
            "eapply H0; eauto.",
            "VernacExtend",
            "0240392f0ea7b22c93b1755ba1a7880bec673374"
        ],
        [
            "rewrite H; auto.",
            "VernacExtend",
            "3e25713af8eaa76cddf9287af10d66733da2ee16"
        ],
        [
            "rewrite PTree.gempty in H; congruence.",
            "VernacExtend",
            "58487c81a0265a4ac28db45b9f4ec0f4ff7ccf49"
        ],
        [
            "rewrite PTree.gsspec in H2.",
            "VernacExtend",
            "b493a8c2dafa18120a204a32ee0ef517ce5e4f65"
        ],
        [
            "unfold renum_node.",
            "VernacExtend",
            "0a8024bd370446c7e680066da3770b7ce71382be"
        ],
        [
            "destruct (peq x k).",
            "VernacExtend",
            "62c49ef8aacb0a68fe6e362356cffc0b5d021832"
        ],
        [
            "inv H2.",
            "VernacExtend",
            "6144021562e950304ba8e947fdc2423691182458"
        ],
        [
            "rewrite H3.",
            "VernacExtend",
            "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
        ],
        [
            "apply PTree.gss.",
            "VernacExtend",
            "e0e0d9b5775ce92f174c46a867531d5ac346bd39"
        ],
        [
            "destruct f!k as [y'|] eqn:?.",
            "VernacExtend",
            "bc677ae5d04cf9619c505a0a096abf7cef96bcba"
        ],
        [
            "rewrite PTree.gso.",
            "VernacExtend",
            "6aa89209a57c294bcf8a2206f8ecdff703d6861a"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "red; intros; subst y'.",
            "VernacExtend",
            "50cb7c345b988344fae671d13c48d7ab386b3249"
        ],
        [
            "elim n.",
            "VernacExtend",
            "c68f766a88bb5402d72ee6adaca953661a5d18b2"
        ],
        [
            "eapply f_inj; eauto.",
            "VernacExtend",
            "50cc65ce3bf0e550e008f712d1e14d92f4fe62f3"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End RENUMBER.",
            "VernacEndSegment",
            "c9e8e3c47dec276b21e1af60494c66900af24fea"
        ],
        [
            "Definition pnum (f: function) := postorder (successors_map f) f.(fn_entrypoint).",
            "VernacDefinition",
            "09f922da22e8a65bdb2a095888f61d2e00b3e684"
        ],
        [
            "Definition reach (f: function) (pc: node) := reachable (successors_map f) f.(fn_entrypoint) pc.",
            "VernacDefinition",
            "1b41a44bc3e5e7702387b0f8eafec1c1264d9ce2"
        ],
        [
            "Lemma transf_function_at: forall f pc i, f.(fn_code)!pc = Some i -> reach f pc -> (transf_function f).(fn_code)!(renum_pc (pnum f) pc) = Some(renum_instr (pnum f) i).",
            "VernacStartTheoremProof",
            "c45cd37742e98d7ab1b3408eaa042565857af73e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (postorder_correct (successors_map f) f.(fn_entrypoint)) as [A B].",
            "VernacExtend",
            "24542fbb593125c9bf1dc1085771d549a82c337e"
        ],
        [
            "fold (pnum f) in *.",
            "VernacExtend",
            "dbd7f49410b99331731bb32722d4ed4630e05f2c"
        ],
        [
            "unfold renum_pc.",
            "VernacExtend",
            "16ebae44412bc7e913552d56b1c937dbea378959"
        ],
        [
            "destruct (pnum f)! pc as [pc'|] eqn:?.",
            "VernacExtend",
            "ba6e17293a2d5475e0ceb69927cd56fe20f75811"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "eapply renum_cfg_nodes; eauto.",
            "VernacExtend",
            "d4e9908b191f176d7241c57d78ee3ea07609b882"
        ],
        [
            "elim (B pc); auto.",
            "VernacExtend",
            "0539891ac7dea353d763d49125857d39853562a6"
        ],
        [
            "unfold successors_map.",
            "VernacExtend",
            "d9bb314df0a7d02ed0b5f6bb7002f3a7d4b1b256"
        ],
        [
            "rewrite PTree.gmap1.",
            "VernacExtend",
            "a38e218b020eaf1dc7e33fd69b878e010b2c49d4"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac TR_AT := match goal with | [ A: (fn_code _)!_ = Some _ , B: reach _ _ |- _ ] => generalize (transf_function_at _ _ _ A B); simpl renum_instr; intros end.",
            "VernacExtend",
            "71ad795104a812958b7d1919d57be1f0f7051185"
        ],
        [
            "Lemma reach_succ: forall f pc i s, f.(fn_code)!pc = Some i -> In s (successors_instr i) -> reach f pc -> reach f s.",
            "VernacStartTheoremProof",
            "f4419f67ae219738af9552b12645ca8f7c32a1d2"
        ],
        [
            "unfold reach; intros.",
            "VernacExtend",
            "e489e68f8bb0db382dcf7f7c7bbf17d606f4c6b2"
        ],
        [
            "econstructor; eauto.",
            "VernacExtend",
            "faa93781fb8bbf289e651728c4588af1c4169d34"
        ],
        [
            "unfold successors_map.",
            "VernacExtend",
            "d9bb314df0a7d02ed0b5f6bb7002f3a7d4b1b256"
        ],
        [
            "rewrite PTree.gmap1.",
            "VernacExtend",
            "a38e218b020eaf1dc7e33fd69b878e010b2c49d4"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive match_frames: RTL.stackframe -> RTL.stackframe -> Prop := | match_frames_intro: forall res f sp pc rs (REACH: reach f pc), match_frames (Stackframe res f sp pc rs) (Stackframe res (transf_function f) sp (renum_pc (pnum f) pc) rs).",
            "VernacInductive",
            "3dbbacb666301e944172b96bd6025a64ff9525f5"
        ],
        [
            "Inductive match_states: RTL.state -> RTL.state -> Prop := | match_regular_states: forall stk f sp pc rs m stk' (STACKS: list_forall2 match_frames stk stk') (REACH: reach f pc), match_states (State stk f sp pc rs m) (State stk' (transf_function f) sp (renum_pc (pnum f) pc) rs m) | match_callstates: forall stk f args m stk' (STACKS: list_forall2 match_frames stk stk'), match_states (Callstate stk f args m) (Callstate stk' (transf_fundef f) args m) | match_returnstates: forall stk v m stk' (STACKS: list_forall2 match_frames stk stk'), match_states (Returnstate stk v m) (Returnstate stk' v m).",
            "VernacInductive",
            "f1b34c1de187d88ba1d4eb24955cd94775a2efb3"
        ],
        [
            "Lemma step_simulation: forall S1 t S2, RTL.step ge S1 t S2 -> forall S1', match_states S1 S1' -> exists S2', RTL.step tge S1' t S2' /\\ match_states S2 S2'.",
            "VernacStartTheoremProof",
            "7828d211e93eee58c61d5e9227bcd2b3c874212e"
        ],
        [
            "induction 1; intros S1' MS; inv MS; try TR_AT.",
            "VernacExtend",
            "3c31c0afcf7f177060ca996633937ee5d3f7df73"
        ],
        [
            "econstructor; split.",
            "VernacExtend",
            "11b22cf50026d480fd4ddd40ba5951e5ad64df31"
        ],
        [
            "eapply exec_Inop; eauto.",
            "VernacExtend",
            "280361ecde6c0986f6289665f296b707874f51e9"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "eapply reach_succ; eauto.",
            "VernacExtend",
            "8e5e532b1f186069cc940e8d46901e00a1fd392c"
        ],
        [
            "simpl; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "econstructor; split.",
            "VernacExtend",
            "11b22cf50026d480fd4ddd40ba5951e5ad64df31"
        ],
        [
            "eapply exec_Iop; eauto.",
            "VernacExtend",
            "f1df713b8f8562641db9513625be5585515bfe65"
        ],
        [
            "instantiate (1 := v).",
            "VernacExtend",
            "5d5d772b1505768ff6dd7cf90591efc368652a3e"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "apply eval_operation_preserved.",
            "VernacExtend",
            "900ff3d62f8601dddcd670b883e916608a4e1950"
        ],
        [
            "exact symbols_preserved.",
            "VernacExtend",
            "1116fbd2806347b4babd686280e43dd75a449540"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "eapply reach_succ; eauto.",
            "VernacExtend",
            "8e5e532b1f186069cc940e8d46901e00a1fd392c"
        ],
        [
            "simpl; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "econstructor; split.",
            "VernacExtend",
            "11b22cf50026d480fd4ddd40ba5951e5ad64df31"
        ],
        [
            "assert (eval_addressing tge sp addr rs ## args = Some a).",
            "VernacExtend",
            "8bd492e5844af38d47b2a1e08dcf0e81d137cb5e"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "apply eval_addressing_preserved.",
            "VernacExtend",
            "c0a7a8f7b179e92f5667e2364f4b1c1ec47b31cd"
        ],
        [
            "exact symbols_preserved.",
            "VernacExtend",
            "1116fbd2806347b4babd686280e43dd75a449540"
        ],
        [
            "eapply exec_Iload; eauto.",
            "VernacExtend",
            "37a64c383b66a18ce977d9d9ec13d449f192bedc"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "eapply reach_succ; eauto.",
            "VernacExtend",
            "8e5e532b1f186069cc940e8d46901e00a1fd392c"
        ],
        [
            "simpl; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "econstructor; split.",
            "VernacExtend",
            "11b22cf50026d480fd4ddd40ba5951e5ad64df31"
        ],
        [
            "assert (eval_addressing tge sp addr rs ## args = Some a).",
            "VernacExtend",
            "8bd492e5844af38d47b2a1e08dcf0e81d137cb5e"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "apply eval_addressing_preserved.",
            "VernacExtend",
            "c0a7a8f7b179e92f5667e2364f4b1c1ec47b31cd"
        ],
        [
            "exact symbols_preserved.",
            "VernacExtend",
            "1116fbd2806347b4babd686280e43dd75a449540"
        ],
        [
            "eapply exec_Istore; eauto.",
            "VernacExtend",
            "766fc45119bc50f6f615d665a545a5852a25ac0c"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "eapply reach_succ; eauto.",
            "VernacExtend",
            "8e5e532b1f186069cc940e8d46901e00a1fd392c"
        ],
        [
            "simpl; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "econstructor; split.",
            "VernacExtend",
            "11b22cf50026d480fd4ddd40ba5951e5ad64df31"
        ],
        [
            "eapply exec_Icall with (fd := transf_fundef fd); eauto.",
            "VernacExtend",
            "e39cdc72c5c3a9484399ff33414441a5ccb1c061"
        ],
        [
            "eapply find_function_translated; eauto.",
            "VernacExtend",
            "e6faba173aaab5db378fb151f2c3d223f6ef09ab"
        ],
        [
            "apply sig_preserved.",
            "VernacExtend",
            "d06268764b0e0b02eeb37c83702eb0120b43406d"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "eapply reach_succ; eauto.",
            "VernacExtend",
            "8e5e532b1f186069cc940e8d46901e00a1fd392c"
        ],
        [
            "simpl; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "econstructor; split.",
            "VernacExtend",
            "11b22cf50026d480fd4ddd40ba5951e5ad64df31"
        ],
        [
            "eapply exec_Itailcall with (fd := transf_fundef fd); eauto.",
            "VernacExtend",
            "1fcdfdb3e9fe6d3e00c8e88d11b67e1f3bb365ef"
        ],
        [
            "eapply find_function_translated; eauto.",
            "VernacExtend",
            "e6faba173aaab5db378fb151f2c3d223f6ef09ab"
        ],
        [
            "apply sig_preserved.",
            "VernacExtend",
            "d06268764b0e0b02eeb37c83702eb0120b43406d"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "econstructor; split.",
            "VernacExtend",
            "11b22cf50026d480fd4ddd40ba5951e5ad64df31"
        ],
        [
            "eapply exec_Ibuiltin; eauto.",
            "VernacExtend",
            "8f43d5c3d33a540e13b92ed4750b03354d88944c"
        ],
        [
            "eapply eval_builtin_args_preserved with (ge1 := ge); eauto.",
            "VernacExtend",
            "aa45dfd6bdb60d2a27af21a26864408bff10ac01"
        ],
        [
            "exact symbols_preserved.",
            "VernacExtend",
            "1116fbd2806347b4babd686280e43dd75a449540"
        ],
        [
            "eapply external_call_symbols_preserved; eauto.",
            "VernacExtend",
            "813f92bdb1533e6fa3771b065062bf37abb881d1"
        ],
        [
            "apply senv_preserved.",
            "VernacExtend",
            "0c7fb546d77a2d514e07921bb68b8e894eb87b22"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "eapply reach_succ; eauto.",
            "VernacExtend",
            "8e5e532b1f186069cc940e8d46901e00a1fd392c"
        ],
        [
            "simpl; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "econstructor; split.",
            "VernacExtend",
            "11b22cf50026d480fd4ddd40ba5951e5ad64df31"
        ],
        [
            "eapply exec_Icond; eauto.",
            "VernacExtend",
            "c711d5b980028ed04fa6d6ea2e7b22fe7f4fe3b1"
        ],
        [
            "replace (if b then renum_pc (pnum f) ifso else renum_pc (pnum f) ifnot) with (renum_pc (pnum f) (if b then ifso else ifnot)).",
            "VernacExtend",
            "067844aab4a65317f7a348da4d8fa60b974b9ac3"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "eapply reach_succ; eauto.",
            "VernacExtend",
            "8e5e532b1f186069cc940e8d46901e00a1fd392c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct b; auto.",
            "VernacExtend",
            "95533d5a0da46eaf4c778d77a0f89adc7cad4aff"
        ],
        [
            "destruct b; auto.",
            "VernacExtend",
            "95533d5a0da46eaf4c778d77a0f89adc7cad4aff"
        ],
        [
            "econstructor; split.",
            "VernacExtend",
            "11b22cf50026d480fd4ddd40ba5951e5ad64df31"
        ],
        [
            "eapply exec_Ijumptable; eauto.",
            "VernacExtend",
            "9a4753d838171cc11e2a1a5cfc75b81d80095d6c"
        ],
        [
            "rewrite list_nth_z_map.",
            "VernacExtend",
            "1ff2ca5974dabcf92905f50fb98bfb4b3397e9df"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "simpl; eauto.",
            "VernacExtend",
            "4ce65de88075efadc9056201dfbe2495f09587e9"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "eapply reach_succ; eauto.",
            "VernacExtend",
            "8e5e532b1f186069cc940e8d46901e00a1fd392c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "eapply list_nth_z_in; eauto.",
            "VernacExtend",
            "0533f256734e656f0ec37688ebda6ef904f169e5"
        ],
        [
            "econstructor; split.",
            "VernacExtend",
            "11b22cf50026d480fd4ddd40ba5951e5ad64df31"
        ],
        [
            "eapply exec_Ireturn; eauto.",
            "VernacExtend",
            "10f8c59708d3eabef24d4a7100724f610e0fda85"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "econstructor; split.",
            "VernacExtend",
            "11b22cf50026d480fd4ddd40ba5951e5ad64df31"
        ],
        [
            "eapply exec_function_internal; eauto.",
            "VernacExtend",
            "b622ee9bc8a8276d334b3a2c3b5f83eba26f2409"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "unfold reach.",
            "VernacExtend",
            "9c250501804322e22dcbbd8778479ca940662ff6"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "econstructor; split.",
            "VernacExtend",
            "11b22cf50026d480fd4ddd40ba5951e5ad64df31"
        ],
        [
            "eapply exec_function_external; eauto.",
            "VernacExtend",
            "8d81969d295ef35a1eca26d38a5703720f73fcf6"
        ],
        [
            "eapply external_call_symbols_preserved; eauto.",
            "VernacExtend",
            "813f92bdb1533e6fa3771b065062bf37abb881d1"
        ],
        [
            "apply senv_preserved.",
            "VernacExtend",
            "0c7fb546d77a2d514e07921bb68b8e894eb87b22"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "inv STACKS.",
            "VernacExtend",
            "24e3d638436e8bdcee6a186a65a909cc22955cc6"
        ],
        [
            "inv H1.",
            "VernacExtend",
            "2c43d1971eb5aa98166f6ec686cc2a4f1886b0a4"
        ],
        [
            "econstructor; split.",
            "VernacExtend",
            "11b22cf50026d480fd4ddd40ba5951e5ad64df31"
        ],
        [
            "eapply exec_return; eauto.",
            "VernacExtend",
            "b0c4505e5c327c5c7493794dce98509a28e98348"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma transf_initial_states: forall S1, RTL.initial_state prog S1 -> exists S2, RTL.initial_state tprog S2 /\\ match_states S1 S2.",
            "VernacStartTheoremProof",
            "e49f9501f704039e8fbfc5bd796a88f8c08df5fb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "econstructor; split.",
            "VernacExtend",
            "11b22cf50026d480fd4ddd40ba5951e5ad64df31"
        ],
        [
            "econstructor.",
            "VernacExtend",
            "57e0061dc596e77c9d30460f8165a53e99efafc2"
        ],
        [
            "eapply (Genv.init_mem_transf TRANSL); eauto.",
            "VernacExtend",
            "ff29dac356ca96726069cbe81b4ebe3e88b9d36f"
        ],
        [
            "rewrite symbols_preserved.",
            "VernacExtend",
            "6841171a4c7b1113a4595e4c739d96fa04ebb36d"
        ],
        [
            "rewrite (match_program_main TRANSL).",
            "VernacExtend",
            "69e2da537f04d18a80abf506c962a7ee823cde9b"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "eapply function_ptr_translated; eauto.",
            "VernacExtend",
            "358fe855aa3cfcd4e99a361a2b2fe4cb154b00b7"
        ],
        [
            "rewrite <- H3; apply sig_preserved.",
            "VernacExtend",
            "2a4682e2d2c18930c068f35a12c909518e7e871a"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma transf_final_states: forall S1 S2 r, match_states S1 S2 -> RTL.final_state S1 r -> RTL.final_state S2 r.",
            "VernacStartTheoremProof",
            "f39f6da7651a1ec2bc7f64aec457f604d4573a1d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "inv STACKS.",
            "VernacExtend",
            "24e3d638436e8bdcee6a186a65a909cc22955cc6"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem transf_program_correct: forward_simulation (RTL.semantics prog) (RTL.semantics tprog).",
            "VernacStartTheoremProof",
            "4b7c13157fd614f04ee59e555f7a5426b048e8d1"
        ],
        [
            "eapply forward_simulation_step.",
            "VernacExtend",
            "cea6b2dd584a0bca2ebbebcb40ad3c4fcea6d0bd"
        ],
        [
            "apply senv_preserved.",
            "VernacExtend",
            "0c7fb546d77a2d514e07921bb68b8e894eb87b22"
        ],
        [
            "eexact transf_initial_states.",
            "VernacExtend",
            "879170b7e37fc4f142d27cafca5d36694a713fd4"
        ],
        [
            "eexact transf_final_states.",
            "VernacExtend",
            "f472f08005fa64ded5a1ae3cd19193cc2c5821f8"
        ],
        [
            "exact step_simulation.",
            "VernacExtend",
            "b84ebac6b27d06e3710f963a9aaf775930b8d1ca"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End PRESERVATION.",
            "VernacEndSegment",
            "0c982db2ac125e5e033b75cbdbdf765586ec35b6"
        ]
    ],
    "proofs": [
        {
            "name": "transf_program_match",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eapply match_transform_program; eauto.",
                        "VernacExtend",
                        "e119da7bc3917617de94e13e784065017182a6e4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sig_preserved",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "destruct f; reflexivity.",
                        "VernacExtend",
                        "57297ed46717213ffc67204d9279ff0e7535f108"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "find_function_translated",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "unfold find_function; intros.",
                        "VernacExtend",
                        "8de70867ccf264b5d05adf653696f9a57ce58e96"
                    ]
                },
                {
                    "command": [
                        "destruct ros as [r|id].",
                        "VernacExtend",
                        "08995ffb166368db2899bdcdca7d2c86907f05fd"
                    ]
                },
                {
                    "command": [
                        "eapply functions_translated; eauto.",
                        "VernacExtend",
                        "45d424f967733daf81bf2b97c9e5161e94dc05f9"
                    ]
                },
                {
                    "command": [
                        "rewrite symbols_preserved.",
                        "VernacExtend",
                        "6841171a4c7b1113a4595e4c739d96fa04ebb36d"
                    ]
                },
                {
                    "command": [
                        "destruct (Genv.find_symbol ge id); try congruence.",
                        "VernacExtend",
                        "b8ba721363db795ad74c45fbbf8c0ae1fa783f8e"
                    ]
                },
                {
                    "command": [
                        "eapply function_ptr_translated; eauto.",
                        "VernacExtend",
                        "358fe855aa3cfcd4e99a361a2b2fe4cb154b00b7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "renum_cfg_nodes",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "set (P := fun (c c': code) => forall x y i, c!x = Some i -> f!x = Some y -> c'!y = Some(renum_instr f i)).",
                        "VernacExtend",
                        "38bb28f14753c6eea048605c3786bff7dc08e45e"
                    ]
                },
                {
                    "command": [
                        "intros c0.",
                        "VernacExtend",
                        "ce5a90a7b4625d40548c2351c348f1c671355892"
                    ]
                },
                {
                    "command": [
                        "change (P c0 (renum_cfg f c0)).",
                        "VernacExtend",
                        "6bfcc755ec0d556bb66af398e3560c8956c2f543"
                    ]
                },
                {
                    "command": [
                        "unfold renum_cfg.",
                        "VernacExtend",
                        "47bb0c8e925bde46662067aac70e1ad0789390b1"
                    ]
                },
                {
                    "command": [
                        "apply PTree_Properties.fold_rec; unfold P; intros.",
                        "VernacExtend",
                        "266e08681b76218af2a682d3b2dd41c6197df4ff"
                    ]
                },
                {
                    "command": [
                        "eapply H0; eauto.",
                        "VernacExtend",
                        "0240392f0ea7b22c93b1755ba1a7880bec673374"
                    ]
                },
                {
                    "command": [
                        "rewrite H; auto.",
                        "VernacExtend",
                        "3e25713af8eaa76cddf9287af10d66733da2ee16"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gempty in H; congruence.",
                        "VernacExtend",
                        "58487c81a0265a4ac28db45b9f4ec0f4ff7ccf49"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gsspec in H2.",
                        "VernacExtend",
                        "b493a8c2dafa18120a204a32ee0ef517ce5e4f65"
                    ]
                },
                {
                    "command": [
                        "unfold renum_node.",
                        "VernacExtend",
                        "0a8024bd370446c7e680066da3770b7ce71382be"
                    ]
                },
                {
                    "command": [
                        "destruct (peq x k).",
                        "VernacExtend",
                        "62c49ef8aacb0a68fe6e362356cffc0b5d021832"
                    ]
                },
                {
                    "command": [
                        "inv H2.",
                        "VernacExtend",
                        "6144021562e950304ba8e947fdc2423691182458"
                    ]
                },
                {
                    "command": [
                        "rewrite H3.",
                        "VernacExtend",
                        "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
                    ]
                },
                {
                    "command": [
                        "apply PTree.gss.",
                        "VernacExtend",
                        "e0e0d9b5775ce92f174c46a867531d5ac346bd39"
                    ]
                },
                {
                    "command": [
                        "destruct f!k as [y'|] eqn:?.",
                        "VernacExtend",
                        "bc677ae5d04cf9619c505a0a096abf7cef96bcba"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gso.",
                        "VernacExtend",
                        "6aa89209a57c294bcf8a2206f8ecdff703d6861a"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "red; intros; subst y'.",
                        "VernacExtend",
                        "50cb7c345b988344fae671d13c48d7ab386b3249"
                    ]
                },
                {
                    "command": [
                        "elim n.",
                        "VernacExtend",
                        "c68f766a88bb5402d72ee6adaca953661a5d18b2"
                    ]
                },
                {
                    "command": [
                        "eapply f_inj; eauto.",
                        "VernacExtend",
                        "50cc65ce3bf0e550e008f712d1e14d92f4fe62f3"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "transf_function_at",
            "line_nb": 62,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (postorder_correct (successors_map f) f.(fn_entrypoint)) as [A B].",
                        "VernacExtend",
                        "24542fbb593125c9bf1dc1085771d549a82c337e"
                    ]
                },
                {
                    "command": [
                        "fold (pnum f) in *.",
                        "VernacExtend",
                        "dbd7f49410b99331731bb32722d4ed4630e05f2c"
                    ]
                },
                {
                    "command": [
                        "unfold renum_pc.",
                        "VernacExtend",
                        "16ebae44412bc7e913552d56b1c937dbea378959"
                    ]
                },
                {
                    "command": [
                        "destruct (pnum f)! pc as [pc'|] eqn:?.",
                        "VernacExtend",
                        "ba6e17293a2d5475e0ceb69927cd56fe20f75811"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "eapply renum_cfg_nodes; eauto.",
                        "VernacExtend",
                        "d4e9908b191f176d7241c57d78ee3ea07609b882"
                    ]
                },
                {
                    "command": [
                        "elim (B pc); auto.",
                        "VernacExtend",
                        "0539891ac7dea353d763d49125857d39853562a6"
                    ]
                },
                {
                    "command": [
                        "unfold successors_map.",
                        "VernacExtend",
                        "d9bb314df0a7d02ed0b5f6bb7002f3a7d4b1b256"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gmap1.",
                        "VernacExtend",
                        "a38e218b020eaf1dc7e33fd69b878e010b2c49d4"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reach_succ",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "unfold reach; intros.",
                        "VernacExtend",
                        "e489e68f8bb0db382dcf7f7c7bbf17d606f4c6b2"
                    ]
                },
                {
                    "command": [
                        "econstructor; eauto.",
                        "VernacExtend",
                        "faa93781fb8bbf289e651728c4588af1c4169d34"
                    ]
                },
                {
                    "command": [
                        "unfold successors_map.",
                        "VernacExtend",
                        "d9bb314df0a7d02ed0b5f6bb7002f3a7d4b1b256"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gmap1.",
                        "VernacExtend",
                        "a38e218b020eaf1dc7e33fd69b878e010b2c49d4"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "transf_final_states",
            "line_nb": 197,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "inv STACKS.",
                        "VernacExtend",
                        "24e3d638436e8bdcee6a186a65a909cc22955cc6"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}