{
    "filename": "backend/Kildall.v",
    "coq_project": "CompCert",
    "vernac_cmds": [
        [
            "Require Import Coqlib.",
            "VernacRequire",
            "bbbe15041aca3a03300067f7acd445b462d537cc"
        ],
        [
            "Require Import Iteration.",
            "VernacRequire",
            "a5afa18857efb10ce7c524ebc231f33ad3c3053f"
        ],
        [
            "Require Import Maps.",
            "VernacRequire",
            "f9a27637102e60e06a3c1ceb5a01819e80b9f645"
        ],
        [
            "Require Import Lattice.",
            "VernacRequire",
            "cbff06b741c16b3d01b08496bcfb374021168eb1"
        ],
        [
            "Local Unset Elimination Schemes.",
            "VernacUnsetOption",
            "2fc2e4d2065c5e8b5b407b11414df6bebc03d0a8"
        ],
        [
            "Local Unset Case Analysis Schemes.",
            "VernacUnsetOption",
            "caf88bd166e725fa13309b094f896ccd6484855c"
        ],
        [
            "Module Type DATAFLOW_SOLVER.",
            "VernacDeclareModuleType",
            "2d99988471040f2c074ef141d2330c39191d0bb9"
        ],
        [
            "Declare Module L: SEMILATTICE.",
            "VernacDeclareModule",
            "dd0d4c8abaca330b924aa62b790ea840c4639054"
        ],
        [
            "Parameter fixpoint: forall {A: Type} (code: PTree.t A) (successors: A -> list positive) (transf: positive -> L.t -> L.t) (ep: positive) (ev: L.t), option (PMap.t L.t).",
            "VernacAssumption",
            "7a34c99b4b845c7f0234c8f2805ca436038284ab"
        ],
        [
            "Axiom fixpoint_solution: forall A (code: PTree.t A) successors transf ep ev res n instr s, fixpoint code successors transf ep ev = Some res -> code!n = Some instr -> In s (successors instr) -> (forall n, L.eq (transf n L.bot) L.bot) -> L.ge res!!s (transf n res!!n).",
            "VernacAssumption",
            "849de5cfdd3c116cfbcb9b6e9b7fcbdedb4765b0"
        ],
        [
            "Axiom fixpoint_entry: forall A (code: PTree.t A) successors transf ep ev res, fixpoint code successors transf ep ev = Some res -> L.ge res!!ep ev.",
            "VernacAssumption",
            "2ee48397d449893efb471e23aef6b1ae71910c7d"
        ],
        [
            "Axiom fixpoint_invariant: forall A (code: PTree.t A) successors transf ep ev (P: L.t -> Prop), P L.bot -> (forall x y, P x -> P y -> P (L.lub x y)) -> (forall pc instr x, code!pc = Some instr -> P x -> P (transf pc x)) -> P ev -> forall res pc, fixpoint code successors transf ep ev = Some res -> P res!!pc.",
            "VernacAssumption",
            "65c53f18c0ff179b36f3a41217cd0e2f2ff76587"
        ],
        [
            "End DATAFLOW_SOLVER.",
            "VernacEndSegment",
            "f8849daa3215fc571bf82b5d810276f7ad8ddd40"
        ],
        [
            "Module Type NODE_SET.",
            "VernacDeclareModuleType",
            "bab44fe918ae268ab3f6cc3503b9a1e3bd03196c"
        ],
        [
            "Parameter t: Type.",
            "VernacAssumption",
            "504795567cd4c81b969bd65cb901c9b8a73ae96f"
        ],
        [
            "Parameter empty: t.",
            "VernacAssumption",
            "f30bb867d749b7a536f13a63f5ff85a7fe3b4e6f"
        ],
        [
            "Parameter add: positive -> t -> t.",
            "VernacAssumption",
            "6a2a723465afe98d1752be93288dc8af7eec99b6"
        ],
        [
            "Parameter pick: t -> option (positive * t).",
            "VernacAssumption",
            "2a1a7f0cb0f2c85fcaaa7ce8faec0f911c91464e"
        ],
        [
            "Parameter all_nodes: forall {A: Type}, PTree.t A -> t.",
            "VernacAssumption",
            "c2efe81ef1666becd2e4d947e764d5bf9e832adf"
        ],
        [
            "Parameter In: positive -> t -> Prop.",
            "VernacAssumption",
            "d78f384593b16c6f57c2525a6fce25e90e465c30"
        ],
        [
            "Axiom empty_spec: forall n, ~In n empty.",
            "VernacAssumption",
            "2649b5d5386019e3576f991dce39815c2d1def55"
        ],
        [
            "Axiom add_spec: forall n n' s, In n' (add n s) <-> n = n' \\/ In n' s.",
            "VernacAssumption",
            "ffcc5e682b30d9be348a237a5c3d6efd002b4ba7"
        ],
        [
            "Axiom pick_none: forall s n, pick s = None -> ~In n s.",
            "VernacAssumption",
            "b17494dc4fa7d9213dd2b3f4893d13f65055dc6e"
        ],
        [
            "Axiom pick_some: forall s n s', pick s = Some(n, s') -> forall n', In n' s <-> n = n' \\/ In n' s'.",
            "VernacAssumption",
            "6e17d2de5bc49d098e66fe3bd07a68f0665daf01"
        ],
        [
            "Axiom all_nodes_spec: forall A (code: PTree.t A) n instr, code!n = Some instr -> In n (all_nodes code).",
            "VernacAssumption",
            "64abb55030fb63163b75fd7d8a395117f4301668"
        ],
        [
            "End NODE_SET.",
            "VernacEndSegment",
            "0a38a93058eca9a14ef6c42a32d0022aa7164e2a"
        ],
        [
            "Section REACHABLE.",
            "VernacBeginSection",
            "b8b66d9e053069097aab10cb47568b693841f164"
        ],
        [
            "Context {A: Type} (code: PTree.t A) (successors: A -> list positive).",
            "VernacContext",
            "cba6b99324f4a936c2904b9c92cd446fcc68991d"
        ],
        [
            "Inductive reachable: positive -> positive -> Prop := | reachable_refl: forall n, reachable n n | reachable_left: forall n1 n2 n3 i, code!n1 = Some i -> In n2 (successors i) -> reachable n2 n3 -> reachable n1 n3.",
            "VernacInductive",
            "ef0612788342ef263113d0a7fe39388548a509df"
        ],
        [
            "Scheme reachable_ind := Induction for reachable Sort Prop.",
            "VernacScheme",
            "c778d7cbb9ee4f07966c4d2a8434a1f33f4eb46d"
        ],
        [
            "Lemma reachable_trans: forall n1 n2, reachable n1 n2 -> forall n3, reachable n2 n3 -> reachable n1 n3.",
            "VernacStartTheoremProof",
            "5a4d4f8849bc30ac6af3a1b05f3ce253570f3600"
        ],
        [
            "induction 1; intros.",
            "VernacExtend",
            "176684f910d62ec20fbc75549575bf1cd34fa8ec"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "econstructor; eauto.",
            "VernacExtend",
            "faa93781fb8bbf289e651728c4588af1c4169d34"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma reachable_right: forall n1 n2 n3 i, reachable n1 n2 -> code!n2 = Some i -> In n3 (successors i) -> reachable n1 n3.",
            "VernacStartTheoremProof",
            "af1582ca999b11fbbd6663a6f29620bdeb1450a6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply reachable_trans with n2; auto.",
            "VernacExtend",
            "f1efb56ee302d34157524c16838832f37b5b1dfa"
        ],
        [
            "econstructor; eauto.",
            "VernacExtend",
            "faa93781fb8bbf289e651728c4588af1c4169d34"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End REACHABLE.",
            "VernacEndSegment",
            "f2897aff349b7fd2b63975db1b6ba5d0f5b51b1f"
        ],
        [
            "Module Dataflow_Solver (LAT: SEMILATTICE) (NS: NODE_SET) <: DATAFLOW_SOLVER with Module L := LAT.",
            "VernacDefineModule",
            "238d96ef7b1d653dd772a10e040810684c4959aa"
        ],
        [
            "Module L := LAT.",
            "VernacDefineModule",
            "a5f7cc73cedc3166637316a3a36ddc784ed03698"
        ],
        [
            "Section Kildall.",
            "VernacBeginSection",
            "aef606bea180a61dd490a559e2d6745b3b7e2733"
        ],
        [
            "Context {A: Type}.",
            "VernacContext",
            "c9c3c92f9391cb196430f2c558473771d9c86d28"
        ],
        [
            "Variable code: PTree.t A.",
            "VernacAssumption",
            "e1ad7b0f97b307aea0804f77e1dc7ac6965137a3"
        ],
        [
            "Variable successors: A -> list positive.",
            "VernacAssumption",
            "d3de3b9e16a420bf819c47ec91f0565b4d2036d5"
        ],
        [
            "Variable transf: positive -> L.t -> L.t.",
            "VernacAssumption",
            "1256e27016854d7f0118cf3c35416d7e7e223738"
        ],
        [
            "Record state : Type := mkstate { aval: PTree.t L.t; worklist: NS.t; visited: positive -> Prop }.",
            "VernacInductive",
            "acfe89165245e26d063a919ccaf30dfde3c60423"
        ],
        [
            "Definition abstr_value (n: positive) (s: state) : L.t := match s.(aval)!n with | None => L.bot | Some v => v end.",
            "VernacDefinition",
            "436a30196baafaea6b127f27de818be3b11f2941"
        ],
        [
            "Definition propagate_succ (s: state) (out: L.t) (n: positive) := match s.(aval)!n with | None => {| aval := PTree.set n out s.(aval); worklist := NS.add n s.(worklist); visited := fun p => p = n \\/ s.(visited) p |} | Some oldl => let newl := L.lub oldl out in if L.beq oldl newl then s else {| aval := PTree.set n newl s.(aval); worklist := NS.add n s.(worklist); visited := fun p => p = n \\/ s.(visited) p |} end.",
            "VernacDefinition",
            "5625ba083e353b649f270d44e4b31576e7990853"
        ],
        [
            "Fixpoint propagate_succ_list (s: state) (out: L.t) (succs: list positive) {struct succs} : state := match succs with | nil => s | n :: rem => propagate_succ_list (propagate_succ s out n) out rem end.",
            "VernacFixpoint",
            "bec6820410eff12859ae30ff5a10742844ba9cb0"
        ],
        [
            "Definition step (s: state) : PMap.t L.t + state := match NS.pick s.(worklist) with | None => inl _ (L.bot, s.(aval)) | Some(n, rem) => match code!n with | None => inr _ {| aval := s.(aval); worklist := rem; visited := s.(visited) |} | Some instr => inr _ (propagate_succ_list {| aval := s.(aval); worklist := rem; visited := s.(visited) |} (transf n (abstr_value n s)) (successors instr)) end end.",
            "VernacDefinition",
            "687d907852eebc51ef0a54c2291767abf3dd20c7"
        ],
        [
            "Definition fixpoint_from (start: state) : option (PMap.t L.t) := PrimIter.iterate _ _ step start.",
            "VernacDefinition",
            "47e453450c6927a6a7140fe31c86859880b72c7f"
        ],
        [
            "Definition start_state (enode: positive) (eval: L.t) := {| aval := PTree.set enode eval (PTree.empty L.t); worklist := NS.add enode NS.empty; visited := fun n => n = enode |}.",
            "VernacDefinition",
            "11a1d7e181e0d5690b22cf819eb0927f1ab0e82e"
        ],
        [
            "Definition fixpoint (enode: positive) (eval: L.t) := fixpoint_from (start_state enode eval).",
            "VernacDefinition",
            "a290b492c42ea181513178d53468e6f309a30e5f"
        ],
        [
            "Definition start_state_nodeset (enodes: NS.t) := {| aval := PTree.empty L.t; worklist := enodes; visited := fun n => NS.In n enodes |}.",
            "VernacDefinition",
            "9c52ba700422cf7be324d794f56a910b8a58e508"
        ],
        [
            "Definition fixpoint_nodeset (enodes: NS.t) := fixpoint_from (start_state_nodeset enodes).",
            "VernacDefinition",
            "be8d5cdede8ff4dad779052f86758142c3580dba"
        ],
        [
            "Definition start_state_allnodes := {| aval := PTree.empty L.t; worklist := NS.all_nodes code; visited := fun n => exists instr, code!n = Some instr |}.",
            "VernacDefinition",
            "9067d56a3fbafc87e9c13711c6ddc0b7da610664"
        ],
        [
            "Definition fixpoint_allnodes := fixpoint_from start_state_allnodes.",
            "VernacDefinition",
            "7b63d27fd08285ff327dc6697d8fdd2b970dc004"
        ],
        [
            "Inductive optge: option L.t -> option L.t -> Prop := | optge_some: forall l l', L.ge l l' -> optge (Some l) (Some l') | optge_none: forall ol, optge ol None.",
            "VernacInductive",
            "7b2ceb57115fe781efce4bc410ef6ec88635dc39"
        ],
        [
            "Remark optge_refl: forall ol, optge ol ol.",
            "VernacStartTheoremProof",
            "c195a72dd1befe96052d9b950b89e9d1f75ccb86"
        ],
        [
            "destruct ol; constructor.",
            "VernacExtend",
            "a3b968598683d92c346b51b21708759530bb31d7"
        ],
        [
            "apply L.ge_refl; apply L.eq_refl.",
            "VernacExtend",
            "c46adb4ffd6e5960745a0858b505b01520eb00dc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark optge_trans: forall ol1 ol2 ol3, optge ol1 ol2 -> optge ol2 ol3 -> optge ol1 ol3.",
            "VernacStartTheoremProof",
            "a486333bb3f60003acc50f6ae343e29082c6c990"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "eapply L.ge_trans; eauto.",
            "VernacExtend",
            "e07fe9d44ae92b45da0d4d9a9d792a6eaa8183ac"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark optge_abstr_value: forall st st' n, optge st.(aval)!n st'.(aval)!n -> L.ge (abstr_value n st) (abstr_value n st').",
            "VernacStartTheoremProof",
            "de03259398dae288021eb195fe2023f7e0cdd456"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold abstr_value.",
            "VernacExtend",
            "17852475d69d2f9c5e234f4e334a115bf5654ae1"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply L.ge_bot.",
            "VernacExtend",
            "b26a635957b6673479ad7bf281de21d1bde0bcec"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma propagate_succ_charact: forall st out n, let st' := propagate_succ st out n in optge st'.(aval)!n (Some out) /\\ (forall s, n <> s -> st'.(aval)!s = st.(aval)!s) /\\ (forall s, optge st'.(aval)!s st.(aval)!s) /\\ (NS.In n st'.(worklist) \\/ st'.(aval)!n = st.(aval)!n) /\\ (forall n', NS.In n' st.(worklist) -> NS.In n' st'.(worklist)) /\\ (forall n', NS.In n' st'.(worklist) -> n' = n \\/ NS.In n' st.(worklist)) /\\ (forall n', st.(visited) n' -> st'.(visited) n') /\\ (forall n', st'.(visited) n' -> NS.In n' st'.(worklist) \\/ st.(visited) n') /\\ (forall n', st.(aval)!n' = None -> st'.(aval)!n' <> None -> st'.(visited) n').",
            "VernacStartTheoremProof",
            "c962c70812671d103deb2786a4fac7e302bf330c"
        ],
        [
            "unfold propagate_succ; intros; simpl.",
            "VernacExtend",
            "6cb043e3e1aab1bf214f406b35175bc2a7fdfc81"
        ],
        [
            "destruct st.(aval)!n as [v|] eqn:E; [predSpec L.beq L.beq_correct v (L.lub v out) | idtac].",
            "VernacExtend",
            "3b8a01824561cd51ca0c165b0cfab15f76eb301a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "repeat split; intros.",
            "VernacExtend",
            "c59c3246b20afa48e2f30924174ca427854186e6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite E.",
            "VernacExtend",
            "304079e57d3d6c0912193a26e70d779c9e1768b9"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "eapply L.ge_trans.",
            "VernacExtend",
            "e19f4d435e5e28d9c6fe8abbb8cf3b394612c9cb"
        ],
        [
            "apply L.ge_refl.",
            "VernacExtend",
            "789f21b0b00c9fa1973354dffd0311d4e4c5161b"
        ],
        [
            "apply H; auto.",
            "VernacExtend",
            "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
        ],
        [
            "apply L.ge_lub_right.",
            "VernacExtend",
            "3103bf62452f0c5d283a9b66b64310f67ea108d4"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply optge_refl.",
            "VernacExtend",
            "c35f2167b2c9fc1d0938a9c1d97eccb57363e0fe"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "right; auto.",
            "VernacExtend",
            "1f0a695ab06b3950e6a7adf329d300b1f859fe9d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl; repeat split; intros.",
            "VernacExtend",
            "48f272a34d6b677d9228d1b59c0b1a0fac3fd98f"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite PTree.gss.",
            "VernacExtend",
            "1862d23de1a24ed5e53618dc05bc2c5f9f530523"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply L.ge_lub_right.",
            "VernacExtend",
            "3103bf62452f0c5d283a9b66b64310f67ea108d4"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite PTree.gso by auto.",
            "VernacExtend",
            "fecf8284ee081d0a1090d47a4d72d32fa16d647c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite PTree.gsspec.",
            "VernacExtend",
            "88315e2b3b1f3e40fe18917f8425d57b50a31282"
        ],
        [
            "destruct (peq s n).",
            "VernacExtend",
            "bfa24b23451d03eb20b3776412019899db74ed4f"
        ],
        [
            "subst s.",
            "VernacExtend",
            "74f9d19bed934d582499e429031854bbf4cf674a"
        ],
        [
            "rewrite E.",
            "VernacExtend",
            "304079e57d3d6c0912193a26e70d779c9e1768b9"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply L.ge_lub_left.",
            "VernacExtend",
            "20fc51124f6c68168b6af2536ec62ff851c13ad2"
        ],
        [
            "apply optge_refl.",
            "VernacExtend",
            "c35f2167b2c9fc1d0938a9c1d97eccb57363e0fe"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite NS.add_spec.",
            "VernacExtend",
            "e90539b38f369107b4cc7f69fe935a8da796f9f0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite NS.add_spec.",
            "VernacExtend",
            "e90539b38f369107b4cc7f69fe935a8da796f9f0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite NS.add_spec in H0.",
            "VernacExtend",
            "d7b16f1c5a7703859d55653d911a85c40a254114"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct H0; auto.",
            "VernacExtend",
            "9ebda477a89633134ca4d54ad2c1cf67712003c4"
        ],
        [
            "subst n'.",
            "VernacExtend",
            "c6091d97cf8dbc71af500743869c9dea7d99a086"
        ],
        [
            "rewrite NS.add_spec; auto.",
            "VernacExtend",
            "9fd90bf4f22e988eee34f5e9c54679af24c875c9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite PTree.gsspec in H1.",
            "VernacExtend",
            "b07d984bf774d7087296184b242e1da29344ed5c"
        ],
        [
            "destruct (peq n' n).",
            "VernacExtend",
            "bad255d2bd6e57e03dae832eaf31de0d1151be47"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl; repeat split; intros.",
            "VernacExtend",
            "48f272a34d6b677d9228d1b59c0b1a0fac3fd98f"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite PTree.gss.",
            "VernacExtend",
            "1862d23de1a24ed5e53618dc05bc2c5f9f530523"
        ],
        [
            "apply optge_refl.",
            "VernacExtend",
            "c35f2167b2c9fc1d0938a9c1d97eccb57363e0fe"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite PTree.gso by auto.",
            "VernacExtend",
            "fecf8284ee081d0a1090d47a4d72d32fa16d647c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite PTree.gsspec.",
            "VernacExtend",
            "88315e2b3b1f3e40fe18917f8425d57b50a31282"
        ],
        [
            "destruct (peq s n).",
            "VernacExtend",
            "bfa24b23451d03eb20b3776412019899db74ed4f"
        ],
        [
            "subst s.",
            "VernacExtend",
            "74f9d19bed934d582499e429031854bbf4cf674a"
        ],
        [
            "rewrite E.",
            "VernacExtend",
            "304079e57d3d6c0912193a26e70d779c9e1768b9"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply optge_refl.",
            "VernacExtend",
            "c35f2167b2c9fc1d0938a9c1d97eccb57363e0fe"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite NS.add_spec.",
            "VernacExtend",
            "e90539b38f369107b4cc7f69fe935a8da796f9f0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite NS.add_spec.",
            "VernacExtend",
            "e90539b38f369107b4cc7f69fe935a8da796f9f0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite NS.add_spec in H.",
            "VernacExtend",
            "9c58844917f49d0c13f87459e5a403247874dc8b"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct H; auto.",
            "VernacExtend",
            "95ae427bd4e09a5f31c59184b718811a23ecb36f"
        ],
        [
            "subst n'.",
            "VernacExtend",
            "c6091d97cf8dbc71af500743869c9dea7d99a086"
        ],
        [
            "rewrite NS.add_spec.",
            "VernacExtend",
            "e90539b38f369107b4cc7f69fe935a8da796f9f0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite PTree.gsspec in H0.",
            "VernacExtend",
            "f15ab141a0f37cb2185b3c521b085865fefc908b"
        ],
        [
            "destruct (peq n' n).",
            "VernacExtend",
            "bad255d2bd6e57e03dae832eaf31de0d1151be47"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma propagate_succ_list_charact: forall out l st, let st' := propagate_succ_list st out l in (forall n, In n l -> optge st'.(aval)!n (Some out)) /\\ (forall n, ~In n l -> st'.(aval)!n = st.(aval)!n) /\\ (forall n, optge st'.(aval)!n st.(aval)!n) /\\ (forall n, NS.In n st'.(worklist) \\/ st'.(aval)!n = st.(aval)!n) /\\ (forall n', NS.In n' st.(worklist) -> NS.In n' st'.(worklist)) /\\ (forall n', NS.In n' st'.(worklist) -> In n' l \\/ NS.In n' st.(worklist)) /\\ (forall n', st.(visited) n' -> st'.(visited) n') /\\ (forall n', st'.(visited) n' -> NS.In n' st'.(worklist) \\/ st.(visited) n') /\\ (forall n', st.(aval)!n' = None -> st'.(aval)!n' <> None -> st'.(visited) n').",
            "VernacStartTheoremProof",
            "3b5260ac2c9461814087e08ffbb93b7fd5f01214"
        ],
        [
            "induction l; simpl; intros.",
            "VernacExtend",
            "34e9ea5965da389dfe8faf53c8ea4965d4fdcc22"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "repeat split; intros.",
            "VernacExtend",
            "c59c3246b20afa48e2f30924174ca427854186e6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply optge_refl.",
            "VernacExtend",
            "c35f2167b2c9fc1d0938a9c1d97eccb57363e0fe"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "generalize (propagate_succ_charact st out a).",
            "VernacExtend",
            "11c45cb6d4b365b4800061fe3bca65da310e6224"
        ],
        [
            "set (st1 := propagate_succ st out a).",
            "VernacExtend",
            "6669c7f7216e5b4c78e46afad1607d8403d93626"
        ],
        [
            "intros (A1 & A2 & A3 & A4 & A5 & A6 & A7 & A8 & A9).",
            "VernacExtend",
            "e8b5433834ca850da47fb1175d15b0e86bcb5b33"
        ],
        [
            "generalize (IHl st1).",
            "VernacExtend",
            "50adf99fc5b41d0fe30bcc896d36eeccb76ac0d5"
        ],
        [
            "set (st2 := propagate_succ_list st1 out l).",
            "VernacExtend",
            "1135d219610ced6f9d6e683386944a6b6ca68db3"
        ],
        [
            "intros (B1 & B2 & B3 & B4 & B5 & B6 & B7 & B8 & B9).",
            "VernacExtend",
            "a08687274e61dcb203999eb72941aa9403eae0b0"
        ],
        [
            "clear IHl.",
            "VernacExtend",
            "8bbd9602dc9b79bb59ead5a20fa2e5495ddfe01a"
        ],
        [
            "repeat split; intros.",
            "VernacExtend",
            "c59c3246b20afa48e2f30924174ca427854186e6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "subst n.",
            "VernacExtend",
            "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
        ],
        [
            "eapply optge_trans; eauto.",
            "VernacExtend",
            "daa620ba97b180e799168227875e41273e886da0"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite B2 by tauto.",
            "VernacExtend",
            "685f2002e79491e623f225a60f265640611b12a5"
        ],
        [
            "apply A2; tauto.",
            "VernacExtend",
            "135827b034f6748b866e84df09fce821799fdc69"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply optge_trans; eauto.",
            "VernacExtend",
            "daa620ba97b180e799168227875e41273e886da0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct (B4 n).",
            "VernacExtend",
            "e53585ee60f95455265f8476e9d5004eb2cd1b5b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct (peq n a).",
            "VernacExtend",
            "45a098790784433aeb0dedcc595f7a407445bb21"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "subst n.",
            "VernacExtend",
            "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
        ],
        [
            "destruct A4.",
            "VernacExtend",
            "71c7f3b8d4c0e4e5d111b0615243426436d039a9"
        ],
        [
            "left; auto.",
            "VernacExtend",
            "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
        ],
        [
            "right; congruence.",
            "VernacExtend",
            "b833d2a8f279e4e369914e11323c752b9a003ffb"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exploit B6; eauto.",
            "VernacExtend",
            "0eabb1b65e3ddd0314abd66313dd887e1a0b24e5"
        ],
        [
            "intros [P|P].",
            "VernacExtend",
            "1ac04b365ddba6c73aebfccdd4bb8681f041d678"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exploit A6; eauto.",
            "VernacExtend",
            "a2faa5a75fda452f18afb0b9160831f9954782fd"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "specialize (B8 n'); specialize (A8 n').",
            "VernacExtend",
            "70244d102a04e9351ec605dea5bf6bd26cd52182"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct st1.(aval)!n' eqn:ST1.",
            "VernacExtend",
            "5492502acdff7619baecc8030a109f9293a00d5f"
        ],
        [
            "apply B7.",
            "VernacExtend",
            "87887f49e5cc0efc70ab0ae182a8164a8df4ed99"
        ],
        [
            "apply A9; auto.",
            "VernacExtend",
            "47e70de1569f9a32e53dcc849ef541eddf28434b"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "apply B9; auto.",
            "VernacExtend",
            "3805f94bb8aa8470f86ec3d14e443ea07f626024"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive steps: state -> state -> Prop := | steps_base: forall s, steps s s | steps_right: forall s1 s2 s3, steps s1 s2 -> step s2 = inr s3 -> steps s1 s3.",
            "VernacInductive",
            "6220767fcf6b6f5a686021a042d6b6c6192dc84d"
        ],
        [
            "Scheme steps_ind := Induction for steps Sort Prop.",
            "VernacScheme",
            "6998dce20af6facf2667b5fffb86204c28cde14b"
        ],
        [
            "Lemma fixpoint_from_charact: forall start res, fixpoint_from start = Some res -> exists st, steps start st /\\ NS.pick st.(worklist) = None /\\ res = (L.bot, st.(aval)).",
            "VernacStartTheoremProof",
            "12cb5af1fabba634db2bb6a47457e3ac30dbc700"
        ],
        [
            "unfold fixpoint; intros.",
            "VernacExtend",
            "e984472dad88ba328d23cb08aeb1da555d37c3a6"
        ],
        [
            "eapply (PrimIter.iterate_prop _ _ step (fun st => steps start st) (fun res => exists st, steps start st /\\ NS.pick (worklist st) = None /\\ res = (L.bot, aval st))); eauto.",
            "VernacExtend",
            "4e9a916ce8cdba70de8ac2fffce2aaaa57243b14"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (step a) eqn:E.",
            "VernacExtend",
            "1bfdca95ef1054b773b95ffac98e9fabf0c00599"
        ],
        [
            "exists a; split; auto.",
            "VernacExtend",
            "6ced52e045930ee310d935c747875e269f31e154"
        ],
        [
            "unfold step in E.",
            "VernacExtend",
            "cd3d7a912163b8d31c29788667ebbba0dc6baaaf"
        ],
        [
            "destruct (NS.pick (worklist a)) as [[n rem]|].",
            "VernacExtend",
            "c71add969d0a46b9b345e0342fd7e5d1a855142c"
        ],
        [
            "destruct (code!n); discriminate.",
            "VernacExtend",
            "9d56b0fd9d0ab6de99eb58aed19b19d1e843be45"
        ],
        [
            "inv E.",
            "VernacExtend",
            "e6f2a5ef16e476c86204cb8ae2fccd762215c4c8"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "eapply steps_right; eauto.",
            "VernacExtend",
            "686f7bf516a048e89152ca583c95cd972c09fd81"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma step_incr: forall n s1 s2, step s1 = inr s2 -> optge s2.(aval)!n s1.(aval)!n /\\ (s1.(visited) n -> s2.(visited) n).",
            "VernacStartTheoremProof",
            "9941a6130bfc3017f3571a81ce5aaae8b2eaf149"
        ],
        [
            "unfold step; intros.",
            "VernacExtend",
            "072a6bfbc251ee596003a26b388b2a83a736e36e"
        ],
        [
            "destruct (NS.pick (worklist s1)) as [[p rem] | ]; try discriminate.",
            "VernacExtend",
            "df7d665e51cfd7de6cbc3dc2a818aee85f5fc356"
        ],
        [
            "destruct (code!p) as [instr|]; inv H.",
            "VernacExtend",
            "64b887e8cba40d3d10ba582d2a8e6a06f7c37393"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "generalize (propagate_succ_list_charact (transf p (abstr_value p s1)) (successors instr) {| aval := aval s1; worklist := rem; visited := visited s1 |}).",
            "VernacExtend",
            "2749421db80194ffdca1ecac4b7b7eb670ebd722"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "set (s' := propagate_succ_list {| aval := aval s1; worklist := rem; visited := visited s1 |} (transf p (abstr_value p s1)) (successors instr)).",
            "VernacExtend",
            "82532999fda46ffe7db63e145b60692715ec23af"
        ],
        [
            "intros (A1 & A2 & A3 & A4 & A5 & A6 & A7 & A8 & A9).",
            "VernacExtend",
            "e8b5433834ca850da47fb1175d15b0e86bcb5b33"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply optge_refl.",
            "VernacExtend",
            "c35f2167b2c9fc1d0938a9c1d97eccb57363e0fe"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma steps_incr: forall n s1 s2, steps s1 s2 -> optge s2.(aval)!n s1.(aval)!n /\\ (s1.(visited) n -> s2.(visited) n).",
            "VernacStartTheoremProof",
            "3254f15bc49e487537f0efe593572496ff814697"
        ],
        [
            "induction 1.",
            "VernacExtend",
            "dfe896305621800fcbb03b32d51d497edbdf1dc5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply optge_refl.",
            "VernacExtend",
            "c35f2167b2c9fc1d0938a9c1d97eccb57363e0fe"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct IHsteps.",
            "VernacExtend",
            "09d5e3e643f8c3f350bd499c65aea404ca8fdf51"
        ],
        [
            "exploit (step_incr n); eauto.",
            "VernacExtend",
            "a768d966571d0deb8a9d7ef4eac3f44d929d3b28"
        ],
        [
            "intros [P Q].",
            "VernacExtend",
            "663dc907ccc489647d55e233d550455f27ce8429"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply optge_trans; eauto.",
            "VernacExtend",
            "daa620ba97b180e799168227875e41273e886da0"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Record good_state (st: state) : Prop := { gs_stable: forall n, st.(visited) n -> NS.In n st.(worklist) \\/ (forall i s, code!n = Some i -> In s (successors i) -> optge st.(aval)!s (Some (transf n (abstr_value n st)))); gs_defined: forall n v, st.(aval)!n = Some v -> st.(visited) n }.",
            "VernacInductive",
            "8a3308cab1add0368083778e6c09519f4334a956"
        ],
        [
            "Lemma step_state_good: forall st pc rem instr, NS.pick st.(worklist) = Some (pc, rem) -> code!pc = Some instr -> good_state st -> good_state (propagate_succ_list (mkstate st.(aval) rem st.(visited)) (transf pc (abstr_value pc st)) (successors instr)).",
            "VernacStartTheoremProof",
            "ec255c1853492d5b8522305e80047c5af1b8b7fe"
        ],
        [
            "intros until instr; intros PICK CODEAT [GOOD1 GOOD2].",
            "VernacExtend",
            "3fc9bafd1e3361c0b962a4e246e2950fbc52b29f"
        ],
        [
            "generalize (NS.pick_some _ _ _ PICK); intro PICK2.",
            "VernacExtend",
            "567d1b7837e99e457a0e51eb916c1d2d742f6801"
        ],
        [
            "set (out := transf pc (abstr_value pc st)).",
            "VernacExtend",
            "7a87b12fcdc8ab57d018aba2da7e4e8b38ca7f2e"
        ],
        [
            "generalize (propagate_succ_list_charact out (successors instr) {| aval := aval st; worklist := rem; visited := visited st |}).",
            "VernacExtend",
            "e015b4740c896acdacdefc332bf5c6990d890205"
        ],
        [
            "set (st' := propagate_succ_list {| aval := aval st; worklist := rem; visited := visited st |} out (successors instr)).",
            "VernacExtend",
            "26cc8c39ce1d547ca5c9999f0c8a93f7da6acd7e"
        ],
        [
            "simpl; intros (A1 & A2 & A3 & A4 & A5 & A6 & A7 & A8 & A9).",
            "VernacExtend",
            "649fdbbf1839319eb1e5a32f4a425abc2494ed04"
        ],
        [
            "constructor; intros.",
            "VernacExtend",
            "6563c593bcf639ae667d436a08cab59e1ac2dcce"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (A8 n H); auto.",
            "VernacExtend",
            "07f927750a73567dc474de4d0aaa754e4051c46e"
        ],
        [
            "destruct (A4 n); auto.",
            "VernacExtend",
            "8f463a7c2ad958e1c860172e1ee50ef3ff093d37"
        ],
        [
            "replace (abstr_value n st') with (abstr_value n st) by (unfold abstr_value; rewrite H1; auto).",
            "VernacExtend",
            "9a5b17c4e5680420ff8ff5aaf5260abda43c8b76"
        ],
        [
            "exploit GOOD1; eauto.",
            "VernacExtend",
            "eee4a4634d551628e8e58ecc4f2e39726c8f3801"
        ],
        [
            "intros [P|P].",
            "VernacExtend",
            "1ac04b365ddba6c73aebfccdd4bb8681f041d678"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite PICK2 in P; destruct P.",
            "VernacExtend",
            "21b8960f83a262cd086e91ceb6877440a6ef2700"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "subst n.",
            "VernacExtend",
            "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
        ],
        [
            "fold out.",
            "VernacExtend",
            "b7e1755e2d51a58b825c8a9bc66163e9ab66451c"
        ],
        [
            "right; intros.",
            "VernacExtend",
            "55f32a4c85976dbf403d59803ef666837ed695da"
        ],
        [
            "assert (i = instr) by congruence.",
            "VernacExtend",
            "d9f59128b45c3f4807a9936d8c7a282468d934f5"
        ],
        [
            "subst i.",
            "VernacExtend",
            "8a51b06e94f64277663e0022260aa1e58bff437c"
        ],
        [
            "apply A1; auto.",
            "VernacExtend",
            "d12c7b0a7723d455f6003ebf78687c2a6bcc8f4d"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply A5; auto.",
            "VernacExtend",
            "61d2a68c7521c7425d623bdda08985c47e5a595d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "right; intros.",
            "VernacExtend",
            "55f32a4c85976dbf403d59803ef666837ed695da"
        ],
        [
            "apply optge_trans with st.(aval)!s; eauto.",
            "VernacExtend",
            "3dd3ef2905600cc4c139c8eebc3b88c932bc9f90"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct st.(aval)!n as [v'|] eqn:ST.",
            "VernacExtend",
            "6f8f160f9d949641a6612c1da72b111822aa94b8"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply A7.",
            "VernacExtend",
            "0d1b81520c5b8a0a8a326ca2d712563c5846e564"
        ],
        [
            "eapply GOOD2; eauto.",
            "VernacExtend",
            "843705e5bf0c440d8c6032f271d3e010eb053400"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply A9; auto.",
            "VernacExtend",
            "47e70de1569f9a32e53dcc849ef541eddf28434b"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma step_state_good_2: forall st pc rem, good_state st -> NS.pick (worklist st) = Some (pc, rem) -> code!pc = None -> good_state (mkstate st.(aval) rem st.(visited)).",
            "VernacStartTheoremProof",
            "0ee8a83e851e7ef3a777ad06f999d5e0674b7000"
        ],
        [
            "intros until rem; intros [GOOD1 GOOD2] PICK CODE.",
            "VernacExtend",
            "02217f058d0d3489281256ed1c651356dfad5262"
        ],
        [
            "generalize (NS.pick_some _ _ _ PICK); intro PICK2.",
            "VernacExtend",
            "567d1b7837e99e457a0e51eb916c1d2d742f6801"
        ],
        [
            "constructor; simpl; intros.",
            "VernacExtend",
            "dcd76c351204acf8d4b7d76eea612fabf67729fc"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exploit GOOD1; eauto.",
            "VernacExtend",
            "eee4a4634d551628e8e58ecc4f2e39726c8f3801"
        ],
        [
            "intros [P | P].",
            "VernacExtend",
            "1ac04b365ddba6c73aebfccdd4bb8681f041d678"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite PICK2 in P.",
            "VernacExtend",
            "416ff9204ab27aa84e8ef2a745bd5bda0225ca37"
        ],
        [
            "destruct P; auto.",
            "VernacExtend",
            "8bd4eed4831e84f575d26a7a9b5a230a54a806d0"
        ],
        [
            "subst n.",
            "VernacExtend",
            "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
        ],
        [
            "right; intros.",
            "VernacExtend",
            "55f32a4c85976dbf403d59803ef666837ed695da"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "right; exact P.",
            "VernacExtend",
            "7dab36b0781c68c237da2562e0ba4b99ab974f3e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply GOOD2; eauto.",
            "VernacExtend",
            "843705e5bf0c440d8c6032f271d3e010eb053400"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma steps_state_good: forall st1 st2, steps st1 st2 -> good_state st1 -> good_state st2.",
            "VernacStartTheoremProof",
            "70b7e2eb0229d15188203e8d8d45a4c6987a5494"
        ],
        [
            "induction 1; intros.",
            "VernacExtend",
            "176684f910d62ec20fbc75549575bf1cd34fa8ec"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold step in e.",
            "VernacExtend",
            "249f5165597381eb45f4b9a59d7a223bfee5e7cd"
        ],
        [
            "destruct (NS.pick (worklist s2)) as [[n rem] | ] eqn:PICK; try discriminate.",
            "VernacExtend",
            "99d7a2c3061889ec8ec4b9c42b931b5c7fa89ded"
        ],
        [
            "destruct (code!n) as [instr|] eqn:CODE; inv e.",
            "VernacExtend",
            "11dfa9a821a67bc8455ce62b273cae8745f86677"
        ],
        [
            "eapply step_state_good; eauto.",
            "VernacExtend",
            "638a6496c4a76ecf055d7e8b7da419d018ad4db1"
        ],
        [
            "eapply step_state_good_2; eauto.",
            "VernacExtend",
            "dc73523dd3abf4a86d5d8912a752817e6f597ee9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma start_state_good: forall enode eval, good_state (start_state enode eval).",
            "VernacStartTheoremProof",
            "c0e8ffe7b986889dd291e7b0fa47f02587cd7116"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold start_state; constructor; simpl; intros.",
            "VernacExtend",
            "b935cacedb5181035db5e31d20f0368466844d05"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst n.",
            "VernacExtend",
            "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
        ],
        [
            "rewrite NS.add_spec; auto.",
            "VernacExtend",
            "9fd90bf4f22e988eee34f5e9c54679af24c875c9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite PTree.gsspec in H.",
            "VernacExtend",
            "518375dbd290af7ea46f909026713f2cbfc67dd9"
        ],
        [
            "rewrite PTree.gempty in H.",
            "VernacExtend",
            "76be3bb2fc63bbedb66ba512de4e1a5820ff2f7c"
        ],
        [
            "destruct (peq n enode).",
            "VernacExtend",
            "940d1f49ffcbc1474f927e255b450ebb55266806"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma start_state_nodeset_good: forall enodes, good_state (start_state_nodeset enodes).",
            "VernacStartTheoremProof",
            "efb7c98508a38246b197ed1034d0dcd0b2036370"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold start_state_nodeset; constructor; simpl; intros.",
            "VernacExtend",
            "faeba530fc92cf7fdcabd89ec158e958f498667b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite PTree.gempty in H.",
            "VernacExtend",
            "76be3bb2fc63bbedb66ba512de4e1a5820ff2f7c"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma start_state_allnodes_good: good_state start_state_allnodes.",
            "VernacStartTheoremProof",
            "72db9ed8a5b65f54eabac80211550e0b50c8ecff"
        ],
        [
            "unfold start_state_allnodes; constructor; simpl; intros.",
            "VernacExtend",
            "26b0f6ce816582d99eb372495fa27b68b1cf4f6f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct H as [instr CODE].",
            "VernacExtend",
            "ea9778c5697d4ffd634a00d6bd927479b728866c"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "eapply NS.all_nodes_spec; eauto.",
            "VernacExtend",
            "d540a45baa55ca635965690a1d08334c7f1564a4"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite PTree.gempty in H.",
            "VernacExtend",
            "76be3bb2fc63bbedb66ba512de4e1a5820ff2f7c"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma reachable_visited: forall st, good_state st -> NS.pick st.(worklist) = None -> forall p q, reachable code successors p q -> st.(visited) p -> st.(visited) q.",
            "VernacStartTheoremProof",
            "29460a8afbce605f67f45084f9a10b68cdea9ad4"
        ],
        [
            "intros st [GOOD1 GOOD2] PICK.",
            "VernacExtend",
            "1a832e0fd441b5393e62886b23d8a86c0f3ddc21"
        ],
        [
            "induction 1; intros.",
            "VernacExtend",
            "176684f910d62ec20fbc75549575bf1cd34fa8ec"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply IHreachable; eauto.",
            "VernacExtend",
            "72fac552fd1ab35146fe9c63948a16d998ab02e3"
        ],
        [
            "exploit GOOD1; eauto.",
            "VernacExtend",
            "eee4a4634d551628e8e58ecc4f2e39726c8f3801"
        ],
        [
            "intros [P | P].",
            "VernacExtend",
            "1ac04b365ddba6c73aebfccdd4bb8681f041d678"
        ],
        [
            "eelim NS.pick_none; eauto.",
            "VernacExtend",
            "ad8f4bd85b1421f1fdfdb3e55cf44e9e4a1d71c6"
        ],
        [
            "exploit P; eauto.",
            "VernacExtend",
            "29e9fcc44e5bdc0e84434c5e2b8d8ae321d675ce"
        ],
        [
            "intros OGE; inv OGE.",
            "VernacExtend",
            "211ea8548ee3a2433df6d400b3878cfafb0c8e81"
        ],
        [
            "eapply GOOD2; eauto.",
            "VernacExtend",
            "843705e5bf0c440d8c6032f271d3e010eb053400"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem fixpoint_solution: forall ep ev res n instr s, fixpoint ep ev = Some res -> code!n = Some instr -> In s (successors instr) -> (forall n, L.eq (transf n L.bot) L.bot) -> L.ge res!!s (transf n res!!n).",
            "VernacStartTheoremProof",
            "c5d9a82f8a00a5c362983b98d830513b2719f028"
        ],
        [
            "unfold fixpoint; intros.",
            "VernacExtend",
            "e984472dad88ba328d23cb08aeb1da555d37c3a6"
        ],
        [
            "exploit fixpoint_from_charact; eauto.",
            "VernacExtend",
            "960af579ecd4ac107fd497967ae33effc1759025"
        ],
        [
            "intros (st & STEPS & PICK & RES).",
            "VernacExtend",
            "5e1aacc48775289907f8aef528844a88049ad77a"
        ],
        [
            "exploit steps_state_good; eauto.",
            "VernacExtend",
            "132e91abe2533f470adac5249bf4d058881d5468"
        ],
        [
            "apply start_state_good.",
            "VernacExtend",
            "3f7117ee8aa727fbe129b18690f21f727f289baf"
        ],
        [
            "intros [GOOD1 GOOD2].",
            "VernacExtend",
            "3e019c261d55d91d0e89efbf9a702181cedd7986"
        ],
        [
            "rewrite RES; unfold PMap.get; simpl.",
            "VernacExtend",
            "c4c607abc4c02fb9826798243756897d1ba2a3b4"
        ],
        [
            "destruct st.(aval)!n as [v|] eqn:STN.",
            "VernacExtend",
            "7358aea7cdb8d87aa88536174da994f9a74eb820"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (GOOD1 n) as [P|P]; eauto.",
            "VernacExtend",
            "c7fc734543502b2340663de57f3d80a8444a4a8f"
        ],
        [
            "eelim NS.pick_none; eauto.",
            "VernacExtend",
            "ad8f4bd85b1421f1fdfdb3e55cf44e9e4a1d71c6"
        ],
        [
            "exploit P; eauto.",
            "VernacExtend",
            "29e9fcc44e5bdc0e84434c5e2b8d8ae321d675ce"
        ],
        [
            "unfold abstr_value; rewrite STN.",
            "VernacExtend",
            "14bb46c7f2e58d5f1e17aad57b2b272fbc74cc8d"
        ],
        [
            "intros OGE; inv OGE.",
            "VernacExtend",
            "211ea8548ee3a2433df6d400b3878cfafb0c8e81"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply L.ge_trans with L.bot.",
            "VernacExtend",
            "c82596cdc704dae090dd8a292b2bebca15bfa0c2"
        ],
        [
            "apply L.ge_bot.",
            "VernacExtend",
            "b26a635957b6673479ad7bf281de21d1bde0bcec"
        ],
        [
            "apply L.ge_refl.",
            "VernacExtend",
            "789f21b0b00c9fa1973354dffd0311d4e4c5161b"
        ],
        [
            "apply L.eq_sym.",
            "VernacExtend",
            "53ff9a697190904ce73664f58e24dad44bd69082"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem fixpoint_entry: forall ep ev res, fixpoint ep ev = Some res -> L.ge res!!ep ev.",
            "VernacStartTheoremProof",
            "ea46e07c7c6894c218c95569dbb7a38eb34c38b2"
        ],
        [
            "unfold fixpoint; intros.",
            "VernacExtend",
            "e984472dad88ba328d23cb08aeb1da555d37c3a6"
        ],
        [
            "exploit fixpoint_from_charact; eauto.",
            "VernacExtend",
            "960af579ecd4ac107fd497967ae33effc1759025"
        ],
        [
            "intros (st & STEPS & PICK & RES).",
            "VernacExtend",
            "5e1aacc48775289907f8aef528844a88049ad77a"
        ],
        [
            "exploit (steps_incr ep); eauto.",
            "VernacExtend",
            "ac4e30801dfb46d50a88d2cc13b107273f5f060a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite PTree.gss.",
            "VernacExtend",
            "1862d23de1a24ed5e53618dc05bc2c5f9f530523"
        ],
        [
            "intros [P Q].",
            "VernacExtend",
            "663dc907ccc489647d55e233d550455f27ce8429"
        ],
        [
            "rewrite RES; unfold PMap.get; simpl.",
            "VernacExtend",
            "c4c607abc4c02fb9826798243756897d1ba2a3b4"
        ],
        [
            "inv P; auto.",
            "VernacExtend",
            "6d094043647a86dedf816e739b12bdd98995596e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem fixpoint_allnodes_solution: forall res n instr s, fixpoint_allnodes = Some res -> code!n = Some instr -> In s (successors instr) -> L.ge res!!s (transf n res!!n).",
            "VernacStartTheoremProof",
            "a02d771bdfea49065d1251a93c897a04cff90714"
        ],
        [
            "unfold fixpoint_allnodes; intros.",
            "VernacExtend",
            "7467d75db6579cb2afac6d396b08b76553068128"
        ],
        [
            "exploit fixpoint_from_charact; eauto.",
            "VernacExtend",
            "960af579ecd4ac107fd497967ae33effc1759025"
        ],
        [
            "intros (st & STEPS & PICK & RES).",
            "VernacExtend",
            "5e1aacc48775289907f8aef528844a88049ad77a"
        ],
        [
            "exploit steps_state_good; eauto.",
            "VernacExtend",
            "132e91abe2533f470adac5249bf4d058881d5468"
        ],
        [
            "apply start_state_allnodes_good.",
            "VernacExtend",
            "a4f33f5607afc357b03a39affb388fa9272fbedb"
        ],
        [
            "intros [GOOD1 GOOD2].",
            "VernacExtend",
            "3e019c261d55d91d0e89efbf9a702181cedd7986"
        ],
        [
            "exploit (steps_incr n); eauto.",
            "VernacExtend",
            "10b39e6e5c06e8fdc99c195987ab8d80cf7f3c81"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros [U V].",
            "VernacExtend",
            "34da01c059b7ef90d5e7631c22b7fd07d15e31d6"
        ],
        [
            "exploit (GOOD1 n).",
            "VernacExtend",
            "87c31ca81e3c86f5ad161102a9de83afb67d55fd"
        ],
        [
            "apply V.",
            "VernacExtend",
            "3c3c08d783f697fa1e1bf5ea373c5e9c29d0ad17"
        ],
        [
            "exists instr; auto.",
            "VernacExtend",
            "fb8ad61b141cf274f992d2c9243a44e62ff3c8d7"
        ],
        [
            "intros [P|P].",
            "VernacExtend",
            "1ac04b365ddba6c73aebfccdd4bb8681f041d678"
        ],
        [
            "eelim NS.pick_none; eauto.",
            "VernacExtend",
            "ad8f4bd85b1421f1fdfdb3e55cf44e9e4a1d71c6"
        ],
        [
            "exploit P; eauto.",
            "VernacExtend",
            "29e9fcc44e5bdc0e84434c5e2b8d8ae321d675ce"
        ],
        [
            "intros OGE.",
            "VernacExtend",
            "65e7dfdfbe0b6529d4c6374b363fc044172d5b5e"
        ],
        [
            "rewrite RES; unfold PMap.get; simpl.",
            "VernacExtend",
            "c4c607abc4c02fb9826798243756897d1ba2a3b4"
        ],
        [
            "inv OGE.",
            "VernacExtend",
            "36d078689dc9e54fa0a637b773b98576578ede99"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem fixpoint_nodeset_solution: forall enodes res e n instr s, fixpoint_nodeset enodes = Some res -> NS.In e enodes -> reachable code successors e n -> code!n = Some instr -> In s (successors instr) -> L.ge res!!s (transf n res!!n).",
            "VernacStartTheoremProof",
            "0f231adcaa27fd962134c40f2a7ebae9a0d75895"
        ],
        [
            "unfold fixpoint_nodeset; intros.",
            "VernacExtend",
            "8cf13be01b1582440ea93533cf54a9e46a420ee9"
        ],
        [
            "exploit fixpoint_from_charact; eauto.",
            "VernacExtend",
            "960af579ecd4ac107fd497967ae33effc1759025"
        ],
        [
            "intros (st & STEPS & PICK & RES).",
            "VernacExtend",
            "5e1aacc48775289907f8aef528844a88049ad77a"
        ],
        [
            "exploit steps_state_good; eauto.",
            "VernacExtend",
            "132e91abe2533f470adac5249bf4d058881d5468"
        ],
        [
            "apply start_state_nodeset_good.",
            "VernacExtend",
            "c1a53fa912539341253a124db152be7d12f2f10b"
        ],
        [
            "intros GOOD.",
            "VernacExtend",
            "1071c95957a11db7e48b9d41bc416928363b31cc"
        ],
        [
            "exploit (steps_incr e); eauto.",
            "VernacExtend",
            "23871eee45acaaf1ed7d6a3b038e10e607096449"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros [U V].",
            "VernacExtend",
            "34da01c059b7ef90d5e7631c22b7fd07d15e31d6"
        ],
        [
            "assert (st.(visited) n).",
            "VernacExtend",
            "24b90aabf49ca1c66d03838afe0adc17bb8ab96d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "eapply reachable_visited; eauto.",
            "VernacExtend",
            "a11de595a4405b8205911f46949227151694340f"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct GOOD as [GOOD1 GOOD2].",
            "VernacExtend",
            "129d317b21ea552ce5d4876ef9b79330446000cd"
        ],
        [
            "exploit (GOOD1 n); eauto.",
            "VernacExtend",
            "b9837bba551c2dbdb7e4dba6ffba1d4806882350"
        ],
        [
            "intros [P|P].",
            "VernacExtend",
            "1ac04b365ddba6c73aebfccdd4bb8681f041d678"
        ],
        [
            "eelim NS.pick_none; eauto.",
            "VernacExtend",
            "ad8f4bd85b1421f1fdfdb3e55cf44e9e4a1d71c6"
        ],
        [
            "exploit P; eauto.",
            "VernacExtend",
            "29e9fcc44e5bdc0e84434c5e2b8d8ae321d675ce"
        ],
        [
            "intros OGE.",
            "VernacExtend",
            "65e7dfdfbe0b6529d4c6374b363fc044172d5b5e"
        ],
        [
            "rewrite RES; unfold PMap.get; simpl.",
            "VernacExtend",
            "c4c607abc4c02fb9826798243756897d1ba2a3b4"
        ],
        [
            "inv OGE.",
            "VernacExtend",
            "36d078689dc9e54fa0a637b773b98576578ede99"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem fixpoint_invariant: forall ep ev (P: L.t -> Prop) (P_bot: P L.bot) (P_lub: forall x y, P x -> P y -> P (L.lub x y)) (P_transf: forall pc instr x, code!pc = Some instr -> P x -> P (transf pc x)) (P_entrypoint: P ev) res pc, fixpoint ep ev = Some res -> P res!!pc.",
            "VernacStartTheoremProof",
            "76fc5b622526a6ad1ce715044ed025f52791f19c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "set (inv := fun st => forall x, P (abstr_value x st)).",
            "VernacExtend",
            "58a773cc58565d27d18dbb130b6394da553d52c4"
        ],
        [
            "assert (inv (start_state ep ev)).",
            "VernacExtend",
            "a5f15062c28b2ea2b74d14acc5eba88170a00ed1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "red; simpl; intros.",
            "VernacExtend",
            "629095e96b1a8bc7172736d3dfde387c11fb3564"
        ],
        [
            "unfold abstr_value, start_state; simpl.",
            "VernacExtend",
            "878daafd406ab19fda19d6f05e9d0a475123cdbe"
        ],
        [
            "rewrite PTree.gsspec.",
            "VernacExtend",
            "88315e2b3b1f3e40fe18917f8425d57b50a31282"
        ],
        [
            "rewrite PTree.gempty.",
            "VernacExtend",
            "02ad4f08527ee6f058bb5b2fc6b52855b65cf49f"
        ],
        [
            "destruct (peq x ep).",
            "VernacExtend",
            "897e0f265542388ffa06b6ec4ae07277cbcdf6f5"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (forall st v n, inv st -> P v -> inv (propagate_succ st v n)).",
            "VernacExtend",
            "28896961e5ba4c5f634712bff09843bfa3c475cd"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold inv, propagate_succ.",
            "VernacExtend",
            "75782094b92a9b85bbd17671cffb58abbf38c872"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (aval st)!n as [oldl|] eqn:E.",
            "VernacExtend",
            "aefd34c227addb4cd9f5faefceff45d31673b67c"
        ],
        [
            "destruct (L.beq oldl (L.lub oldl v)).",
            "VernacExtend",
            "05c36f3bbb9d766dacd68b0a53a8e9a768855fea"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold abstr_value.",
            "VernacExtend",
            "17852475d69d2f9c5e234f4e334a115bf5654ae1"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite PTree.gsspec.",
            "VernacExtend",
            "88315e2b3b1f3e40fe18917f8425d57b50a31282"
        ],
        [
            "destruct (peq x n).",
            "VernacExtend",
            "54c31e4dcc97c30f80cb69ec8eaa10327b79a59f"
        ],
        [
            "apply P_lub; auto.",
            "VernacExtend",
            "5a8b4d26f11ef825e7b339ebda9fad9f8fb3863e"
        ],
        [
            "replace oldl with (abstr_value n st).",
            "VernacExtend",
            "1bf828878e88f29d1ddbb3e261ed3de99663c866"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold abstr_value; rewrite E; auto.",
            "VernacExtend",
            "634b7e5fb3d13572e97407050bc6e90de59bf592"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "unfold abstr_value.",
            "VernacExtend",
            "17852475d69d2f9c5e234f4e334a115bf5654ae1"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite PTree.gsspec.",
            "VernacExtend",
            "88315e2b3b1f3e40fe18917f8425d57b50a31282"
        ],
        [
            "destruct (peq x n).",
            "VernacExtend",
            "54c31e4dcc97c30f80cb69ec8eaa10327b79a59f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (forall l st v, inv st -> P v -> inv (propagate_succ_list st v l)).",
            "VernacExtend",
            "357eeaa68652deaf81443e8ccd3ce2605fdb0b5f"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "induction l; intros; simpl.",
            "VernacExtend",
            "6aa9541b4ade8f0ccec4c2034d15d1d35a916300"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply IHl; auto.",
            "VernacExtend",
            "e138dde1a62d902d35fbbfcb71bf2b52acaced18"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (forall st1 st2, steps st1 st2 -> inv st1 -> inv st2).",
            "VernacExtend",
            "e31339d9bd10d45b61b1d351537be4d622e3c2f8"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "induction 1; intros.",
            "VernacExtend",
            "176684f910d62ec20fbc75549575bf1cd34fa8ec"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold step in e.",
            "VernacExtend",
            "249f5165597381eb45f4b9a59d7a223bfee5e7cd"
        ],
        [
            "destruct (NS.pick (worklist s2)) as [[n rem]|]; try discriminate.",
            "VernacExtend",
            "ad97c6a815c33b492f3070fb3ee5486d4ecbd1e1"
        ],
        [
            "destruct (code!n) as [instr|] eqn:INSTR; inv e.",
            "VernacExtend",
            "e14c2ec09711b21a3b7f3720d7f4dbcb90472eb8"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "apply IHsteps; auto.",
            "VernacExtend",
            "69bc72b0ea20103354e9059b1f0a63a363f4309e"
        ],
        [
            "eapply P_transf; eauto.",
            "VernacExtend",
            "cc0d6b47a25bd871cf2a0fa413261480fab0ab25"
        ],
        [
            "apply IHsteps; auto.",
            "VernacExtend",
            "69bc72b0ea20103354e9059b1f0a63a363f4309e"
        ],
        [
            "apply IHsteps; auto.",
            "VernacExtend",
            "69bc72b0ea20103354e9059b1f0a63a363f4309e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "unfold fixpoint in H.",
            "VernacExtend",
            "56dcef579b509d77953f65c11513c9b2947633af"
        ],
        [
            "exploit fixpoint_from_charact; eauto.",
            "VernacExtend",
            "960af579ecd4ac107fd497967ae33effc1759025"
        ],
        [
            "intros (st & STEPS & PICK & RES).",
            "VernacExtend",
            "5e1aacc48775289907f8aef528844a88049ad77a"
        ],
        [
            "replace (res!!pc) with (abstr_value pc st).",
            "VernacExtend",
            "06869022bba20112918a07792abdcdb9db518db9"
        ],
        [
            "eapply H3; eauto.",
            "VernacExtend",
            "4aa0b3760c6510a6990a96042c273418bec50b3d"
        ],
        [
            "rewrite RES; auto.",
            "VernacExtend",
            "b8eca2f7476b9a17a1d1c9c86fdc266b89b8317a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Kildall.",
            "VernacEndSegment",
            "13e4d6868de88a2acaeb2ac4745400918d6ff330"
        ],
        [
            "End Dataflow_Solver.",
            "VernacEndSegment",
            "6f6e76a187ff87a10c8320cda634e9d12eaa2045"
        ],
        [
            "Definition successors_list (successors: PTree.t (list positive)) (pc: positive) : list positive := match successors!pc with None => nil | Some l => l end.",
            "VernacDefinition",
            "3ef28d95209f758963afd9cac2c630e7130d7974"
        ],
        [
            "Notation \"a !!! b\" := (successors_list a b) (at level 1).",
            "VernacNotation",
            "9b6f37d212b2ec721309db10138d2afd9bdf2c73"
        ],
        [
            "Section Predecessor.",
            "VernacBeginSection",
            "f5ede623af4a7ac3de69b07252b1305b5c5cc67d"
        ],
        [
            "Context {A: Type}.",
            "VernacContext",
            "c9c3c92f9391cb196430f2c558473771d9c86d28"
        ],
        [
            "Variable code: PTree.t A.",
            "VernacAssumption",
            "e1ad7b0f97b307aea0804f77e1dc7ac6965137a3"
        ],
        [
            "Variable successors: A -> list positive.",
            "VernacAssumption",
            "d3de3b9e16a420bf819c47ec91f0565b4d2036d5"
        ],
        [
            "Fixpoint add_successors (pred: PTree.t (list positive)) (from: positive) (tolist: list positive) {struct tolist} : PTree.t (list positive) := match tolist with | nil => pred | to :: rem => add_successors (PTree.set to (from :: pred!!!to) pred) from rem end.",
            "VernacFixpoint",
            "afbbb0aa6688fa163beea544c9913b83eb676cee"
        ],
        [
            "Lemma add_successors_correct: forall tolist from pred n s, In n pred!!!s \\/ (n = from /\\ In s tolist) -> In n (add_successors pred from tolist)!!!s.",
            "VernacStartTheoremProof",
            "ec3b0117984f5a4c9071a385a5109d38e031e9e9"
        ],
        [
            "induction tolist; simpl; intros.",
            "VernacExtend",
            "38e6e07e0b4543983aec9705f1557b3d62d913fa"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "apply IHtolist.",
            "VernacExtend",
            "57bd8d60467c5b5cb578fbba5b91c26ece954a7c"
        ],
        [
            "unfold successors_list at 1.",
            "VernacExtend",
            "dbc047999ef30b92b9871b2157d3c57af3cc1f8f"
        ],
        [
            "rewrite PTree.gsspec.",
            "VernacExtend",
            "88315e2b3b1f3e40fe18917f8425d57b50a31282"
        ],
        [
            "destruct (peq s a).",
            "VernacExtend",
            "f2ac09a80c20855748004f96147e0271816e362a"
        ],
        [
            "subst a.",
            "VernacExtend",
            "d7670e5f9c196bd417b16b29da3532f33d34884d"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "auto with coqlib.",
            "VernacExtend",
            "bf4be239b4d8868fa0ff9785d68d66d28f74c632"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "subst n.",
            "VernacExtend",
            "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
        ],
        [
            "auto with coqlib.",
            "VernacExtend",
            "bf4be239b4d8868fa0ff9785d68d66d28f74c632"
        ],
        [
            "fold (successors_list pred s).",
            "VernacExtend",
            "69daebe3475bd01af94f83946111f3d302351fbb"
        ],
        [
            "intuition congruence.",
            "VernacExtend",
            "2cba3542847e3f4ea52f3f62375adc6e8f8f04bc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition make_predecessors : PTree.t (list positive) := PTree.fold (fun pred pc instr => add_successors pred pc (successors instr)) code (PTree.empty (list positive)).",
            "VernacDefinition",
            "6d404fa58445ac3d6dd6d62c511c547dfd09b4ee"
        ],
        [
            "Lemma make_predecessors_correct_1: forall n instr s, code!n = Some instr -> In s (successors instr) -> In n make_predecessors!!!s.",
            "VernacStartTheoremProof",
            "6356ceccc86d2debc91ac669cc85fd4a5cf244f5"
        ],
        [
            "intros until s.",
            "VernacExtend",
            "24cbc2b91a56c7505e8e3d9f3cfc555fab7c5e72"
        ],
        [
            "set (P := fun m p => m!n = Some instr -> In s (successors instr) -> In n p!!!s).",
            "VernacExtend",
            "4d59b5550d029b2a6cce520c62c2671057507a4e"
        ],
        [
            "unfold make_predecessors.",
            "VernacExtend",
            "130d2d62fb3a42905d08f0f3df6fd21b53bb7acb"
        ],
        [
            "apply PTree_Properties.fold_rec with (P := P); unfold P; intros.",
            "VernacExtend",
            "3347859cd7ec33bd71267c3a8ddc729c545090c5"
        ],
        [
            "apply H0; auto.",
            "VernacExtend",
            "e167f871dfeec1cef76aaf201c54c081f29f730b"
        ],
        [
            "rewrite H; auto.",
            "VernacExtend",
            "3e25713af8eaa76cddf9287af10d66733da2ee16"
        ],
        [
            "rewrite PTree.gempty in H; congruence.",
            "VernacExtend",
            "58487c81a0265a4ac28db45b9f4ec0f4ff7ccf49"
        ],
        [
            "apply add_successors_correct.",
            "VernacExtend",
            "2dfc6468cce23217b76b27dfa5afa3bca0f7d883"
        ],
        [
            "rewrite PTree.gsspec in H2.",
            "VernacExtend",
            "b493a8c2dafa18120a204a32ee0ef517ce5e4f65"
        ],
        [
            "destruct (peq n k).",
            "VernacExtend",
            "a81eb2b5c7f677f80dd9edaf3415bd491d53e2c1"
        ],
        [
            "inv H2.",
            "VernacExtend",
            "6144021562e950304ba8e947fdc2423691182458"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma make_predecessors_correct_2: forall n instr s, code!n = Some instr -> In s (successors instr) -> exists l, make_predecessors!s = Some l /\\ In n l.",
            "VernacStartTheoremProof",
            "146a9d0dd2412b260669b13fc3b77290b7fe40ca"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exploit make_predecessors_correct_1; eauto.",
            "VernacExtend",
            "ab6ea3367ef29a7e7966b2b6079e28a50219b476"
        ],
        [
            "unfold successors_list.",
            "VernacExtend",
            "71fcba6969d8c9fa13545d9a043c7d2449a14314"
        ],
        [
            "destruct (make_predecessors!s); simpl; intros.",
            "VernacExtend",
            "bcdb1e2306459be6e9a0b87b00126f5aa3d01458"
        ],
        [
            "exists l; auto.",
            "VernacExtend",
            "2eab71a4d324b79b2ef6a9e847d6eb06296bcbe0"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma reachable_predecessors: forall p q, reachable code successors p q -> reachable make_predecessors (fun l => l) q p.",
            "VernacStartTheoremProof",
            "daf4669b244fe0ff2818d0a1e09db3c1eb0fd429"
        ],
        [
            "induction 1.",
            "VernacExtend",
            "dfe896305621800fcbb03b32d51d497edbdf1dc5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exploit make_predecessors_correct_2; eauto.",
            "VernacExtend",
            "1c412ff7ba7e32d418b9813aa3d1c8445dd653ce"
        ],
        [
            "intros [l [P Q]].",
            "VernacExtend",
            "d5529fb10b5a3ee1dc598c8c3e9a068ae09e2ea6"
        ],
        [
            "eapply reachable_right; eauto.",
            "VernacExtend",
            "e933a840f2442173e25144dc8a3c0099d1e6de50"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Predecessor.",
            "VernacEndSegment",
            "72c5957f639b00ec058ddfa36fe14e53481e071c"
        ],
        [
            "Module Type BACKWARD_DATAFLOW_SOLVER.",
            "VernacDeclareModuleType",
            "5ce69d0ffd8a7d40556b17d269ba0439e350fdea"
        ],
        [
            "Declare Module L: SEMILATTICE.",
            "VernacDeclareModule",
            "dd0d4c8abaca330b924aa62b790ea840c4639054"
        ],
        [
            "Parameter fixpoint: forall {A: Type} (code: PTree.t A) (successors: A -> list positive) (transf: positive -> L.t -> L.t), option (PMap.t L.t).",
            "VernacAssumption",
            "691561625386193110fcae528c2b4c643a7f94ce"
        ],
        [
            "Axiom fixpoint_solution: forall A (code: PTree.t A) successors transf res n instr s, fixpoint code successors transf = Some res -> code!n = Some instr -> In s (successors instr) -> (forall n a, code!n = None -> L.eq (transf n a) L.bot) -> L.ge res!!n (transf s res!!s).",
            "VernacAssumption",
            "a8b40bcdc82797517ce17f5fef45b65ff4228fbc"
        ],
        [
            "Parameter fixpoint_allnodes: forall {A: Type} (code: PTree.t A) (successors: A -> list positive) (transf: positive -> L.t -> L.t), option (PMap.t L.t).",
            "VernacAssumption",
            "37119ab2c5626a749284dc6fab7186b1df0eb491"
        ],
        [
            "Axiom fixpoint_allnodes_solution: forall A (code: PTree.t A) successors transf res n instr s, fixpoint_allnodes code successors transf = Some res -> code!n = Some instr -> In s (successors instr) -> L.ge res!!n (transf s res!!s).",
            "VernacAssumption",
            "c8c6654ea75bf12d005a470ecd21b9b9320e14f1"
        ],
        [
            "End BACKWARD_DATAFLOW_SOLVER.",
            "VernacEndSegment",
            "3370b4098cdcce31c35575d62c4b93b1037072ed"
        ],
        [
            "Module Backward_Dataflow_Solver (LAT: SEMILATTICE) (NS: NODE_SET): BACKWARD_DATAFLOW_SOLVER with Module L := LAT.",
            "VernacDefineModule",
            "bd55805722a2a26dc3bb138585a7aaed615edaf7"
        ],
        [
            "Module L := LAT.",
            "VernacDefineModule",
            "a5f7cc73cedc3166637316a3a36ddc784ed03698"
        ],
        [
            "Module DS := Dataflow_Solver L NS.",
            "VernacDefineModule",
            "51374efa3ae77a48732951b76c4d26a0efcf933f"
        ],
        [
            "Section Kildall.",
            "VernacBeginSection",
            "aef606bea180a61dd490a559e2d6745b3b7e2733"
        ],
        [
            "Context {A: Type}.",
            "VernacContext",
            "c9c3c92f9391cb196430f2c558473771d9c86d28"
        ],
        [
            "Variable code: PTree.t A.",
            "VernacAssumption",
            "e1ad7b0f97b307aea0804f77e1dc7ac6965137a3"
        ],
        [
            "Variable successors: A -> list positive.",
            "VernacAssumption",
            "d3de3b9e16a420bf819c47ec91f0565b4d2036d5"
        ],
        [
            "Variable transf: positive -> L.t -> L.t.",
            "VernacAssumption",
            "1256e27016854d7f0118cf3c35416d7e7e223738"
        ],
        [
            "Section Exit_points.",
            "VernacBeginSection",
            "1b853be1b8574ab86d604fafa2cfaecb4c3759c4"
        ],
        [
            "Definition sequential_node (pc: positive) (instr: A): bool := existsb (fun s => match code!s with None => false | Some _ => plt s pc end) (successors instr).",
            "VernacDefinition",
            "6a639ccaa6ca58b00e93a2ba6c2a4f3b1e47b662"
        ],
        [
            "Definition exit_points : NS.t := PTree.fold (fun ep pc instr => if sequential_node pc instr then ep else NS.add pc ep) code NS.empty.",
            "VernacDefinition",
            "1685a558b3944286649e6a71e1511376c8374887"
        ],
        [
            "Lemma exit_points_charact: forall n, NS.In n exit_points <-> exists i, code!n = Some i /\\ sequential_node n i = false.",
            "VernacStartTheoremProof",
            "0d8e8d9c567a56e8b94fd45dea764ba72da1fb7b"
        ],
        [
            "intros n.",
            "VernacExtend",
            "9410cc86153539309ee696ae5785ea70534ece11"
        ],
        [
            "unfold exit_points.",
            "VernacExtend",
            "c38fb72d8d26216280b0c08da7f1c7da0d3ff277"
        ],
        [
            "eapply PTree_Properties.fold_rec.",
            "VernacExtend",
            "f16dcb8a506c8c66e4a6986f7bd0030524782ea7"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "eelim NS.empty_spec; eauto.",
            "VernacExtend",
            "54b37ff646fa67d14839a6916c108feeb830cf53"
        ],
        [
            "destruct H as [i [P Q]].",
            "VernacExtend",
            "5a1643770f2c9cae87bfca04d886199256ece6cd"
        ],
        [
            "rewrite PTree.gempty in P.",
            "VernacExtend",
            "f6d710774bed3f88324127839aeaa47402263685"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (sequential_node k v) eqn:SN.",
            "VernacExtend",
            "8fbca8d8a28d8411e3e55290cdc8d37697411940"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "rewrite PTree.gsspec.",
            "VernacExtend",
            "88315e2b3b1f3e40fe18917f8425d57b50a31282"
        ],
        [
            "destruct (peq n k).",
            "VernacExtend",
            "a81eb2b5c7f677f80dd9edaf3415bd491d53e2c1"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "split; intros [i [P Q]].",
            "VernacExtend",
            "0397bcae1336c26ba8305edd34fbf4ec36931ee1"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "inv P.",
            "VernacExtend",
            "9db9e551d407fb52f890fa8275c215698a67094e"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite NS.add_spec.",
            "VernacExtend",
            "e90539b38f369107b4cc7f69fe935a8da796f9f0"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "rewrite PTree.gsspec.",
            "VernacExtend",
            "88315e2b3b1f3e40fe18917f8425d57b50a31282"
        ],
        [
            "destruct (peq n k).",
            "VernacExtend",
            "a81eb2b5c7f677f80dd9edaf3415bd491d53e2c1"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exists v; auto.",
            "VernacExtend",
            "863f124117e3794411b95ae7c6344e625907c1cb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros [P | [i [P Q]]].",
            "VernacExtend",
            "19483332857e74f9688634f0fba2dad1f4d741a7"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "exists i; auto.",
            "VernacExtend",
            "06b83cb51650711770bc1e0786f279124247af80"
        ],
        [
            "intros [i [P Q]].",
            "VernacExtend",
            "7a2d4db31b1dec783875325261f90044dbf026de"
        ],
        [
            "right; exists i; auto.",
            "VernacExtend",
            "e7610decce649c07420002c62a65cb04437f3757"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma reachable_exit_points: forall pc i, code!pc = Some i -> exists x, NS.In x exit_points /\\ reachable code successors pc x.",
            "VernacStartTheoremProof",
            "fcfef18b1d7816f682fd4fb88191ef34f2db9d2d"
        ],
        [
            "intros pc0.",
            "VernacExtend",
            "3f5a6bcb7223871c9cca787d815113592eb52455"
        ],
        [
            "pattern pc0.",
            "VernacExtend",
            "fd845941c8b01414a397d8463d60f5e3c22edd03"
        ],
        [
            "apply (well_founded_ind Plt_wf).",
            "VernacExtend",
            "a29ce5a16b43d6cd900bc25a955872b956d13266"
        ],
        [
            "intros pc HR i CODE.",
            "VernacExtend",
            "4e8f73926a1859085045ddaed715126863e8b6e8"
        ],
        [
            "destruct (sequential_node pc i) eqn:SN.",
            "VernacExtend",
            "e4a2cb29626ee5239a99911c840f482e938b575c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold sequential_node in SN.",
            "VernacExtend",
            "67dbbf75e2b777d6797d0b4a987ebc5f0db018de"
        ],
        [
            "rewrite existsb_exists in SN.",
            "VernacExtend",
            "cb14be745651f28e4c5865e16a169129cabb1c92"
        ],
        [
            "destruct SN as [s [P Q]].",
            "VernacExtend",
            "e5fd2479369db637da3ac15448eedd5e41da0eed"
        ],
        [
            "destruct (code!s) as [i'|] eqn:CS; try discriminate.",
            "VernacExtend",
            "fac78cf2f53c71bc29465d47423ab3163d44cf59"
        ],
        [
            "InvBooleans.",
            "VernacExtend",
            "2a6e1bb1be0f04ca24c3e441e9db23c18612c002"
        ],
        [
            "exploit (HR s); eauto.",
            "VernacExtend",
            "2acac949c711b55cb5d3d2578a71e7cb9054437f"
        ],
        [
            "intros [x [U V]].",
            "VernacExtend",
            "0f29e8c9ca1d74ab05c2bc0d1049023e20b9d85a"
        ],
        [
            "exists x; split; auto.",
            "VernacExtend",
            "9baaff95917bd6ede74eb9f2342b440afcd5c72d"
        ],
        [
            "eapply reachable_left; eauto.",
            "VernacExtend",
            "60ec997d0f16d68174204434270d6dfa7130291c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists pc; split.",
            "VernacExtend",
            "1f141c23d464d2a9ae368038913e0dc8328139d9"
        ],
        [
            "rewrite exit_points_charact.",
            "VernacExtend",
            "4d1d7463e6608e499842d4c1be39ece94c6476bf"
        ],
        [
            "exists i; auto.",
            "VernacExtend",
            "06b83cb51650711770bc1e0786f279124247af80"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma reachable_exit_points_predecessor: forall pc i, code!pc = Some i -> exists x, NS.In x exit_points /\\ reachable (make_predecessors code successors) (fun l => l) x pc.",
            "VernacStartTheoremProof",
            "2ef5c5371029b2d6dae1d70b58d4bb4931dbcc62"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exploit reachable_exit_points; eauto.",
            "VernacExtend",
            "60eea0e2d85324da2721e27a5bcc116a55e1be06"
        ],
        [
            "intros [x [P Q]].",
            "VernacExtend",
            "8ace6ee4a9591c0c859e7bb6696e3aebd798360d"
        ],
        [
            "exists x; split; auto.",
            "VernacExtend",
            "9baaff95917bd6ede74eb9f2342b440afcd5c72d"
        ],
        [
            "apply reachable_predecessors.",
            "VernacExtend",
            "bdeb5dc892283560f2d742ff6109b0291f0808c7"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Exit_points.",
            "VernacEndSegment",
            "db3b6a8f7a0a5d7524f6e294f045a0ad21cbe940"
        ],
        [
            "Definition fixpoint := DS.fixpoint_nodeset (make_predecessors code successors) (fun l => l) transf exit_points.",
            "VernacDefinition",
            "c70cd77bbbb09f5134437c31022fb73a512af30d"
        ],
        [
            "Theorem fixpoint_solution: forall res n instr s, fixpoint = Some res -> code!n = Some instr -> In s (successors instr) -> (forall n a, code!n = None -> L.eq (transf n a) L.bot) -> L.ge res!!n (transf s res!!s).",
            "VernacStartTheoremProof",
            "c041d694d0062522c7f2038cc1db5ab60b61b958"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exploit (make_predecessors_correct_2 code); eauto.",
            "VernacExtend",
            "85ae2b6577ead77fb03ec8eadbd616b4ebd77da7"
        ],
        [
            "intros [l [P Q]].",
            "VernacExtend",
            "d5529fb10b5a3ee1dc598c8c3e9a068ae09e2ea6"
        ],
        [
            "destruct code!s as [instr'|] eqn:CS.",
            "VernacExtend",
            "22b547f6a97bc68b0683e36511d10faee359a629"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exploit reachable_exit_points_predecessor.",
            "VernacExtend",
            "7eef5eafc1c958a830c5091afa2d45d8cdb09faf"
        ],
        [
            "eexact CS.",
            "VernacExtend",
            "cbb5b18b89f4198df261b76423abecba1eee2fb1"
        ],
        [
            "intros (ep & U & V).",
            "VernacExtend",
            "e8f1d1a3677469749d32c9f0709480e59a612459"
        ],
        [
            "unfold fixpoint in H.",
            "VernacExtend",
            "56dcef579b509d77953f65c11513c9b2947633af"
        ],
        [
            "eapply DS.fixpoint_nodeset_solution; eauto.",
            "VernacExtend",
            "7e3ffdba8c44366b5444e2d6d432091290509388"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply L.ge_trans with L.bot.",
            "VernacExtend",
            "c82596cdc704dae090dd8a292b2bebca15bfa0c2"
        ],
        [
            "apply L.ge_bot.",
            "VernacExtend",
            "b26a635957b6673479ad7bf281de21d1bde0bcec"
        ],
        [
            "apply L.ge_refl.",
            "VernacExtend",
            "789f21b0b00c9fa1973354dffd0311d4e4c5161b"
        ],
        [
            "apply L.eq_sym.",
            "VernacExtend",
            "53ff9a697190904ce73664f58e24dad44bd69082"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition fixpoint_allnodes := DS.fixpoint_allnodes (make_predecessors code successors) (fun l => l) transf.",
            "VernacDefinition",
            "6426d1f1c4fd113ecfb61fc1456c979e4211a439"
        ],
        [
            "Theorem fixpoint_allnodes_solution: forall res n instr s, fixpoint_allnodes = Some res -> code!n = Some instr -> In s (successors instr) -> L.ge res!!n (transf s res!!s).",
            "VernacStartTheoremProof",
            "7a34df87d63d0a60ba9a7e77b8f0dab49deffe19"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exploit (make_predecessors_correct_2 code); eauto.",
            "VernacExtend",
            "85ae2b6577ead77fb03ec8eadbd616b4ebd77da7"
        ],
        [
            "intros [l [P Q]].",
            "VernacExtend",
            "d5529fb10b5a3ee1dc598c8c3e9a068ae09e2ea6"
        ],
        [
            "unfold fixpoint_allnodes in H.",
            "VernacExtend",
            "cf4a05662d472f788dd9dcd5ddd774488cd89d02"
        ],
        [
            "eapply DS.fixpoint_allnodes_solution; eauto.",
            "VernacExtend",
            "99f3991ea9919b56326cf427784f022e6d0f364e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Kildall.",
            "VernacEndSegment",
            "13e4d6868de88a2acaeb2ac4745400918d6ff330"
        ],
        [
            "End Backward_Dataflow_Solver.",
            "VernacEndSegment",
            "cbe89068770892e244ced726c138e7f1a46bf2cf"
        ],
        [
            "Module Type ORDERED_TYPE_WITH_TOP.",
            "VernacDeclareModuleType",
            "73a109b566a6d66cc03b39aac6daa24c590420f5"
        ],
        [
            "Parameter t: Type.",
            "VernacAssumption",
            "504795567cd4c81b969bd65cb901c9b8a73ae96f"
        ],
        [
            "Parameter ge: t -> t -> Prop.",
            "VernacAssumption",
            "daf4e7934f7f477f3d0da26f18d57f457c776965"
        ],
        [
            "Parameter top: t.",
            "VernacAssumption",
            "5584f146b397f4126f897320782074f669950c5b"
        ],
        [
            "Axiom top_ge: forall x, ge top x.",
            "VernacAssumption",
            "9afb04e30676db7471d884d3129dc5dd8e98b5cc"
        ],
        [
            "Axiom refl_ge: forall x, ge x x.",
            "VernacAssumption",
            "e9f92dba5631c34dca57bd9f4bea7b3451c5bb42"
        ],
        [
            "End ORDERED_TYPE_WITH_TOP.",
            "VernacEndSegment",
            "3a9f9936ca0c71c75be091280907c0b19cafa3df"
        ],
        [
            "Module Type BBLOCK_SOLVER.",
            "VernacDeclareModuleType",
            "3c650785063301ed311c0b545593b2e6d9425107"
        ],
        [
            "Declare Module L: ORDERED_TYPE_WITH_TOP.",
            "VernacDeclareModule",
            "9f4fcf391b4cdac288fe15aabda261f093b15014"
        ],
        [
            "Parameter fixpoint: forall {A: Type} (code: PTree.t A) (successors: A -> list positive) (transf: positive -> L.t -> L.t) (entrypoint: positive), option (PMap.t L.t).",
            "VernacAssumption",
            "269441121d526b21de3f488d0651c7571ebdb3c8"
        ],
        [
            "Axiom fixpoint_solution: forall A (code: PTree.t A) successors transf entrypoint res n instr s, fixpoint code successors transf entrypoint = Some res -> code!n = Some instr -> In s (successors instr) -> L.ge res!!s (transf n res!!n).",
            "VernacAssumption",
            "5034aa5eb829d43c832dd00309f120a57423acb9"
        ],
        [
            "Axiom fixpoint_entry: forall A (code: PTree.t A) successors transf entrypoint res, fixpoint code successors transf entrypoint = Some res -> res!!entrypoint = L.top.",
            "VernacAssumption",
            "64310d8f9a3da34cbce7696475896d0878440a58"
        ],
        [
            "Axiom fixpoint_invariant: forall A (code: PTree.t A) successors transf entrypoint (P: L.t -> Prop), P L.top -> (forall pc instr x, code!pc = Some instr -> P x -> P (transf pc x)) -> forall res pc, fixpoint code successors transf entrypoint = Some res -> P res!!pc.",
            "VernacAssumption",
            "89bcec77c93979b41b73fa77eb98c1f0dd6365ce"
        ],
        [
            "End BBLOCK_SOLVER.",
            "VernacEndSegment",
            "265deb8459000a4a2c17606d55c824efc4092a2c"
        ],
        [
            "Module BBlock_solver(LAT: ORDERED_TYPE_WITH_TOP): BBLOCK_SOLVER with Module L := LAT.",
            "VernacDefineModule",
            "b964e576e1646e12cff1f8e9f1fce42db5b85ad9"
        ],
        [
            "Module L := LAT.",
            "VernacDefineModule",
            "a5f7cc73cedc3166637316a3a36ddc784ed03698"
        ],
        [
            "Section Solver.",
            "VernacBeginSection",
            "7f99c007eb2a37eadc26ec7bef27848a2d6bb81b"
        ],
        [
            "Context {A: Type}.",
            "VernacContext",
            "c9c3c92f9391cb196430f2c558473771d9c86d28"
        ],
        [
            "Variable code: PTree.t A.",
            "VernacAssumption",
            "e1ad7b0f97b307aea0804f77e1dc7ac6965137a3"
        ],
        [
            "Variable successors: A -> list positive.",
            "VernacAssumption",
            "d3de3b9e16a420bf819c47ec91f0565b4d2036d5"
        ],
        [
            "Variable transf: positive -> L.t -> L.t.",
            "VernacAssumption",
            "1256e27016854d7f0118cf3c35416d7e7e223738"
        ],
        [
            "Variable entrypoint: positive.",
            "VernacAssumption",
            "70496de6aed7df4d3157b1ed80038bf9fc5aad97"
        ],
        [
            "Variable P: L.t -> Prop.",
            "VernacAssumption",
            "72d933451262fa938173e5e65e1a4a56be5034a6"
        ],
        [
            "Hypothesis Ptop: P L.top.",
            "VernacAssumption",
            "13ceffc3f4dfc11326cccb1d9154e5589119f7ad"
        ],
        [
            "Hypothesis Ptransf: forall pc instr x, code!pc = Some instr -> P x -> P (transf pc x).",
            "VernacAssumption",
            "f1aa93a68e9326f92ebf6e8aa4db0916e81d0615"
        ],
        [
            "Definition bbmap := positive -> bool.",
            "VernacDefinition",
            "3d96ff173cff36ccb3abeda60a115ab1367fb3c8"
        ],
        [
            "Definition result := PMap.t L.t.",
            "VernacDefinition",
            "dcd47ef17324fbef3079116f5b063bee9cdd51f0"
        ],
        [
            "Record state : Type := mkstate { aval: result; worklist: list positive }.",
            "VernacInductive",
            "942718af73c6115450f3c2f3564b4a7aede1b050"
        ],
        [
            "Fixpoint propagate_successors (bb: bbmap) (succs: list positive) (l: L.t) (st: state) {struct succs} : state := match succs with | nil => st | s1 :: sl => if bb s1 then propagate_successors bb sl l st else propagate_successors bb sl l (mkstate (PMap.set s1 l st.(aval)) (s1 :: st.(worklist))) end.",
            "VernacFixpoint",
            "1ae40876b2d2bb299dc6c23fed1b02b0f23a8574"
        ],
        [
            "Definition step (bb: bbmap) (st: state) : result + state := match st.(worklist) with | nil => inl _ st.(aval) | pc :: rem => match code!pc with | None => inr _ (mkstate st.(aval) rem) | Some instr => inr _ (propagate_successors bb (successors instr) (transf pc st.(aval)!!pc) (mkstate st.(aval) rem)) end end.",
            "VernacDefinition",
            "3e23847ea1b3f1a7e5e208b6e6d988e7cc5137cc"
        ],
        [
            "Definition is_basic_block_head (preds: PTree.t (list positive)) (pc: positive) : bool := if peq pc entrypoint then true else match preds!!!pc with | nil => false | s :: nil => peq s pc | _ :: _ :: _ => true end.",
            "VernacDefinition",
            "5891b401bd614660459dab0cff63587d4d0bade5"
        ],
        [
            "Definition basic_block_map : bbmap := is_basic_block_head (make_predecessors code successors).",
            "VernacDefinition",
            "af54ce8e8e5c286b5e9543d1fd36883599b5a297"
        ],
        [
            "Definition basic_block_list (bb: bbmap) : list positive := PTree.fold (fun l pc instr => if bb pc then pc :: l else l) code nil.",
            "VernacDefinition",
            "242e1d0a54fd798b2d8a07bcd5c62b2cedf23903"
        ],
        [
            "Definition fixpoint : option result := let bb := basic_block_map in PrimIter.iterate _ _ (step bb) (mkstate (PMap.init L.top) (basic_block_list bb)).",
            "VernacDefinition",
            "9cc557866af04c1b6bf5c3cd32cb12ead4c44dee"
        ],
        [
            "Definition predecessors := make_predecessors code successors.",
            "VernacDefinition",
            "e035a6aaf967cdec80229f3767d321712b936b16"
        ],
        [
            "Lemma predecessors_correct: forall n instr s, code!n = Some instr -> In s (successors instr) -> In n predecessors!!!s.",
            "VernacStartTheoremProof",
            "40cf7fa0a0c59d78a889253159de9f80d3648595"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold predecessors.",
            "VernacExtend",
            "f3aa991e3acde4857760242d5cb5874ba1b27c37"
        ],
        [
            "eapply make_predecessors_correct_1; eauto.",
            "VernacExtend",
            "a6323332d0c7540739acfc544b50a6ab3e0bdab7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma multiple_predecessors: forall s n1 instr1 n2 instr2, code!n1 = Some instr1 -> In s (successors instr1) -> code!n2 = Some instr2 -> In s (successors instr2) -> n1 <> n2 -> basic_block_map s = true.",
            "VernacStartTheoremProof",
            "f094875df5c5356d42c642afa97c714e28ca0625"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (In n1 predecessors!!!s).",
            "VernacExtend",
            "c6d14e04728e9b6bd4184f715a3f2bcd19c414d7"
        ],
        [
            "eapply predecessors_correct; eauto.",
            "VernacExtend",
            "1663254faa13f2c702a164a0f4bf513afbee14b2"
        ],
        [
            "assert (In n2 predecessors!!!s).",
            "VernacExtend",
            "7642f1ab85cdac541221e57555708f74ce3690d0"
        ],
        [
            "eapply predecessors_correct; eauto.",
            "VernacExtend",
            "1663254faa13f2c702a164a0f4bf513afbee14b2"
        ],
        [
            "unfold basic_block_map, is_basic_block_head.",
            "VernacExtend",
            "464fc24e94c51bc3a47b7d2c3c88ea5a7182b163"
        ],
        [
            "destruct (peq s entrypoint).",
            "VernacExtend",
            "f5c25d24e24946c29de55e01ff16be117fcbb317"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "fold predecessors.",
            "VernacExtend",
            "2940e4974daa9e5be49946cd7327ef3bb70335b5"
        ],
        [
            "destruct (predecessors!!!s).",
            "VernacExtend",
            "ef8fa9539d0adcbe7c26a428bc70ab818c3e234f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct l.",
            "VernacExtend",
            "a4218804e377a0d685aafec59adbc3652d543b9c"
        ],
        [
            "apply proj_sumbool_is_true.",
            "VernacExtend",
            "3ab12f69ac682e9c1350012987efded269b6fa06"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "intuition congruence.",
            "VernacExtend",
            "2cba3542847e3f4ea52f3f62375adc6e8f8f04bc"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma no_self_loop: forall n instr, code!n = Some instr -> In n (successors instr) -> basic_block_map n = true.",
            "VernacStartTheoremProof",
            "eb6f78b5076b546d8a3f90cd40a18b9119c30b76"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold basic_block_map, is_basic_block_head.",
            "VernacExtend",
            "464fc24e94c51bc3a47b7d2c3c88ea5a7182b163"
        ],
        [
            "destruct (peq n entrypoint).",
            "VernacExtend",
            "bb44f528b51c5af1fb73d4546dbf160894068fa5"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "fold predecessors.",
            "VernacExtend",
            "2940e4974daa9e5be49946cd7327ef3bb70335b5"
        ],
        [
            "exploit predecessors_correct; eauto.",
            "VernacExtend",
            "fce5f2a02c3e2097d36d009cf1a933d659002e70"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (predecessors!!!n).",
            "VernacExtend",
            "9555c01ff993ed2d5edbc99b43dbc2e820722bd0"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "destruct l.",
            "VernacExtend",
            "a4218804e377a0d685aafec59adbc3652d543b9c"
        ],
        [
            "apply proj_sumbool_is_true.",
            "VernacExtend",
            "3ab12f69ac682e9c1350012987efded269b6fa06"
        ],
        [
            "simpl in H1.",
            "VernacExtend",
            "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition state_invariant (st: state) : Prop := (forall n, basic_block_map n = true -> st.(aval)!!n = L.top) /\\ (forall n, In n st.(worklist) \\/ (forall instr s, code!n = Some instr -> In s (successors instr) -> L.ge st.(aval)!!s (transf n st.(aval)!!n))).",
            "VernacDefinition",
            "c24161a9b9fbd242f3c779b5c1483b37428f8758"
        ],
        [
            "Lemma propagate_successors_charact1: forall bb succs l st, incl st.(worklist) (propagate_successors bb succs l st).(worklist).",
            "VernacStartTheoremProof",
            "ea2366887d2c02e3c7191b80f451ad53dcf5e447"
        ],
        [
            "induction succs; simpl; intros.",
            "VernacExtend",
            "23016b3b41f0bea8923fae49cc5d18202405321f"
        ],
        [
            "apply incl_refl.",
            "VernacExtend",
            "6e258f80ae06c106bc24ad44dc8c7ddbdb6bbff5"
        ],
        [
            "case (bb a).",
            "VernacExtend",
            "d78b2fc7f5ba0994c1d5738c83d73356c26a0514"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply incl_tran with (a :: worklist st).",
            "VernacExtend",
            "2a924b645c164897b69cc1105f1ad5fc1537cec3"
        ],
        [
            "apply incl_tl.",
            "VernacExtend",
            "aa01ac5690eb6bfdd9c26e3e1ce04e44e7e97936"
        ],
        [
            "apply incl_refl.",
            "VernacExtend",
            "6e258f80ae06c106bc24ad44dc8c7ddbdb6bbff5"
        ],
        [
            "set (st1 := (mkstate (PMap.set a l (aval st)) (a :: worklist st))).",
            "VernacExtend",
            "a8ff907e99bcf08cbf19b3ace181f6c0412fd69c"
        ],
        [
            "change (a :: worklist st) with (worklist st1).",
            "VernacExtend",
            "9bf63d715eab6b4a7cc698e186ee52ca42505a29"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma propagate_successors_charact2: forall bb succs l st n, let st' := propagate_successors bb succs l st in (In n succs -> bb n = false -> In n st'.(worklist) /\\ st'.(aval)!!n = l) /\\ (~In n succs \\/ bb n = true -> st'.(aval)!!n = st.(aval)!!n).",
            "VernacStartTheoremProof",
            "80adb86f35e3413d36185be70006d81a85e36518"
        ],
        [
            "induction succs; simpl; intros.",
            "VernacExtend",
            "23016b3b41f0bea8923fae49cc5d18202405321f"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "caseEq (bb a); intro.",
            "VernacExtend",
            "05d63cb35e557be1f8300a9e59cfe93ef12db973"
        ],
        [
            "elim (IHsuccs l st n); intros U V.",
            "VernacExtend",
            "c6069494b605f6b655508d58db329cd3662a5249"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "apply U; auto.",
            "VernacExtend",
            "798fd596954f295c3daf8c6320540f73dfa8d327"
        ],
        [
            "elim H0; intro.",
            "VernacExtend",
            "8b90d3170291d75c22593a28bbba0a2c88c6fd14"
        ],
        [
            "subst a.",
            "VernacExtend",
            "d7670e5f9c196bd417b16b29da3532f33d34884d"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply V.",
            "VernacExtend",
            "3c3c08d783f697fa1e1bf5ea373c5e9c29d0ad17"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "set (st1 := mkstate (PMap.set a l (aval st)) (a :: worklist st)).",
            "VernacExtend",
            "a8ff907e99bcf08cbf19b3ace181f6c0412fd69c"
        ],
        [
            "elim (IHsuccs l st1 n); intros U V.",
            "VernacExtend",
            "9de990b3a81ae434ad449f5969d1f31e11d6e2dc"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "elim H0; intros.",
            "VernacExtend",
            "6b83f392a470a8cdaa118e532bc445a009dec854"
        ],
        [
            "subst n.",
            "VernacExtend",
            "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply propagate_successors_charact1.",
            "VernacExtend",
            "75db7cd8531aa9fcbda11830727e8fa0dce0ab5b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "case (In_dec peq a succs); intro.",
            "VernacExtend",
            "4a1704f9467992c9aed03ff20754c3739bd404b9"
        ],
        [
            "elim (U i H1); auto.",
            "VernacExtend",
            "80ee8a906219760b27545c85c471cb03b365f485"
        ],
        [
            "rewrite V.",
            "VernacExtend",
            "22d30038d8005a7fbe2e5a5c28c65e4e9dc9d597"
        ],
        [
            "unfold st1; simpl.",
            "VernacExtend",
            "3719a5539c492097ce5c999af326e1ac0487365e"
        ],
        [
            "apply PMap.gss.",
            "VernacExtend",
            "2cd00cf9dd894d933b696f0e8bf970748d485efc"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "apply U; auto.",
            "VernacExtend",
            "798fd596954f295c3daf8c6320540f73dfa8d327"
        ],
        [
            "rewrite V.",
            "VernacExtend",
            "22d30038d8005a7fbe2e5a5c28c65e4e9dc9d597"
        ],
        [
            "unfold st1; simpl.",
            "VernacExtend",
            "3719a5539c492097ce5c999af326e1ac0487365e"
        ],
        [
            "apply PMap.gso.",
            "VernacExtend",
            "2fe3b184b6e2b79b3e919af63e32901f66725261"
        ],
        [
            "red; intro; subst n.",
            "VernacExtend",
            "f1a5e5569d7377fe100c8e5bfbc683faa4edfdfc"
        ],
        [
            "elim H0; intro.",
            "VernacExtend",
            "8b90d3170291d75c22593a28bbba0a2c88c6fd14"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma propagate_successors_invariant: forall pc instr res rem, code!pc = Some instr -> state_invariant (mkstate res (pc :: rem)) -> state_invariant (propagate_successors basic_block_map (successors instr) (transf pc res!!pc) (mkstate res rem)).",
            "VernacStartTheoremProof",
            "b99e7cc653569d16a1d90b44a91e0eccb4d6a612"
        ],
        [
            "intros until rem.",
            "VernacExtend",
            "f8b10baa17d4f352fc69740c83a1f4f0285446af"
        ],
        [
            "intros CODE [INV1 INV2].",
            "VernacExtend",
            "cf58159a2fee2ade1d82ec3b20bddd0302b83881"
        ],
        [
            "simpl in INV1.",
            "VernacExtend",
            "a2084242dd0057d88c5571861323b0cc34669161"
        ],
        [
            "simpl in INV2.",
            "VernacExtend",
            "98318fc43d6e9743160d1b88e3203800905dcadc"
        ],
        [
            "set (l := transf pc res!!pc).",
            "VernacExtend",
            "0741566f78d779e6f65492e2b58450e156dd3f9f"
        ],
        [
            "generalize (propagate_successors_charact1 basic_block_map (successors instr) l (mkstate res rem)).",
            "VernacExtend",
            "d30bec83c1aefbc9d4ae0623f3f9e7d7fd89c56d"
        ],
        [
            "generalize (propagate_successors_charact2 basic_block_map (successors instr) l (mkstate res rem)).",
            "VernacExtend",
            "0bd68212644ec34729aa0d6389c5f980e11d02fb"
        ],
        [
            "set (st1 := propagate_successors basic_block_map (successors instr) l (mkstate res rem)).",
            "VernacExtend",
            "2702e7a62875e1137b22379489aa451682407b45"
        ],
        [
            "intros U V.",
            "VernacExtend",
            "75b6c0f37b97f789e9603fab7bb7214fac771e2b"
        ],
        [
            "simpl in U.",
            "VernacExtend",
            "4f2e9b1ba6cd5a6f044f794e0955883a7911dd58"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "elim (U n); intros C D.",
            "VernacExtend",
            "e68f43816f7cb6a8f0ef269b27eeec9ecc213fd9"
        ],
        [
            "rewrite D.",
            "VernacExtend",
            "c8b2ecfe60096f3f4842362d970cc94fbb2c0ef5"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply INV1.",
            "VernacExtend",
            "4ec68f0126eb1c2b17d79ae57349a6951d7d5362"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "destruct (peq pc n).",
            "VernacExtend",
            "33c624c1edb23a424190818151a91015e6adbf4f"
        ],
        [
            "subst n.",
            "VernacExtend",
            "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
        ],
        [
            "right; intros.",
            "VernacExtend",
            "55f32a4c85976dbf403d59803ef666837ed695da"
        ],
        [
            "assert (instr0 = instr) by congruence.",
            "VernacExtend",
            "6fd866a8a2cfc15f6cfa54e224ec2cc2b841b761"
        ],
        [
            "subst instr0.",
            "VernacExtend",
            "128106a99f7af8f7a0b53dcb1d1bfaf0d0e3829e"
        ],
        [
            "elim (U s); intros C D.",
            "VernacExtend",
            "b33bcfc378491d2c9fa2f54ec9b9f899c851315c"
        ],
        [
            "replace (st1.(aval)!!pc) with res!!pc.",
            "VernacExtend",
            "080ee3b566a3f36d6c63e976bf7245405c68283b"
        ],
        [
            "fold l.",
            "VernacExtend",
            "4a9959d8836517ebf720232ee45390141dc8e96b"
        ],
        [
            "destruct (basic_block_map s) eqn:BB.",
            "VernacExtend",
            "d7773742ba547d4cb961188d58abaeb6212a7841"
        ],
        [
            "rewrite D.",
            "VernacExtend",
            "c8b2ecfe60096f3f4842362d970cc94fbb2c0ef5"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite INV1.",
            "VernacExtend",
            "84a5ce47f514f82da7a444521b67efa720f8d6c8"
        ],
        [
            "apply L.top_ge.",
            "VernacExtend",
            "00627d07a647f04375c421c357b3c9692afbba77"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "elim (C H0 (eq_refl _)).",
            "VernacExtend",
            "56964fce2062aa98d240d4d3ecc2f7b2322ad114"
        ],
        [
            "intros X Y.",
            "VernacExtend",
            "0be4ceeb0aca30637e1f704a1d72e1f09548b363"
        ],
        [
            "rewrite Y.",
            "VernacExtend",
            "65f472dbe2f8ad8b58e07d191d223884de0cc24b"
        ],
        [
            "apply L.refl_ge.",
            "VernacExtend",
            "cab803c707dc622e3848e2bf65cedddbcd7fd15d"
        ],
        [
            "elim (U pc); intros E F.",
            "VernacExtend",
            "0078647e0a31a5ea7041210dc6ef176f0d023131"
        ],
        [
            "rewrite F.",
            "VernacExtend",
            "6df8c10c25971db82981aba92c1e0c52d940c7f9"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "destruct (In_dec peq pc (successors instr)).",
            "VernacExtend",
            "e790d89be297d311a0ceb73958e5d8a85360a305"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "eapply no_self_loop; eauto.",
            "VernacExtend",
            "1a1eb290fb31d1e779b79b58273d24211b37eab9"
        ],
        [
            "left; auto.",
            "VernacExtend",
            "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
        ],
        [
            "elim (INV2 n); intro.",
            "VernacExtend",
            "212f5135c0ceff6f725e1462ffe2781d35fc0877"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply V.",
            "VernacExtend",
            "3c3c08d783f697fa1e1bf5ea373c5e9c29d0ad17"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "assert (INV3: forall s instr', code!n = Some instr' -> In s (successors instr') -> st1.(aval)!!s = res!!s).",
            "VernacExtend",
            "7d7cf205337f90990ab85b9069aa6df82a21e92b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim (U s); intros C D.",
            "VernacExtend",
            "b33bcfc378491d2c9fa2f54ec9b9f899c851315c"
        ],
        [
            "rewrite D.",
            "VernacExtend",
            "c8b2ecfe60096f3f4842362d970cc94fbb2c0ef5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "destruct (In_dec peq s (successors instr)).",
            "VernacExtend",
            "bd45554782b6018705d2606cc64fc7c5f897515e"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "eapply multiple_predecessors with (n1 := pc) (n2 := n); eauto.",
            "VernacExtend",
            "e0ad03bbffe379946f152413fcf77dbd46db7249"
        ],
        [
            "left; auto.",
            "VernacExtend",
            "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
        ],
        [
            "destruct (In_dec peq n (successors instr)).",
            "VernacExtend",
            "d8deb603990831e574c9721f6f11582606ca37e9"
        ],
        [
            "destruct (basic_block_map n) eqn:BB.",
            "VernacExtend",
            "95070df997cabef6a95a32dfb10ab5fc5abfa03e"
        ],
        [
            "right; intros.",
            "VernacExtend",
            "55f32a4c85976dbf403d59803ef666837ed695da"
        ],
        [
            "elim (U n); intros C D.",
            "VernacExtend",
            "e68f43816f7cb6a8f0ef269b27eeec9ecc213fd9"
        ],
        [
            "rewrite D.",
            "VernacExtend",
            "c8b2ecfe60096f3f4842362d970cc94fbb2c0ef5"
        ],
        [
            "erewrite INV3; eauto.",
            "VernacExtend",
            "9e830400d8f193fcc024f1c3f5a46df05b62fe3e"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "elim (U n); intros C D.",
            "VernacExtend",
            "e68f43816f7cb6a8f0ef269b27eeec9ecc213fd9"
        ],
        [
            "elim (C i BB); intros.",
            "VernacExtend",
            "4a5027c1df3dcd53469c25eb5437ac489aa85090"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "right; intros.",
            "VernacExtend",
            "55f32a4c85976dbf403d59803ef666837ed695da"
        ],
        [
            "elim (U n); intros C D.",
            "VernacExtend",
            "e68f43816f7cb6a8f0ef269b27eeec9ecc213fd9"
        ],
        [
            "rewrite D.",
            "VernacExtend",
            "c8b2ecfe60096f3f4842362d970cc94fbb2c0ef5"
        ],
        [
            "erewrite INV3; eauto.",
            "VernacExtend",
            "9e830400d8f193fcc024f1c3f5a46df05b62fe3e"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma propagate_successors_invariant_2: forall pc res rem, code!pc = None -> state_invariant (mkstate res (pc :: rem)) -> state_invariant (mkstate res rem).",
            "VernacStartTheoremProof",
            "0b88de97e6c401a394d76282165b7daeb8bea66a"
        ],
        [
            "intros until rem.",
            "VernacExtend",
            "f8b10baa17d4f352fc69740c83a1f4f0285446af"
        ],
        [
            "intros CODE [INV1 INV2].",
            "VernacExtend",
            "cf58159a2fee2ade1d82ec3b20bddd0302b83881"
        ],
        [
            "simpl in INV1.",
            "VernacExtend",
            "a2084242dd0057d88c5571861323b0cc34669161"
        ],
        [
            "simpl in INV2.",
            "VernacExtend",
            "98318fc43d6e9743160d1b88e3203800905dcadc"
        ],
        [
            "split; simpl; intros.",
            "VernacExtend",
            "5cad19818f83524f7335adfda0a051ad1cf2a115"
        ],
        [
            "apply INV1; auto.",
            "VernacExtend",
            "f706f46c315528fdb7a2da97e2b82416de2ac0fb"
        ],
        [
            "destruct (INV2 n) as [[U | U] | U].",
            "VernacExtend",
            "9aae6196d978602f8fceff5a79cc5f3b688c9193"
        ],
        [
            "subst n.",
            "VernacExtend",
            "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
        ],
        [
            "right; intros; congruence.",
            "VernacExtend",
            "5ba97c6295c5eff57b55cbcefa0e73a9b1a35d91"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma initial_state_invariant: state_invariant (mkstate (PMap.init L.top) (basic_block_list basic_block_map)).",
            "VernacStartTheoremProof",
            "ef6c8a022bcede3741f73d91c4aa0df2ea522e98"
        ],
        [
            "split; simpl; intros.",
            "VernacExtend",
            "5cad19818f83524f7335adfda0a051ad1cf2a115"
        ],
        [
            "apply PMap.gi.",
            "VernacExtend",
            "aa82ccbe8ae260bd9bc5882c4567d0c2a3f0d464"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "repeat rewrite PMap.gi.",
            "VernacExtend",
            "d23edc4a518a5ac9d74f450c2a21323243964877"
        ],
        [
            "apply L.top_ge.",
            "VernacExtend",
            "00627d07a647f04375c421c357b3c9692afbba77"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma analyze_invariant: forall res, fixpoint = Some res -> state_invariant (mkstate res nil).",
            "VernacStartTheoremProof",
            "95431e1990e4cb9e2bbfdd719840df109777205c"
        ],
        [
            "unfold fixpoint; intros.",
            "VernacExtend",
            "e984472dad88ba328d23cb08aeb1da555d37c3a6"
        ],
        [
            "pattern res.",
            "VernacExtend",
            "bcc25a370fc6c489310f5d783e37b8bb6c7e556f"
        ],
        [
            "eapply (PrimIter.iterate_prop _ _ (step basic_block_map) state_invariant).",
            "VernacExtend",
            "ae8f89b76894183706e4fc9e6bc54534ce0f6f62"
        ],
        [
            "intros st INV.",
            "VernacExtend",
            "47d926ac433131bcb84021c21670428ace2793ed"
        ],
        [
            "destruct st as [stin stwrk].",
            "VernacExtend",
            "965565d81a37e6dd569ed9e7462f45bf88977707"
        ],
        [
            "unfold step.",
            "VernacExtend",
            "269f560ac59b066a6926b1cfe0106d1b6bd8ed52"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct stwrk as [ | pc rem ] eqn:WRK.",
            "VernacExtend",
            "1c6678ef04b14c66b9afcaded68d1573f15602af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct (code!pc) as [instr|] eqn:CODE.",
            "VernacExtend",
            "6013fdf011cd7386dc636b5e154266b36add0fce"
        ],
        [
            "eapply propagate_successors_invariant; eauto.",
            "VernacExtend",
            "535c3cd9416c9c3e76ff88990760101e8be9d03b"
        ],
        [
            "eapply propagate_successors_invariant_2; eauto.",
            "VernacExtend",
            "bad635a9fd67c616741633d733c5308a4bf1f774"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "apply initial_state_invariant.",
            "VernacExtend",
            "e0ac942a2be16ba721fe771df37a0adcb47256be"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem fixpoint_solution: forall res n instr s, fixpoint = Some res -> code!n = Some instr -> In s (successors instr) -> L.ge res!!s (transf n res!!n).",
            "VernacStartTheoremProof",
            "d6075d52b04a971af02c44c17ab6c0171fe4953c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (state_invariant (mkstate res nil)).",
            "VernacExtend",
            "d46a49528b28629927df069752a782a5a1bd9d05"
        ],
        [
            "eapply analyze_invariant; eauto.",
            "VernacExtend",
            "f010d6b0bb1ff1445ca36fd8175565483bcbe380"
        ],
        [
            "elim H2; simpl; intros.",
            "VernacExtend",
            "c79d5562ff8e802025ddea77f06c83addd6da9cd"
        ],
        [
            "elim (H4 n); intros.",
            "VernacExtend",
            "e67fd15fb0bb7145783afc4b1c4ac22d3c47a786"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem fixpoint_entry: forall res, fixpoint = Some res -> res!!entrypoint = L.top.",
            "VernacStartTheoremProof",
            "d6be7403eb79b2c8cdce522b43ec610c840ce09f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (state_invariant (mkstate res nil)).",
            "VernacExtend",
            "d46a49528b28629927df069752a782a5a1bd9d05"
        ],
        [
            "eapply analyze_invariant; eauto.",
            "VernacExtend",
            "f010d6b0bb1ff1445ca36fd8175565483bcbe380"
        ],
        [
            "elim H0; simpl; intros.",
            "VernacExtend",
            "98c563acf90eec50118fa7d1c09d01cec9ca1089"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "unfold basic_block_map, is_basic_block_head.",
            "VernacExtend",
            "464fc24e94c51bc3a47b7d2c3c88ea5a7182b163"
        ],
        [
            "fold predecessors.",
            "VernacExtend",
            "2940e4974daa9e5be49946cd7327ef3bb70335b5"
        ],
        [
            "apply peq_true.",
            "VernacExtend",
            "7eb45bce99db030cf71bc77a17cb38d1c9b5f607"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Pstate (st: state) : Prop := forall pc, P st.(aval)!!pc.",
            "VernacDefinition",
            "fed6d34d825cd1972e111f43bb1d4247d7a35807"
        ],
        [
            "Lemma propagate_successors_P: forall bb l, P l -> forall succs st, Pstate st -> Pstate (propagate_successors bb succs l st).",
            "VernacStartTheoremProof",
            "b4984148c389486ac1ef93f6fb35c99cf45f3e9f"
        ],
        [
            "induction succs; simpl; intros.",
            "VernacExtend",
            "23016b3b41f0bea8923fae49cc5d18202405321f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "case (bb a).",
            "VernacExtend",
            "d78b2fc7f5ba0994c1d5738c83d73356c26a0514"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply IHsuccs.",
            "VernacExtend",
            "7988b56ebd613b91c9c538b4e0e5face6ac9d530"
        ],
        [
            "red; simpl; intros.",
            "VernacExtend",
            "629095e96b1a8bc7172736d3dfde387c11fb3564"
        ],
        [
            "rewrite PMap.gsspec.",
            "VernacExtend",
            "208df7f9699f271a00c45eb42e79661332f7bd43"
        ],
        [
            "case (peq pc a); intro.",
            "VernacExtend",
            "b1bf50baa714a71f9e3063cb2c536f70aca1050c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem fixpoint_invariant: forall res pc, fixpoint = Some res -> P res!!pc.",
            "VernacStartTheoremProof",
            "1fda219d5cd7e9d8bfa27a82372b702d642d64ae"
        ],
        [
            "unfold fixpoint; intros.",
            "VernacExtend",
            "e984472dad88ba328d23cb08aeb1da555d37c3a6"
        ],
        [
            "pattern res.",
            "VernacExtend",
            "bcc25a370fc6c489310f5d783e37b8bb6c7e556f"
        ],
        [
            "eapply (PrimIter.iterate_prop _ _ (step basic_block_map) Pstate).",
            "VernacExtend",
            "2b71e3d558af41901f1b4facd951c975b88c7bcb"
        ],
        [
            "intros st PS.",
            "VernacExtend",
            "8397502f91fcf8d7345ace012090f65085c2e944"
        ],
        [
            "unfold step.",
            "VernacExtend",
            "269f560ac59b066a6926b1cfe0106d1b6bd8ed52"
        ],
        [
            "destruct (st.(worklist)).",
            "VernacExtend",
            "8011cfc8d8a34f88bf81d009248f1b29cb6f961d"
        ],
        [
            "apply PS.",
            "VernacExtend",
            "eaad2d71fa493209c7d0da096ac8f46ea8ed0859"
        ],
        [
            "assert (PS2: Pstate (mkstate st.(aval) l)).",
            "VernacExtend",
            "c5ce55fe61abe3666baba47383c4a22a6a6b777b"
        ],
        [
            "red; intro; simpl.",
            "VernacExtend",
            "8ab8ca5b61859f272d3805533c991b9a07cc6c13"
        ],
        [
            "apply PS.",
            "VernacExtend",
            "eaad2d71fa493209c7d0da096ac8f46ea8ed0859"
        ],
        [
            "destruct (code!p) as [instr|] eqn:CODE.",
            "VernacExtend",
            "e33ba344ecd123bfce928d3c1e808d49fd8e9c1a"
        ],
        [
            "apply propagate_successors_P.",
            "VernacExtend",
            "7793cfa217030c26e5b81991b89480f99ac9d974"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "red; intro; simpl.",
            "VernacExtend",
            "8ab8ca5b61859f272d3805533c991b9a07cc6c13"
        ],
        [
            "rewrite PMap.gi.",
            "VernacExtend",
            "958266bd87166c15ef1d5c9765f2ff83d5dd8cf4"
        ],
        [
            "apply Ptop.",
            "VernacExtend",
            "2d0f8c2c986e3d2b887416af7d12006dcaf55ee4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Solver.",
            "VernacEndSegment",
            "c4ef20cc073f767a36fa19724a694fae7c7619e1"
        ],
        [
            "End BBlock_solver.",
            "VernacEndSegment",
            "70cca1d712eca974c3ff7b8ceb8ff6ce8d5521ac"
        ],
        [
            "Require Import Heaps.",
            "VernacRequire",
            "3294b5618c817afa04ec9231d0c34c35553673d3"
        ],
        [
            "Module NodeSetForward <: NODE_SET.",
            "VernacDefineModule",
            "275226d57abf0b99db9609ee961844eeef9c8063"
        ],
        [
            "Definition t := PHeap.t.",
            "VernacDefinition",
            "15fccdac33816cf9b0f8c2b9b8697b8a856e6fc9"
        ],
        [
            "Definition empty := PHeap.empty.",
            "VernacDefinition",
            "d234e7e4af74084a07b9a4c13ed7b1c9ff98f08e"
        ],
        [
            "Definition add (n: positive) (s: t) : t := PHeap.insert n s.",
            "VernacDefinition",
            "f097cd91075643fbe4cf78d80dc3973a6cab0869"
        ],
        [
            "Definition pick (s: t) := match PHeap.findMax s with | Some n => Some(n, PHeap.deleteMax s) | None => None end.",
            "VernacDefinition",
            "9ed22a46ce55540f4dd0810c9568b58d2f0300ff"
        ],
        [
            "Definition all_nodes {A: Type} (code: PTree.t A) := PTree.fold (fun s pc instr => PHeap.insert pc s) code PHeap.empty.",
            "VernacDefinition",
            "b9cfd05cedd9a93fcb3777e1700da02e2684c68b"
        ],
        [
            "Definition In := PHeap.In.",
            "VernacDefinition",
            "e2a65f8b635d43cbd9a0987c2ca93368a03b041c"
        ],
        [
            "Lemma empty_spec: forall n, ~In n empty.",
            "VernacStartTheoremProof",
            "15a76714c26a66e52f0851c3a57843c40dc8df89"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply PHeap.In_empty.",
            "VernacExtend",
            "c173f7b8f61d53665e245f7083fc5c87b1686379"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_spec: forall n n' s, In n' (add n s) <-> n = n' \\/ In n' s.",
            "VernacStartTheoremProof",
            "f229eb245deae34a660090733282c6628c1f5b37"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite PHeap.In_insert.",
            "VernacExtend",
            "6d3cf4e905fc92ede39f013a80a10116d34b731e"
        ],
        [
            "unfold In.",
            "VernacExtend",
            "d7a2e438ac145b96769372b3253da28246b60614"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pick_none: forall s n, pick s = None -> ~In n s.",
            "VernacStartTheoremProof",
            "081cd7333c9d1cd9cd911ea6383f1a6a60074dd7"
        ],
        [
            "intros until n; unfold pick.",
            "VernacExtend",
            "8dd42f226660b08b570749929ce43cc54b2f260a"
        ],
        [
            "caseEq (PHeap.findMax s); intros.",
            "VernacExtend",
            "f2f64eca94441c29c8b724ed4358077173979281"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "apply PHeap.findMax_empty.",
            "VernacExtend",
            "3126836e8db562e2c0701b27266feed6b86e1128"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pick_some: forall s n s', pick s = Some(n, s') -> forall n', In n' s <-> n = n' \\/ In n' s'.",
            "VernacStartTheoremProof",
            "b7d2452eba07239d1d79935b9996a8d2eaa00138"
        ],
        [
            "intros until s'; unfold pick.",
            "VernacExtend",
            "7e25811252bf8a866240b74b424e3bd1bd813aa7"
        ],
        [
            "caseEq (PHeap.findMax s); intros.",
            "VernacExtend",
            "f2f64eca94441c29c8b724ed4358077173979281"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "generalize (PHeap.In_deleteMax s n n' H).",
            "VernacExtend",
            "ff287cc70ab22260183f7b9d5708a54a2d8f47b4"
        ],
        [
            "unfold In.",
            "VernacExtend",
            "d7a2e438ac145b96769372b3253da28246b60614"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma all_nodes_spec: forall A (code: PTree.t A) n instr, code!n = Some instr -> In n (all_nodes code).",
            "VernacStartTheoremProof",
            "f82aec237bc622f7ea4c65822d0d1dff2812a4a9"
        ],
        [
            "intros A code n instr.",
            "VernacExtend",
            "6ccac1eabca138260a2218037ccd08d535fdd3d1"
        ],
        [
            "apply PTree_Properties.fold_rec with (P := fun m set => m!n = Some instr -> In n set).",
            "VernacExtend",
            "e3f5b1346cea291ae66b63ca06f3e613a1240e74"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite PTree.gempty.",
            "VernacExtend",
            "02ad4f08527ee6f058bb5b2fc6b52855b65cf49f"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite PTree.gsspec in H2.",
            "VernacExtend",
            "b493a8c2dafa18120a204a32ee0ef517ce5e4f65"
        ],
        [
            "rewrite add_spec.",
            "VernacExtend",
            "f9ada7608d751c021c4ce84e3f9762a0852e6c66"
        ],
        [
            "destruct (peq n k).",
            "VernacExtend",
            "a81eb2b5c7f677f80dd9edaf3415bd491d53e2c1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End NodeSetForward.",
            "VernacEndSegment",
            "20b31d6bccf2cfc1f30efefb48ec3276622f6471"
        ],
        [
            "Module NodeSetBackward <: NODE_SET.",
            "VernacDefineModule",
            "356f3583c75ce973f97636f7b48b3987f00b3853"
        ],
        [
            "Definition t := PHeap.t.",
            "VernacDefinition",
            "15fccdac33816cf9b0f8c2b9b8697b8a856e6fc9"
        ],
        [
            "Definition empty := PHeap.empty.",
            "VernacDefinition",
            "d234e7e4af74084a07b9a4c13ed7b1c9ff98f08e"
        ],
        [
            "Definition add (n: positive) (s: t) : t := PHeap.insert n s.",
            "VernacDefinition",
            "f097cd91075643fbe4cf78d80dc3973a6cab0869"
        ],
        [
            "Definition pick (s: t) := match PHeap.findMin s with | Some n => Some(n, PHeap.deleteMin s) | None => None end.",
            "VernacDefinition",
            "a09409a262531009aedf7c3cc3445f05c31ff044"
        ],
        [
            "Definition all_nodes {A: Type} (code: PTree.t A) := PTree.fold (fun s pc instr => PHeap.insert pc s) code PHeap.empty.",
            "VernacDefinition",
            "b9cfd05cedd9a93fcb3777e1700da02e2684c68b"
        ],
        [
            "Definition In := PHeap.In.",
            "VernacDefinition",
            "e2a65f8b635d43cbd9a0987c2ca93368a03b041c"
        ],
        [
            "Lemma empty_spec: forall n, ~In n empty.",
            "VernacStartTheoremProof",
            "15a76714c26a66e52f0851c3a57843c40dc8df89"
        ],
        [
            "Proof NodeSetForward.empty_spec.",
            "VernacExactProof",
            "245b9e53cd575e67ea6340c0542150290f9b2467"
        ],
        [
            "Lemma add_spec: forall n n' s, In n' (add n s) <-> n = n' \\/ In n' s.",
            "VernacStartTheoremProof",
            "f229eb245deae34a660090733282c6628c1f5b37"
        ],
        [
            "Proof NodeSetForward.add_spec.",
            "VernacExactProof",
            "da9519968844bd27a8e011492a4675375a61c5f4"
        ],
        [
            "Lemma pick_none: forall s n, pick s = None -> ~In n s.",
            "VernacStartTheoremProof",
            "081cd7333c9d1cd9cd911ea6383f1a6a60074dd7"
        ],
        [
            "intros until n; unfold pick.",
            "VernacExtend",
            "8dd42f226660b08b570749929ce43cc54b2f260a"
        ],
        [
            "caseEq (PHeap.findMin s); intros.",
            "VernacExtend",
            "9cb61d97ac705d5393e83e90f53243b967759efc"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "apply PHeap.findMin_empty.",
            "VernacExtend",
            "de321c5b103cfb2a520410a367152008ebd6358b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pick_some: forall s n s', pick s = Some(n, s') -> forall n', In n' s <-> n = n' \\/ In n' s'.",
            "VernacStartTheoremProof",
            "b7d2452eba07239d1d79935b9996a8d2eaa00138"
        ],
        [
            "intros until s'; unfold pick.",
            "VernacExtend",
            "7e25811252bf8a866240b74b424e3bd1bd813aa7"
        ],
        [
            "caseEq (PHeap.findMin s); intros.",
            "VernacExtend",
            "9cb61d97ac705d5393e83e90f53243b967759efc"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "generalize (PHeap.In_deleteMin s n n' H).",
            "VernacExtend",
            "174012418529d99eda353fb4d6269623b05cef57"
        ],
        [
            "unfold In.",
            "VernacExtend",
            "d7a2e438ac145b96769372b3253da28246b60614"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma all_nodes_spec: forall A (code: PTree.t A) n instr, code!n = Some instr -> In n (all_nodes code).",
            "VernacStartTheoremProof",
            "f82aec237bc622f7ea4c65822d0d1dff2812a4a9"
        ],
        [
            "Proof NodeSetForward.all_nodes_spec.",
            "VernacExactProof",
            "0cc623800975de9b1bb2b00827bfc00a7b2d4689"
        ],
        [
            "End NodeSetBackward.",
            "VernacEndSegment",
            "923a5678f5aa7eb91831e09e257ae178f1668af9"
        ]
    ],
    "proofs": [
        {
            "name": "reachable_trans",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "induction 1; intros.",
                        "VernacExtend",
                        "176684f910d62ec20fbc75549575bf1cd34fa8ec"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "econstructor; eauto.",
                        "VernacExtend",
                        "faa93781fb8bbf289e651728c4588af1c4169d34"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reachable_right",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply reachable_trans with n2; auto.",
                        "VernacExtend",
                        "f1efb56ee302d34157524c16838832f37b5b1dfa"
                    ]
                },
                {
                    "command": [
                        "econstructor; eauto.",
                        "VernacExtend",
                        "faa93781fb8bbf289e651728c4588af1c4169d34"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "optge_refl",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "destruct ol; constructor.",
                        "VernacExtend",
                        "a3b968598683d92c346b51b21708759530bb31d7"
                    ]
                },
                {
                    "command": [
                        "apply L.ge_refl; apply L.eq_refl.",
                        "VernacExtend",
                        "c46adb4ffd6e5960745a0858b505b01520eb00dc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "optge_trans",
            "line_nb": 68,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "eapply L.ge_trans; eauto.",
                        "VernacExtend",
                        "e07fe9d44ae92b45da0d4d9a9d792a6eaa8183ac"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "optge_abstr_value",
            "line_nb": 76,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold abstr_value.",
                        "VernacExtend",
                        "17852475d69d2f9c5e234f4e334a115bf5654ae1"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply L.ge_bot.",
                        "VernacExtend",
                        "b26a635957b6673479ad7bf281de21d1bde0bcec"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "propagate_succ_list_charact",
            "line_nb": 183,
            "steps": [
                {
                    "command": [
                        "induction l; simpl; intros.",
                        "VernacExtend",
                        "34e9ea5965da389dfe8faf53c8ea4965d4fdcc22"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "repeat split; intros.",
                        "VernacExtend",
                        "c59c3246b20afa48e2f30924174ca427854186e6"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply optge_refl.",
                        "VernacExtend",
                        "c35f2167b2c9fc1d0938a9c1d97eccb57363e0fe"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "generalize (propagate_succ_charact st out a).",
                        "VernacExtend",
                        "11c45cb6d4b365b4800061fe3bca65da310e6224"
                    ]
                },
                {
                    "command": [
                        "set (st1 := propagate_succ st out a).",
                        "VernacExtend",
                        "6669c7f7216e5b4c78e46afad1607d8403d93626"
                    ]
                },
                {
                    "command": [
                        "intros (A1 & A2 & A3 & A4 & A5 & A6 & A7 & A8 & A9).",
                        "VernacExtend",
                        "e8b5433834ca850da47fb1175d15b0e86bcb5b33"
                    ]
                },
                {
                    "command": [
                        "generalize (IHl st1).",
                        "VernacExtend",
                        "50adf99fc5b41d0fe30bcc896d36eeccb76ac0d5"
                    ]
                },
                {
                    "command": [
                        "set (st2 := propagate_succ_list st1 out l).",
                        "VernacExtend",
                        "1135d219610ced6f9d6e683386944a6b6ca68db3"
                    ]
                },
                {
                    "command": [
                        "intros (B1 & B2 & B3 & B4 & B5 & B6 & B7 & B8 & B9).",
                        "VernacExtend",
                        "a08687274e61dcb203999eb72941aa9403eae0b0"
                    ]
                },
                {
                    "command": [
                        "clear IHl.",
                        "VernacExtend",
                        "8bbd9602dc9b79bb59ead5a20fa2e5495ddfe01a"
                    ]
                },
                {
                    "command": [
                        "repeat split; intros.",
                        "VernacExtend",
                        "c59c3246b20afa48e2f30924174ca427854186e6"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "subst n.",
                        "VernacExtend",
                        "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
                    ]
                },
                {
                    "command": [
                        "eapply optge_trans; eauto.",
                        "VernacExtend",
                        "daa620ba97b180e799168227875e41273e886da0"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite B2 by tauto.",
                        "VernacExtend",
                        "685f2002e79491e623f225a60f265640611b12a5"
                    ]
                },
                {
                    "command": [
                        "apply A2; tauto.",
                        "VernacExtend",
                        "135827b034f6748b866e84df09fce821799fdc69"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "eapply optge_trans; eauto.",
                        "VernacExtend",
                        "daa620ba97b180e799168227875e41273e886da0"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct (B4 n).",
                        "VernacExtend",
                        "e53585ee60f95455265f8476e9d5004eb2cd1b5b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "destruct (peq n a).",
                        "VernacExtend",
                        "45a098790784433aeb0dedcc595f7a407445bb21"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "subst n.",
                        "VernacExtend",
                        "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
                    ]
                },
                {
                    "command": [
                        "destruct A4.",
                        "VernacExtend",
                        "71c7f3b8d4c0e4e5d111b0615243426436d039a9"
                    ]
                },
                {
                    "command": [
                        "left; auto.",
                        "VernacExtend",
                        "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
                    ]
                },
                {
                    "command": [
                        "right; congruence.",
                        "VernacExtend",
                        "b833d2a8f279e4e369914e11323c752b9a003ffb"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exploit B6; eauto.",
                        "VernacExtend",
                        "0eabb1b65e3ddd0314abd66313dd887e1a0b24e5"
                    ]
                },
                {
                    "command": [
                        "intros [P|P].",
                        "VernacExtend",
                        "1ac04b365ddba6c73aebfccdd4bb8681f041d678"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "exploit A6; eauto.",
                        "VernacExtend",
                        "a2faa5a75fda452f18afb0b9160831f9954782fd"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "specialize (B8 n'); specialize (A8 n').",
                        "VernacExtend",
                        "70244d102a04e9351ec605dea5bf6bd26cd52182"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct st1.(aval)!n' eqn:ST1.",
                        "VernacExtend",
                        "5492502acdff7619baecc8030a109f9293a00d5f"
                    ]
                },
                {
                    "command": [
                        "apply B7.",
                        "VernacExtend",
                        "87887f49e5cc0efc70ab0ae182a8164a8df4ed99"
                    ]
                },
                {
                    "command": [
                        "apply A9; auto.",
                        "VernacExtend",
                        "47e70de1569f9a32e53dcc849ef541eddf28434b"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "apply B9; auto.",
                        "VernacExtend",
                        "3805f94bb8aa8470f86ec3d14e443ea07f626024"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fixpoint_from_charact",
            "line_nb": 259,
            "steps": [
                {
                    "command": [
                        "unfold fixpoint; intros.",
                        "VernacExtend",
                        "e984472dad88ba328d23cb08aeb1da555d37c3a6"
                    ]
                },
                {
                    "command": [
                        "eapply (PrimIter.iterate_prop _ _ step (fun st => steps start st) (fun res => exists st, steps start st /\\ NS.pick (worklist st) = None /\\ res = (L.bot, aval st))); eauto.",
                        "VernacExtend",
                        "4e9a916ce8cdba70de8ac2fffce2aaaa57243b14"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (step a) eqn:E.",
                        "VernacExtend",
                        "1bfdca95ef1054b773b95ffac98e9fabf0c00599"
                    ]
                },
                {
                    "command": [
                        "exists a; split; auto.",
                        "VernacExtend",
                        "6ced52e045930ee310d935c747875e269f31e154"
                    ]
                },
                {
                    "command": [
                        "unfold step in E.",
                        "VernacExtend",
                        "cd3d7a912163b8d31c29788667ebbba0dc6baaaf"
                    ]
                },
                {
                    "command": [
                        "destruct (NS.pick (worklist a)) as [[n rem]|].",
                        "VernacExtend",
                        "c71add969d0a46b9b345e0342fd7e5d1a855142c"
                    ]
                },
                {
                    "command": [
                        "destruct (code!n); discriminate.",
                        "VernacExtend",
                        "9d56b0fd9d0ab6de99eb58aed19b19d1e843be45"
                    ]
                },
                {
                    "command": [
                        "inv E.",
                        "VernacExtend",
                        "e6f2a5ef16e476c86204cb8ae2fccd762215c4c8"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "eapply steps_right; eauto.",
                        "VernacExtend",
                        "686f7bf516a048e89152ca583c95cd972c09fd81"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "step_incr",
            "line_nb": 273,
            "steps": [
                {
                    "command": [
                        "unfold step; intros.",
                        "VernacExtend",
                        "072a6bfbc251ee596003a26b388b2a83a736e36e"
                    ]
                },
                {
                    "command": [
                        "destruct (NS.pick (worklist s1)) as [[p rem] | ]; try discriminate.",
                        "VernacExtend",
                        "df7d665e51cfd7de6cbc3dc2a818aee85f5fc356"
                    ]
                },
                {
                    "command": [
                        "destruct (code!p) as [instr|]; inv H.",
                        "VernacExtend",
                        "64b887e8cba40d3d10ba582d2a8e6a06f7c37393"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "generalize (propagate_succ_list_charact (transf p (abstr_value p s1)) (successors instr) {| aval := aval s1; worklist := rem; visited := visited s1 |}).",
                        "VernacExtend",
                        "2749421db80194ffdca1ecac4b7b7eb670ebd722"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "set (s' := propagate_succ_list {| aval := aval s1; worklist := rem; visited := visited s1 |} (transf p (abstr_value p s1)) (successors instr)).",
                        "VernacExtend",
                        "82532999fda46ffe7db63e145b60692715ec23af"
                    ]
                },
                {
                    "command": [
                        "intros (A1 & A2 & A3 & A4 & A5 & A6 & A7 & A8 & A9).",
                        "VernacExtend",
                        "e8b5433834ca850da47fb1175d15b0e86bcb5b33"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply optge_refl.",
                        "VernacExtend",
                        "c35f2167b2c9fc1d0938a9c1d97eccb57363e0fe"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "steps_incr",
            "line_nb": 288,
            "steps": [
                {
                    "command": [
                        "induction 1.",
                        "VernacExtend",
                        "dfe896305621800fcbb03b32d51d497edbdf1dc5"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply optge_refl.",
                        "VernacExtend",
                        "c35f2167b2c9fc1d0938a9c1d97eccb57363e0fe"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct IHsteps.",
                        "VernacExtend",
                        "09d5e3e643f8c3f350bd499c65aea404ca8fdf51"
                    ]
                },
                {
                    "command": [
                        "exploit (step_incr n); eauto.",
                        "VernacExtend",
                        "a768d966571d0deb8a9d7ef4eac3f44d929d3b28"
                    ]
                },
                {
                    "command": [
                        "intros [P Q].",
                        "VernacExtend",
                        "663dc907ccc489647d55e233d550455f27ce8429"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "eapply optge_trans; eauto.",
                        "VernacExtend",
                        "daa620ba97b180e799168227875e41273e886da0"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "step_state_good",
            "line_nb": 303,
            "steps": [
                {
                    "command": [
                        "intros until instr; intros PICK CODEAT [GOOD1 GOOD2].",
                        "VernacExtend",
                        "3fc9bafd1e3361c0b962a4e246e2950fbc52b29f"
                    ]
                },
                {
                    "command": [
                        "generalize (NS.pick_some _ _ _ PICK); intro PICK2.",
                        "VernacExtend",
                        "567d1b7837e99e457a0e51eb916c1d2d742f6801"
                    ]
                },
                {
                    "command": [
                        "set (out := transf pc (abstr_value pc st)).",
                        "VernacExtend",
                        "7a87b12fcdc8ab57d018aba2da7e4e8b38ca7f2e"
                    ]
                },
                {
                    "command": [
                        "generalize (propagate_succ_list_charact out (successors instr) {| aval := aval st; worklist := rem; visited := visited st |}).",
                        "VernacExtend",
                        "e015b4740c896acdacdefc332bf5c6990d890205"
                    ]
                },
                {
                    "command": [
                        "set (st' := propagate_succ_list {| aval := aval st; worklist := rem; visited := visited st |} out (successors instr)).",
                        "VernacExtend",
                        "26cc8c39ce1d547ca5c9999f0c8a93f7da6acd7e"
                    ]
                },
                {
                    "command": [
                        "simpl; intros (A1 & A2 & A3 & A4 & A5 & A6 & A7 & A8 & A9).",
                        "VernacExtend",
                        "649fdbbf1839319eb1e5a32f4a425abc2494ed04"
                    ]
                },
                {
                    "command": [
                        "constructor; intros.",
                        "VernacExtend",
                        "6563c593bcf639ae667d436a08cab59e1ac2dcce"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (A8 n H); auto.",
                        "VernacExtend",
                        "07f927750a73567dc474de4d0aaa754e4051c46e"
                    ]
                },
                {
                    "command": [
                        "destruct (A4 n); auto.",
                        "VernacExtend",
                        "8f463a7c2ad958e1c860172e1ee50ef3ff093d37"
                    ]
                },
                {
                    "command": [
                        "replace (abstr_value n st') with (abstr_value n st) by (unfold abstr_value; rewrite H1; auto).",
                        "VernacExtend",
                        "9a5b17c4e5680420ff8ff5aaf5260abda43c8b76"
                    ]
                },
                {
                    "command": [
                        "exploit GOOD1; eauto.",
                        "VernacExtend",
                        "eee4a4634d551628e8e58ecc4f2e39726c8f3801"
                    ]
                },
                {
                    "command": [
                        "intros [P|P].",
                        "VernacExtend",
                        "1ac04b365ddba6c73aebfccdd4bb8681f041d678"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite PICK2 in P; destruct P.",
                        "VernacExtend",
                        "21b8960f83a262cd086e91ceb6877440a6ef2700"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "subst n.",
                        "VernacExtend",
                        "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
                    ]
                },
                {
                    "command": [
                        "fold out.",
                        "VernacExtend",
                        "b7e1755e2d51a58b825c8a9bc66163e9ab66451c"
                    ]
                },
                {
                    "command": [
                        "right; intros.",
                        "VernacExtend",
                        "55f32a4c85976dbf403d59803ef666837ed695da"
                    ]
                },
                {
                    "command": [
                        "assert (i = instr) by congruence.",
                        "VernacExtend",
                        "d9f59128b45c3f4807a9936d8c7a282468d934f5"
                    ]
                },
                {
                    "command": [
                        "subst i.",
                        "VernacExtend",
                        "8a51b06e94f64277663e0022260aa1e58bff437c"
                    ]
                },
                {
                    "command": [
                        "apply A1; auto.",
                        "VernacExtend",
                        "d12c7b0a7723d455f6003ebf78687c2a6bcc8f4d"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "apply A5; auto.",
                        "VernacExtend",
                        "61d2a68c7521c7425d623bdda08985c47e5a595d"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "right; intros.",
                        "VernacExtend",
                        "55f32a4c85976dbf403d59803ef666837ed695da"
                    ]
                },
                {
                    "command": [
                        "apply optge_trans with st.(aval)!s; eauto.",
                        "VernacExtend",
                        "3dd3ef2905600cc4c139c8eebc3b88c932bc9f90"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct st.(aval)!n as [v'|] eqn:ST.",
                        "VernacExtend",
                        "6f8f160f9d949641a6612c1da72b111822aa94b8"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply A7.",
                        "VernacExtend",
                        "0d1b81520c5b8a0a8a326ca2d712563c5846e564"
                    ]
                },
                {
                    "command": [
                        "eapply GOOD2; eauto.",
                        "VernacExtend",
                        "843705e5bf0c440d8c6032f271d3e010eb053400"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply A9; auto.",
                        "VernacExtend",
                        "47e70de1569f9a32e53dcc849ef541eddf28434b"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "step_state_good_2",
            "line_nb": 341,
            "steps": [
                {
                    "command": [
                        "intros until rem; intros [GOOD1 GOOD2] PICK CODE.",
                        "VernacExtend",
                        "02217f058d0d3489281256ed1c651356dfad5262"
                    ]
                },
                {
                    "command": [
                        "generalize (NS.pick_some _ _ _ PICK); intro PICK2.",
                        "VernacExtend",
                        "567d1b7837e99e457a0e51eb916c1d2d742f6801"
                    ]
                },
                {
                    "command": [
                        "constructor; simpl; intros.",
                        "VernacExtend",
                        "dcd76c351204acf8d4b7d76eea612fabf67729fc"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exploit GOOD1; eauto.",
                        "VernacExtend",
                        "eee4a4634d551628e8e58ecc4f2e39726c8f3801"
                    ]
                },
                {
                    "command": [
                        "intros [P | P].",
                        "VernacExtend",
                        "1ac04b365ddba6c73aebfccdd4bb8681f041d678"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite PICK2 in P.",
                        "VernacExtend",
                        "416ff9204ab27aa84e8ef2a745bd5bda0225ca37"
                    ]
                },
                {
                    "command": [
                        "destruct P; auto.",
                        "VernacExtend",
                        "8bd4eed4831e84f575d26a7a9b5a230a54a806d0"
                    ]
                },
                {
                    "command": [
                        "subst n.",
                        "VernacExtend",
                        "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
                    ]
                },
                {
                    "command": [
                        "right; intros.",
                        "VernacExtend",
                        "55f32a4c85976dbf403d59803ef666837ed695da"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "right; exact P.",
                        "VernacExtend",
                        "7dab36b0781c68c237da2562e0ba4b99ab974f3e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "eapply GOOD2; eauto.",
                        "VernacExtend",
                        "843705e5bf0c440d8c6032f271d3e010eb053400"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "steps_state_good",
            "line_nb": 359,
            "steps": [
                {
                    "command": [
                        "induction 1; intros.",
                        "VernacExtend",
                        "176684f910d62ec20fbc75549575bf1cd34fa8ec"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold step in e.",
                        "VernacExtend",
                        "249f5165597381eb45f4b9a59d7a223bfee5e7cd"
                    ]
                },
                {
                    "command": [
                        "destruct (NS.pick (worklist s2)) as [[n rem] | ] eqn:PICK; try discriminate.",
                        "VernacExtend",
                        "99d7a2c3061889ec8ec4b9c42b931b5c7fa89ded"
                    ]
                },
                {
                    "command": [
                        "destruct (code!n) as [instr|] eqn:CODE; inv e.",
                        "VernacExtend",
                        "11dfa9a821a67bc8455ce62b273cae8745f86677"
                    ]
                },
                {
                    "command": [
                        "eapply step_state_good; eauto.",
                        "VernacExtend",
                        "638a6496c4a76ecf055d7e8b7da419d018ad4db1"
                    ]
                },
                {
                    "command": [
                        "eapply step_state_good_2; eauto.",
                        "VernacExtend",
                        "dc73523dd3abf4a86d5d8912a752817e6f597ee9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "start_state_good",
            "line_nb": 370,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold start_state; constructor; simpl; intros.",
                        "VernacExtend",
                        "b935cacedb5181035db5e31d20f0368466844d05"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "subst n.",
                        "VernacExtend",
                        "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
                    ]
                },
                {
                    "command": [
                        "rewrite NS.add_spec; auto.",
                        "VernacExtend",
                        "9fd90bf4f22e988eee34f5e9c54679af24c875c9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gsspec in H.",
                        "VernacExtend",
                        "518375dbd290af7ea46f909026713f2cbfc67dd9"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gempty in H.",
                        "VernacExtend",
                        "76be3bb2fc63bbedb66ba512de4e1a5820ff2f7c"
                    ]
                },
                {
                    "command": [
                        "destruct (peq n enode).",
                        "VernacExtend",
                        "940d1f49ffcbc1474f927e255b450ebb55266806"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "start_state_nodeset_good",
            "line_nb": 383,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold start_state_nodeset; constructor; simpl; intros.",
                        "VernacExtend",
                        "faeba530fc92cf7fdcabd89ec158e958f498667b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gempty in H.",
                        "VernacExtend",
                        "76be3bb2fc63bbedb66ba512de4e1a5820ff2f7c"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "start_state_allnodes_good",
            "line_nb": 393,
            "steps": [
                {
                    "command": [
                        "unfold start_state_allnodes; constructor; simpl; intros.",
                        "VernacExtend",
                        "26b0f6ce816582d99eb372495fa27b68b1cf4f6f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct H as [instr CODE].",
                        "VernacExtend",
                        "ea9778c5697d4ffd634a00d6bd927479b728866c"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "eapply NS.all_nodes_spec; eauto.",
                        "VernacExtend",
                        "d540a45baa55ca635965690a1d08334c7f1564a4"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gempty in H.",
                        "VernacExtend",
                        "76be3bb2fc63bbedb66ba512de4e1a5820ff2f7c"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reachable_visited",
            "line_nb": 403,
            "steps": [
                {
                    "command": [
                        "intros st [GOOD1 GOOD2] PICK.",
                        "VernacExtend",
                        "1a832e0fd441b5393e62886b23d8a86c0f3ddc21"
                    ]
                },
                {
                    "command": [
                        "induction 1; intros.",
                        "VernacExtend",
                        "176684f910d62ec20fbc75549575bf1cd34fa8ec"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "eapply IHreachable; eauto.",
                        "VernacExtend",
                        "72fac552fd1ab35146fe9c63948a16d998ab02e3"
                    ]
                },
                {
                    "command": [
                        "exploit GOOD1; eauto.",
                        "VernacExtend",
                        "eee4a4634d551628e8e58ecc4f2e39726c8f3801"
                    ]
                },
                {
                    "command": [
                        "intros [P | P].",
                        "VernacExtend",
                        "1ac04b365ddba6c73aebfccdd4bb8681f041d678"
                    ]
                },
                {
                    "command": [
                        "eelim NS.pick_none; eauto.",
                        "VernacExtend",
                        "ad8f4bd85b1421f1fdfdb3e55cf44e9e4a1d71c6"
                    ]
                },
                {
                    "command": [
                        "exploit P; eauto.",
                        "VernacExtend",
                        "29e9fcc44e5bdc0e84434c5e2b8d8ae321d675ce"
                    ]
                },
                {
                    "command": [
                        "intros OGE; inv OGE.",
                        "VernacExtend",
                        "211ea8548ee3a2433df6d400b3878cfafb0c8e81"
                    ]
                },
                {
                    "command": [
                        "eapply GOOD2; eauto.",
                        "VernacExtend",
                        "843705e5bf0c440d8c6032f271d3e010eb053400"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fixpoint_solution",
            "line_nb": 417,
            "steps": [
                {
                    "command": [
                        "unfold fixpoint; intros.",
                        "VernacExtend",
                        "e984472dad88ba328d23cb08aeb1da555d37c3a6"
                    ]
                },
                {
                    "command": [
                        "exploit fixpoint_from_charact; eauto.",
                        "VernacExtend",
                        "960af579ecd4ac107fd497967ae33effc1759025"
                    ]
                },
                {
                    "command": [
                        "intros (st & STEPS & PICK & RES).",
                        "VernacExtend",
                        "5e1aacc48775289907f8aef528844a88049ad77a"
                    ]
                },
                {
                    "command": [
                        "exploit steps_state_good; eauto.",
                        "VernacExtend",
                        "132e91abe2533f470adac5249bf4d058881d5468"
                    ]
                },
                {
                    "command": [
                        "apply start_state_good.",
                        "VernacExtend",
                        "3f7117ee8aa727fbe129b18690f21f727f289baf"
                    ]
                },
                {
                    "command": [
                        "intros [GOOD1 GOOD2].",
                        "VernacExtend",
                        "3e019c261d55d91d0e89efbf9a702181cedd7986"
                    ]
                },
                {
                    "command": [
                        "rewrite RES; unfold PMap.get; simpl.",
                        "VernacExtend",
                        "c4c607abc4c02fb9826798243756897d1ba2a3b4"
                    ]
                },
                {
                    "command": [
                        "destruct st.(aval)!n as [v|] eqn:STN.",
                        "VernacExtend",
                        "7358aea7cdb8d87aa88536174da994f9a74eb820"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (GOOD1 n) as [P|P]; eauto.",
                        "VernacExtend",
                        "c7fc734543502b2340663de57f3d80a8444a4a8f"
                    ]
                },
                {
                    "command": [
                        "eelim NS.pick_none; eauto.",
                        "VernacExtend",
                        "ad8f4bd85b1421f1fdfdb3e55cf44e9e4a1d71c6"
                    ]
                },
                {
                    "command": [
                        "exploit P; eauto.",
                        "VernacExtend",
                        "29e9fcc44e5bdc0e84434c5e2b8d8ae321d675ce"
                    ]
                },
                {
                    "command": [
                        "unfold abstr_value; rewrite STN.",
                        "VernacExtend",
                        "14bb46c7f2e58d5f1e17aad57b2b272fbc74cc8d"
                    ]
                },
                {
                    "command": [
                        "intros OGE; inv OGE.",
                        "VernacExtend",
                        "211ea8548ee3a2433df6d400b3878cfafb0c8e81"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply L.ge_trans with L.bot.",
                        "VernacExtend",
                        "c82596cdc704dae090dd8a292b2bebca15bfa0c2"
                    ]
                },
                {
                    "command": [
                        "apply L.ge_bot.",
                        "VernacExtend",
                        "b26a635957b6673479ad7bf281de21d1bde0bcec"
                    ]
                },
                {
                    "command": [
                        "apply L.ge_refl.",
                        "VernacExtend",
                        "789f21b0b00c9fa1973354dffd0311d4e4c5161b"
                    ]
                },
                {
                    "command": [
                        "apply L.eq_sym.",
                        "VernacExtend",
                        "53ff9a697190904ce73664f58e24dad44bd69082"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fixpoint_entry",
            "line_nb": 440,
            "steps": [
                {
                    "command": [
                        "unfold fixpoint; intros.",
                        "VernacExtend",
                        "e984472dad88ba328d23cb08aeb1da555d37c3a6"
                    ]
                },
                {
                    "command": [
                        "exploit fixpoint_from_charact; eauto.",
                        "VernacExtend",
                        "960af579ecd4ac107fd497967ae33effc1759025"
                    ]
                },
                {
                    "command": [
                        "intros (st & STEPS & PICK & RES).",
                        "VernacExtend",
                        "5e1aacc48775289907f8aef528844a88049ad77a"
                    ]
                },
                {
                    "command": [
                        "exploit (steps_incr ep); eauto.",
                        "VernacExtend",
                        "ac4e30801dfb46d50a88d2cc13b107273f5f060a"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gss.",
                        "VernacExtend",
                        "1862d23de1a24ed5e53618dc05bc2c5f9f530523"
                    ]
                },
                {
                    "command": [
                        "intros [P Q].",
                        "VernacExtend",
                        "663dc907ccc489647d55e233d550455f27ce8429"
                    ]
                },
                {
                    "command": [
                        "rewrite RES; unfold PMap.get; simpl.",
                        "VernacExtend",
                        "c4c607abc4c02fb9826798243756897d1ba2a3b4"
                    ]
                },
                {
                    "command": [
                        "inv P; auto.",
                        "VernacExtend",
                        "6d094043647a86dedf816e739b12bdd98995596e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fixpoint_allnodes_solution",
            "line_nb": 451,
            "steps": [
                {
                    "command": [
                        "unfold fixpoint_allnodes; intros.",
                        "VernacExtend",
                        "7467d75db6579cb2afac6d396b08b76553068128"
                    ]
                },
                {
                    "command": [
                        "exploit fixpoint_from_charact; eauto.",
                        "VernacExtend",
                        "960af579ecd4ac107fd497967ae33effc1759025"
                    ]
                },
                {
                    "command": [
                        "intros (st & STEPS & PICK & RES).",
                        "VernacExtend",
                        "5e1aacc48775289907f8aef528844a88049ad77a"
                    ]
                },
                {
                    "command": [
                        "exploit steps_state_good; eauto.",
                        "VernacExtend",
                        "132e91abe2533f470adac5249bf4d058881d5468"
                    ]
                },
                {
                    "command": [
                        "apply start_state_allnodes_good.",
                        "VernacExtend",
                        "a4f33f5607afc357b03a39affb388fa9272fbedb"
                    ]
                },
                {
                    "command": [
                        "intros [GOOD1 GOOD2].",
                        "VernacExtend",
                        "3e019c261d55d91d0e89efbf9a702181cedd7986"
                    ]
                },
                {
                    "command": [
                        "exploit (steps_incr n); eauto.",
                        "VernacExtend",
                        "10b39e6e5c06e8fdc99c195987ab8d80cf7f3c81"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros [U V].",
                        "VernacExtend",
                        "34da01c059b7ef90d5e7631c22b7fd07d15e31d6"
                    ]
                },
                {
                    "command": [
                        "exploit (GOOD1 n).",
                        "VernacExtend",
                        "87c31ca81e3c86f5ad161102a9de83afb67d55fd"
                    ]
                },
                {
                    "command": [
                        "apply V.",
                        "VernacExtend",
                        "3c3c08d783f697fa1e1bf5ea373c5e9c29d0ad17"
                    ]
                },
                {
                    "command": [
                        "exists instr; auto.",
                        "VernacExtend",
                        "fb8ad61b141cf274f992d2c9243a44e62ff3c8d7"
                    ]
                },
                {
                    "command": [
                        "intros [P|P].",
                        "VernacExtend",
                        "1ac04b365ddba6c73aebfccdd4bb8681f041d678"
                    ]
                },
                {
                    "command": [
                        "eelim NS.pick_none; eauto.",
                        "VernacExtend",
                        "ad8f4bd85b1421f1fdfdb3e55cf44e9e4a1d71c6"
                    ]
                },
                {
                    "command": [
                        "exploit P; eauto.",
                        "VernacExtend",
                        "29e9fcc44e5bdc0e84434c5e2b8d8ae321d675ce"
                    ]
                },
                {
                    "command": [
                        "intros OGE.",
                        "VernacExtend",
                        "65e7dfdfbe0b6529d4c6374b363fc044172d5b5e"
                    ]
                },
                {
                    "command": [
                        "rewrite RES; unfold PMap.get; simpl.",
                        "VernacExtend",
                        "c4c607abc4c02fb9826798243756897d1ba2a3b4"
                    ]
                },
                {
                    "command": [
                        "inv OGE.",
                        "VernacExtend",
                        "36d078689dc9e54fa0a637b773b98576578ede99"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fixpoint_nodeset_solution",
            "line_nb": 472,
            "steps": [
                {
                    "command": [
                        "unfold fixpoint_nodeset; intros.",
                        "VernacExtend",
                        "8cf13be01b1582440ea93533cf54a9e46a420ee9"
                    ]
                },
                {
                    "command": [
                        "exploit fixpoint_from_charact; eauto.",
                        "VernacExtend",
                        "960af579ecd4ac107fd497967ae33effc1759025"
                    ]
                },
                {
                    "command": [
                        "intros (st & STEPS & PICK & RES).",
                        "VernacExtend",
                        "5e1aacc48775289907f8aef528844a88049ad77a"
                    ]
                },
                {
                    "command": [
                        "exploit steps_state_good; eauto.",
                        "VernacExtend",
                        "132e91abe2533f470adac5249bf4d058881d5468"
                    ]
                },
                {
                    "command": [
                        "apply start_state_nodeset_good.",
                        "VernacExtend",
                        "c1a53fa912539341253a124db152be7d12f2f10b"
                    ]
                },
                {
                    "command": [
                        "intros GOOD.",
                        "VernacExtend",
                        "1071c95957a11db7e48b9d41bc416928363b31cc"
                    ]
                },
                {
                    "command": [
                        "exploit (steps_incr e); eauto.",
                        "VernacExtend",
                        "23871eee45acaaf1ed7d6a3b038e10e607096449"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros [U V].",
                        "VernacExtend",
                        "34da01c059b7ef90d5e7631c22b7fd07d15e31d6"
                    ]
                },
                {
                    "command": [
                        "assert (st.(visited) n).",
                        "VernacExtend",
                        "24b90aabf49ca1c66d03838afe0adc17bb8ab96d"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "eapply reachable_visited; eauto.",
                        "VernacExtend",
                        "a11de595a4405b8205911f46949227151694340f"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct GOOD as [GOOD1 GOOD2].",
                        "VernacExtend",
                        "129d317b21ea552ce5d4876ef9b79330446000cd"
                    ]
                },
                {
                    "command": [
                        "exploit (GOOD1 n); eauto.",
                        "VernacExtend",
                        "b9837bba551c2dbdb7e4dba6ffba1d4806882350"
                    ]
                },
                {
                    "command": [
                        "intros [P|P].",
                        "VernacExtend",
                        "1ac04b365ddba6c73aebfccdd4bb8681f041d678"
                    ]
                },
                {
                    "command": [
                        "eelim NS.pick_none; eauto.",
                        "VernacExtend",
                        "ad8f4bd85b1421f1fdfdb3e55cf44e9e4a1d71c6"
                    ]
                },
                {
                    "command": [
                        "exploit P; eauto.",
                        "VernacExtend",
                        "29e9fcc44e5bdc0e84434c5e2b8d8ae321d675ce"
                    ]
                },
                {
                    "command": [
                        "intros OGE.",
                        "VernacExtend",
                        "65e7dfdfbe0b6529d4c6374b363fc044172d5b5e"
                    ]
                },
                {
                    "command": [
                        "rewrite RES; unfold PMap.get; simpl.",
                        "VernacExtend",
                        "c4c607abc4c02fb9826798243756897d1ba2a3b4"
                    ]
                },
                {
                    "command": [
                        "inv OGE.",
                        "VernacExtend",
                        "36d078689dc9e54fa0a637b773b98576578ede99"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fixpoint_invariant",
            "line_nb": 496,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "set (inv := fun st => forall x, P (abstr_value x st)).",
                        "VernacExtend",
                        "58a773cc58565d27d18dbb130b6394da553d52c4"
                    ]
                },
                {
                    "command": [
                        "assert (inv (start_state ep ev)).",
                        "VernacExtend",
                        "a5f15062c28b2ea2b74d14acc5eba88170a00ed1"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "red; simpl; intros.",
                        "VernacExtend",
                        "629095e96b1a8bc7172736d3dfde387c11fb3564"
                    ]
                },
                {
                    "command": [
                        "unfold abstr_value, start_state; simpl.",
                        "VernacExtend",
                        "878daafd406ab19fda19d6f05e9d0a475123cdbe"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gsspec.",
                        "VernacExtend",
                        "88315e2b3b1f3e40fe18917f8425d57b50a31282"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gempty.",
                        "VernacExtend",
                        "02ad4f08527ee6f058bb5b2fc6b52855b65cf49f"
                    ]
                },
                {
                    "command": [
                        "destruct (peq x ep).",
                        "VernacExtend",
                        "897e0f265542388ffa06b6ec4ae07277cbcdf6f5"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (forall st v n, inv st -> P v -> inv (propagate_succ st v n)).",
                        "VernacExtend",
                        "28896961e5ba4c5f634712bff09843bfa3c475cd"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold inv, propagate_succ.",
                        "VernacExtend",
                        "75782094b92a9b85bbd17671cffb58abbf38c872"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (aval st)!n as [oldl|] eqn:E.",
                        "VernacExtend",
                        "aefd34c227addb4cd9f5faefceff45d31673b67c"
                    ]
                },
                {
                    "command": [
                        "destruct (L.beq oldl (L.lub oldl v)).",
                        "VernacExtend",
                        "05c36f3bbb9d766dacd68b0a53a8e9a768855fea"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "unfold abstr_value.",
                        "VernacExtend",
                        "17852475d69d2f9c5e234f4e334a115bf5654ae1"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gsspec.",
                        "VernacExtend",
                        "88315e2b3b1f3e40fe18917f8425d57b50a31282"
                    ]
                },
                {
                    "command": [
                        "destruct (peq x n).",
                        "VernacExtend",
                        "54c31e4dcc97c30f80cb69ec8eaa10327b79a59f"
                    ]
                },
                {
                    "command": [
                        "apply P_lub; auto.",
                        "VernacExtend",
                        "5a8b4d26f11ef825e7b339ebda9fad9f8fb3863e"
                    ]
                },
                {
                    "command": [
                        "replace oldl with (abstr_value n st).",
                        "VernacExtend",
                        "1bf828878e88f29d1ddbb3e261ed3de99663c866"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "unfold abstr_value; rewrite E; auto.",
                        "VernacExtend",
                        "634b7e5fb3d13572e97407050bc6e90de59bf592"
                    ]
                },
                {
                    "command": [
                        "apply H1.",
                        "VernacExtend",
                        "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
                    ]
                },
                {
                    "command": [
                        "unfold abstr_value.",
                        "VernacExtend",
                        "17852475d69d2f9c5e234f4e334a115bf5654ae1"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gsspec.",
                        "VernacExtend",
                        "88315e2b3b1f3e40fe18917f8425d57b50a31282"
                    ]
                },
                {
                    "command": [
                        "destruct (peq x n).",
                        "VernacExtend",
                        "54c31e4dcc97c30f80cb69ec8eaa10327b79a59f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply H1.",
                        "VernacExtend",
                        "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (forall l st v, inv st -> P v -> inv (propagate_succ_list st v l)).",
                        "VernacExtend",
                        "357eeaa68652deaf81443e8ccd3ce2605fdb0b5f"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "induction l; intros; simpl.",
                        "VernacExtend",
                        "6aa9541b4ade8f0ccec4c2034d15d1d35a916300"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply IHl; auto.",
                        "VernacExtend",
                        "e138dde1a62d902d35fbbfcb71bf2b52acaced18"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (forall st1 st2, steps st1 st2 -> inv st1 -> inv st2).",
                        "VernacExtend",
                        "e31339d9bd10d45b61b1d351537be4d622e3c2f8"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "induction 1; intros.",
                        "VernacExtend",
                        "176684f910d62ec20fbc75549575bf1cd34fa8ec"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "unfold step in e.",
                        "VernacExtend",
                        "249f5165597381eb45f4b9a59d7a223bfee5e7cd"
                    ]
                },
                {
                    "command": [
                        "destruct (NS.pick (worklist s2)) as [[n rem]|]; try discriminate.",
                        "VernacExtend",
                        "ad97c6a815c33b492f3070fb3ee5486d4ecbd1e1"
                    ]
                },
                {
                    "command": [
                        "destruct (code!n) as [instr|] eqn:INSTR; inv e.",
                        "VernacExtend",
                        "e14c2ec09711b21a3b7f3720d7f4dbcb90472eb8"
                    ]
                },
                {
                    "command": [
                        "apply H2.",
                        "VernacExtend",
                        "17101978526a14fb5ad41816224a2fc35cc3d256"
                    ]
                },
                {
                    "command": [
                        "apply IHsteps; auto.",
                        "VernacExtend",
                        "69bc72b0ea20103354e9059b1f0a63a363f4309e"
                    ]
                },
                {
                    "command": [
                        "eapply P_transf; eauto.",
                        "VernacExtend",
                        "cc0d6b47a25bd871cf2a0fa413261480fab0ab25"
                    ]
                },
                {
                    "command": [
                        "apply IHsteps; auto.",
                        "VernacExtend",
                        "69bc72b0ea20103354e9059b1f0a63a363f4309e"
                    ]
                },
                {
                    "command": [
                        "apply IHsteps; auto.",
                        "VernacExtend",
                        "69bc72b0ea20103354e9059b1f0a63a363f4309e"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "unfold fixpoint in H.",
                        "VernacExtend",
                        "56dcef579b509d77953f65c11513c9b2947633af"
                    ]
                },
                {
                    "command": [
                        "exploit fixpoint_from_charact; eauto.",
                        "VernacExtend",
                        "960af579ecd4ac107fd497967ae33effc1759025"
                    ]
                },
                {
                    "command": [
                        "intros (st & STEPS & PICK & RES).",
                        "VernacExtend",
                        "5e1aacc48775289907f8aef528844a88049ad77a"
                    ]
                },
                {
                    "command": [
                        "replace (res!!pc) with (abstr_value pc st).",
                        "VernacExtend",
                        "06869022bba20112918a07792abdcdb9db518db9"
                    ]
                },
                {
                    "command": [
                        "eapply H3; eauto.",
                        "VernacExtend",
                        "4aa0b3760c6510a6990a96042c273418bec50b3d"
                    ]
                },
                {
                    "command": [
                        "rewrite RES; auto.",
                        "VernacExtend",
                        "b8eca2f7476b9a17a1d1c9c86fdc266b89b8317a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_successors_correct",
            "line_nb": 567,
            "steps": [
                {
                    "command": [
                        "induction tolist; simpl; intros.",
                        "VernacExtend",
                        "38e6e07e0b4543983aec9705f1557b3d62d913fa"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "apply IHtolist.",
                        "VernacExtend",
                        "57bd8d60467c5b5cb578fbba5b91c26ece954a7c"
                    ]
                },
                {
                    "command": [
                        "unfold successors_list at 1.",
                        "VernacExtend",
                        "dbc047999ef30b92b9871b2157d3c57af3cc1f8f"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gsspec.",
                        "VernacExtend",
                        "88315e2b3b1f3e40fe18917f8425d57b50a31282"
                    ]
                },
                {
                    "command": [
                        "destruct (peq s a).",
                        "VernacExtend",
                        "f2ac09a80c20855748004f96147e0271816e362a"
                    ]
                },
                {
                    "command": [
                        "subst a.",
                        "VernacExtend",
                        "d7670e5f9c196bd417b16b29da3532f33d34884d"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "auto with coqlib.",
                        "VernacExtend",
                        "bf4be239b4d8868fa0ff9785d68d66d28f74c632"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "subst n.",
                        "VernacExtend",
                        "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
                    ]
                },
                {
                    "command": [
                        "auto with coqlib.",
                        "VernacExtend",
                        "bf4be239b4d8868fa0ff9785d68d66d28f74c632"
                    ]
                },
                {
                    "command": [
                        "fold (successors_list pred s).",
                        "VernacExtend",
                        "69daebe3475bd01af94f83946111f3d302351fbb"
                    ]
                },
                {
                    "command": [
                        "intuition congruence.",
                        "VernacExtend",
                        "2cba3542847e3f4ea52f3f62375adc6e8f8f04bc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "make_predecessors_correct_1",
            "line_nb": 584,
            "steps": [
                {
                    "command": [
                        "intros until s.",
                        "VernacExtend",
                        "24cbc2b91a56c7505e8e3d9f3cfc555fab7c5e72"
                    ]
                },
                {
                    "command": [
                        "set (P := fun m p => m!n = Some instr -> In s (successors instr) -> In n p!!!s).",
                        "VernacExtend",
                        "4d59b5550d029b2a6cce520c62c2671057507a4e"
                    ]
                },
                {
                    "command": [
                        "unfold make_predecessors.",
                        "VernacExtend",
                        "130d2d62fb3a42905d08f0f3df6fd21b53bb7acb"
                    ]
                },
                {
                    "command": [
                        "apply PTree_Properties.fold_rec with (P := P); unfold P; intros.",
                        "VernacExtend",
                        "3347859cd7ec33bd71267c3a8ddc729c545090c5"
                    ]
                },
                {
                    "command": [
                        "apply H0; auto.",
                        "VernacExtend",
                        "e167f871dfeec1cef76aaf201c54c081f29f730b"
                    ]
                },
                {
                    "command": [
                        "rewrite H; auto.",
                        "VernacExtend",
                        "3e25713af8eaa76cddf9287af10d66733da2ee16"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gempty in H; congruence.",
                        "VernacExtend",
                        "58487c81a0265a4ac28db45b9f4ec0f4ff7ccf49"
                    ]
                },
                {
                    "command": [
                        "apply add_successors_correct.",
                        "VernacExtend",
                        "2dfc6468cce23217b76b27dfa5afa3bca0f7d883"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gsspec in H2.",
                        "VernacExtend",
                        "b493a8c2dafa18120a204a32ee0ef517ce5e4f65"
                    ]
                },
                {
                    "command": [
                        "destruct (peq n k).",
                        "VernacExtend",
                        "a81eb2b5c7f677f80dd9edaf3415bd491d53e2c1"
                    ]
                },
                {
                    "command": [
                        "inv H2.",
                        "VernacExtend",
                        "6144021562e950304ba8e947fdc2423691182458"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "make_predecessors_correct_2",
            "line_nb": 599,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exploit make_predecessors_correct_1; eauto.",
                        "VernacExtend",
                        "ab6ea3367ef29a7e7966b2b6079e28a50219b476"
                    ]
                },
                {
                    "command": [
                        "unfold successors_list.",
                        "VernacExtend",
                        "71fcba6969d8c9fa13545d9a043c7d2449a14314"
                    ]
                },
                {
                    "command": [
                        "destruct (make_predecessors!s); simpl; intros.",
                        "VernacExtend",
                        "bcdb1e2306459be6e9a0b87b00126f5aa3d01458"
                    ]
                },
                {
                    "command": [
                        "exists l; auto.",
                        "VernacExtend",
                        "2eab71a4d324b79b2ef6a9e847d6eb06296bcbe0"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reachable_predecessors",
            "line_nb": 607,
            "steps": [
                {
                    "command": [
                        "induction 1.",
                        "VernacExtend",
                        "dfe896305621800fcbb03b32d51d497edbdf1dc5"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exploit make_predecessors_correct_2; eauto.",
                        "VernacExtend",
                        "1c412ff7ba7e32d418b9813aa3d1c8445dd653ce"
                    ]
                },
                {
                    "command": [
                        "intros [l [P Q]].",
                        "VernacExtend",
                        "d5529fb10b5a3ee1dc598c8c3e9a068ae09e2ea6"
                    ]
                },
                {
                    "command": [
                        "eapply reachable_right; eauto.",
                        "VernacExtend",
                        "e933a840f2442173e25144dc8a3c0099d1e6de50"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exit_points_charact",
            "line_nb": 635,
            "steps": [
                {
                    "command": [
                        "intros n.",
                        "VernacExtend",
                        "9410cc86153539309ee696ae5785ea70534ece11"
                    ]
                },
                {
                    "command": [
                        "unfold exit_points.",
                        "VernacExtend",
                        "c38fb72d8d26216280b0c08da7f1c7da0d3ff277"
                    ]
                },
                {
                    "command": [
                        "eapply PTree_Properties.fold_rec.",
                        "VernacExtend",
                        "f16dcb8a506c8c66e4a6986f7bd0030524782ea7"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "eelim NS.empty_spec; eauto.",
                        "VernacExtend",
                        "54b37ff646fa67d14839a6916c108feeb830cf53"
                    ]
                },
                {
                    "command": [
                        "destruct H as [i [P Q]].",
                        "VernacExtend",
                        "5a1643770f2c9cae87bfca04d886199256ece6cd"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gempty in P.",
                        "VernacExtend",
                        "f6d710774bed3f88324127839aeaa47402263685"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (sequential_node k v) eqn:SN.",
                        "VernacExtend",
                        "8fbca8d8a28d8411e3e55290cdc8d37697411940"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gsspec.",
                        "VernacExtend",
                        "88315e2b3b1f3e40fe18917f8425d57b50a31282"
                    ]
                },
                {
                    "command": [
                        "destruct (peq n k).",
                        "VernacExtend",
                        "a81eb2b5c7f677f80dd9edaf3415bd491d53e2c1"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "split; intros [i [P Q]].",
                        "VernacExtend",
                        "0397bcae1336c26ba8305edd34fbf4ec36931ee1"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "inv P.",
                        "VernacExtend",
                        "9db9e551d407fb52f890fa8275c215698a67094e"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite NS.add_spec.",
                        "VernacExtend",
                        "e90539b38f369107b4cc7f69fe935a8da796f9f0"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gsspec.",
                        "VernacExtend",
                        "88315e2b3b1f3e40fe18917f8425d57b50a31282"
                    ]
                },
                {
                    "command": [
                        "destruct (peq n k).",
                        "VernacExtend",
                        "a81eb2b5c7f677f80dd9edaf3415bd491d53e2c1"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exists v; auto.",
                        "VernacExtend",
                        "863f124117e3794411b95ae7c6344e625907c1cb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros [P | [i [P Q]]].",
                        "VernacExtend",
                        "19483332857e74f9688634f0fba2dad1f4d741a7"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "exists i; auto.",
                        "VernacExtend",
                        "06b83cb51650711770bc1e0786f279124247af80"
                    ]
                },
                {
                    "command": [
                        "intros [i [P Q]].",
                        "VernacExtend",
                        "7a2d4db31b1dec783875325261f90044dbf026de"
                    ]
                },
                {
                    "command": [
                        "right; exists i; auto.",
                        "VernacExtend",
                        "e7610decce649c07420002c62a65cb04437f3757"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reachable_exit_points",
            "line_nb": 680,
            "steps": [
                {
                    "command": [
                        "intros pc0.",
                        "VernacExtend",
                        "3f5a6bcb7223871c9cca787d815113592eb52455"
                    ]
                },
                {
                    "command": [
                        "pattern pc0.",
                        "VernacExtend",
                        "fd845941c8b01414a397d8463d60f5e3c22edd03"
                    ]
                },
                {
                    "command": [
                        "apply (well_founded_ind Plt_wf).",
                        "VernacExtend",
                        "a29ce5a16b43d6cd900bc25a955872b956d13266"
                    ]
                },
                {
                    "command": [
                        "intros pc HR i CODE.",
                        "VernacExtend",
                        "4e8f73926a1859085045ddaed715126863e8b6e8"
                    ]
                },
                {
                    "command": [
                        "destruct (sequential_node pc i) eqn:SN.",
                        "VernacExtend",
                        "e4a2cb29626ee5239a99911c840f482e938b575c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold sequential_node in SN.",
                        "VernacExtend",
                        "67dbbf75e2b777d6797d0b4a987ebc5f0db018de"
                    ]
                },
                {
                    "command": [
                        "rewrite existsb_exists in SN.",
                        "VernacExtend",
                        "cb14be745651f28e4c5865e16a169129cabb1c92"
                    ]
                },
                {
                    "command": [
                        "destruct SN as [s [P Q]].",
                        "VernacExtend",
                        "e5fd2479369db637da3ac15448eedd5e41da0eed"
                    ]
                },
                {
                    "command": [
                        "destruct (code!s) as [i'|] eqn:CS; try discriminate.",
                        "VernacExtend",
                        "fac78cf2f53c71bc29465d47423ab3163d44cf59"
                    ]
                },
                {
                    "command": [
                        "InvBooleans.",
                        "VernacExtend",
                        "2a6e1bb1be0f04ca24c3e441e9db23c18612c002"
                    ]
                },
                {
                    "command": [
                        "exploit (HR s); eauto.",
                        "VernacExtend",
                        "2acac949c711b55cb5d3d2578a71e7cb9054437f"
                    ]
                },
                {
                    "command": [
                        "intros [x [U V]].",
                        "VernacExtend",
                        "0f29e8c9ca1d74ab05c2bc0d1049023e20b9d85a"
                    ]
                },
                {
                    "command": [
                        "exists x; split; auto.",
                        "VernacExtend",
                        "9baaff95917bd6ede74eb9f2342b440afcd5c72d"
                    ]
                },
                {
                    "command": [
                        "eapply reachable_left; eauto.",
                        "VernacExtend",
                        "60ec997d0f16d68174204434270d6dfa7130291c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exists pc; split.",
                        "VernacExtend",
                        "1f141c23d464d2a9ae368038913e0dc8328139d9"
                    ]
                },
                {
                    "command": [
                        "rewrite exit_points_charact.",
                        "VernacExtend",
                        "4d1d7463e6608e499842d4c1be39ece94c6476bf"
                    ]
                },
                {
                    "command": [
                        "exists i; auto.",
                        "VernacExtend",
                        "06b83cb51650711770bc1e0786f279124247af80"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reachable_exit_points_predecessor",
            "line_nb": 702,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exploit reachable_exit_points; eauto.",
                        "VernacExtend",
                        "60eea0e2d85324da2721e27a5bcc116a55e1be06"
                    ]
                },
                {
                    "command": [
                        "intros [x [P Q]].",
                        "VernacExtend",
                        "8ace6ee4a9591c0c859e7bb6696e3aebd798360d"
                    ]
                },
                {
                    "command": [
                        "exists x; split; auto.",
                        "VernacExtend",
                        "9baaff95917bd6ede74eb9f2342b440afcd5c72d"
                    ]
                },
                {
                    "command": [
                        "apply reachable_predecessors.",
                        "VernacExtend",
                        "bdeb5dc892283560f2d742ff6109b0291f0808c7"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "predecessors_correct",
            "line_nb": 775,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold predecessors.",
                        "VernacExtend",
                        "f3aa991e3acde4857760242d5cb5874ba1b27c37"
                    ]
                },
                {
                    "command": [
                        "eapply make_predecessors_correct_1; eauto.",
                        "VernacExtend",
                        "a6323332d0c7540739acfc544b50a6ab3e0bdab7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "multiple_predecessors",
            "line_nb": 780,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (In n1 predecessors!!!s).",
                        "VernacExtend",
                        "c6d14e04728e9b6bd4184f715a3f2bcd19c414d7"
                    ]
                },
                {
                    "command": [
                        "eapply predecessors_correct; eauto.",
                        "VernacExtend",
                        "1663254faa13f2c702a164a0f4bf513afbee14b2"
                    ]
                },
                {
                    "command": [
                        "assert (In n2 predecessors!!!s).",
                        "VernacExtend",
                        "7642f1ab85cdac541221e57555708f74ce3690d0"
                    ]
                },
                {
                    "command": [
                        "eapply predecessors_correct; eauto.",
                        "VernacExtend",
                        "1663254faa13f2c702a164a0f4bf513afbee14b2"
                    ]
                },
                {
                    "command": [
                        "unfold basic_block_map, is_basic_block_head.",
                        "VernacExtend",
                        "464fc24e94c51bc3a47b7d2c3c88ea5a7182b163"
                    ]
                },
                {
                    "command": [
                        "destruct (peq s entrypoint).",
                        "VernacExtend",
                        "f5c25d24e24946c29de55e01ff16be117fcbb317"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "fold predecessors.",
                        "VernacExtend",
                        "2940e4974daa9e5be49946cd7327ef3bb70335b5"
                    ]
                },
                {
                    "command": [
                        "destruct (predecessors!!!s).",
                        "VernacExtend",
                        "ef8fa9539d0adcbe7c26a428bc70ab818c3e234f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "destruct l.",
                        "VernacExtend",
                        "a4218804e377a0d685aafec59adbc3652d543b9c"
                    ]
                },
                {
                    "command": [
                        "apply proj_sumbool_is_true.",
                        "VernacExtend",
                        "3ab12f69ac682e9c1350012987efded269b6fa06"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "intuition congruence.",
                        "VernacExtend",
                        "2cba3542847e3f4ea52f3f62375adc6e8f8f04bc"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "no_self_loop",
            "line_nb": 798,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold basic_block_map, is_basic_block_head.",
                        "VernacExtend",
                        "464fc24e94c51bc3a47b7d2c3c88ea5a7182b163"
                    ]
                },
                {
                    "command": [
                        "destruct (peq n entrypoint).",
                        "VernacExtend",
                        "bb44f528b51c5af1fb73d4546dbf160894068fa5"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "fold predecessors.",
                        "VernacExtend",
                        "2940e4974daa9e5be49946cd7327ef3bb70335b5"
                    ]
                },
                {
                    "command": [
                        "exploit predecessors_correct; eauto.",
                        "VernacExtend",
                        "fce5f2a02c3e2097d36d009cf1a933d659002e70"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (predecessors!!!n).",
                        "VernacExtend",
                        "9555c01ff993ed2d5edbc99b43dbc2e820722bd0"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "destruct l.",
                        "VernacExtend",
                        "a4218804e377a0d685aafec59adbc3652d543b9c"
                    ]
                },
                {
                    "command": [
                        "apply proj_sumbool_is_true.",
                        "VernacExtend",
                        "3ab12f69ac682e9c1350012987efded269b6fa06"
                    ]
                },
                {
                    "command": [
                        "simpl in H1.",
                        "VernacExtend",
                        "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "propagate_successors_charact1",
            "line_nb": 815,
            "steps": [
                {
                    "command": [
                        "induction succs; simpl; intros.",
                        "VernacExtend",
                        "23016b3b41f0bea8923fae49cc5d18202405321f"
                    ]
                },
                {
                    "command": [
                        "apply incl_refl.",
                        "VernacExtend",
                        "6e258f80ae06c106bc24ad44dc8c7ddbdb6bbff5"
                    ]
                },
                {
                    "command": [
                        "case (bb a).",
                        "VernacExtend",
                        "d78b2fc7f5ba0994c1d5738c83d73356c26a0514"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply incl_tran with (a :: worklist st).",
                        "VernacExtend",
                        "2a924b645c164897b69cc1105f1ad5fc1537cec3"
                    ]
                },
                {
                    "command": [
                        "apply incl_tl.",
                        "VernacExtend",
                        "aa01ac5690eb6bfdd9c26e3e1ce04e44e7e97936"
                    ]
                },
                {
                    "command": [
                        "apply incl_refl.",
                        "VernacExtend",
                        "6e258f80ae06c106bc24ad44dc8c7ddbdb6bbff5"
                    ]
                },
                {
                    "command": [
                        "set (st1 := (mkstate (PMap.set a l (aval st)) (a :: worklist st))).",
                        "VernacExtend",
                        "a8ff907e99bcf08cbf19b3ace181f6c0412fd69c"
                    ]
                },
                {
                    "command": [
                        "change (a :: worklist st) with (worklist st1).",
                        "VernacExtend",
                        "9bf63d715eab6b4a7cc698e186ee52ca42505a29"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "propagate_successors_charact2",
            "line_nb": 827,
            "steps": [
                {
                    "command": [
                        "induction succs; simpl; intros.",
                        "VernacExtend",
                        "23016b3b41f0bea8923fae49cc5d18202405321f"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "caseEq (bb a); intro.",
                        "VernacExtend",
                        "05d63cb35e557be1f8300a9e59cfe93ef12db973"
                    ]
                },
                {
                    "command": [
                        "elim (IHsuccs l st n); intros U V.",
                        "VernacExtend",
                        "c6069494b605f6b655508d58db329cd3662a5249"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "apply U; auto.",
                        "VernacExtend",
                        "798fd596954f295c3daf8c6320540f73dfa8d327"
                    ]
                },
                {
                    "command": [
                        "elim H0; intro.",
                        "VernacExtend",
                        "8b90d3170291d75c22593a28bbba0a2c88c6fd14"
                    ]
                },
                {
                    "command": [
                        "subst a.",
                        "VernacExtend",
                        "d7670e5f9c196bd417b16b29da3532f33d34884d"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply V.",
                        "VernacExtend",
                        "3c3c08d783f697fa1e1bf5ea373c5e9c29d0ad17"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "set (st1 := mkstate (PMap.set a l (aval st)) (a :: worklist st)).",
                        "VernacExtend",
                        "a8ff907e99bcf08cbf19b3ace181f6c0412fd69c"
                    ]
                },
                {
                    "command": [
                        "elim (IHsuccs l st1 n); intros U V.",
                        "VernacExtend",
                        "9de990b3a81ae434ad449f5969d1f31e11d6e2dc"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "elim H0; intros.",
                        "VernacExtend",
                        "6b83f392a470a8cdaa118e532bc445a009dec854"
                    ]
                },
                {
                    "command": [
                        "subst n.",
                        "VernacExtend",
                        "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply propagate_successors_charact1.",
                        "VernacExtend",
                        "75db7cd8531aa9fcbda11830727e8fa0dce0ab5b"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "case (In_dec peq a succs); intro.",
                        "VernacExtend",
                        "4a1704f9467992c9aed03ff20754c3739bd404b9"
                    ]
                },
                {
                    "command": [
                        "elim (U i H1); auto.",
                        "VernacExtend",
                        "80ee8a906219760b27545c85c471cb03b365f485"
                    ]
                },
                {
                    "command": [
                        "rewrite V.",
                        "VernacExtend",
                        "22d30038d8005a7fbe2e5a5c28c65e4e9dc9d597"
                    ]
                },
                {
                    "command": [
                        "unfold st1; simpl.",
                        "VernacExtend",
                        "3719a5539c492097ce5c999af326e1ac0487365e"
                    ]
                },
                {
                    "command": [
                        "apply PMap.gss.",
                        "VernacExtend",
                        "2cd00cf9dd894d933b696f0e8bf970748d485efc"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "apply U; auto.",
                        "VernacExtend",
                        "798fd596954f295c3daf8c6320540f73dfa8d327"
                    ]
                },
                {
                    "command": [
                        "rewrite V.",
                        "VernacExtend",
                        "22d30038d8005a7fbe2e5a5c28c65e4e9dc9d597"
                    ]
                },
                {
                    "command": [
                        "unfold st1; simpl.",
                        "VernacExtend",
                        "3719a5539c492097ce5c999af326e1ac0487365e"
                    ]
                },
                {
                    "command": [
                        "apply PMap.gso.",
                        "VernacExtend",
                        "2fe3b184b6e2b79b3e919af63e32901f66725261"
                    ]
                },
                {
                    "command": [
                        "red; intro; subst n.",
                        "VernacExtend",
                        "f1a5e5569d7377fe100c8e5bfbc683faa4edfdfc"
                    ]
                },
                {
                    "command": [
                        "elim H0; intro.",
                        "VernacExtend",
                        "8b90d3170291d75c22593a28bbba0a2c88c6fd14"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "propagate_successors_invariant",
            "line_nb": 867,
            "steps": [
                {
                    "command": [
                        "intros until rem.",
                        "VernacExtend",
                        "f8b10baa17d4f352fc69740c83a1f4f0285446af"
                    ]
                },
                {
                    "command": [
                        "intros CODE [INV1 INV2].",
                        "VernacExtend",
                        "cf58159a2fee2ade1d82ec3b20bddd0302b83881"
                    ]
                },
                {
                    "command": [
                        "simpl in INV1.",
                        "VernacExtend",
                        "a2084242dd0057d88c5571861323b0cc34669161"
                    ]
                },
                {
                    "command": [
                        "simpl in INV2.",
                        "VernacExtend",
                        "98318fc43d6e9743160d1b88e3203800905dcadc"
                    ]
                },
                {
                    "command": [
                        "set (l := transf pc res!!pc).",
                        "VernacExtend",
                        "0741566f78d779e6f65492e2b58450e156dd3f9f"
                    ]
                },
                {
                    "command": [
                        "generalize (propagate_successors_charact1 basic_block_map (successors instr) l (mkstate res rem)).",
                        "VernacExtend",
                        "d30bec83c1aefbc9d4ae0623f3f9e7d7fd89c56d"
                    ]
                },
                {
                    "command": [
                        "generalize (propagate_successors_charact2 basic_block_map (successors instr) l (mkstate res rem)).",
                        "VernacExtend",
                        "0bd68212644ec34729aa0d6389c5f980e11d02fb"
                    ]
                },
                {
                    "command": [
                        "set (st1 := propagate_successors basic_block_map (successors instr) l (mkstate res rem)).",
                        "VernacExtend",
                        "2702e7a62875e1137b22379489aa451682407b45"
                    ]
                },
                {
                    "command": [
                        "intros U V.",
                        "VernacExtend",
                        "75b6c0f37b97f789e9603fab7bb7214fac771e2b"
                    ]
                },
                {
                    "command": [
                        "simpl in U.",
                        "VernacExtend",
                        "4f2e9b1ba6cd5a6f044f794e0955883a7911dd58"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "elim (U n); intros C D.",
                        "VernacExtend",
                        "e68f43816f7cb6a8f0ef269b27eeec9ecc213fd9"
                    ]
                },
                {
                    "command": [
                        "rewrite D.",
                        "VernacExtend",
                        "c8b2ecfe60096f3f4842362d970cc94fbb2c0ef5"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply INV1.",
                        "VernacExtend",
                        "4ec68f0126eb1c2b17d79ae57349a6951d7d5362"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "destruct (peq pc n).",
                        "VernacExtend",
                        "33c624c1edb23a424190818151a91015e6adbf4f"
                    ]
                },
                {
                    "command": [
                        "subst n.",
                        "VernacExtend",
                        "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
                    ]
                },
                {
                    "command": [
                        "right; intros.",
                        "VernacExtend",
                        "55f32a4c85976dbf403d59803ef666837ed695da"
                    ]
                },
                {
                    "command": [
                        "assert (instr0 = instr) by congruence.",
                        "VernacExtend",
                        "6fd866a8a2cfc15f6cfa54e224ec2cc2b841b761"
                    ]
                },
                {
                    "command": [
                        "subst instr0.",
                        "VernacExtend",
                        "128106a99f7af8f7a0b53dcb1d1bfaf0d0e3829e"
                    ]
                },
                {
                    "command": [
                        "elim (U s); intros C D.",
                        "VernacExtend",
                        "b33bcfc378491d2c9fa2f54ec9b9f899c851315c"
                    ]
                },
                {
                    "command": [
                        "replace (st1.(aval)!!pc) with res!!pc.",
                        "VernacExtend",
                        "080ee3b566a3f36d6c63e976bf7245405c68283b"
                    ]
                },
                {
                    "command": [
                        "fold l.",
                        "VernacExtend",
                        "4a9959d8836517ebf720232ee45390141dc8e96b"
                    ]
                },
                {
                    "command": [
                        "destruct (basic_block_map s) eqn:BB.",
                        "VernacExtend",
                        "d7773742ba547d4cb961188d58abaeb6212a7841"
                    ]
                },
                {
                    "command": [
                        "rewrite D.",
                        "VernacExtend",
                        "c8b2ecfe60096f3f4842362d970cc94fbb2c0ef5"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite INV1.",
                        "VernacExtend",
                        "84a5ce47f514f82da7a444521b67efa720f8d6c8"
                    ]
                },
                {
                    "command": [
                        "apply L.top_ge.",
                        "VernacExtend",
                        "00627d07a647f04375c421c357b3c9692afbba77"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "elim (C H0 (eq_refl _)).",
                        "VernacExtend",
                        "56964fce2062aa98d240d4d3ecc2f7b2322ad114"
                    ]
                },
                {
                    "command": [
                        "intros X Y.",
                        "VernacExtend",
                        "0be4ceeb0aca30637e1f704a1d72e1f09548b363"
                    ]
                },
                {
                    "command": [
                        "rewrite Y.",
                        "VernacExtend",
                        "65f472dbe2f8ad8b58e07d191d223884de0cc24b"
                    ]
                },
                {
                    "command": [
                        "apply L.refl_ge.",
                        "VernacExtend",
                        "cab803c707dc622e3848e2bf65cedddbcd7fd15d"
                    ]
                },
                {
                    "command": [
                        "elim (U pc); intros E F.",
                        "VernacExtend",
                        "0078647e0a31a5ea7041210dc6ef176f0d023131"
                    ]
                },
                {
                    "command": [
                        "rewrite F.",
                        "VernacExtend",
                        "6df8c10c25971db82981aba92c1e0c52d940c7f9"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "destruct (In_dec peq pc (successors instr)).",
                        "VernacExtend",
                        "e790d89be297d311a0ceb73958e5d8a85360a305"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "eapply no_self_loop; eauto.",
                        "VernacExtend",
                        "1a1eb290fb31d1e779b79b58273d24211b37eab9"
                    ]
                },
                {
                    "command": [
                        "left; auto.",
                        "VernacExtend",
                        "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
                    ]
                },
                {
                    "command": [
                        "elim (INV2 n); intro.",
                        "VernacExtend",
                        "212f5135c0ceff6f725e1462ffe2781d35fc0877"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "apply V.",
                        "VernacExtend",
                        "3c3c08d783f697fa1e1bf5ea373c5e9c29d0ad17"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "assert (INV3: forall s instr', code!n = Some instr' -> In s (successors instr') -> st1.(aval)!!s = res!!s).",
                        "VernacExtend",
                        "7d7cf205337f90990ab85b9069aa6df82a21e92b"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim (U s); intros C D.",
                        "VernacExtend",
                        "b33bcfc378491d2c9fa2f54ec9b9f899c851315c"
                    ]
                },
                {
                    "command": [
                        "rewrite D.",
                        "VernacExtend",
                        "c8b2ecfe60096f3f4842362d970cc94fbb2c0ef5"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "destruct (In_dec peq s (successors instr)).",
                        "VernacExtend",
                        "bd45554782b6018705d2606cc64fc7c5f897515e"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "eapply multiple_predecessors with (n1 := pc) (n2 := n); eauto.",
                        "VernacExtend",
                        "e0ad03bbffe379946f152413fcf77dbd46db7249"
                    ]
                },
                {
                    "command": [
                        "left; auto.",
                        "VernacExtend",
                        "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
                    ]
                },
                {
                    "command": [
                        "destruct (In_dec peq n (successors instr)).",
                        "VernacExtend",
                        "d8deb603990831e574c9721f6f11582606ca37e9"
                    ]
                },
                {
                    "command": [
                        "destruct (basic_block_map n) eqn:BB.",
                        "VernacExtend",
                        "95070df997cabef6a95a32dfb10ab5fc5abfa03e"
                    ]
                },
                {
                    "command": [
                        "right; intros.",
                        "VernacExtend",
                        "55f32a4c85976dbf403d59803ef666837ed695da"
                    ]
                },
                {
                    "command": [
                        "elim (U n); intros C D.",
                        "VernacExtend",
                        "e68f43816f7cb6a8f0ef269b27eeec9ecc213fd9"
                    ]
                },
                {
                    "command": [
                        "rewrite D.",
                        "VernacExtend",
                        "c8b2ecfe60096f3f4842362d970cc94fbb2c0ef5"
                    ]
                },
                {
                    "command": [
                        "erewrite INV3; eauto.",
                        "VernacExtend",
                        "9e830400d8f193fcc024f1c3f5a46df05b62fe3e"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "elim (U n); intros C D.",
                        "VernacExtend",
                        "e68f43816f7cb6a8f0ef269b27eeec9ecc213fd9"
                    ]
                },
                {
                    "command": [
                        "elim (C i BB); intros.",
                        "VernacExtend",
                        "4a5027c1df3dcd53469c25eb5437ac489aa85090"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "right; intros.",
                        "VernacExtend",
                        "55f32a4c85976dbf403d59803ef666837ed695da"
                    ]
                },
                {
                    "command": [
                        "elim (U n); intros C D.",
                        "VernacExtend",
                        "e68f43816f7cb6a8f0ef269b27eeec9ecc213fd9"
                    ]
                },
                {
                    "command": [
                        "rewrite D.",
                        "VernacExtend",
                        "c8b2ecfe60096f3f4842362d970cc94fbb2c0ef5"
                    ]
                },
                {
                    "command": [
                        "erewrite INV3; eauto.",
                        "VernacExtend",
                        "9e830400d8f193fcc024f1c3f5a46df05b62fe3e"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "propagate_successors_invariant_2",
            "line_nb": 942,
            "steps": [
                {
                    "command": [
                        "intros until rem.",
                        "VernacExtend",
                        "f8b10baa17d4f352fc69740c83a1f4f0285446af"
                    ]
                },
                {
                    "command": [
                        "intros CODE [INV1 INV2].",
                        "VernacExtend",
                        "cf58159a2fee2ade1d82ec3b20bddd0302b83881"
                    ]
                },
                {
                    "command": [
                        "simpl in INV1.",
                        "VernacExtend",
                        "a2084242dd0057d88c5571861323b0cc34669161"
                    ]
                },
                {
                    "command": [
                        "simpl in INV2.",
                        "VernacExtend",
                        "98318fc43d6e9743160d1b88e3203800905dcadc"
                    ]
                },
                {
                    "command": [
                        "split; simpl; intros.",
                        "VernacExtend",
                        "5cad19818f83524f7335adfda0a051ad1cf2a115"
                    ]
                },
                {
                    "command": [
                        "apply INV1; auto.",
                        "VernacExtend",
                        "f706f46c315528fdb7a2da97e2b82416de2ac0fb"
                    ]
                },
                {
                    "command": [
                        "destruct (INV2 n) as [[U | U] | U].",
                        "VernacExtend",
                        "9aae6196d978602f8fceff5a79cc5f3b688c9193"
                    ]
                },
                {
                    "command": [
                        "subst n.",
                        "VernacExtend",
                        "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
                    ]
                },
                {
                    "command": [
                        "right; intros; congruence.",
                        "VernacExtend",
                        "5ba97c6295c5eff57b55cbcefa0e73a9b1a35d91"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "initial_state_invariant",
            "line_nb": 955,
            "steps": [
                {
                    "command": [
                        "split; simpl; intros.",
                        "VernacExtend",
                        "5cad19818f83524f7335adfda0a051ad1cf2a115"
                    ]
                },
                {
                    "command": [
                        "apply PMap.gi.",
                        "VernacExtend",
                        "aa82ccbe8ae260bd9bc5882c4567d0c2a3f0d464"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite PMap.gi.",
                        "VernacExtend",
                        "d23edc4a518a5ac9d74f450c2a21323243964877"
                    ]
                },
                {
                    "command": [
                        "apply L.top_ge.",
                        "VernacExtend",
                        "00627d07a647f04375c421c357b3c9692afbba77"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "propagate_successors_P",
            "line_nb": 999,
            "steps": [
                {
                    "command": [
                        "induction succs; simpl; intros.",
                        "VernacExtend",
                        "23016b3b41f0bea8923fae49cc5d18202405321f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "case (bb a).",
                        "VernacExtend",
                        "d78b2fc7f5ba0994c1d5738c83d73356c26a0514"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply IHsuccs.",
                        "VernacExtend",
                        "7988b56ebd613b91c9c538b4e0e5face6ac9d530"
                    ]
                },
                {
                    "command": [
                        "red; simpl; intros.",
                        "VernacExtend",
                        "629095e96b1a8bc7172736d3dfde387c11fb3564"
                    ]
                },
                {
                    "command": [
                        "rewrite PMap.gsspec.",
                        "VernacExtend",
                        "208df7f9699f271a00c45eb42e79661332f7bd43"
                    ]
                },
                {
                    "command": [
                        "case (peq pc a); intro.",
                        "VernacExtend",
                        "b1bf50baa714a71f9e3063cb2c536f70aca1050c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empty_spec",
            "line_nb": 1042,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply PHeap.In_empty.",
                        "VernacExtend",
                        "c173f7b8f61d53665e245f7083fc5c87b1686379"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_spec",
            "line_nb": 1046,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite PHeap.In_insert.",
                        "VernacExtend",
                        "6d3cf4e905fc92ede39f013a80a10116d34b731e"
                    ]
                },
                {
                    "command": [
                        "unfold In.",
                        "VernacExtend",
                        "d7a2e438ac145b96769372b3253da28246b60614"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pick_none",
            "line_nb": 1052,
            "steps": [
                {
                    "command": [
                        "intros until n; unfold pick.",
                        "VernacExtend",
                        "8dd42f226660b08b570749929ce43cc54b2f260a"
                    ]
                },
                {
                    "command": [
                        "caseEq (PHeap.findMax s); intros.",
                        "VernacExtend",
                        "f2f64eca94441c29c8b724ed4358077173979281"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "apply PHeap.findMax_empty.",
                        "VernacExtend",
                        "3126836e8db562e2c0701b27266feed6b86e1128"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pick_some",
            "line_nb": 1059,
            "steps": [
                {
                    "command": [
                        "intros until s'; unfold pick.",
                        "VernacExtend",
                        "7e25811252bf8a866240b74b424e3bd1bd813aa7"
                    ]
                },
                {
                    "command": [
                        "caseEq (PHeap.findMax s); intros.",
                        "VernacExtend",
                        "f2f64eca94441c29c8b724ed4358077173979281"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "generalize (PHeap.In_deleteMax s n n' H).",
                        "VernacExtend",
                        "ff287cc70ab22260183f7b9d5708a54a2d8f47b4"
                    ]
                },
                {
                    "command": [
                        "unfold In.",
                        "VernacExtend",
                        "d7a2e438ac145b96769372b3253da28246b60614"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "all_nodes_spec",
            "line_nb": 1068,
            "steps": [
                {
                    "command": [
                        "intros A code n instr.",
                        "VernacExtend",
                        "6ccac1eabca138260a2218037ccd08d535fdd3d1"
                    ]
                },
                {
                    "command": [
                        "apply PTree_Properties.fold_rec with (P := fun m set => m!n = Some instr -> In n set).",
                        "VernacExtend",
                        "e3f5b1346cea291ae66b63ca06f3e613a1240e74"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gempty.",
                        "VernacExtend",
                        "02ad4f08527ee6f058bb5b2fc6b52855b65cf49f"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gsspec in H2.",
                        "VernacExtend",
                        "b493a8c2dafa18120a204a32ee0ef517ce5e4f65"
                    ]
                },
                {
                    "command": [
                        "rewrite add_spec.",
                        "VernacExtend",
                        "f9ada7608d751c021c4ce84e3f9762a0852e6c66"
                    ]
                },
                {
                    "command": [
                        "destruct (peq n k).",
                        "VernacExtend",
                        "a81eb2b5c7f677f80dd9edaf3415bd491d53e2c1"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}