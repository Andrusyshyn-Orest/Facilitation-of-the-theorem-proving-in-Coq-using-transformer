{
    "filename": "cparser/MenhirLib/Interpreter_safe.v",
    "coq_project": "CompCert",
    "vernac_cmds": [
        [
            "Require Import Streams.",
            "VernacRequire",
            "a5434de7332fb37ff7339d156041eb614016dee2"
        ],
        [
            "Require Import Equality.",
            "VernacRequire",
            "a9ca6ef4d37d26f9652230a7202252051bf9ebf7"
        ],
        [
            "Require Import List.",
            "VernacRequire",
            "d9bcce4a390afeb160107bf87c6f7abe3d82c6d6"
        ],
        [
            "Require Import Syntax.",
            "VernacRequire",
            "f7333e1bc90f5c9993df336e6bf762d9d566cbfe"
        ],
        [
            "Require Import Alphabet.",
            "VernacRequire",
            "319f2088e96907602758beab43ff96f8fdb554b7"
        ],
        [
            "Require Grammar.",
            "VernacRequire",
            "92fc01aba52a6fd52138561977941637609c55ad"
        ],
        [
            "Require Automaton.",
            "VernacRequire",
            "2a0cbee8eee90ef23660cd2aaf73b263992155b4"
        ],
        [
            "Require Validator_safe.",
            "VernacRequire",
            "d4e60fab768d7f0b5cc5f265ac8e0415b486896f"
        ],
        [
            "Require Interpreter.",
            "VernacRequire",
            "29de65c2b002d4b1469d8140d3ea63750ffa2bcd"
        ],
        [
            "Module Make(Import A:Automaton.T) (Import Inter:Interpreter.T A).",
            "VernacDefineModule",
            "32bf62f5a73315f2e0f450006f74f01c2e8a6255"
        ],
        [
            "Module Import Valid := Validator_safe.Make A.",
            "VernacDefineModule",
            "fcb449d349e220312abbd3dfe678916653599fd0"
        ],
        [
            "Section Safety_proof.",
            "VernacBeginSection",
            "d9545563764b13fc1c8ce4590493e454dea91abf"
        ],
        [
            "Hypothesis safe: safe.",
            "VernacAssumption",
            "c169710212e631c50cbbf744e955ab74ecf173f9"
        ],
        [
            "Proposition shift_head_symbs: shift_head_symbs.",
            "VernacStartTheoremProof",
            "1c31dbd4840a2c8c987b55384f11f29c29515b63"
        ],
        [
            "pose proof safe; unfold Valid.safe in H; intuition.",
            "VernacExtend",
            "257e004c94e68440221c4bee66cc3f0eaf914f4f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Proposition goto_head_symbs: goto_head_symbs.",
            "VernacStartTheoremProof",
            "0fafe191ea94eec3868a70d6effc8d2c0353a383"
        ],
        [
            "pose proof safe; unfold Valid.safe in H; intuition.",
            "VernacExtend",
            "257e004c94e68440221c4bee66cc3f0eaf914f4f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Proposition shift_past_state: shift_past_state.",
            "VernacStartTheoremProof",
            "1ddad4e973f31b319dd574ba8d306cee1befdad3"
        ],
        [
            "pose proof safe; unfold Valid.safe in H; intuition.",
            "VernacExtend",
            "257e004c94e68440221c4bee66cc3f0eaf914f4f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Proposition goto_past_state: goto_past_state.",
            "VernacStartTheoremProof",
            "60d0c06495fd2206bef3d74205c4c8bea4e42d5a"
        ],
        [
            "pose proof safe; unfold Valid.safe in H; intuition.",
            "VernacExtend",
            "257e004c94e68440221c4bee66cc3f0eaf914f4f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Proposition reduce_ok: reduce_ok.",
            "VernacStartTheoremProof",
            "46c2248867589500fc342984c48c4ef985ea37d9"
        ],
        [
            "pose proof safe; unfold Valid.safe in H; intuition.",
            "VernacExtend",
            "257e004c94e68440221c4bee66cc3f0eaf914f4f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variable init : initstate.",
            "VernacAssumption",
            "6ac82c73d0d5e65173bb7d8dcef28295cadcb7ed"
        ],
        [
            "Definition state_stack_of_stack (stack:stack) := (List.map (fun cell:sigT noninitstate_type => singleton_state_pred (projT1 cell)) stack ++ [singleton_state_pred init])%list.",
            "VernacDefinition",
            "93efc680dd62031b66f19ec04f969bc4d2c41e11"
        ],
        [
            "Definition symb_stack_of_stack (stack:stack) := List.map (fun cell:sigT noninitstate_type => last_symb_of_non_init_state (projT1 cell)) stack.",
            "VernacDefinition",
            "efd29eb04348d9d06ddb76b2d82c84475a5fd5a9"
        ],
        [
            "Inductive stack_invariant: stack -> Prop := | stack_invariant_constr: forall stack, prefix (head_symbs_of_state (state_of_stack init stack)) (symb_stack_of_stack stack) -> prefix_pred (head_states_of_state (state_of_stack init stack)) (state_stack_of_stack stack) -> stack_invariant_next stack -> stack_invariant stack with stack_invariant_next: stack -> Prop := | stack_invariant_next_nil: stack_invariant_next [] | stack_invariant_next_cons: forall state_cur st stack_rec, stack_invariant stack_rec -> stack_invariant_next (existT _ state_cur st::stack_rec).",
            "VernacInductive",
            "dac3d6b5be7699de680e86d00df8040822619659"
        ],
        [
            "Lemma pop_stack_invariant_conserved (symbols_to_pop:list symbol) (stack_cur:stack) A action: stack_invariant stack_cur -> prefix symbols_to_pop (head_symbs_of_state (state_of_stack init stack_cur)) -> match pop symbols_to_pop stack_cur (A:=A) action with | OK (stack_new, _) => stack_invariant stack_new /\\ state_valid_after_pop (state_of_stack init stack_new) symbols_to_pop (head_states_of_state (state_of_stack init stack_cur)) | Err => False end.",
            "VernacStartTheoremProof",
            "3be2fe2d1d1c30fcc992be7a30d79b39b579dca8"
        ],
        [
            "Proof with eauto.",
            "VernacProof",
            "12721c224a5e1fa232c2328aabfe1f5101d235c4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof H.",
            "VernacExtend",
            "1c045843d6c43435afc26dc931a7660694e7c703"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "revert H H0 H1 H2 H3.",
            "VernacExtend",
            "90fa34b11d331adbc0d12c73057b2aa6c21e9c01"
        ],
        [
            "generalize (head_symbs_of_state (state_of_stack init stack0)).",
            "VernacExtend",
            "d49527142a54e4263e69c8d5db26933181819742"
        ],
        [
            "generalize (head_states_of_state (state_of_stack init stack0)).",
            "VernacExtend",
            "f52d8d572dc9ab3f450a5eb016278e5d533b7b31"
        ],
        [
            "revert stack0 A action.",
            "VernacExtend",
            "8cb94ad78438194cc20085a7374964ec99c6b05f"
        ],
        [
            "induction symbols_to_pop; intros.",
            "VernacExtend",
            "b0fd6f54bf91afd098c0008c3c68608e5912ee3c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split...",
            "VernacExtend",
            "baadab085aba401319b7eae3380d34307a7b74d2"
        ],
        [
            "destruct l; constructor.",
            "VernacExtend",
            "4de3eef39be788eb23e46e8386b80c2da953c30e"
        ],
        [
            "inversion H2; subst.",
            "VernacExtend",
            "cbe105a5addb129fa1e578ba8ef36c4763179006"
        ],
        [
            "specialize (H7 (state_of_stack init stack0)).",
            "VernacExtend",
            "ae934770862a8520c1df6ef30589726007e90070"
        ],
        [
            "destruct (f2 (state_of_stack init stack0)) as [] eqn:? ...",
            "VernacExtend",
            "6324bd925cc6c77f24b2eae201ae3bdfe3598261"
        ],
        [
            "destruct stack0 as [|[]]; simpl in *.",
            "VernacExtend",
            "bff538e18bcbc306811de11cccb68c86bcf5fd19"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inversion H6; subst.",
            "VernacExtend",
            "4ecd5ab1ba421538ab57ac2b2f74cb44d44ef279"
        ],
        [
            "unfold singleton_state_pred in Heqb0.",
            "VernacExtend",
            "d5035e5b2cabfa3e928e9c16638d7906b3bd6067"
        ],
        [
            "now rewrite compare_refl in Heqb0; discriminate.",
            "VernacExtend",
            "bdcce67c32a98311ea3a9d9b3f24ff096e053701"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inversion H6; subst.",
            "VernacExtend",
            "4ecd5ab1ba421538ab57ac2b2f74cb44d44ef279"
        ],
        [
            "unfold singleton_state_pred in Heqb0.",
            "VernacExtend",
            "d5035e5b2cabfa3e928e9c16638d7906b3bd6067"
        ],
        [
            "now rewrite compare_refl in Heqb0; discriminate.",
            "VernacExtend",
            "bdcce67c32a98311ea3a9d9b3f24ff096e053701"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct stack0 as [|[]]; unfold pop.",
            "VernacExtend",
            "bbb0170ced3d621d01014269bf567d62911a298f"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inversion H0; subst.",
            "VernacExtend",
            "9d4a402d7b2b14ad44ce7fa1fc818e48d61f4474"
        ],
        [
            "now inversion H.",
            "VernacExtend",
            "d72febf07866235ab850e0be52d03df112cb9e8c"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "fold pop.",
            "VernacExtend",
            "d807d7162539a78670d5b526ba3e2d58ed0a80e3"
        ],
        [
            "destruct (compare_eqdec (last_symb_of_non_init_state x) a).",
            "VernacExtend",
            "383c6842f5f172c887737fe0dcad4468007930ef"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "inversion H0; subst.",
            "VernacExtend",
            "9d4a402d7b2b14ad44ce7fa1fc818e48d61f4474"
        ],
        [
            "clear H0.",
            "VernacExtend",
            "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
        ],
        [
            "inversion H; subst.",
            "VernacExtend",
            "123ebc73101dcac5781200440a60232218464ea1"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "dependent destruction H3; simpl.",
            "VernacExtend",
            "034b2572180272c671bb3fa32ce95ad0bf368548"
        ],
        [
            "assert (prefix_pred (List.tl l) (state_stack_of_stack stack0)).",
            "VernacExtend",
            "677031f94ae385136fd0e12ee88dc119d8917573"
        ],
        [
            "unfold tl; destruct l; [constructor | inversion H2]...",
            "VernacExtend",
            "89956a2fbd91e6c510e603d7ce8781e628af4aef"
        ],
        [
            "pose proof H.",
            "VernacExtend",
            "1c045843d6c43435afc26dc931a7660694e7c703"
        ],
        [
            "destruct H3.",
            "VernacExtend",
            "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
        ],
        [
            "specialize (IHsymbols_to_pop stack0 A (action0 n) _ _ H4 H7 H H0 H6).",
            "VernacExtend",
            "3f11b106c9941db4d5d7c5719b2f219fed72a150"
        ],
        [
            "revert IHsymbols_to_pop.",
            "VernacExtend",
            "b63bcdbca28a538b1bf1da9990378f4c16eee3c8"
        ],
        [
            "fold (noninitstate_type x); generalize (pop symbols_to_pop stack0 (action0 n)).",
            "VernacExtend",
            "e967f2917d014d16193d1a87c1847abae9d288fa"
        ],
        [
            "destruct r as [|[]]; intuition...",
            "VernacExtend",
            "e5900ae0520faebc96d706691c965ccb98b8addf"
        ],
        [
            "destruct l; constructor...",
            "VernacExtend",
            "cc3447290095cbbe5a5e389971f11cc9dc335481"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply n0.",
            "VernacExtend",
            "80b3cdc19df56c74da17c07082759ca9a244c8ca"
        ],
        [
            "inversion H0; subst.",
            "VernacExtend",
            "9d4a402d7b2b14ad44ce7fa1fc818e48d61f4474"
        ],
        [
            "inversion H; subst...",
            "VernacExtend",
            "59a1a04d27b7ec50c4c7d14f816eb744d18645bf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prefix_ass: forall (l1 l2 l3:list symbol), prefix l1 l2 -> prefix l2 l3 -> prefix l1 l3.",
            "VernacStartTheoremProof",
            "5e9b2dd832c235fab976877f89d24708db66ded7"
        ],
        [
            "induction l1; intros.",
            "VernacExtend",
            "fb1b27cb856c7812b6af97a650698a744c9f86bc"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "inversion H; subst.",
            "VernacExtend",
            "123ebc73101dcac5781200440a60232218464ea1"
        ],
        [
            "inversion H0; subst.",
            "VernacExtend",
            "9d4a402d7b2b14ad44ce7fa1fc818e48d61f4474"
        ],
        [
            "constructor; eauto.",
            "VernacExtend",
            "e0e7f3b9c455b20aabae95754dcd431c74b5b789"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prefix_pred_ass: forall (l1 l2 l3:list (state->bool)), prefix_pred l1 l2 -> prefix_pred l2 l3 -> prefix_pred l1 l3.",
            "VernacStartTheoremProof",
            "12e88305542eaf62791c69cad1952b71aaa1b8b9"
        ],
        [
            "induction l1; intros.",
            "VernacExtend",
            "fb1b27cb856c7812b6af97a650698a744c9f86bc"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "inversion H; subst.",
            "VernacExtend",
            "123ebc73101dcac5781200440a60232218464ea1"
        ],
        [
            "inversion H0; subst.",
            "VernacExtend",
            "9d4a402d7b2b14ad44ce7fa1fc818e48d61f4474"
        ],
        [
            "constructor; eauto.",
            "VernacExtend",
            "e0e7f3b9c455b20aabae95754dcd431c74b5b789"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "specialize (H3 x).",
            "VernacExtend",
            "2ebc1440efab7b41f4f4f8b1757c3b61fd8bf779"
        ],
        [
            "specialize (H4 x).",
            "VernacExtend",
            "55ae1fe55f9095c7de85952455cb4df4ae4c37aa"
        ],
        [
            "destruct (f0 x); simpl in *; intuition.",
            "VernacExtend",
            "eef62ba8ab160dd8039bfe93d31f35b7d531761a"
        ],
        [
            "rewrite H4 in H3; intuition.",
            "VernacExtend",
            "c7ef647be5aa28a1823b24fa24d8c4d3bc8b1272"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma reduce_step_stack_invariant_conserved stack prod buff: stack_invariant stack -> valid_for_reduce (state_of_stack init stack) prod -> match reduce_step init stack prod buff with | OK (Fail_sr | Accept_sr _ _) => True | OK (Progress_sr stack_new _) => stack_invariant stack_new | Err => False end.",
            "VernacStartTheoremProof",
            "e0dd2b9300e52b5e1dffd9f6dd6009e038f35fbe"
        ],
        [
            "Proof with eauto.",
            "VernacProof",
            "12721c224a5e1fa232c2328aabfe1f5101d235c4"
        ],
        [
            "unfold valid_for_reduce.",
            "VernacExtend",
            "58e0480d55aa3a6182f763974c1e2dd7c75a4f16"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "unfold reduce_step.",
            "VernacExtend",
            "121a8708fbd406b3bedc85e55c15c7d593fbe398"
        ],
        [
            "pose proof (pop_stack_invariant_conserved (prod_rhs_rev prod) stack _ (prod_action' prod)).",
            "VernacExtend",
            "e3971f66eb7c5b52e3a43cf04413eb6f03e7a7aa"
        ],
        [
            "destruct (pop (prod_rhs_rev prod) stack (prod_action' prod)) as [|[]].",
            "VernacExtend",
            "a95bc394143b42e2e81e2e0a59951ba9c2ef0167"
        ],
        [
            "apply H0...",
            "VernacExtend",
            "8e32eae512d8ca08babd65a2984df82f5a26a9ad"
        ],
        [
            "destruct H0...",
            "VernacExtend",
            "13ba29ac2320e3d9930fee330fd500bf0e67ba1e"
        ],
        [
            "pose proof (goto_head_symbs (state_of_stack init s) (prod_lhs prod)).",
            "VernacExtend",
            "72fc4b3c970db303bf7dfdd8369f7505cba590bd"
        ],
        [
            "pose proof (goto_past_state (state_of_stack init s) (prod_lhs prod)).",
            "VernacExtend",
            "4657d179609842c5c2b42f8fb6910d4ed929eca3"
        ],
        [
            "unfold bind2.",
            "VernacExtend",
            "7c5aadeeb54bb8d1852037adfff078be129262b4"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "specialize (H2 _ H3)...",
            "VernacExtend",
            "3fbb63b68552565e0d35ba61f5ccf8415054cf40"
        ],
        [
            "destruct (goto_table (state_of_stack init stack0) (prod_lhs prod)) as [[]|].",
            "VernacExtend",
            "de6a21f4425b5d9627fa59fcd15989de4a64ef15"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "eapply prefix_ass...",
            "VernacExtend",
            "26f96da219767eb536bc4ffb0ab5fc0b71e4c9e0"
        ],
        [
            "unfold state_stack_of_stack; simpl; constructor.",
            "VernacExtend",
            "3c9844476e616073263d314dbdaa14a880ad6205"
        ],
        [
            "intro; destruct (singleton_state_pred x x0); reflexivity.",
            "VernacExtend",
            "fb51f1c1ad18b3f16c0c0560fa3496445b4d7c0e"
        ],
        [
            "eapply prefix_pred_ass...",
            "VernacExtend",
            "cd2a0dd6b22716ee906b309567442ba98c002f72"
        ],
        [
            "constructor...",
            "VernacExtend",
            "d0bfc36e567ee0d04a38f60d9c877ab81f264de4"
        ],
        [
            "constructor...",
            "VernacExtend",
            "d0bfc36e567ee0d04a38f60d9c877ab81f264de4"
        ],
        [
            "destruct stack0 as [|[]]...",
            "VernacExtend",
            "34417e04ce3d273b5ad6c69f2b03f6c72c0efde7"
        ],
        [
            "destruct (compare_eqdec (prod_lhs prod) (start_nt init))...",
            "VernacExtend",
            "c8d17838e249dab5eb94cd8434a91a21f36ce3b9"
        ],
        [
            "apply n, H2, eq_refl.",
            "VernacExtend",
            "1ee538207a2b466d8621ee2483815443e6893f52"
        ],
        [
            "apply H2, eq_refl.",
            "VernacExtend",
            "62be62b2ed4ed6fc0b6c6e70fdec5c5767a2c188"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma step_stack_invariant_conserved (stack:stack) buffer: stack_invariant stack -> match step init stack buffer with | OK (Fail_sr | Accept_sr _ _) => True | OK (Progress_sr stack_new _) => stack_invariant stack_new | Err => False end.",
            "VernacStartTheoremProof",
            "19f75c71bf42e0852f3e00332b91ffa174bd6ba4"
        ],
        [
            "Proof with eauto.",
            "VernacProof",
            "12721c224a5e1fa232c2328aabfe1f5101d235c4"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold step.",
            "VernacExtend",
            "269f560ac59b066a6926b1cfe0106d1b6bd8ed52"
        ],
        [
            "pose proof (shift_head_symbs (state_of_stack init stack)).",
            "VernacExtend",
            "62ae9caf39a7073816d7fc2410e009efd9511fde"
        ],
        [
            "pose proof (shift_past_state (state_of_stack init stack)).",
            "VernacExtend",
            "17e20ba6d1bc162981f216275b81153530f895e3"
        ],
        [
            "pose proof (reduce_ok (state_of_stack init stack)).",
            "VernacExtend",
            "71ed4ef16fc56ad0ecb81f5d46f370b02aa5d81d"
        ],
        [
            "destruct (action_table (state_of_stack init stack)).",
            "VernacExtend",
            "d78b1d18eaca08f6b0a4037937d45a88f7619316"
        ],
        [
            "apply reduce_step_stack_invariant_conserved...",
            "VernacExtend",
            "f9c8020732bd54f67494766b3a9f9a2e0d940f08"
        ],
        [
            "destruct buffer as [[]]; simpl.",
            "VernacExtend",
            "9e2cc962024b638f36537b6ea1bb0c107d78dd4e"
        ],
        [
            "specialize (H0 x); specialize (H1 x); specialize (H2 x).",
            "VernacExtend",
            "91e83da12a0b54f75bc05dc27d6fbf52a8d07291"
        ],
        [
            "destruct (l x)...",
            "VernacExtend",
            "4122c353b769bf1798f0bbf69737a37228f6a5ce"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "unfold state_of_stack.",
            "VernacExtend",
            "7bfe9a1c32387132f2c3e693cdb299c3f42fe851"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "eapply prefix_ass...",
            "VernacExtend",
            "26f96da219767eb536bc4ffb0ab5fc0b71e4c9e0"
        ],
        [
            "unfold state_stack_of_stack; simpl; constructor.",
            "VernacExtend",
            "3c9844476e616073263d314dbdaa14a880ad6205"
        ],
        [
            "intro; destruct (singleton_state_pred s0 x0)...",
            "VernacExtend",
            "68f6143b63169bfed10b63aba094b9d597d0b5c9"
        ],
        [
            "eapply prefix_pred_ass...",
            "VernacExtend",
            "cd2a0dd6b22716ee906b309567442ba98c002f72"
        ],
        [
            "constructor...",
            "VernacExtend",
            "d0bfc36e567ee0d04a38f60d9c877ab81f264de4"
        ],
        [
            "constructor...",
            "VernacExtend",
            "d0bfc36e567ee0d04a38f60d9c877ab81f264de4"
        ],
        [
            "apply reduce_step_stack_invariant_conserved...",
            "VernacExtend",
            "f9c8020732bd54f67494766b3a9f9a2e0d940f08"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem parse_no_err buffer n_steps: parse init buffer n_steps <> Err.",
            "VernacStartTheoremProof",
            "cb54b9eade4e423fe114986c358e80b08a885022"
        ],
        [
            "Proof with eauto.",
            "VernacProof",
            "12721c224a5e1fa232c2328aabfe1f5101d235c4"
        ],
        [
            "unfold parse.",
            "VernacExtend",
            "fd943d97046765cb1c99272cab4f4e6d4a19f64b"
        ],
        [
            "assert (stack_invariant []).",
            "VernacExtend",
            "7a52715b23e704f50d8f5504ce3f36e62e3a018f"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "unfold state_stack_of_stack; simpl; constructor.",
            "VernacExtend",
            "3c9844476e616073263d314dbdaa14a880ad6205"
        ],
        [
            "intro; destruct (singleton_state_pred init x)...",
            "VernacExtend",
            "cee685af0a3efd6336d40f789088309e03e5943b"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "revert H.",
            "VernacExtend",
            "6842e040dd98a07b1eb54bbabc9c3f1076566a9a"
        ],
        [
            "generalize buffer ([]:stack).",
            "VernacExtend",
            "855dd784a4edc24d6191ade319021b4d3c51a4e1"
        ],
        [
            "induction n_steps; simpl.",
            "VernacExtend",
            "22d4691fc21fb68bd9f987da3cbe88c970eac827"
        ],
        [
            "now discriminate.",
            "VernacExtend",
            "bd7cb1a340b89a5be3c8c40afb14f0431696f0ff"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (step_stack_invariant_conserved s buffer0 H).",
            "VernacExtend",
            "0b53c29f8841beeb3ef30e21e95b55a6eb736c03"
        ],
        [
            "destruct (step init s buffer0) as [|[]]; simpl...",
            "VernacExtend",
            "aa59ff0f58377d8bc95c4ed1c2bdbd1231833a23"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition parse_with_safe (buffer:Stream token) (n_steps:nat): parse_result init.",
            "VernacDefinition",
            "cbbdd907f6c472ff0cb9d6038cdf020a5221ebbb"
        ],
        [
            "Proof with eauto.",
            "VernacProof",
            "12721c224a5e1fa232c2328aabfe1f5101d235c4"
        ],
        [
            "pose proof (parse_no_err buffer n_steps).",
            "VernacExtend",
            "508aed6ccf9b695a6d274efc40e37ba96ab65a2f"
        ],
        [
            "destruct (parse init buffer n_steps)...",
            "VernacExtend",
            "a42db159fc372498569b58462c2d137f8111d0c0"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End Safety_proof.",
            "VernacEndSegment",
            "6c55bdd7be403533282fd3179b9dfaea44316972"
        ],
        [
            "End Make.",
            "VernacEndSegment",
            "158dcf795fe84f422408437686b9ec9e7417690b"
        ]
    ],
    "proofs": [
        {
            "name": "shift_head_symbs",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "pose proof safe; unfold Valid.safe in H; intuition.",
                        "VernacExtend",
                        "257e004c94e68440221c4bee66cc3f0eaf914f4f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "goto_head_symbs",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "pose proof safe; unfold Valid.safe in H; intuition.",
                        "VernacExtend",
                        "257e004c94e68440221c4bee66cc3f0eaf914f4f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shift_past_state",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "pose proof safe; unfold Valid.safe in H; intuition.",
                        "VernacExtend",
                        "257e004c94e68440221c4bee66cc3f0eaf914f4f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "goto_past_state",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "pose proof safe; unfold Valid.safe in H; intuition.",
                        "VernacExtend",
                        "257e004c94e68440221c4bee66cc3f0eaf914f4f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reduce_ok",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "pose proof safe; unfold Valid.safe in H; intuition.",
                        "VernacExtend",
                        "257e004c94e68440221c4bee66cc3f0eaf914f4f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prefix_ass",
            "line_nb": 85,
            "steps": [
                {
                    "command": [
                        "induction l1; intros.",
                        "VernacExtend",
                        "fb1b27cb856c7812b6af97a650698a744c9f86bc"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "inversion H; subst.",
                        "VernacExtend",
                        "123ebc73101dcac5781200440a60232218464ea1"
                    ]
                },
                {
                    "command": [
                        "inversion H0; subst.",
                        "VernacExtend",
                        "9d4a402d7b2b14ad44ce7fa1fc818e48d61f4474"
                    ]
                },
                {
                    "command": [
                        "constructor; eauto.",
                        "VernacExtend",
                        "e0e7f3b9c455b20aabae95754dcd431c74b5b789"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prefix_pred_ass",
            "line_nb": 92,
            "steps": [
                {
                    "command": [
                        "induction l1; intros.",
                        "VernacExtend",
                        "fb1b27cb856c7812b6af97a650698a744c9f86bc"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "inversion H; subst.",
                        "VernacExtend",
                        "123ebc73101dcac5781200440a60232218464ea1"
                    ]
                },
                {
                    "command": [
                        "inversion H0; subst.",
                        "VernacExtend",
                        "9d4a402d7b2b14ad44ce7fa1fc818e48d61f4474"
                    ]
                },
                {
                    "command": [
                        "constructor; eauto.",
                        "VernacExtend",
                        "e0e7f3b9c455b20aabae95754dcd431c74b5b789"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "specialize (H3 x).",
                        "VernacExtend",
                        "2ebc1440efab7b41f4f4f8b1757c3b61fd8bf779"
                    ]
                },
                {
                    "command": [
                        "specialize (H4 x).",
                        "VernacExtend",
                        "55ae1fe55f9095c7de85952455cb4df4ae4c37aa"
                    ]
                },
                {
                    "command": [
                        "destruct (f0 x); simpl in *; intuition.",
                        "VernacExtend",
                        "eef62ba8ab160dd8039bfe93d31f35b7d531761a"
                    ]
                },
                {
                    "command": [
                        "rewrite H4 in H3; intuition.",
                        "VernacExtend",
                        "c7ef647be5aa28a1823b24fa24d8c4d3bc8b1272"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}