{
    "filename": "cparser/MenhirLib/Tuples.v",
    "coq_project": "CompCert",
    "vernac_cmds": [
        [
            "Require Import List.",
            "VernacRequire",
            "d9bcce4a390afeb160107bf87c6f7abe3d82c6d6"
        ],
        [
            "Require Import Coq.Program.Syntax.",
            "VernacRequire",
            "244d191f384ef57a117d8c98dc2a7ae37012ec54"
        ],
        [
            "Require Import Equality.",
            "VernacRequire",
            "a9ca6ef4d37d26f9652230a7202252051bf9ebf7"
        ],
        [
            "Definition arrows_left: list Type -> Type -> Type := fold_left (fun A B => B -> A).",
            "VernacDefinition",
            "b400f3848f78068529164d6f34c9104c5a38571c"
        ],
        [
            "Definition arrows_right: Type -> list Type -> Type := fold_right (fun A B => A -> B).",
            "VernacDefinition",
            "5a40babcc96e793b5c773a0355eded40c90e8695"
        ],
        [
            "Fixpoint tuple (types : list Type) : Type := match types with | nil => unit | t::q => prod t (tuple q) end.",
            "VernacFixpoint",
            "a952f774d5cc63723dc430c2bf7f788bc9f17f13"
        ],
        [
            "Fixpoint uncurry {args:list Type} {res:Type}: arrows_left args res -> tuple args -> res := match args return forall res, arrows_left args res -> tuple args -> res with | [] => fun _ f _ => f | t::q => fun res f p => let (d, t) := p in (@uncurry q _ f t) d end res.",
            "VernacFixpoint",
            "32924fb427119406878d86dea17e509084551532"
        ],
        [
            "Lemma JMeq_eqrect: forall (U:Type) (a b:U) (P:U -> Type) (x:P a) (e:a=b), eq_rect a P x b e ~= x.",
            "VernacStartTheoremProof",
            "dd2aa51e21780db954640c2abcc2f21207aa7e22"
        ],
        [
            "destruct e.",
            "VernacExtend",
            "6785fac4a52839433f2a36a721f6e0fc71773d77"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "JMeq_eqrect",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "destruct e.",
                        "VernacExtend",
                        "6785fac4a52839433f2a36a721f6e0fc71773d77"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}