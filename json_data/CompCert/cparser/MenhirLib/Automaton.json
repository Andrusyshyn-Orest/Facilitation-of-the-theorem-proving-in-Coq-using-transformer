{
    "filename": "cparser/MenhirLib/Automaton.v",
    "coq_project": "CompCert",
    "vernac_cmds": [
        [
            "Require Grammar.",
            "VernacRequire",
            "92fc01aba52a6fd52138561977941637609c55ad"
        ],
        [
            "Require Import Orders.",
            "VernacRequire",
            "d67f88dc745fe90e97a6549f11c8ff812e3fb5ee"
        ],
        [
            "Require Export Alphabet.",
            "VernacRequire",
            "db8f6d744b95b72ef6898a93c91ba4ffb73a844d"
        ],
        [
            "Require Export List.",
            "VernacRequire",
            "d626cb98fe764077098989d26509c9f7407e0464"
        ],
        [
            "Require Export Syntax.",
            "VernacRequire",
            "b1092cf80d78c1b48cf1dfe1b097fc89289c382e"
        ],
        [
            "Module Type AutInit.",
            "VernacDeclareModuleType",
            "9084870aec708a270f972d4b97ad6c57fd6c12ea"
        ],
        [
            "Declare Module Gram:Grammar.T.",
            "VernacDeclareModule",
            "e883223edae39df84fa6b09fe98fb19f99c53017"
        ],
        [
            "Export Gram.",
            "VernacImport",
            "602f7e774990f0bf01a1af74c1af4e1304c8e5eb"
        ],
        [
            "Parameter noninitstate : Type.",
            "VernacAssumption",
            "d47f54c50c3d79751a2814f60aec409710ef3d34"
        ],
        [
            "Declare Instance NonInitStateAlph : Alphabet noninitstate.",
            "VernacInstance",
            "ff901b26d29585f7e821f1f70d368815813ac2de"
        ],
        [
            "Parameter initstate : Type.",
            "VernacAssumption",
            "f5d5c5ee90f59c812119c5c45faf68af00c3bdf4"
        ],
        [
            "Declare Instance InitStateAlph : Alphabet initstate.",
            "VernacInstance",
            "d705394b85617f831a6f4d7e1337722f8c2e346c"
        ],
        [
            "Parameter last_symb_of_non_init_state: noninitstate -> symbol.",
            "VernacAssumption",
            "2ac5921275e9453c6f8d26d87e49f80d167a6ec6"
        ],
        [
            "End AutInit.",
            "VernacEndSegment",
            "fd31f91d62e568fa72dea52ca2c5a7658b9c544a"
        ],
        [
            "Module Types(Import Init:AutInit).",
            "VernacDefineModule",
            "2e5bdfac0bc29a4f64cfa713fb49b86cdda9d85f"
        ],
        [
            "Inductive state := | Init: initstate -> state | Ninit: noninitstate -> state.",
            "VernacInductive",
            "558d26801c07a9c5113294e5a9af48e036ad7d8e"
        ],
        [
            "Program Instance StateAlph : Alphabet state := { AlphabetComparable := {| compare := fun x y => match x, y return comparison with | Init _, Ninit _ => Lt | Init x, Init y => compare x y | Ninit _, Init _ => Gt | Ninit x, Ninit y => compare x y end |}; AlphabetFinite := {| all_list := map Init all_list ++ map Ninit all_list |} }.",
            "VernacInstance",
            "e2709b9341687092691e4e89fd12c5227fe99c3e"
        ],
        [
            "Local Obligation Tactic := intros.",
            "VernacExtend",
            "cba84ce4c6ff42291624d3ee9666f82bce9f9925"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "destruct x, y; intuition; apply compare_antisym.",
            "VernacExtend",
            "fe3234935abd2e49f91894ffbe64798a2f965128"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "destruct x, y, z; intuition.",
            "VernacExtend",
            "a126ac49ba4c46f3f5bc6ea34d23ce1e43feb4cf"
        ],
        [
            "apply (compare_trans _ i0); intuition.",
            "VernacExtend",
            "fde83be46fd832b7518740cfe9552a21081edb6f"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "apply (compare_trans _ n0); intuition.",
            "VernacExtend",
            "e616098643bf45d143352caec6a150a6756c266b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "destruct x, y; intuition; try discriminate.",
            "VernacExtend",
            "b4900fb6d9e03b4237dbb73e7d808144f9ddf8e4"
        ],
        [
            "rewrite (compare_eq i i0); intuition.",
            "VernacExtend",
            "9eb5acb83d9c4478aa50cc1df5e5542f1db451bd"
        ],
        [
            "rewrite (compare_eq n n0); intuition.",
            "VernacExtend",
            "96d842331f18cd22c18f477f8786a72257e68a60"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "apply in_or_app; destruct x; intuition; [left|right]; apply in_map; apply all_list_forall.",
            "VernacExtend",
            "a0f1c81364e604e9bafe5c500bfc7cdba625f834"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Coercion Ninit : noninitstate >-> state.",
            "VernacCoercion",
            "f62d6149add43dc2abda2821d15d17d8ca801225"
        ],
        [
            "Coercion Init : initstate >-> state.",
            "VernacCoercion",
            "b18eb2d4f23c2783fc25be3aadd0690cf6f1e988"
        ],
        [
            "Inductive lookahead_action (term:terminal) := | Shift_act: forall s:noninitstate, T term = last_symb_of_non_init_state s -> lookahead_action term | Reduce_act: production -> lookahead_action term | Fail_act: lookahead_action term.",
            "VernacInductive",
            "74c25ae0c33c7562545a17672c9d97942758d5bb"
        ],
        [
            "Arguments Shift_act [term].",
            "VernacArguments",
            "90266e25e650efa08df11f7d4a5540d62849ea89"
        ],
        [
            "Arguments Reduce_act [term].",
            "VernacArguments",
            "bf5c3ab8bb07d954d58eed00af02e75d3d2ea95b"
        ],
        [
            "Arguments Fail_act [term].",
            "VernacArguments",
            "af3b77e30c4861b2f5e84f421005786f12ad4314"
        ],
        [
            "Inductive action := | Default_reduce_act: production -> action | Lookahead_act : (forall term:terminal, lookahead_action term) -> action.",
            "VernacInductive",
            "e37ffe47e3472722faeac9d5fcb126f4b7343b22"
        ],
        [
            "Record item := { prod_item: production; dot_pos_item: nat; lookaheads_item: list terminal }.",
            "VernacInductive",
            "41ac7c1603401b441c95c77d745e638ecee03abb"
        ],
        [
            "End Types.",
            "VernacEndSegment",
            "87d3ff0afbb37f98e2854c914a2ac7345ad86aa2"
        ],
        [
            "Module Type T.",
            "VernacDeclareModuleType",
            "18709602ad2aa67a64b22b7f0c3c272bf92b11c4"
        ],
        [
            "Include AutInit <+ Types.",
            "VernacInclude",
            "a8a5a4cc4d3b36a0a3d976615a3dd1e9982515fd"
        ],
        [
            "Module Export GramDefs := Grammar.Defs Gram.",
            "VernacDefineModule",
            "4df5d54f4aa4a675d17f05a080ac2551bd7955bb"
        ],
        [
            "Parameter start_nt: initstate -> nonterminal.",
            "VernacAssumption",
            "1b7ed4564a0807d29056e4ff5e1c4fb45d608bad"
        ],
        [
            "Parameter action_table: state -> action.",
            "VernacAssumption",
            "110742797c70a5d38d86321fba7b8eed9563ee4e"
        ],
        [
            "Parameter goto_table: state -> forall nt:nonterminal, option { s:noninitstate | NT nt = last_symb_of_non_init_state s }.",
            "VernacAssumption",
            "6a089b78188c743f550ac80bd15d3269b2716b6b"
        ],
        [
            "Parameter past_symb_of_non_init_state: noninitstate -> list symbol.",
            "VernacAssumption",
            "fbacc340828f9698269ea174934b5eb3a540c850"
        ],
        [
            "Parameter past_state_of_non_init_state: noninitstate -> list (state -> bool).",
            "VernacAssumption",
            "889b7d68477c3a5db9075995579556c28582d5c7"
        ],
        [
            "Parameter items_of_state: state -> list item.",
            "VernacAssumption",
            "3e0b4a0dd26ee3b63e1f7ad528319646db807362"
        ],
        [
            "Parameter nullable_nterm: nonterminal -> bool.",
            "VernacAssumption",
            "15c984203ffef6e0ef53de82044dd99910bd256b"
        ],
        [
            "Parameter first_nterm: nonterminal -> list terminal.",
            "VernacAssumption",
            "cfe83ba52d754a82bcf2284f74b072472f5d1bbb"
        ],
        [
            "End T.",
            "VernacEndSegment",
            "5f7f4e5b1207202de2b9b8fab051afb32f267d25"
        ]
    ],
    "proofs": [
        {
            "name": "StateAlph_obligation_1",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "destruct x, y; intuition; apply compare_antisym.",
                        "VernacExtend",
                        "fe3234935abd2e49f91894ffbe64798a2f965128"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "StateAlph_obligation_2",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "destruct x, y, z; intuition.",
                        "VernacExtend",
                        "a126ac49ba4c46f3f5bc6ea34d23ce1e43feb4cf"
                    ]
                },
                {
                    "command": [
                        "apply (compare_trans _ i0); intuition.",
                        "VernacExtend",
                        "fde83be46fd832b7518740cfe9552a21081edb6f"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "apply (compare_trans _ n0); intuition.",
                        "VernacExtend",
                        "e616098643bf45d143352caec6a150a6756c266b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "StateAlph_obligation_3",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "destruct x, y; intuition; try discriminate.",
                        "VernacExtend",
                        "b4900fb6d9e03b4237dbb73e7d808144f9ddf8e4"
                    ]
                },
                {
                    "command": [
                        "rewrite (compare_eq i i0); intuition.",
                        "VernacExtend",
                        "9eb5acb83d9c4478aa50cc1df5e5542f1db451bd"
                    ]
                },
                {
                    "command": [
                        "rewrite (compare_eq n n0); intuition.",
                        "VernacExtend",
                        "96d842331f18cd22c18f477f8786a72257e68a60"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "StateAlph_obligation_4",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "apply in_or_app; destruct x; intuition; [left|right]; apply in_map; apply all_list_forall.",
                        "VernacExtend",
                        "a0f1c81364e604e9bafe5c500bfc7cdba625f834"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}