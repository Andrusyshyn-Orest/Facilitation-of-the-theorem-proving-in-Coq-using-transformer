{
    "filename": "cparser/MenhirLib/Interpreter_complete.v",
    "coq_project": "CompCert",
    "vernac_cmds": [
        [
            "Require Import Streams.",
            "VernacRequire",
            "a5434de7332fb37ff7339d156041eb614016dee2"
        ],
        [
            "Require Import ProofIrrelevance.",
            "VernacRequire",
            "8c3238ee3e3ff3fa43974681c335fc84a4cb0fe8"
        ],
        [
            "Require Import Equality.",
            "VernacRequire",
            "a9ca6ef4d37d26f9652230a7202252051bf9ebf7"
        ],
        [
            "Require Import List.",
            "VernacRequire",
            "d9bcce4a390afeb160107bf87c6f7abe3d82c6d6"
        ],
        [
            "Require Import Syntax.",
            "VernacRequire",
            "f7333e1bc90f5c9993df336e6bf762d9d566cbfe"
        ],
        [
            "Require Import Alphabet.",
            "VernacRequire",
            "319f2088e96907602758beab43ff96f8fdb554b7"
        ],
        [
            "Require Import Arith.",
            "VernacRequire",
            "7f40051ec5b363eee0bbfd802b43ad2f8b97479f"
        ],
        [
            "Require Grammar.",
            "VernacRequire",
            "92fc01aba52a6fd52138561977941637609c55ad"
        ],
        [
            "Require Automaton.",
            "VernacRequire",
            "2a0cbee8eee90ef23660cd2aaf73b263992155b4"
        ],
        [
            "Require Interpreter.",
            "VernacRequire",
            "29de65c2b002d4b1469d8140d3ea63750ffa2bcd"
        ],
        [
            "Require Validator_complete.",
            "VernacRequire",
            "60d9c67cb5567bf09587a2f92cccad8994f3c363"
        ],
        [
            "Module Make(Import A:Automaton.T) (Import Inter:Interpreter.T A).",
            "VernacDefineModule",
            "32bf62f5a73315f2e0f450006f74f01c2e8a6255"
        ],
        [
            "Module Import Valid := Validator_complete.Make A.",
            "VernacDefineModule",
            "676d35e608802449b80c332ac4825676a5f02f89"
        ],
        [
            "Section Completeness_Proof.",
            "VernacBeginSection",
            "b2520a04b9cb9f96cf73ac7668b83f09698c6fd5"
        ],
        [
            "Hypothesis complete: complete.",
            "VernacAssumption",
            "946220d9be0b21907ce5fe7ff8a8872306b674a0"
        ],
        [
            "Proposition nullable_stable: nullable_stable.",
            "VernacStartTheoremProof",
            "01bbe8c8aab5c4e463487fb93ca4b438813be7ee"
        ],
        [
            "pose proof complete; unfold Valid.complete in H; intuition.",
            "VernacExtend",
            "7d70dfd6d9a6a223d10547e28c3335c48460f3fe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Proposition first_stable: first_stable.",
            "VernacStartTheoremProof",
            "0a55fd88d8a404f095963f159882d059d29f1db5"
        ],
        [
            "pose proof complete; unfold Valid.complete in H; intuition.",
            "VernacExtend",
            "7d70dfd6d9a6a223d10547e28c3335c48460f3fe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Proposition start_future: start_future.",
            "VernacStartTheoremProof",
            "8841912318f0b350b76eceb2cea2521d579d724e"
        ],
        [
            "pose proof complete; unfold Valid.complete in H; intuition.",
            "VernacExtend",
            "7d70dfd6d9a6a223d10547e28c3335c48460f3fe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Proposition terminal_shift: terminal_shift.",
            "VernacStartTheoremProof",
            "2410bb350e3d74d8ae911bfa6b14be69979f8d13"
        ],
        [
            "pose proof complete; unfold Valid.complete in H; intuition.",
            "VernacExtend",
            "7d70dfd6d9a6a223d10547e28c3335c48460f3fe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Proposition end_reduce: end_reduce.",
            "VernacStartTheoremProof",
            "0320db76be3b5105d9bd16854e39b28a4785b052"
        ],
        [
            "pose proof complete; unfold Valid.complete in H; intuition.",
            "VernacExtend",
            "7d70dfd6d9a6a223d10547e28c3335c48460f3fe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Proposition start_goto: start_goto.",
            "VernacStartTheoremProof",
            "31bfa5ab1ca003be49134bf3a0bc9b96fa75fbfe"
        ],
        [
            "pose proof complete; unfold Valid.complete in H; intuition.",
            "VernacExtend",
            "7d70dfd6d9a6a223d10547e28c3335c48460f3fe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Proposition non_terminal_goto: non_terminal_goto.",
            "VernacStartTheoremProof",
            "195fcb75d8de7d59bbd81f5951358d13cdfff75e"
        ],
        [
            "pose proof complete; unfold Valid.complete in H; intuition.",
            "VernacExtend",
            "7d70dfd6d9a6a223d10547e28c3335c48460f3fe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Proposition non_terminal_closed: non_terminal_closed.",
            "VernacStartTheoremProof",
            "4031f23d7a898c8e22bab2d63ad8a855e874bc06"
        ],
        [
            "pose proof complete; unfold Valid.complete in H; intuition.",
            "VernacExtend",
            "7d70dfd6d9a6a223d10547e28c3335c48460f3fe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nullable_correct: forall head sem word, word = [] -> parse_tree head word sem -> nullable_symb head = true with nullable_correct_list: forall heads sems word, word = [] -> parse_tree_list heads word sems -> nullable_word heads = true.",
            "VernacStartTheoremProof",
            "240760a8b5acfd3238f7ad3364bb6f4f63d597e3"
        ],
        [
            "Proof with eauto.",
            "VernacProof",
            "12721c224a5e1fa232c2328aabfe1f5101d235c4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct X.",
            "VernacExtend",
            "c801471caf71983d137aa9804c700cae2d9fc948"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "apply nullable_stable...",
            "VernacExtend",
            "3c5171c60ec0323312697c5fa4b037b5ebc224a0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct X; simpl...",
            "VernacExtend",
            "86a54cea6c0332360030d629d386af3f5a597684"
        ],
        [
            "apply andb_true_intro.",
            "VernacExtend",
            "568074f8ecdece0f16c49f5bea6e2c18016f95d3"
        ],
        [
            "apply app_eq_nil in H; destruct H; split...",
            "VernacExtend",
            "72e4904e4e063d9048caf135fc2f1e29abb10d89"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma first_correct: forall head sem word t q, word = t::q -> parse_tree head word sem -> TerminalSet.In (projT1 t) (first_symb_set head) with first_correct_list: forall heads sems word t q, word = t::q -> parse_tree_list heads word sems -> TerminalSet.In (projT1 t) (first_word_set heads).",
            "VernacStartTheoremProof",
            "7e5c12fdee589873b6bf1c6ac63c9020112e93e8"
        ],
        [
            "Proof with eauto.",
            "VernacProof",
            "12721c224a5e1fa232c2328aabfe1f5101d235c4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct X.",
            "VernacExtend",
            "c801471caf71983d137aa9804c700cae2d9fc948"
        ],
        [
            "inversion H; subst.",
            "VernacExtend",
            "123ebc73101dcac5781200440a60232218464ea1"
        ],
        [
            "apply TerminalSet.singleton_2, compare_refl...",
            "VernacExtend",
            "3a726a723d8ef9ae928a46c076f1ab6c186a3eb3"
        ],
        [
            "apply first_stable...",
            "VernacExtend",
            "eced41a09cb9b277a312b13ec248bc95cd9cc306"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct X.",
            "VernacExtend",
            "c801471caf71983d137aa9804c700cae2d9fc948"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "case_eq wordt; intros.",
            "VernacExtend",
            "b5ecbc88ccdc4fa314d24ffe7fb94114075ab1b5"
        ],
        [
            "erewrite nullable_correct...",
            "VernacExtend",
            "dfca79a3680f884458345ce207d2b8086148d3b1"
        ],
        [
            "apply TerminalSet.union_3.",
            "VernacExtend",
            "9c25e4568d673b835cee99b7d1538304e2e10b09"
        ],
        [
            "subst...",
            "VernacExtend",
            "b907a93c53d5c34384373e3aac13eba90f0a4fdc"
        ],
        [
            "rewrite H0 in *; inversion H; destruct H2.",
            "VernacExtend",
            "2517f14d2d3c91ed42e12ebb97f865e2df3f8434"
        ],
        [
            "destruct (nullable_symb head_symbolt)...",
            "VernacExtend",
            "92882dc8ab6b48a1ee6840cf6947f337c183a51c"
        ],
        [
            "apply TerminalSet.union_2...",
            "VernacExtend",
            "6d4d174b0a20164a2c028c13ff81df3ab3e9ceb8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variable init: initstate.",
            "VernacAssumption",
            "6ac82c73d0d5e65173bb7d8dcef28295cadcb7ed"
        ],
        [
            "Variable full_word: list token.",
            "VernacAssumption",
            "f94d1dbe0e2a0fa2aadda4d06b162c72fc7c20a8"
        ],
        [
            "Variable buffer_end: Stream token.",
            "VernacAssumption",
            "69d6fa66f48fee6fdba5c86bb1e9a8431a90d2de"
        ],
        [
            "Variable full_sem: symbol_semantic_type (NT (start_nt init)).",
            "VernacAssumption",
            "caede00bcc8e1af933f3b862f07e8f5c0cf7b5e0"
        ],
        [
            "Inductive pt_zipper: forall (hole_symb:symbol) (hole_word:list token) (hole_sem:symbol_semantic_type hole_symb), Type := | Top_ptz: pt_zipper (NT (start_nt init)) (full_word) (full_sem) | Cons_ptl_ptz: forall {head_symbolt:symbol} {wordt:list token} {semantic_valuet:symbol_semantic_type head_symbolt}, forall {head_symbolsq:list symbol} {wordq:list token} {semantic_valuesq:tuple (map symbol_semantic_type head_symbolsq)}, parse_tree_list head_symbolsq wordq semantic_valuesq -> ptl_zipper (head_symbolt::head_symbolsq) (wordt++wordq) (semantic_valuet,semantic_valuesq) -> pt_zipper head_symbolt wordt semantic_valuet with ptl_zipper: forall (hole_symbs:list symbol) (hole_word:list token) (hole_sems:tuple (map symbol_semantic_type hole_symbs)), Type := | Non_terminal_pt_ptlz: forall {p:production} {word:list token} {semantic_values:tuple (map symbol_semantic_type (rev (prod_rhs_rev p)))}, pt_zipper (NT (prod_lhs p)) word (uncurry (prod_action p) semantic_values) -> ptl_zipper (rev (prod_rhs_rev p)) word semantic_values | Cons_ptl_ptlz: forall {head_symbolt:symbol} {wordt:list token} {semantic_valuet:symbol_semantic_type head_symbolt}, parse_tree head_symbolt wordt semantic_valuet -> forall {head_symbolsq:list symbol} {wordq:list token} {semantic_valuesq:tuple (map symbol_semantic_type head_symbolsq)}, ptl_zipper (head_symbolt::head_symbolsq) (wordt++wordq) (semantic_valuet,semantic_valuesq) -> ptl_zipper head_symbolsq wordq semantic_valuesq.",
            "VernacInductive",
            "ee383add6314aedc0ef8dbc9fee62e926d8111da"
        ],
        [
            "Fixpoint ptlz_cost {hole_symbs hole_word hole_sems} (ptlz:ptl_zipper hole_symbs hole_word hole_sems) := match ptlz with | Non_terminal_pt_ptlz ptz => ptz_cost ptz | Cons_ptl_ptlz pt ptlz' => ptlz_cost ptlz' end with ptz_cost {hole_symb hole_word hole_sem} (ptz:pt_zipper hole_symb hole_word hole_sem) := match ptz with | Top_ptz => 0 | Cons_ptl_ptz ptl ptlz' => 1 + ptl_size ptl + ptlz_cost ptlz' end.",
            "VernacFixpoint",
            "c581107dc3e4d24b2a99892b323a431a355e4c88"
        ],
        [
            "Inductive pt_dot: Type := | Reduce_ptd: ptl_zipper [] [] () -> pt_dot | Shift_ptd: forall (term:terminal) (sem: symbol_semantic_type (T term)) {symbolsq wordq semsq}, parse_tree_list symbolsq wordq semsq -> ptl_zipper (T term::symbolsq) (existT (fun t => symbol_semantic_type (T t)) term sem::wordq) (sem, semsq) -> pt_dot.",
            "VernacInductive",
            "d26d47352576e4e695f874af757d1a62871cffad"
        ],
        [
            "Definition ptd_cost (ptd:pt_dot) := match ptd with | Reduce_ptd ptlz => ptlz_cost ptlz | Shift_ptd _ _ ptl ptlz => 1 + ptl_size ptl + ptlz_cost ptlz end.",
            "VernacDefinition",
            "e8a6b5aefbe9645a9831e5e5195adb314104e3fc"
        ],
        [
            "Fixpoint ptlz_buffer {hole_symbs hole_word hole_sems} (ptlz:ptl_zipper hole_symbs hole_word hole_sems): Stream token := match ptlz with | Non_terminal_pt_ptlz ptz => ptz_buffer ptz | Cons_ptl_ptlz _ ptlz' => ptlz_buffer ptlz' end with ptz_buffer {hole_symb hole_word hole_sem} (ptz:pt_zipper hole_symb hole_word hole_sem): Stream token := match ptz with | Top_ptz => buffer_end | @Cons_ptl_ptz _ _ _ _ wordq _ ptl ptlz' => wordq++ptlz_buffer ptlz' end.",
            "VernacFixpoint",
            "6eaf0e05b1bd3521d18bccad13bffa2f6a8715dc"
        ],
        [
            "Definition ptd_buffer (ptd:pt_dot) := match ptd with | Reduce_ptd ptlz => ptlz_buffer ptlz | @Shift_ptd term sem _ wordq _ _ ptlz => Cons (existT (fun t => symbol_semantic_type (T t)) term sem) (wordq ++ ptlz_buffer ptlz) end.",
            "VernacDefinition",
            "bacf052bcb76bc7225fa4ccee5c22dc806a2f682"
        ],
        [
            "Fixpoint ptlz_prod {hole_symbs hole_word hole_sems} (ptlz:ptl_zipper hole_symbs hole_word hole_sems): production := match ptlz with | @Non_terminal_pt_ptlz prod _ _ _ => prod | Cons_ptl_ptlz _ ptlz' => ptlz_prod ptlz' end.",
            "VernacFixpoint",
            "511797623a71c25eb24e068b74e0e4fe05acb3a1"
        ],
        [
            "Fixpoint ptlz_past {hole_symbs hole_word hole_sems} (ptlz:ptl_zipper hole_symbs hole_word hole_sems): list symbol := match ptlz with | Non_terminal_pt_ptlz _ => [] | @Cons_ptl_ptlz s _ _ _ _ _ _ ptlz' => s::ptlz_past ptlz' end.",
            "VernacFixpoint",
            "cee76f979c40726f94458a460eb9b8ac62a24461"
        ],
        [
            "Lemma ptlz_past_ptlz_prod: forall hole_symbs hole_word hole_sems (ptlz:ptl_zipper hole_symbs hole_word hole_sems), rev_append hole_symbs (ptlz_past ptlz) = prod_rhs_rev (ptlz_prod ptlz).",
            "VernacStartTheoremProof",
            "f894258026ebe51fe65645e3cb32a6ddc3f017a6"
        ],
        [
            "fix ptlz_past_ptlz_prod 4.",
            "VernacExtend",
            "c14a625bc091bfaf6a8b4a9f98f279cc381a35c2"
        ],
        [
            "destruct ptlz; simpl.",
            "VernacExtend",
            "585759c17f3c47194fb6f40119cbb92c1396a938"
        ],
        [
            "rewrite <- rev_alt, rev_involutive; reflexivity.",
            "VernacExtend",
            "621dbe6a801eda41c0606da44fc51a84bc0ffee2"
        ],
        [
            "apply (ptlz_past_ptlz_prod _ _ _ ptlz).",
            "VernacExtend",
            "004de1865e2a2087aaedd84e2c7ce689d1046709"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ptlz_state_compat {hole_symbs hole_word hole_sems} (ptlz:ptl_zipper hole_symbs hole_word hole_sems) (state:state): Prop := state_has_future state (ptlz_prod ptlz) hole_symbs (projT1 (Streams.hd (ptlz_buffer ptlz))).",
            "VernacDefinition",
            "7d81b47f50b5df07e2d82f195de88ff157656e46"
        ],
        [
            "Fixpoint ptlz_stack_compat {hole_symbs hole_word hole_sems} (ptlz:ptl_zipper hole_symbs hole_word hole_sems) (stack:stack): Prop := ptlz_state_compat ptlz (state_of_stack init stack) /\\ match ptlz with | Non_terminal_pt_ptlz ptz => ptz_stack_compat ptz stack | @Cons_ptl_ptlz _ _ sem _ _ _ _ ptlz' => match stack with | [] => False | existT _ _ sem'::stackq => ptlz_stack_compat ptlz' stackq /\\ sem ~= sem' end end with ptz_stack_compat {hole_symb hole_word hole_sem} (ptz:pt_zipper hole_symb hole_word hole_sem) (stack:stack): Prop := match ptz with | Top_ptz => stack = [] | Cons_ptl_ptz _ ptlz' => ptlz_stack_compat ptlz' stack end.",
            "VernacFixpoint",
            "9d6f0a3f1cf4c8fb107454aa35ded82f17531960"
        ],
        [
            "Lemma ptlz_stack_compat_ptlz_state_compat: forall hole_symbs hole_word hole_sems (ptlz:ptl_zipper hole_symbs hole_word hole_sems) (stack:stack), ptlz_stack_compat ptlz stack -> ptlz_state_compat ptlz (state_of_stack init stack).",
            "VernacStartTheoremProof",
            "34376d820a66904da5d182c64f2e026f5f1c8e7e"
        ],
        [
            "destruct ptlz; simpl; intuition.",
            "VernacExtend",
            "7cfb7ea69cfac9ddaf27aedf8ba1fcab94e70c9b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ptd_stack_compat (ptd:pt_dot) (stack:stack): Prop := match ptd with | Reduce_ptd ptlz => ptlz_stack_compat ptlz stack | Shift_ptd _ _ _ ptlz => ptlz_stack_compat ptlz stack end.",
            "VernacDefinition",
            "17a0d1cc8a1132a2ff844038d42ac480521cd153"
        ],
        [
            "Fixpoint build_pt_dot {hole_symbs hole_word hole_sems} (ptl:parse_tree_list hole_symbs hole_word hole_sems) (ptlz:ptl_zipper hole_symbs hole_word hole_sems) :pt_dot := match ptl in parse_tree_list hole_symbs hole_word hole_sems return ptl_zipper hole_symbs hole_word hole_sems -> _ with | Nil_ptl => fun ptlz => Reduce_ptd ptlz | Cons_ptl pt ptl' => match pt in parse_tree hole_symb hole_word hole_sem return ptl_zipper (hole_symb::_) (hole_word++_) (hole_sem,_) -> _ with | Terminal_pt term sem => fun ptlz => Shift_ptd term sem ptl' ptlz | Non_terminal_pt ptl'' => fun ptlz => build_pt_dot ptl'' (Non_terminal_pt_ptlz (Cons_ptl_ptz ptl' ptlz)) end end ptlz.",
            "VernacFixpoint",
            "f74ecc1be955ef932e1213050669ed2a3b6b521a"
        ],
        [
            "Lemma build_pt_dot_cost: forall hole_symbs hole_word hole_sems (ptl:parse_tree_list hole_symbs hole_word hole_sems) (ptlz:ptl_zipper hole_symbs hole_word hole_sems), ptd_cost (build_pt_dot ptl ptlz) = ptl_size ptl + ptlz_cost ptlz.",
            "VernacStartTheoremProof",
            "b610d937420dcb39b0dc4a5bd755f7f0484d57d7"
        ],
        [
            "fix build_pt_dot_cost 4.",
            "VernacExtend",
            "dbfc3c8ef3eb240130c56bacc0afc262abbb4a88"
        ],
        [
            "destruct ptl; intros.",
            "VernacExtend",
            "682479811642657d02107f13d8bac49d6dda9f87"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "destruct p.",
            "VernacExtend",
            "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl; rewrite build_pt_dot_cost.",
            "VernacExtend",
            "b30fa88eab235b7e2c4ba6259f2ddb1657a884d6"
        ],
        [
            "simpl; rewrite <- plus_n_Sm, Nat.add_assoc; reflexivity.",
            "VernacExtend",
            "3a93cb061262065a79a802397be26e2aac22ef28"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma build_pt_dot_buffer: forall hole_symbs hole_word hole_sems (ptl:parse_tree_list hole_symbs hole_word hole_sems) (ptlz:ptl_zipper hole_symbs hole_word hole_sems), ptd_buffer (build_pt_dot ptl ptlz) = hole_word ++ ptlz_buffer ptlz.",
            "VernacStartTheoremProof",
            "4131bfc6081a9e9fb21eeaf546a601255abc264b"
        ],
        [
            "fix build_pt_dot_buffer 4.",
            "VernacExtend",
            "ce454d2147b880e559d6e9ba4104f4775af65d28"
        ],
        [
            "destruct ptl; intros.",
            "VernacExtend",
            "682479811642657d02107f13d8bac49d6dda9f87"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "destruct p.",
            "VernacExtend",
            "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl; rewrite build_pt_dot_buffer.",
            "VernacExtend",
            "483d7736bff294d3a110fb3bd5c0687ea3571b3e"
        ],
        [
            "apply app_str_app_assoc.",
            "VernacExtend",
            "255d5fc2bc85fe7c184e100306a4548d78192251"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ptd_stack_compat_build_pt_dot: forall hole_symbs hole_word hole_sems (ptl:parse_tree_list hole_symbs hole_word hole_sems) (ptlz:ptl_zipper hole_symbs hole_word hole_sems) (stack:stack), ptlz_stack_compat ptlz stack -> ptd_stack_compat (build_pt_dot ptl ptlz) stack.",
            "VernacStartTheoremProof",
            "2522f544718862c75d4982ba856373cd8952d18f"
        ],
        [
            "fix ptd_stack_compat_build_pt_dot 4.",
            "VernacExtend",
            "263f899aaebf08990bffe504d3c152ab9e69a9f0"
        ],
        [
            "destruct ptl; intros.",
            "VernacExtend",
            "682479811642657d02107f13d8bac49d6dda9f87"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "destruct p.",
            "VernacExtend",
            "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply ptd_stack_compat_build_pt_dot.",
            "VernacExtend",
            "23529fcb7e08906b4123cef3f950916bbde0b1ea"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply ptlz_stack_compat_ptlz_state_compat, non_terminal_closed in H.",
            "VernacExtend",
            "f30af99eda76da72c2fa317b900c28ca610d9db5"
        ],
        [
            "apply H; clear H; eauto.",
            "VernacExtend",
            "e6b753e505b6e93569240e406d39eaaf1a49ee24"
        ],
        [
            "destruct wordq.",
            "VernacExtend",
            "d9617924c2f7ad49294a37a9e6c9a0670acc580a"
        ],
        [
            "right; split.",
            "VernacExtend",
            "7f40e6faa2e8d6f2ee2a39b745aa28054e5d87de"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "eapply nullable_correct_list; eauto.",
            "VernacExtend",
            "edd42ff277a83ede8572312f7055a5af089582ce"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "eapply first_correct_list; eauto.",
            "VernacExtend",
            "f798711b84f381b6d75b56f30f77791f54204bca"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Fixpoint pop_ptlz {hole_symbs hole_word hole_sems} (ptl:parse_tree_list hole_symbs hole_word hole_sems) (ptlz:ptl_zipper hole_symbs hole_word hole_sems): { word:_ & { sem:_ & (pt_zipper (NT (prod_lhs (ptlz_prod ptlz))) word sem * parse_tree (NT (prod_lhs (ptlz_prod ptlz))) word sem)%type } } := match ptlz in ptl_zipper hole_symbs hole_word hole_sems return parse_tree_list hole_symbs hole_word hole_sems -> { word:_ & { sem:_ & (pt_zipper (NT (prod_lhs (ptlz_prod ptlz))) word sem * parse_tree (NT (prod_lhs (ptlz_prod ptlz))) word sem)%type } } with | @Non_terminal_pt_ptlz prod word sem ptz => fun ptl => let sem := uncurry (prod_action prod) sem in existT _ word (existT _ sem (ptz, Non_terminal_pt ptl)) | Cons_ptl_ptlz pt ptlz' => fun ptl => pop_ptlz (Cons_ptl pt ptl) ptlz' end ptl.",
            "VernacFixpoint",
            "e57a5ab719d538c674ebdfdd8eacc25ae8b74e53"
        ],
        [
            "Lemma pop_ptlz_cost: forall hole_symbs hole_word hole_sems (ptl:parse_tree_list hole_symbs hole_word hole_sems) (ptlz:ptl_zipper hole_symbs hole_word hole_sems), let 'existT _ word (existT _ sem (ptz, pt)) := pop_ptlz ptl ptlz in ptlz_cost ptlz = ptz_cost ptz.",
            "VernacStartTheoremProof",
            "116de8fa301295709c6eb5bee7a7535350fe68bb"
        ],
        [
            "fix pop_ptlz_cost 5.",
            "VernacExtend",
            "2acac3e473ae337fffef680455221534c56cfbe7"
        ],
        [
            "destruct ptlz.",
            "VernacExtend",
            "747816a2deca8aeef667444194b1e3f82539e299"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl; apply pop_ptlz_cost.",
            "VernacExtend",
            "9f1d70071541bf5395f80a85e7c46eaff9c0bd72"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pop_ptlz_buffer: forall hole_symbs hole_word hole_sems (ptl:parse_tree_list hole_symbs hole_word hole_sems) (ptlz:ptl_zipper hole_symbs hole_word hole_sems), let 'existT _ word (existT _ sem (ptz, pt)) := pop_ptlz ptl ptlz in ptlz_buffer ptlz = ptz_buffer ptz.",
            "VernacStartTheoremProof",
            "393f2c63cb76674799cf2d467a59bd14654043ba"
        ],
        [
            "fix pop_ptlz_buffer 5.",
            "VernacExtend",
            "1350c4d3bc0e3f8a852fec330475c1a7fb697fdc"
        ],
        [
            "destruct ptlz.",
            "VernacExtend",
            "747816a2deca8aeef667444194b1e3f82539e299"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl; apply pop_ptlz_buffer.",
            "VernacExtend",
            "e0234a0ae8bd139bfc8afd0f55118001744eb630"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pop_ptlz_pop_stack_compat_converter: forall A hole_symbs hole_word hole_sems (ptlz:ptl_zipper hole_symbs hole_word hole_sems), arrows_left (map symbol_semantic_type (rev (prod_rhs_rev (ptlz_prod ptlz)))) A = arrows_left (map symbol_semantic_type hole_symbs) (arrows_right A (map symbol_semantic_type (ptlz_past ptlz))).",
            "VernacStartTheoremProof",
            "6d090ac2a5bd0394763a775ce0e531d0ffce89b3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- ptlz_past_ptlz_prod.",
            "VernacExtend",
            "a6ddf23e98bb29de552e7d4d97552877a3f0109f"
        ],
        [
            "unfold arrows_right, arrows_left.",
            "VernacExtend",
            "0656ef970602fc58e9c03985a9ed7d05364bb03f"
        ],
        [
            "rewrite rev_append_rev, map_rev, map_app, map_rev, <- fold_left_rev_right, rev_involutive, fold_right_app.",
            "VernacExtend",
            "956d4ddf5cedff456c332c993cf7c6705087f0ad"
        ],
        [
            "rewrite fold_left_rev_right.",
            "VernacExtend",
            "172aea0d1678fdd15cf3572742605a293c1d7878"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pop_ptlz_pop_stack_compat: forall hole_symbs hole_word hole_sems (ptl:parse_tree_list hole_symbs hole_word hole_sems) (ptlz:ptl_zipper hole_symbs hole_word hole_sems) (stack:stack), ptlz_stack_compat ptlz stack -> let action' := eq_rect _ (fun x=>x) (prod_action (ptlz_prod ptlz)) _ (pop_ptlz_pop_stack_compat_converter _ _ _ _ _) in let 'existT _ word (existT _ sem (ptz, pt)) := pop_ptlz ptl ptlz in match pop (ptlz_past ptlz) stack (uncurry action' hole_sems) with | OK (stack', sem') => ptz_stack_compat ptz stack' /\\ sem = sem' | Err => True end.",
            "VernacStartTheoremProof",
            "18e3b37ca518ba951b1d27be9fbd7ccfcc4a4a43"
        ],
        [
            "Opaque AlphabetComparable AlphabetComparableUsualEq.",
            "VernacSetOpacity",
            "fb487e35238a9334fb963ca14b02006ec92e02b8"
        ],
        [
            "fix pop_ptlz_pop_stack_compat 5.",
            "VernacExtend",
            "b352046c563e122bd48f65a937697e4f240f45b8"
        ],
        [
            "destruct ptlz.",
            "VernacExtend",
            "747816a2deca8aeef667444194b1e3f82539e299"
        ],
        [
            "intros; simpl.",
            "VernacExtend",
            "3da5a0bf1c6e40c602010ee4543b1d990c82e623"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "eapply (f_equal (fun X => uncurry X semantic_values)).",
            "VernacExtend",
            "12335aa946879635ab8cc83abea3ba2d0666710a"
        ],
        [
            "apply JMeq_eq, JMeq_sym, JMeq_eqrect with (P:=fun x => x).",
            "VernacExtend",
            "6912a815456e02733a18b61b931f0f54ecabbfd0"
        ],
        [
            "simpl; intros; destruct stack0.",
            "VernacExtend",
            "540c2b1f1f06a8c49970c0102601090776230856"
        ],
        [
            "destruct (proj2 H).",
            "VernacExtend",
            "ad07ff2a3c92c4cd0bc2e146379b44d51b4a0dd7"
        ],
        [
            "simpl in H; destruct H.",
            "VernacExtend",
            "38eef4331a212505c35fb3217ab7baa59eb700da"
        ],
        [
            "destruct s as (state, sem').",
            "VernacExtend",
            "cc18a82657822e246531bcd1bf3b80672ab59ecb"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "specialize (pop_ptlz_pop_stack_compat _ _ _ (Cons_ptl p ptl) ptlz _ H0).",
            "VernacExtend",
            "3efe1de68a71f007bfe27091f02ccd8425367653"
        ],
        [
            "destruct (pop_ptlz (Cons_ptl p ptl) ptlz) as [word [sem []]].",
            "VernacExtend",
            "fa5fb4826e130fcd20bd49f7b6d62a35132a4113"
        ],
        [
            "destruct (compare_eqdec (last_symb_of_non_init_state state) head_symbolt); intuition.",
            "VernacExtend",
            "dc93edf81d993db1b1865838deddefddd5a2a6be"
        ],
        [
            "eapply JMeq_sym, JMeq_trans, JMeq_sym, JMeq_eq in H1; [|apply JMeq_eqrect with (e:=e)].",
            "VernacExtend",
            "7a00936a8d76c418e396e563256c462254bcbb21"
        ],
        [
            "rewrite <- H1.",
            "VernacExtend",
            "b8b417d956609d1854d18921f25bc0ffae73a74e"
        ],
        [
            "simpl in pop_ptlz_pop_stack_compat.",
            "VernacExtend",
            "3ca7843218b3ef697bf0537575cc2ec7f6553228"
        ],
        [
            "erewrite proof_irrelevance with (p1:=pop_ptlz_pop_stack_compat_converter _ _ _ _ _).",
            "VernacExtend",
            "1fb7d7332d274a0e856e3c131d82645ffd07eb46"
        ],
        [
            "apply pop_ptlz_pop_stack_compat.",
            "VernacExtend",
            "e8d703573db8b6907cf7972efd14649b8677a29a"
        ],
        [
            "Transparent AlphabetComparable AlphabetComparableUsualEq.",
            "VernacSetOpacity",
            "bd8797c523538abfa4dbcd2009d7b5f14ce8c688"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition next_ptd (ptd:pt_dot): option pt_dot := match ptd with | Shift_ptd term sem ptl ptlz => Some (build_pt_dot ptl (Cons_ptl_ptlz (Terminal_pt term sem) ptlz)) | Reduce_ptd ptlz => let 'existT _ _ (existT _ _ (ptz, pt)) := pop_ptlz Nil_ptl ptlz in match ptz in pt_zipper sym _ _ return parse_tree sym _ _ -> _ with | Top_ptz => fun pt => None | Cons_ptl_ptz ptl ptlz' => fun pt => Some (build_pt_dot ptl (Cons_ptl_ptlz pt ptlz')) end pt end.",
            "VernacDefinition",
            "61f746181710975421d90aa804739696f229d40a"
        ],
        [
            "Lemma next_ptd_cost: forall ptd, match next_ptd ptd with | None => ptd_cost ptd = 0 | Some ptd' => ptd_cost ptd = S (ptd_cost ptd') end.",
            "VernacStartTheoremProof",
            "4a531b41b2a379f5d9509345e3053b77956b9b10"
        ],
        [
            "destruct ptd.",
            "VernacExtend",
            "beae22841d121dfa99331c831aa4383d4a46e0e4"
        ],
        [
            "unfold next_ptd.",
            "VernacExtend",
            "f5db7dd4826f2359573ed5a9e48f8fd56d9f772f"
        ],
        [
            "pose proof (pop_ptlz_cost _ _ _ Nil_ptl p).",
            "VernacExtend",
            "8c4842dffd6ebe7a526ddf43c53cb9aadb5d7734"
        ],
        [
            "destruct (pop_ptlz Nil_ptl p) as [word[sem[[]]]].",
            "VernacExtend",
            "c1b51265289f745a7952dc62d83e1902f51e3457"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite build_pt_dot_cost.",
            "VernacExtend",
            "b212d42081a070fbd0ebe6508e8743fd3d120954"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "simpl; rewrite build_pt_dot_cost; reflexivity.",
            "VernacExtend",
            "0910b997e38ccec41eae171510ef2de7afe7a5c3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma reduce_step_next_ptd: forall (ptlz:ptl_zipper [] [] ()) (stack:stack), ptlz_stack_compat ptlz stack -> match reduce_step init stack (ptlz_prod ptlz) (ptlz_buffer ptlz) with | OK Fail_sr => False | OK (Accept_sr sem buffer) => sem = full_sem /\\ buffer = buffer_end /\\ next_ptd (Reduce_ptd ptlz) = None | OK (Progress_sr stack buffer) => match next_ptd (Reduce_ptd ptlz) with | None => False | Some ptd => ptd_stack_compat ptd stack /\\ buffer = ptd_buffer ptd end | Err => True end.",
            "VernacStartTheoremProof",
            "c96cf54cf2a010617b16a737489cd7fe79c5f406"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold reduce_step, next_ptd.",
            "VernacExtend",
            "f98967cb451f9885f8efe5e71fe04160d983850a"
        ],
        [
            "apply pop_ptlz_pop_stack_compat with (ptl:=Nil_ptl) in H.",
            "VernacExtend",
            "be3765972e795f665c32f6db308fc32c3c702344"
        ],
        [
            "pose proof (pop_ptlz_buffer _ _ _ Nil_ptl ptlz).",
            "VernacExtend",
            "fa74b3add6a527594a7b973c24d57bbc3b4553c3"
        ],
        [
            "destruct (pop_ptlz Nil_ptl ptlz) as [word [sem [ptz pt]]].",
            "VernacExtend",
            "8c00ca6e236872e53517ca34b9208529bbb4cd71"
        ],
        [
            "rewrite H0; clear H0.",
            "VernacExtend",
            "fabeca7858ebb717928a37dd7ab85d95711cf62f"
        ],
        [
            "revert H.",
            "VernacExtend",
            "6842e040dd98a07b1eb54bbabc9c3f1076566a9a"
        ],
        [
            "match goal with |- match ?p1 with Err => _ | OK _ => _ end -> match bind2 ?p2 _ with Err => _ | OK _ => _ end => replace p1 with p2; [destruct p2 as [|[]]; intros|] end.",
            "VernacExtend",
            "c2e0f5a95f4cbfa99cfac0dc91231e8638cbc2c9"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct H; subst.",
            "VernacExtend",
            "cfced62c1f73763fa32f2f64f12dc4faf51d1289"
        ],
        [
            "generalize dependent s0.",
            "VernacExtend",
            "47582b6a9a0d3b71ea61957aba8bb299871b5305"
        ],
        [
            "generalize (prod_lhs (ptlz_prod ptlz)); clear ptlz stack0.",
            "VernacExtend",
            "6141ea0a822c156ac311443c2bdddea7204cef00"
        ],
        [
            "dependent destruction ptz; intros.",
            "VernacExtend",
            "e9772cf3200a9728c948670e04b96350bc431e21"
        ],
        [
            "simpl in H; subst; simpl.",
            "VernacExtend",
            "c828b914fdde63861815160492ca4b57a3208289"
        ],
        [
            "pose proof start_goto; unfold Valid.start_goto in H; rewrite H.",
            "VernacExtend",
            "a01ca797b3278c24481b66907cc4bf9dc08ec022"
        ],
        [
            "destruct (compare_eqdec (start_nt init) (start_nt init)); intuition.",
            "VernacExtend",
            "8a9160b3b52a79cdc91febe48b5ac3b06e5e8447"
        ],
        [
            "apply JMeq_eq, JMeq_eqrect with (P:=fun nt => symbol_semantic_type (NT nt)).",
            "VernacExtend",
            "890d8d79e72ee36fedf6a89195ba12d606f535d0"
        ],
        [
            "pose proof (ptlz_stack_compat_ptlz_state_compat _ _ _ _ _ H).",
            "VernacExtend",
            "e04ada453b72bc117b1384a6053705aa70fb0fcb"
        ],
        [
            "apply non_terminal_goto in H0.",
            "VernacExtend",
            "ecccd381075bf7ae49dccdf81552d4326e025f9e"
        ],
        [
            "destruct (goto_table (state_of_stack init s) n) as [[]|]; intuition.",
            "VernacExtend",
            "f920f80cffe74c744313e9d5e149a36833f57783"
        ],
        [
            "apply ptd_stack_compat_build_pt_dot; simpl; intuition.",
            "VernacExtend",
            "9466388bb6a5f186d761401f8697a9fac70e56be"
        ],
        [
            "symmetry; apply JMeq_eqrect with (P:=symbol_semantic_type).",
            "VernacExtend",
            "98d68d2a1cd15163ff0313feb9c205c702f4bbb3"
        ],
        [
            "symmetry; apply build_pt_dot_buffer.",
            "VernacExtend",
            "40fe49117196249ca958e41fae4ba03ba768cef9"
        ],
        [
            "destruct s; intuition.",
            "VernacExtend",
            "436e9074a3339a2c1b817545bc089f1f9a290885"
        ],
        [
            "simpl in H; apply ptlz_stack_compat_ptlz_state_compat in H.",
            "VernacExtend",
            "f8f20d887c9f92149aea6e2c5d42e4e249de06cc"
        ],
        [
            "destruct (H0 _ _ _ H eq_refl).",
            "VernacExtend",
            "06603e7b38d91bf3ec9b8279ed7347481f20d343"
        ],
        [
            "generalize (pop_ptlz_pop_stack_compat_converter (symbol_semantic_type (NT (prod_lhs (ptlz_prod ptlz)))) _ _ _ ptlz).",
            "VernacExtend",
            "10b12a861999cf196c34c8fe6c52c23e6db2e1da"
        ],
        [
            "pose proof (ptlz_past_ptlz_prod _ _ _ ptlz); simpl in H.",
            "VernacExtend",
            "67c50aae97dbfb511c0cd2adaabcdcc565b9284a"
        ],
        [
            "rewrite H; clear H.",
            "VernacExtend",
            "a60de8fe6903e17bd74acece0951cbb10e6ef842"
        ],
        [
            "intro; f_equal; simpl.",
            "VernacExtend",
            "2af527984963a6b669e20b77c62644720b1e3a77"
        ],
        [
            "apply JMeq_eq.",
            "VernacExtend",
            "f9144ba53760411fdf5835dc5f32f0afc6eece41"
        ],
        [
            "etransitivity.",
            "VernacExtend",
            "be6e37ea1161f59d4c906a2d8011256577b6109b"
        ],
        [
            "apply JMeq_eqrect with (P:=fun x => x).",
            "VernacExtend",
            "a4db486bdc68cbaf0672c4158270442036fd1ca8"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply JMeq_eqrect with (P:=fun x => x).",
            "VernacExtend",
            "a4db486bdc68cbaf0672c4158270442036fd1ca8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma step_next_ptd: forall (ptd:pt_dot) (stack:stack), ptd_stack_compat ptd stack -> match step init stack (ptd_buffer ptd) with | OK Fail_sr => False | OK (Accept_sr sem buffer) => sem = full_sem /\\ buffer = buffer_end /\\ next_ptd ptd = None | OK (Progress_sr stack buffer) => match next_ptd ptd with | None => False | Some ptd => ptd_stack_compat ptd stack /\\ buffer = ptd_buffer ptd end | Err => True end.",
            "VernacStartTheoremProof",
            "cbd4bf7381a3dffbfa3a4a60c3a972dad2e3275a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct ptd.",
            "VernacExtend",
            "beae22841d121dfa99331c831aa4383d4a46e0e4"
        ],
        [
            "pose proof (ptlz_stack_compat_ptlz_state_compat _ _ _ _ _ H).",
            "VernacExtend",
            "e04ada453b72bc117b1384a6053705aa70fb0fcb"
        ],
        [
            "apply end_reduce in H0.",
            "VernacExtend",
            "cbe08b917f3e533a669d34112285a119bd13dd2d"
        ],
        [
            "unfold step.",
            "VernacExtend",
            "269f560ac59b066a6926b1cfe0106d1b6bd8ed52"
        ],
        [
            "destruct (action_table (state_of_stack init stack0)).",
            "VernacExtend",
            "5cbd2793a102fa1b121d81cb63524337b31b92f8"
        ],
        [
            "rewrite H0 by reflexivity.",
            "VernacExtend",
            "f35908b25dedef01fe0b99274c84af3d0e6bf182"
        ],
        [
            "apply reduce_step_next_ptd; assumption.",
            "VernacExtend",
            "b449ed958240fced116a73873c704c42070acd9c"
        ],
        [
            "simpl; destruct (Streams.hd (ptlz_buffer p)); simpl in H0.",
            "VernacExtend",
            "61631ee39f6914d999b6d65ab1d7c34dbf28aae7"
        ],
        [
            "destruct (l x); intuition; rewrite H1.",
            "VernacExtend",
            "14a62e58c177546be42b407d9acf9fd225e5d7ae"
        ],
        [
            "apply reduce_step_next_ptd; assumption.",
            "VernacExtend",
            "b449ed958240fced116a73873c704c42070acd9c"
        ],
        [
            "pose proof (ptlz_stack_compat_ptlz_state_compat _ _ _ _ _ H).",
            "VernacExtend",
            "e04ada453b72bc117b1384a6053705aa70fb0fcb"
        ],
        [
            "apply terminal_shift in H0.",
            "VernacExtend",
            "4a69c9f7088c8ac93628a9a3a29f37ea13f5c484"
        ],
        [
            "unfold step.",
            "VernacExtend",
            "269f560ac59b066a6926b1cfe0106d1b6bd8ed52"
        ],
        [
            "destruct (action_table (state_of_stack init stack0)); intuition.",
            "VernacExtend",
            "1803e63d5c448dbfe40346fdf2cb2238c8db2844"
        ],
        [
            "simpl; destruct (Streams.hd (ptlz_buffer p0)) as [] eqn:?.",
            "VernacExtend",
            "98c0e155295e0c2ebc4d40c5eb94f928f2d9738c"
        ],
        [
            "destruct (l term); intuition.",
            "VernacExtend",
            "56f2489929e9c49344c68698126a5d4f59fb1163"
        ],
        [
            "apply ptd_stack_compat_build_pt_dot; simpl; intuition.",
            "VernacExtend",
            "9466388bb6a5f186d761401f8697a9fac70e56be"
        ],
        [
            "unfold ptlz_state_compat; simpl; destruct Heqt; assumption.",
            "VernacExtend",
            "a87cc78890d62770b3ed92c7ae081679078e16d3"
        ],
        [
            "symmetry; apply JMeq_eqrect with (P:=symbol_semantic_type).",
            "VernacExtend",
            "98d68d2a1cd15163ff0313feb9c205c702f4bbb3"
        ],
        [
            "rewrite build_pt_dot_buffer; reflexivity.",
            "VernacExtend",
            "1292ee6792ed4e1765a703bee75c0d3b3630047b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma parse_fix_complete: forall (ptd:pt_dot) (stack:stack) (n_steps:nat), ptd_stack_compat ptd stack -> match parse_fix init stack (ptd_buffer ptd) n_steps with | OK (Parsed_pr sem_res buffer_end_res) => sem_res = full_sem /\\ buffer_end_res = buffer_end /\\ S (ptd_cost ptd) <= n_steps | OK Fail_pr => False | OK Timeout_pr => n_steps < S (ptd_cost ptd) | Err => True end.",
            "VernacStartTheoremProof",
            "3eff0709c0a5176e5d41dbf38de09ec79c86f422"
        ],
        [
            "fix parse_fix_complete 3.",
            "VernacExtend",
            "07a84cf2ea37f3b7c4e6490df389f4c837d68ce0"
        ],
        [
            "destruct n_steps; intros; simpl.",
            "VernacExtend",
            "fdffd8f12058c5e64aba04e9a8ce5d3514b710a0"
        ],
        [
            "apply Nat.lt_0_succ.",
            "VernacExtend",
            "71ce36185f1fd4314aab0331b52b3659e0a186db"
        ],
        [
            "apply step_next_ptd in H.",
            "VernacExtend",
            "90fa5fb72916c8ba8a3ac258821d037b774f86a6"
        ],
        [
            "pose proof (next_ptd_cost ptd).",
            "VernacExtend",
            "6bd96889d596dcdca6572081874bf45089f8b854"
        ],
        [
            "destruct (step init stack0 (ptd_buffer ptd)) as [|[]]; simpl; intuition.",
            "VernacExtend",
            "559040185664512b5c1cd87da08aacb445cf9b64"
        ],
        [
            "rewrite H3 in H0; rewrite H0.",
            "VernacExtend",
            "9b6831ce682c5cbfa3299507362cfacaad047899"
        ],
        [
            "apply le_n_S, Nat.le_0_l.",
            "VernacExtend",
            "2006d2567af106f156e5ec181d068809a5a78a01"
        ],
        [
            "destruct (next_ptd ptd); intuition; subst.",
            "VernacExtend",
            "a0e6d65d860478c155c16e86e78554775749aed9"
        ],
        [
            "eapply parse_fix_complete with (n_steps:=n_steps) in H1.",
            "VernacExtend",
            "aa43b47e31b09c206b48164c602f933876393f39"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "destruct (parse_fix init s (ptd_buffer p) n_steps) as [|[]]; try assumption.",
            "VernacExtend",
            "59433195217d6b7374c007c50f04e59283543911"
        ],
        [
            "apply lt_n_S; assumption.",
            "VernacExtend",
            "38ef3ed0abee13dbc6e6b1aa6fcc165d558708ff"
        ],
        [
            "destruct H1 as [H1 []]; split; [|split]; try assumption.",
            "VernacExtend",
            "6c6b21fdca645b25a52706c2fb506985cf740590"
        ],
        [
            "apply le_n_S; assumption.",
            "VernacExtend",
            "0eb3477345554c98971f24ea100acc6b0fe9f945"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variable full_pt: parse_tree (NT (start_nt init)) full_word full_sem.",
            "VernacAssumption",
            "b9abb6112f8471b5cb910492b3afedfdfd2e6c15"
        ],
        [
            "Definition init_ptd := match full_pt in parse_tree head full_word full_sem return pt_zipper head full_word full_sem -> match head return Type with | T _ => unit | NT _ => pt_dot end with | Terminal_pt _ _ => fun _ => () | Non_terminal_pt ptl => fun top => build_pt_dot ptl (Non_terminal_pt_ptlz top) end Top_ptz.",
            "VernacDefinition",
            "f60b7f3ae751ee4f7358414a831177f19ce68e97"
        ],
        [
            "Lemma init_ptd_compat: ptd_stack_compat init_ptd [].",
            "VernacStartTheoremProof",
            "65d09f975ab779dd1af0a6809ce7a6bb3b7aa2a1"
        ],
        [
            "unfold init_ptd.",
            "VernacExtend",
            "e0d4207a2275e87014f2f22e89459e6c0fc48518"
        ],
        [
            "assert (ptz_stack_compat Top_ptz []) by reflexivity.",
            "VernacExtend",
            "80f7c75b3e329c83b6c581708f93db4eb6cd9450"
        ],
        [
            "pose proof (start_future init); revert H0.",
            "VernacExtend",
            "b726c45307cf9752b376e354001b1f9cc5f4c619"
        ],
        [
            "generalize dependent Top_ptz.",
            "VernacExtend",
            "1e90036426ce6659e727fe2a3c1af085ba9af317"
        ],
        [
            "generalize dependent full_word.",
            "VernacExtend",
            "edf95ad1d324de525835d7d6023de809c965033e"
        ],
        [
            "generalize full_sem.",
            "VernacExtend",
            "48399f324cb2a7b57454263219cf9b968eb34d70"
        ],
        [
            "generalize (start_nt init).",
            "VernacExtend",
            "adbe41e221967b727a2bef912cac088821bda6a7"
        ],
        [
            "dependent destruction full_pt0.",
            "VernacExtend",
            "f400bc52b5f810703ea90c3ea303c394c2b56747"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply ptd_stack_compat_build_pt_dot; simpl; intuition.",
            "VernacExtend",
            "9466388bb6a5f186d761401f8697a9fac70e56be"
        ],
        [
            "apply H0; reflexivity.",
            "VernacExtend",
            "a937a537de614f007d03ed42d6ef34b054efcb82"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma init_ptd_cost: S (ptd_cost init_ptd) = pt_size full_pt.",
            "VernacStartTheoremProof",
            "bdbf0d44b96577108bd50a7153ff89d0efe13f5a"
        ],
        [
            "unfold init_ptd.",
            "VernacExtend",
            "e0d4207a2275e87014f2f22e89459e6c0fc48518"
        ],
        [
            "assert (ptz_cost Top_ptz = 0) by reflexivity.",
            "VernacExtend",
            "24909c18c6bb0c13096576fddd9b292a77bbc24d"
        ],
        [
            "generalize dependent Top_ptz.",
            "VernacExtend",
            "1e90036426ce6659e727fe2a3c1af085ba9af317"
        ],
        [
            "generalize dependent full_word.",
            "VernacExtend",
            "edf95ad1d324de525835d7d6023de809c965033e"
        ],
        [
            "generalize full_sem.",
            "VernacExtend",
            "48399f324cb2a7b57454263219cf9b968eb34d70"
        ],
        [
            "generalize (start_nt init).",
            "VernacExtend",
            "adbe41e221967b727a2bef912cac088821bda6a7"
        ],
        [
            "dependent destruction full_pt0.",
            "VernacExtend",
            "f400bc52b5f810703ea90c3ea303c394c2b56747"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite build_pt_dot_cost; simpl.",
            "VernacExtend",
            "18732fadc6137b9932fe600f64d2a444c47b133b"
        ],
        [
            "rewrite H, Nat.add_0_r; reflexivity.",
            "VernacExtend",
            "78c97638907194b52487639eeaf3e75ac416a205"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma init_ptd_buffer: ptd_buffer init_ptd = full_word ++ buffer_end.",
            "VernacStartTheoremProof",
            "e614ff15dff3a7474336fb3a437bcf43953e28c1"
        ],
        [
            "unfold init_ptd.",
            "VernacExtend",
            "e0d4207a2275e87014f2f22e89459e6c0fc48518"
        ],
        [
            "assert (ptz_buffer Top_ptz = buffer_end) by reflexivity.",
            "VernacExtend",
            "5a525c0e0b315eb2cfe03395954daa6860f29fa1"
        ],
        [
            "generalize dependent Top_ptz.",
            "VernacExtend",
            "1e90036426ce6659e727fe2a3c1af085ba9af317"
        ],
        [
            "generalize dependent full_word.",
            "VernacExtend",
            "edf95ad1d324de525835d7d6023de809c965033e"
        ],
        [
            "generalize full_sem.",
            "VernacExtend",
            "48399f324cb2a7b57454263219cf9b968eb34d70"
        ],
        [
            "generalize (start_nt init).",
            "VernacExtend",
            "adbe41e221967b727a2bef912cac088821bda6a7"
        ],
        [
            "dependent destruction full_pt0.",
            "VernacExtend",
            "f400bc52b5f810703ea90c3ea303c394c2b56747"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite build_pt_dot_buffer; simpl.",
            "VernacExtend",
            "cca7e2c3414d85dcbbbc0cbb7e43bf365ec2b3ec"
        ],
        [
            "rewrite H; reflexivity.",
            "VernacExtend",
            "1eef9b63d851b99cfa44117acf0ddd958095123d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem parse_complete n_steps: match parse init (full_word ++ buffer_end) n_steps with | OK (Parsed_pr sem_res buffer_end_res) => sem_res = full_sem /\\ buffer_end_res = buffer_end /\\ pt_size full_pt <= n_steps | OK Fail_pr => False | OK Timeout_pr => n_steps < pt_size full_pt | Err => True end.",
            "VernacStartTheoremProof",
            "7fc19ca5081acc9900045a01f2781216967ccf8d"
        ],
        [
            "pose proof (parse_fix_complete init_ptd [] n_steps init_ptd_compat).",
            "VernacExtend",
            "06777a577d9b411bc7174aa5c4f2367ae09f4316"
        ],
        [
            "rewrite init_ptd_buffer, init_ptd_cost in H.",
            "VernacExtend",
            "6d7f4d31eda7eb4737db27b863413f570eb76552"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Completeness_Proof.",
            "VernacEndSegment",
            "4c94ead80f97a77d7fb0e3da13f6ea9d4e494b82"
        ],
        [
            "End Make.",
            "VernacEndSegment",
            "158dcf795fe84f422408437686b9ec9e7417690b"
        ]
    ],
    "proofs": [
        {
            "name": "nullable_stable",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "pose proof complete; unfold Valid.complete in H; intuition.",
                        "VernacExtend",
                        "7d70dfd6d9a6a223d10547e28c3335c48460f3fe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "first_stable",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "pose proof complete; unfold Valid.complete in H; intuition.",
                        "VernacExtend",
                        "7d70dfd6d9a6a223d10547e28c3335c48460f3fe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "start_future",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "pose proof complete; unfold Valid.complete in H; intuition.",
                        "VernacExtend",
                        "7d70dfd6d9a6a223d10547e28c3335c48460f3fe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "terminal_shift",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "pose proof complete; unfold Valid.complete in H; intuition.",
                        "VernacExtend",
                        "7d70dfd6d9a6a223d10547e28c3335c48460f3fe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "end_reduce",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "pose proof complete; unfold Valid.complete in H; intuition.",
                        "VernacExtend",
                        "7d70dfd6d9a6a223d10547e28c3335c48460f3fe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "start_goto",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "pose proof complete; unfold Valid.complete in H; intuition.",
                        "VernacExtend",
                        "7d70dfd6d9a6a223d10547e28c3335c48460f3fe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "non_terminal_goto",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "pose proof complete; unfold Valid.complete in H; intuition.",
                        "VernacExtend",
                        "7d70dfd6d9a6a223d10547e28c3335c48460f3fe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "non_terminal_closed",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "pose proof complete; unfold Valid.complete in H; intuition.",
                        "VernacExtend",
                        "7d70dfd6d9a6a223d10547e28c3335c48460f3fe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ptlz_past_ptlz_prod",
            "line_nb": 81,
            "steps": [
                {
                    "command": [
                        "fix ptlz_past_ptlz_prod 4.",
                        "VernacExtend",
                        "c14a625bc091bfaf6a8b4a9f98f279cc381a35c2"
                    ]
                },
                {
                    "command": [
                        "destruct ptlz; simpl.",
                        "VernacExtend",
                        "585759c17f3c47194fb6f40119cbb92c1396a938"
                    ]
                },
                {
                    "command": [
                        "rewrite <- rev_alt, rev_involutive; reflexivity.",
                        "VernacExtend",
                        "621dbe6a801eda41c0606da44fc51a84bc0ffee2"
                    ]
                },
                {
                    "command": [
                        "apply (ptlz_past_ptlz_prod _ _ _ ptlz).",
                        "VernacExtend",
                        "004de1865e2a2087aaedd84e2c7ce689d1046709"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ptlz_stack_compat_ptlz_state_compat",
            "line_nb": 89,
            "steps": [
                {
                    "command": [
                        "destruct ptlz; simpl; intuition.",
                        "VernacExtend",
                        "7cfb7ea69cfac9ddaf27aedf8ba1fcab94e70c9b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "build_pt_dot_cost",
            "line_nb": 94,
            "steps": [
                {
                    "command": [
                        "fix build_pt_dot_cost 4.",
                        "VernacExtend",
                        "dbfc3c8ef3eb240130c56bacc0afc262abbb4a88"
                    ]
                },
                {
                    "command": [
                        "destruct ptl; intros.",
                        "VernacExtend",
                        "682479811642657d02107f13d8bac49d6dda9f87"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "destruct p.",
                        "VernacExtend",
                        "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite build_pt_dot_cost.",
                        "VernacExtend",
                        "b30fa88eab235b7e2c4ba6259f2ddb1657a884d6"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite <- plus_n_Sm, Nat.add_assoc; reflexivity.",
                        "VernacExtend",
                        "3a93cb061262065a79a802397be26e2aac22ef28"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "build_pt_dot_buffer",
            "line_nb": 103,
            "steps": [
                {
                    "command": [
                        "fix build_pt_dot_buffer 4.",
                        "VernacExtend",
                        "ce454d2147b880e559d6e9ba4104f4775af65d28"
                    ]
                },
                {
                    "command": [
                        "destruct ptl; intros.",
                        "VernacExtend",
                        "682479811642657d02107f13d8bac49d6dda9f87"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "destruct p.",
                        "VernacExtend",
                        "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite build_pt_dot_buffer.",
                        "VernacExtend",
                        "483d7736bff294d3a110fb3bd5c0687ea3571b3e"
                    ]
                },
                {
                    "command": [
                        "apply app_str_app_assoc.",
                        "VernacExtend",
                        "255d5fc2bc85fe7c184e100306a4548d78192251"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ptd_stack_compat_build_pt_dot",
            "line_nb": 112,
            "steps": [
                {
                    "command": [
                        "fix ptd_stack_compat_build_pt_dot 4.",
                        "VernacExtend",
                        "263f899aaebf08990bffe504d3c152ab9e69a9f0"
                    ]
                },
                {
                    "command": [
                        "destruct ptl; intros.",
                        "VernacExtend",
                        "682479811642657d02107f13d8bac49d6dda9f87"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "destruct p.",
                        "VernacExtend",
                        "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply ptd_stack_compat_build_pt_dot.",
                        "VernacExtend",
                        "23529fcb7e08906b4123cef3f950916bbde0b1ea"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply ptlz_stack_compat_ptlz_state_compat, non_terminal_closed in H.",
                        "VernacExtend",
                        "f30af99eda76da72c2fa317b900c28ca610d9db5"
                    ]
                },
                {
                    "command": [
                        "apply H; clear H; eauto.",
                        "VernacExtend",
                        "e6b753e505b6e93569240e406d39eaaf1a49ee24"
                    ]
                },
                {
                    "command": [
                        "destruct wordq.",
                        "VernacExtend",
                        "d9617924c2f7ad49294a37a9e6c9a0670acc580a"
                    ]
                },
                {
                    "command": [
                        "right; split.",
                        "VernacExtend",
                        "7f40e6faa2e8d6f2ee2a39b745aa28054e5d87de"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "eapply nullable_correct_list; eauto.",
                        "VernacExtend",
                        "edd42ff277a83ede8572312f7055a5af089582ce"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "eapply first_correct_list; eauto.",
                        "VernacExtend",
                        "f798711b84f381b6d75b56f30f77791f54204bca"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pop_ptlz_cost",
            "line_nb": 132,
            "steps": [
                {
                    "command": [
                        "fix pop_ptlz_cost 5.",
                        "VernacExtend",
                        "2acac3e473ae337fffef680455221534c56cfbe7"
                    ]
                },
                {
                    "command": [
                        "destruct ptlz.",
                        "VernacExtend",
                        "747816a2deca8aeef667444194b1e3f82539e299"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl; apply pop_ptlz_cost.",
                        "VernacExtend",
                        "9f1d70071541bf5395f80a85e7c46eaff9c0bd72"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pop_ptlz_buffer",
            "line_nb": 138,
            "steps": [
                {
                    "command": [
                        "fix pop_ptlz_buffer 5.",
                        "VernacExtend",
                        "1350c4d3bc0e3f8a852fec330475c1a7fb697fdc"
                    ]
                },
                {
                    "command": [
                        "destruct ptlz.",
                        "VernacExtend",
                        "747816a2deca8aeef667444194b1e3f82539e299"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl; apply pop_ptlz_buffer.",
                        "VernacExtend",
                        "e0234a0ae8bd139bfc8afd0f55118001744eb630"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pop_ptlz_pop_stack_compat_converter",
            "line_nb": 144,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- ptlz_past_ptlz_prod.",
                        "VernacExtend",
                        "a6ddf23e98bb29de552e7d4d97552877a3f0109f"
                    ]
                },
                {
                    "command": [
                        "unfold arrows_right, arrows_left.",
                        "VernacExtend",
                        "0656ef970602fc58e9c03985a9ed7d05364bb03f"
                    ]
                },
                {
                    "command": [
                        "rewrite rev_append_rev, map_rev, map_app, map_rev, <- fold_left_rev_right, rev_involutive, fold_right_app.",
                        "VernacExtend",
                        "956d4ddf5cedff456c332c993cf7c6705087f0ad"
                    ]
                },
                {
                    "command": [
                        "rewrite fold_left_rev_right.",
                        "VernacExtend",
                        "172aea0d1678fdd15cf3572742605a293c1d7878"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "next_ptd_cost",
            "line_nb": 177,
            "steps": [
                {
                    "command": [
                        "destruct ptd.",
                        "VernacExtend",
                        "beae22841d121dfa99331c831aa4383d4a46e0e4"
                    ]
                },
                {
                    "command": [
                        "unfold next_ptd.",
                        "VernacExtend",
                        "f5db7dd4826f2359573ed5a9e48f8fd56d9f772f"
                    ]
                },
                {
                    "command": [
                        "pose proof (pop_ptlz_cost _ _ _ Nil_ptl p).",
                        "VernacExtend",
                        "8c4842dffd6ebe7a526ddf43c53cb9aadb5d7734"
                    ]
                },
                {
                    "command": [
                        "destruct (pop_ptlz Nil_ptl p) as [word[sem[[]]]].",
                        "VernacExtend",
                        "c1b51265289f745a7952dc62d83e1902f51e3457"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite build_pt_dot_cost.",
                        "VernacExtend",
                        "b212d42081a070fbd0ebe6508e8743fd3d120954"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite build_pt_dot_cost; reflexivity.",
                        "VernacExtend",
                        "0910b997e38ccec41eae171510ef2de7afe7a5c3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "step_next_ptd",
            "line_nb": 225,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct ptd.",
                        "VernacExtend",
                        "beae22841d121dfa99331c831aa4383d4a46e0e4"
                    ]
                },
                {
                    "command": [
                        "pose proof (ptlz_stack_compat_ptlz_state_compat _ _ _ _ _ H).",
                        "VernacExtend",
                        "e04ada453b72bc117b1384a6053705aa70fb0fcb"
                    ]
                },
                {
                    "command": [
                        "apply end_reduce in H0.",
                        "VernacExtend",
                        "cbe08b917f3e533a669d34112285a119bd13dd2d"
                    ]
                },
                {
                    "command": [
                        "unfold step.",
                        "VernacExtend",
                        "269f560ac59b066a6926b1cfe0106d1b6bd8ed52"
                    ]
                },
                {
                    "command": [
                        "destruct (action_table (state_of_stack init stack0)).",
                        "VernacExtend",
                        "5cbd2793a102fa1b121d81cb63524337b31b92f8"
                    ]
                },
                {
                    "command": [
                        "rewrite H0 by reflexivity.",
                        "VernacExtend",
                        "f35908b25dedef01fe0b99274c84af3d0e6bf182"
                    ]
                },
                {
                    "command": [
                        "apply reduce_step_next_ptd; assumption.",
                        "VernacExtend",
                        "b449ed958240fced116a73873c704c42070acd9c"
                    ]
                },
                {
                    "command": [
                        "simpl; destruct (Streams.hd (ptlz_buffer p)); simpl in H0.",
                        "VernacExtend",
                        "61631ee39f6914d999b6d65ab1d7c34dbf28aae7"
                    ]
                },
                {
                    "command": [
                        "destruct (l x); intuition; rewrite H1.",
                        "VernacExtend",
                        "14a62e58c177546be42b407d9acf9fd225e5d7ae"
                    ]
                },
                {
                    "command": [
                        "apply reduce_step_next_ptd; assumption.",
                        "VernacExtend",
                        "b449ed958240fced116a73873c704c42070acd9c"
                    ]
                },
                {
                    "command": [
                        "pose proof (ptlz_stack_compat_ptlz_state_compat _ _ _ _ _ H).",
                        "VernacExtend",
                        "e04ada453b72bc117b1384a6053705aa70fb0fcb"
                    ]
                },
                {
                    "command": [
                        "apply terminal_shift in H0.",
                        "VernacExtend",
                        "4a69c9f7088c8ac93628a9a3a29f37ea13f5c484"
                    ]
                },
                {
                    "command": [
                        "unfold step.",
                        "VernacExtend",
                        "269f560ac59b066a6926b1cfe0106d1b6bd8ed52"
                    ]
                },
                {
                    "command": [
                        "destruct (action_table (state_of_stack init stack0)); intuition.",
                        "VernacExtend",
                        "1803e63d5c448dbfe40346fdf2cb2238c8db2844"
                    ]
                },
                {
                    "command": [
                        "simpl; destruct (Streams.hd (ptlz_buffer p0)) as [] eqn:?.",
                        "VernacExtend",
                        "98c0e155295e0c2ebc4d40c5eb94f928f2d9738c"
                    ]
                },
                {
                    "command": [
                        "destruct (l term); intuition.",
                        "VernacExtend",
                        "56f2489929e9c49344c68698126a5d4f59fb1163"
                    ]
                },
                {
                    "command": [
                        "apply ptd_stack_compat_build_pt_dot; simpl; intuition.",
                        "VernacExtend",
                        "9466388bb6a5f186d761401f8697a9fac70e56be"
                    ]
                },
                {
                    "command": [
                        "unfold ptlz_state_compat; simpl; destruct Heqt; assumption.",
                        "VernacExtend",
                        "a87cc78890d62770b3ed92c7ae081679078e16d3"
                    ]
                },
                {
                    "command": [
                        "symmetry; apply JMeq_eqrect with (P:=symbol_semantic_type).",
                        "VernacExtend",
                        "98d68d2a1cd15163ff0313feb9c205c702f4bbb3"
                    ]
                },
                {
                    "command": [
                        "rewrite build_pt_dot_buffer; reflexivity.",
                        "VernacExtend",
                        "1292ee6792ed4e1765a703bee75c0d3b3630047b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "parse_fix_complete",
            "line_nb": 248,
            "steps": [
                {
                    "command": [
                        "fix parse_fix_complete 3.",
                        "VernacExtend",
                        "07a84cf2ea37f3b7c4e6490df389f4c837d68ce0"
                    ]
                },
                {
                    "command": [
                        "destruct n_steps; intros; simpl.",
                        "VernacExtend",
                        "fdffd8f12058c5e64aba04e9a8ce5d3514b710a0"
                    ]
                },
                {
                    "command": [
                        "apply Nat.lt_0_succ.",
                        "VernacExtend",
                        "71ce36185f1fd4314aab0331b52b3659e0a186db"
                    ]
                },
                {
                    "command": [
                        "apply step_next_ptd in H.",
                        "VernacExtend",
                        "90fa5fb72916c8ba8a3ac258821d037b774f86a6"
                    ]
                },
                {
                    "command": [
                        "pose proof (next_ptd_cost ptd).",
                        "VernacExtend",
                        "6bd96889d596dcdca6572081874bf45089f8b854"
                    ]
                },
                {
                    "command": [
                        "destruct (step init stack0 (ptd_buffer ptd)) as [|[]]; simpl; intuition.",
                        "VernacExtend",
                        "559040185664512b5c1cd87da08aacb445cf9b64"
                    ]
                },
                {
                    "command": [
                        "rewrite H3 in H0; rewrite H0.",
                        "VernacExtend",
                        "9b6831ce682c5cbfa3299507362cfacaad047899"
                    ]
                },
                {
                    "command": [
                        "apply le_n_S, Nat.le_0_l.",
                        "VernacExtend",
                        "2006d2567af106f156e5ec181d068809a5a78a01"
                    ]
                },
                {
                    "command": [
                        "destruct (next_ptd ptd); intuition; subst.",
                        "VernacExtend",
                        "a0e6d65d860478c155c16e86e78554775749aed9"
                    ]
                },
                {
                    "command": [
                        "eapply parse_fix_complete with (n_steps:=n_steps) in H1.",
                        "VernacExtend",
                        "aa43b47e31b09c206b48164c602f933876393f39"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "destruct (parse_fix init s (ptd_buffer p) n_steps) as [|[]]; try assumption.",
                        "VernacExtend",
                        "59433195217d6b7374c007c50f04e59283543911"
                    ]
                },
                {
                    "command": [
                        "apply lt_n_S; assumption.",
                        "VernacExtend",
                        "38ef3ed0abee13dbc6e6b1aa6fcc165d558708ff"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as [H1 []]; split; [|split]; try assumption.",
                        "VernacExtend",
                        "6c6b21fdca645b25a52706c2fb506985cf740590"
                    ]
                },
                {
                    "command": [
                        "apply le_n_S; assumption.",
                        "VernacExtend",
                        "0eb3477345554c98971f24ea100acc6b0fe9f945"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "init_ptd_compat",
            "line_nb": 267,
            "steps": [
                {
                    "command": [
                        "unfold init_ptd.",
                        "VernacExtend",
                        "e0d4207a2275e87014f2f22e89459e6c0fc48518"
                    ]
                },
                {
                    "command": [
                        "assert (ptz_stack_compat Top_ptz []) by reflexivity.",
                        "VernacExtend",
                        "80f7c75b3e329c83b6c581708f93db4eb6cd9450"
                    ]
                },
                {
                    "command": [
                        "pose proof (start_future init); revert H0.",
                        "VernacExtend",
                        "b726c45307cf9752b376e354001b1f9cc5f4c619"
                    ]
                },
                {
                    "command": [
                        "generalize dependent Top_ptz.",
                        "VernacExtend",
                        "1e90036426ce6659e727fe2a3c1af085ba9af317"
                    ]
                },
                {
                    "command": [
                        "generalize dependent full_word.",
                        "VernacExtend",
                        "edf95ad1d324de525835d7d6023de809c965033e"
                    ]
                },
                {
                    "command": [
                        "generalize full_sem.",
                        "VernacExtend",
                        "48399f324cb2a7b57454263219cf9b968eb34d70"
                    ]
                },
                {
                    "command": [
                        "generalize (start_nt init).",
                        "VernacExtend",
                        "adbe41e221967b727a2bef912cac088821bda6a7"
                    ]
                },
                {
                    "command": [
                        "dependent destruction full_pt0.",
                        "VernacExtend",
                        "f400bc52b5f810703ea90c3ea303c394c2b56747"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply ptd_stack_compat_build_pt_dot; simpl; intuition.",
                        "VernacExtend",
                        "9466388bb6a5f186d761401f8697a9fac70e56be"
                    ]
                },
                {
                    "command": [
                        "apply H0; reflexivity.",
                        "VernacExtend",
                        "a937a537de614f007d03ed42d6ef34b054efcb82"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "init_ptd_cost",
            "line_nb": 280,
            "steps": [
                {
                    "command": [
                        "unfold init_ptd.",
                        "VernacExtend",
                        "e0d4207a2275e87014f2f22e89459e6c0fc48518"
                    ]
                },
                {
                    "command": [
                        "assert (ptz_cost Top_ptz = 0) by reflexivity.",
                        "VernacExtend",
                        "24909c18c6bb0c13096576fddd9b292a77bbc24d"
                    ]
                },
                {
                    "command": [
                        "generalize dependent Top_ptz.",
                        "VernacExtend",
                        "1e90036426ce6659e727fe2a3c1af085ba9af317"
                    ]
                },
                {
                    "command": [
                        "generalize dependent full_word.",
                        "VernacExtend",
                        "edf95ad1d324de525835d7d6023de809c965033e"
                    ]
                },
                {
                    "command": [
                        "generalize full_sem.",
                        "VernacExtend",
                        "48399f324cb2a7b57454263219cf9b968eb34d70"
                    ]
                },
                {
                    "command": [
                        "generalize (start_nt init).",
                        "VernacExtend",
                        "adbe41e221967b727a2bef912cac088821bda6a7"
                    ]
                },
                {
                    "command": [
                        "dependent destruction full_pt0.",
                        "VernacExtend",
                        "f400bc52b5f810703ea90c3ea303c394c2b56747"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite build_pt_dot_cost; simpl.",
                        "VernacExtend",
                        "18732fadc6137b9932fe600f64d2a444c47b133b"
                    ]
                },
                {
                    "command": [
                        "rewrite H, Nat.add_0_r; reflexivity.",
                        "VernacExtend",
                        "78c97638907194b52487639eeaf3e75ac416a205"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "init_ptd_buffer",
            "line_nb": 292,
            "steps": [
                {
                    "command": [
                        "unfold init_ptd.",
                        "VernacExtend",
                        "e0d4207a2275e87014f2f22e89459e6c0fc48518"
                    ]
                },
                {
                    "command": [
                        "assert (ptz_buffer Top_ptz = buffer_end) by reflexivity.",
                        "VernacExtend",
                        "5a525c0e0b315eb2cfe03395954daa6860f29fa1"
                    ]
                },
                {
                    "command": [
                        "generalize dependent Top_ptz.",
                        "VernacExtend",
                        "1e90036426ce6659e727fe2a3c1af085ba9af317"
                    ]
                },
                {
                    "command": [
                        "generalize dependent full_word.",
                        "VernacExtend",
                        "edf95ad1d324de525835d7d6023de809c965033e"
                    ]
                },
                {
                    "command": [
                        "generalize full_sem.",
                        "VernacExtend",
                        "48399f324cb2a7b57454263219cf9b968eb34d70"
                    ]
                },
                {
                    "command": [
                        "generalize (start_nt init).",
                        "VernacExtend",
                        "adbe41e221967b727a2bef912cac088821bda6a7"
                    ]
                },
                {
                    "command": [
                        "dependent destruction full_pt0.",
                        "VernacExtend",
                        "f400bc52b5f810703ea90c3ea303c394c2b56747"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite build_pt_dot_buffer; simpl.",
                        "VernacExtend",
                        "cca7e2c3414d85dcbbbc0cbb7e43bf365ec2b3ec"
                    ]
                },
                {
                    "command": [
                        "rewrite H; reflexivity.",
                        "VernacExtend",
                        "1eef9b63d851b99cfa44117acf0ddd958095123d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "parse_complete",
            "line_nb": 304,
            "steps": [
                {
                    "command": [
                        "pose proof (parse_fix_complete init_ptd [] n_steps init_ptd_compat).",
                        "VernacExtend",
                        "06777a577d9b411bc7174aa5c4f2367ae09f4316"
                    ]
                },
                {
                    "command": [
                        "rewrite init_ptd_buffer, init_ptd_cost in H.",
                        "VernacExtend",
                        "6d7f4d31eda7eb4737db27b863413f570eb76552"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}