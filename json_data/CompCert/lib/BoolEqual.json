{
    "filename": "lib/BoolEqual.v",
    "coq_project": "CompCert",
    "vernac_cmds": [
        [
            "Require Import Coqlib.",
            "VernacRequire",
            "bbbe15041aca3a03300067f7acd445b462d537cc"
        ],
        [
            "Module BE.",
            "VernacDefineModule",
            "b3fa2545c80c9aca417a3d159d20ebe5617d96ac"
        ],
        [
            "Definition bool_eq {A: Type} (x y: A) : Type := bool.",
            "VernacDefinition",
            "ae53df07f9e2f16da6564e81345bbadfc0dad537"
        ],
        [
            "Ltac bool_eq_base x y := change (bool_eq x y); match goal with | [ H: forall (x y: ?A), bool |- @bool_eq ?A x y ] => exact (H x y) | [ H: forall (x y: ?A), {x=y} + {x<>y} |- @bool_eq ?A x y ] => exact (proj_sumbool (H x y)) | _ => idtac end.",
            "VernacExtend",
            "7d23d7a17a6a6784b748e33d610bf1db35c08a5c"
        ],
        [
            "Ltac bool_eq_case := match goal with | |- bool_eq (?C ?x1 ?x2 ?x3 ?x4) (?C ?y1 ?y2 ?y3 ?y4) => refine (_ && _ && _ && _); [bool_eq_base x1 y1|bool_eq_base x2 y2|bool_eq_base x3 y3|bool_eq_base x4 y4] | |- bool_eq (?C ?x1 ?x2 ?x3) (?C ?y1 ?y2 ?y3) => refine (_ && _ && _); [bool_eq_base x1 y1|bool_eq_base x2 y2|bool_eq_base x3 y3] | |- bool_eq (?C ?x1 ?x2) (?C ?y1 ?y2) => refine (_ && _); [bool_eq_base x1 y1|bool_eq_base x2 y2] | |- bool_eq (?C ?x1) (?C ?y1) => bool_eq_base x1 y1 | |- bool_eq ?C ?C => exact true | |- bool_eq _ _ => exact false end.",
            "VernacExtend",
            "cec667c2bca977d98ca103b41d84c37255b04575"
        ],
        [
            "Ltac bool_eq := match goal with | [ |- ?A -> ?A -> bool ] => let f := fresh \"rec\" in let x := fresh \"x\" in let y := fresh \"y\" in fix f 1; intros x y; change (bool_eq x y); destruct x, y; bool_eq_case | [ |- _ -> _ ] => let eq := fresh \"eq\" in intro eq; bool_eq end.",
            "VernacExtend",
            "6a1cd7ba3cc5820ae694ae6a8a3fd3bdf6768238"
        ],
        [
            "Lemma proj_sumbool_is_true: forall (A: Type) (f: forall (x y: A), {x=y} + {x<>y}) (x: A), proj_sumbool (f x x) = true.",
            "VernacStartTheoremProof",
            "ba2987a7445b575bf5d0c0f56005ced2075b301c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold proj_sumbool.",
            "VernacExtend",
            "9486e2b04f32f63b41268a30bc0b2a9032f4c304"
        ],
        [
            "destruct (f x x).",
            "VernacExtend",
            "3175a6fc0dce2b744950e82b0269bf331dd2f93c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "elim n; auto.",
            "VernacExtend",
            "3a8caa8ad55d0caef05cad9a8edac9567ac3fef6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac bool_eq_refl_case := match goal with | [ |- true = true ] => reflexivity | [ |- proj_sumbool _ = true ] => apply proj_sumbool_is_true | [ |- _ && _ = true ] => apply andb_true_iff; split; bool_eq_refl_case | _ => auto end.",
            "VernacExtend",
            "cbea20008c79db141a111f9e0b69673b94dc2119"
        ],
        [
            "Ltac bool_eq_refl := let H := fresh \"Hrec\" in let x := fresh \"x\" in fix H 1; intros x; destruct x; simpl; bool_eq_refl_case.",
            "VernacExtend",
            "1152ab7d7c892b095f4b8b0b85626161fe938c4b"
        ],
        [
            "Lemma false_not_true: forall (P: Prop), false = true -> P.",
            "VernacStartTheoremProof",
            "185f74ec18f3a0832ebd882c002075f2d30610c5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma proj_sumbool_true: forall (A: Type) (x y: A) (a: {x=y} + {x<>y}), proj_sumbool a = true -> x = y.",
            "VernacStartTheoremProof",
            "64a7e588392adc2c0d1881d1203e51265d110ff6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct a.",
            "VernacExtend",
            "3f53f61a7882a1bcc65ff705b5afc6c02a0dddf5"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac bool_eq_sound_case := match goal with | [ H: false = true |- _ ] => exact (false_not_true _ H) | [ H: _ && _ = true |- _ ] => apply andb_prop in H; destruct H; bool_eq_sound_case | [ H: proj_sumbool ?a = true |- _ ] => apply proj_sumbool_true in H; bool_eq_sound_case | [ |- ?C ?x1 ?x2 ?x3 ?x4 = ?C ?y1 ?y2 ?y3 ?y4 ] => apply f_equal4; auto | [ |- ?C ?x1 ?x2 ?x3 = ?C ?y1 ?y2 ?y3 ] => apply f_equal3; auto | [ |- ?C ?x1 ?x2 = ?C ?y1 ?y2 ] => apply f_equal2; auto | [ |- ?C ?x1 = ?C ?y1 ] => apply f_equal; auto | [ |- ?x = ?x ] => reflexivity | _ => idtac end.",
            "VernacExtend",
            "a65c66b0a66919457bc0efea4f6a9485e9d05cfa"
        ],
        [
            "Ltac bool_eq_sound := let Hrec := fresh \"Hrec\" in let x := fresh \"x\" in let y := fresh \"y\" in fix Hrec 1; intros x y; destruct x, y; simpl; intro; bool_eq_sound_case.",
            "VernacExtend",
            "0743e0c4829f1fa9aae9921bb6fed56a5ce5a4f7"
        ],
        [
            "Lemma dec_eq_from_bool_eq: forall (A: Type) (f: A -> A -> bool) (f_refl: forall x, f x x = true) (f_sound: forall x y, f x y = true -> x = y), forall (x y: A), {x=y} + {x<>y}.",
            "VernacStartTheoremProof",
            "2796c9861afbd093e9fb9b2ec07ef026be0f5b07"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (f x y) eqn:E.",
            "VernacExtend",
            "c81646947ddeffd9cc6fae3bdd590d36c8cae222"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply f_sound.",
            "VernacExtend",
            "d8420fd3748aabab9a050816ce82f047718eb9ab"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "right; red; intros.",
            "VernacExtend",
            "be070449f39c7bf2d59e15076efd6eaa8bb91c50"
        ],
        [
            "subst y.",
            "VernacExtend",
            "f056a00b852bc549d1b8bb21d500c90d8ff37bf8"
        ],
        [
            "rewrite f_refl in E.",
            "VernacExtend",
            "d2ca18f2d4270cba24c77698b85e92f3bb618e48"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End BE.",
            "VernacEndSegment",
            "537c03998ccbcb9304da88afaa370e3f9514b454"
        ],
        [
            "Ltac boolean_equality := BE.bool_eq.",
            "VernacExtend",
            "7c58d514ddbbea0700c972902c9ceb9053002b87"
        ],
        [
            "Ltac decidable_equality_from beq := apply (BE.dec_eq_from_bool_eq _ beq); [abstract BE.bool_eq_refl|abstract BE.bool_eq_sound].",
            "VernacExtend",
            "cea6b17b5059990f2e7d877318037f1c5d86f75a"
        ]
    ],
    "proofs": [
        {
            "name": "proj_sumbool_is_true",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold proj_sumbool.",
                        "VernacExtend",
                        "9486e2b04f32f63b41268a30bc0b2a9032f4c304"
                    ]
                },
                {
                    "command": [
                        "destruct (f x x).",
                        "VernacExtend",
                        "3175a6fc0dce2b744950e82b0269bf331dd2f93c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "elim n; auto.",
                        "VernacExtend",
                        "3a8caa8ad55d0caef05cad9a8edac9567ac3fef6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "false_not_true",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "proj_sumbool_true",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct a.",
                        "VernacExtend",
                        "3f53f61a7882a1bcc65ff705b5afc6c02a0dddf5"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dec_eq_from_bool_eq",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (f x y) eqn:E.",
                        "VernacExtend",
                        "c81646947ddeffd9cc6fae3bdd590d36c8cae222"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "apply f_sound.",
                        "VernacExtend",
                        "d8420fd3748aabab9a050816ce82f047718eb9ab"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "right; red; intros.",
                        "VernacExtend",
                        "be070449f39c7bf2d59e15076efd6eaa8bb91c50"
                    ]
                },
                {
                    "command": [
                        "subst y.",
                        "VernacExtend",
                        "f056a00b852bc549d1b8bb21d500c90d8ff37bf8"
                    ]
                },
                {
                    "command": [
                        "rewrite f_refl in E.",
                        "VernacExtend",
                        "d2ca18f2d4270cba24c77698b85e92f3bb618e48"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        }
    ]
}