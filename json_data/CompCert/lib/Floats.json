{
    "filename": "lib/Floats.v",
    "coq_project": "CompCert",
    "vernac_cmds": [
        [
            "Require Import Coqlib.",
            "VernacRequire",
            "bbbe15041aca3a03300067f7acd445b462d537cc"
        ],
        [
            "Require Import Integers.",
            "VernacRequire",
            "688f068e3335df7950b569ef75a5e993414c9874"
        ],
        [
            "Require Import Fappli_IEEE.",
            "VernacRequire",
            "db3cd5e35ae51a45763c77e32e40a30be044b79b"
        ],
        [
            "Require Import Fappli_IEEE_bits.",
            "VernacRequire",
            "20ed6e0821921a208459585e5c780335de026100"
        ],
        [
            "Require Import Fappli_IEEE_extra.",
            "VernacRequire",
            "2a96b74fa98b5b9187faaca29185f165602a94b9"
        ],
        [
            "Require Import Fcore.",
            "VernacRequire",
            "0726413a0cd1e00c4c23af78515a8bb580c73ed5"
        ],
        [
            "Require Import Program.",
            "VernacRequire",
            "370afd7212c34b8d2bc9c310ed580f37e6aad0c3"
        ],
        [
            "Require Archi.",
            "VernacRequire",
            "019739e08394793e2d196b9db729424cb460d119"
        ],
        [
            "Close Scope R_scope.",
            "VernacOpenCloseScope",
            "eea2296198bc66ae773892515a3bc695077cc635"
        ],
        [
            "Definition float := binary64.",
            "VernacDefinition",
            "57fda672998818550bec856b6b8e778512b65003"
        ],
        [
            "Definition float32 := binary32.",
            "VernacDefinition",
            "3905917e0b9d1caff71c28bc29c165084d820957"
        ],
        [
            "Definition cmp_of_comparison (c: comparison) (x: option Datatypes.comparison) : bool := match c with | Ceq => match x with Some Eq => true | _ => false end | Cne => match x with Some Eq => false | _ => true end | Clt => match x with Some Lt => true | _ => false end | Cle => match x with Some(Lt|Eq) => true | _ => false end | Cgt => match x with Some Gt => true | _ => false end | Cge => match x with Some(Gt|Eq) => true | _ => false end end.",
            "VernacDefinition",
            "6060df39ad57af152b0376f61f5c9e692c87e5cd"
        ],
        [
            "Definition ordered_of_comparison (x: option Datatypes.comparison) : bool := match x with None => false | Some _ => true end.",
            "VernacDefinition",
            "6d98c53b2ca44be4ba7eee9de6bdc8219a385081"
        ],
        [
            "Lemma cmp_of_comparison_swap: forall c x, cmp_of_comparison (swap_comparison c) x = cmp_of_comparison c (match x with None => None | Some x => Some (CompOpp x) end).",
            "VernacStartTheoremProof",
            "eb0193c243667909ec503a1c95553621c435fd37"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct c; destruct x as [[]|]; reflexivity.",
            "VernacExtend",
            "7762eadf25eb0b4a77020955d1ee2756bb59dd28"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cmp_of_comparison_ne_eq: forall x, cmp_of_comparison Cne x = negb (cmp_of_comparison Ceq x).",
            "VernacStartTheoremProof",
            "6e3cd4624d4bfc878b8600087db1d9960029b109"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct x as [[]|]; reflexivity.",
            "VernacExtend",
            "514d32627fe4422719de9f7c53aa7b519d0ee188"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cmp_of_comparison_lt_eq_false: forall x, cmp_of_comparison Clt x = true -> cmp_of_comparison Ceq x = true -> False.",
            "VernacStartTheoremProof",
            "104eea91a328f3d743f5cc605d13048c688e7274"
        ],
        [
            "destruct x as [[]|]; simpl; intros; discriminate.",
            "VernacExtend",
            "fa8d27c9812c4bef8d607e0031f170bd641616d4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cmp_of_comparison_le_lt_eq: forall x, cmp_of_comparison Cle x = cmp_of_comparison Clt x || cmp_of_comparison Ceq x.",
            "VernacStartTheoremProof",
            "3e3a9036611b41eb9b9cbec3fe25f3d4539423b6"
        ],
        [
            "destruct x as [[]|]; reflexivity.",
            "VernacExtend",
            "514d32627fe4422719de9f7c53aa7b519d0ee188"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cmp_of_comparison_gt_eq_false: forall x, cmp_of_comparison Cgt x = true -> cmp_of_comparison Ceq x = true -> False.",
            "VernacStartTheoremProof",
            "3b8226e9fc29c26bd52ac4ee6f2f690238aa1dd4"
        ],
        [
            "destruct x as [[]|]; simpl; intros; discriminate.",
            "VernacExtend",
            "fa8d27c9812c4bef8d607e0031f170bd641616d4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cmp_of_comparison_ge_gt_eq: forall x, cmp_of_comparison Cge x = cmp_of_comparison Cgt x || cmp_of_comparison Ceq x.",
            "VernacStartTheoremProof",
            "0680112dd2f64bbdacdfd0e7b86b1caf6f8810a6"
        ],
        [
            "destruct x as [[]|]; reflexivity.",
            "VernacExtend",
            "514d32627fe4422719de9f7c53aa7b519d0ee188"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cmp_of_comparison_lt_gt_false: forall x, cmp_of_comparison Clt x = true -> cmp_of_comparison Cgt x = true -> False.",
            "VernacStartTheoremProof",
            "d825f383d4a6a2c04981c3dfeda89cdce5d72e40"
        ],
        [
            "destruct x as [[]|]; simpl; intros; discriminate.",
            "VernacExtend",
            "fa8d27c9812c4bef8d607e0031f170bd641616d4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Notation __ := (eq_refl Datatypes.Lt).",
            "VernacSyntacticDefinition",
            "9285b115c24f211898cb5733bcbbf7d8bffcc1f5"
        ],
        [
            "Local Hint Extern 1 (Prec_gt_0 _) => exact (eq_refl Datatypes.Lt).",
            "VernacHints",
            "f727a0401605072911e9fac05f714fde4a34a980"
        ],
        [
            "Local Hint Extern 1 (_ < _) => exact (eq_refl Datatypes.Lt).",
            "VernacHints",
            "32624989c78a9526302559b3f05c42ceca5b2615"
        ],
        [
            "Module Float.",
            "VernacDefineModule",
            "12fd6a566bc035610a63095284813c7e7db21d6d"
        ],
        [
            "Program Definition transform_quiet_pl (pl:nan_pl 53) : nan_pl 53 := Pos.lor pl (iter_nat xO 51 xH).",
            "VernacDefinition",
            "c39688192c8d13fe2cae741bdf3f333f8f539feb"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "destruct pl.",
            "VernacExtend",
            "065af7eedd7ce004ccb5c8daff0f581142d21118"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Z.ltb_lt in *.",
            "VernacExtend",
            "1cda7adf032c7d639ade9df60b33a86a1c70022e"
        ],
        [
            "assert (forall x, Fcore_digits.digits2_pos x = Pos.size x).",
            "VernacExtend",
            "da6c8ad2cf2fccd238994683ecfbb9fcaa3d00a0"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "induction x0; simpl; auto; rewrite IHx0; zify; omega.",
            "VernacExtend",
            "17049ddbf6e6e2b542d17150787032a7a9e2b309"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite H, Psize_log_inf, <- Zlog2_log_inf in *.",
            "VernacExtend",
            "9221757fa5492dd4998e140d0b6d604956b629a7"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "change (Z.pos (Pos.lor x 2251799813685248)) with (Z.lor (Z.pos x) 2251799813685248%Z).",
            "VernacExtend",
            "6f552c802dce978f4662e4633853c9151c699be9"
        ],
        [
            "rewrite Z.log2_lor by (zify; omega).",
            "VernacExtend",
            "db821cc71d7e8171d1e3c9a7bbcba6765d5a3c35"
        ],
        [
            "apply Z.max_case.",
            "VernacExtend",
            "315a716e82f6808160c7103ee85c36339f5ac98c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nan_payload_fequal: forall prec (p1 p2: nan_pl prec), proj1_sig p1 = proj1_sig p2 -> p1 = p2.",
            "VernacStartTheoremProof",
            "d9c41e1c72410746a3a68dae33cb9b61fccf1e50"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct p1, p2; simpl in H; subst.",
            "VernacExtend",
            "b4ab5fa96b08ff762710a14ddc4b09293f8e76c4"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply Fcore_Zaux.eqbool_irrelevance.",
            "VernacExtend",
            "1e99e6497026fcb7d82a4d3ef892ac07c3f3f3e3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lor_idempotent: forall x y, Pos.lor (Pos.lor x y) y = Pos.lor x y.",
            "VernacStartTheoremProof",
            "2c4e0fe67108337622479640bcb83bd342a30aa0"
        ],
        [
            "induction x; destruct y; simpl; f_equal; auto; induction y; simpl; f_equal; auto.",
            "VernacExtend",
            "39f5e03fd9e352245af6daaaca4d141083b3947a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma transform_quiet_pl_idempotent: forall pl, transform_quiet_pl (transform_quiet_pl pl) = transform_quiet_pl pl.",
            "VernacStartTheoremProof",
            "24c5ee1574e04b581633cd5e6cacd6478543a73a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply nan_payload_fequal; simpl.",
            "VernacExtend",
            "ed9545d9ef4c39846b2df33018343131c58da073"
        ],
        [
            "apply lor_idempotent.",
            "VernacExtend",
            "c2e62a375fb0dce4635c2a43122aefd452d6ac20"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition expand_pl (pl: nan_pl 24) : nan_pl 53.",
            "VernacDefinition",
            "1d1c68cdc2c7217425147ee7385c099e08103bd2"
        ],
        [
            "refine (exist _ (Pos.shiftl_nat (proj1_sig pl) 29) _).",
            "VernacExtend",
            "a88797c4bb15b3b7b3d9d50e3bc734a16675b459"
        ],
        [
            "abstract ( destruct pl; unfold proj1_sig, Pos.shiftl_nat, nat_rect, Fcore_digits.digits2_pos; fold (Fcore_digits.digits2_pos x); rewrite Z.ltb_lt in *; zify; omega).",
            "VernacExtend",
            "6381062721e9ad07b5378370081f1e2507ba0a6f"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition of_single_pl (s:bool) (pl:nan_pl 24) : (bool * nan_pl 53) := (s, if Archi.float_of_single_preserves_sNaN then expand_pl pl else transform_quiet_pl (expand_pl pl)).",
            "VernacDefinition",
            "007e18125f8eacd464ba7ebe7e80a9c64c6310ac"
        ],
        [
            "Definition reduce_pl (pl: nan_pl 53) : nan_pl 24.",
            "VernacDefinition",
            "d303da8740b1caf7610cd5fce1ee0de61cc830c1"
        ],
        [
            "refine (exist _ (Pos.shiftr_nat (proj1_sig pl) 29) _).",
            "VernacExtend",
            "8596a9f1211fc9d813524940889cba2c36b65ab0"
        ],
        [
            "abstract ( destruct pl; unfold proj1_sig, Pos.shiftr_nat, nat_rect; rewrite Z.ltb_lt in *; assert (forall x, Fcore_digits.digits2_pos (Pos.div2 x) = (Fcore_digits.digits2_pos x - 1)%positive) by (destruct x0; simpl; auto; rewrite Pplus_one_succ_r, Pos.add_sub; auto); rewrite !H, !Pos2Z.inj_sub_max; repeat (apply Z.max_lub_lt; [reflexivity |apply Z.lt_sub_lt_add_l]); auto).",
            "VernacExtend",
            "4c3ba00daab94003adfd267d24550f8ca3a65c11"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition to_single_pl (s:bool) (pl:nan_pl 53) : (bool * nan_pl 24) := (s, reduce_pl (transform_quiet_pl pl)).",
            "VernacDefinition",
            "c46db9a9af6221837d64adc1c36655451b68fc63"
        ],
        [
            "Definition neg_pl (s:bool) (pl:nan_pl 53) := (negb s, pl).",
            "VernacDefinition",
            "b042970d153999ccc21d0df458a92601758e1846"
        ],
        [
            "Definition abs_pl (s:bool) (pl:nan_pl 53) := (false, pl).",
            "VernacDefinition",
            "ce13d0f0f3ff33dbe121e9a6aa5fdaefb71cfcee"
        ],
        [
            "Definition binop_pl (x y: binary64) : bool*nan_pl 53 := match x, y with | B754_nan s1 pl1, B754_nan s2 pl2 => if Archi.choose_binop_pl_64 s1 pl1 s2 pl2 then (s2, transform_quiet_pl pl2) else (s1, transform_quiet_pl pl1) | B754_nan s1 pl1, _ => (s1, transform_quiet_pl pl1) | _, B754_nan s2 pl2 => (s2, transform_quiet_pl pl2) | _, _ => Archi.default_pl_64 end.",
            "VernacDefinition",
            "0df1c14b0c9cb526bcc6f5c207fdefc76bcb1858"
        ],
        [
            "Definition zero: float := B754_zero _ _ false.",
            "VernacDefinition",
            "8dc81a5797b3e748ef6b1d96957cb68c967b7526"
        ],
        [
            "Definition eq_dec: forall (f1 f2: float), {f1 = f2} + {f1 <> f2} := Beq_dec _ _.",
            "VernacDefinition",
            "42e7e153081edfb63e38062815642fb7e01944cf"
        ],
        [
            "Definition neg: float -> float := Bopp _ _ neg_pl.",
            "VernacDefinition",
            "220a5053361283d202436b75446413741291aa2e"
        ],
        [
            "Definition abs: float -> float := Babs _ _ abs_pl.",
            "VernacDefinition",
            "0efe9de2eb409bd6e9f4eeaca52c51145f3f566b"
        ],
        [
            "Definition add: float -> float -> float := Bplus 53 1024 __ __ binop_pl mode_NE.",
            "VernacDefinition",
            "fa300650ffc98ebaccd5aa719ef3e28bfd8285c7"
        ],
        [
            "Definition sub: float -> float -> float := Bminus 53 1024 __ __ binop_pl mode_NE.",
            "VernacDefinition",
            "a76e82ce4716aa7d73022cdcc0c55b1b7e16d173"
        ],
        [
            "Definition mul: float -> float -> float := Bmult 53 1024 __ __ binop_pl mode_NE.",
            "VernacDefinition",
            "15a4596b60c4d77842e6d8e10488cab75992b1d7"
        ],
        [
            "Definition div: float -> float -> float := Bdiv 53 1024 __ __ binop_pl mode_NE.",
            "VernacDefinition",
            "e38d0a4466d9fcb85b6c88ed600419f1e420871d"
        ],
        [
            "Definition compare (f1 f2: float) : option Datatypes.comparison := Bcompare 53 1024 f1 f2.",
            "VernacDefinition",
            "6a17759eb00f49b733d96cd1577ece4aa5278da4"
        ],
        [
            "Definition cmp (c:comparison) (f1 f2: float) : bool := cmp_of_comparison c (compare f1 f2).",
            "VernacDefinition",
            "d372146e73c678cf90cf2ef92decc556f64002b5"
        ],
        [
            "Definition ordered (f1 f2: float) : bool := ordered_of_comparison (compare f1 f2).",
            "VernacDefinition",
            "62b60eccc0f69c4f21dfa50ce096b0fe0f6e3f74"
        ],
        [
            "Definition of_single: float32 -> float := Bconv _ _ 53 1024 __ __ of_single_pl mode_NE.",
            "VernacDefinition",
            "9bff35f1cfe69bdc23d06282143dcee1b848311f"
        ],
        [
            "Definition to_single: float -> float32 := Bconv _ _ 24 128 __ __ to_single_pl mode_NE.",
            "VernacDefinition",
            "8186f048619f682eeb0d98101b4344d60aa5ebc5"
        ],
        [
            "Definition to_int (f:float): option int := option_map Int.repr (ZofB_range _ _ f Int.min_signed Int.max_signed).",
            "VernacDefinition",
            "1486fb75e95f3addbfeae33e6cd3d962df6ce744"
        ],
        [
            "Definition to_intu (f:float): option int := option_map Int.repr (ZofB_range _ _ f 0 Int.max_unsigned).",
            "VernacDefinition",
            "2fe1f59bef953cdcfb8b5135bb3a47f2bffea415"
        ],
        [
            "Definition to_long (f:float): option int64 := option_map Int64.repr (ZofB_range _ _ f Int64.min_signed Int64.max_signed).",
            "VernacDefinition",
            "dedb4c3d7b31ce00b8e2d01b248ea52a1d2e203a"
        ],
        [
            "Definition to_longu (f:float): option int64 := option_map Int64.repr (ZofB_range _ _ f 0 Int64.max_unsigned).",
            "VernacDefinition",
            "0e635e9ca34fb31928aba00d2ac73527994f5c8f"
        ],
        [
            "Definition of_int (n:int): float := BofZ 53 1024 __ __ (Int.signed n).",
            "VernacDefinition",
            "a33096d7ac55c08641cadd5088a03ce2bd027a3b"
        ],
        [
            "Definition of_intu (n:int): float:= BofZ 53 1024 __ __ (Int.unsigned n).",
            "VernacDefinition",
            "e842f10b06ede2703b8de27aa3cc005215e41918"
        ],
        [
            "Definition of_long (n:int64): float := BofZ 53 1024 __ __ (Int64.signed n).",
            "VernacDefinition",
            "263ef6dac19f58212ac9a344c7f98712aa057cdf"
        ],
        [
            "Definition of_longu (n:int64): float:= BofZ 53 1024 __ __ (Int64.unsigned n).",
            "VernacDefinition",
            "69db0294b975d4aa717299f9ee2be9b31fd3979b"
        ],
        [
            "Definition from_parsed (base:positive) (intPart:positive) (expPart:Z) : float := Bparse 53 1024 __ __ base intPart expPart.",
            "VernacDefinition",
            "7715fa58adadd5cfb16cd6547b8654c402164df1"
        ],
        [
            "Definition to_bits (f: float): int64 := Int64.repr (bits_of_b64 f).",
            "VernacDefinition",
            "cccc2c93769e305224ef850168a4c93e38a9ccc3"
        ],
        [
            "Definition of_bits (b: int64): float := b64_of_bits (Int64.unsigned b).",
            "VernacDefinition",
            "d2d1a43e14f0c1d87a96eb08b236618f6b021061"
        ],
        [
            "Definition from_words (hi lo: int) : float := of_bits (Int64.ofwords hi lo).",
            "VernacDefinition",
            "9a6b5132b35e7f11921105ade90c50a35029d2b0"
        ],
        [
            "Ltac compute_this val := let x := fresh in set val as x in *; vm_compute in x; subst x.",
            "VernacExtend",
            "a34e4d4ea8eb1f76ff2c7ef4345932adc8925868"
        ],
        [
            "Ltac smart_omega := simpl radix_val in *; simpl Z.pow in *; compute_this Int.modulus; compute_this Int.half_modulus; compute_this Int.max_unsigned; compute_this Int.min_signed; compute_this Int.max_signed; compute_this Int64.modulus; compute_this Int64.half_modulus; compute_this Int64.max_unsigned; compute_this (Z.pow_pos 2 1024); compute_this (Z.pow_pos 2 53); compute_this (Z.pow_pos 2 52); compute_this (Z.pow_pos 2 32); zify; omega.",
            "VernacExtend",
            "58a84252511f10e81c95747e7d5e7a9b27de4b04"
        ],
        [
            "Theorem add_commut: forall x y, is_nan _ _ x = false \\/ is_nan _ _ y = false -> add x y = add y x.",
            "VernacStartTheoremProof",
            "c006b87b95913659d42a00e63e008bd0c6a3e76b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Bplus_commut.",
            "VernacExtend",
            "1f08c1c008a31d6336e159ba7429f270d238e41f"
        ],
        [
            "destruct x, y; try reflexivity.",
            "VernacExtend",
            "40a808c9b8705657dde857bc494bb951c020a81d"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "intuition congruence.",
            "VernacExtend",
            "2cba3542847e3f4ea52f3f62375adc6e8f8f04bc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_commut: forall x y, is_nan _ _ x = false \\/ is_nan _ _ y = false -> mul x y = mul y x.",
            "VernacStartTheoremProof",
            "23d89d5d6de5542d892f1adf397a73078d9e3635"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Bmult_commut.",
            "VernacExtend",
            "068d1dcec59d9986bc0399d6ae9e949164b46150"
        ],
        [
            "destruct x, y; try reflexivity.",
            "VernacExtend",
            "40a808c9b8705657dde857bc494bb951c020a81d"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "intuition congruence.",
            "VernacExtend",
            "2cba3542847e3f4ea52f3f62375adc6e8f8f04bc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul2_add: forall f, add f f = mul f (of_int (Int.repr 2%Z)).",
            "VernacStartTheoremProof",
            "a57b82beb63676eed16880be87011747e990018d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Bmult2_Bplus.",
            "VernacExtend",
            "c8a4a7d46a5cf341011d15ce3754cd2f3570e4a9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct x; try discriminate.",
            "VernacExtend",
            "0d2b5f75157aee3dd67f803b89f3b6bee89c208a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "transitivity (b, transform_quiet_pl n).",
            "VernacExtend",
            "30f2c49c01eb9a3ce185aff264b11e26d85f9ee6"
        ],
        [
            "destruct Archi.choose_binop_pl_64; auto.",
            "VernacExtend",
            "840e50795f5e31b634fbeafb01f4c8a3bc30bf1a"
        ],
        [
            "destruct y; auto || discriminate.",
            "VernacExtend",
            "7fd9797708c5c9b05af79283b8cc340091dc8741"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition exact_inverse : float -> option float := Bexact_inverse 53 1024 __ __.",
            "VernacDefinition",
            "e772a2bab748ebf0fc604ddcb3aa38ee29dcf674"
        ],
        [
            "Theorem div_mul_inverse: forall x y z, exact_inverse y = Some z -> div x y = mul x z.",
            "VernacStartTheoremProof",
            "3e857a33c5675c4c5c7e312993f0345c0950672c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Bdiv_mult_inverse; auto.",
            "VernacExtend",
            "21c3d3d08c02ba164a5fcb7a776b0b7b4dd4377e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct x0; try discriminate.",
            "VernacExtend",
            "a730c7a2c6af8944c9052c6601e661737560e3e4"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "transitivity (b, transform_quiet_pl n).",
            "VernacExtend",
            "30f2c49c01eb9a3ce185aff264b11e26d85f9ee6"
        ],
        [
            "destruct y0; reflexivity || discriminate.",
            "VernacExtend",
            "a2ffed3b609219194a3d6596d2e7f66b0727c095"
        ],
        [
            "destruct z0; reflexivity || discriminate.",
            "VernacExtend",
            "57ea07d0c0f7bf6f9020fae84ebb5c1e8e85a9d5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cmp_swap: forall c x y, cmp (swap_comparison c) x y = cmp c y x.",
            "VernacStartTheoremProof",
            "1e19accf5d67d2e60e98ac305378782d002c6166"
        ],
        [
            "unfold cmp, compare; intros.",
            "VernacExtend",
            "08d7a98f8859cdb3ca2576cdcede3b57b1719cd0"
        ],
        [
            "rewrite (Bcompare_swap _ _ x y).",
            "VernacExtend",
            "3a3d36d2541ded7be2710f7ac7dc73287927f111"
        ],
        [
            "apply cmp_of_comparison_swap.",
            "VernacExtend",
            "e6590d2efa9d5792d6bf8f1cff852152a997b171"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cmp_ne_eq: forall f1 f2, cmp Cne f1 f2 = negb (cmp Ceq f1 f2).",
            "VernacStartTheoremProof",
            "050339cd86b7d07462ddb852b58f3edcbe9bd5b6"
        ],
        [
            "intros; apply cmp_of_comparison_ne_eq.",
            "VernacExtend",
            "594324cb03954ad368d36727c5917a110d4a81c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cmp_lt_eq_false: forall f1 f2, cmp Clt f1 f2 = true -> cmp Ceq f1 f2 = true -> False.",
            "VernacStartTheoremProof",
            "8e0f8520d4fc51da25c78222b1d3a1f447379bee"
        ],
        [
            "intros f1 f2; apply cmp_of_comparison_lt_eq_false.",
            "VernacExtend",
            "e3d8a8226eb2f1b78394dffc0712d19723c52fdf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cmp_le_lt_eq: forall f1 f2, cmp Cle f1 f2 = cmp Clt f1 f2 || cmp Ceq f1 f2.",
            "VernacStartTheoremProof",
            "4d51e856cc48520191b80c30d01ff3a471346769"
        ],
        [
            "intros f1 f2; apply cmp_of_comparison_le_lt_eq.",
            "VernacExtend",
            "3503e300f255f23956951c62b9cff68b6e8f1b21"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cmp_gt_eq_false: forall x y, cmp Cgt x y = true -> cmp Ceq x y = true -> False.",
            "VernacStartTheoremProof",
            "9599aaf9ca62b7975083e87a9337766ae07c95ef"
        ],
        [
            "intros f1 f2; apply cmp_of_comparison_gt_eq_false.",
            "VernacExtend",
            "9ece1f692274097a10b17c6fa25a9291278ef245"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cmp_ge_gt_eq: forall f1 f2, cmp Cge f1 f2 = cmp Cgt f1 f2 || cmp Ceq f1 f2.",
            "VernacStartTheoremProof",
            "d885f49d333623c5000d8512c393b1bb80223066"
        ],
        [
            "intros f1 f2; apply cmp_of_comparison_ge_gt_eq.",
            "VernacExtend",
            "51fb8f1e0a90cce67dd8308bc3235e38e53871bd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cmp_lt_gt_false: forall f1 f2, cmp Clt f1 f2 = true -> cmp Cgt f1 f2 = true -> False.",
            "VernacStartTheoremProof",
            "26e47829284333c01f75a4b281dc5b45f03fbfd9"
        ],
        [
            "intros f1 f2; apply cmp_of_comparison_lt_gt_false.",
            "VernacExtend",
            "d3dadade67861e0767003bc31fc9e49d082c487f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem of_to_bits: forall f, of_bits (to_bits f) = f.",
            "VernacStartTheoremProof",
            "ce59889ba7f00f47ada266978103c2cfece06554"
        ],
        [
            "intros; unfold of_bits, to_bits, bits_of_b64, b64_of_bits.",
            "VernacExtend",
            "d3a40fdd229589a7ef25a7095af319838e5800c2"
        ],
        [
            "rewrite Int64.unsigned_repr, binary_float_of_bits_of_binary_float; [reflexivity|].",
            "VernacExtend",
            "fb68b19138e72df9218f15bb6485c104223a37c6"
        ],
        [
            "generalize (bits_of_binary_float_range 52 11 __ __ f).",
            "VernacExtend",
            "2f0c645172bc13919138b87178e2850b34a9891d"
        ],
        [
            "change (2^(52+11+1)) with (Int64.max_unsigned + 1).",
            "VernacExtend",
            "902a8589615f5d3b7b4d87d7ccf87a7d66e35c0e"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem to_of_bits: forall b, to_bits (of_bits b) = b.",
            "VernacStartTheoremProof",
            "c35518ece269f77bd6e03cd9e42ed1d68b07b85e"
        ],
        [
            "intros; unfold of_bits, to_bits, bits_of_b64, b64_of_bits.",
            "VernacExtend",
            "d3a40fdd229589a7ef25a7095af319838e5800c2"
        ],
        [
            "rewrite bits_of_binary_float_of_bits.",
            "VernacExtend",
            "a35cf49b6225036d94f5cd0be28db913afe04ee2"
        ],
        [
            "apply Int64.repr_unsigned.",
            "VernacExtend",
            "155848270129eed13138aa7b4b60ec49b2ae866f"
        ],
        [
            "apply Int64.unsigned_range.",
            "VernacExtend",
            "8e8982a5c7f5f106ccaf8e2d86b747e29a861c08"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ox8000_0000 := Int.repr Int.half_modulus.",
            "VernacDefinition",
            "8e2584a5853ed8b266e6c771f72c252be731d371"
        ],
        [
            "Theorem of_intu_of_int_1: forall x, Int.ltu x ox8000_0000 = true -> of_intu x = of_int x.",
            "VernacStartTheoremProof",
            "daa24e78879954083b1d445989c8714faa79ec6e"
        ],
        [
            "unfold of_intu, of_int, Int.signed, Int.ltu; intro.",
            "VernacExtend",
            "e357c81ebb58a9b9761abaf554e5e8d8838f5b4d"
        ],
        [
            "change (Int.unsigned ox8000_0000) with Int.half_modulus.",
            "VernacExtend",
            "84126b2eee0b9bc221f46f705ff385aef32fdc36"
        ],
        [
            "destruct (zlt (Int.unsigned x) Int.half_modulus); now intuition.",
            "VernacExtend",
            "961ae284afce28211e1feaa316feac108a4869e0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem of_intu_of_int_2: forall x, Int.ltu x ox8000_0000 = false -> of_intu x = add (of_int (Int.sub x ox8000_0000)) (of_intu ox8000_0000).",
            "VernacStartTheoremProof",
            "8e295d83265888b1786abe54a37f20588925c05f"
        ],
        [
            "unfold add, of_intu, of_int; intros.",
            "VernacExtend",
            "411a4a7e479ebcc94fdfd13f333d100499c16f4b"
        ],
        [
            "set (y := Int.sub x ox8000_0000).",
            "VernacExtend",
            "0b658ab17b082967da383fcaaaa4c938b528b56a"
        ],
        [
            "pose proof (Int.unsigned_range x); pose proof (Int.signed_range y).",
            "VernacExtend",
            "cb1617c98c5774237538d87aa85e8611f96657ca"
        ],
        [
            "assert (Ry: integer_representable 53 1024 (Int.signed y)).",
            "VernacExtend",
            "b17958a5a46dabd7f2e74af39659eff6fcb81b51"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply integer_representable_n; auto; smart_omega.",
            "VernacExtend",
            "3b3a4fe2abc657641bfba4ca29f301cbd920ac96"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (R8: integer_representable 53 1024 (Int.unsigned ox8000_0000)).",
            "VernacExtend",
            "afd53e4597385d6dcfc454582cafbba2a0118861"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply integer_representable_2p with (p := 31);auto; smart_omega.",
            "VernacExtend",
            "e3e01e49c6d6cf5201d3ec47fcf3dd4d2f76d132"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite BofZ_plus by auto.",
            "VernacExtend",
            "5d46b79208f7112215cba3d5289ec297b4136402"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "unfold Int.ltu in H.",
            "VernacExtend",
            "bf9af2f626db6b9c9c3f185a83e799fba0d31520"
        ],
        [
            "destruct zlt in H; try discriminate.",
            "VernacExtend",
            "72570438a43ac1775365e770c630beb07156efdb"
        ],
        [
            "unfold y, Int.sub.",
            "VernacExtend",
            "f168546a876d56fd30e3099f6d80207acd30a85c"
        ],
        [
            "rewrite Int.signed_repr.",
            "VernacExtend",
            "e6c1f73d39688157b986523299e24dc1bfd1e0fc"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "compute_this (Int.unsigned ox8000_0000); smart_omega.",
            "VernacExtend",
            "d5d77253fc16d49e6c024375f044739680f236bd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem to_intu_to_int_1: forall x n, cmp Clt x (of_intu ox8000_0000) = true -> to_intu x = Some n -> to_int x = Some n.",
            "VernacStartTheoremProof",
            "129e26639bbc5a50a8c84da2ed5ea6fc7076975e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold to_intu in H0.",
            "VernacExtend",
            "7dfe84e52a4be1ac4a149b1cd37aa6c336e48690"
        ],
        [
            "destruct (ZofB_range 53 1024 x 0 Int.max_unsigned) as [p|] eqn:E; simpl in H0; inv H0.",
            "VernacExtend",
            "8022520c48df8c90a1fb75ad911440ae6ebb28ba"
        ],
        [
            "exploit ZofB_range_inversion; eauto.",
            "VernacExtend",
            "468c5043e0e4c0c3ce2cd8e568b8bb2940eb9547"
        ],
        [
            "intros (A & B & C).",
            "VernacExtend",
            "600bc83b778b82e4f76af4dba65aea6d61e17221"
        ],
        [
            "unfold to_int, ZofB_range.",
            "VernacExtend",
            "4734fd0395483d6f2e8fb583f29e8296b2c71c66"
        ],
        [
            "rewrite C.",
            "VernacExtend",
            "6522c35db68091b070ccdd4e87749a3d6da8e69d"
        ],
        [
            "rewrite Zle_bool_true by smart_omega.",
            "VernacExtend",
            "747804eaf3f9a51b0ceb86ed3ad01be3118e5b2a"
        ],
        [
            "rewrite Zle_bool_true; auto.",
            "VernacExtend",
            "1467fbea6250fbabb2d189df3177a29274b598a4"
        ],
        [
            "exploit (BofZ_exact 53 1024 __ __ (Int.unsigned ox8000_0000)).",
            "VernacExtend",
            "2c4625ba7dc5238496ddd6c90b7e9436927c3235"
        ],
        [
            "vm_compute; intuition congruence.",
            "VernacExtend",
            "b49a72149c94daab3de8f694fb47a5624359fbc4"
        ],
        [
            "set (y := of_intu ox8000_0000) in *.",
            "VernacExtend",
            "7753a15e808529e1e182fda53726df529474f6a1"
        ],
        [
            "change (BofZ 53 1024 eq_refl eq_refl (Int.unsigned ox8000_0000)) with y.",
            "VernacExtend",
            "ae36da442c96d113bb2b35d59004610b392847db"
        ],
        [
            "intros (EQy & FINy & SIGNy).",
            "VernacExtend",
            "7648bbf25599c9cbcc6335be9a509a8edcec31bf"
        ],
        [
            "assert (FINx: is_finite _ _ x = true).",
            "VernacExtend",
            "d8e6df87147945900d6b978797d9269300ae2477"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite ZofB_correct in C.",
            "VernacExtend",
            "0ba672dba1dc32bccf9b8edae43b771dce85ef62"
        ],
        [
            "destruct (is_finite _ _ x) eqn:FINx; congruence.",
            "VernacExtend",
            "e8ce946936852b6091b53431b515d44feb86e30f"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (zeq p 0).",
            "VernacExtend",
            "f84b5ea0e75dd5364d57c783b8274c1a1b113de9"
        ],
        [
            "subst p; smart_omega.",
            "VernacExtend",
            "e477fa107f8edbfe2d0bad1a97e85b013b01f75e"
        ],
        [
            "destruct (ZofB_range_pos 53 1024 __ __ x p C) as [P Q].",
            "VernacExtend",
            "a7f78b4264574defa697156b543403b1a0afff86"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "assert (CMP: Bcompare _ _ x y = Some Lt).",
            "VernacExtend",
            "c1a67c89cc316f690c43047ee3dc50c865fb8b63"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold cmp, cmp_of_comparison, compare in H.",
            "VernacExtend",
            "a89ebff886e699fa30070cdc0775cbb696488710"
        ],
        [
            "destruct (Bcompare _ _ x y) as [[]|]; auto; discriminate.",
            "VernacExtend",
            "cd6f35d5c7624f0f8a7ca6e0a35373a2a92f9a4f"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite Bcompare_correct in CMP by auto.",
            "VernacExtend",
            "61cb8038d7424641840eda5b795ebf4eeb51fceb"
        ],
        [
            "inv CMP.",
            "VernacExtend",
            "cd833d90313b79933d0cbaef63864013ef814de9"
        ],
        [
            "apply Rcompare_Lt_inv in H1.",
            "VernacExtend",
            "e12bb3c6b997af31d9a0fbae7c772927eb2d81de"
        ],
        [
            "rewrite EQy in H1.",
            "VernacExtend",
            "64c3389b1b3e375d0ebfc0aeb0ec8e04c0b464b5"
        ],
        [
            "assert (p < Int.unsigned ox8000_0000).",
            "VernacExtend",
            "8229f249e5973d76be9c3285401ed2de63fc7261"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply lt_Z2R.",
            "VernacExtend",
            "c0e615fac753553d0eac3dc2ae4d76c109cb9e3e"
        ],
        [
            "eapply Rle_lt_trans; eauto.",
            "VernacExtend",
            "0bc494d2bdffac7017c20d3c89b9c70aa6f7f479"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "change Int.max_signed with (Int.unsigned ox8000_0000 - 1).",
            "VernacExtend",
            "f7de83c370bebd0319f8539d2437762760536ab2"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem to_intu_to_int_2: forall x n, cmp Clt x (of_intu ox8000_0000) = false -> to_intu x = Some n -> to_int (sub x (of_intu ox8000_0000)) = Some (Int.sub n ox8000_0000).",
            "VernacStartTheoremProof",
            "ecaa22fc7438e2a7cc72231f83a4ed3facb05470"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold to_intu in H0.",
            "VernacExtend",
            "7dfe84e52a4be1ac4a149b1cd37aa6c336e48690"
        ],
        [
            "destruct (ZofB_range _ _ x 0 Int.max_unsigned) as [p|] eqn:E; simpl in H0; inv H0.",
            "VernacExtend",
            "7edfd47f37be2fd660f2cd38dc76d65f369a80a4"
        ],
        [
            "exploit ZofB_range_inversion; eauto.",
            "VernacExtend",
            "468c5043e0e4c0c3ce2cd8e568b8bb2940eb9547"
        ],
        [
            "intros (A & B & C).",
            "VernacExtend",
            "600bc83b778b82e4f76af4dba65aea6d61e17221"
        ],
        [
            "exploit (BofZ_exact 53 1024 __ __ (Int.unsigned ox8000_0000)).",
            "VernacExtend",
            "2c4625ba7dc5238496ddd6c90b7e9436927c3235"
        ],
        [
            "vm_compute; intuition congruence.",
            "VernacExtend",
            "b49a72149c94daab3de8f694fb47a5624359fbc4"
        ],
        [
            "set (y := of_intu ox8000_0000) in *.",
            "VernacExtend",
            "7753a15e808529e1e182fda53726df529474f6a1"
        ],
        [
            "change (BofZ 53 1024 __ __ (Int.unsigned ox8000_0000)) with y.",
            "VernacExtend",
            "cdb1d9e815d54fef74ecc5a38ee813455a2cc0ad"
        ],
        [
            "intros (EQy & FINy & SIGNy).",
            "VernacExtend",
            "7648bbf25599c9cbcc6335be9a509a8edcec31bf"
        ],
        [
            "assert (FINx: is_finite _ _ x = true).",
            "VernacExtend",
            "d8e6df87147945900d6b978797d9269300ae2477"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite ZofB_correct in C.",
            "VernacExtend",
            "0ba672dba1dc32bccf9b8edae43b771dce85ef62"
        ],
        [
            "destruct (is_finite _ _ x) eqn:FINx; congruence.",
            "VernacExtend",
            "e8ce946936852b6091b53431b515d44feb86e30f"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (GE: (B2R _ _ x >= Z2R (Int.unsigned ox8000_0000))%R).",
            "VernacExtend",
            "c4370e5db3c9e1a49ec1f0623d8e43bbc86c932a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite <- EQy.",
            "VernacExtend",
            "155ff77b4789d4a8fc046d88b3f8de3671f01936"
        ],
        [
            "unfold cmp, cmp_of_comparison, compare in H.",
            "VernacExtend",
            "a89ebff886e699fa30070cdc0775cbb696488710"
        ],
        [
            "rewrite Bcompare_correct in H by auto.",
            "VernacExtend",
            "6f76ab257573dded906532ca20c9ea7d96d31a6a"
        ],
        [
            "destruct (Rcompare (B2R 53 1024 x) (B2R 53 1024 y)) eqn:CMP.",
            "VernacExtend",
            "d62beb5dd66883cabb8e2e570153cdcc8f91965b"
        ],
        [
            "apply Req_ge; apply Rcompare_Eq_inv; auto.",
            "VernacExtend",
            "11dcd576cb6dd9ee30bc6993e4b28a30b6a0f376"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "apply Rgt_ge; apply Rcompare_Gt_inv; auto.",
            "VernacExtend",
            "8cbae7c24469523e05a19d42601bd93bf6134d90"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (EQ: ZofB_range _ _ (sub x y) Int.min_signed Int.max_signed = Some (p - Int.unsigned ox8000_0000)).",
            "VernacExtend",
            "75144fecfd04bcccad6a96c167d46ae89ebd659b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply ZofB_range_minus.",
            "VernacExtend",
            "ce82f59f22b8bd8a7fe53e2e598d6eab5aae555a"
        ],
        [
            "exact E.",
            "VernacExtend",
            "ea077aeadd15e195fdab663e98bb112c23639fc1"
        ],
        [
            "compute_this (Int.unsigned ox8000_0000).",
            "VernacExtend",
            "c73479088fcef669d333e82f4ba8146c2f811767"
        ],
        [
            "smart_omega.",
            "VernacExtend",
            "5dcfc39e0aac5d358de281c4542000b4f08885f4"
        ],
        [
            "apply Rge_le; auto.",
            "VernacExtend",
            "58bc4e8d614d8148ad7c0c5eb8a3368c1f673145"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "unfold to_int; rewrite EQ.",
            "VernacExtend",
            "4e2e10101bfea1db45426820ad1ed404a4dc1c2e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold Int.sub.",
            "VernacExtend",
            "1170869a324af572e1e05cd70a3c8ddc34d9f678"
        ],
        [
            "rewrite Int.unsigned_repr by omega.",
            "VernacExtend",
            "9986c3ceb3b460e3a090640a27e54ada9a88f0bc"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ox4330_0000 := Int.repr 1127219200.",
            "VernacDefinition",
            "5ef25f31d95dc0eb595a4bdcfad097d8d0d1b7e7"
        ],
        [
            "Lemma split_bits_or: forall x, split_bits 52 11 (Int64.unsigned (Int64.ofwords ox4330_0000 x)) = (false, Int.unsigned x, 1075).",
            "VernacStartTheoremProof",
            "a80bf354fe592bd4eb6e25b7fbc02d855ca081e3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "transitivity (split_bits 52 11 (join_bits 52 11 false (Int.unsigned x) 1075)).",
            "VernacExtend",
            "380b713684b9d80ad26c0fbf8d963547f8b0c623"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite Int64.ofwords_add'.",
            "VernacExtend",
            "f6fac40b6198a642e65f612684eb73ef0ecd4c2f"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply split_join_bits.",
            "VernacExtend",
            "c0c7176d97e9629a88235499e4b9c53040b1b844"
        ],
        [
            "compute; auto.",
            "VernacExtend",
            "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
        ],
        [
            "generalize (Int.unsigned_range x).",
            "VernacExtend",
            "a67cb5f6af47a78f4dbb03ddda2e54d04610fa71"
        ],
        [
            "compute_this Int.modulus; compute_this (2^52); omega.",
            "VernacExtend",
            "fdb3b6d4e4d4cb075f1871c7ddbf6aef91c84822"
        ],
        [
            "compute_this (2^11); omega.",
            "VernacExtend",
            "6141288505275b510cb95e12de9060797794c923"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma from_words_value: forall x, B2R _ _ (from_words ox4330_0000 x) = (bpow radix2 52 + Z2R (Int.unsigned x))%R /\\ is_finite _ _ (from_words ox4330_0000 x) = true /\\ Bsign _ _ (from_words ox4330_0000 x) = false.",
            "VernacStartTheoremProof",
            "e8ce6d12424bae2c4c780ece8f73a204ff2bc8e5"
        ],
        [
            "intros; unfold from_words, of_bits, b64_of_bits, binary_float_of_bits.",
            "VernacExtend",
            "ea697488775de386918b15b4b3c7544818b2c852"
        ],
        [
            "rewrite B2R_FF2B, is_finite_FF2B, Bsign_FF2B.",
            "VernacExtend",
            "d5299693bec8db924232bee0a93a0ecb8ca36ec7"
        ],
        [
            "unfold binary_float_of_bits_aux; rewrite split_bits_or; simpl; pose proof (Int.unsigned_range x).",
            "VernacExtend",
            "1b716caa65fcd68c14e90976fe353784acfdbed0"
        ],
        [
            "destruct (Int.unsigned x + Z.pow_pos 2 52) eqn:?.",
            "VernacExtend",
            "0cb203a450833b616a5c2ec9461e475447e3c507"
        ],
        [
            "exfalso; now smart_omega.",
            "VernacExtend",
            "c5896e995e4a963fcbad61d26f474295330b5139"
        ],
        [
            "simpl; rewrite <- Heqz; unfold F2R; simpl.",
            "VernacExtend",
            "c236388b8eb2d3df09203bffe26479c9aba1257f"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "rewrite <- (Z2R_plus 4503599627370496), Rmult_1_r.",
            "VernacExtend",
            "158e5051539f971f746225bab62533919c3a3c49"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite Z.add_comm.",
            "VernacExtend",
            "cb1af9408ed4e4ab13bf29109365368cad89a879"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exfalso; now smart_omega.",
            "VernacExtend",
            "c5896e995e4a963fcbad61d26f474295330b5139"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma from_words_eq: forall x, from_words ox4330_0000 x = BofZ 53 1024 __ __ (2^52 + Int.unsigned x).",
            "VernacStartTheoremProof",
            "fbe1361eccdbe213b099cf547fe9c4b477a9ec34"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (Int.unsigned_range x).",
            "VernacExtend",
            "4212d3e1661008ea8a3c5a2589d6e515a6e3a858"
        ],
        [
            "destruct (from_words_value x) as (A & B & C).",
            "VernacExtend",
            "539cbbe789c5c7d7719f60d379c04fd60816507d"
        ],
        [
            "destruct (BofZ_exact 53 1024 __ __ (2^52 + Int.unsigned x)) as (D & E & F).",
            "VernacExtend",
            "25d4cfc247ff1815a225ebd647f3d3f8a2aeca51"
        ],
        [
            "smart_omega.",
            "VernacExtend",
            "5dcfc39e0aac5d358de281c4542000b4f08885f4"
        ],
        [
            "apply B2R_Bsign_inj; auto.",
            "VernacExtend",
            "f9c8ab320eaf2edac30031b5e20f8559397978a4"
        ],
        [
            "rewrite A, D.",
            "VernacExtend",
            "106c0ceb005bf157e18997508c889c163cbc4c36"
        ],
        [
            "rewrite Z2R_plus.",
            "VernacExtend",
            "acce6601b0322c726f9b248c200708805f7120a8"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite C, F.",
            "VernacExtend",
            "b7f977dcea5c659a76d70805695414d24d017bdb"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Zlt_bool_false.",
            "VernacExtend",
            "727bcedc45dab1285379e344de04340c612a0572"
        ],
        [
            "smart_omega.",
            "VernacExtend",
            "5dcfc39e0aac5d358de281c4542000b4f08885f4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem of_intu_from_words: forall x, of_intu x = sub (from_words ox4330_0000 x) (from_words ox4330_0000 Int.zero).",
            "VernacStartTheoremProof",
            "349be099561c668241b3a506a9afc4ec838519b9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (Int.unsigned_range x).",
            "VernacExtend",
            "4212d3e1661008ea8a3c5a2589d6e515a6e3a858"
        ],
        [
            "rewrite ! from_words_eq.",
            "VernacExtend",
            "38cc9dd499d8fb4b31a114710d70f67121f480fc"
        ],
        [
            "unfold sub.",
            "VernacExtend",
            "09a336a2b822859bc335120602ae265ad23b7a0d"
        ],
        [
            "rewrite BofZ_minus.",
            "VernacExtend",
            "b1da215c9b76c6e5378345eafb85bb35ca56c2c4"
        ],
        [
            "unfold of_intu.",
            "VernacExtend",
            "1f40ed27ad19310bcb30d2018635c106e5e53e0d"
        ],
        [
            "apply (f_equal (BofZ 53 1024 __ __)).",
            "VernacExtend",
            "1fe70bc3248aec761cede2a00df77819dfca38b3"
        ],
        [
            "rewrite Int.unsigned_zero.",
            "VernacExtend",
            "89cd39791bb3da529969241353d48ab8dd678f66"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply integer_representable_n; auto; smart_omega.",
            "VernacExtend",
            "3b3a4fe2abc657641bfba4ca29f301cbd920ac96"
        ],
        [
            "apply integer_representable_n; auto; rewrite Int.unsigned_zero; smart_omega.",
            "VernacExtend",
            "bbcae0b8b4de557eafd56319962f3d33dd818214"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ox8000_0000_signed_unsigned: forall x, Int.unsigned (Int.add x ox8000_0000) = Int.signed x + Int.half_modulus.",
            "VernacStartTheoremProof",
            "a8a592bcba765b3238baa05a6f3885b94235a8fe"
        ],
        [
            "intro; unfold Int.signed, Int.add; pose proof (Int.unsigned_range x).",
            "VernacExtend",
            "1f9343c2e71757a1864173453265f655c7042b4a"
        ],
        [
            "destruct (zlt (Int.unsigned x) Int.half_modulus).",
            "VernacExtend",
            "e73814e866eb53a5d7e7ee2c598046f6385ab30f"
        ],
        [
            "rewrite Int.unsigned_repr; compute_this (Int.unsigned ox8000_0000); now smart_omega.",
            "VernacExtend",
            "76e42486b3f5d1b82ba255bd6152f0d6464d464a"
        ],
        [
            "rewrite (Int.eqm_samerepr _ (Int.unsigned x + -2147483648)).",
            "VernacExtend",
            "64779a76f09e209b2eff42eb13d3c4c5c1ff363b"
        ],
        [
            "rewrite Int.unsigned_repr; now smart_omega.",
            "VernacExtend",
            "b23eff29ea01d5ceab1f55765ace87cc46037a8e"
        ],
        [
            "apply Int.eqm_add; [now apply Int.eqm_refl|exists 1;reflexivity].",
            "VernacExtend",
            "047b9213bcce9d885c99355ac867466ed68bcd18"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem of_int_from_words: forall x, of_int x = sub (from_words ox4330_0000 (Int.add x ox8000_0000)) (from_words ox4330_0000 ox8000_0000).",
            "VernacStartTheoremProof",
            "329b7de1c4ef832a8a54e324b73754ed75bace70"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (Int.signed_range x).",
            "VernacExtend",
            "d54f4d418c62781fa03aaba3ba74ff19f693c045"
        ],
        [
            "rewrite ! from_words_eq.",
            "VernacExtend",
            "38cc9dd499d8fb4b31a114710d70f67121f480fc"
        ],
        [
            "rewrite ox8000_0000_signed_unsigned.",
            "VernacExtend",
            "5c561623167c7bc3b6ad04fad68b725d4079f257"
        ],
        [
            "change (Int.unsigned ox8000_0000) with Int.half_modulus.",
            "VernacExtend",
            "84126b2eee0b9bc221f46f705ff385aef32fdc36"
        ],
        [
            "unfold sub.",
            "VernacExtend",
            "09a336a2b822859bc335120602ae265ad23b7a0d"
        ],
        [
            "rewrite BofZ_minus.",
            "VernacExtend",
            "b1da215c9b76c6e5378345eafb85bb35ca56c2c4"
        ],
        [
            "unfold of_int.",
            "VernacExtend",
            "04b16e325f49ba6318a7a0fb6f3d758e9b616253"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply integer_representable_n; auto; smart_omega.",
            "VernacExtend",
            "3b3a4fe2abc657641bfba4ca29f301cbd920ac96"
        ],
        [
            "apply integer_representable_n; auto; smart_omega.",
            "VernacExtend",
            "3b3a4fe2abc657641bfba4ca29f301cbd920ac96"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ox4530_0000 := Int.repr 1160773632.",
            "VernacDefinition",
            "fa35c09157540a420bb8b0f6b1355862bc0e0731"
        ],
        [
            "Lemma split_bits_or': forall x, split_bits 52 11 (Int64.unsigned (Int64.ofwords ox4530_0000 x)) = (false, Int.unsigned x, 1107).",
            "VernacStartTheoremProof",
            "6e8016261f013875bb82b2939c7b6fd520367a72"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "transitivity (split_bits 52 11 (join_bits 52 11 false (Int.unsigned x) 1107)).",
            "VernacExtend",
            "0ebf7c2c4784d09f17b088722922d2a05d4dd83a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite Int64.ofwords_add'.",
            "VernacExtend",
            "f6fac40b6198a642e65f612684eb73ef0ecd4c2f"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply split_join_bits.",
            "VernacExtend",
            "c0c7176d97e9629a88235499e4b9c53040b1b844"
        ],
        [
            "compute; auto.",
            "VernacExtend",
            "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
        ],
        [
            "generalize (Int.unsigned_range x).",
            "VernacExtend",
            "a67cb5f6af47a78f4dbb03ddda2e54d04610fa71"
        ],
        [
            "compute_this Int.modulus; compute_this (2^52); omega.",
            "VernacExtend",
            "fdb3b6d4e4d4cb075f1871c7ddbf6aef91c84822"
        ],
        [
            "compute_this (2^11); omega.",
            "VernacExtend",
            "6141288505275b510cb95e12de9060797794c923"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma from_words_value': forall x, B2R _ _ (from_words ox4530_0000 x) = (bpow radix2 84 + Z2R (Int.unsigned x * two_p 32))%R /\\ is_finite _ _ (from_words ox4530_0000 x) = true /\\ Bsign _ _ (from_words ox4530_0000 x) = false.",
            "VernacStartTheoremProof",
            "0ee0be794cb412531f3f778ac511df237a0faaf6"
        ],
        [
            "intros; unfold from_words, of_bits, b64_of_bits, binary_float_of_bits.",
            "VernacExtend",
            "ea697488775de386918b15b4b3c7544818b2c852"
        ],
        [
            "rewrite B2R_FF2B, is_finite_FF2B, Bsign_FF2B.",
            "VernacExtend",
            "d5299693bec8db924232bee0a93a0ecb8ca36ec7"
        ],
        [
            "unfold binary_float_of_bits_aux; rewrite split_bits_or'; simpl; pose proof (Int.unsigned_range x).",
            "VernacExtend",
            "25bdd7a56bcf42e6f7b53405c33677e7401aba60"
        ],
        [
            "destruct (Int.unsigned x + Z.pow_pos 2 52) eqn:?.",
            "VernacExtend",
            "0cb203a450833b616a5c2ec9461e475447e3c507"
        ],
        [
            "exfalso; now smart_omega.",
            "VernacExtend",
            "c5896e995e4a963fcbad61d26f474295330b5139"
        ],
        [
            "simpl; rewrite <- Heqz; unfold F2R; simpl.",
            "VernacExtend",
            "c236388b8eb2d3df09203bffe26479c9aba1257f"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "rewrite <- (Z2R_plus 19342813113834066795298816), <- (Z2R_mult _ 4294967296).",
            "VernacExtend",
            "a94bae9993bb403da7617eb1cbeacb686e8eab38"
        ],
        [
            "f_equal; compute_this (Z.pow_pos 2 52); compute_this (two_power_pos 32); ring.",
            "VernacExtend",
            "c8d40a7eef2d5367e7b572dcdab4ffe485c266c6"
        ],
        [
            "assert (Zneg p < 0) by reflexivity.",
            "VernacExtend",
            "f1d330bad241beb90f594e9c37ffe6143e4ac31a"
        ],
        [
            "exfalso; now smart_omega.",
            "VernacExtend",
            "c5896e995e4a963fcbad61d26f474295330b5139"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma from_words_eq': forall x, from_words ox4530_0000 x = BofZ 53 1024 __ __ (2^84 + Int.unsigned x * 2^32).",
            "VernacStartTheoremProof",
            "7dd6668bf872431717a1c254de12dc4b11171290"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (Int.unsigned_range x).",
            "VernacExtend",
            "4212d3e1661008ea8a3c5a2589d6e515a6e3a858"
        ],
        [
            "destruct (from_words_value' x) as (A & B & C).",
            "VernacExtend",
            "f3df23d81ced72c42ef9a72fc1b89ee8ad560fe7"
        ],
        [
            "destruct (BofZ_representable 53 1024 __ __ (2^84 + Int.unsigned x * 2^32)) as (D & E & F).",
            "VernacExtend",
            "e0e1e90cd36d7aa5a9717c6219ee24ecf99f7d2c"
        ],
        [
            "replace (2^84 + Int.unsigned x * 2^32) with ((2^52 + Int.unsigned x) * 2^32) by ring.",
            "VernacExtend",
            "07a1f216b9ab89c548c81e7831dc8b6d88b88cf5"
        ],
        [
            "apply integer_representable_n2p; auto.",
            "VernacExtend",
            "1bcb47309a5c1bb12f7642fc44d23965ab7914ba"
        ],
        [
            "smart_omega.",
            "VernacExtend",
            "5dcfc39e0aac5d358de281c4542000b4f08885f4"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply B2R_Bsign_inj; auto.",
            "VernacExtend",
            "f9c8ab320eaf2edac30031b5e20f8559397978a4"
        ],
        [
            "rewrite A, D.",
            "VernacExtend",
            "106c0ceb005bf157e18997508c889c163cbc4c36"
        ],
        [
            "rewrite <- Z2R_Zpower by omega.",
            "VernacExtend",
            "bc3388d59814ca4d9994fae141ed9a4d348c5e2f"
        ],
        [
            "rewrite <- Z2R_plus.",
            "VernacExtend",
            "34b18f1df9cc7268c70f355324b3f0e0fcc9644f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite C, F.",
            "VernacExtend",
            "b7f977dcea5c659a76d70805695414d24d017bdb"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Zlt_bool_false.",
            "VernacExtend",
            "727bcedc45dab1285379e344de04340c612a0572"
        ],
        [
            "compute_this (2^84); compute_this (2^32); omega.",
            "VernacExtend",
            "cde2a43f6b3f7deeddc2af324ae0c79730757a86"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem of_longu_from_words: forall l, of_longu l = add (sub (from_words ox4530_0000 (Int64.hiword l)) (from_words ox4530_0000 (Int.repr (two_p 20)))) (from_words ox4330_0000 (Int64.loword l)).",
            "VernacStartTheoremProof",
            "2ca7669414e7dcb69eca7cf5b04756892001936d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (Int64.unsigned_range l).",
            "VernacExtend",
            "4f5051c4a471bc73623e2ecb7c5015f5af7ac76c"
        ],
        [
            "pose proof (Int.unsigned_range (Int64.hiword l)).",
            "VernacExtend",
            "20da977f5004c8d391d0ab2b42f74b7bd82c13d4"
        ],
        [
            "pose proof (Int.unsigned_range (Int64.loword l)).",
            "VernacExtend",
            "933bc122e5a6f7b2f8eb829b43b28959f813140c"
        ],
        [
            "rewrite ! from_words_eq, ! from_words_eq'.",
            "VernacExtend",
            "97471b7bdcdada70c56bbb8c4538c46f4e2d47f5"
        ],
        [
            "set (p20 := Int.unsigned (Int.repr (two_p 20))).",
            "VernacExtend",
            "fafbbb63993c732dc4f8dadd0e7e156d165a0016"
        ],
        [
            "set (x := Int64.unsigned l) in *; set (xl := Int.unsigned (Int64.loword l)) in *; set (xh := Int.unsigned (Int64.hiword l)) in *.",
            "VernacExtend",
            "8054aebefacf5f7bab24f1de87de44b0da2eeada"
        ],
        [
            "unfold sub.",
            "VernacExtend",
            "09a336a2b822859bc335120602ae265ad23b7a0d"
        ],
        [
            "rewrite BofZ_minus.",
            "VernacExtend",
            "b1da215c9b76c6e5378345eafb85bb35ca56c2c4"
        ],
        [
            "replace (2^84 + xh * 2^32 - (2^84 + p20 * 2^32)) with ((xh - p20) * 2^32) by ring.",
            "VernacExtend",
            "d08a434b7ecbf696cdce9e3b277d887804d43670"
        ],
        [
            "unfold add.",
            "VernacExtend",
            "11cf98bf231f22df486b46b3b6a1c38a94e859dd"
        ],
        [
            "rewrite BofZ_plus.",
            "VernacExtend",
            "107ae1764cebd3203ee52b8fe6054636d5af8667"
        ],
        [
            "unfold of_longu.",
            "VernacExtend",
            "f3196d80b2954ea723f579dd8740c1335b759820"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite <- (Int64.ofwords_recompose l) at 1.",
            "VernacExtend",
            "a16dade36a73865a3ab7569087115ab90ff1a19d"
        ],
        [
            "rewrite Int64.ofwords_add'.",
            "VernacExtend",
            "f6fac40b6198a642e65f612684eb73ef0ecd4c2f"
        ],
        [
            "fold xh; fold xl.",
            "VernacExtend",
            "b0140514e949f446422441b3eb047c749414b9d0"
        ],
        [
            "compute_this (two_p 32); compute_this p20; ring.",
            "VernacExtend",
            "0e40b842d097076e7a81d610e26086e0dab34bce"
        ],
        [
            "apply integer_representable_n2p; auto.",
            "VernacExtend",
            "1bcb47309a5c1bb12f7642fc44d23965ab7914ba"
        ],
        [
            "compute_this p20; smart_omega.",
            "VernacExtend",
            "b297031f823585e8af7f1a54a7cb3118ed5c0a0e"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply integer_representable_n; auto; smart_omega.",
            "VernacExtend",
            "3b3a4fe2abc657641bfba4ca29f301cbd920ac96"
        ],
        [
            "replace (2^84 + xh * 2^32) with ((2^52 + xh) * 2^32) by ring.",
            "VernacExtend",
            "c360f456bcabc186dbeb078db6be00a379efd69d"
        ],
        [
            "apply integer_representable_n2p; auto.",
            "VernacExtend",
            "1bcb47309a5c1bb12f7642fc44d23965ab7914ba"
        ],
        [
            "smart_omega.",
            "VernacExtend",
            "5dcfc39e0aac5d358de281c4542000b4f08885f4"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "change (2^84 + p20 * 2^32) with ((2^52 + 1048576) * 2^32).",
            "VernacExtend",
            "d624115aeffd71cf30943983ee1fdc39bf40ea12"
        ],
        [
            "apply integer_representable_n2p; auto.",
            "VernacExtend",
            "1bcb47309a5c1bb12f7642fc44d23965ab7914ba"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem of_long_from_words: forall l, of_long l = add (sub (from_words ox4530_0000 (Int.add (Int64.hiword l) ox8000_0000)) (from_words ox4530_0000 (Int.repr (two_p 20+two_p 31)))) (from_words ox4330_0000 (Int64.loword l)).",
            "VernacStartTheoremProof",
            "70db717d8c3939992696fbca26be0157c281b4ab"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (Int64.signed_range l).",
            "VernacExtend",
            "b885bb1c707c2b592803b6b24eb391490a7ff283"
        ],
        [
            "pose proof (Int.signed_range (Int64.hiword l)).",
            "VernacExtend",
            "3d470e308681034389038a0e97005aae05f688bf"
        ],
        [
            "pose proof (Int.unsigned_range (Int64.loword l)).",
            "VernacExtend",
            "933bc122e5a6f7b2f8eb829b43b28959f813140c"
        ],
        [
            "rewrite ! from_words_eq, ! from_words_eq'.",
            "VernacExtend",
            "97471b7bdcdada70c56bbb8c4538c46f4e2d47f5"
        ],
        [
            "set (p := Int.unsigned (Int.repr (two_p 20 + two_p 31))).",
            "VernacExtend",
            "559718e7ca81b1804e65fcec13bfde3fdbdda67b"
        ],
        [
            "set (x := Int64.signed l) in *; set (xl := Int.unsigned (Int64.loword l)) in *; set (xh := Int.signed (Int64.hiword l)) in *.",
            "VernacExtend",
            "85c4b7e5eb44d2b21b8d96cb5e99a7d4475ff77d"
        ],
        [
            "rewrite ox8000_0000_signed_unsigned.",
            "VernacExtend",
            "5c561623167c7bc3b6ad04fad68b725d4079f257"
        ],
        [
            "fold xh.",
            "VernacExtend",
            "3ed3df026ae364bc5baed5bbdb05dd65d3f400b4"
        ],
        [
            "unfold sub.",
            "VernacExtend",
            "09a336a2b822859bc335120602ae265ad23b7a0d"
        ],
        [
            "rewrite BofZ_minus.",
            "VernacExtend",
            "b1da215c9b76c6e5378345eafb85bb35ca56c2c4"
        ],
        [
            "replace (2^84 + (xh + Int.half_modulus) * 2^32 - (2^84 + p * 2^32)) with ((xh - 2^20) * 2^32) by (compute_this p; compute_this Int.half_modulus; ring).",
            "VernacExtend",
            "884d7f02c9dbb986943a5e107650d768a30ccf23"
        ],
        [
            "unfold add.",
            "VernacExtend",
            "11cf98bf231f22df486b46b3b6a1c38a94e859dd"
        ],
        [
            "rewrite BofZ_plus.",
            "VernacExtend",
            "107ae1764cebd3203ee52b8fe6054636d5af8667"
        ],
        [
            "unfold of_long.",
            "VernacExtend",
            "7890013f17e7d51c8a68046dd9313acacd6bf2c5"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "rewrite <- (Int64.ofwords_recompose l) at 1.",
            "VernacExtend",
            "a16dade36a73865a3ab7569087115ab90ff1a19d"
        ],
        [
            "rewrite Int64.ofwords_add''.",
            "VernacExtend",
            "30cda01271fa39e830162e01e6d62a21cfc08e10"
        ],
        [
            "fold xh; fold xl.",
            "VernacExtend",
            "b0140514e949f446422441b3eb047c749414b9d0"
        ],
        [
            "compute_this (two_p 32); ring.",
            "VernacExtend",
            "270f8ca2ae77546c262fdf94f663d063f327c6c9"
        ],
        [
            "apply integer_representable_n2p; auto.",
            "VernacExtend",
            "1bcb47309a5c1bb12f7642fc44d23965ab7914ba"
        ],
        [
            "compute_this (2^20); smart_omega.",
            "VernacExtend",
            "99925125a9b08f1a3e0e61709ae9175da409627d"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply integer_representable_n; auto; smart_omega.",
            "VernacExtend",
            "3b3a4fe2abc657641bfba4ca29f301cbd920ac96"
        ],
        [
            "replace (2^84 + (xh + Int.half_modulus) * 2^32) with ((2^52 + xh + Int.half_modulus) * 2^32) by (compute_this Int.half_modulus; ring).",
            "VernacExtend",
            "4f90e6a533653abf164014d21f462d31dca8a397"
        ],
        [
            "apply integer_representable_n2p; auto.",
            "VernacExtend",
            "1bcb47309a5c1bb12f7642fc44d23965ab7914ba"
        ],
        [
            "smart_omega.",
            "VernacExtend",
            "5dcfc39e0aac5d358de281c4542000b4f08885f4"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "change (2^84 + p * 2^32) with ((2^52 + p) * 2^32).",
            "VernacExtend",
            "332fc05dd72a12b4fa3582f953808157b227721a"
        ],
        [
            "apply integer_representable_n2p; auto.",
            "VernacExtend",
            "1bcb47309a5c1bb12f7642fc44d23965ab7914ba"
        ],
        [
            "compute_this p; smart_omega.",
            "VernacExtend",
            "40e66a95eca9d10cee1193ef6372e2aa391efcb0"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem of_longu_decomp: forall l, of_longu l = add (mul (of_intu (Int64.hiword l)) (BofZ 53 1024 __ __ (2^32))) (of_intu (Int64.loword l)).",
            "VernacStartTheoremProof",
            "c1023409bb396733291ab2952268af8c338281eb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold of_longu, of_intu, add, mul.",
            "VernacExtend",
            "e6fa87fdfafa27cb204f37f3ef368f3848660de9"
        ],
        [
            "pose proof (Int.unsigned_range (Int64.loword l)).",
            "VernacExtend",
            "933bc122e5a6f7b2f8eb829b43b28959f813140c"
        ],
        [
            "pose proof (Int.unsigned_range (Int64.hiword l)).",
            "VernacExtend",
            "20da977f5004c8d391d0ab2b42f74b7bd82c13d4"
        ],
        [
            "pose proof (Int64.unsigned_range l).",
            "VernacExtend",
            "4f5051c4a471bc73623e2ecb7c5015f5af7ac76c"
        ],
        [
            "set (x := Int64.unsigned l) in *.",
            "VernacExtend",
            "5a5a8c84fd99dc1391297e9591d26005fe679969"
        ],
        [
            "set (yl := Int.unsigned (Int64.loword l)) in *.",
            "VernacExtend",
            "c40dc5bf450f326389b6607d69eee72381ee29fc"
        ],
        [
            "set (yh := Int.unsigned (Int64.hiword l)) in *.",
            "VernacExtend",
            "42e952b3ae230214f9389fccaa5374067fa8b9a9"
        ],
        [
            "assert (DECOMP: x = yh * 2^32 + yl).",
            "VernacExtend",
            "e90bb53ec6b5c9e607a7a714cc2683c45617c0a0"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold x.",
            "VernacExtend",
            "8e116a60402c848e1f7fd0414643cdb94ae22a92"
        ],
        [
            "rewrite <- (Int64.ofwords_recompose l).",
            "VernacExtend",
            "b748704514b4892a62d0a49e8d6bad91d4a5a0d6"
        ],
        [
            "apply Int64.ofwords_add'.",
            "VernacExtend",
            "a17303bd591d9d96a50f3290ddb3d2b6b031dac7"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite BofZ_mult.",
            "VernacExtend",
            "f92479652519654ba5876edbd58f18741fac5dd6"
        ],
        [
            "rewrite BofZ_plus.",
            "VernacExtend",
            "107ae1764cebd3203ee52b8fe6054636d5af8667"
        ],
        [
            "rewrite DECOMP; auto.",
            "VernacExtend",
            "f13f9bdab204f949d59fff0c1b51220f42cee3c7"
        ],
        [
            "apply integer_representable_n2p; auto.",
            "VernacExtend",
            "1bcb47309a5c1bb12f7642fc44d23965ab7914ba"
        ],
        [
            "smart_omega.",
            "VernacExtend",
            "5dcfc39e0aac5d358de281c4542000b4f08885f4"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply integer_representable_n; auto; smart_omega.",
            "VernacExtend",
            "3b3a4fe2abc657641bfba4ca29f301cbd920ac96"
        ],
        [
            "apply integer_representable_n; auto; smart_omega.",
            "VernacExtend",
            "3b3a4fe2abc657641bfba4ca29f301cbd920ac96"
        ],
        [
            "apply integer_representable_n; auto; smart_omega.",
            "VernacExtend",
            "3b3a4fe2abc657641bfba4ca29f301cbd920ac96"
        ],
        [
            "compute; auto.",
            "VernacExtend",
            "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem of_long_decomp: forall l, of_long l = add (mul (of_int (Int64.hiword l)) (BofZ 53 1024 __ __ (2^32))) (of_intu (Int64.loword l)).",
            "VernacStartTheoremProof",
            "ddb4711091f74173911f20606f76dde933041fb3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold of_long, of_int, of_intu, add, mul.",
            "VernacExtend",
            "83970b95384d13a3c4714d45d241827defeb0e63"
        ],
        [
            "pose proof (Int.unsigned_range (Int64.loword l)).",
            "VernacExtend",
            "933bc122e5a6f7b2f8eb829b43b28959f813140c"
        ],
        [
            "pose proof (Int.signed_range (Int64.hiword l)).",
            "VernacExtend",
            "3d470e308681034389038a0e97005aae05f688bf"
        ],
        [
            "pose proof (Int64.signed_range l).",
            "VernacExtend",
            "b885bb1c707c2b592803b6b24eb391490a7ff283"
        ],
        [
            "set (x := Int64.signed l) in *.",
            "VernacExtend",
            "55f28c2e56c6f32e84fc86b462d2f58bcbf51cd3"
        ],
        [
            "set (yl := Int.unsigned (Int64.loword l)) in *.",
            "VernacExtend",
            "c40dc5bf450f326389b6607d69eee72381ee29fc"
        ],
        [
            "set (yh := Int.signed (Int64.hiword l)) in *.",
            "VernacExtend",
            "446939dc55c8ca97a86ddd83015bf38ee2a6fea4"
        ],
        [
            "assert (DECOMP: x = yh * 2^32 + yl).",
            "VernacExtend",
            "e90bb53ec6b5c9e607a7a714cc2683c45617c0a0"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold x.",
            "VernacExtend",
            "8e116a60402c848e1f7fd0414643cdb94ae22a92"
        ],
        [
            "rewrite <- (Int64.ofwords_recompose l), Int64.ofwords_add''.",
            "VernacExtend",
            "dae9ddc287b67c5b98d66d314f931361abd287e1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite BofZ_mult.",
            "VernacExtend",
            "f92479652519654ba5876edbd58f18741fac5dd6"
        ],
        [
            "rewrite BofZ_plus.",
            "VernacExtend",
            "107ae1764cebd3203ee52b8fe6054636d5af8667"
        ],
        [
            "rewrite DECOMP; auto.",
            "VernacExtend",
            "f13f9bdab204f949d59fff0c1b51220f42cee3c7"
        ],
        [
            "apply integer_representable_n2p; auto.",
            "VernacExtend",
            "1bcb47309a5c1bb12f7642fc44d23965ab7914ba"
        ],
        [
            "smart_omega.",
            "VernacExtend",
            "5dcfc39e0aac5d358de281c4542000b4f08885f4"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply integer_representable_n; auto; smart_omega.",
            "VernacExtend",
            "3b3a4fe2abc657641bfba4ca29f301cbd920ac96"
        ],
        [
            "apply integer_representable_n; auto; smart_omega.",
            "VernacExtend",
            "3b3a4fe2abc657641bfba4ca29f301cbd920ac96"
        ],
        [
            "apply integer_representable_n; auto.",
            "VernacExtend",
            "e7579ea4ba88dc0bc6d77a0170cabe01629de62f"
        ],
        [
            "compute; intuition congruence.",
            "VernacExtend",
            "b1e4ec174532a4bdd5fe31fcded6521ccfff32fe"
        ],
        [
            "compute; auto.",
            "VernacExtend",
            "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem of_longu_of_long_1: forall x, Int64.ltu x (Int64.repr Int64.half_modulus) = true -> of_longu x = of_long x.",
            "VernacStartTheoremProof",
            "20c4e8f0c18d9799036de4a5844329846d26afdd"
        ],
        [
            "unfold of_longu, of_long, Int64.signed, Int64.ltu; intro.",
            "VernacExtend",
            "9d861b0a639f8a3cd5d6e78510031bda6873e353"
        ],
        [
            "change (Int64.unsigned (Int64.repr Int64.half_modulus)) with Int64.half_modulus.",
            "VernacExtend",
            "0b2ebe27f3576b6006abbcf130079a3ad0758db9"
        ],
        [
            "destruct (zlt (Int64.unsigned x) Int64.half_modulus); now intuition.",
            "VernacExtend",
            "876505a89003afc8d3054503d3f4ec7400d91b80"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem of_longu_of_long_2: forall x, Int64.ltu x (Int64.repr Int64.half_modulus) = false -> of_longu x = mul (of_long (Int64.or (Int64.shru x Int64.one) (Int64.and x Int64.one))) (of_int (Int.repr 2)).",
            "VernacStartTheoremProof",
            "39ef18f5f80d032e487e7903b9da824119af6061"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "change (of_int (Int.repr 2)) with (BofZ 53 1024 __ __ (2^1)).",
            "VernacExtend",
            "2cacf9eb084db8d4045ada79d3225382c7d046ba"
        ],
        [
            "pose proof (Int64.unsigned_range x).",
            "VernacExtend",
            "5f793f5efed71468a3c3f51c082b4415b913f00a"
        ],
        [
            "unfold Int64.ltu in H.",
            "VernacExtend",
            "8a99b6ee0ba30c44ab20589d4954139d6f80b207"
        ],
        [
            "change (Int64.unsigned (Int64.repr Int64.half_modulus)) with (2^63) in H.",
            "VernacExtend",
            "ec9c5f0fec0274ea6b6aeb9a513943f0bfce3a9d"
        ],
        [
            "destruct (zlt (Int64.unsigned x) (2^63)); inv H.",
            "VernacExtend",
            "8971d5362763bf8126dd5bbdfd68c8a0efb5baf2"
        ],
        [
            "assert (Int64.modulus <= 2^1024 - 2^(1024-53)) by (vm_compute; intuition congruence).",
            "VernacExtend",
            "7d94e9d7dfa4e7123099568bc71b61725c76cdd0"
        ],
        [
            "set (n := Int64.or (Int64.shru x Int64.one) (Int64.and x Int64.one)).",
            "VernacExtend",
            "e1ba00a6e30a87fee77546d52eae038909896599"
        ],
        [
            "assert (NB: forall i, 0 <= i < 64 -> Int64.testbit n i = if zeq i 0 then Int64.testbit x 1 || Int64.testbit x 0 else if zeq i 63 then false else Int64.testbit x (i + 1)).",
            "VernacExtend",
            "092c442f84ad4585156a7328fb7c049bf17c3fee"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros; unfold n; autorewrite with ints; auto.",
            "VernacExtend",
            "c5493f1a954ba8bb051d5f40cc9a6c21389c0df3"
        ],
        [
            "rewrite Int64.unsigned_one.",
            "VernacExtend",
            "fce4c4ad9bc7048d6fb755846a3242e3cfe94961"
        ],
        [
            "rewrite Int64.bits_one.",
            "VernacExtend",
            "e0bf8b917da0d5f5cda0700f02dd0e8652ce221d"
        ],
        [
            "compute_this Int64.zwordsize.",
            "VernacExtend",
            "c9871b6207b999150540420d91bbda147eaedd16"
        ],
        [
            "destruct (zeq i 0); simpl proj_sumbool.",
            "VernacExtend",
            "0ba27838f551145e4641c1f6a8b9e99fdb0a657d"
        ],
        [
            "rewrite zlt_true by omega.",
            "VernacExtend",
            "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
        ],
        [
            "rewrite andb_true_r.",
            "VernacExtend",
            "230918acbe37788580429f7b57db0df199d9fbfd"
        ],
        [
            "subst i; auto.",
            "VernacExtend",
            "db073ea86ef57c4f2babd161a3426d7ab1101a9b"
        ],
        [
            "rewrite andb_false_r, orb_false_r.",
            "VernacExtend",
            "28429d5a6e6b646448ac2bad327a412c57fc7e05"
        ],
        [
            "destruct (zeq i 63).",
            "VernacExtend",
            "31012f6ed9be977bec960a08256c97591f412a05"
        ],
        [
            "subst i.",
            "VernacExtend",
            "8a51b06e94f64277663e0022260aa1e58bff437c"
        ],
        [
            "apply zlt_false; omega.",
            "VernacExtend",
            "babc6119603ed1a7aaee8e778bd0de4a23c8ad56"
        ],
        [
            "apply zlt_true; omega.",
            "VernacExtend",
            "11d5ba53e57a55cf6c538075fe9ff297a155a96d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (NB2: forall i, 0 <= i -> Z.testbit (Int64.signed n * 2^1) i = if zeq i 0 then false else if zeq i 1 then Int64.testbit x 1 || Int64.testbit x 0 else Int64.testbit x i).",
            "VernacExtend",
            "82721b56ab38510f3ca3b1626788117d700f3ac9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite Z.mul_pow2_bits by omega.",
            "VernacExtend",
            "8709193b7a0c37a7d9fe2b62dac8692c7e5f1db0"
        ],
        [
            "destruct (zeq i 0).",
            "VernacExtend",
            "d84935205e6f3de20c609dbacd0c5438037a33e9"
        ],
        [
            "apply Z.testbit_neg_r; omega.",
            "VernacExtend",
            "aa654d204d4483cec3f7b79ee5995621897d9de9"
        ],
        [
            "rewrite Int64.bits_signed by omega.",
            "VernacExtend",
            "6ab0c4a118bbaf225c1c734d61e6016f7eb6c169"
        ],
        [
            "compute_this Int64.zwordsize.",
            "VernacExtend",
            "c9871b6207b999150540420d91bbda147eaedd16"
        ],
        [
            "destruct (zlt (i-1) 64).",
            "VernacExtend",
            "0c2b50c934c9a10989867a72efae663134653d33"
        ],
        [
            "rewrite NB by omega.",
            "VernacExtend",
            "5174eb3be60ea45697df13308e0926697c37da25"
        ],
        [
            "destruct (zeq i 1).",
            "VernacExtend",
            "b17522b391d2b045c58356f93f3b8f8873992e12"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "rewrite dec_eq_true by auto.",
            "VernacExtend",
            "8148b112458bb303995d6b5f5ab92f413906d399"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite dec_eq_false by omega.",
            "VernacExtend",
            "abb20bbe67998738d92abebe779b9e2332f25c66"
        ],
        [
            "destruct (zeq (i - 1) 63).",
            "VernacExtend",
            "389a9ca391e0f7f7383125c61502929bdd215eba"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Int64.bits_above.",
            "VernacExtend",
            "5d47577f2efa36d8a4c5797d94247189a9a0ebed"
        ],
        [
            "compute_this Int64.zwordsize; omega.",
            "VernacExtend",
            "3277c3e0c83c584397a041f18a5b88261d3dd698"
        ],
        [
            "f_equal; omega.",
            "VernacExtend",
            "3b812353131f9b9bebbd6410b3fa7c9d2e597ec3"
        ],
        [
            "rewrite NB by omega.",
            "VernacExtend",
            "5174eb3be60ea45697df13308e0926697c37da25"
        ],
        [
            "rewrite dec_eq_false by omega.",
            "VernacExtend",
            "abb20bbe67998738d92abebe779b9e2332f25c66"
        ],
        [
            "rewrite dec_eq_true by auto.",
            "VernacExtend",
            "8148b112458bb303995d6b5f5ab92f413906d399"
        ],
        [
            "rewrite dec_eq_false by omega.",
            "VernacExtend",
            "abb20bbe67998738d92abebe779b9e2332f25c66"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Int64.bits_above.",
            "VernacExtend",
            "5d47577f2efa36d8a4c5797d94247189a9a0ebed"
        ],
        [
            "compute_this Int64.zwordsize; omega.",
            "VernacExtend",
            "3277c3e0c83c584397a041f18a5b88261d3dd698"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (EQ: Int64.signed n * 2 = int_round_odd (Int64.unsigned x) 1).",
            "VernacExtend",
            "82b3bfcee1e0380ca95ce21c0e9c0f437ef89ff6"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply (int_round_odd_bits 53 1024).",
            "VernacExtend",
            "d65e79e42907588c0ab03f101d74ee9635f179fa"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite NB2 by omega.",
            "VernacExtend",
            "7e844168d2e4395ae2c2a4744ed5233f1b6f8c95"
        ],
        [
            "replace i with 0 by omega.",
            "VernacExtend",
            "2d499e8734683e130c7945767634bfa19e5b40f1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite NB2 by omega.",
            "VernacExtend",
            "7e844168d2e4395ae2c2a4744ed5233f1b6f8c95"
        ],
        [
            "rewrite dec_eq_false by omega.",
            "VernacExtend",
            "abb20bbe67998738d92abebe779b9e2332f25c66"
        ],
        [
            "rewrite dec_eq_true.",
            "VernacExtend",
            "28b046c22f8f69c0651cbac642dd4f2013af7847"
        ],
        [
            "rewrite orb_comm.",
            "VernacExtend",
            "d19a1a861dc82473715be9ccb56b9a66a0d4d2e1"
        ],
        [
            "unfold Int64.testbit.",
            "VernacExtend",
            "9ef67286e051955828acb7a736d336915a31e9c9"
        ],
        [
            "change (2^1) with 2.",
            "VernacExtend",
            "f728c06bd0035fb1bdd06c0065fdac6a2579d4a1"
        ],
        [
            "destruct (Z.testbit (Int64.unsigned x) 0) eqn:B0; [rewrite Z.testbit_true in B0 by omega|rewrite Z.testbit_false in B0 by omega]; change (2^0) with 1 in B0; rewrite Zdiv_1_r in B0; rewrite B0; auto.",
            "VernacExtend",
            "ad98fd1fdf12e2a8c8dc713b42c990ce3f1adddb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite NB2 by omega.",
            "VernacExtend",
            "7e844168d2e4395ae2c2a4744ed5233f1b6f8c95"
        ],
        [
            "rewrite ! dec_eq_false by omega.",
            "VernacExtend",
            "7171b90785a7894288b1ad34bc0185647db2f869"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "unfold mul, of_long, of_longu.",
            "VernacExtend",
            "83f218ee9899d8be95a88c85848e8de6a67fd5df"
        ],
        [
            "rewrite BofZ_mult_2p.",
            "VernacExtend",
            "bf79d24609dd91a102639d13560ab563c8e45816"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "change (2^1) with 2.",
            "VernacExtend",
            "f728c06bd0035fb1bdd06c0065fdac6a2579d4a1"
        ],
        [
            "rewrite EQ.",
            "VernacExtend",
            "359c5e196f83a6afbd9ede635bddbf545fd1eb82"
        ],
        [
            "apply BofZ_round_odd with (p := 1).",
            "VernacExtend",
            "c2f877650e7a77d43e4ff52f93e722a2e07d7267"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply Z.le_trans with Int64.modulus; trivial.",
            "VernacExtend",
            "ebce1c8899c191273902f9e1c1b91c1d2070d841"
        ],
        [
            "smart_omega.",
            "VernacExtend",
            "5dcfc39e0aac5d358de281c4542000b4f08885f4"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply Z.le_trans with (2^63).",
            "VernacExtend",
            "c2019c31aa14088af31a98ed6ff4b81c8aa07a1e"
        ],
        [
            "compute; intuition congruence.",
            "VernacExtend",
            "b1e4ec174532a4bdd5fe31fcded6521ccfff32fe"
        ],
        [
            "xomega.",
            "VernacExtend",
            "92dc13ff6a078243e0cd72420247996d076ca43b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply Z.le_trans with Int64.modulus; trivial.",
            "VernacExtend",
            "ebce1c8899c191273902f9e1c1b91c1d2070d841"
        ],
        [
            "pose proof (Int64.signed_range n).",
            "VernacExtend",
            "9086955dab80c08a74ac9d0ab3375096e62b69b1"
        ],
        [
            "compute_this Int64.min_signed; compute_this Int64.max_signed; compute_this Int64.modulus; xomega.",
            "VernacExtend",
            "35261136601d2f708234ec22a2c9e55360d94942"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (2^63 <= int_round_odd (Int64.unsigned x) 1).",
            "VernacExtend",
            "9a87a988529f4ed03b433e78e2bef64d1de5c6cb"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "change (2^63) with (int_round_odd (2^63) 1).",
            "VernacExtend",
            "cd1a62356dfd77ec27eafb3a70530eff59232b5a"
        ],
        [
            "apply (int_round_odd_le 0 0); omega.",
            "VernacExtend",
            "0d9e3be991d229974682125a6c1d4819a357409a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite <- EQ in H1.",
            "VernacExtend",
            "dcfccb309445363f70e3426668bc110c2104faca"
        ],
        [
            "compute_this (2^63).",
            "VernacExtend",
            "ba383517f7c612be6ab8e1c6da857b6b69ad21cd"
        ],
        [
            "compute_this (2^53).",
            "VernacExtend",
            "34c69ae2927bef8534e4ac98bd899f46376983e8"
        ],
        [
            "xomega.",
            "VernacExtend",
            "92dc13ff6a078243e0cd72420247996d076ca43b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark ZofB_range_widen: forall (f: float) n min1 max1 min2 max2, ZofB_range _ _ f min1 max1 = Some n -> min2 <= min1 -> max1 <= max2 -> ZofB_range _ _ f min2 max2 = Some n.",
            "VernacStartTheoremProof",
            "1693acf30e9dd38a023afe2d3156ca052c393850"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exploit ZofB_range_inversion; eauto.",
            "VernacExtend",
            "468c5043e0e4c0c3ce2cd8e568b8bb2940eb9547"
        ],
        [
            "intros (A & B & C).",
            "VernacExtend",
            "600bc83b778b82e4f76af4dba65aea6d61e17221"
        ],
        [
            "unfold ZofB_range; rewrite C.",
            "VernacExtend",
            "cd55e00f01a990ec547c9f218a4ac09b68624e4c"
        ],
        [
            "replace (min2 <=? n) with true.",
            "VernacExtend",
            "9403160b183a1669b81b8bf7f94a733e89ff2d09"
        ],
        [
            "replace (n <=? max2) with true.",
            "VernacExtend",
            "8b1b13a16bd8b1e1795827de9828c7a0d7377354"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "symmetry; apply Z.leb_le; omega.",
            "VernacExtend",
            "d2d6a91f7ba35fc85f7d7aeb05f0630c09d66a7a"
        ],
        [
            "symmetry; apply Z.leb_le; omega.",
            "VernacExtend",
            "d2d6a91f7ba35fc85f7d7aeb05f0630c09d66a7a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem to_int_to_long: forall f n, to_int f = Some n -> to_long f = Some (Int64.repr (Int.signed n)).",
            "VernacStartTheoremProof",
            "80c61c3a916b0e054aa14a2f2320f403063bcc45"
        ],
        [
            "unfold to_int, to_long; intros.",
            "VernacExtend",
            "84390979c32a510d1f301d0d7bfd917ed97f7854"
        ],
        [
            "destruct (ZofB_range 53 1024 f Int.min_signed Int.max_signed) as [z|] eqn:Z; inv H.",
            "VernacExtend",
            "cb2319b346b89ef5767f059bac80cd4bd7734aed"
        ],
        [
            "exploit ZofB_range_inversion; eauto.",
            "VernacExtend",
            "468c5043e0e4c0c3ce2cd8e568b8bb2940eb9547"
        ],
        [
            "intros (A & B & C).",
            "VernacExtend",
            "600bc83b778b82e4f76af4dba65aea6d61e17221"
        ],
        [
            "replace (ZofB_range 53 1024 f Int64.min_signed Int64.max_signed) with (Some z).",
            "VernacExtend",
            "2e622a786bda8abc7e73ceff8996938987e00ba7"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Int.signed_repr; auto.",
            "VernacExtend",
            "d2a3627d99a158baec9a5dfb0e0dbe190f5a271f"
        ],
        [
            "symmetry; eapply ZofB_range_widen; eauto.",
            "VernacExtend",
            "ce2984529f8b5bcaad547b6101e60f99828f57da"
        ],
        [
            "compute; congruence.",
            "VernacExtend",
            "1a58589b5617513e16966c72a14aa8b5277b9c28"
        ],
        [
            "compute; congruence.",
            "VernacExtend",
            "1a58589b5617513e16966c72a14aa8b5277b9c28"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem to_intu_to_longu: forall f n, to_intu f = Some n -> to_longu f = Some (Int64.repr (Int.unsigned n)).",
            "VernacStartTheoremProof",
            "9c15a071730031f7135e43cc83b271755c68bf1e"
        ],
        [
            "unfold to_intu, to_longu; intros.",
            "VernacExtend",
            "938aa47bff21dd056e1e3384d2b330ed8771d45a"
        ],
        [
            "destruct (ZofB_range 53 1024 f 0 Int.max_unsigned) as [z|] eqn:Z; inv H.",
            "VernacExtend",
            "bc5b312c8d9adb9a74facba993394961a81c4118"
        ],
        [
            "exploit ZofB_range_inversion; eauto.",
            "VernacExtend",
            "468c5043e0e4c0c3ce2cd8e568b8bb2940eb9547"
        ],
        [
            "intros (A & B & C).",
            "VernacExtend",
            "600bc83b778b82e4f76af4dba65aea6d61e17221"
        ],
        [
            "replace (ZofB_range 53 1024 f 0 Int64.max_unsigned) with (Some z).",
            "VernacExtend",
            "0f738a8387021b8a7c69ec8934b0b671006e2dbd"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Int.unsigned_repr; auto.",
            "VernacExtend",
            "536e4f297b7a8fbe3aae6f72cb2f7619e7f2c464"
        ],
        [
            "symmetry; eapply ZofB_range_widen; eauto.",
            "VernacExtend",
            "ce2984529f8b5bcaad547b6101e60f99828f57da"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "compute; congruence.",
            "VernacExtend",
            "1a58589b5617513e16966c72a14aa8b5277b9c28"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem to_intu_to_long: forall f n, to_intu f = Some n -> to_long f = Some (Int64.repr (Int.unsigned n)).",
            "VernacStartTheoremProof",
            "887701460388589abee1aa5c23ecf62ae8ce3cf2"
        ],
        [
            "unfold to_intu, to_long; intros.",
            "VernacExtend",
            "9d9eafcc15863c3750de9498bd835559cd7b7666"
        ],
        [
            "destruct (ZofB_range 53 1024 f 0 Int.max_unsigned) as [z|] eqn:Z; inv H.",
            "VernacExtend",
            "bc5b312c8d9adb9a74facba993394961a81c4118"
        ],
        [
            "exploit ZofB_range_inversion; eauto.",
            "VernacExtend",
            "468c5043e0e4c0c3ce2cd8e568b8bb2940eb9547"
        ],
        [
            "intros (A & B & C).",
            "VernacExtend",
            "600bc83b778b82e4f76af4dba65aea6d61e17221"
        ],
        [
            "replace (ZofB_range 53 1024 f Int64.min_signed Int64.max_signed) with (Some z).",
            "VernacExtend",
            "2e622a786bda8abc7e73ceff8996938987e00ba7"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Int.unsigned_repr; auto.",
            "VernacExtend",
            "536e4f297b7a8fbe3aae6f72cb2f7619e7f2c464"
        ],
        [
            "symmetry; eapply ZofB_range_widen; eauto.",
            "VernacExtend",
            "ce2984529f8b5bcaad547b6101e60f99828f57da"
        ],
        [
            "compute; congruence.",
            "VernacExtend",
            "1a58589b5617513e16966c72a14aa8b5277b9c28"
        ],
        [
            "compute; congruence.",
            "VernacExtend",
            "1a58589b5617513e16966c72a14aa8b5277b9c28"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem of_int_of_long: forall n, of_int n = of_long (Int64.repr (Int.signed n)).",
            "VernacStartTheoremProof",
            "0729a8565b7264a15274080b37b2f5fe022053b1"
        ],
        [
            "unfold of_int, of_long.",
            "VernacExtend",
            "a3ea1327d87f28fc699eb06d81d0a8d893967b86"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite Int64.signed_repr.",
            "VernacExtend",
            "041c85867b5d8f6a046ae769f037cbc51037934e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "generalize (Int.signed_range n).",
            "VernacExtend",
            "801b1328dafdd0b9711ed79b3ecf798386ac1ecf"
        ],
        [
            "compute_this Int64.min_signed.",
            "VernacExtend",
            "102b6498a75f9aa4ea933f5bb652febd235ec81a"
        ],
        [
            "compute_this Int64.max_signed.",
            "VernacExtend",
            "003e213d5a0b52c24e5ab718aa97646d26b01412"
        ],
        [
            "smart_omega.",
            "VernacExtend",
            "5dcfc39e0aac5d358de281c4542000b4f08885f4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem of_intu_of_longu: forall n, of_intu n = of_longu (Int64.repr (Int.unsigned n)).",
            "VernacStartTheoremProof",
            "8ebe1d1993a94e33bd257c09135671ed2c52ab05"
        ],
        [
            "unfold of_intu, of_longu.",
            "VernacExtend",
            "deec72197a7f3eb3855583f657f9cd42635306ed"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite Int64.unsigned_repr.",
            "VernacExtend",
            "b9709b48049ce46df2bcb79f64beb9e33091c5a1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "generalize (Int.unsigned_range n).",
            "VernacExtend",
            "d142e3804560cb1d19427cc9dd86d1c5e245c1a4"
        ],
        [
            "smart_omega.",
            "VernacExtend",
            "5dcfc39e0aac5d358de281c4542000b4f08885f4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem of_intu_of_long: forall n, of_intu n = of_long (Int64.repr (Int.unsigned n)).",
            "VernacStartTheoremProof",
            "c406b833e561750c882d20f78feaedcfddfb4c5f"
        ],
        [
            "unfold of_intu, of_long.",
            "VernacExtend",
            "60cea02011a7aa53f112fee8779e3d25c06cb01c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite Int64.signed_repr.",
            "VernacExtend",
            "041c85867b5d8f6a046ae769f037cbc51037934e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "generalize (Int.unsigned_range n).",
            "VernacExtend",
            "d142e3804560cb1d19427cc9dd86d1c5e245c1a4"
        ],
        [
            "compute_this Int64.min_signed; compute_this Int64.max_signed; smart_omega.",
            "VernacExtend",
            "ea4f76bf78c83624d35b1a937133c004745565b9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Float.",
            "VernacEndSegment",
            "57d87d1d9ceaec9bce9496192829a187d54afaac"
        ],
        [
            "Module Float32.",
            "VernacDefineModule",
            "85aac90992cd9fa61354786411121afd7d201b27"
        ],
        [
            "Program Definition transform_quiet_pl (pl:nan_pl 24) : nan_pl 24 := Pos.lor pl (iter_nat xO 22 xH).",
            "VernacDefinition",
            "7198bd9254cdb4e0bd0f4f564cb03d6b5163b468"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "destruct pl.",
            "VernacExtend",
            "065af7eedd7ce004ccb5c8daff0f581142d21118"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Z.ltb_lt in *.",
            "VernacExtend",
            "1cda7adf032c7d639ade9df60b33a86a1c70022e"
        ],
        [
            "assert (forall x, Fcore_digits.digits2_pos x = Pos.size x).",
            "VernacExtend",
            "da6c8ad2cf2fccd238994683ecfbb9fcaa3d00a0"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "induction x0; simpl; auto; rewrite IHx0; zify; omega.",
            "VernacExtend",
            "17049ddbf6e6e2b542d17150787032a7a9e2b309"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite H, Psize_log_inf, <- Zlog2_log_inf in *.",
            "VernacExtend",
            "9221757fa5492dd4998e140d0b6d604956b629a7"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "change (Z.pos (Pos.lor x 4194304)) with (Z.lor (Z.pos x) 4194304%Z).",
            "VernacExtend",
            "a9ec333b836862aafa70deb4a4fea8a5eadd9d72"
        ],
        [
            "rewrite Z.log2_lor by (zify; omega).",
            "VernacExtend",
            "db821cc71d7e8171d1e3c9a7bbcba6765d5a3c35"
        ],
        [
            "apply Z.max_case.",
            "VernacExtend",
            "315a716e82f6808160c7103ee85c36339f5ac98c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma transform_quiet_pl_idempotent: forall pl, transform_quiet_pl (transform_quiet_pl pl) = transform_quiet_pl pl.",
            "VernacStartTheoremProof",
            "24c5ee1574e04b581633cd5e6cacd6478543a73a"
        ],
        [
            "intros []; simpl; intros.",
            "VernacExtend",
            "1de04ce3b272b94fa223dabf190eb2641ef6976b"
        ],
        [
            "apply Float.nan_payload_fequal.",
            "VernacExtend",
            "dcc50968a5a778827cb8dfbc5d0ee1455c9908ac"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Float.lor_idempotent.",
            "VernacExtend",
            "7c0a21fa03095d2112abbeda1901134e766fac18"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition neg_pl (s:bool) (pl:nan_pl 24) := (negb s, pl).",
            "VernacDefinition",
            "07fd7492d3234422ba06d58c1d264b094ee67acc"
        ],
        [
            "Definition abs_pl (s:bool) (pl:nan_pl 24) := (false, pl).",
            "VernacDefinition",
            "54431da8b232d5abff5cf1edb29cc9e2b3c3c231"
        ],
        [
            "Definition binop_pl (x y: binary32) : bool*nan_pl 24 := match x, y with | B754_nan s1 pl1, B754_nan s2 pl2 => if Archi.choose_binop_pl_32 s1 pl1 s2 pl2 then (s2, transform_quiet_pl pl2) else (s1, transform_quiet_pl pl1) | B754_nan s1 pl1, _ => (s1, transform_quiet_pl pl1) | _, B754_nan s2 pl2 => (s2, transform_quiet_pl pl2) | _, _ => Archi.default_pl_32 end.",
            "VernacDefinition",
            "54a5a46e56d40fa5f9029ac326f489b827e99f55"
        ],
        [
            "Definition zero: float32 := B754_zero _ _ false.",
            "VernacDefinition",
            "1338525020f54687f478ec4780dba1f1a790fbb4"
        ],
        [
            "Definition eq_dec: forall (f1 f2: float32), {f1 = f2} + {f1 <> f2} := Beq_dec _ _.",
            "VernacDefinition",
            "b8e9c3a5b0133272c46d41ca8dbd964f37ba0be1"
        ],
        [
            "Definition neg: float32 -> float32 := Bopp _ _ neg_pl.",
            "VernacDefinition",
            "78489ed8c2641b98d0c68c7753b56b7a5e2842b5"
        ],
        [
            "Definition abs: float32 -> float32 := Babs _ _ abs_pl.",
            "VernacDefinition",
            "1fb11652906ed2aac2580800c3b982a5c0fa25e7"
        ],
        [
            "Definition add: float32 -> float32 -> float32 := Bplus 24 128 __ __ binop_pl mode_NE.",
            "VernacDefinition",
            "372e9ca4d321f45d6d5f436336ee618b7b1b5de2"
        ],
        [
            "Definition sub: float32 -> float32 -> float32 := Bminus 24 128 __ __ binop_pl mode_NE.",
            "VernacDefinition",
            "80cc4f5395a394f91940753a53f9e4c6a35882eb"
        ],
        [
            "Definition mul: float32 -> float32 -> float32 := Bmult 24 128 __ __ binop_pl mode_NE.",
            "VernacDefinition",
            "0bbc6a019effb198998d1b631bbc717835f4f90d"
        ],
        [
            "Definition div: float32 -> float32 -> float32 := Bdiv 24 128 __ __ binop_pl mode_NE.",
            "VernacDefinition",
            "a5efc3b55d6c1512fbcf8d357ba93754af15c51b"
        ],
        [
            "Definition compare (f1 f2: float32) : option Datatypes.comparison := Bcompare 24 128 f1 f2.",
            "VernacDefinition",
            "aae1c77f1f23fc08c41e1b98533306cac2b358cf"
        ],
        [
            "Definition cmp (c:comparison) (f1 f2: float32) : bool := cmp_of_comparison c (compare f1 f2).",
            "VernacDefinition",
            "b9fcd78f24568cfa432fc1b16805c852e5c63a4b"
        ],
        [
            "Definition ordered (f1 f2: float32) : bool := ordered_of_comparison (compare f1 f2).",
            "VernacDefinition",
            "d577b44ad0103c7b1996f7ef11ae49109957cc9b"
        ],
        [
            "Definition of_double : float -> float32 := Float.to_single.",
            "VernacDefinition",
            "05afa4487fb1c4dc4ec322d1e33e6f40278c0530"
        ],
        [
            "Definition to_double : float32 -> float := Float.of_single.",
            "VernacDefinition",
            "fa0ea8b5ba57df42b0fde1047cad57bb67296340"
        ],
        [
            "Definition to_int (f:float32): option int := option_map Int.repr (ZofB_range _ _ f Int.min_signed Int.max_signed).",
            "VernacDefinition",
            "0f85658cd593ce16bc5b2ba9f5cf1d8834b29c68"
        ],
        [
            "Definition to_intu (f:float32): option int := option_map Int.repr (ZofB_range _ _ f 0 Int.max_unsigned).",
            "VernacDefinition",
            "e7a7340ea1cd7f0632ac207a359433f661d7e28c"
        ],
        [
            "Definition to_long (f:float32): option int64 := option_map Int64.repr (ZofB_range _ _ f Int64.min_signed Int64.max_signed).",
            "VernacDefinition",
            "8574c0df5a3dc931e7533df8bc4dcc4041403671"
        ],
        [
            "Definition to_longu (f:float32): option int64 := option_map Int64.repr (ZofB_range _ _ f 0 Int64.max_unsigned).",
            "VernacDefinition",
            "a28ce6ae73d39bc24ab238f03172652319370c88"
        ],
        [
            "Definition of_int (n:int): float32 := BofZ 24 128 __ __ (Int.signed n).",
            "VernacDefinition",
            "63d5cb15c72d6a8625ed5bfb2e14dfae018ab649"
        ],
        [
            "Definition of_intu (n:int): float32 := BofZ 24 128 __ __ (Int.unsigned n).",
            "VernacDefinition",
            "588a46d076a1b9c42256bbabb326ab53ccc593f6"
        ],
        [
            "Definition of_long (n:int64): float32 := BofZ 24 128 __ __ (Int64.signed n).",
            "VernacDefinition",
            "fc5361bb1b2d7a8b595e03ac9ba4b551398bb86c"
        ],
        [
            "Definition of_longu (n:int64): float32 := BofZ 24 128 __ __ (Int64.unsigned n).",
            "VernacDefinition",
            "a1cfd0594a1e99e1efd5f26716cade3eb01e88b9"
        ],
        [
            "Definition from_parsed (base:positive) (intPart:positive) (expPart:Z) : float32 := Bparse 24 128 __ __ base intPart expPart.",
            "VernacDefinition",
            "5aa90ca8b61a711bb1af521aafdef5885238e388"
        ],
        [
            "Definition to_bits (f: float32) : int := Int.repr (bits_of_b32 f).",
            "VernacDefinition",
            "a198abfed6283e4848debf24cafbccab7cbf8213"
        ],
        [
            "Definition of_bits (b: int): float32 := b32_of_bits (Int.unsigned b).",
            "VernacDefinition",
            "cdee5b91210e3e251156f30871fe345adc14bb61"
        ],
        [
            "Theorem add_commut: forall x y, is_nan _ _ x = false \\/ is_nan _ _ y = false -> add x y = add y x.",
            "VernacStartTheoremProof",
            "c006b87b95913659d42a00e63e008bd0c6a3e76b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Bplus_commut.",
            "VernacExtend",
            "1f08c1c008a31d6336e159ba7429f270d238e41f"
        ],
        [
            "destruct x, y; try reflexivity.",
            "VernacExtend",
            "40a808c9b8705657dde857bc494bb951c020a81d"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "intuition congruence.",
            "VernacExtend",
            "2cba3542847e3f4ea52f3f62375adc6e8f8f04bc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_commut: forall x y, is_nan _ _ x = false \\/ is_nan _ _ y = false -> mul x y = mul y x.",
            "VernacStartTheoremProof",
            "23d89d5d6de5542d892f1adf397a73078d9e3635"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Bmult_commut.",
            "VernacExtend",
            "068d1dcec59d9986bc0399d6ae9e949164b46150"
        ],
        [
            "destruct x, y; try reflexivity.",
            "VernacExtend",
            "40a808c9b8705657dde857bc494bb951c020a81d"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "intuition congruence.",
            "VernacExtend",
            "2cba3542847e3f4ea52f3f62375adc6e8f8f04bc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul2_add: forall f, add f f = mul f (of_int (Int.repr 2%Z)).",
            "VernacStartTheoremProof",
            "a57b82beb63676eed16880be87011747e990018d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Bmult2_Bplus.",
            "VernacExtend",
            "c8a4a7d46a5cf341011d15ce3754cd2f3570e4a9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct x; try discriminate.",
            "VernacExtend",
            "0d2b5f75157aee3dd67f803b89f3b6bee89c208a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "transitivity (b, transform_quiet_pl n).",
            "VernacExtend",
            "30f2c49c01eb9a3ce185aff264b11e26d85f9ee6"
        ],
        [
            "destruct Archi.choose_binop_pl_32; auto.",
            "VernacExtend",
            "d022b1a2dd2275aeccebc8f63cd456c9b9ccfb5d"
        ],
        [
            "destruct y; auto || discriminate.",
            "VernacExtend",
            "7fd9797708c5c9b05af79283b8cc340091dc8741"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition exact_inverse : float32 -> option float32 := Bexact_inverse 24 128 __ __.",
            "VernacDefinition",
            "9ca5a058af99406dc8bb3c2e9d400428f37c2d35"
        ],
        [
            "Theorem div_mul_inverse: forall x y z, exact_inverse y = Some z -> div x y = mul x z.",
            "VernacStartTheoremProof",
            "3e857a33c5675c4c5c7e312993f0345c0950672c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Bdiv_mult_inverse; auto.",
            "VernacExtend",
            "21c3d3d08c02ba164a5fcb7a776b0b7b4dd4377e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct x0; try discriminate.",
            "VernacExtend",
            "a730c7a2c6af8944c9052c6601e661737560e3e4"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "transitivity (b, transform_quiet_pl n).",
            "VernacExtend",
            "30f2c49c01eb9a3ce185aff264b11e26d85f9ee6"
        ],
        [
            "destruct y0; reflexivity || discriminate.",
            "VernacExtend",
            "a2ffed3b609219194a3d6596d2e7f66b0727c095"
        ],
        [
            "destruct z0; reflexivity || discriminate.",
            "VernacExtend",
            "57ea07d0c0f7bf6f9020fae84ebb5c1e8e85a9d5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cmp_swap: forall c x y, cmp (swap_comparison c) x y = cmp c y x.",
            "VernacStartTheoremProof",
            "1e19accf5d67d2e60e98ac305378782d002c6166"
        ],
        [
            "unfold cmp, compare; intros.",
            "VernacExtend",
            "08d7a98f8859cdb3ca2576cdcede3b57b1719cd0"
        ],
        [
            "rewrite (Bcompare_swap _ _ x y).",
            "VernacExtend",
            "3a3d36d2541ded7be2710f7ac7dc73287927f111"
        ],
        [
            "apply cmp_of_comparison_swap.",
            "VernacExtend",
            "e6590d2efa9d5792d6bf8f1cff852152a997b171"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cmp_ne_eq: forall f1 f2, cmp Cne f1 f2 = negb (cmp Ceq f1 f2).",
            "VernacStartTheoremProof",
            "050339cd86b7d07462ddb852b58f3edcbe9bd5b6"
        ],
        [
            "intros; apply cmp_of_comparison_ne_eq.",
            "VernacExtend",
            "594324cb03954ad368d36727c5917a110d4a81c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cmp_lt_eq_false: forall f1 f2, cmp Clt f1 f2 = true -> cmp Ceq f1 f2 = true -> False.",
            "VernacStartTheoremProof",
            "8e0f8520d4fc51da25c78222b1d3a1f447379bee"
        ],
        [
            "intros f1 f2; apply cmp_of_comparison_lt_eq_false.",
            "VernacExtend",
            "e3d8a8226eb2f1b78394dffc0712d19723c52fdf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cmp_le_lt_eq: forall f1 f2, cmp Cle f1 f2 = cmp Clt f1 f2 || cmp Ceq f1 f2.",
            "VernacStartTheoremProof",
            "4d51e856cc48520191b80c30d01ff3a471346769"
        ],
        [
            "intros f1 f2; apply cmp_of_comparison_le_lt_eq.",
            "VernacExtend",
            "3503e300f255f23956951c62b9cff68b6e8f1b21"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cmp_gt_eq_false: forall x y, cmp Cgt x y = true -> cmp Ceq x y = true -> False.",
            "VernacStartTheoremProof",
            "9599aaf9ca62b7975083e87a9337766ae07c95ef"
        ],
        [
            "intros f1 f2; apply cmp_of_comparison_gt_eq_false.",
            "VernacExtend",
            "9ece1f692274097a10b17c6fa25a9291278ef245"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cmp_ge_gt_eq: forall f1 f2, cmp Cge f1 f2 = cmp Cgt f1 f2 || cmp Ceq f1 f2.",
            "VernacStartTheoremProof",
            "d885f49d333623c5000d8512c393b1bb80223066"
        ],
        [
            "intros f1 f2; apply cmp_of_comparison_ge_gt_eq.",
            "VernacExtend",
            "51fb8f1e0a90cce67dd8308bc3235e38e53871bd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cmp_lt_gt_false: forall f1 f2, cmp Clt f1 f2 = true -> cmp Cgt f1 f2 = true -> False.",
            "VernacStartTheoremProof",
            "26e47829284333c01f75a4b281dc5b45f03fbfd9"
        ],
        [
            "intros f1 f2; apply cmp_of_comparison_lt_gt_false.",
            "VernacExtend",
            "d3dadade67861e0767003bc31fc9e49d082c487f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cmp_double: forall f1 f2 c, cmp c f1 f2 = Float.cmp c (to_double f1) (to_double f2).",
            "VernacStartTheoremProof",
            "7f57539b1838b45fc1b1b9b3b65dfda875d98e95"
        ],
        [
            "unfold cmp, Float.cmp; intros.",
            "VernacExtend",
            "c6510cf09407df66d7924285590881fc8c614215"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Bcompare_Bconv_widen.",
            "VernacExtend",
            "d35d368c77333e6e0e379755e6585aeb1c15319e"
        ],
        [
            "red; omega.",
            "VernacExtend",
            "ae85dd91496b88667e743b35b47cde1293a54706"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem of_to_bits: forall f, of_bits (to_bits f) = f.",
            "VernacStartTheoremProof",
            "ce59889ba7f00f47ada266978103c2cfece06554"
        ],
        [
            "intros; unfold of_bits, to_bits, bits_of_b32, b32_of_bits.",
            "VernacExtend",
            "cc20df98fee03ea6613c74d3642e9f86b8c77c90"
        ],
        [
            "rewrite Int.unsigned_repr, binary_float_of_bits_of_binary_float; [reflexivity|].",
            "VernacExtend",
            "c29a6f632fe14ffa54e5d1f55ef416a5dc00499c"
        ],
        [
            "generalize (bits_of_binary_float_range 23 8 __ __ f).",
            "VernacExtend",
            "f16c98ce1672961f4e48ad5591fd3b491cecebff"
        ],
        [
            "change (2^(23+8+1)) with (Int.max_unsigned + 1).",
            "VernacExtend",
            "da3fd9fc9f0ba4f6f6e72f64a57c8444cc598fb3"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem to_of_bits: forall b, to_bits (of_bits b) = b.",
            "VernacStartTheoremProof",
            "c35518ece269f77bd6e03cd9e42ed1d68b07b85e"
        ],
        [
            "intros; unfold of_bits, to_bits, bits_of_b32, b32_of_bits.",
            "VernacExtend",
            "cc20df98fee03ea6613c74d3642e9f86b8c77c90"
        ],
        [
            "rewrite bits_of_binary_float_of_bits.",
            "VernacExtend",
            "a35cf49b6225036d94f5cd0be28db913afe04ee2"
        ],
        [
            "apply Int.repr_unsigned.",
            "VernacExtend",
            "b3d43aae5f6f402bb1c3d022281cbe34cf2ae2f9"
        ],
        [
            "apply Int.unsigned_range.",
            "VernacExtend",
            "7ccf4bc2134d305adc6d1166907640a13f05cd8f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem of_int_double: forall n, of_int n = of_double (Float.of_int n).",
            "VernacStartTheoremProof",
            "0db4d9113e55a5b9986b10d0b904515e0adcf840"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Bconv_BofZ.",
            "VernacExtend",
            "ad42a88f15a4438df6017be201a8bab259aa2e31"
        ],
        [
            "apply integer_representable_n; auto.",
            "VernacExtend",
            "e7579ea4ba88dc0bc6d77a0170cabe01629de62f"
        ],
        [
            "generalize (Int.signed_range n); Float.smart_omega.",
            "VernacExtend",
            "c61422149458ab9951ea0bbfccf27230792609a0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem of_intu_double: forall n, of_intu n = of_double (Float.of_intu n).",
            "VernacStartTheoremProof",
            "594b6c5330cfbd6f6a6d4eba21708010ea275f25"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Bconv_BofZ.",
            "VernacExtend",
            "ad42a88f15a4438df6017be201a8bab259aa2e31"
        ],
        [
            "apply integer_representable_n; auto.",
            "VernacExtend",
            "e7579ea4ba88dc0bc6d77a0170cabe01629de62f"
        ],
        [
            "generalize (Int.unsigned_range n); Float.smart_omega.",
            "VernacExtend",
            "f913eacc94c74adc134c96199da78565034ef98c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem to_int_double: forall f n, to_int f = Some n -> Float.to_int (to_double f) = Some n.",
            "VernacStartTheoremProof",
            "022c5bfc3f4306ccb24ed6887bb0e6595da27359"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold to_int in H.",
            "VernacExtend",
            "c111d44ed8771d4da2adab63b72f93ecc9cb570e"
        ],
        [
            "destruct (ZofB_range _ _ f Int.min_signed Int.max_signed) as [n'|] eqn:E; inv H.",
            "VernacExtend",
            "22a482b7b0cc9d386a88d25b71c1695bd9b22b26"
        ],
        [
            "unfold Float.to_int, to_double, Float.of_single.",
            "VernacExtend",
            "6fa6e85d4ddecf20a7beb54b7c470f34387ced21"
        ],
        [
            "erewrite ZofB_range_Bconv; eauto.",
            "VernacExtend",
            "ec41c40641ad6453f5256a2af88a4b0a42f53a0a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem to_intu_double: forall f n, to_intu f = Some n -> Float.to_intu (to_double f) = Some n.",
            "VernacStartTheoremProof",
            "02ce12e1945065a569319368c541de033df8f6aa"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold to_intu in H.",
            "VernacExtend",
            "bf20425967400a5915d49c0d79aa604d0afa73e1"
        ],
        [
            "destruct (ZofB_range _ _ f 0 Int.max_unsigned) as [n'|] eqn:E; inv H.",
            "VernacExtend",
            "69b6819037cadc65a6c85aeebf61308af1c76c09"
        ],
        [
            "unfold Float.to_intu, to_double, Float.of_single.",
            "VernacExtend",
            "cc8115a10c6e309db5e003fcc4cefb7cd751e667"
        ],
        [
            "erewrite ZofB_range_Bconv; eauto.",
            "VernacExtend",
            "ec41c40641ad6453f5256a2af88a4b0a42f53a0a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem to_long_double: forall f n, to_long f = Some n -> Float.to_long (to_double f) = Some n.",
            "VernacStartTheoremProof",
            "241002c599d82fc6e4c8704d65e3d10cbef56444"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold to_long in H.",
            "VernacExtend",
            "afd3da79985b8a7793dbfc5419fd5cd3540e8da3"
        ],
        [
            "destruct (ZofB_range _ _ f Int64.min_signed Int64.max_signed) as [n'|] eqn:E; inv H.",
            "VernacExtend",
            "9938976875d2336e4b575c99bc8c38556ccbde8e"
        ],
        [
            "unfold Float.to_long, to_double, Float.of_single.",
            "VernacExtend",
            "179d9693e5373e1ef6fec1ab0cfe7d587bdf29b4"
        ],
        [
            "erewrite ZofB_range_Bconv; eauto.",
            "VernacExtend",
            "ec41c40641ad6453f5256a2af88a4b0a42f53a0a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem to_longu_double: forall f n, to_longu f = Some n -> Float.to_longu (to_double f) = Some n.",
            "VernacStartTheoremProof",
            "6b9aec1cb00919e8a8ab5a26d646baad585a2830"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold to_longu in H.",
            "VernacExtend",
            "134047e190ae4e2a9e16886f6e6c04daf6c57ca4"
        ],
        [
            "destruct (ZofB_range _ _ f 0 Int64.max_unsigned) as [n'|] eqn:E; inv H.",
            "VernacExtend",
            "a6c414e8c53b29707b109c8b4f36a09986712706"
        ],
        [
            "unfold Float.to_longu, to_double, Float.of_single.",
            "VernacExtend",
            "8788c3cba6da8952ced075a5aef4890565706e50"
        ],
        [
            "erewrite ZofB_range_Bconv; eauto.",
            "VernacExtend",
            "ec41c40641ad6453f5256a2af88a4b0a42f53a0a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma int_round_odd_plus: forall p n, 0 <= p -> int_round_odd n p = Z.land (Z.lor n (Z.land n (2^p-1) + (2^p-1))) (-(2^p)).",
            "VernacStartTheoremProof",
            "a3ac3541137dff199f16aa8b52c2801bbb8bf68c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (POS: 0 < 2^p) by (apply (Zpower_gt_0 radix2); auto).",
            "VernacExtend",
            "3ed3b185980783754894ff864a077c504204ac6e"
        ],
        [
            "assert (A: Z.land n (2^p-1) = n mod 2^p).",
            "VernacExtend",
            "fb674bcbca7bbf55791870511687004aa9d71545"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite <- Z.land_ones by auto.",
            "VernacExtend",
            "973016b1968f1373a5ef0df0b6f848acbd4dde1c"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite Z.ones_equiv.",
            "VernacExtend",
            "503203c38bc29f8a4fe474aa17d3e89007dd9ddf"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite A.",
            "VernacExtend",
            "66a3aec75a717b72a3c9a20459f4dabe8d0df2c1"
        ],
        [
            "assert (B: 0 <= n mod 2^p < 2^p).",
            "VernacExtend",
            "6919e0958ff8605c4a1e16f556f0f3b6365077e0"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply Z_mod_lt.",
            "VernacExtend",
            "d33d3cab9911c0f11554b4e753af00e7b5fcc4ca"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "set (m := n mod 2^p + (2^p-1)) in *.",
            "VernacExtend",
            "d531b43487fae52f43f1983a29fa47d7e61a5d21"
        ],
        [
            "assert (C: m / 2^p = if zeq (n mod 2^p) 0 then 0 else 1).",
            "VernacExtend",
            "ebedf6cf9b7a841af25a9f0bb2e5df70bfd90b1c"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold m.",
            "VernacExtend",
            "d8ebcad17c946ddc6f7a233ab999ae013ea9d454"
        ],
        [
            "destruct (zeq (n mod 2^p) 0).",
            "VernacExtend",
            "4a94c6437418669fd10f2e29535cd1a35eb6409c"
        ],
        [
            "rewrite e.",
            "VernacExtend",
            "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
        ],
        [
            "apply Zdiv_small.",
            "VernacExtend",
            "3122ba3e001b8237927b3d5e6f1ed3eaf8b08d19"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "eapply Zdiv_unique with (n mod 2^p - 1).",
            "VernacExtend",
            "9ed58c8657d484bab24483c8d817babf4d77abd4"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (D: Z.testbit m p = if zeq (n mod 2^p) 0 then false else true).",
            "VernacExtend",
            "4388393ce2df524ea421544cf9c75177b09fd79b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct (zeq (n mod 2^p) 0).",
            "VernacExtend",
            "4a94c6437418669fd10f2e29535cd1a35eb6409c"
        ],
        [
            "apply Z.testbit_false; auto.",
            "VernacExtend",
            "30ed3dbedceede08052b38a8c28d5651acc6b900"
        ],
        [
            "rewrite C; auto.",
            "VernacExtend",
            "d2cfca45582d1823dbb6df89b9e8076b7700d72e"
        ],
        [
            "apply Z.testbit_true; auto.",
            "VernacExtend",
            "228b281fd68c843f83eabb50869efb7b409bffaf"
        ],
        [
            "rewrite C; auto.",
            "VernacExtend",
            "d2cfca45582d1823dbb6df89b9e8076b7700d72e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (E: forall i, p < i -> Z.testbit m i = false).",
            "VernacExtend",
            "7b79160058698390b4decedb395c08cf0dd0df70"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Z.testbit_false.",
            "VernacExtend",
            "401535a7c0c7235ba9e3db96de9e66b9de320be4"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "replace (m / 2^i) with 0.",
            "VernacExtend",
            "4143e2b98df4bc527fb742db3b59d9cf19339f56"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Zdiv_small.",
            "VernacExtend",
            "3122ba3e001b8237927b3d5e6f1ed3eaf8b08d19"
        ],
        [
            "unfold m.",
            "VernacExtend",
            "d8ebcad17c946ddc6f7a233ab999ae013ea9d454"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply Z.lt_le_trans with (2 * 2^p).",
            "VernacExtend",
            "16fc8f27665468c92d17712c7abd004034e0008e"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "change 2 with (2^1) at 1.",
            "VernacExtend",
            "c642e429eac3ac194b95005f10f48ea946efc285"
        ],
        [
            "rewrite <- (Zpower_plus radix2) by omega.",
            "VernacExtend",
            "05151a82acdcd0296850844d2ad40b2e48f1c68d"
        ],
        [
            "apply Zpower_le.",
            "VernacExtend",
            "2d8b0e9af4040343c65bbbc1aef967258a85528a"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (F: forall i, 0 <= i -> Z.testbit (-2^p) i = if zlt i p then false else true).",
            "VernacExtend",
            "1c277f136753b9b4cb688367656ad370fe3cc59f"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite Z.bits_opp by auto.",
            "VernacExtend",
            "397a1a0388235cbfa0adec6cab0e3c6a83ce0899"
        ],
        [
            "rewrite <- Z.ones_equiv.",
            "VernacExtend",
            "cec05146e433744b93c454c32bbd08df5a319e7e"
        ],
        [
            "destruct (zlt i p).",
            "VernacExtend",
            "300da2fd6354215ac78c1faf215dd996be4815ef"
        ],
        [
            "rewrite Z.ones_spec_low by omega.",
            "VernacExtend",
            "9d1e51fe9f0c3a979368238e459c020d1fcc5d10"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite Z.ones_spec_high by omega.",
            "VernacExtend",
            "7664085c8ba229471283c57fe174e09f8aa5350d"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply int_round_odd_bits; auto.",
            "VernacExtend",
            "1b8e61d9747490b7f64ddc6781df2a68b9a6acf3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite Z.land_spec, F, zlt_true by omega.",
            "VernacExtend",
            "3440612ef3c947a6514195ca62cc47ab102af6aa"
        ],
        [
            "apply andb_false_r.",
            "VernacExtend",
            "96acabd8a60f7c2e82c0ec27c34e893436485a16"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Z.land_spec, Z.lor_spec, D, F, zlt_false, andb_true_r by omega.",
            "VernacExtend",
            "12068453c9c1d8734d8858b1b4d55821e5dd7165"
        ],
        [
            "destruct (Z.eqb (n mod 2^p) 0) eqn:Z.",
            "VernacExtend",
            "e49de7aa85a616e52ac1b3eb2c4bfec1e0341489"
        ],
        [
            "rewrite Z.eqb_eq in Z.",
            "VernacExtend",
            "7763694c1ec0cda1d3f3051f72cf6001809f99be"
        ],
        [
            "rewrite Z, zeq_true.",
            "VernacExtend",
            "37e12ddba0722c86651a3253b380b9529bc52f04"
        ],
        [
            "apply orb_false_r.",
            "VernacExtend",
            "c0fa87fb1baa1cbcd361805f26554fb59f562524"
        ],
        [
            "rewrite Z.eqb_neq in Z.",
            "VernacExtend",
            "35b3b0d5b6ec3df9e1f525db86a0f8d39530a14b"
        ],
        [
            "rewrite zeq_false by auto.",
            "VernacExtend",
            "2f78a051efbb0bf5053efb154ff00c05e74ed19b"
        ],
        [
            "apply orb_true_r.",
            "VernacExtend",
            "f6c982e3797841078d730c93c95d18e257302343"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite Z.land_spec, Z.lor_spec, E, F, zlt_false, andb_true_r by omega.",
            "VernacExtend",
            "303c7fbdd009c1346632eadc90b7dfe60ae42040"
        ],
        [
            "apply orb_false_r.",
            "VernacExtend",
            "c0fa87fb1baa1cbcd361805f26554fb59f562524"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma of_long_round_odd: forall n conv_nan, 2^36 <= Z.abs n < 2^64 -> BofZ 24 128 __ __ n = Bconv _ _ 24 128 __ __ conv_nan mode_NE (BofZ 53 1024 __ __ (Z.land (Z.lor n ((Z.land n 2047) + 2047)) (-2048))).",
            "VernacStartTheoremProof",
            "2c2c30a97439451602d3ea8262a166526c0cf808"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- (int_round_odd_plus 11) by omega.",
            "VernacExtend",
            "bce7ffb0f20dad292c07ed98c3773ff013d96394"
        ],
        [
            "assert (-2^64 <= int_round_odd n 11).",
            "VernacExtend",
            "7291ce3d30dab4249bf2b97119861c3944f1c026"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "change (-2^64) with (int_round_odd (-2^64) 11).",
            "VernacExtend",
            "7328783bc4ab4c9c2c5ddda3894cd3e14144a33c"
        ],
        [
            "apply (int_round_odd_le 0 0); xomega.",
            "VernacExtend",
            "ef2c468361950f032db86f0b40cad0f15f492fc5"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (int_round_odd n 11 <= 2^64).",
            "VernacExtend",
            "6a7fc67f00e68ae4531b2396bd2b1d029f6b70ed"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "change (2^64) with (int_round_odd (2^64) 11).",
            "VernacExtend",
            "a5df4f8f547a8f942ea97bbdaa6efb35c8d4d9c4"
        ],
        [
            "apply (int_round_odd_le 0 0); xomega.",
            "VernacExtend",
            "ef2c468361950f032db86f0b40cad0f15f492fc5"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite Bconv_BofZ.",
            "VernacExtend",
            "627df980fcd0e6e1686355150af9fa4eee20a6dd"
        ],
        [
            "apply BofZ_round_odd with (p := 11).",
            "VernacExtend",
            "0a822f07abd61c1d8093a73a6d8dd6b125fb5da5"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply Z.le_trans with (2^64).",
            "VernacExtend",
            "ad209449030ddb51d857b744d7b281e6eb3a7bda"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "compute; intuition congruence.",
            "VernacExtend",
            "b1e4ec174532a4bdd5fe31fcded6521ccfff32fe"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "exact (proj1 H).",
            "VernacExtend",
            "7d9a5bc9f722dda1f439005f8b3716449ea82106"
        ],
        [
            "unfold int_round_odd.",
            "VernacExtend",
            "cc940eff27d7a062ba92390d436863bb8c08c79d"
        ],
        [
            "apply integer_representable_n2p_wide.",
            "VernacExtend",
            "23e726d7b459f89f7dc0564e7bcfcc0d15b422e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "unfold int_round_odd in H0, H1.",
            "VernacExtend",
            "c08cbef975bd06bf9015cc76ed8b60d392d152b0"
        ],
        [
            "split; (apply Zmult_le_reg_r with (2^11); [compute; auto | assumption]).",
            "VernacExtend",
            "55e1684cf602b9b76b28ce6e4ef7fdf78fd162fa"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem of_longu_double_1: forall n, Int64.unsigned n <= 2^53 -> of_longu n = of_double (Float.of_longu n).",
            "VernacStartTheoremProof",
            "1ee4c347dc6ca828146be215085d7bcfccd59632"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "symmetry; apply Bconv_BofZ.",
            "VernacExtend",
            "0f025ba8cf0ac33cdc9ce143d009f2d32e4a28bb"
        ],
        [
            "apply integer_representable_n; auto.",
            "VernacExtend",
            "e7579ea4ba88dc0bc6d77a0170cabe01629de62f"
        ],
        [
            "pose proof (Int64.unsigned_range n); omega.",
            "VernacExtend",
            "f39d47fc427e446307739f935b1ece6045d1b2ce"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem of_longu_double_2: forall n, 2^36 <= Int64.unsigned n -> of_longu n = of_double (Float.of_longu (Int64.and (Int64.or n (Int64.add (Int64.and n (Int64.repr 2047)) (Int64.repr 2047))) (Int64.repr (-2048)))).",
            "VernacStartTheoremProof",
            "356c85538f6263bf339ed05716941ad5a82f7ca4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (Int64.unsigned_range n).",
            "VernacExtend",
            "8027b4700a9e2520dc84fb0f02edc3464e85e1e7"
        ],
        [
            "unfold of_longu.",
            "VernacExtend",
            "f3196d80b2954ea723f579dd8740c1335b759820"
        ],
        [
            "erewrite of_long_round_odd.",
            "VernacExtend",
            "3581a52261f1568efb959610acc4bfa91007b6c2"
        ],
        [
            "unfold of_double, Float.to_single.",
            "VernacExtend",
            "26cd826efcf2ca2fe54137a666d6d2ac4448e907"
        ],
        [
            "instantiate (1 := Float.to_single_pl).",
            "VernacExtend",
            "7635ee83e7ea8fc7deb24bb7cd627cb488f43610"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "unfold Float.of_longu.",
            "VernacExtend",
            "121d18c0e127240f1529c81b0dd1339da1acd257"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "set (n' := Z.land (Z.lor (Int64.unsigned n) (Z.land (Int64.unsigned n) 2047 + 2047)) (-2048)).",
            "VernacExtend",
            "06bcd33a12986f28bd6c5041c9b7500954f92816"
        ],
        [
            "assert (int_round_odd (Int64.unsigned n) 11 = n') by (apply int_round_odd_plus; omega).",
            "VernacExtend",
            "835fca1ee6fa66c3b039f725215693ed5bfa3c9d"
        ],
        [
            "assert (0 <= n').",
            "VernacExtend",
            "7834b75dc1a9dadd3dfbb2137ac890b0977d886d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite <- H1.",
            "VernacExtend",
            "b8b417d956609d1854d18921f25bc0ffae73a74e"
        ],
        [
            "change 0 with (int_round_odd 0 11).",
            "VernacExtend",
            "b4a05daa50b07f2cb6f543256ee8bb6adef01c91"
        ],
        [
            "apply (int_round_odd_le 0 0); omega.",
            "VernacExtend",
            "0d9e3be991d229974682125a6c1d4819a357409a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (n' < Int64.modulus).",
            "VernacExtend",
            "c6aceeb235871c8b9397d7ba7d00f1acd46ac244"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply Z.le_lt_trans with (int_round_odd (Int64.modulus - 1) 11).",
            "VernacExtend",
            "30d2ddf40c685c1f42833c77302716912599655c"
        ],
        [
            "rewrite <- H1.",
            "VernacExtend",
            "b8b417d956609d1854d18921f25bc0ffae73a74e"
        ],
        [
            "apply (int_round_odd_le 0 0); omega.",
            "VernacExtend",
            "0d9e3be991d229974682125a6c1d4819a357409a"
        ],
        [
            "compute; auto.",
            "VernacExtend",
            "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite <- (Int64.unsigned_repr n') by (unfold Int64.max_unsigned; omega).",
            "VernacExtend",
            "3237bf2cf66e2a1653c2f13c4dfaf00101280f8f"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "Int64.bit_solve.",
            "VernacExtend",
            "fd187a4d679e1e3939a006d59306822bf33dba76"
        ],
        [
            "rewrite Int64.testbit_repr by auto.",
            "VernacExtend",
            "ff5f534e450af74e625d680f9450bca86e69717c"
        ],
        [
            "unfold n'.",
            "VernacExtend",
            "f066012a55e59a59288e2dea6fb5d866821eed02"
        ],
        [
            "rewrite Z.land_spec, Z.lor_spec.",
            "VernacExtend",
            "9f1ac4f7b5cd012367d8dd65fe50b547c2b79912"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "unfold Int64.testbit.",
            "VernacExtend",
            "9ef67286e051955828acb7a736d336915a31e9c9"
        ],
        [
            "rewrite Int64.add_unsigned.",
            "VernacExtend",
            "905d6546929914245857be1ced08a9c1c0690d24"
        ],
        [
            "fold (Int64.testbit (Int64.repr (Int64.unsigned (Int64.and n (Int64.repr 2047)) + Int64.unsigned (Int64.repr 2047))) i).",
            "VernacExtend",
            "e1107de8a63daba70df119dbe6f40745fd21a5d3"
        ],
        [
            "rewrite Int64.testbit_repr by auto.",
            "VernacExtend",
            "ff5f534e450af74e625d680f9450bca86e69717c"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "unfold Int64.and.",
            "VernacExtend",
            "f644075eeb5706e31c31bb93eab9e334c7689317"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Int64.unsigned_repr.",
            "VernacExtend",
            "a3971c66479a527d8a7caafe0c7de5303bb874ef"
        ],
        [
            "change 2047 with (Z.ones 11).",
            "VernacExtend",
            "03a1c29eebc24cd6949c12c14349ab823fa09c4d"
        ],
        [
            "rewrite Z.land_ones by omega.",
            "VernacExtend",
            "f17d8055a1048fe04b9cbe11add48939ea02a291"
        ],
        [
            "exploit (Z_mod_lt (Int64.unsigned n) (2^11)).",
            "VernacExtend",
            "78c33f7f9c3fcbc0f602480e3ae51f52cff8fbec"
        ],
        [
            "compute; auto.",
            "VernacExtend",
            "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
        ],
        [
            "assert (2^11 < Int64.max_unsigned) by (compute; auto).",
            "VernacExtend",
            "e2df028c6232d14ba2bad37d43d2177bccadfc65"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply Int64.same_bits_eqm; auto.",
            "VernacExtend",
            "25b20c1769d00329430959c5d2d27e3e73a2d874"
        ],
        [
            "exists (-1); auto.",
            "VernacExtend",
            "0caf4c2fa4ffa20597f3aa27bab1e8abd6a2f176"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "xomega.",
            "VernacExtend",
            "92dc13ff6a078243e0cd72420247996d076ca43b"
        ],
        [
            "change (2^64) with Int64.modulus.",
            "VernacExtend",
            "1436d1787bff2fb9645d976003567b40cb4a5ef5"
        ],
        [
            "xomega.",
            "VernacExtend",
            "92dc13ff6a078243e0cd72420247996d076ca43b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem of_long_double_1: forall n, Z.abs (Int64.signed n) <= 2^53 -> of_long n = of_double (Float.of_long n).",
            "VernacStartTheoremProof",
            "b526ad54190e933e27755e6d9100eb02bb830149"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "symmetry; apply Bconv_BofZ.",
            "VernacExtend",
            "0f025ba8cf0ac33cdc9ce143d009f2d32e4a28bb"
        ],
        [
            "apply integer_representable_n; auto.",
            "VernacExtend",
            "e7579ea4ba88dc0bc6d77a0170cabe01629de62f"
        ],
        [
            "xomega.",
            "VernacExtend",
            "92dc13ff6a078243e0cd72420247996d076ca43b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem of_long_double_2: forall n, 2^36 <= Z.abs (Int64.signed n) -> of_long n = of_double (Float.of_long (Int64.and (Int64.or n (Int64.add (Int64.and n (Int64.repr 2047)) (Int64.repr 2047))) (Int64.repr (-2048)))).",
            "VernacStartTheoremProof",
            "4492f676d0c1a8e675c9be9dfcbe7677653c5088"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (Int64.signed_range n).",
            "VernacExtend",
            "9086955dab80c08a74ac9d0ab3375096e62b69b1"
        ],
        [
            "unfold of_long.",
            "VernacExtend",
            "7890013f17e7d51c8a68046dd9313acacd6bf2c5"
        ],
        [
            "erewrite of_long_round_odd.",
            "VernacExtend",
            "3581a52261f1568efb959610acc4bfa91007b6c2"
        ],
        [
            "unfold of_double, Float.to_single.",
            "VernacExtend",
            "26cd826efcf2ca2fe54137a666d6d2ac4448e907"
        ],
        [
            "instantiate (1 := Float.to_single_pl).",
            "VernacExtend",
            "7635ee83e7ea8fc7deb24bb7cd627cb488f43610"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "unfold Float.of_long.",
            "VernacExtend",
            "5d78c4dcfc109ff3ef1839c8cac2309245dd4726"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "set (n' := Z.land (Z.lor (Int64.signed n) (Z.land (Int64.signed n) 2047 + 2047)) (-2048)).",
            "VernacExtend",
            "3de68a330b769ae643a1d502cc4cd07705f03342"
        ],
        [
            "assert (int_round_odd (Int64.signed n) 11 = n') by (apply int_round_odd_plus; omega).",
            "VernacExtend",
            "87dd8b8a846cf3d0b6ce1cbbd5ef0565f7486922"
        ],
        [
            "assert (Int64.min_signed <= n').",
            "VernacExtend",
            "5b420b0c1b0cb657f147dd7e5ca849b72ee17fcd"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite <- H1.",
            "VernacExtend",
            "b8b417d956609d1854d18921f25bc0ffae73a74e"
        ],
        [
            "change Int64.min_signed with (int_round_odd Int64.min_signed 11).",
            "VernacExtend",
            "901831cc3c01ca9f64148aad97018825ad332355"
        ],
        [
            "apply (int_round_odd_le 0 0); omega.",
            "VernacExtend",
            "0d9e3be991d229974682125a6c1d4819a357409a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (n' <= Int64.max_signed).",
            "VernacExtend",
            "3fdae2ff58fee8ec1dc25b81e126d06afc9a2c9d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply Z.le_trans with (int_round_odd Int64.max_signed 11).",
            "VernacExtend",
            "030faa897657d1a94b695c702fd02ccb1edca245"
        ],
        [
            "rewrite <- H1.",
            "VernacExtend",
            "b8b417d956609d1854d18921f25bc0ffae73a74e"
        ],
        [
            "apply (int_round_odd_le 0 0); omega.",
            "VernacExtend",
            "0d9e3be991d229974682125a6c1d4819a357409a"
        ],
        [
            "compute; intuition congruence.",
            "VernacExtend",
            "b1e4ec174532a4bdd5fe31fcded6521ccfff32fe"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite <- (Int64.signed_repr n') by omega.",
            "VernacExtend",
            "1807bfb092121cea6a853032a92da6795173182b"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "Int64.bit_solve.",
            "VernacExtend",
            "fd187a4d679e1e3939a006d59306822bf33dba76"
        ],
        [
            "rewrite Int64.testbit_repr by auto.",
            "VernacExtend",
            "ff5f534e450af74e625d680f9450bca86e69717c"
        ],
        [
            "unfold n'.",
            "VernacExtend",
            "f066012a55e59a59288e2dea6fb5d866821eed02"
        ],
        [
            "rewrite Z.land_spec, Z.lor_spec.",
            "VernacExtend",
            "9f1ac4f7b5cd012367d8dd65fe50b547c2b79912"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite Int64.bits_signed by omega.",
            "VernacExtend",
            "6ab0c4a118bbaf225c1c734d61e6016f7eb6c169"
        ],
        [
            "rewrite zlt_true by omega.",
            "VernacExtend",
            "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold Int64.testbit.",
            "VernacExtend",
            "9ef67286e051955828acb7a736d336915a31e9c9"
        ],
        [
            "rewrite Int64.add_unsigned.",
            "VernacExtend",
            "905d6546929914245857be1ced08a9c1c0690d24"
        ],
        [
            "fold (Int64.testbit (Int64.repr (Int64.unsigned (Int64.and n (Int64.repr 2047)) + Int64.unsigned (Int64.repr 2047))) i).",
            "VernacExtend",
            "e1107de8a63daba70df119dbe6f40745fd21a5d3"
        ],
        [
            "rewrite Int64.testbit_repr by auto.",
            "VernacExtend",
            "ff5f534e450af74e625d680f9450bca86e69717c"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "unfold Int64.and.",
            "VernacExtend",
            "f644075eeb5706e31c31bb93eab9e334c7689317"
        ],
        [
            "change (Int64.unsigned (Int64.repr 2047)) with 2047.",
            "VernacExtend",
            "6c3b00411173f748aec89272b9ec799e11046375"
        ],
        [
            "change 2047 with (Z.ones 11).",
            "VernacExtend",
            "03a1c29eebc24cd6949c12c14349ab823fa09c4d"
        ],
        [
            "rewrite ! Z.land_ones by omega.",
            "VernacExtend",
            "fd69324d71aa2ec76262e0271aaa957d00362bcf"
        ],
        [
            "rewrite Int64.unsigned_repr.",
            "VernacExtend",
            "b9709b48049ce46df2bcb79f64beb9e33091c5a1"
        ],
        [
            "apply Int64.eqmod_mod_eq.",
            "VernacExtend",
            "dca4a75ce19c2b5e8acb25138fd8e9bbb95a696b"
        ],
        [
            "apply Z.lt_gt.",
            "VernacExtend",
            "dc71d367ecfba7881ab9241fc30fdd62fa24e40e"
        ],
        [
            "apply (Zpower_gt_0 radix2); omega.",
            "VernacExtend",
            "b8da4ee5171bd8ca5335a16d281e5d6b373e709d"
        ],
        [
            "apply Int64.eqmod_divides with (2^64).",
            "VernacExtend",
            "cfa3b2b5842ba06e0022fa2b17e05a176a1ced7e"
        ],
        [
            "apply Int64.eqm_signed_unsigned.",
            "VernacExtend",
            "254f24dddbeee8933071e34cec90771c92bd5077"
        ],
        [
            "exists (2^(64-11)); auto.",
            "VernacExtend",
            "faa519b473c2e984b5af75f7e1c57787be1da85c"
        ],
        [
            "exploit (Z_mod_lt (Int64.unsigned n) (2^11)).",
            "VernacExtend",
            "78c33f7f9c3fcbc0f602480e3ae51f52cff8fbec"
        ],
        [
            "compute; auto.",
            "VernacExtend",
            "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
        ],
        [
            "assert (2^11 < Int64.max_unsigned) by (compute; auto).",
            "VernacExtend",
            "e2df028c6232d14ba2bad37d43d2177bccadfc65"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply Int64.same_bits_eqm; auto.",
            "VernacExtend",
            "25b20c1769d00329430959c5d2d27e3e73a2d874"
        ],
        [
            "exists (-1); auto.",
            "VernacExtend",
            "0caf4c2fa4ffa20597f3aa27bab1e8abd6a2f176"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (-2^64 < Int64.min_signed) by (compute; auto).",
            "VernacExtend",
            "743068d63fe3041323aa71c54ea2e963f78d99ad"
        ],
        [
            "assert (Int64.max_signed < 2^64) by (compute; auto).",
            "VernacExtend",
            "bbf7d6898ac75f0ea3694871c823d90b7c543c92"
        ],
        [
            "xomega.",
            "VernacExtend",
            "92dc13ff6a078243e0cd72420247996d076ca43b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Float32.",
            "VernacEndSegment",
            "23925700b33d351986fd3a92c5e10b6e3b26a9f8"
        ],
        [
            "Global Opaque Float.zero Float.eq_dec Float.neg Float.abs Float.of_single Float.to_single Float.of_int Float.of_intu Float.of_long Float.of_longu Float.to_int Float.to_intu Float.to_long Float.to_longu Float.add Float.sub Float.mul Float.div Float.cmp Float.ordered Float.to_bits Float.of_bits Float.from_words.",
            "VernacSetOpacity",
            "7aa15832271a9dfa2176f38b22e33d12b9a2d820"
        ],
        [
            "Global Opaque Float32.zero Float32.eq_dec Float32.neg Float32.abs Float32.of_int Float32.of_intu Float32.of_long Float32.of_longu Float32.to_int Float32.to_intu Float32.to_long Float32.to_longu Float32.add Float32.sub Float32.mul Float32.div Float32.cmp Float32.ordered Float32.to_bits Float32.of_bits.",
            "VernacSetOpacity",
            "83d3bb1b9459c1127fbb71488be95c85a9bd0aba"
        ]
    ],
    "proofs": [
        {
            "name": "cmp_of_comparison_swap",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct c; destruct x as [[]|]; reflexivity.",
                        "VernacExtend",
                        "7762eadf25eb0b4a77020955d1ee2756bb59dd28"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cmp_of_comparison_ne_eq",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct x as [[]|]; reflexivity.",
                        "VernacExtend",
                        "514d32627fe4422719de9f7c53aa7b519d0ee188"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cmp_of_comparison_lt_eq_false",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "destruct x as [[]|]; simpl; intros; discriminate.",
                        "VernacExtend",
                        "fa8d27c9812c4bef8d607e0031f170bd641616d4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cmp_of_comparison_le_lt_eq",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "destruct x as [[]|]; reflexivity.",
                        "VernacExtend",
                        "514d32627fe4422719de9f7c53aa7b519d0ee188"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cmp_of_comparison_gt_eq_false",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "destruct x as [[]|]; simpl; intros; discriminate.",
                        "VernacExtend",
                        "fa8d27c9812c4bef8d607e0031f170bd641616d4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cmp_of_comparison_ge_gt_eq",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "destruct x as [[]|]; reflexivity.",
                        "VernacExtend",
                        "514d32627fe4422719de9f7c53aa7b519d0ee188"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cmp_of_comparison_lt_gt_false",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "destruct x as [[]|]; simpl; intros; discriminate.",
                        "VernacExtend",
                        "fa8d27c9812c4bef8d607e0031f170bd641616d4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "transform_quiet_pl_obligation_1",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "destruct pl.",
                        "VernacExtend",
                        "065af7eedd7ce004ccb5c8daff0f581142d21118"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.ltb_lt in *.",
                        "VernacExtend",
                        "1cda7adf032c7d639ade9df60b33a86a1c70022e"
                    ]
                },
                {
                    "command": [
                        "assert (forall x, Fcore_digits.digits2_pos x = Pos.size x).",
                        "VernacExtend",
                        "da6c8ad2cf2fccd238994683ecfbb9fcaa3d00a0"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "induction x0; simpl; auto; rewrite IHx0; zify; omega.",
                        "VernacExtend",
                        "17049ddbf6e6e2b542d17150787032a7a9e2b309"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite H, Psize_log_inf, <- Zlog2_log_inf in *.",
                        "VernacExtend",
                        "9221757fa5492dd4998e140d0b6d604956b629a7"
                    ]
                },
                {
                    "command": [
                        "clear H.",
                        "VernacExtend",
                        "f2c5826643b985ca1b67f3433f38ccbe2735e582"
                    ]
                },
                {
                    "command": [
                        "change (Z.pos (Pos.lor x 2251799813685248)) with (Z.lor (Z.pos x) 2251799813685248%Z).",
                        "VernacExtend",
                        "6f552c802dce978f4662e4633853c9151c699be9"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.log2_lor by (zify; omega).",
                        "VernacExtend",
                        "db821cc71d7e8171d1e3c9a7bbcba6765d5a3c35"
                    ]
                },
                {
                    "command": [
                        "apply Z.max_case.",
                        "VernacExtend",
                        "315a716e82f6808160c7103ee85c36339f5ac98c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nan_payload_fequal",
            "line_nb": 58,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct p1, p2; simpl in H; subst.",
                        "VernacExtend",
                        "b4ab5fa96b08ff762710a14ddc4b09293f8e76c4"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply Fcore_Zaux.eqbool_irrelevance.",
                        "VernacExtend",
                        "1e99e6497026fcb7d82a4d3ef892ac07c3f3f3e3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lor_idempotent",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "induction x; destruct y; simpl; f_equal; auto; induction y; simpl; f_equal; auto.",
                        "VernacExtend",
                        "39f5e03fd9e352245af6daaaca4d141083b3947a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "transform_quiet_pl_idempotent",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply nan_payload_fequal; simpl.",
                        "VernacExtend",
                        "ed9545d9ef4c39846b2df33018343131c58da073"
                    ]
                },
                {
                    "command": [
                        "apply lor_idempotent.",
                        "VernacExtend",
                        "c2e62a375fb0dce4635c2a43122aefd452d6ac20"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expand_pl",
            "line_nb": 72,
            "steps": [
                {
                    "command": [
                        "refine (exist _ (Pos.shiftl_nat (proj1_sig pl) 29) _).",
                        "VernacExtend",
                        "a88797c4bb15b3b7b3d9d50e3bc734a16675b459"
                    ]
                },
                {
                    "command": [
                        "abstract ( destruct pl; unfold proj1_sig, Pos.shiftl_nat, nat_rect, Fcore_digits.digits2_pos; fold (Fcore_digits.digits2_pos x); rewrite Z.ltb_lt in *; zify; omega).",
                        "VernacExtend",
                        "6381062721e9ad07b5378370081f1e2507ba0a6f"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "reduce_pl",
            "line_nb": 77,
            "steps": [
                {
                    "command": [
                        "refine (exist _ (Pos.shiftr_nat (proj1_sig pl) 29) _).",
                        "VernacExtend",
                        "8596a9f1211fc9d813524940889cba2c36b65ab0"
                    ]
                },
                {
                    "command": [
                        "abstract ( destruct pl; unfold proj1_sig, Pos.shiftr_nat, nat_rect; rewrite Z.ltb_lt in *; assert (forall x, Fcore_digits.digits2_pos (Pos.div2 x) = (Fcore_digits.digits2_pos x - 1)%positive) by (destruct x0; simpl; auto; rewrite Pplus_one_succ_r, Pos.add_sub; auto); rewrite !H, !Pos2Z.inj_sub_max; repeat (apply Z.max_lub_lt; [reflexivity |apply Z.lt_sub_lt_add_l]); auto).",
                        "VernacExtend",
                        "4c3ba00daab94003adfd267d24550f8ca3a65c11"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "add_commut",
            "line_nb": 112,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Bplus_commut.",
                        "VernacExtend",
                        "1f08c1c008a31d6336e159ba7429f270d238e41f"
                    ]
                },
                {
                    "command": [
                        "destruct x, y; try reflexivity.",
                        "VernacExtend",
                        "40a808c9b8705657dde857bc494bb951c020a81d"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "intuition congruence.",
                        "VernacExtend",
                        "2cba3542847e3f4ea52f3f62375adc6e8f8f04bc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_commut",
            "line_nb": 119,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Bmult_commut.",
                        "VernacExtend",
                        "068d1dcec59d9986bc0399d6ae9e949164b46150"
                    ]
                },
                {
                    "command": [
                        "destruct x, y; try reflexivity.",
                        "VernacExtend",
                        "40a808c9b8705657dde857bc494bb951c020a81d"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "intuition congruence.",
                        "VernacExtend",
                        "2cba3542847e3f4ea52f3f62375adc6e8f8f04bc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul2_add",
            "line_nb": 126,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Bmult2_Bplus.",
                        "VernacExtend",
                        "c8a4a7d46a5cf341011d15ce3754cd2f3570e4a9"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct x; try discriminate.",
                        "VernacExtend",
                        "0d2b5f75157aee3dd67f803b89f3b6bee89c208a"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "transitivity (b, transform_quiet_pl n).",
                        "VernacExtend",
                        "30f2c49c01eb9a3ce185aff264b11e26d85f9ee6"
                    ]
                },
                {
                    "command": [
                        "destruct Archi.choose_binop_pl_64; auto.",
                        "VernacExtend",
                        "840e50795f5e31b634fbeafb01f4c8a3bc30bf1a"
                    ]
                },
                {
                    "command": [
                        "destruct y; auto || discriminate.",
                        "VernacExtend",
                        "7fd9797708c5c9b05af79283b8cc340091dc8741"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "div_mul_inverse",
            "line_nb": 137,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Bdiv_mult_inverse; auto.",
                        "VernacExtend",
                        "21c3d3d08c02ba164a5fcb7a776b0b7b4dd4377e"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct x0; try discriminate.",
                        "VernacExtend",
                        "a730c7a2c6af8944c9052c6601e661737560e3e4"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "transitivity (b, transform_quiet_pl n).",
                        "VernacExtend",
                        "30f2c49c01eb9a3ce185aff264b11e26d85f9ee6"
                    ]
                },
                {
                    "command": [
                        "destruct y0; reflexivity || discriminate.",
                        "VernacExtend",
                        "a2ffed3b609219194a3d6596d2e7f66b0727c095"
                    ]
                },
                {
                    "command": [
                        "destruct z0; reflexivity || discriminate.",
                        "VernacExtend",
                        "57ea07d0c0f7bf6f9020fae84ebb5c1e8e85a9d5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cmp_swap",
            "line_nb": 147,
            "steps": [
                {
                    "command": [
                        "unfold cmp, compare; intros.",
                        "VernacExtend",
                        "08d7a98f8859cdb3ca2576cdcede3b57b1719cd0"
                    ]
                },
                {
                    "command": [
                        "rewrite (Bcompare_swap _ _ x y).",
                        "VernacExtend",
                        "3a3d36d2541ded7be2710f7ac7dc73287927f111"
                    ]
                },
                {
                    "command": [
                        "apply cmp_of_comparison_swap.",
                        "VernacExtend",
                        "e6590d2efa9d5792d6bf8f1cff852152a997b171"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cmp_ne_eq",
            "line_nb": 152,
            "steps": [
                {
                    "command": [
                        "intros; apply cmp_of_comparison_ne_eq.",
                        "VernacExtend",
                        "594324cb03954ad368d36727c5917a110d4a81c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cmp_lt_eq_false",
            "line_nb": 155,
            "steps": [
                {
                    "command": [
                        "intros f1 f2; apply cmp_of_comparison_lt_eq_false.",
                        "VernacExtend",
                        "e3d8a8226eb2f1b78394dffc0712d19723c52fdf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cmp_le_lt_eq",
            "line_nb": 158,
            "steps": [
                {
                    "command": [
                        "intros f1 f2; apply cmp_of_comparison_le_lt_eq.",
                        "VernacExtend",
                        "3503e300f255f23956951c62b9cff68b6e8f1b21"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cmp_gt_eq_false",
            "line_nb": 161,
            "steps": [
                {
                    "command": [
                        "intros f1 f2; apply cmp_of_comparison_gt_eq_false.",
                        "VernacExtend",
                        "9ece1f692274097a10b17c6fa25a9291278ef245"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cmp_ge_gt_eq",
            "line_nb": 164,
            "steps": [
                {
                    "command": [
                        "intros f1 f2; apply cmp_of_comparison_ge_gt_eq.",
                        "VernacExtend",
                        "51fb8f1e0a90cce67dd8308bc3235e38e53871bd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cmp_lt_gt_false",
            "line_nb": 167,
            "steps": [
                {
                    "command": [
                        "intros f1 f2; apply cmp_of_comparison_lt_gt_false.",
                        "VernacExtend",
                        "d3dadade67861e0767003bc31fc9e49d082c487f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "of_to_bits",
            "line_nb": 170,
            "steps": [
                {
                    "command": [
                        "intros; unfold of_bits, to_bits, bits_of_b64, b64_of_bits.",
                        "VernacExtend",
                        "d3a40fdd229589a7ef25a7095af319838e5800c2"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.unsigned_repr, binary_float_of_bits_of_binary_float; [reflexivity|].",
                        "VernacExtend",
                        "fb68b19138e72df9218f15bb6485c104223a37c6"
                    ]
                },
                {
                    "command": [
                        "generalize (bits_of_binary_float_range 52 11 __ __ f).",
                        "VernacExtend",
                        "2f0c645172bc13919138b87178e2850b34a9891d"
                    ]
                },
                {
                    "command": [
                        "change (2^(52+11+1)) with (Int64.max_unsigned + 1).",
                        "VernacExtend",
                        "902a8589615f5d3b7b4d87d7ccf87a7d66e35c0e"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "to_of_bits",
            "line_nb": 177,
            "steps": [
                {
                    "command": [
                        "intros; unfold of_bits, to_bits, bits_of_b64, b64_of_bits.",
                        "VernacExtend",
                        "d3a40fdd229589a7ef25a7095af319838e5800c2"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_of_binary_float_of_bits.",
                        "VernacExtend",
                        "a35cf49b6225036d94f5cd0be28db913afe04ee2"
                    ]
                },
                {
                    "command": [
                        "apply Int64.repr_unsigned.",
                        "VernacExtend",
                        "155848270129eed13138aa7b4b60ec49b2ae866f"
                    ]
                },
                {
                    "command": [
                        "apply Int64.unsigned_range.",
                        "VernacExtend",
                        "8e8982a5c7f5f106ccaf8e2d86b747e29a861c08"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "of_intu_of_int_1",
            "line_nb": 184,
            "steps": [
                {
                    "command": [
                        "unfold of_intu, of_int, Int.signed, Int.ltu; intro.",
                        "VernacExtend",
                        "e357c81ebb58a9b9761abaf554e5e8d8838f5b4d"
                    ]
                },
                {
                    "command": [
                        "change (Int.unsigned ox8000_0000) with Int.half_modulus.",
                        "VernacExtend",
                        "84126b2eee0b9bc221f46f705ff385aef32fdc36"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (Int.unsigned x) Int.half_modulus); now intuition.",
                        "VernacExtend",
                        "961ae284afce28211e1feaa316feac108a4869e0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "of_intu_of_int_2",
            "line_nb": 189,
            "steps": [
                {
                    "command": [
                        "unfold add, of_intu, of_int; intros.",
                        "VernacExtend",
                        "411a4a7e479ebcc94fdfd13f333d100499c16f4b"
                    ]
                },
                {
                    "command": [
                        "set (y := Int.sub x ox8000_0000).",
                        "VernacExtend",
                        "0b658ab17b082967da383fcaaaa4c938b528b56a"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.unsigned_range x); pose proof (Int.signed_range y).",
                        "VernacExtend",
                        "cb1617c98c5774237538d87aa85e8611f96657ca"
                    ]
                },
                {
                    "command": [
                        "assert (Ry: integer_representable 53 1024 (Int.signed y)).",
                        "VernacExtend",
                        "b17958a5a46dabd7f2e74af39659eff6fcb81b51"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply integer_representable_n; auto; smart_omega.",
                        "VernacExtend",
                        "3b3a4fe2abc657641bfba4ca29f301cbd920ac96"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (R8: integer_representable 53 1024 (Int.unsigned ox8000_0000)).",
                        "VernacExtend",
                        "afd53e4597385d6dcfc454582cafbba2a0118861"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply integer_representable_2p with (p := 31);auto; smart_omega.",
                        "VernacExtend",
                        "e3e01e49c6d6cf5201d3ec47fcf3dd4d2f76d132"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite BofZ_plus by auto.",
                        "VernacExtend",
                        "5d46b79208f7112215cba3d5289ec297b4136402"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "unfold Int.ltu in H.",
                        "VernacExtend",
                        "bf9af2f626db6b9c9c3f185a83e799fba0d31520"
                    ]
                },
                {
                    "command": [
                        "destruct zlt in H; try discriminate.",
                        "VernacExtend",
                        "72570438a43ac1775365e770c630beb07156efdb"
                    ]
                },
                {
                    "command": [
                        "unfold y, Int.sub.",
                        "VernacExtend",
                        "f168546a876d56fd30e3099f6d80207acd30a85c"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.signed_repr.",
                        "VernacExtend",
                        "e6c1f73d39688157b986523299e24dc1bfd1e0fc"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "compute_this (Int.unsigned ox8000_0000); smart_omega.",
                        "VernacExtend",
                        "d5d77253fc16d49e6c024375f044739680f236bd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "to_intu_to_int_1",
            "line_nb": 210,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold to_intu in H0.",
                        "VernacExtend",
                        "7dfe84e52a4be1ac4a149b1cd37aa6c336e48690"
                    ]
                },
                {
                    "command": [
                        "destruct (ZofB_range 53 1024 x 0 Int.max_unsigned) as [p|] eqn:E; simpl in H0; inv H0.",
                        "VernacExtend",
                        "8022520c48df8c90a1fb75ad911440ae6ebb28ba"
                    ]
                },
                {
                    "command": [
                        "exploit ZofB_range_inversion; eauto.",
                        "VernacExtend",
                        "468c5043e0e4c0c3ce2cd8e568b8bb2940eb9547"
                    ]
                },
                {
                    "command": [
                        "intros (A & B & C).",
                        "VernacExtend",
                        "600bc83b778b82e4f76af4dba65aea6d61e17221"
                    ]
                },
                {
                    "command": [
                        "unfold to_int, ZofB_range.",
                        "VernacExtend",
                        "4734fd0395483d6f2e8fb583f29e8296b2c71c66"
                    ]
                },
                {
                    "command": [
                        "rewrite C.",
                        "VernacExtend",
                        "6522c35db68091b070ccdd4e87749a3d6da8e69d"
                    ]
                },
                {
                    "command": [
                        "rewrite Zle_bool_true by smart_omega.",
                        "VernacExtend",
                        "747804eaf3f9a51b0ceb86ed3ad01be3118e5b2a"
                    ]
                },
                {
                    "command": [
                        "rewrite Zle_bool_true; auto.",
                        "VernacExtend",
                        "1467fbea6250fbabb2d189df3177a29274b598a4"
                    ]
                },
                {
                    "command": [
                        "exploit (BofZ_exact 53 1024 __ __ (Int.unsigned ox8000_0000)).",
                        "VernacExtend",
                        "2c4625ba7dc5238496ddd6c90b7e9436927c3235"
                    ]
                },
                {
                    "command": [
                        "vm_compute; intuition congruence.",
                        "VernacExtend",
                        "b49a72149c94daab3de8f694fb47a5624359fbc4"
                    ]
                },
                {
                    "command": [
                        "set (y := of_intu ox8000_0000) in *.",
                        "VernacExtend",
                        "7753a15e808529e1e182fda53726df529474f6a1"
                    ]
                },
                {
                    "command": [
                        "change (BofZ 53 1024 eq_refl eq_refl (Int.unsigned ox8000_0000)) with y.",
                        "VernacExtend",
                        "ae36da442c96d113bb2b35d59004610b392847db"
                    ]
                },
                {
                    "command": [
                        "intros (EQy & FINy & SIGNy).",
                        "VernacExtend",
                        "7648bbf25599c9cbcc6335be9a509a8edcec31bf"
                    ]
                },
                {
                    "command": [
                        "assert (FINx: is_finite _ _ x = true).",
                        "VernacExtend",
                        "d8e6df87147945900d6b978797d9269300ae2477"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite ZofB_correct in C.",
                        "VernacExtend",
                        "0ba672dba1dc32bccf9b8edae43b771dce85ef62"
                    ]
                },
                {
                    "command": [
                        "destruct (is_finite _ _ x) eqn:FINx; congruence.",
                        "VernacExtend",
                        "e8ce946936852b6091b53431b515d44feb86e30f"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (zeq p 0).",
                        "VernacExtend",
                        "f84b5ea0e75dd5364d57c783b8274c1a1b113de9"
                    ]
                },
                {
                    "command": [
                        "subst p; smart_omega.",
                        "VernacExtend",
                        "e477fa107f8edbfe2d0bad1a97e85b013b01f75e"
                    ]
                },
                {
                    "command": [
                        "destruct (ZofB_range_pos 53 1024 __ __ x p C) as [P Q].",
                        "VernacExtend",
                        "a7f78b4264574defa697156b543403b1a0afff86"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "assert (CMP: Bcompare _ _ x y = Some Lt).",
                        "VernacExtend",
                        "c1a67c89cc316f690c43047ee3dc50c865fb8b63"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold cmp, cmp_of_comparison, compare in H.",
                        "VernacExtend",
                        "a89ebff886e699fa30070cdc0775cbb696488710"
                    ]
                },
                {
                    "command": [
                        "destruct (Bcompare _ _ x y) as [[]|]; auto; discriminate.",
                        "VernacExtend",
                        "cd6f35d5c7624f0f8a7ca6e0a35373a2a92f9a4f"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite Bcompare_correct in CMP by auto.",
                        "VernacExtend",
                        "61cb8038d7424641840eda5b795ebf4eeb51fceb"
                    ]
                },
                {
                    "command": [
                        "inv CMP.",
                        "VernacExtend",
                        "cd833d90313b79933d0cbaef63864013ef814de9"
                    ]
                },
                {
                    "command": [
                        "apply Rcompare_Lt_inv in H1.",
                        "VernacExtend",
                        "e12bb3c6b997af31d9a0fbae7c772927eb2d81de"
                    ]
                },
                {
                    "command": [
                        "rewrite EQy in H1.",
                        "VernacExtend",
                        "64c3389b1b3e375d0ebfc0aeb0ec8e04c0b464b5"
                    ]
                },
                {
                    "command": [
                        "assert (p < Int.unsigned ox8000_0000).",
                        "VernacExtend",
                        "8229f249e5973d76be9c3285401ed2de63fc7261"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply lt_Z2R.",
                        "VernacExtend",
                        "c0e615fac753553d0eac3dc2ae4d76c109cb9e3e"
                    ]
                },
                {
                    "command": [
                        "eapply Rle_lt_trans; eauto.",
                        "VernacExtend",
                        "0bc494d2bdffac7017c20d3c89b9c70aa6f7f479"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "change Int.max_signed with (Int.unsigned ox8000_0000 - 1).",
                        "VernacExtend",
                        "f7de83c370bebd0319f8539d2437762760536ab2"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "to_intu_to_int_2",
            "line_nb": 251,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold to_intu in H0.",
                        "VernacExtend",
                        "7dfe84e52a4be1ac4a149b1cd37aa6c336e48690"
                    ]
                },
                {
                    "command": [
                        "destruct (ZofB_range _ _ x 0 Int.max_unsigned) as [p|] eqn:E; simpl in H0; inv H0.",
                        "VernacExtend",
                        "7edfd47f37be2fd660f2cd38dc76d65f369a80a4"
                    ]
                },
                {
                    "command": [
                        "exploit ZofB_range_inversion; eauto.",
                        "VernacExtend",
                        "468c5043e0e4c0c3ce2cd8e568b8bb2940eb9547"
                    ]
                },
                {
                    "command": [
                        "intros (A & B & C).",
                        "VernacExtend",
                        "600bc83b778b82e4f76af4dba65aea6d61e17221"
                    ]
                },
                {
                    "command": [
                        "exploit (BofZ_exact 53 1024 __ __ (Int.unsigned ox8000_0000)).",
                        "VernacExtend",
                        "2c4625ba7dc5238496ddd6c90b7e9436927c3235"
                    ]
                },
                {
                    "command": [
                        "vm_compute; intuition congruence.",
                        "VernacExtend",
                        "b49a72149c94daab3de8f694fb47a5624359fbc4"
                    ]
                },
                {
                    "command": [
                        "set (y := of_intu ox8000_0000) in *.",
                        "VernacExtend",
                        "7753a15e808529e1e182fda53726df529474f6a1"
                    ]
                },
                {
                    "command": [
                        "change (BofZ 53 1024 __ __ (Int.unsigned ox8000_0000)) with y.",
                        "VernacExtend",
                        "cdb1d9e815d54fef74ecc5a38ee813455a2cc0ad"
                    ]
                },
                {
                    "command": [
                        "intros (EQy & FINy & SIGNy).",
                        "VernacExtend",
                        "7648bbf25599c9cbcc6335be9a509a8edcec31bf"
                    ]
                },
                {
                    "command": [
                        "assert (FINx: is_finite _ _ x = true).",
                        "VernacExtend",
                        "d8e6df87147945900d6b978797d9269300ae2477"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite ZofB_correct in C.",
                        "VernacExtend",
                        "0ba672dba1dc32bccf9b8edae43b771dce85ef62"
                    ]
                },
                {
                    "command": [
                        "destruct (is_finite _ _ x) eqn:FINx; congruence.",
                        "VernacExtend",
                        "e8ce946936852b6091b53431b515d44feb86e30f"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (GE: (B2R _ _ x >= Z2R (Int.unsigned ox8000_0000))%R).",
                        "VernacExtend",
                        "c4370e5db3c9e1a49ec1f0623d8e43bbc86c932a"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite <- EQy.",
                        "VernacExtend",
                        "155ff77b4789d4a8fc046d88b3f8de3671f01936"
                    ]
                },
                {
                    "command": [
                        "unfold cmp, cmp_of_comparison, compare in H.",
                        "VernacExtend",
                        "a89ebff886e699fa30070cdc0775cbb696488710"
                    ]
                },
                {
                    "command": [
                        "rewrite Bcompare_correct in H by auto.",
                        "VernacExtend",
                        "6f76ab257573dded906532ca20c9ea7d96d31a6a"
                    ]
                },
                {
                    "command": [
                        "destruct (Rcompare (B2R 53 1024 x) (B2R 53 1024 y)) eqn:CMP.",
                        "VernacExtend",
                        "d62beb5dd66883cabb8e2e570153cdcc8f91965b"
                    ]
                },
                {
                    "command": [
                        "apply Req_ge; apply Rcompare_Eq_inv; auto.",
                        "VernacExtend",
                        "11dcd576cb6dd9ee30bc6993e4b28a30b6a0f376"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "apply Rgt_ge; apply Rcompare_Gt_inv; auto.",
                        "VernacExtend",
                        "8cbae7c24469523e05a19d42601bd93bf6134d90"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (EQ: ZofB_range _ _ (sub x y) Int.min_signed Int.max_signed = Some (p - Int.unsigned ox8000_0000)).",
                        "VernacExtend",
                        "75144fecfd04bcccad6a96c167d46ae89ebd659b"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply ZofB_range_minus.",
                        "VernacExtend",
                        "ce82f59f22b8bd8a7fe53e2e598d6eab5aae555a"
                    ]
                },
                {
                    "command": [
                        "exact E.",
                        "VernacExtend",
                        "ea077aeadd15e195fdab663e98bb112c23639fc1"
                    ]
                },
                {
                    "command": [
                        "compute_this (Int.unsigned ox8000_0000).",
                        "VernacExtend",
                        "c73479088fcef669d333e82f4ba8146c2f811767"
                    ]
                },
                {
                    "command": [
                        "smart_omega.",
                        "VernacExtend",
                        "5dcfc39e0aac5d358de281c4542000b4f08885f4"
                    ]
                },
                {
                    "command": [
                        "apply Rge_le; auto.",
                        "VernacExtend",
                        "58bc4e8d614d8148ad7c0c5eb8a3368c1f673145"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "unfold to_int; rewrite EQ.",
                        "VernacExtend",
                        "4e2e10101bfea1db45426820ad1ed404a4dc1c2e"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold Int.sub.",
                        "VernacExtend",
                        "1170869a324af572e1e05cd70a3c8ddc34d9f678"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.unsigned_repr by omega.",
                        "VernacExtend",
                        "9986c3ceb3b460e3a090640a27e54ada9a88f0bc"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "split_bits_or",
            "line_nb": 292,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "transitivity (split_bits 52 11 (join_bits 52 11 false (Int.unsigned x) 1075)).",
                        "VernacExtend",
                        "380b713684b9d80ad26c0fbf8d963547f8b0c623"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.ofwords_add'.",
                        "VernacExtend",
                        "f6fac40b6198a642e65f612684eb73ef0ecd4c2f"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply split_join_bits.",
                        "VernacExtend",
                        "c0c7176d97e9629a88235499e4b9c53040b1b844"
                    ]
                },
                {
                    "command": [
                        "compute; auto.",
                        "VernacExtend",
                        "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
                    ]
                },
                {
                    "command": [
                        "generalize (Int.unsigned_range x).",
                        "VernacExtend",
                        "a67cb5f6af47a78f4dbb03ddda2e54d04610fa71"
                    ]
                },
                {
                    "command": [
                        "compute_this Int.modulus; compute_this (2^52); omega.",
                        "VernacExtend",
                        "fdb3b6d4e4d4cb075f1871c7ddbf6aef91c84822"
                    ]
                },
                {
                    "command": [
                        "compute_this (2^11); omega.",
                        "VernacExtend",
                        "6141288505275b510cb95e12de9060797794c923"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "from_words_value",
            "line_nb": 306,
            "steps": [
                {
                    "command": [
                        "intros; unfold from_words, of_bits, b64_of_bits, binary_float_of_bits.",
                        "VernacExtend",
                        "ea697488775de386918b15b4b3c7544818b2c852"
                    ]
                },
                {
                    "command": [
                        "rewrite B2R_FF2B, is_finite_FF2B, Bsign_FF2B.",
                        "VernacExtend",
                        "d5299693bec8db924232bee0a93a0ecb8ca36ec7"
                    ]
                },
                {
                    "command": [
                        "unfold binary_float_of_bits_aux; rewrite split_bits_or; simpl; pose proof (Int.unsigned_range x).",
                        "VernacExtend",
                        "1b716caa65fcd68c14e90976fe353784acfdbed0"
                    ]
                },
                {
                    "command": [
                        "destruct (Int.unsigned x + Z.pow_pos 2 52) eqn:?.",
                        "VernacExtend",
                        "0cb203a450833b616a5c2ec9461e475447e3c507"
                    ]
                },
                {
                    "command": [
                        "exfalso; now smart_omega.",
                        "VernacExtend",
                        "c5896e995e4a963fcbad61d26f474295330b5139"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite <- Heqz; unfold F2R; simpl.",
                        "VernacExtend",
                        "c236388b8eb2d3df09203bffe26479c9aba1257f"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Z2R_plus 4503599627370496), Rmult_1_r.",
                        "VernacExtend",
                        "158e5051539f971f746225bab62533919c3a3c49"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.add_comm.",
                        "VernacExtend",
                        "cb1af9408ed4e4ab13bf29109365368cad89a879"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "exfalso; now smart_omega.",
                        "VernacExtend",
                        "c5896e995e4a963fcbad61d26f474295330b5139"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "from_words_eq",
            "line_nb": 320,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.unsigned_range x).",
                        "VernacExtend",
                        "4212d3e1661008ea8a3c5a2589d6e515a6e3a858"
                    ]
                },
                {
                    "command": [
                        "destruct (from_words_value x) as (A & B & C).",
                        "VernacExtend",
                        "539cbbe789c5c7d7719f60d379c04fd60816507d"
                    ]
                },
                {
                    "command": [
                        "destruct (BofZ_exact 53 1024 __ __ (2^52 + Int.unsigned x)) as (D & E & F).",
                        "VernacExtend",
                        "25d4cfc247ff1815a225ebd647f3d3f8a2aeca51"
                    ]
                },
                {
                    "command": [
                        "smart_omega.",
                        "VernacExtend",
                        "5dcfc39e0aac5d358de281c4542000b4f08885f4"
                    ]
                },
                {
                    "command": [
                        "apply B2R_Bsign_inj; auto.",
                        "VernacExtend",
                        "f9c8ab320eaf2edac30031b5e20f8559397978a4"
                    ]
                },
                {
                    "command": [
                        "rewrite A, D.",
                        "VernacExtend",
                        "106c0ceb005bf157e18997508c889c163cbc4c36"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_plus.",
                        "VernacExtend",
                        "acce6601b0322c726f9b248c200708805f7120a8"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite C, F.",
                        "VernacExtend",
                        "b7f977dcea5c659a76d70805695414d24d017bdb"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_bool_false.",
                        "VernacExtend",
                        "727bcedc45dab1285379e344de04340c612a0572"
                    ]
                },
                {
                    "command": [
                        "smart_omega.",
                        "VernacExtend",
                        "5dcfc39e0aac5d358de281c4542000b4f08885f4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "of_intu_from_words",
            "line_nb": 335,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.unsigned_range x).",
                        "VernacExtend",
                        "4212d3e1661008ea8a3c5a2589d6e515a6e3a858"
                    ]
                },
                {
                    "command": [
                        "rewrite ! from_words_eq.",
                        "VernacExtend",
                        "38cc9dd499d8fb4b31a114710d70f67121f480fc"
                    ]
                },
                {
                    "command": [
                        "unfold sub.",
                        "VernacExtend",
                        "09a336a2b822859bc335120602ae265ad23b7a0d"
                    ]
                },
                {
                    "command": [
                        "rewrite BofZ_minus.",
                        "VernacExtend",
                        "b1da215c9b76c6e5378345eafb85bb35ca56c2c4"
                    ]
                },
                {
                    "command": [
                        "unfold of_intu.",
                        "VernacExtend",
                        "1f40ed27ad19310bcb30d2018635c106e5e53e0d"
                    ]
                },
                {
                    "command": [
                        "apply (f_equal (BofZ 53 1024 __ __)).",
                        "VernacExtend",
                        "1fe70bc3248aec761cede2a00df77819dfca38b3"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.unsigned_zero.",
                        "VernacExtend",
                        "89cd39791bb3da529969241353d48ab8dd678f66"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply integer_representable_n; auto; smart_omega.",
                        "VernacExtend",
                        "3b3a4fe2abc657641bfba4ca29f301cbd920ac96"
                    ]
                },
                {
                    "command": [
                        "apply integer_representable_n; auto; rewrite Int.unsigned_zero; smart_omega.",
                        "VernacExtend",
                        "bbcae0b8b4de557eafd56319962f3d33dd818214"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ox8000_0000_signed_unsigned",
            "line_nb": 348,
            "steps": [
                {
                    "command": [
                        "intro; unfold Int.signed, Int.add; pose proof (Int.unsigned_range x).",
                        "VernacExtend",
                        "1f9343c2e71757a1864173453265f655c7042b4a"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (Int.unsigned x) Int.half_modulus).",
                        "VernacExtend",
                        "e73814e866eb53a5d7e7ee2c598046f6385ab30f"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.unsigned_repr; compute_this (Int.unsigned ox8000_0000); now smart_omega.",
                        "VernacExtend",
                        "76e42486b3f5d1b82ba255bd6152f0d6464d464a"
                    ]
                },
                {
                    "command": [
                        "rewrite (Int.eqm_samerepr _ (Int.unsigned x + -2147483648)).",
                        "VernacExtend",
                        "64779a76f09e209b2eff42eb13d3c4c5c1ff363b"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.unsigned_repr; now smart_omega.",
                        "VernacExtend",
                        "b23eff29ea01d5ceab1f55765ace87cc46037a8e"
                    ]
                },
                {
                    "command": [
                        "apply Int.eqm_add; [now apply Int.eqm_refl|exists 1;reflexivity].",
                        "VernacExtend",
                        "047b9213bcce9d885c99355ac867466ed68bcd18"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "of_int_from_words",
            "line_nb": 356,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.signed_range x).",
                        "VernacExtend",
                        "d54f4d418c62781fa03aaba3ba74ff19f693c045"
                    ]
                },
                {
                    "command": [
                        "rewrite ! from_words_eq.",
                        "VernacExtend",
                        "38cc9dd499d8fb4b31a114710d70f67121f480fc"
                    ]
                },
                {
                    "command": [
                        "rewrite ox8000_0000_signed_unsigned.",
                        "VernacExtend",
                        "5c561623167c7bc3b6ad04fad68b725d4079f257"
                    ]
                },
                {
                    "command": [
                        "change (Int.unsigned ox8000_0000) with Int.half_modulus.",
                        "VernacExtend",
                        "84126b2eee0b9bc221f46f705ff385aef32fdc36"
                    ]
                },
                {
                    "command": [
                        "unfold sub.",
                        "VernacExtend",
                        "09a336a2b822859bc335120602ae265ad23b7a0d"
                    ]
                },
                {
                    "command": [
                        "rewrite BofZ_minus.",
                        "VernacExtend",
                        "b1da215c9b76c6e5378345eafb85bb35ca56c2c4"
                    ]
                },
                {
                    "command": [
                        "unfold of_int.",
                        "VernacExtend",
                        "04b16e325f49ba6318a7a0fb6f3d758e9b616253"
                    ]
                },
                {
                    "command": [
                        "apply f_equal.",
                        "VernacExtend",
                        "ba856cbef3c8e84dcef77c91c8515b497874875b"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply integer_representable_n; auto; smart_omega.",
                        "VernacExtend",
                        "3b3a4fe2abc657641bfba4ca29f301cbd920ac96"
                    ]
                },
                {
                    "command": [
                        "apply integer_representable_n; auto; smart_omega.",
                        "VernacExtend",
                        "3b3a4fe2abc657641bfba4ca29f301cbd920ac96"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "split_bits_or'",
            "line_nb": 371,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "transitivity (split_bits 52 11 (join_bits 52 11 false (Int.unsigned x) 1107)).",
                        "VernacExtend",
                        "0ebf7c2c4784d09f17b088722922d2a05d4dd83a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.ofwords_add'.",
                        "VernacExtend",
                        "f6fac40b6198a642e65f612684eb73ef0ecd4c2f"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply split_join_bits.",
                        "VernacExtend",
                        "c0c7176d97e9629a88235499e4b9c53040b1b844"
                    ]
                },
                {
                    "command": [
                        "compute; auto.",
                        "VernacExtend",
                        "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
                    ]
                },
                {
                    "command": [
                        "generalize (Int.unsigned_range x).",
                        "VernacExtend",
                        "a67cb5f6af47a78f4dbb03ddda2e54d04610fa71"
                    ]
                },
                {
                    "command": [
                        "compute_this Int.modulus; compute_this (2^52); omega.",
                        "VernacExtend",
                        "fdb3b6d4e4d4cb075f1871c7ddbf6aef91c84822"
                    ]
                },
                {
                    "command": [
                        "compute_this (2^11); omega.",
                        "VernacExtend",
                        "6141288505275b510cb95e12de9060797794c923"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "from_words_value'",
            "line_nb": 385,
            "steps": [
                {
                    "command": [
                        "intros; unfold from_words, of_bits, b64_of_bits, binary_float_of_bits.",
                        "VernacExtend",
                        "ea697488775de386918b15b4b3c7544818b2c852"
                    ]
                },
                {
                    "command": [
                        "rewrite B2R_FF2B, is_finite_FF2B, Bsign_FF2B.",
                        "VernacExtend",
                        "d5299693bec8db924232bee0a93a0ecb8ca36ec7"
                    ]
                },
                {
                    "command": [
                        "unfold binary_float_of_bits_aux; rewrite split_bits_or'; simpl; pose proof (Int.unsigned_range x).",
                        "VernacExtend",
                        "25bdd7a56bcf42e6f7b53405c33677e7401aba60"
                    ]
                },
                {
                    "command": [
                        "destruct (Int.unsigned x + Z.pow_pos 2 52) eqn:?.",
                        "VernacExtend",
                        "0cb203a450833b616a5c2ec9461e475447e3c507"
                    ]
                },
                {
                    "command": [
                        "exfalso; now smart_omega.",
                        "VernacExtend",
                        "c5896e995e4a963fcbad61d26f474295330b5139"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite <- Heqz; unfold F2R; simpl.",
                        "VernacExtend",
                        "c236388b8eb2d3df09203bffe26479c9aba1257f"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Z2R_plus 19342813113834066795298816), <- (Z2R_mult _ 4294967296).",
                        "VernacExtend",
                        "a94bae9993bb403da7617eb1cbeacb686e8eab38"
                    ]
                },
                {
                    "command": [
                        "f_equal; compute_this (Z.pow_pos 2 52); compute_this (two_power_pos 32); ring.",
                        "VernacExtend",
                        "c8d40a7eef2d5367e7b572dcdab4ffe485c266c6"
                    ]
                },
                {
                    "command": [
                        "assert (Zneg p < 0) by reflexivity.",
                        "VernacExtend",
                        "f1d330bad241beb90f594e9c37ffe6143e4ac31a"
                    ]
                },
                {
                    "command": [
                        "exfalso; now smart_omega.",
                        "VernacExtend",
                        "c5896e995e4a963fcbad61d26f474295330b5139"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "from_words_eq'",
            "line_nb": 398,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.unsigned_range x).",
                        "VernacExtend",
                        "4212d3e1661008ea8a3c5a2589d6e515a6e3a858"
                    ]
                },
                {
                    "command": [
                        "destruct (from_words_value' x) as (A & B & C).",
                        "VernacExtend",
                        "f3df23d81ced72c42ef9a72fc1b89ee8ad560fe7"
                    ]
                },
                {
                    "command": [
                        "destruct (BofZ_representable 53 1024 __ __ (2^84 + Int.unsigned x * 2^32)) as (D & E & F).",
                        "VernacExtend",
                        "e0e1e90cd36d7aa5a9717c6219ee24ecf99f7d2c"
                    ]
                },
                {
                    "command": [
                        "replace (2^84 + Int.unsigned x * 2^32) with ((2^52 + Int.unsigned x) * 2^32) by ring.",
                        "VernacExtend",
                        "07a1f216b9ab89c548c81e7831dc8b6d88b88cf5"
                    ]
                },
                {
                    "command": [
                        "apply integer_representable_n2p; auto.",
                        "VernacExtend",
                        "1bcb47309a5c1bb12f7642fc44d23965ab7914ba"
                    ]
                },
                {
                    "command": [
                        "smart_omega.",
                        "VernacExtend",
                        "5dcfc39e0aac5d358de281c4542000b4f08885f4"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply B2R_Bsign_inj; auto.",
                        "VernacExtend",
                        "f9c8ab320eaf2edac30031b5e20f8559397978a4"
                    ]
                },
                {
                    "command": [
                        "rewrite A, D.",
                        "VernacExtend",
                        "106c0ceb005bf157e18997508c889c163cbc4c36"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_Zpower by omega.",
                        "VernacExtend",
                        "bc3388d59814ca4d9994fae141ed9a4d348c5e2f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_plus.",
                        "VernacExtend",
                        "34b18f1df9cc7268c70f355324b3f0e0fcc9644f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite C, F.",
                        "VernacExtend",
                        "b7f977dcea5c659a76d70805695414d24d017bdb"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_bool_false.",
                        "VernacExtend",
                        "727bcedc45dab1285379e344de04340c612a0572"
                    ]
                },
                {
                    "command": [
                        "compute_this (2^84); compute_this (2^32); omega.",
                        "VernacExtend",
                        "cde2a43f6b3f7deeddc2af324ae0c79730757a86"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "of_longu_from_words",
            "line_nb": 418,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int64.unsigned_range l).",
                        "VernacExtend",
                        "4f5051c4a471bc73623e2ecb7c5015f5af7ac76c"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.unsigned_range (Int64.hiword l)).",
                        "VernacExtend",
                        "20da977f5004c8d391d0ab2b42f74b7bd82c13d4"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.unsigned_range (Int64.loword l)).",
                        "VernacExtend",
                        "933bc122e5a6f7b2f8eb829b43b28959f813140c"
                    ]
                },
                {
                    "command": [
                        "rewrite ! from_words_eq, ! from_words_eq'.",
                        "VernacExtend",
                        "97471b7bdcdada70c56bbb8c4538c46f4e2d47f5"
                    ]
                },
                {
                    "command": [
                        "set (p20 := Int.unsigned (Int.repr (two_p 20))).",
                        "VernacExtend",
                        "fafbbb63993c732dc4f8dadd0e7e156d165a0016"
                    ]
                },
                {
                    "command": [
                        "set (x := Int64.unsigned l) in *; set (xl := Int.unsigned (Int64.loword l)) in *; set (xh := Int.unsigned (Int64.hiword l)) in *.",
                        "VernacExtend",
                        "8054aebefacf5f7bab24f1de87de44b0da2eeada"
                    ]
                },
                {
                    "command": [
                        "unfold sub.",
                        "VernacExtend",
                        "09a336a2b822859bc335120602ae265ad23b7a0d"
                    ]
                },
                {
                    "command": [
                        "rewrite BofZ_minus.",
                        "VernacExtend",
                        "b1da215c9b76c6e5378345eafb85bb35ca56c2c4"
                    ]
                },
                {
                    "command": [
                        "replace (2^84 + xh * 2^32 - (2^84 + p20 * 2^32)) with ((xh - p20) * 2^32) by ring.",
                        "VernacExtend",
                        "d08a434b7ecbf696cdce9e3b277d887804d43670"
                    ]
                },
                {
                    "command": [
                        "unfold add.",
                        "VernacExtend",
                        "11cf98bf231f22df486b46b3b6a1c38a94e859dd"
                    ]
                },
                {
                    "command": [
                        "rewrite BofZ_plus.",
                        "VernacExtend",
                        "107ae1764cebd3203ee52b8fe6054636d5af8667"
                    ]
                },
                {
                    "command": [
                        "unfold of_longu.",
                        "VernacExtend",
                        "f3196d80b2954ea723f579dd8740c1335b759820"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Int64.ofwords_recompose l) at 1.",
                        "VernacExtend",
                        "a16dade36a73865a3ab7569087115ab90ff1a19d"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.ofwords_add'.",
                        "VernacExtend",
                        "f6fac40b6198a642e65f612684eb73ef0ecd4c2f"
                    ]
                },
                {
                    "command": [
                        "fold xh; fold xl.",
                        "VernacExtend",
                        "b0140514e949f446422441b3eb047c749414b9d0"
                    ]
                },
                {
                    "command": [
                        "compute_this (two_p 32); compute_this p20; ring.",
                        "VernacExtend",
                        "0e40b842d097076e7a81d610e26086e0dab34bce"
                    ]
                },
                {
                    "command": [
                        "apply integer_representable_n2p; auto.",
                        "VernacExtend",
                        "1bcb47309a5c1bb12f7642fc44d23965ab7914ba"
                    ]
                },
                {
                    "command": [
                        "compute_this p20; smart_omega.",
                        "VernacExtend",
                        "b297031f823585e8af7f1a54a7cb3118ed5c0a0e"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply integer_representable_n; auto; smart_omega.",
                        "VernacExtend",
                        "3b3a4fe2abc657641bfba4ca29f301cbd920ac96"
                    ]
                },
                {
                    "command": [
                        "replace (2^84 + xh * 2^32) with ((2^52 + xh) * 2^32) by ring.",
                        "VernacExtend",
                        "c360f456bcabc186dbeb078db6be00a379efd69d"
                    ]
                },
                {
                    "command": [
                        "apply integer_representable_n2p; auto.",
                        "VernacExtend",
                        "1bcb47309a5c1bb12f7642fc44d23965ab7914ba"
                    ]
                },
                {
                    "command": [
                        "smart_omega.",
                        "VernacExtend",
                        "5dcfc39e0aac5d358de281c4542000b4f08885f4"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "change (2^84 + p20 * 2^32) with ((2^52 + 1048576) * 2^32).",
                        "VernacExtend",
                        "d624115aeffd71cf30943983ee1fdc39bf40ea12"
                    ]
                },
                {
                    "command": [
                        "apply integer_representable_n2p; auto.",
                        "VernacExtend",
                        "1bcb47309a5c1bb12f7642fc44d23965ab7914ba"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "of_long_from_words",
            "line_nb": 452,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int64.signed_range l).",
                        "VernacExtend",
                        "b885bb1c707c2b592803b6b24eb391490a7ff283"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.signed_range (Int64.hiword l)).",
                        "VernacExtend",
                        "3d470e308681034389038a0e97005aae05f688bf"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.unsigned_range (Int64.loword l)).",
                        "VernacExtend",
                        "933bc122e5a6f7b2f8eb829b43b28959f813140c"
                    ]
                },
                {
                    "command": [
                        "rewrite ! from_words_eq, ! from_words_eq'.",
                        "VernacExtend",
                        "97471b7bdcdada70c56bbb8c4538c46f4e2d47f5"
                    ]
                },
                {
                    "command": [
                        "set (p := Int.unsigned (Int.repr (two_p 20 + two_p 31))).",
                        "VernacExtend",
                        "559718e7ca81b1804e65fcec13bfde3fdbdda67b"
                    ]
                },
                {
                    "command": [
                        "set (x := Int64.signed l) in *; set (xl := Int.unsigned (Int64.loword l)) in *; set (xh := Int.signed (Int64.hiword l)) in *.",
                        "VernacExtend",
                        "85c4b7e5eb44d2b21b8d96cb5e99a7d4475ff77d"
                    ]
                },
                {
                    "command": [
                        "rewrite ox8000_0000_signed_unsigned.",
                        "VernacExtend",
                        "5c561623167c7bc3b6ad04fad68b725d4079f257"
                    ]
                },
                {
                    "command": [
                        "fold xh.",
                        "VernacExtend",
                        "3ed3df026ae364bc5baed5bbdb05dd65d3f400b4"
                    ]
                },
                {
                    "command": [
                        "unfold sub.",
                        "VernacExtend",
                        "09a336a2b822859bc335120602ae265ad23b7a0d"
                    ]
                },
                {
                    "command": [
                        "rewrite BofZ_minus.",
                        "VernacExtend",
                        "b1da215c9b76c6e5378345eafb85bb35ca56c2c4"
                    ]
                },
                {
                    "command": [
                        "replace (2^84 + (xh + Int.half_modulus) * 2^32 - (2^84 + p * 2^32)) with ((xh - 2^20) * 2^32) by (compute_this p; compute_this Int.half_modulus; ring).",
                        "VernacExtend",
                        "884d7f02c9dbb986943a5e107650d768a30ccf23"
                    ]
                },
                {
                    "command": [
                        "unfold add.",
                        "VernacExtend",
                        "11cf98bf231f22df486b46b3b6a1c38a94e859dd"
                    ]
                },
                {
                    "command": [
                        "rewrite BofZ_plus.",
                        "VernacExtend",
                        "107ae1764cebd3203ee52b8fe6054636d5af8667"
                    ]
                },
                {
                    "command": [
                        "unfold of_long.",
                        "VernacExtend",
                        "7890013f17e7d51c8a68046dd9313acacd6bf2c5"
                    ]
                },
                {
                    "command": [
                        "apply f_equal.",
                        "VernacExtend",
                        "ba856cbef3c8e84dcef77c91c8515b497874875b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Int64.ofwords_recompose l) at 1.",
                        "VernacExtend",
                        "a16dade36a73865a3ab7569087115ab90ff1a19d"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.ofwords_add''.",
                        "VernacExtend",
                        "30cda01271fa39e830162e01e6d62a21cfc08e10"
                    ]
                },
                {
                    "command": [
                        "fold xh; fold xl.",
                        "VernacExtend",
                        "b0140514e949f446422441b3eb047c749414b9d0"
                    ]
                },
                {
                    "command": [
                        "compute_this (two_p 32); ring.",
                        "VernacExtend",
                        "270f8ca2ae77546c262fdf94f663d063f327c6c9"
                    ]
                },
                {
                    "command": [
                        "apply integer_representable_n2p; auto.",
                        "VernacExtend",
                        "1bcb47309a5c1bb12f7642fc44d23965ab7914ba"
                    ]
                },
                {
                    "command": [
                        "compute_this (2^20); smart_omega.",
                        "VernacExtend",
                        "99925125a9b08f1a3e0e61709ae9175da409627d"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply integer_representable_n; auto; smart_omega.",
                        "VernacExtend",
                        "3b3a4fe2abc657641bfba4ca29f301cbd920ac96"
                    ]
                },
                {
                    "command": [
                        "replace (2^84 + (xh + Int.half_modulus) * 2^32) with ((2^52 + xh + Int.half_modulus) * 2^32) by (compute_this Int.half_modulus; ring).",
                        "VernacExtend",
                        "4f90e6a533653abf164014d21f462d31dca8a397"
                    ]
                },
                {
                    "command": [
                        "apply integer_representable_n2p; auto.",
                        "VernacExtend",
                        "1bcb47309a5c1bb12f7642fc44d23965ab7914ba"
                    ]
                },
                {
                    "command": [
                        "smart_omega.",
                        "VernacExtend",
                        "5dcfc39e0aac5d358de281c4542000b4f08885f4"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "change (2^84 + p * 2^32) with ((2^52 + p) * 2^32).",
                        "VernacExtend",
                        "332fc05dd72a12b4fa3582f953808157b227721a"
                    ]
                },
                {
                    "command": [
                        "apply integer_representable_n2p; auto.",
                        "VernacExtend",
                        "1bcb47309a5c1bb12f7642fc44d23965ab7914ba"
                    ]
                },
                {
                    "command": [
                        "compute_this p; smart_omega.",
                        "VernacExtend",
                        "40e66a95eca9d10cee1193ef6372e2aa391efcb0"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "of_longu_decomp",
            "line_nb": 488,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold of_longu, of_intu, add, mul.",
                        "VernacExtend",
                        "e6fa87fdfafa27cb204f37f3ef368f3848660de9"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.unsigned_range (Int64.loword l)).",
                        "VernacExtend",
                        "933bc122e5a6f7b2f8eb829b43b28959f813140c"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.unsigned_range (Int64.hiword l)).",
                        "VernacExtend",
                        "20da977f5004c8d391d0ab2b42f74b7bd82c13d4"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int64.unsigned_range l).",
                        "VernacExtend",
                        "4f5051c4a471bc73623e2ecb7c5015f5af7ac76c"
                    ]
                },
                {
                    "command": [
                        "set (x := Int64.unsigned l) in *.",
                        "VernacExtend",
                        "5a5a8c84fd99dc1391297e9591d26005fe679969"
                    ]
                },
                {
                    "command": [
                        "set (yl := Int.unsigned (Int64.loword l)) in *.",
                        "VernacExtend",
                        "c40dc5bf450f326389b6607d69eee72381ee29fc"
                    ]
                },
                {
                    "command": [
                        "set (yh := Int.unsigned (Int64.hiword l)) in *.",
                        "VernacExtend",
                        "42e952b3ae230214f9389fccaa5374067fa8b9a9"
                    ]
                },
                {
                    "command": [
                        "assert (DECOMP: x = yh * 2^32 + yl).",
                        "VernacExtend",
                        "e90bb53ec6b5c9e607a7a714cc2683c45617c0a0"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold x.",
                        "VernacExtend",
                        "8e116a60402c848e1f7fd0414643cdb94ae22a92"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Int64.ofwords_recompose l).",
                        "VernacExtend",
                        "b748704514b4892a62d0a49e8d6bad91d4a5a0d6"
                    ]
                },
                {
                    "command": [
                        "apply Int64.ofwords_add'.",
                        "VernacExtend",
                        "a17303bd591d9d96a50f3290ddb3d2b6b031dac7"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite BofZ_mult.",
                        "VernacExtend",
                        "f92479652519654ba5876edbd58f18741fac5dd6"
                    ]
                },
                {
                    "command": [
                        "rewrite BofZ_plus.",
                        "VernacExtend",
                        "107ae1764cebd3203ee52b8fe6054636d5af8667"
                    ]
                },
                {
                    "command": [
                        "rewrite DECOMP; auto.",
                        "VernacExtend",
                        "f13f9bdab204f949d59fff0c1b51220f42cee3c7"
                    ]
                },
                {
                    "command": [
                        "apply integer_representable_n2p; auto.",
                        "VernacExtend",
                        "1bcb47309a5c1bb12f7642fc44d23965ab7914ba"
                    ]
                },
                {
                    "command": [
                        "smart_omega.",
                        "VernacExtend",
                        "5dcfc39e0aac5d358de281c4542000b4f08885f4"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply integer_representable_n; auto; smart_omega.",
                        "VernacExtend",
                        "3b3a4fe2abc657641bfba4ca29f301cbd920ac96"
                    ]
                },
                {
                    "command": [
                        "apply integer_representable_n; auto; smart_omega.",
                        "VernacExtend",
                        "3b3a4fe2abc657641bfba4ca29f301cbd920ac96"
                    ]
                },
                {
                    "command": [
                        "apply integer_representable_n; auto; smart_omega.",
                        "VernacExtend",
                        "3b3a4fe2abc657641bfba4ca29f301cbd920ac96"
                    ]
                },
                {
                    "command": [
                        "compute; auto.",
                        "VernacExtend",
                        "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "of_long_decomp",
            "line_nb": 515,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold of_long, of_int, of_intu, add, mul.",
                        "VernacExtend",
                        "83970b95384d13a3c4714d45d241827defeb0e63"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.unsigned_range (Int64.loword l)).",
                        "VernacExtend",
                        "933bc122e5a6f7b2f8eb829b43b28959f813140c"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.signed_range (Int64.hiword l)).",
                        "VernacExtend",
                        "3d470e308681034389038a0e97005aae05f688bf"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int64.signed_range l).",
                        "VernacExtend",
                        "b885bb1c707c2b592803b6b24eb391490a7ff283"
                    ]
                },
                {
                    "command": [
                        "set (x := Int64.signed l) in *.",
                        "VernacExtend",
                        "55f28c2e56c6f32e84fc86b462d2f58bcbf51cd3"
                    ]
                },
                {
                    "command": [
                        "set (yl := Int.unsigned (Int64.loword l)) in *.",
                        "VernacExtend",
                        "c40dc5bf450f326389b6607d69eee72381ee29fc"
                    ]
                },
                {
                    "command": [
                        "set (yh := Int.signed (Int64.hiword l)) in *.",
                        "VernacExtend",
                        "446939dc55c8ca97a86ddd83015bf38ee2a6fea4"
                    ]
                },
                {
                    "command": [
                        "assert (DECOMP: x = yh * 2^32 + yl).",
                        "VernacExtend",
                        "e90bb53ec6b5c9e607a7a714cc2683c45617c0a0"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold x.",
                        "VernacExtend",
                        "8e116a60402c848e1f7fd0414643cdb94ae22a92"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Int64.ofwords_recompose l), Int64.ofwords_add''.",
                        "VernacExtend",
                        "dae9ddc287b67c5b98d66d314f931361abd287e1"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite BofZ_mult.",
                        "VernacExtend",
                        "f92479652519654ba5876edbd58f18741fac5dd6"
                    ]
                },
                {
                    "command": [
                        "rewrite BofZ_plus.",
                        "VernacExtend",
                        "107ae1764cebd3203ee52b8fe6054636d5af8667"
                    ]
                },
                {
                    "command": [
                        "rewrite DECOMP; auto.",
                        "VernacExtend",
                        "f13f9bdab204f949d59fff0c1b51220f42cee3c7"
                    ]
                },
                {
                    "command": [
                        "apply integer_representable_n2p; auto.",
                        "VernacExtend",
                        "1bcb47309a5c1bb12f7642fc44d23965ab7914ba"
                    ]
                },
                {
                    "command": [
                        "smart_omega.",
                        "VernacExtend",
                        "5dcfc39e0aac5d358de281c4542000b4f08885f4"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply integer_representable_n; auto; smart_omega.",
                        "VernacExtend",
                        "3b3a4fe2abc657641bfba4ca29f301cbd920ac96"
                    ]
                },
                {
                    "command": [
                        "apply integer_representable_n; auto; smart_omega.",
                        "VernacExtend",
                        "3b3a4fe2abc657641bfba4ca29f301cbd920ac96"
                    ]
                },
                {
                    "command": [
                        "apply integer_representable_n; auto.",
                        "VernacExtend",
                        "e7579ea4ba88dc0bc6d77a0170cabe01629de62f"
                    ]
                },
                {
                    "command": [
                        "compute; intuition congruence.",
                        "VernacExtend",
                        "b1e4ec174532a4bdd5fe31fcded6521ccfff32fe"
                    ]
                },
                {
                    "command": [
                        "compute; auto.",
                        "VernacExtend",
                        "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "of_longu_of_long_1",
            "line_nb": 543,
            "steps": [
                {
                    "command": [
                        "unfold of_longu, of_long, Int64.signed, Int64.ltu; intro.",
                        "VernacExtend",
                        "9d861b0a639f8a3cd5d6e78510031bda6873e353"
                    ]
                },
                {
                    "command": [
                        "change (Int64.unsigned (Int64.repr Int64.half_modulus)) with Int64.half_modulus.",
                        "VernacExtend",
                        "0b2ebe27f3576b6006abbcf130079a3ad0758db9"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (Int64.unsigned x) Int64.half_modulus); now intuition.",
                        "VernacExtend",
                        "876505a89003afc8d3054503d3f4ec7400d91b80"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "of_longu_of_long_2",
            "line_nb": 548,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "change (of_int (Int.repr 2)) with (BofZ 53 1024 __ __ (2^1)).",
                        "VernacExtend",
                        "2cacf9eb084db8d4045ada79d3225382c7d046ba"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int64.unsigned_range x).",
                        "VernacExtend",
                        "5f793f5efed71468a3c3f51c082b4415b913f00a"
                    ]
                },
                {
                    "command": [
                        "unfold Int64.ltu in H.",
                        "VernacExtend",
                        "8a99b6ee0ba30c44ab20589d4954139d6f80b207"
                    ]
                },
                {
                    "command": [
                        "change (Int64.unsigned (Int64.repr Int64.half_modulus)) with (2^63) in H.",
                        "VernacExtend",
                        "ec9c5f0fec0274ea6b6aeb9a513943f0bfce3a9d"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (Int64.unsigned x) (2^63)); inv H.",
                        "VernacExtend",
                        "8971d5362763bf8126dd5bbdfd68c8a0efb5baf2"
                    ]
                },
                {
                    "command": [
                        "assert (Int64.modulus <= 2^1024 - 2^(1024-53)) by (vm_compute; intuition congruence).",
                        "VernacExtend",
                        "7d94e9d7dfa4e7123099568bc71b61725c76cdd0"
                    ]
                },
                {
                    "command": [
                        "set (n := Int64.or (Int64.shru x Int64.one) (Int64.and x Int64.one)).",
                        "VernacExtend",
                        "e1ba00a6e30a87fee77546d52eae038909896599"
                    ]
                },
                {
                    "command": [
                        "assert (NB: forall i, 0 <= i < 64 -> Int64.testbit n i = if zeq i 0 then Int64.testbit x 1 || Int64.testbit x 0 else if zeq i 63 then false else Int64.testbit x (i + 1)).",
                        "VernacExtend",
                        "092c442f84ad4585156a7328fb7c049bf17c3fee"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros; unfold n; autorewrite with ints; auto.",
                        "VernacExtend",
                        "c5493f1a954ba8bb051d5f40cc9a6c21389c0df3"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.unsigned_one.",
                        "VernacExtend",
                        "fce4c4ad9bc7048d6fb755846a3242e3cfe94961"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.bits_one.",
                        "VernacExtend",
                        "e0bf8b917da0d5f5cda0700f02dd0e8652ce221d"
                    ]
                },
                {
                    "command": [
                        "compute_this Int64.zwordsize.",
                        "VernacExtend",
                        "c9871b6207b999150540420d91bbda147eaedd16"
                    ]
                },
                {
                    "command": [
                        "destruct (zeq i 0); simpl proj_sumbool.",
                        "VernacExtend",
                        "0ba27838f551145e4641c1f6a8b9e99fdb0a657d"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true by omega.",
                        "VernacExtend",
                        "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_true_r.",
                        "VernacExtend",
                        "230918acbe37788580429f7b57db0df199d9fbfd"
                    ]
                },
                {
                    "command": [
                        "subst i; auto.",
                        "VernacExtend",
                        "db073ea86ef57c4f2babd161a3426d7ab1101a9b"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_false_r, orb_false_r.",
                        "VernacExtend",
                        "28429d5a6e6b646448ac2bad327a412c57fc7e05"
                    ]
                },
                {
                    "command": [
                        "destruct (zeq i 63).",
                        "VernacExtend",
                        "31012f6ed9be977bec960a08256c97591f412a05"
                    ]
                },
                {
                    "command": [
                        "subst i.",
                        "VernacExtend",
                        "8a51b06e94f64277663e0022260aa1e58bff437c"
                    ]
                },
                {
                    "command": [
                        "apply zlt_false; omega.",
                        "VernacExtend",
                        "babc6119603ed1a7aaee8e778bd0de4a23c8ad56"
                    ]
                },
                {
                    "command": [
                        "apply zlt_true; omega.",
                        "VernacExtend",
                        "11d5ba53e57a55cf6c538075fe9ff297a155a96d"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (NB2: forall i, 0 <= i -> Z.testbit (Int64.signed n * 2^1) i = if zeq i 0 then false else if zeq i 1 then Int64.testbit x 1 || Int64.testbit x 0 else Int64.testbit x i).",
                        "VernacExtend",
                        "82721b56ab38510f3ca3b1626788117d700f3ac9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.mul_pow2_bits by omega.",
                        "VernacExtend",
                        "8709193b7a0c37a7d9fe2b62dac8692c7e5f1db0"
                    ]
                },
                {
                    "command": [
                        "destruct (zeq i 0).",
                        "VernacExtend",
                        "d84935205e6f3de20c609dbacd0c5438037a33e9"
                    ]
                },
                {
                    "command": [
                        "apply Z.testbit_neg_r; omega.",
                        "VernacExtend",
                        "aa654d204d4483cec3f7b79ee5995621897d9de9"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.bits_signed by omega.",
                        "VernacExtend",
                        "6ab0c4a118bbaf225c1c734d61e6016f7eb6c169"
                    ]
                },
                {
                    "command": [
                        "compute_this Int64.zwordsize.",
                        "VernacExtend",
                        "c9871b6207b999150540420d91bbda147eaedd16"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (i-1) 64).",
                        "VernacExtend",
                        "0c2b50c934c9a10989867a72efae663134653d33"
                    ]
                },
                {
                    "command": [
                        "rewrite NB by omega.",
                        "VernacExtend",
                        "5174eb3be60ea45697df13308e0926697c37da25"
                    ]
                },
                {
                    "command": [
                        "destruct (zeq i 1).",
                        "VernacExtend",
                        "b17522b391d2b045c58356f93f3b8f8873992e12"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "rewrite dec_eq_true by auto.",
                        "VernacExtend",
                        "8148b112458bb303995d6b5f5ab92f413906d399"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite dec_eq_false by omega.",
                        "VernacExtend",
                        "abb20bbe67998738d92abebe779b9e2332f25c66"
                    ]
                },
                {
                    "command": [
                        "destruct (zeq (i - 1) 63).",
                        "VernacExtend",
                        "389a9ca391e0f7f7383125c61502929bdd215eba"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply Int64.bits_above.",
                        "VernacExtend",
                        "5d47577f2efa36d8a4c5797d94247189a9a0ebed"
                    ]
                },
                {
                    "command": [
                        "compute_this Int64.zwordsize; omega.",
                        "VernacExtend",
                        "3277c3e0c83c584397a041f18a5b88261d3dd698"
                    ]
                },
                {
                    "command": [
                        "f_equal; omega.",
                        "VernacExtend",
                        "3b812353131f9b9bebbd6410b3fa7c9d2e597ec3"
                    ]
                },
                {
                    "command": [
                        "rewrite NB by omega.",
                        "VernacExtend",
                        "5174eb3be60ea45697df13308e0926697c37da25"
                    ]
                },
                {
                    "command": [
                        "rewrite dec_eq_false by omega.",
                        "VernacExtend",
                        "abb20bbe67998738d92abebe779b9e2332f25c66"
                    ]
                },
                {
                    "command": [
                        "rewrite dec_eq_true by auto.",
                        "VernacExtend",
                        "8148b112458bb303995d6b5f5ab92f413906d399"
                    ]
                },
                {
                    "command": [
                        "rewrite dec_eq_false by omega.",
                        "VernacExtend",
                        "abb20bbe67998738d92abebe779b9e2332f25c66"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply Int64.bits_above.",
                        "VernacExtend",
                        "5d47577f2efa36d8a4c5797d94247189a9a0ebed"
                    ]
                },
                {
                    "command": [
                        "compute_this Int64.zwordsize; omega.",
                        "VernacExtend",
                        "3277c3e0c83c584397a041f18a5b88261d3dd698"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (EQ: Int64.signed n * 2 = int_round_odd (Int64.unsigned x) 1).",
                        "VernacExtend",
                        "82b3bfcee1e0380ca95ce21c0e9c0f437ef89ff6"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply (int_round_odd_bits 53 1024).",
                        "VernacExtend",
                        "d65e79e42907588c0ab03f101d74ee9635f179fa"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite NB2 by omega.",
                        "VernacExtend",
                        "7e844168d2e4395ae2c2a4744ed5233f1b6f8c95"
                    ]
                },
                {
                    "command": [
                        "replace i with 0 by omega.",
                        "VernacExtend",
                        "2d499e8734683e130c7945767634bfa19e5b40f1"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite NB2 by omega.",
                        "VernacExtend",
                        "7e844168d2e4395ae2c2a4744ed5233f1b6f8c95"
                    ]
                },
                {
                    "command": [
                        "rewrite dec_eq_false by omega.",
                        "VernacExtend",
                        "abb20bbe67998738d92abebe779b9e2332f25c66"
                    ]
                },
                {
                    "command": [
                        "rewrite dec_eq_true.",
                        "VernacExtend",
                        "28b046c22f8f69c0651cbac642dd4f2013af7847"
                    ]
                },
                {
                    "command": [
                        "rewrite orb_comm.",
                        "VernacExtend",
                        "d19a1a861dc82473715be9ccb56b9a66a0d4d2e1"
                    ]
                },
                {
                    "command": [
                        "unfold Int64.testbit.",
                        "VernacExtend",
                        "9ef67286e051955828acb7a736d336915a31e9c9"
                    ]
                },
                {
                    "command": [
                        "change (2^1) with 2.",
                        "VernacExtend",
                        "f728c06bd0035fb1bdd06c0065fdac6a2579d4a1"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.testbit (Int64.unsigned x) 0) eqn:B0; [rewrite Z.testbit_true in B0 by omega|rewrite Z.testbit_false in B0 by omega]; change (2^0) with 1 in B0; rewrite Zdiv_1_r in B0; rewrite B0; auto.",
                        "VernacExtend",
                        "ad98fd1fdf12e2a8c8dc713b42c990ce3f1adddb"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite NB2 by omega.",
                        "VernacExtend",
                        "7e844168d2e4395ae2c2a4744ed5233f1b6f8c95"
                    ]
                },
                {
                    "command": [
                        "rewrite ! dec_eq_false by omega.",
                        "VernacExtend",
                        "7171b90785a7894288b1ad34bc0185647db2f869"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "unfold mul, of_long, of_longu.",
                        "VernacExtend",
                        "83f218ee9899d8be95a88c85848e8de6a67fd5df"
                    ]
                },
                {
                    "command": [
                        "rewrite BofZ_mult_2p.",
                        "VernacExtend",
                        "bf79d24609dd91a102639d13560ab563c8e45816"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "change (2^1) with 2.",
                        "VernacExtend",
                        "f728c06bd0035fb1bdd06c0065fdac6a2579d4a1"
                    ]
                },
                {
                    "command": [
                        "rewrite EQ.",
                        "VernacExtend",
                        "359c5e196f83a6afbd9ede635bddbf545fd1eb82"
                    ]
                },
                {
                    "command": [
                        "apply BofZ_round_odd with (p := 1).",
                        "VernacExtend",
                        "c2f877650e7a77d43e4ff52f93e722a2e07d7267"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply Z.le_trans with Int64.modulus; trivial.",
                        "VernacExtend",
                        "ebce1c8899c191273902f9e1c1b91c1d2070d841"
                    ]
                },
                {
                    "command": [
                        "smart_omega.",
                        "VernacExtend",
                        "5dcfc39e0aac5d358de281c4542000b4f08885f4"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply Z.le_trans with (2^63).",
                        "VernacExtend",
                        "c2019c31aa14088af31a98ed6ff4b81c8aa07a1e"
                    ]
                },
                {
                    "command": [
                        "compute; intuition congruence.",
                        "VernacExtend",
                        "b1e4ec174532a4bdd5fe31fcded6521ccfff32fe"
                    ]
                },
                {
                    "command": [
                        "xomega.",
                        "VernacExtend",
                        "92dc13ff6a078243e0cd72420247996d076ca43b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply Z.le_trans with Int64.modulus; trivial.",
                        "VernacExtend",
                        "ebce1c8899c191273902f9e1c1b91c1d2070d841"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int64.signed_range n).",
                        "VernacExtend",
                        "9086955dab80c08a74ac9d0ab3375096e62b69b1"
                    ]
                },
                {
                    "command": [
                        "compute_this Int64.min_signed; compute_this Int64.max_signed; compute_this Int64.modulus; xomega.",
                        "VernacExtend",
                        "35261136601d2f708234ec22a2c9e55360d94942"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assert (2^63 <= int_round_odd (Int64.unsigned x) 1).",
                        "VernacExtend",
                        "9a87a988529f4ed03b433e78e2bef64d1de5c6cb"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "change (2^63) with (int_round_odd (2^63) 1).",
                        "VernacExtend",
                        "cd1a62356dfd77ec27eafb3a70530eff59232b5a"
                    ]
                },
                {
                    "command": [
                        "apply (int_round_odd_le 0 0); omega.",
                        "VernacExtend",
                        "0d9e3be991d229974682125a6c1d4819a357409a"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite <- EQ in H1.",
                        "VernacExtend",
                        "dcfccb309445363f70e3426668bc110c2104faca"
                    ]
                },
                {
                    "command": [
                        "compute_this (2^63).",
                        "VernacExtend",
                        "ba383517f7c612be6ab8e1c6da857b6b69ad21cd"
                    ]
                },
                {
                    "command": [
                        "compute_this (2^53).",
                        "VernacExtend",
                        "34c69ae2927bef8534e4ac98bd899f46376983e8"
                    ]
                },
                {
                    "command": [
                        "xomega.",
                        "VernacExtend",
                        "92dc13ff6a078243e0cd72420247996d076ca43b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZofB_range_widen",
            "line_nb": 656,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exploit ZofB_range_inversion; eauto.",
                        "VernacExtend",
                        "468c5043e0e4c0c3ce2cd8e568b8bb2940eb9547"
                    ]
                },
                {
                    "command": [
                        "intros (A & B & C).",
                        "VernacExtend",
                        "600bc83b778b82e4f76af4dba65aea6d61e17221"
                    ]
                },
                {
                    "command": [
                        "unfold ZofB_range; rewrite C.",
                        "VernacExtend",
                        "cd55e00f01a990ec547c9f218a4ac09b68624e4c"
                    ]
                },
                {
                    "command": [
                        "replace (min2 <=? n) with true.",
                        "VernacExtend",
                        "9403160b183a1669b81b8bf7f94a733e89ff2d09"
                    ]
                },
                {
                    "command": [
                        "replace (n <=? max2) with true.",
                        "VernacExtend",
                        "8b1b13a16bd8b1e1795827de9828c7a0d7377354"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "symmetry; apply Z.leb_le; omega.",
                        "VernacExtend",
                        "d2d6a91f7ba35fc85f7d7aeb05f0630c09d66a7a"
                    ]
                },
                {
                    "command": [
                        "symmetry; apply Z.leb_le; omega.",
                        "VernacExtend",
                        "d2d6a91f7ba35fc85f7d7aeb05f0630c09d66a7a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "to_int_to_long",
            "line_nb": 667,
            "steps": [
                {
                    "command": [
                        "unfold to_int, to_long; intros.",
                        "VernacExtend",
                        "84390979c32a510d1f301d0d7bfd917ed97f7854"
                    ]
                },
                {
                    "command": [
                        "destruct (ZofB_range 53 1024 f Int.min_signed Int.max_signed) as [z|] eqn:Z; inv H.",
                        "VernacExtend",
                        "cb2319b346b89ef5767f059bac80cd4bd7734aed"
                    ]
                },
                {
                    "command": [
                        "exploit ZofB_range_inversion; eauto.",
                        "VernacExtend",
                        "468c5043e0e4c0c3ce2cd8e568b8bb2940eb9547"
                    ]
                },
                {
                    "command": [
                        "intros (A & B & C).",
                        "VernacExtend",
                        "600bc83b778b82e4f76af4dba65aea6d61e17221"
                    ]
                },
                {
                    "command": [
                        "replace (ZofB_range 53 1024 f Int64.min_signed Int64.max_signed) with (Some z).",
                        "VernacExtend",
                        "2e622a786bda8abc7e73ceff8996938987e00ba7"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.signed_repr; auto.",
                        "VernacExtend",
                        "d2a3627d99a158baec9a5dfb0e0dbe190f5a271f"
                    ]
                },
                {
                    "command": [
                        "symmetry; eapply ZofB_range_widen; eauto.",
                        "VernacExtend",
                        "ce2984529f8b5bcaad547b6101e60f99828f57da"
                    ]
                },
                {
                    "command": [
                        "compute; congruence.",
                        "VernacExtend",
                        "1a58589b5617513e16966c72a14aa8b5277b9c28"
                    ]
                },
                {
                    "command": [
                        "compute; congruence.",
                        "VernacExtend",
                        "1a58589b5617513e16966c72a14aa8b5277b9c28"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "to_intu_to_longu",
            "line_nb": 679,
            "steps": [
                {
                    "command": [
                        "unfold to_intu, to_longu; intros.",
                        "VernacExtend",
                        "938aa47bff21dd056e1e3384d2b330ed8771d45a"
                    ]
                },
                {
                    "command": [
                        "destruct (ZofB_range 53 1024 f 0 Int.max_unsigned) as [z|] eqn:Z; inv H.",
                        "VernacExtend",
                        "bc5b312c8d9adb9a74facba993394961a81c4118"
                    ]
                },
                {
                    "command": [
                        "exploit ZofB_range_inversion; eauto.",
                        "VernacExtend",
                        "468c5043e0e4c0c3ce2cd8e568b8bb2940eb9547"
                    ]
                },
                {
                    "command": [
                        "intros (A & B & C).",
                        "VernacExtend",
                        "600bc83b778b82e4f76af4dba65aea6d61e17221"
                    ]
                },
                {
                    "command": [
                        "replace (ZofB_range 53 1024 f 0 Int64.max_unsigned) with (Some z).",
                        "VernacExtend",
                        "0f738a8387021b8a7c69ec8934b0b671006e2dbd"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.unsigned_repr; auto.",
                        "VernacExtend",
                        "536e4f297b7a8fbe3aae6f72cb2f7619e7f2c464"
                    ]
                },
                {
                    "command": [
                        "symmetry; eapply ZofB_range_widen; eauto.",
                        "VernacExtend",
                        "ce2984529f8b5bcaad547b6101e60f99828f57da"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "compute; congruence.",
                        "VernacExtend",
                        "1a58589b5617513e16966c72a14aa8b5277b9c28"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "to_intu_to_long",
            "line_nb": 691,
            "steps": [
                {
                    "command": [
                        "unfold to_intu, to_long; intros.",
                        "VernacExtend",
                        "9d9eafcc15863c3750de9498bd835559cd7b7666"
                    ]
                },
                {
                    "command": [
                        "destruct (ZofB_range 53 1024 f 0 Int.max_unsigned) as [z|] eqn:Z; inv H.",
                        "VernacExtend",
                        "bc5b312c8d9adb9a74facba993394961a81c4118"
                    ]
                },
                {
                    "command": [
                        "exploit ZofB_range_inversion; eauto.",
                        "VernacExtend",
                        "468c5043e0e4c0c3ce2cd8e568b8bb2940eb9547"
                    ]
                },
                {
                    "command": [
                        "intros (A & B & C).",
                        "VernacExtend",
                        "600bc83b778b82e4f76af4dba65aea6d61e17221"
                    ]
                },
                {
                    "command": [
                        "replace (ZofB_range 53 1024 f Int64.min_signed Int64.max_signed) with (Some z).",
                        "VernacExtend",
                        "2e622a786bda8abc7e73ceff8996938987e00ba7"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.unsigned_repr; auto.",
                        "VernacExtend",
                        "536e4f297b7a8fbe3aae6f72cb2f7619e7f2c464"
                    ]
                },
                {
                    "command": [
                        "symmetry; eapply ZofB_range_widen; eauto.",
                        "VernacExtend",
                        "ce2984529f8b5bcaad547b6101e60f99828f57da"
                    ]
                },
                {
                    "command": [
                        "compute; congruence.",
                        "VernacExtend",
                        "1a58589b5617513e16966c72a14aa8b5277b9c28"
                    ]
                },
                {
                    "command": [
                        "compute; congruence.",
                        "VernacExtend",
                        "1a58589b5617513e16966c72a14aa8b5277b9c28"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "of_int_of_long",
            "line_nb": 703,
            "steps": [
                {
                    "command": [
                        "unfold of_int, of_long.",
                        "VernacExtend",
                        "a3ea1327d87f28fc699eb06d81d0a8d893967b86"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.signed_repr.",
                        "VernacExtend",
                        "041c85867b5d8f6a046ae769f037cbc51037934e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "generalize (Int.signed_range n).",
                        "VernacExtend",
                        "801b1328dafdd0b9711ed79b3ecf798386ac1ecf"
                    ]
                },
                {
                    "command": [
                        "compute_this Int64.min_signed.",
                        "VernacExtend",
                        "102b6498a75f9aa4ea933f5bb652febd235ec81a"
                    ]
                },
                {
                    "command": [
                        "compute_this Int64.max_signed.",
                        "VernacExtend",
                        "003e213d5a0b52c24e5ab718aa97646d26b01412"
                    ]
                },
                {
                    "command": [
                        "smart_omega.",
                        "VernacExtend",
                        "5dcfc39e0aac5d358de281c4542000b4f08885f4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "of_intu_of_longu",
            "line_nb": 714,
            "steps": [
                {
                    "command": [
                        "unfold of_intu, of_longu.",
                        "VernacExtend",
                        "deec72197a7f3eb3855583f657f9cd42635306ed"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.unsigned_repr.",
                        "VernacExtend",
                        "b9709b48049ce46df2bcb79f64beb9e33091c5a1"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "generalize (Int.unsigned_range n).",
                        "VernacExtend",
                        "d142e3804560cb1d19427cc9dd86d1c5e245c1a4"
                    ]
                },
                {
                    "command": [
                        "smart_omega.",
                        "VernacExtend",
                        "5dcfc39e0aac5d358de281c4542000b4f08885f4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "of_intu_of_long",
            "line_nb": 723,
            "steps": [
                {
                    "command": [
                        "unfold of_intu, of_long.",
                        "VernacExtend",
                        "60cea02011a7aa53f112fee8779e3d25c06cb01c"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.signed_repr.",
                        "VernacExtend",
                        "041c85867b5d8f6a046ae769f037cbc51037934e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "generalize (Int.unsigned_range n).",
                        "VernacExtend",
                        "d142e3804560cb1d19427cc9dd86d1c5e245c1a4"
                    ]
                },
                {
                    "command": [
                        "compute_this Int64.min_signed; compute_this Int64.max_signed; smart_omega.",
                        "VernacExtend",
                        "ea4f76bf78c83624d35b1a937133c004745565b9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cmp_double",
            "line_nb": 843,
            "steps": [
                {
                    "command": [
                        "unfold cmp, Float.cmp; intros.",
                        "VernacExtend",
                        "c6510cf09407df66d7924285590881fc8c614215"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply Bcompare_Bconv_widen.",
                        "VernacExtend",
                        "d35d368c77333e6e0e379755e6585aeb1c15319e"
                    ]
                },
                {
                    "command": [
                        "red; omega.",
                        "VernacExtend",
                        "ae85dd91496b88667e743b35b47cde1293a54706"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "of_int_double",
            "line_nb": 865,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply Bconv_BofZ.",
                        "VernacExtend",
                        "ad42a88f15a4438df6017be201a8bab259aa2e31"
                    ]
                },
                {
                    "command": [
                        "apply integer_representable_n; auto.",
                        "VernacExtend",
                        "e7579ea4ba88dc0bc6d77a0170cabe01629de62f"
                    ]
                },
                {
                    "command": [
                        "generalize (Int.signed_range n); Float.smart_omega.",
                        "VernacExtend",
                        "c61422149458ab9951ea0bbfccf27230792609a0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "of_intu_double",
            "line_nb": 872,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply Bconv_BofZ.",
                        "VernacExtend",
                        "ad42a88f15a4438df6017be201a8bab259aa2e31"
                    ]
                },
                {
                    "command": [
                        "apply integer_representable_n; auto.",
                        "VernacExtend",
                        "e7579ea4ba88dc0bc6d77a0170cabe01629de62f"
                    ]
                },
                {
                    "command": [
                        "generalize (Int.unsigned_range n); Float.smart_omega.",
                        "VernacExtend",
                        "f913eacc94c74adc134c96199da78565034ef98c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "to_int_double",
            "line_nb": 879,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold to_int in H.",
                        "VernacExtend",
                        "c111d44ed8771d4da2adab63b72f93ecc9cb570e"
                    ]
                },
                {
                    "command": [
                        "destruct (ZofB_range _ _ f Int.min_signed Int.max_signed) as [n'|] eqn:E; inv H.",
                        "VernacExtend",
                        "22a482b7b0cc9d386a88d25b71c1695bd9b22b26"
                    ]
                },
                {
                    "command": [
                        "unfold Float.to_int, to_double, Float.of_single.",
                        "VernacExtend",
                        "6fa6e85d4ddecf20a7beb54b7c470f34387ced21"
                    ]
                },
                {
                    "command": [
                        "erewrite ZofB_range_Bconv; eauto.",
                        "VernacExtend",
                        "ec41c40641ad6453f5256a2af88a4b0a42f53a0a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "to_intu_double",
            "line_nb": 891,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold to_intu in H.",
                        "VernacExtend",
                        "bf20425967400a5915d49c0d79aa604d0afa73e1"
                    ]
                },
                {
                    "command": [
                        "destruct (ZofB_range _ _ f 0 Int.max_unsigned) as [n'|] eqn:E; inv H.",
                        "VernacExtend",
                        "69b6819037cadc65a6c85aeebf61308af1c76c09"
                    ]
                },
                {
                    "command": [
                        "unfold Float.to_intu, to_double, Float.of_single.",
                        "VernacExtend",
                        "cc8115a10c6e309db5e003fcc4cefb7cd751e667"
                    ]
                },
                {
                    "command": [
                        "erewrite ZofB_range_Bconv; eauto.",
                        "VernacExtend",
                        "ec41c40641ad6453f5256a2af88a4b0a42f53a0a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "to_long_double",
            "line_nb": 903,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold to_long in H.",
                        "VernacExtend",
                        "afd3da79985b8a7793dbfc5419fd5cd3540e8da3"
                    ]
                },
                {
                    "command": [
                        "destruct (ZofB_range _ _ f Int64.min_signed Int64.max_signed) as [n'|] eqn:E; inv H.",
                        "VernacExtend",
                        "9938976875d2336e4b575c99bc8c38556ccbde8e"
                    ]
                },
                {
                    "command": [
                        "unfold Float.to_long, to_double, Float.of_single.",
                        "VernacExtend",
                        "179d9693e5373e1ef6fec1ab0cfe7d587bdf29b4"
                    ]
                },
                {
                    "command": [
                        "erewrite ZofB_range_Bconv; eauto.",
                        "VernacExtend",
                        "ec41c40641ad6453f5256a2af88a4b0a42f53a0a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "to_longu_double",
            "line_nb": 915,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold to_longu in H.",
                        "VernacExtend",
                        "134047e190ae4e2a9e16886f6e6c04daf6c57ca4"
                    ]
                },
                {
                    "command": [
                        "destruct (ZofB_range _ _ f 0 Int64.max_unsigned) as [n'|] eqn:E; inv H.",
                        "VernacExtend",
                        "a6c414e8c53b29707b109c8b4f36a09986712706"
                    ]
                },
                {
                    "command": [
                        "unfold Float.to_longu, to_double, Float.of_single.",
                        "VernacExtend",
                        "8788c3cba6da8952ced075a5aef4890565706e50"
                    ]
                },
                {
                    "command": [
                        "erewrite ZofB_range_Bconv; eauto.",
                        "VernacExtend",
                        "ec41c40641ad6453f5256a2af88a4b0a42f53a0a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "int_round_odd_plus",
            "line_nb": 927,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (POS: 0 < 2^p) by (apply (Zpower_gt_0 radix2); auto).",
                        "VernacExtend",
                        "3ed3b185980783754894ff864a077c504204ac6e"
                    ]
                },
                {
                    "command": [
                        "assert (A: Z.land n (2^p-1) = n mod 2^p).",
                        "VernacExtend",
                        "fb674bcbca7bbf55791870511687004aa9d71545"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z.land_ones by auto.",
                        "VernacExtend",
                        "973016b1968f1373a5ef0df0b6f848acbd4dde1c"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.ones_equiv.",
                        "VernacExtend",
                        "503203c38bc29f8a4fe474aa17d3e89007dd9ddf"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite A.",
                        "VernacExtend",
                        "66a3aec75a717b72a3c9a20459f4dabe8d0df2c1"
                    ]
                },
                {
                    "command": [
                        "assert (B: 0 <= n mod 2^p < 2^p).",
                        "VernacExtend",
                        "6919e0958ff8605c4a1e16f556f0f3b6365077e0"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply Z_mod_lt.",
                        "VernacExtend",
                        "d33d3cab9911c0f11554b4e753af00e7b5fcc4ca"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "set (m := n mod 2^p + (2^p-1)) in *.",
                        "VernacExtend",
                        "d531b43487fae52f43f1983a29fa47d7e61a5d21"
                    ]
                },
                {
                    "command": [
                        "assert (C: m / 2^p = if zeq (n mod 2^p) 0 then 0 else 1).",
                        "VernacExtend",
                        "ebedf6cf9b7a841af25a9f0bb2e5df70bfd90b1c"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold m.",
                        "VernacExtend",
                        "d8ebcad17c946ddc6f7a233ab999ae013ea9d454"
                    ]
                },
                {
                    "command": [
                        "destruct (zeq (n mod 2^p) 0).",
                        "VernacExtend",
                        "4a94c6437418669fd10f2e29535cd1a35eb6409c"
                    ]
                },
                {
                    "command": [
                        "rewrite e.",
                        "VernacExtend",
                        "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
                    ]
                },
                {
                    "command": [
                        "apply Zdiv_small.",
                        "VernacExtend",
                        "3122ba3e001b8237927b3d5e6f1ed3eaf8b08d19"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "eapply Zdiv_unique with (n mod 2^p - 1).",
                        "VernacExtend",
                        "9ed58c8657d484bab24483c8d817babf4d77abd4"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (D: Z.testbit m p = if zeq (n mod 2^p) 0 then false else true).",
                        "VernacExtend",
                        "4388393ce2df524ea421544cf9c75177b09fd79b"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct (zeq (n mod 2^p) 0).",
                        "VernacExtend",
                        "4a94c6437418669fd10f2e29535cd1a35eb6409c"
                    ]
                },
                {
                    "command": [
                        "apply Z.testbit_false; auto.",
                        "VernacExtend",
                        "30ed3dbedceede08052b38a8c28d5651acc6b900"
                    ]
                },
                {
                    "command": [
                        "rewrite C; auto.",
                        "VernacExtend",
                        "d2cfca45582d1823dbb6df89b9e8076b7700d72e"
                    ]
                },
                {
                    "command": [
                        "apply Z.testbit_true; auto.",
                        "VernacExtend",
                        "228b281fd68c843f83eabb50869efb7b409bffaf"
                    ]
                },
                {
                    "command": [
                        "rewrite C; auto.",
                        "VernacExtend",
                        "d2cfca45582d1823dbb6df89b9e8076b7700d72e"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (E: forall i, p < i -> Z.testbit m i = false).",
                        "VernacExtend",
                        "7b79160058698390b4decedb395c08cf0dd0df70"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Z.testbit_false.",
                        "VernacExtend",
                        "401535a7c0c7235ba9e3db96de9e66b9de320be4"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "replace (m / 2^i) with 0.",
                        "VernacExtend",
                        "4143e2b98df4bc527fb742db3b59d9cf19339f56"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply Zdiv_small.",
                        "VernacExtend",
                        "3122ba3e001b8237927b3d5e6f1ed3eaf8b08d19"
                    ]
                },
                {
                    "command": [
                        "unfold m.",
                        "VernacExtend",
                        "d8ebcad17c946ddc6f7a233ab999ae013ea9d454"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply Z.lt_le_trans with (2 * 2^p).",
                        "VernacExtend",
                        "16fc8f27665468c92d17712c7abd004034e0008e"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "change 2 with (2^1) at 1.",
                        "VernacExtend",
                        "c642e429eac3ac194b95005f10f48ea946efc285"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Zpower_plus radix2) by omega.",
                        "VernacExtend",
                        "05151a82acdcd0296850844d2ad40b2e48f1c68d"
                    ]
                },
                {
                    "command": [
                        "apply Zpower_le.",
                        "VernacExtend",
                        "2d8b0e9af4040343c65bbbc1aef967258a85528a"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (F: forall i, 0 <= i -> Z.testbit (-2^p) i = if zlt i p then false else true).",
                        "VernacExtend",
                        "1c277f136753b9b4cb688367656ad370fe3cc59f"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.bits_opp by auto.",
                        "VernacExtend",
                        "397a1a0388235cbfa0adec6cab0e3c6a83ce0899"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z.ones_equiv.",
                        "VernacExtend",
                        "cec05146e433744b93c454c32bbd08df5a319e7e"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i p).",
                        "VernacExtend",
                        "300da2fd6354215ac78c1faf215dd996be4815ef"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.ones_spec_low by omega.",
                        "VernacExtend",
                        "9d1e51fe9f0c3a979368238e459c020d1fcc5d10"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.ones_spec_high by omega.",
                        "VernacExtend",
                        "7664085c8ba229471283c57fe174e09f8aa5350d"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply int_round_odd_bits; auto.",
                        "VernacExtend",
                        "1b8e61d9747490b7f64ddc6781df2a68b9a6acf3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.land_spec, F, zlt_true by omega.",
                        "VernacExtend",
                        "3440612ef3c947a6514195ca62cc47ab102af6aa"
                    ]
                },
                {
                    "command": [
                        "apply andb_false_r.",
                        "VernacExtend",
                        "96acabd8a60f7c2e82c0ec27c34e893436485a16"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.land_spec, Z.lor_spec, D, F, zlt_false, andb_true_r by omega.",
                        "VernacExtend",
                        "12068453c9c1d8734d8858b1b4d55821e5dd7165"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.eqb (n mod 2^p) 0) eqn:Z.",
                        "VernacExtend",
                        "e49de7aa85a616e52ac1b3eb2c4bfec1e0341489"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.eqb_eq in Z.",
                        "VernacExtend",
                        "7763694c1ec0cda1d3f3051f72cf6001809f99be"
                    ]
                },
                {
                    "command": [
                        "rewrite Z, zeq_true.",
                        "VernacExtend",
                        "37e12ddba0722c86651a3253b380b9529bc52f04"
                    ]
                },
                {
                    "command": [
                        "apply orb_false_r.",
                        "VernacExtend",
                        "c0fa87fb1baa1cbcd361805f26554fb59f562524"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.eqb_neq in Z.",
                        "VernacExtend",
                        "35b3b0d5b6ec3df9e1f525db86a0f8d39530a14b"
                    ]
                },
                {
                    "command": [
                        "rewrite zeq_false by auto.",
                        "VernacExtend",
                        "2f78a051efbb0bf5053efb154ff00c05e74ed19b"
                    ]
                },
                {
                    "command": [
                        "apply orb_true_r.",
                        "VernacExtend",
                        "f6c982e3797841078d730c93c95d18e257302343"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.land_spec, Z.lor_spec, E, F, zlt_false, andb_true_r by omega.",
                        "VernacExtend",
                        "303c7fbdd009c1346632eadc90b7dfe60ae42040"
                    ]
                },
                {
                    "command": [
                        "apply orb_false_r.",
                        "VernacExtend",
                        "c0fa87fb1baa1cbcd361805f26554fb59f562524"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "of_long_round_odd",
            "line_nb": 1012,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (int_round_odd_plus 11) by omega.",
                        "VernacExtend",
                        "bce7ffb0f20dad292c07ed98c3773ff013d96394"
                    ]
                },
                {
                    "command": [
                        "assert (-2^64 <= int_round_odd n 11).",
                        "VernacExtend",
                        "7291ce3d30dab4249bf2b97119861c3944f1c026"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "change (-2^64) with (int_round_odd (-2^64) 11).",
                        "VernacExtend",
                        "7328783bc4ab4c9c2c5ddda3894cd3e14144a33c"
                    ]
                },
                {
                    "command": [
                        "apply (int_round_odd_le 0 0); xomega.",
                        "VernacExtend",
                        "ef2c468361950f032db86f0b40cad0f15f492fc5"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (int_round_odd n 11 <= 2^64).",
                        "VernacExtend",
                        "6a7fc67f00e68ae4531b2396bd2b1d029f6b70ed"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "change (2^64) with (int_round_odd (2^64) 11).",
                        "VernacExtend",
                        "a5df4f8f547a8f942ea97bbdaa6efb35c8d4d9c4"
                    ]
                },
                {
                    "command": [
                        "apply (int_round_odd_le 0 0); xomega.",
                        "VernacExtend",
                        "ef2c468361950f032db86f0b40cad0f15f492fc5"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite Bconv_BofZ.",
                        "VernacExtend",
                        "627df980fcd0e6e1686355150af9fa4eee20a6dd"
                    ]
                },
                {
                    "command": [
                        "apply BofZ_round_odd with (p := 11).",
                        "VernacExtend",
                        "0a822f07abd61c1d8093a73a6d8dd6b125fb5da5"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply Z.le_trans with (2^64).",
                        "VernacExtend",
                        "ad209449030ddb51d857b744d7b281e6eb3a7bda"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "compute; intuition congruence.",
                        "VernacExtend",
                        "b1e4ec174532a4bdd5fe31fcded6521ccfff32fe"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "exact (proj1 H).",
                        "VernacExtend",
                        "7d9a5bc9f722dda1f439005f8b3716449ea82106"
                    ]
                },
                {
                    "command": [
                        "unfold int_round_odd.",
                        "VernacExtend",
                        "cc940eff27d7a062ba92390d436863bb8c08c79d"
                    ]
                },
                {
                    "command": [
                        "apply integer_representable_n2p_wide.",
                        "VernacExtend",
                        "23e726d7b459f89f7dc0564e7bcfcc0d15b422e4"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "unfold int_round_odd in H0, H1.",
                        "VernacExtend",
                        "c08cbef975bd06bf9015cc76ed8b60d392d152b0"
                    ]
                },
                {
                    "command": [
                        "split; (apply Zmult_le_reg_r with (2^11); [compute; auto | assumption]).",
                        "VernacExtend",
                        "55e1684cf602b9b76b28ce6e4ef7fdf78fd162fa"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "of_longu_double_1",
            "line_nb": 1042,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "symmetry; apply Bconv_BofZ.",
                        "VernacExtend",
                        "0f025ba8cf0ac33cdc9ce143d009f2d32e4a28bb"
                    ]
                },
                {
                    "command": [
                        "apply integer_representable_n; auto.",
                        "VernacExtend",
                        "e7579ea4ba88dc0bc6d77a0170cabe01629de62f"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int64.unsigned_range n); omega.",
                        "VernacExtend",
                        "f39d47fc427e446307739f935b1ece6045d1b2ce"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "of_long_double_1",
            "line_nb": 1103,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "symmetry; apply Bconv_BofZ.",
                        "VernacExtend",
                        "0f025ba8cf0ac33cdc9ce143d009f2d32e4a28bb"
                    ]
                },
                {
                    "command": [
                        "apply integer_representable_n; auto.",
                        "VernacExtend",
                        "e7579ea4ba88dc0bc6d77a0170cabe01629de62f"
                    ]
                },
                {
                    "command": [
                        "xomega.",
                        "VernacExtend",
                        "92dc13ff6a078243e0cd72420247996d076ca43b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}