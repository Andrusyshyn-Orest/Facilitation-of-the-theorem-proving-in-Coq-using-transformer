{
    "filename": "lib/Integers.v",
    "coq_project": "CompCert",
    "vernac_cmds": [
        [
            "Require Import Eqdep_dec Zquot Zwf.",
            "VernacRequire",
            "3beaa04c2cc2f75fd37366a3ff01ebd9e0f1c79a"
        ],
        [
            "Require Import Coqlib.",
            "VernacRequire",
            "bbbe15041aca3a03300067f7acd445b462d537cc"
        ],
        [
            "Require Archi.",
            "VernacRequire",
            "019739e08394793e2d196b9db729424cb460d119"
        ],
        [
            "Inductive comparison : Type := | Ceq : comparison | Cne : comparison | Clt : comparison | Cle : comparison | Cgt : comparison | Cge : comparison.",
            "VernacInductive",
            "eb2823b8b7f2e562665a68fe2895302051a79fcb"
        ],
        [
            "Definition negate_comparison (c: comparison): comparison := match c with | Ceq => Cne | Cne => Ceq | Clt => Cge | Cle => Cgt | Cgt => Cle | Cge => Clt end.",
            "VernacDefinition",
            "3bc3279f7d626d5fc7d22da1cfd0e038e624788f"
        ],
        [
            "Definition swap_comparison (c: comparison): comparison := match c with | Ceq => Ceq | Cne => Cne | Clt => Cgt | Cle => Cge | Cgt => Clt | Cge => Cle end.",
            "VernacDefinition",
            "35a8d55690d6af0e4b4514a2125de21e09243f12"
        ],
        [
            "Module Type WORDSIZE.",
            "VernacDeclareModuleType",
            "4d72ab66de4388f082a3963bf479a42975aeb097"
        ],
        [
            "Parameter wordsize: nat.",
            "VernacAssumption",
            "e0142d398c2306cb626a1bef43ff612b24a88f2a"
        ],
        [
            "Axiom wordsize_not_zero: wordsize <> 0%nat.",
            "VernacAssumption",
            "725d538367eef12b56e3f0d90d3fc63909f72a29"
        ],
        [
            "End WORDSIZE.",
            "VernacEndSegment",
            "245b6ad2f2fe7abf81aa79e9faa647789578d4fe"
        ],
        [
            "Local Unset Elimination Schemes.",
            "VernacUnsetOption",
            "2fc2e4d2065c5e8b5b407b11414df6bebc03d0a8"
        ],
        [
            "Local Unset Case Analysis Schemes.",
            "VernacUnsetOption",
            "caf88bd166e725fa13309b094f896ccd6484855c"
        ],
        [
            "Module Make(WS: WORDSIZE).",
            "VernacDefineModule",
            "819bff0fa59b89605cf8d4b73a6edb62ce2149b7"
        ],
        [
            "Definition wordsize: nat := WS.wordsize.",
            "VernacDefinition",
            "e83499189ddcc6278f85fbb2ee354deee7a2850b"
        ],
        [
            "Definition zwordsize: Z := Z.of_nat wordsize.",
            "VernacDefinition",
            "faf5b213757b9994d23aee2a559b5a9fc3f18d49"
        ],
        [
            "Definition modulus : Z := two_power_nat wordsize.",
            "VernacDefinition",
            "b8748e0c8d1aecba8cf788eaf9009aaf99f636f3"
        ],
        [
            "Definition half_modulus : Z := modulus / 2.",
            "VernacDefinition",
            "0798513a62114ae249fa73a5b157e345de378ec4"
        ],
        [
            "Definition max_unsigned : Z := modulus - 1.",
            "VernacDefinition",
            "21b03f32bc0f69a832e283770d979ca6a68caceb"
        ],
        [
            "Definition max_signed : Z := half_modulus - 1.",
            "VernacDefinition",
            "e7c3ca1603aebd3ea96b8510eb989a01b795e6f8"
        ],
        [
            "Definition min_signed : Z := - half_modulus.",
            "VernacDefinition",
            "51e678f743a9c435600e507537100b894b7cca17"
        ],
        [
            "Remark wordsize_pos: zwordsize > 0.",
            "VernacStartTheoremProof",
            "b5ff9419937fa277bc5f0bcbc75b2cc461ab4b9c"
        ],
        [
            "unfold zwordsize, wordsize.",
            "VernacExtend",
            "9d8d5ddeb779f6d653e8f3a02c10ad409398cc46"
        ],
        [
            "generalize WS.wordsize_not_zero.",
            "VernacExtend",
            "c4d8e0d5f77f91631966c06a578c4f0595d67109"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark modulus_power: modulus = two_p zwordsize.",
            "VernacStartTheoremProof",
            "aa17c884a84a6dc82ac3e4868c1c87caa3eb4c11"
        ],
        [
            "unfold modulus.",
            "VernacExtend",
            "202f368b6f08b873343d2b49e63dddcb32f23f66"
        ],
        [
            "apply two_power_nat_two_p.",
            "VernacExtend",
            "fd450fee46590be19750e6519114fa669e82f031"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark modulus_pos: modulus > 0.",
            "VernacStartTheoremProof",
            "0ba6fd5b4dfcd14a3348dc8ed713b4dabcb712b8"
        ],
        [
            "rewrite modulus_power.",
            "VernacExtend",
            "753142ad8669d3fd0251ba06a6ea2fc37e67244d"
        ],
        [
            "apply two_p_gt_ZERO.",
            "VernacExtend",
            "9690045ae69e536e22b7db6c37ee985732e7c4b7"
        ],
        [
            "generalize wordsize_pos; omega.",
            "VernacExtend",
            "1be2fda6bfa5aa53c9fdc4049e4df24e68556740"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Record int: Type := mkint { intval: Z; intrange: -1 < intval < modulus }.",
            "VernacInductive",
            "f42f08b4092c2da0daa7c2c87cea85b548fbe673"
        ],
        [
            "Fixpoint P_mod_two_p (p: positive) (n: nat) {struct n} : Z := match n with | O => 0 | S m => match p with | xH => 1 | xO q => Z.double (P_mod_two_p q m) | xI q => Z.succ_double (P_mod_two_p q m) end end.",
            "VernacFixpoint",
            "092f219449016a8d273d28ba20242b2aef70ba2d"
        ],
        [
            "Definition Z_mod_modulus (x: Z) : Z := match x with | Z0 => 0 | Zpos p => P_mod_two_p p wordsize | Zneg p => let r := P_mod_two_p p wordsize in if zeq r 0 then 0 else modulus - r end.",
            "VernacDefinition",
            "355239d4ea5174ca4b0c2254752310b426c90a69"
        ],
        [
            "Lemma P_mod_two_p_range: forall n p, 0 <= P_mod_two_p p n < two_power_nat n.",
            "VernacStartTheoremProof",
            "7ca0a311380172491b671649cdd9b968bc9d8f74"
        ],
        [
            "induction n; simpl; intros.",
            "VernacExtend",
            "f4638561e18037d1d0dd2a07d3cbcf68a41a03a8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite two_power_nat_O.",
            "VernacExtend",
            "7fe758160ea32bbd6842209920349dd5ce7c532a"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite two_power_nat_S.",
            "VernacExtend",
            "a9744f6bd9a8fe7c31c0f7154478ac3b90a12f1b"
        ],
        [
            "destruct p.",
            "VernacExtend",
            "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "generalize (IHn p).",
            "VernacExtend",
            "a05445d8fe7eb2944d0d21c735b20f466e687362"
        ],
        [
            "rewrite Z.succ_double_spec.",
            "VernacExtend",
            "8bc2717e7923d84312ac9000dbbbd737baebc29b"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "generalize (IHn p).",
            "VernacExtend",
            "a05445d8fe7eb2944d0d21c735b20f466e687362"
        ],
        [
            "rewrite Z.double_spec.",
            "VernacExtend",
            "91dfab94a8e039994fe27000daabec42e7754785"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "generalize (two_power_nat_pos n).",
            "VernacExtend",
            "0ba544cb0f284372dd11bdd2e82f5b029e731ed1"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma P_mod_two_p_eq: forall n p, P_mod_two_p p n = (Zpos p) mod (two_power_nat n).",
            "VernacStartTheoremProof",
            "b044d0781203e00fbc85736aca4b419e3757c831"
        ],
        [
            "assert (forall n p, exists y, Zpos p = y * two_power_nat n + P_mod_two_p p n).",
            "VernacExtend",
            "c41cf40398ac0730257dcb6f1afa0e1b150aa497"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "induction n; simpl; intros.",
            "VernacExtend",
            "f4638561e18037d1d0dd2a07d3cbcf68a41a03a8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite two_power_nat_O.",
            "VernacExtend",
            "7fe758160ea32bbd6842209920349dd5ce7c532a"
        ],
        [
            "exists (Zpos p).",
            "VernacExtend",
            "07d0c2ec2b6f8c4ff60294d3fd5131834e0a225a"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite two_power_nat_S.",
            "VernacExtend",
            "a9744f6bd9a8fe7c31c0f7154478ac3b90a12f1b"
        ],
        [
            "destruct p.",
            "VernacExtend",
            "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct (IHn p) as [y EQ].",
            "VernacExtend",
            "3c40f0a2ad6cfe0c57a246b0a46e4ff4206afe2d"
        ],
        [
            "exists y.",
            "VernacExtend",
            "1c06cb2466f48b6def24e74ddeda9956981c0a0a"
        ],
        [
            "change (Zpos p~1) with (2 * Zpos p + 1).",
            "VernacExtend",
            "3b32840e92933baa209d50a8243d1ab9f7653b25"
        ],
        [
            "rewrite EQ.",
            "VernacExtend",
            "359c5e196f83a6afbd9ede635bddbf545fd1eb82"
        ],
        [
            "rewrite Z.succ_double_spec.",
            "VernacExtend",
            "8bc2717e7923d84312ac9000dbbbd737baebc29b"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct (IHn p) as [y EQ].",
            "VernacExtend",
            "3c40f0a2ad6cfe0c57a246b0a46e4ff4206afe2d"
        ],
        [
            "exists y.",
            "VernacExtend",
            "1c06cb2466f48b6def24e74ddeda9956981c0a0a"
        ],
        [
            "change (Zpos p~0) with (2 * Zpos p).",
            "VernacExtend",
            "41a28864a30afbe38ce6cdbc4d5cbec8b95ee828"
        ],
        [
            "rewrite EQ.",
            "VernacExtend",
            "359c5e196f83a6afbd9ede635bddbf545fd1eb82"
        ],
        [
            "rewrite (Z.double_spec (P_mod_two_p p n)).",
            "VernacExtend",
            "e89eaf3e7e8d686664ee4a55d1031a552543eb7a"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exists 0; omega.",
            "VernacExtend",
            "1209a9479de25e5980c3dbb640c5a20268958fb6"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (H n p) as [y EQ].",
            "VernacExtend",
            "0ff3dd716dd9a8407e1682d65f0674f1074a795f"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Zmod_unique with y.",
            "VernacExtend",
            "21f9d6abaf331f317e407bf802f58b9c69953c96"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply P_mod_two_p_range.",
            "VernacExtend",
            "bf9fabbb532c13c3b76585feecc024245fd1ddc1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Z_mod_modulus_range: forall x, 0 <= Z_mod_modulus x < modulus.",
            "VernacStartTheoremProof",
            "78b69b055bae22d47440a8d01cbea3437a8703fc"
        ],
        [
            "intros; unfold Z_mod_modulus.",
            "VernacExtend",
            "ba05fcdc270af50f1fdf22558d2fd35c7d7f7d52"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "generalize modulus_pos; intuition.",
            "VernacExtend",
            "5ff24c33f16faa67e313db66af0c5a716ae18d40"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply P_mod_two_p_range.",
            "VernacExtend",
            "bf9fabbb532c13c3b76585feecc024245fd1ddc1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "set (r := P_mod_two_p p wordsize).",
            "VernacExtend",
            "b506f5f01a2afd26a66d09302922c377dc53fc3e"
        ],
        [
            "assert (0 <= r < modulus) by apply P_mod_two_p_range.",
            "VernacExtend",
            "76a31678cd16a36d78b68a6ab9dfd90e5a882c18"
        ],
        [
            "destruct (zeq r 0).",
            "VernacExtend",
            "70f086795f7be82ad063b2b7c6177d5bd62006d8"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "generalize modulus_pos; intuition.",
            "VernacExtend",
            "5ff24c33f16faa67e313db66af0c5a716ae18d40"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "Psatz.lia.",
            "VernacExtend",
            "fe608be87434e5b0f7a33812ad5aeb04513cceb2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Z_mod_modulus_range': forall x, -1 < Z_mod_modulus x < modulus.",
            "VernacStartTheoremProof",
            "9b30fd6762a0b04622e78820f9833218e2b752fd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (Z_mod_modulus_range x); intuition.",
            "VernacExtend",
            "9977e8254fe8e20763a10942cab63177f5f5b4f4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Z_mod_modulus_eq: forall x, Z_mod_modulus x = x mod modulus.",
            "VernacStartTheoremProof",
            "0d72e28cf1b538ca64ae0935e8b8f4cc83f88c65"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Z_mod_modulus.",
            "VernacExtend",
            "34b7be662ef2c380c9baae0de6c436ae1cb62ecd"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Zmod_0_l.",
            "VernacExtend",
            "c75295ca0dab7aebda3fc469f4f020b54a2037e0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply P_mod_two_p_eq.",
            "VernacExtend",
            "ac626715ef9638714d2028d8fe319ec77c2c7a96"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "generalize (P_mod_two_p_range wordsize p) (P_mod_two_p_eq wordsize p).",
            "VernacExtend",
            "1bbdf44cb98ee1d66062352c77b4f4fc1533f681"
        ],
        [
            "fold modulus.",
            "VernacExtend",
            "82d16181f0b954350f02a74ec336c69fd618891c"
        ],
        [
            "intros A B.",
            "VernacExtend",
            "f0fdd14fe43c412ab9e9cf2b93b27330098322c4"
        ],
        [
            "exploit (Z_div_mod_eq (Zpos p) modulus).",
            "VernacExtend",
            "edf138470c2d7d88cbb144cfd3950f7484d6c94a"
        ],
        [
            "apply modulus_pos.",
            "VernacExtend",
            "6f515e7167dc290e7550ae000eb950d9300d7cef"
        ],
        [
            "intros C.",
            "VernacExtend",
            "815d4ae757176a139c5c7aa2e053513c4e9e1c7c"
        ],
        [
            "set (q := Zpos p / modulus) in *.",
            "VernacExtend",
            "f486fb1e6f0b8a749ebc8f30e9829ab10dedde56"
        ],
        [
            "set (r := P_mod_two_p p wordsize) in *.",
            "VernacExtend",
            "39b68bd4db06989f6c069f0a81a610e32aac028e"
        ],
        [
            "rewrite <- B in C.",
            "VernacExtend",
            "861d9b69600397ae8db8752f0272fcf5a47f4401"
        ],
        [
            "change (Z.neg p) with (- (Z.pos p)).",
            "VernacExtend",
            "34f89f6f112091e224be6a0b017d6afa17bda6cc"
        ],
        [
            "destruct (zeq r 0).",
            "VernacExtend",
            "70f086795f7be82ad063b2b7c6177d5bd62006d8"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Zmod_unique with (-q).",
            "VernacExtend",
            "53851ae0aaa0f9fb56b2cde7f9ef93ed94bbc798"
        ],
        [
            "rewrite C; rewrite e.",
            "VernacExtend",
            "f5af10f4265d3a9001c31e94ea405cdb435fd276"
        ],
        [
            "Psatz.lia.",
            "VernacExtend",
            "fe608be87434e5b0f7a33812ad5aeb04513cceb2"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Zmod_unique with (-q - 1).",
            "VernacExtend",
            "f33b700af01cfbef05d08626f72637c8f876c8dc"
        ],
        [
            "rewrite C.",
            "VernacExtend",
            "6522c35db68091b070ccdd4e87749a3d6da8e69d"
        ],
        [
            "Psatz.lia.",
            "VernacExtend",
            "fe608be87434e5b0f7a33812ad5aeb04513cceb2"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition unsigned (n: int) : Z := intval n.",
            "VernacDefinition",
            "85577016bb71fbba97de7a2825217f9e71d89350"
        ],
        [
            "Definition signed (n: int) : Z := let x := unsigned n in if zlt x half_modulus then x else x - modulus.",
            "VernacDefinition",
            "07498969b9a990b649828ed80f8dab828ddc7852"
        ],
        [
            "Definition repr (x: Z) : int := mkint (Z_mod_modulus x) (Z_mod_modulus_range' x).",
            "VernacDefinition",
            "ccfcf9194cedffda699c78a0bd38165e9c2a926b"
        ],
        [
            "Definition zero := repr 0.",
            "VernacDefinition",
            "a2086229c880761b2bb22de341fca0e2dc36d288"
        ],
        [
            "Definition one := repr 1.",
            "VernacDefinition",
            "87a8751023f3de0129caaef13da2b671f7525af3"
        ],
        [
            "Definition mone := repr (-1).",
            "VernacDefinition",
            "420610c576bfc28b0d43bfd1b9f2a7c69d528314"
        ],
        [
            "Definition iwordsize := repr zwordsize.",
            "VernacDefinition",
            "1749a94b15f950676843dd1324c389fe88d56ecc"
        ],
        [
            "Lemma mkint_eq: forall x y Px Py, x = y -> mkint x Px = mkint y Py.",
            "VernacStartTheoremProof",
            "3e854b08d9a754c7f1539494bb5d439d9016450c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "subst y.",
            "VernacExtend",
            "f056a00b852bc549d1b8bb21d500c90d8ff37bf8"
        ],
        [
            "assert (forall (n m: Z) (P1 P2: n < m), P1 = P2).",
            "VernacExtend",
            "54b5f71874d82a4b5528cc1c780692b6143e1227"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold Z.lt; intros.",
            "VernacExtend",
            "54e54aad13dc632f84515a270c767e552dfbdc14"
        ],
        [
            "apply eq_proofs_unicity.",
            "VernacExtend",
            "77d84e6f924174693a7f4eff3520df946c2d75d8"
        ],
        [
            "intros c1 c2.",
            "VernacExtend",
            "099d05b9b904ddc79603e6867f9ebe2553f07f00"
        ],
        [
            "destruct c1; destruct c2; (left; reflexivity) || (right; congruence).",
            "VernacExtend",
            "0dfe9d1a869f8613f7bf7a56a1d92783161150ed"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct Px as [Px1 Px2].",
            "VernacExtend",
            "2898edf49828ef47251e67ea3964d23d12caa6ce"
        ],
        [
            "destruct Py as [Py1 Py2].",
            "VernacExtend",
            "a03ca7e1c9e5d575ba90ddf77351f411695eaed0"
        ],
        [
            "rewrite (H _ _ Px1 Py1).",
            "VernacExtend",
            "5db9ffdbc6bae20dc964fed0fa679ad6adb33351"
        ],
        [
            "rewrite (H _ _ Px2 Py2).",
            "VernacExtend",
            "dc0de77401b545429192a021d5ca39656aaf93a2"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_dec: forall (x y: int), {x = y} + {x <> y}.",
            "VernacStartTheoremProof",
            "45197a75e5c7c8e5449c3cb2aac90ee4cb6fdacf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct x; destruct y.",
            "VernacExtend",
            "66b6bbed80f19a7ddf75313e3d1e4cc780d5f91f"
        ],
        [
            "destruct (zeq intval0 intval1).",
            "VernacExtend",
            "c3147eb4821303c0b35bf78f3c29f3baeaf1e68f"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply mkint_eq.",
            "VernacExtend",
            "be81a2a6894844a023a9bb5122ffed586a6d04fa"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "red; intro.",
            "VernacExtend",
            "12e00b6ab6f8834b6f81959ca42843abaa311f37"
        ],
        [
            "injection H.",
            "VernacExtend",
            "0b4168b75c87f7c322bfb81e661f04001b54052d"
        ],
        [
            "exact n.",
            "VernacExtend",
            "568b72077ac652af70b00a425fbac2a78c603619"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition eq (x y: int) : bool := if zeq (unsigned x) (unsigned y) then true else false.",
            "VernacDefinition",
            "8e7127fd46c527886a6cf8eaad93f6c484d484ea"
        ],
        [
            "Definition lt (x y: int) : bool := if zlt (signed x) (signed y) then true else false.",
            "VernacDefinition",
            "9bfdcf0845d72aef606adfaeaeb207814c0c1c26"
        ],
        [
            "Definition ltu (x y: int) : bool := if zlt (unsigned x) (unsigned y) then true else false.",
            "VernacDefinition",
            "d5b0ffcc9cdb6e0950eac57e6137b1e2c771c423"
        ],
        [
            "Definition neg (x: int) : int := repr (- unsigned x).",
            "VernacDefinition",
            "760b7855d0284da3f40976c8ba4049db206318c7"
        ],
        [
            "Definition add (x y: int) : int := repr (unsigned x + unsigned y).",
            "VernacDefinition",
            "8cfc080cd438437b6333bc7be4cd54a65df613f4"
        ],
        [
            "Definition sub (x y: int) : int := repr (unsigned x - unsigned y).",
            "VernacDefinition",
            "c267df89e6c569c3f37efddc711f0798fa0d6090"
        ],
        [
            "Definition mul (x y: int) : int := repr (unsigned x * unsigned y).",
            "VernacDefinition",
            "a5add8b0ede3dc8a30f7c7d0d997663f553b2ae3"
        ],
        [
            "Definition divs (x y: int) : int := repr (Z.quot (signed x) (signed y)).",
            "VernacDefinition",
            "f15648f775cc78512b80552c36f089f07f8f4313"
        ],
        [
            "Definition mods (x y: int) : int := repr (Z.rem (signed x) (signed y)).",
            "VernacDefinition",
            "030938fab6e5c30161ee5148cfad46c00e1161fc"
        ],
        [
            "Definition divu (x y: int) : int := repr (unsigned x / unsigned y).",
            "VernacDefinition",
            "b0c0173eb5819d93cf0316ef90f77714b714f73b"
        ],
        [
            "Definition modu (x y: int) : int := repr ((unsigned x) mod (unsigned y)).",
            "VernacDefinition",
            "515fa0222cf43e35e538d14093faabb80d25c745"
        ],
        [
            "Definition and (x y: int): int := repr (Z.land (unsigned x) (unsigned y)).",
            "VernacDefinition",
            "e46b1bd79083c052383df1be17ea3dd8caac6618"
        ],
        [
            "Definition or (x y: int): int := repr (Z.lor (unsigned x) (unsigned y)).",
            "VernacDefinition",
            "56f44958c7c07c299ba9218813b5ef720f9c3fd5"
        ],
        [
            "Definition xor (x y: int) : int := repr (Z.lxor (unsigned x) (unsigned y)).",
            "VernacDefinition",
            "816c77c7cf6012051906a7a60219c57ae0029c27"
        ],
        [
            "Definition not (x: int) : int := xor x mone.",
            "VernacDefinition",
            "8a709788d4272c8b8373cc184bf09de401d703d1"
        ],
        [
            "Definition shl (x y: int): int := repr (Z.shiftl (unsigned x) (unsigned y)).",
            "VernacDefinition",
            "f7a1bc38d920d71932dc49d7188a6b6bda2713d5"
        ],
        [
            "Definition shru (x y: int): int := repr (Z.shiftr (unsigned x) (unsigned y)).",
            "VernacDefinition",
            "f1411da82197c634848d471fd8f2223d95559907"
        ],
        [
            "Definition shr (x y: int): int := repr (Z.shiftr (signed x) (unsigned y)).",
            "VernacDefinition",
            "a4ff4cc0a43626adde0b764feb3b4cf9a6db65aa"
        ],
        [
            "Definition rol (x y: int) : int := let n := (unsigned y) mod zwordsize in repr (Z.lor (Z.shiftl (unsigned x) n) (Z.shiftr (unsigned x) (zwordsize - n))).",
            "VernacDefinition",
            "b179325bc9de564e6b93ef5490ce11e1defef442"
        ],
        [
            "Definition ror (x y: int) : int := let n := (unsigned y) mod zwordsize in repr (Z.lor (Z.shiftr (unsigned x) n) (Z.shiftl (unsigned x) (zwordsize - n))).",
            "VernacDefinition",
            "07595ddf91c6f5f0e930a7d5b674672874f973b6"
        ],
        [
            "Definition rolm (x a m: int): int := and (rol x a) m.",
            "VernacDefinition",
            "aa793d9f4f3dd8d8fd1698aba6ee4d834fa6aa9a"
        ],
        [
            "Definition shrx (x y: int): int := divs x (shl one y).",
            "VernacDefinition",
            "aeebff47611c1beb5ccb3323a54fc03d667604dd"
        ],
        [
            "Definition mulhu (x y: int): int := repr ((unsigned x * unsigned y) / modulus).",
            "VernacDefinition",
            "3c17add4929d0b72febf93efa2efd25ed36496d6"
        ],
        [
            "Definition mulhs (x y: int): int := repr ((signed x * signed y) / modulus).",
            "VernacDefinition",
            "bf6e5ecd7ae4b3536cecc8ae9a3b7395fe869ad5"
        ],
        [
            "Definition negative (x: int): int := if lt x zero then one else zero.",
            "VernacDefinition",
            "fd972afbfb5b23def41b9003dd5885abc3b0dd47"
        ],
        [
            "Definition add_carry (x y cin: int): int := if zlt (unsigned x + unsigned y + unsigned cin) modulus then zero else one.",
            "VernacDefinition",
            "226fededd32522db808c8f0acd032200a573409b"
        ],
        [
            "Definition add_overflow (x y cin: int): int := let s := signed x + signed y + signed cin in if zle min_signed s && zle s max_signed then zero else one.",
            "VernacDefinition",
            "8ea423ae49420ba2c357e2dedf56c3a02d80fdb4"
        ],
        [
            "Definition sub_borrow (x y bin: int): int := if zlt (unsigned x - unsigned y - unsigned bin) 0 then one else zero.",
            "VernacDefinition",
            "2130f1fc93f00aa436b4c308e9e8ac64a7e785ee"
        ],
        [
            "Definition sub_overflow (x y bin: int): int := let s := signed x - signed y - signed bin in if zle min_signed s && zle s max_signed then zero else one.",
            "VernacDefinition",
            "36bc56af25aa3430d0eff26020b89d1916dbf638"
        ],
        [
            "Definition shr_carry (x y: int) : int := if lt x zero && negb (eq (and x (sub (shl one y) one)) zero) then one else zero.",
            "VernacDefinition",
            "cccf3f6eb48386da5a0983ef5ab05119dfbe18cb"
        ],
        [
            "Definition Zshiftin (b: bool) (x: Z) : Z := if b then Z.succ_double x else Z.double x.",
            "VernacDefinition",
            "0328de0449ee1b9acb20f13730703a7d73814ed0"
        ],
        [
            "Definition Zzero_ext (n: Z) (x: Z) : Z := Z.iter n (fun rec x => Zshiftin (Z.odd x) (rec (Z.div2 x))) (fun x => 0) x.",
            "VernacDefinition",
            "4d3618453107ad148e2b5fc8b7c9b5ad3f845236"
        ],
        [
            "Definition Zsign_ext (n: Z) (x: Z) : Z := Z.iter (Z.pred n) (fun rec x => Zshiftin (Z.odd x) (rec (Z.div2 x))) (fun x => if Z.odd x then -1 else 0) x.",
            "VernacDefinition",
            "4331260f9302158aece433c714640b12f094aa89"
        ],
        [
            "Definition zero_ext (n: Z) (x: int) : int := repr (Zzero_ext n (unsigned x)).",
            "VernacDefinition",
            "e65dbe66e334493eee4f00a6d90bf1dc3b693c68"
        ],
        [
            "Definition sign_ext (n: Z) (x: int) : int := repr (Zsign_ext n (unsigned x)).",
            "VernacDefinition",
            "d6590afedb1e5d3e6aa27773b448f28bcd8eea7c"
        ],
        [
            "Fixpoint Z_one_bits (n: nat) (x: Z) (i: Z) {struct n}: list Z := match n with | O => nil | S m => if Z.odd x then i :: Z_one_bits m (Z.div2 x) (i+1) else Z_one_bits m (Z.div2 x) (i+1) end.",
            "VernacFixpoint",
            "922b12a54b13374a5b17b51f68c7eb1a5021d959"
        ],
        [
            "Definition one_bits (x: int) : list int := List.map repr (Z_one_bits wordsize (unsigned x) 0).",
            "VernacDefinition",
            "d4a4e0b44eefef8db06fbf62d998fa6fe48d67f5"
        ],
        [
            "Definition is_power2 (x: int) : option int := match Z_one_bits wordsize (unsigned x) 0 with | i :: nil => Some (repr i) | _ => None end.",
            "VernacDefinition",
            "d96f82c0efa37b890545f8d9dd7a41206f6b44d7"
        ],
        [
            "Definition cmp (c: comparison) (x y: int) : bool := match c with | Ceq => eq x y | Cne => negb (eq x y) | Clt => lt x y | Cle => negb (lt y x) | Cgt => lt y x | Cge => negb (lt x y) end.",
            "VernacDefinition",
            "d0d3170e2164a4f9136a9c04ee702fbb63de009d"
        ],
        [
            "Definition cmpu (c: comparison) (x y: int) : bool := match c with | Ceq => eq x y | Cne => negb (eq x y) | Clt => ltu x y | Cle => negb (ltu y x) | Cgt => ltu y x | Cge => negb (ltu x y) end.",
            "VernacDefinition",
            "8ff655dc331b16832c65fdeb44d4ae5a02d2f905"
        ],
        [
            "Definition is_false (x: int) : Prop := x = zero.",
            "VernacDefinition",
            "c5cc9f56f85e9352514dcfc65a0a6334c3cd0d04"
        ],
        [
            "Definition is_true (x: int) : Prop := x <> zero.",
            "VernacDefinition",
            "9fc397304aa48b8da1e1028575466aa03afb7ac8"
        ],
        [
            "Definition notbool (x: int) : int := if eq x zero then one else zero.",
            "VernacDefinition",
            "039a37ca915b5afed696f9cf56daf61b3dcda78a"
        ],
        [
            "Definition divmodu2 (nhi nlo: int) (d: int) : option (int * int) := if eq_dec d zero then None else (let (q, r) := Z.div_eucl (unsigned nhi * modulus + unsigned nlo) (unsigned d) in if zle q max_unsigned then Some(repr q, repr r) else None).",
            "VernacDefinition",
            "3fc182eadb9fc254cda092758330fb7d17704e31"
        ],
        [
            "Definition divmods2 (nhi nlo: int) (d: int) : option (int * int) := if eq_dec d zero then None else (let (q, r) := Z.quotrem (signed nhi * modulus + unsigned nlo) (signed d) in if zle min_signed q && zle q max_signed then Some(repr q, repr r) else None).",
            "VernacDefinition",
            "1d6c736f65b8f97362f1645f06c0679c4e3f1cbc"
        ],
        [
            "Remark half_modulus_power: half_modulus = two_p (zwordsize - 1).",
            "VernacStartTheoremProof",
            "1bfe7722145b2815c1db97994f8bdfe6f2ef05ec"
        ],
        [
            "unfold half_modulus.",
            "VernacExtend",
            "a08d844ba6d0159d571eaa85c14e792fec06814d"
        ],
        [
            "rewrite modulus_power.",
            "VernacExtend",
            "753142ad8669d3fd0251ba06a6ea2fc37e67244d"
        ],
        [
            "set (ws1 := zwordsize - 1).",
            "VernacExtend",
            "71c3d836e85e35efd566df30e34fcd9b3d0a5c06"
        ],
        [
            "replace (zwordsize) with (Z.succ ws1).",
            "VernacExtend",
            "855cb5b11fb05b7d5226a8db7f6af77589356bd2"
        ],
        [
            "rewrite two_p_S.",
            "VernacExtend",
            "a29f0291f2a8fd39cf3e3e3483ed64b13d888682"
        ],
        [
            "rewrite Z.mul_comm.",
            "VernacExtend",
            "088699fe7f894ededd3c93ab3a27f9d105f1ab84"
        ],
        [
            "apply Z_div_mult.",
            "VernacExtend",
            "ddb95f8aa9157f54b8695d0648562ebfc8b6ebce"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "unfold ws1.",
            "VernacExtend",
            "ab41ef1aa0ec5579140c966bf0ed359d8f627f9e"
        ],
        [
            "generalize wordsize_pos; omega.",
            "VernacExtend",
            "1be2fda6bfa5aa53c9fdc4049e4df24e68556740"
        ],
        [
            "unfold ws1.",
            "VernacExtend",
            "ab41ef1aa0ec5579140c966bf0ed359d8f627f9e"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark half_modulus_modulus: modulus = 2 * half_modulus.",
            "VernacStartTheoremProof",
            "8c98284347c3ee1472fefcf7d1bdef6d9f12b42c"
        ],
        [
            "rewrite half_modulus_power.",
            "VernacExtend",
            "fd8ccafd38bbc04cf02d63bcd61c884d7a7470f8"
        ],
        [
            "rewrite modulus_power.",
            "VernacExtend",
            "753142ad8669d3fd0251ba06a6ea2fc37e67244d"
        ],
        [
            "rewrite <- two_p_S.",
            "VernacExtend",
            "8eb7240a71b2161fc95c2193e4ff099221db490e"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "generalize wordsize_pos; omega.",
            "VernacExtend",
            "1be2fda6bfa5aa53c9fdc4049e4df24e68556740"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark half_modulus_pos: half_modulus > 0.",
            "VernacStartTheoremProof",
            "05c14671016b4e0178bf378108ce8e6fecb6733f"
        ],
        [
            "rewrite half_modulus_power.",
            "VernacExtend",
            "fd8ccafd38bbc04cf02d63bcd61c884d7a7470f8"
        ],
        [
            "apply two_p_gt_ZERO.",
            "VernacExtend",
            "9690045ae69e536e22b7db6c37ee985732e7c4b7"
        ],
        [
            "generalize wordsize_pos; omega.",
            "VernacExtend",
            "1be2fda6bfa5aa53c9fdc4049e4df24e68556740"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark min_signed_neg: min_signed < 0.",
            "VernacStartTheoremProof",
            "b4856f0dde51703fc320c17a74eef56bf9f4cfb4"
        ],
        [
            "unfold min_signed.",
            "VernacExtend",
            "1af507e43f6daf88f50e8ed6e80384764001842c"
        ],
        [
            "generalize half_modulus_pos.",
            "VernacExtend",
            "01cc2bf737221379d01a92026ffebe473cea8b29"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark max_signed_pos: max_signed >= 0.",
            "VernacStartTheoremProof",
            "2afd7bccdf133fcea70612de57d3c4372947257a"
        ],
        [
            "unfold max_signed.",
            "VernacExtend",
            "f8dfc169a274f28f22cf16df03cc4eb70fbb62d5"
        ],
        [
            "generalize half_modulus_pos.",
            "VernacExtend",
            "01cc2bf737221379d01a92026ffebe473cea8b29"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark wordsize_max_unsigned: zwordsize <= max_unsigned.",
            "VernacStartTheoremProof",
            "e04777fd4370a142e5d0d4b5f061c27156a696ef"
        ],
        [
            "assert (zwordsize < modulus).",
            "VernacExtend",
            "2ddaae3b68df2c0238cb89a010b9ba72afba41a5"
        ],
        [
            "rewrite modulus_power.",
            "VernacExtend",
            "753142ad8669d3fd0251ba06a6ea2fc37e67244d"
        ],
        [
            "apply two_p_strict.",
            "VernacExtend",
            "e1297555b81fb127bf1d6535034491424fa2db14"
        ],
        [
            "generalize wordsize_pos.",
            "VernacExtend",
            "2cb416b61b49a53184eb1521ed15ff122a244b0b"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "unfold max_unsigned.",
            "VernacExtend",
            "36f5add4f60c9b122a3b68fcbd2bef84e6e0d135"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark two_wordsize_max_unsigned: 2 * zwordsize - 1 <= max_unsigned.",
            "VernacStartTheoremProof",
            "d9fb00a4164448abfafc2eb6c13dad6b180cbf0a"
        ],
        [
            "assert (2 * zwordsize - 1 < modulus).",
            "VernacExtend",
            "9ff266f83e8ee05b7a0c40aaa86a461455ae932e"
        ],
        [
            "rewrite modulus_power.",
            "VernacExtend",
            "753142ad8669d3fd0251ba06a6ea2fc37e67244d"
        ],
        [
            "apply two_p_strict_2.",
            "VernacExtend",
            "021f21eae4bad151646330f19009a6b5c84c8f68"
        ],
        [
            "generalize wordsize_pos; omega.",
            "VernacExtend",
            "1be2fda6bfa5aa53c9fdc4049e4df24e68556740"
        ],
        [
            "unfold max_unsigned; omega.",
            "VernacExtend",
            "8050b2acbf1f11f7b1479a8f25e2549120cc659f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark max_signed_unsigned: max_signed < max_unsigned.",
            "VernacStartTheoremProof",
            "7e964d4ce64482b3e815ab2a18a1972dd22e36ee"
        ],
        [
            "unfold max_signed, max_unsigned.",
            "VernacExtend",
            "fb7cd31bc0408ded569e02ed737cf6ebc76ca48a"
        ],
        [
            "rewrite half_modulus_modulus.",
            "VernacExtend",
            "4f1be9507367745c91dc7a8dae1c9475380b67ad"
        ],
        [
            "generalize half_modulus_pos.",
            "VernacExtend",
            "01cc2bf737221379d01a92026ffebe473cea8b29"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unsigned_repr_eq: forall x, unsigned (repr x) = Z.modulo x modulus.",
            "VernacStartTheoremProof",
            "50f10d834e602dd0a48031e34dbc7845e259a061"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Z_mod_modulus_eq.",
            "VernacExtend",
            "c28628052ff0f6ebd00817a123acef4ae56c52a1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma signed_repr_eq: forall x, signed (repr x) = if zlt (Z.modulo x modulus) half_modulus then Z.modulo x modulus else Z.modulo x modulus - modulus.",
            "VernacStartTheoremProof",
            "026c0b825d3b63456650208b7e12aede0e99f2ad"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold signed.",
            "VernacExtend",
            "f99b13683b7fbccb713276bdf12a56c47fabc924"
        ],
        [
            "rewrite unsigned_repr_eq.",
            "VernacExtend",
            "4cdb0c1f390fe84b3a9c8bac49c0b5813452743a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section EQ_MODULO.",
            "VernacBeginSection",
            "cee10e6265dcaae9a1a5bad3fad5f955b7fa6d43"
        ],
        [
            "Variable modul: Z.",
            "VernacAssumption",
            "e82d0d2133e3e4ef5973c2284e102c07d4242b03"
        ],
        [
            "Hypothesis modul_pos: modul > 0.",
            "VernacAssumption",
            "d7afad708d182926c2949f6ef361b68c9407195e"
        ],
        [
            "Definition eqmod (x y: Z) : Prop := exists k, x = k * modul + y.",
            "VernacDefinition",
            "181bb2de9d5d70811e6f3525923d72722185b8a4"
        ],
        [
            "Lemma eqmod_refl: forall x, eqmod x x.",
            "VernacStartTheoremProof",
            "0a3cc8aa20aaf59fbfbc80cedc82a19bf5ae6c17"
        ],
        [
            "intros; red.",
            "VernacExtend",
            "3393be941ed81b8e4a79e80db41d01425f14b126"
        ],
        [
            "exists 0.",
            "VernacExtend",
            "b12b8acd7a1526ef0683513a127984e4864502d9"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqmod_refl2: forall x y, x = y -> eqmod x y.",
            "VernacStartTheoremProof",
            "f297ea0d37359f7be48b25a17f77e8b2753b793b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "subst y.",
            "VernacExtend",
            "f056a00b852bc549d1b8bb21d500c90d8ff37bf8"
        ],
        [
            "apply eqmod_refl.",
            "VernacExtend",
            "dd13026dc2e4aa9828d8fe4d8ad9645368260127"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqmod_sym: forall x y, eqmod x y -> eqmod y x.",
            "VernacStartTheoremProof",
            "c1d71fd155547869550d605efc545ca8748badf9"
        ],
        [
            "intros x y [k EQ]; red.",
            "VernacExtend",
            "c456195a8ff2f98ff5025a3367e55f2b031ddbcd"
        ],
        [
            "exists (-k).",
            "VernacExtend",
            "9e3844ecc47f2bb50cba4903f29bb1005189e7ed"
        ],
        [
            "subst x.",
            "VernacExtend",
            "76c28b0a6a4a7c1568fa30e26ee411c5e5d54968"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqmod_trans: forall x y z, eqmod x y -> eqmod y z -> eqmod x z.",
            "VernacStartTheoremProof",
            "c1b3521457115452f14ac7520fb615ecdaecd0cd"
        ],
        [
            "intros x y z [k1 EQ1] [k2 EQ2]; red.",
            "VernacExtend",
            "f9788afdb60ff9df5944421eebcf690965f6e97c"
        ],
        [
            "exists (k1 + k2).",
            "VernacExtend",
            "0fe601b6c51e8a29cd52c635e334b6b857318714"
        ],
        [
            "subst x; subst y.",
            "VernacExtend",
            "77fe7f47f4b796321adc8c0b08f617a66de5b867"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqmod_small_eq: forall x y, eqmod x y -> 0 <= x < modul -> 0 <= y < modul -> x = y.",
            "VernacStartTheoremProof",
            "720313787804c7f95c7f3f2019061b97027e6854"
        ],
        [
            "intros x y [k EQ] I1 I2.",
            "VernacExtend",
            "eaddd6c78bb07f27087537958eddfe58178b0000"
        ],
        [
            "generalize (Zdiv_unique _ _ _ _ EQ I2).",
            "VernacExtend",
            "3f0b5cc495c25369e55a1fd33aa278a636d72a82"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite (Zdiv_small x modul I1) in H.",
            "VernacExtend",
            "46287fbb52526a6808cb6f89d0829e5282b548aa"
        ],
        [
            "subst k.",
            "VernacExtend",
            "1b57ef870be21b34849e5c815396643cf7b2e820"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqmod_mod_eq: forall x y, eqmod x y -> x mod modul = y mod modul.",
            "VernacStartTheoremProof",
            "6b007c60be6b27e70a6bbe19d8c73398e97dcfe0"
        ],
        [
            "intros x y [k EQ].",
            "VernacExtend",
            "5fd5a719b4c9129d22d0aa1228663128159eb55f"
        ],
        [
            "subst x.",
            "VernacExtend",
            "76c28b0a6a4a7c1568fa30e26ee411c5e5d54968"
        ],
        [
            "rewrite Z.add_comm.",
            "VernacExtend",
            "cb1af9408ed4e4ab13bf29109365368cad89a879"
        ],
        [
            "apply Z_mod_plus.",
            "VernacExtend",
            "b657bc5f35381a86e6c2e9a660fcde2bf16214d9"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqmod_mod: forall x, eqmod x (x mod modul).",
            "VernacStartTheoremProof",
            "f63bca6326379c4193a756b9510fb40fcb6909a0"
        ],
        [
            "intros; red.",
            "VernacExtend",
            "3393be941ed81b8e4a79e80db41d01425f14b126"
        ],
        [
            "exists (x / modul).",
            "VernacExtend",
            "b5b10c4862b76d367e7029bb48b5c55c9e0e7658"
        ],
        [
            "rewrite Z.mul_comm.",
            "VernacExtend",
            "088699fe7f894ededd3c93ab3a27f9d105f1ab84"
        ],
        [
            "apply Z_div_mod_eq.",
            "VernacExtend",
            "c7c7b8c0b3f502009e6f882787bdcc803640e476"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqmod_add: forall a b c d, eqmod a b -> eqmod c d -> eqmod (a + c) (b + d).",
            "VernacStartTheoremProof",
            "4962f56e68f6296c540f69dd1562350ca6dbb8ab"
        ],
        [
            "intros a b c d [k1 EQ1] [k2 EQ2]; red.",
            "VernacExtend",
            "ae1bf0b9531f9db8b8066ae97d1ac0c50ac87804"
        ],
        [
            "subst a; subst c.",
            "VernacExtend",
            "ab15cac4ca1b7343d0eb71896823437aea4bbe80"
        ],
        [
            "exists (k1 + k2).",
            "VernacExtend",
            "0fe601b6c51e8a29cd52c635e334b6b857318714"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqmod_neg: forall x y, eqmod x y -> eqmod (-x) (-y).",
            "VernacStartTheoremProof",
            "366e44aae2ab2622597939efda6b7ad684a74118"
        ],
        [
            "intros x y [k EQ]; red.",
            "VernacExtend",
            "c456195a8ff2f98ff5025a3367e55f2b031ddbcd"
        ],
        [
            "exists (-k).",
            "VernacExtend",
            "9e3844ecc47f2bb50cba4903f29bb1005189e7ed"
        ],
        [
            "rewrite EQ.",
            "VernacExtend",
            "359c5e196f83a6afbd9ede635bddbf545fd1eb82"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqmod_sub: forall a b c d, eqmod a b -> eqmod c d -> eqmod (a - c) (b - d).",
            "VernacStartTheoremProof",
            "c9cbdde5106150beed61f5f9f7a3905ac5a39614"
        ],
        [
            "intros a b c d [k1 EQ1] [k2 EQ2]; red.",
            "VernacExtend",
            "ae1bf0b9531f9db8b8066ae97d1ac0c50ac87804"
        ],
        [
            "subst a; subst c.",
            "VernacExtend",
            "ab15cac4ca1b7343d0eb71896823437aea4bbe80"
        ],
        [
            "exists (k1 - k2).",
            "VernacExtend",
            "b0d222f3ffd16c6cc1992e641ae29af13e6c7088"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqmod_mult: forall a b c d, eqmod a c -> eqmod b d -> eqmod (a * b) (c * d).",
            "VernacStartTheoremProof",
            "280d6bdc94b17b921e066334f60fd6ea06d56c18"
        ],
        [
            "intros a b c d [k1 EQ1] [k2 EQ2]; red.",
            "VernacExtend",
            "ae1bf0b9531f9db8b8066ae97d1ac0c50ac87804"
        ],
        [
            "subst a; subst b.",
            "VernacExtend",
            "aa98f710bde7013896d64bac4e3e2d2e990f2218"
        ],
        [
            "exists (k1 * k2 * modul + c * k2 + k1 * d).",
            "VernacExtend",
            "21dcbeee3af66b825fddda0848ea9ee6ccab5b68"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End EQ_MODULO.",
            "VernacEndSegment",
            "5b008e0a41d3b3ef931d75468984826043962c5f"
        ],
        [
            "Lemma eqmod_divides: forall n m x y, eqmod n x y -> Z.divide m n -> eqmod m x y.",
            "VernacStartTheoremProof",
            "433a7086d5cdbda38453c0984c0088c06e7c0c42"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H as [k1 EQ1].",
            "VernacExtend",
            "ae8a53ad1944c0d40101d32245ea4110ff1b461b"
        ],
        [
            "destruct H0 as [k2 EQ2].",
            "VernacExtend",
            "05d0bf0f0bf5c4a3ff4b1fac73a54ceed6482c71"
        ],
        [
            "exists (k1*k2).",
            "VernacExtend",
            "53fd94a50fbb59d85c0281daaa3cb6e940e31722"
        ],
        [
            "rewrite <- Z.mul_assoc.",
            "VernacExtend",
            "a482030af4b7eacc2f9923f251ef4410ebcc85f5"
        ],
        [
            "rewrite <- EQ2.",
            "VernacExtend",
            "681d28912b80a73973932919e02efd4f68e2a471"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve modulus_pos: ints.",
            "VernacHints",
            "b91e07c1e1540fa37e0aa763c6ba3e8c34c51e02"
        ],
        [
            "Definition eqm := eqmod modulus.",
            "VernacDefinition",
            "0977fcbe0226a3a09cb414633ffc556cbd0f43a5"
        ],
        [
            "Lemma eqm_refl: forall x, eqm x x.",
            "VernacStartTheoremProof",
            "4e3d61733195199aaaca76cefe4abefd01b18124"
        ],
        [
            "Proof (eqmod_refl modulus).",
            "VernacExactProof",
            "80973879581c3cf0d4a3d42d994bfe5fed8db425"
        ],
        [
            "Hint Resolve eqm_refl: ints.",
            "VernacHints",
            "a04242dd8012f458e4db5d97a6d0e0bdd37c41ec"
        ],
        [
            "Lemma eqm_refl2: forall x y, x = y -> eqm x y.",
            "VernacStartTheoremProof",
            "089b6ec554a83dde227e85f69af20210a94975d0"
        ],
        [
            "Proof (eqmod_refl2 modulus).",
            "VernacExactProof",
            "2b39e63dc3901d556ef5ad9a08ab2a7ff0e02953"
        ],
        [
            "Hint Resolve eqm_refl2: ints.",
            "VernacHints",
            "383baba2d0e2246759691b54ca092e368a4df1dc"
        ],
        [
            "Lemma eqm_sym: forall x y, eqm x y -> eqm y x.",
            "VernacStartTheoremProof",
            "7c7c9acec9fdd89f2481e2640f2713d188bb2a2c"
        ],
        [
            "Proof (eqmod_sym modulus).",
            "VernacExactProof",
            "db6e9559b13c302644713be9bf2551be59042295"
        ],
        [
            "Hint Resolve eqm_sym: ints.",
            "VernacHints",
            "3600cf6df84f4c27fbaa18dcd59e708dbbee37cf"
        ],
        [
            "Lemma eqm_trans: forall x y z, eqm x y -> eqm y z -> eqm x z.",
            "VernacStartTheoremProof",
            "bc38b70c8ca8e017e7356839d4656770e7294409"
        ],
        [
            "Proof (eqmod_trans modulus).",
            "VernacExactProof",
            "bc2b78004101524b72ae216562f708b4d3966e56"
        ],
        [
            "Hint Resolve eqm_trans: ints.",
            "VernacHints",
            "3472d174ea088b88fdd628e77c7f804380d72902"
        ],
        [
            "Lemma eqm_small_eq: forall x y, eqm x y -> 0 <= x < modulus -> 0 <= y < modulus -> x = y.",
            "VernacStartTheoremProof",
            "8718276a6a41511a6a00eb10b381a4ace7a26037"
        ],
        [
            "Proof (eqmod_small_eq modulus).",
            "VernacExactProof",
            "7ce8a137857b4acdf996c03a659be9767f146b96"
        ],
        [
            "Hint Resolve eqm_small_eq: ints.",
            "VernacHints",
            "05f110ba8f6ee7cce40024eb79c42c916fc446b5"
        ],
        [
            "Lemma eqm_add: forall a b c d, eqm a b -> eqm c d -> eqm (a + c) (b + d).",
            "VernacStartTheoremProof",
            "55013d6db8f7b6c124df650ee50d5e39438086af"
        ],
        [
            "Proof (eqmod_add modulus).",
            "VernacExactProof",
            "6472976f678fcb5a98da062b350cf596b107b00a"
        ],
        [
            "Hint Resolve eqm_add: ints.",
            "VernacHints",
            "20a747b46b7cdbb53ce0a74a5712c1ef68aca860"
        ],
        [
            "Lemma eqm_neg: forall x y, eqm x y -> eqm (-x) (-y).",
            "VernacStartTheoremProof",
            "1b4bcac38e20c5f64953bd01afb8fef1c7069a96"
        ],
        [
            "Proof (eqmod_neg modulus).",
            "VernacExactProof",
            "e18010ee08bd52c2a307a69cf2b5f9c44f7a01bd"
        ],
        [
            "Hint Resolve eqm_neg: ints.",
            "VernacHints",
            "3744f54984721245a96f9df01df62490084d574a"
        ],
        [
            "Lemma eqm_sub: forall a b c d, eqm a b -> eqm c d -> eqm (a - c) (b - d).",
            "VernacStartTheoremProof",
            "57ca920311b829b9f4bc9ae823a69ada29d435cd"
        ],
        [
            "Proof (eqmod_sub modulus).",
            "VernacExactProof",
            "e332a3df6654313045d2b0667ef36efb7e0d2851"
        ],
        [
            "Hint Resolve eqm_sub: ints.",
            "VernacHints",
            "dce0409b36cb3c907ed8df7e2d55468284d351d3"
        ],
        [
            "Lemma eqm_mult: forall a b c d, eqm a c -> eqm b d -> eqm (a * b) (c * d).",
            "VernacStartTheoremProof",
            "b57c68401ff48e1d8c55ea9ef905eafa6e98d9c0"
        ],
        [
            "Proof (eqmod_mult modulus).",
            "VernacExactProof",
            "27111ace4873da3317a86f34bdd2876026742f82"
        ],
        [
            "Hint Resolve eqm_mult: ints.",
            "VernacHints",
            "91e227219cc7421d61c62482a34929930f949d09"
        ],
        [
            "Lemma eqm_samerepr: forall x y, eqm x y -> repr x = repr y.",
            "VernacStartTheoremProof",
            "be8cfefde34cf3fed32edcd4e3cad72219b59f80"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold repr.",
            "VernacExtend",
            "91e4045fc3bd5344cc6c0e2cdc38993b582889b7"
        ],
        [
            "apply mkint_eq.",
            "VernacExtend",
            "be81a2a6894844a023a9bb5122ffed586a6d04fa"
        ],
        [
            "rewrite !Z_mod_modulus_eq.",
            "VernacExtend",
            "a24b0b066b2efe16a93ee77df7a3b817b2963e75"
        ],
        [
            "apply eqmod_mod_eq.",
            "VernacExtend",
            "e462c5f68727dc40165d24c024a428f990dc8959"
        ],
        [
            "auto with ints.",
            "VernacExtend",
            "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
        ],
        [
            "exact H.",
            "VernacExtend",
            "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqm_unsigned_repr: forall z, eqm z (unsigned (repr z)).",
            "VernacStartTheoremProof",
            "e0fe89973a5c4d69479fe09cb0a0b28cb27fcd19"
        ],
        [
            "unfold eqm; intros.",
            "VernacExtend",
            "b9ec868c9cb01f2451ff559bde1f0246a0e34f42"
        ],
        [
            "rewrite unsigned_repr_eq.",
            "VernacExtend",
            "4cdb0c1f390fe84b3a9c8bac49c0b5813452743a"
        ],
        [
            "apply eqmod_mod.",
            "VernacExtend",
            "1729dd014b983334b1b539b611f2322ed5a7d321"
        ],
        [
            "auto with ints.",
            "VernacExtend",
            "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve eqm_unsigned_repr: ints.",
            "VernacHints",
            "b20fab6adc2cbde6001817cfc7acc3a434fe3ffa"
        ],
        [
            "Lemma eqm_unsigned_repr_l: forall a b, eqm a b -> eqm (unsigned (repr a)) b.",
            "VernacStartTheoremProof",
            "b541e8f9111ee99bf0012b6174604c91a90ce73f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply eqm_trans with a.",
            "VernacExtend",
            "0b864f055a5ad7efc38ccf716f9deba435889129"
        ],
        [
            "apply eqm_sym.",
            "VernacExtend",
            "f47e8ad0613afa49106216f940d8037154af13ba"
        ],
        [
            "apply eqm_unsigned_repr.",
            "VernacExtend",
            "8083262b54f87caceff266da1e7020054aa5a39f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve eqm_unsigned_repr_l: ints.",
            "VernacHints",
            "460f24724f10d26c7bdfac8c25c0a6b6395cfa3a"
        ],
        [
            "Lemma eqm_unsigned_repr_r: forall a b, eqm a b -> eqm a (unsigned (repr b)).",
            "VernacStartTheoremProof",
            "7c90df566011b53fda94b8f50fbb81993b59ce31"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply eqm_trans with b.",
            "VernacExtend",
            "920de48eb867a92d8ab2c7326ccc9b9b57f4547f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply eqm_unsigned_repr.",
            "VernacExtend",
            "8083262b54f87caceff266da1e7020054aa5a39f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve eqm_unsigned_repr_r: ints.",
            "VernacHints",
            "c91789fe33a55260382c121df670b53526dd8521"
        ],
        [
            "Lemma eqm_signed_unsigned: forall x, eqm (signed x) (unsigned x).",
            "VernacStartTheoremProof",
            "0a2497e03c980d9e33802865c826544295de3bfa"
        ],
        [
            "intros; red.",
            "VernacExtend",
            "3393be941ed81b8e4a79e80db41d01425f14b126"
        ],
        [
            "unfold signed.",
            "VernacExtend",
            "f99b13683b7fbccb713276bdf12a56c47fabc924"
        ],
        [
            "set (y := unsigned x).",
            "VernacExtend",
            "9795f7ec619608b486c48ff24d9256581cb75002"
        ],
        [
            "case (zlt y half_modulus); intro.",
            "VernacExtend",
            "dc5e674627fb82622126c1893afb9ac642d7d087"
        ],
        [
            "apply eqmod_refl.",
            "VernacExtend",
            "dd13026dc2e4aa9828d8fe4d8ad9645368260127"
        ],
        [
            "red; exists (-1); ring.",
            "VernacExtend",
            "e3769e3bb8685a3df66e6edf2b135180a16f3430"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem unsigned_range: forall i, 0 <= unsigned i < modulus.",
            "VernacStartTheoremProof",
            "edc96825b6a5516fb561be86cdd119dfe8a55c42"
        ],
        [
            "destruct i.",
            "VernacExtend",
            "7ab4d0c959e49705b3528aeb0ec3e44ca47eacef"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve unsigned_range: ints.",
            "VernacHints",
            "d455fa8edf031340e795478421e4eb5798bd1969"
        ],
        [
            "Theorem unsigned_range_2: forall i, 0 <= unsigned i <= max_unsigned.",
            "VernacStartTheoremProof",
            "5c968894a05498b9244d8b9a9ce5f4b585833d16"
        ],
        [
            "intro; unfold max_unsigned.",
            "VernacExtend",
            "6cbc9c373568eaf3b5015e1fe804b1f90d4086b4"
        ],
        [
            "generalize (unsigned_range i).",
            "VernacExtend",
            "2e4a5d095012ac0fe6e7775adce4e7b86cf9b5b8"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve unsigned_range_2: ints.",
            "VernacHints",
            "fbc1dc10692eb3b4231112be9661f0af1b04a7db"
        ],
        [
            "Theorem signed_range: forall i, min_signed <= signed i <= max_signed.",
            "VernacStartTheoremProof",
            "674c9c7d7bbbcb61702f6f01b7ecc3a25e5682b0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold signed.",
            "VernacExtend",
            "f99b13683b7fbccb713276bdf12a56c47fabc924"
        ],
        [
            "generalize (unsigned_range i).",
            "VernacExtend",
            "2e4a5d095012ac0fe6e7775adce4e7b86cf9b5b8"
        ],
        [
            "set (n := unsigned i).",
            "VernacExtend",
            "c44ad60550ff8a3789675a53b19da9095d83525f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case (zlt n half_modulus); intro.",
            "VernacExtend",
            "e140d833d306a457e6ba1208204f30d9f0bb4104"
        ],
        [
            "unfold max_signed.",
            "VernacExtend",
            "f8dfc169a274f28f22cf16df03cc4eb70fbb62d5"
        ],
        [
            "generalize min_signed_neg.",
            "VernacExtend",
            "ac7ec763bc9d04fd155ad86b784068f7e17c5cfa"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "unfold min_signed, max_signed.",
            "VernacExtend",
            "33c0760e781552aec857e6894a7ca108a9f152c6"
        ],
        [
            "rewrite half_modulus_modulus in *.",
            "VernacExtend",
            "46d265e476b14e3b39bc2892654648fb4ce8b930"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem repr_unsigned: forall i, repr (unsigned i) = i.",
            "VernacStartTheoremProof",
            "acd6236a6eaa4a45e50fe4c70d20e6edc13b3fd4"
        ],
        [
            "destruct i; simpl.",
            "VernacExtend",
            "4521b9790b82772dc0c1c54601d42b59e83dbed6"
        ],
        [
            "unfold repr.",
            "VernacExtend",
            "91e4045fc3bd5344cc6c0e2cdc38993b582889b7"
        ],
        [
            "apply mkint_eq.",
            "VernacExtend",
            "be81a2a6894844a023a9bb5122ffed586a6d04fa"
        ],
        [
            "rewrite Z_mod_modulus_eq.",
            "VernacExtend",
            "4749d2a09ffb0e441a81f904f3321483e2f60790"
        ],
        [
            "apply Zmod_small; omega.",
            "VernacExtend",
            "a5728ca055ed9bbdf24bd33427fb244e1ebf4482"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve repr_unsigned: ints.",
            "VernacHints",
            "22b7a385fceb78260191bdb1bb0f850fc33c9853"
        ],
        [
            "Lemma repr_signed: forall i, repr (signed i) = i.",
            "VernacStartTheoremProof",
            "5473abbfd7293282db06f53865e8dd15e15c1697"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "transitivity (repr (unsigned i)).",
            "VernacExtend",
            "136026c9c301efdbde1241887c63b568b81f9136"
        ],
        [
            "apply eqm_samerepr.",
            "VernacExtend",
            "2226a5674ed5a7db984e878fdbb37775ca665295"
        ],
        [
            "apply eqm_signed_unsigned.",
            "VernacExtend",
            "d8614df8b73ff309ccafc1b69753d7e1944f658e"
        ],
        [
            "auto with ints.",
            "VernacExtend",
            "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve repr_signed: ints.",
            "VernacHints",
            "d19043d0f738a804982d7d6b3413ab66127ade03"
        ],
        [
            "Opaque repr.",
            "VernacSetOpacity",
            "e44b1d68c148a4d18365f7257f5374a3eb441f28"
        ],
        [
            "Lemma eqm_repr_eq: forall x y, eqm x (unsigned y) -> repr x = y.",
            "VernacStartTheoremProof",
            "eb688010833d9c747c1b38d9e93010a0a0a5c5e7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- (repr_unsigned y).",
            "VernacExtend",
            "140fc635f53509ca75abf324c73c2a5f03133e74"
        ],
        [
            "apply eqm_samerepr; auto.",
            "VernacExtend",
            "f63e226c02e69d34af81551436ed0bea851b7b29"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem unsigned_repr: forall z, 0 <= z <= max_unsigned -> unsigned (repr z) = z.",
            "VernacStartTheoremProof",
            "61cc3e70b53cf8bc76dd2c608c8512a59b8b8893"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite unsigned_repr_eq.",
            "VernacExtend",
            "4cdb0c1f390fe84b3a9c8bac49c0b5813452743a"
        ],
        [
            "apply Zmod_small.",
            "VernacExtend",
            "439f7572e12963e1685c905bb39e49700a5d1e32"
        ],
        [
            "unfold max_unsigned in H.",
            "VernacExtend",
            "e05196ac5ea874df85e20c2424af2795b1d6f809"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve unsigned_repr: ints.",
            "VernacHints",
            "c4c0a1bbf6ff70d18fbe3530e32907689912fc29"
        ],
        [
            "Theorem signed_repr: forall z, min_signed <= z <= max_signed -> signed (repr z) = z.",
            "VernacStartTheoremProof",
            "45958d49319b9547742492f138e476d0f99c0c0e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold signed.",
            "VernacExtend",
            "f99b13683b7fbccb713276bdf12a56c47fabc924"
        ],
        [
            "destruct (zle 0 z).",
            "VernacExtend",
            "b2f5dbe9dbb17288796fc90f5c97501d6d2ac376"
        ],
        [
            "replace (unsigned (repr z)) with z.",
            "VernacExtend",
            "238435dbfcb09d483a574ec3646ed5cb34f00f57"
        ],
        [
            "rewrite zlt_true.",
            "VernacExtend",
            "b49135e183425368b4318af106711c28871bcc77"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold max_signed in H.",
            "VernacExtend",
            "2271c6286e0424728bee9f8c2e83c903205c19a2"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply unsigned_repr.",
            "VernacExtend",
            "cbb55125b21da3156cf49c45f71d95a6743593f6"
        ],
        [
            "generalize max_signed_unsigned.",
            "VernacExtend",
            "08f5b2060e17b6028ffc29c2f43565b2bf66fb1b"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "pose (z' := z + modulus).",
            "VernacExtend",
            "01e6557a798839a61f54116854e934652c8679e7"
        ],
        [
            "replace (repr z) with (repr z').",
            "VernacExtend",
            "fc39e0d0a4b6c8d621b3723ee66f06d2143bfe90"
        ],
        [
            "replace (unsigned (repr z')) with z'.",
            "VernacExtend",
            "9c395ca16398d5e2a916f0a79258df752d650506"
        ],
        [
            "rewrite zlt_false.",
            "VernacExtend",
            "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
        ],
        [
            "unfold z'.",
            "VernacExtend",
            "04b59f4cf7e9e6c4f798f151059f6311fbf8364e"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "unfold z'.",
            "VernacExtend",
            "04b59f4cf7e9e6c4f798f151059f6311fbf8364e"
        ],
        [
            "unfold min_signed in H.",
            "VernacExtend",
            "e997a7adc9521fb03586a33beb0c8d983c76a3a1"
        ],
        [
            "rewrite half_modulus_modulus.",
            "VernacExtend",
            "4f1be9507367745c91dc7a8dae1c9475380b67ad"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply unsigned_repr.",
            "VernacExtend",
            "cbb55125b21da3156cf49c45f71d95a6743593f6"
        ],
        [
            "unfold z', max_unsigned.",
            "VernacExtend",
            "a11fa65f7c032143af9e9c789460ef2f3c672c37"
        ],
        [
            "unfold min_signed, max_signed in H.",
            "VernacExtend",
            "cc0eee8ed34f5d246e9eb1b05b592982738140f4"
        ],
        [
            "rewrite half_modulus_modulus.",
            "VernacExtend",
            "4f1be9507367745c91dc7a8dae1c9475380b67ad"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply eqm_samerepr.",
            "VernacExtend",
            "2226a5674ed5a7db984e878fdbb37775ca665295"
        ],
        [
            "unfold z'; red.",
            "VernacExtend",
            "df5eacb127643bdd0ddf69e696cfa441622f5716"
        ],
        [
            "exists 1.",
            "VernacExtend",
            "18eb310858be5acae7304d0d9ed33063568db310"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem signed_eq_unsigned: forall x, unsigned x <= max_signed -> signed x = unsigned x.",
            "VernacStartTheoremProof",
            "be1494381fd5a1afb2ad3446194a6d0991396a21"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold signed.",
            "VernacExtend",
            "f99b13683b7fbccb713276bdf12a56c47fabc924"
        ],
        [
            "destruct (zlt (unsigned x) half_modulus).",
            "VernacExtend",
            "96100f79c30f7c1ed7c9d19caec035348a472e2e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold max_signed in H.",
            "VernacExtend",
            "2271c6286e0424728bee9f8c2e83c903205c19a2"
        ],
        [
            "omegaContradiction.",
            "VernacExtend",
            "329a0d87fada76e54a403fa49705e937670711cd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem signed_positive: forall x, signed x >= 0 <-> unsigned x <= max_signed.",
            "VernacStartTheoremProof",
            "cac20f8878daf07b3dc7851c87cdaaf0be1b6bdb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold signed, max_signed.",
            "VernacExtend",
            "81d2d293a878d2b91a22564777fe4faad43b167f"
        ],
        [
            "generalize (unsigned_range x) half_modulus_modulus half_modulus_pos; intros.",
            "VernacExtend",
            "e6b996ec1cbda713e6ad873d69d0f2ed4dbad2a3"
        ],
        [
            "destruct (zlt (unsigned x) half_modulus); omega.",
            "VernacExtend",
            "72d987c043ac1d1081070673af172111eec74735"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem unsigned_zero: unsigned zero = 0.",
            "VernacStartTheoremProof",
            "50416b706b48527e02337d2c4dff59215f0f135e"
        ],
        [
            "unfold zero; rewrite unsigned_repr_eq.",
            "VernacExtend",
            "528891dd3f536ec4f1f27fd71d8ec3a8999661d3"
        ],
        [
            "apply Zmod_0_l.",
            "VernacExtend",
            "af50c32668451ac862e7705801a8f29ecf81ca3e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem unsigned_one: unsigned one = 1.",
            "VernacStartTheoremProof",
            "ff440ed7fe497d697c609ae66665341e656ecfc1"
        ],
        [
            "unfold one; rewrite unsigned_repr_eq.",
            "VernacExtend",
            "e4df0ef799447f129acddf1325ca7caafb7ed3ed"
        ],
        [
            "apply Zmod_small.",
            "VernacExtend",
            "439f7572e12963e1685c905bb39e49700a5d1e32"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "unfold modulus.",
            "VernacExtend",
            "202f368b6f08b873343d2b49e63dddcb32f23f66"
        ],
        [
            "replace wordsize with (S(Init.Nat.pred wordsize)).",
            "VernacExtend",
            "2d62f24ab64750b516bfdf52f64a87b83e7c554b"
        ],
        [
            "rewrite two_power_nat_S.",
            "VernacExtend",
            "a9744f6bd9a8fe7c31c0f7154478ac3b90a12f1b"
        ],
        [
            "generalize (two_power_nat_pos (Init.Nat.pred wordsize)).",
            "VernacExtend",
            "fcb9cd3f27ed365d78b654be4c3afc2149e16be4"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "generalize wordsize_pos.",
            "VernacExtend",
            "2cb416b61b49a53184eb1521ed15ff122a244b0b"
        ],
        [
            "unfold zwordsize.",
            "VernacExtend",
            "6b3f3f2469545a20c790b5e33b06d7eaec8d28a6"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem unsigned_mone: unsigned mone = modulus - 1.",
            "VernacStartTheoremProof",
            "ef666f2bc6f14f2e4159b057f5a9604234dc6a10"
        ],
        [
            "unfold mone; rewrite unsigned_repr_eq.",
            "VernacExtend",
            "da36cab8c827187e610a059000a7931555247e52"
        ],
        [
            "replace (-1) with ((modulus - 1) + (-1) * modulus).",
            "VernacExtend",
            "cfd4f3dcffb92383c62c4853a976dc901f9aa269"
        ],
        [
            "rewrite Z_mod_plus_full.",
            "VernacExtend",
            "611be5838111cbc1034a8aa3120f9e799f2b2541"
        ],
        [
            "apply Zmod_small.",
            "VernacExtend",
            "439f7572e12963e1685c905bb39e49700a5d1e32"
        ],
        [
            "generalize modulus_pos.",
            "VernacExtend",
            "c8c3006ba30b21c701534130ddb536a246d1045b"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem signed_zero: signed zero = 0.",
            "VernacStartTheoremProof",
            "1eb92ce948ef1cca316bbcddb9f2f82bbeded4fa"
        ],
        [
            "unfold signed.",
            "VernacExtend",
            "f99b13683b7fbccb713276bdf12a56c47fabc924"
        ],
        [
            "rewrite unsigned_zero.",
            "VernacExtend",
            "89956b9f461b9934c8fa99e6e63074f0275efcae"
        ],
        [
            "apply zlt_true.",
            "VernacExtend",
            "135d300e9c683e2995f4687be0904a8b2009f6fe"
        ],
        [
            "generalize half_modulus_pos; omega.",
            "VernacExtend",
            "84349a0a8d7cb036146828c241fa5c72249fbb54"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem signed_one: zwordsize > 1 -> signed one = 1.",
            "VernacStartTheoremProof",
            "b993516f3aa033d2e2a255d9649ae2f50fc7df78"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold signed.",
            "VernacExtend",
            "f99b13683b7fbccb713276bdf12a56c47fabc924"
        ],
        [
            "rewrite unsigned_one.",
            "VernacExtend",
            "52f1cc9e4b7b0a3b7c37f5e9a1a6c514d4cb1683"
        ],
        [
            "apply zlt_true.",
            "VernacExtend",
            "135d300e9c683e2995f4687be0904a8b2009f6fe"
        ],
        [
            "change 1 with (two_p 0).",
            "VernacExtend",
            "bfaa6197bafec46ecb47adf43807297e6ace0294"
        ],
        [
            "rewrite half_modulus_power.",
            "VernacExtend",
            "fd8ccafd38bbc04cf02d63bcd61c884d7a7470f8"
        ],
        [
            "apply two_p_monotone_strict.",
            "VernacExtend",
            "9f9347abd1e7a23e387d0ed249667589d29440a0"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem signed_mone: signed mone = -1.",
            "VernacStartTheoremProof",
            "142f8af0e996f46602a35094122faaf8653ea368"
        ],
        [
            "unfold signed.",
            "VernacExtend",
            "f99b13683b7fbccb713276bdf12a56c47fabc924"
        ],
        [
            "rewrite unsigned_mone.",
            "VernacExtend",
            "8f638f66e0273f316077da6f32f87449b5bcaa54"
        ],
        [
            "rewrite zlt_false.",
            "VernacExtend",
            "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite half_modulus_modulus.",
            "VernacExtend",
            "4f1be9507367745c91dc7a8dae1c9475380b67ad"
        ],
        [
            "generalize half_modulus_pos.",
            "VernacExtend",
            "01cc2bf737221379d01a92026ffebe473cea8b29"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem one_not_zero: one <> zero.",
            "VernacStartTheoremProof",
            "6163f85925f8c3c9bad8a270da6da82d4e1ac056"
        ],
        [
            "assert (unsigned one <> unsigned zero).",
            "VernacExtend",
            "d18a4406616f928ed5bce22785b115f4bd7277a9"
        ],
        [
            "rewrite unsigned_one; rewrite unsigned_zero; congruence.",
            "VernacExtend",
            "5a69fd723f743ec641ce9dde6bd7dc5d5b03be76"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem unsigned_repr_wordsize: unsigned iwordsize = zwordsize.",
            "VernacStartTheoremProof",
            "068b575dc5793263fabb02544ea0441ddfa481fc"
        ],
        [
            "unfold iwordsize; rewrite unsigned_repr_eq.",
            "VernacExtend",
            "28cd443d8b577174b807f159524ed0ba27d801fc"
        ],
        [
            "apply Zmod_small.",
            "VernacExtend",
            "439f7572e12963e1685c905bb39e49700a5d1e32"
        ],
        [
            "generalize wordsize_pos wordsize_max_unsigned; unfold max_unsigned; omega.",
            "VernacExtend",
            "15ef7faff5c58ee48c463e7be0b710e0749573c4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eq_sym: forall x y, eq x y = eq y x.",
            "VernacStartTheoremProof",
            "4b37a430ede349edabff132c2801642ef7322806"
        ],
        [
            "intros; unfold eq.",
            "VernacExtend",
            "cd6f155ee3e2d7e91274fcc65550490d896b7567"
        ],
        [
            "case (zeq (unsigned x) (unsigned y)); intro.",
            "VernacExtend",
            "d4d8355bea845a378d4f1b5ef96581376650a64d"
        ],
        [
            "rewrite e.",
            "VernacExtend",
            "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
        ],
        [
            "rewrite zeq_true.",
            "VernacExtend",
            "98dc7bff53064d4bdee6debb2d9c009a8a8d618c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite zeq_false.",
            "VernacExtend",
            "dab8f9109b7a6d08485a19d2b305200449ea8478"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eq_spec: forall (x y: int), if eq x y then x = y else x <> y.",
            "VernacStartTheoremProof",
            "02349e10115a386ad616425ec0babe19ff0acc18"
        ],
        [
            "intros; unfold eq.",
            "VernacExtend",
            "cd6f155ee3e2d7e91274fcc65550490d896b7567"
        ],
        [
            "case (eq_dec x y); intro.",
            "VernacExtend",
            "1936a46b9ad80598e6a9795c28e89235b45de84e"
        ],
        [
            "subst y.",
            "VernacExtend",
            "f056a00b852bc549d1b8bb21d500c90d8ff37bf8"
        ],
        [
            "rewrite zeq_true.",
            "VernacExtend",
            "98dc7bff53064d4bdee6debb2d9c009a8a8d618c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite zeq_false.",
            "VernacExtend",
            "dab8f9109b7a6d08485a19d2b305200449ea8478"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct x; destruct y.",
            "VernacExtend",
            "66b6bbed80f19a7ddf75313e3d1e4cc780d5f91f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "red; intro.",
            "VernacExtend",
            "12e00b6ab6f8834b6f81959ca42843abaa311f37"
        ],
        [
            "elim n.",
            "VernacExtend",
            "c68f766a88bb5402d72ee6adaca953661a5d18b2"
        ],
        [
            "apply mkint_eq.",
            "VernacExtend",
            "be81a2a6894844a023a9bb5122ffed586a6d04fa"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eq_true: forall x, eq x x = true.",
            "VernacStartTheoremProof",
            "02fb7e8c41e8b281bdb5a94e504e5230b03ea5ed"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (eq_spec x x); case (eq x x); intros; congruence.",
            "VernacExtend",
            "7adf782a534eecb336238fc0fc018d090ae445b4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eq_false: forall x y, x <> y -> eq x y = false.",
            "VernacStartTheoremProof",
            "0b42f6158765e5d18295c56b829ee0cfcf8d79de"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (eq_spec x y); case (eq x y); intros; congruence.",
            "VernacExtend",
            "40754d98fd2a5eacc65c41ac5894150ff3221f00"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eq_signed: forall x y, eq x y = if zeq (signed x) (signed y) then true else false.",
            "VernacStartTheoremProof",
            "584d27bad829fc9dd492dc7ba9426727b9ce49a1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "predSpec eq eq_spec x y.",
            "VernacExtend",
            "820331c62ecbcb823d976fbb120ee032c5485e1b"
        ],
        [
            "subst x.",
            "VernacExtend",
            "76c28b0a6a4a7c1568fa30e26ee411c5e5d54968"
        ],
        [
            "rewrite zeq_true; auto.",
            "VernacExtend",
            "423071e182d9e6b7d1f2d847b6fdcd65b4de94e5"
        ],
        [
            "destruct (zeq (signed x) (signed y)); auto.",
            "VernacExtend",
            "d79a5b4e13672506f8e717de55d0efc752011584"
        ],
        [
            "elim H.",
            "VernacExtend",
            "853aa440c3a3810be05f0f87d0e688c05b92253d"
        ],
        [
            "rewrite <- (repr_signed x).",
            "VernacExtend",
            "555fb0db52173ec78ea4ccdb677fc91c494bdb3a"
        ],
        [
            "rewrite <- (repr_signed y).",
            "VernacExtend",
            "9dd47bb3dd6dbac5aa2e042e79f9c4b37f82ff08"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem add_unsigned: forall x y, add x y = repr (unsigned x + unsigned y).",
            "VernacStartTheoremProof",
            "81b8c10af632c7cc0019a2ce1b78b00f8ab64867"
        ],
        [
            "intros; reflexivity.",
            "VernacExtend",
            "c20cfa06d7b692e82c145d2df3bde4c2fe4eb461"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem add_signed: forall x y, add x y = repr (signed x + signed y).",
            "VernacStartTheoremProof",
            "6bf7bed7ce91af03c66b373eb5780602c0e4f805"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite add_unsigned.",
            "VernacExtend",
            "349bdc05af730edc67c16b07eae2e12b7485afa2"
        ],
        [
            "apply eqm_samerepr.",
            "VernacExtend",
            "2226a5674ed5a7db984e878fdbb37775ca665295"
        ],
        [
            "apply eqm_add; apply eqm_sym; apply eqm_signed_unsigned.",
            "VernacExtend",
            "1532a1b5d719042d5f1ae3708ae769ed60fc3dcd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem add_commut: forall x y, add x y = add y x.",
            "VernacStartTheoremProof",
            "786a702b66794ff18c1677327705ec0f49ab57ec"
        ],
        [
            "intros; unfold add.",
            "VernacExtend",
            "b4839958c5ab83f0cf119be76f61b4888a77291b"
        ],
        [
            "decEq.",
            "VernacExtend",
            "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem add_zero: forall x, add x zero = x.",
            "VernacStartTheoremProof",
            "7759fe2c2934fb3a38db21f3bd81c700ec11ff7e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold add.",
            "VernacExtend",
            "11cf98bf231f22df486b46b3b6a1c38a94e859dd"
        ],
        [
            "rewrite unsigned_zero.",
            "VernacExtend",
            "89956b9f461b9934c8fa99e6e63074f0275efcae"
        ],
        [
            "rewrite Z.add_0_r.",
            "VernacExtend",
            "06ae07741c51588ad5058ce812450f10227d7b7a"
        ],
        [
            "apply repr_unsigned.",
            "VernacExtend",
            "7033f895e7c0a699adb114621e89aafefb338576"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem add_zero_l: forall x, add zero x = x.",
            "VernacStartTheoremProof",
            "02c66c74c00510fcea1c4fbd18d7a251494fc1e5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite add_commut.",
            "VernacExtend",
            "e75b7ced8dcae7a5a7e30f10878b5dbc00bb9021"
        ],
        [
            "apply add_zero.",
            "VernacExtend",
            "641f544960a4dada6ef8eb554d02daf56dae9e44"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem add_assoc: forall x y z, add (add x y) z = add x (add y z).",
            "VernacStartTheoremProof",
            "ff10e791a5c1aafe1640e3139980ab5a3beab20e"
        ],
        [
            "intros; unfold add.",
            "VernacExtend",
            "b4839958c5ab83f0cf119be76f61b4888a77291b"
        ],
        [
            "set (x' := unsigned x).",
            "VernacExtend",
            "37cea74d2fdd215da8906415651a9e10de7f9ca0"
        ],
        [
            "set (y' := unsigned y).",
            "VernacExtend",
            "65865d37b040a6ef65e92eeec0041c0908c91bed"
        ],
        [
            "set (z' := unsigned z).",
            "VernacExtend",
            "7c6d2d0828173c29360389a4a483a2210dd1d457"
        ],
        [
            "apply eqm_samerepr.",
            "VernacExtend",
            "2226a5674ed5a7db984e878fdbb37775ca665295"
        ],
        [
            "apply eqm_trans with ((x' + y') + z').",
            "VernacExtend",
            "9e6618d5851f088493d9410cb1a6a5ec9c4627ab"
        ],
        [
            "auto with ints.",
            "VernacExtend",
            "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
        ],
        [
            "rewrite <- Z.add_assoc.",
            "VernacExtend",
            "ac972debc80f23a39f4e00734b65309c5ac68a39"
        ],
        [
            "auto with ints.",
            "VernacExtend",
            "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem add_permut: forall x y z, add x (add y z) = add y (add x z).",
            "VernacStartTheoremProof",
            "858d2612fb534bc7119d6338db29b09a9c3fb198"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (add_commut y z).",
            "VernacExtend",
            "d930ae7dec4aba76ea4c7edb9479a6ad468dec26"
        ],
        [
            "rewrite <- add_assoc.",
            "VernacExtend",
            "c34a88538a6a595366810d8d189307fbbf983edd"
        ],
        [
            "apply add_commut.",
            "VernacExtend",
            "da322b7bed597f016f37917b132c2dd1b4d3fc9f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem add_neg_zero: forall x, add x (neg x) = zero.",
            "VernacStartTheoremProof",
            "47378d417432ebe6ff1f8b158e3b41fcbfa5771d"
        ],
        [
            "intros; unfold add, neg, zero.",
            "VernacExtend",
            "b8a19e8448fc5d20df5b695b724c21cc89a64483"
        ],
        [
            "apply eqm_samerepr.",
            "VernacExtend",
            "2226a5674ed5a7db984e878fdbb37775ca665295"
        ],
        [
            "replace 0 with (unsigned x + (- (unsigned x))).",
            "VernacExtend",
            "0692330c1e33e754a98fd2317b2056331d815bf1"
        ],
        [
            "auto with ints.",
            "VernacExtend",
            "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem unsigned_add_carry: forall x y, unsigned (add x y) = unsigned x + unsigned y - unsigned (add_carry x y zero) * modulus.",
            "VernacStartTheoremProof",
            "b1eb46b6ac80947588e16e784c1df7aa84ff7149"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold add, add_carry.",
            "VernacExtend",
            "adf1fbfdfc7e022b6ef3e5eef2a2244582c561df"
        ],
        [
            "rewrite unsigned_zero.",
            "VernacExtend",
            "89956b9f461b9934c8fa99e6e63074f0275efcae"
        ],
        [
            "rewrite Z.add_0_r.",
            "VernacExtend",
            "06ae07741c51588ad5058ce812450f10227d7b7a"
        ],
        [
            "rewrite unsigned_repr_eq.",
            "VernacExtend",
            "4cdb0c1f390fe84b3a9c8bac49c0b5813452743a"
        ],
        [
            "generalize (unsigned_range x) (unsigned_range y).",
            "VernacExtend",
            "a13a4ed3bded6153267e977896bcd2455187d557"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (zlt (unsigned x + unsigned y) modulus).",
            "VernacExtend",
            "3e8a722dbecb98d9108af584ca6d9a7551c993c3"
        ],
        [
            "rewrite unsigned_zero.",
            "VernacExtend",
            "89956b9f461b9934c8fa99e6e63074f0275efcae"
        ],
        [
            "apply Zmod_unique with 0.",
            "VernacExtend",
            "ac4928d6d5599fb111ed1b2a906c054db978f8ba"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite unsigned_one.",
            "VernacExtend",
            "52f1cc9e4b7b0a3b7c37f5e9a1a6c514d4cb1683"
        ],
        [
            "apply Zmod_unique with 1.",
            "VernacExtend",
            "b953ec890390b632fe3bcfa9caa0f49a9e85ac31"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary unsigned_add_either: forall x y, unsigned (add x y) = unsigned x + unsigned y \\/ unsigned (add x y) = unsigned x + unsigned y - modulus.",
            "VernacStartTheoremProof",
            "984dcf1833e7ea52e1088d1ba3b33eb9792e5d2c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite unsigned_add_carry.",
            "VernacExtend",
            "c74332334d22e8420d8c858333a3a31e30245371"
        ],
        [
            "unfold add_carry.",
            "VernacExtend",
            "b85aa8a8fdc0460ed1b07bed184ed804399ab881"
        ],
        [
            "rewrite unsigned_zero.",
            "VernacExtend",
            "89956b9f461b9934c8fa99e6e63074f0275efcae"
        ],
        [
            "rewrite Z.add_0_r.",
            "VernacExtend",
            "06ae07741c51588ad5058ce812450f10227d7b7a"
        ],
        [
            "destruct (zlt (unsigned x + unsigned y) modulus).",
            "VernacExtend",
            "3e8a722dbecb98d9108af584ca6d9a7551c993c3"
        ],
        [
            "rewrite unsigned_zero.",
            "VernacExtend",
            "89956b9f461b9934c8fa99e6e63074f0275efcae"
        ],
        [
            "left; omega.",
            "VernacExtend",
            "9a0d1509b2ddece54a4a5d691f28c3e86f4a5b72"
        ],
        [
            "rewrite unsigned_one.",
            "VernacExtend",
            "52f1cc9e4b7b0a3b7c37f5e9a1a6c514d4cb1683"
        ],
        [
            "right; omega.",
            "VernacExtend",
            "12a62aeea1a26870d19a3f39cd3d9d63bfc5e22b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem neg_repr: forall z, neg (repr z) = repr (-z).",
            "VernacStartTheoremProof",
            "41c13cc2d27fd7182f377cd4227e2eba4f98d56d"
        ],
        [
            "intros; unfold neg.",
            "VernacExtend",
            "cf645b81ef485b53001c969f6c8f481d1dad79cb"
        ],
        [
            "apply eqm_samerepr.",
            "VernacExtend",
            "2226a5674ed5a7db984e878fdbb37775ca665295"
        ],
        [
            "auto with ints.",
            "VernacExtend",
            "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem neg_zero: neg zero = zero.",
            "VernacStartTheoremProof",
            "085615520f1010ecae4b6bb29ef18434e2c8a1be"
        ],
        [
            "unfold neg.",
            "VernacExtend",
            "c7932042fd728b6ba2d5f9ca45c06c287061699d"
        ],
        [
            "rewrite unsigned_zero.",
            "VernacExtend",
            "89956b9f461b9934c8fa99e6e63074f0275efcae"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem neg_involutive: forall x, neg (neg x) = x.",
            "VernacStartTheoremProof",
            "db51028acbecaf9b28a0e41dd2946bcd3d6d4a14"
        ],
        [
            "intros; unfold neg.",
            "VernacExtend",
            "cf645b81ef485b53001c969f6c8f481d1dad79cb"
        ],
        [
            "apply eqm_repr_eq.",
            "VernacExtend",
            "71d36ee28e6bf68bd7ad2ef64bd4df53ff925122"
        ],
        [
            "eapply eqm_trans.",
            "VernacExtend",
            "9f3fd86ee9c5373049e523208bcf1537c23fbe10"
        ],
        [
            "apply eqm_neg.",
            "VernacExtend",
            "ae34228661aadfb504fadb20b3fc83a007c4c27d"
        ],
        [
            "apply eqm_unsigned_repr_l.",
            "VernacExtend",
            "f8c0df5a7c25eea501480495633bd91f52c10673"
        ],
        [
            "apply eqm_refl.",
            "VernacExtend",
            "cd38aceb6abd087396d34625c4f0ed69968a7526"
        ],
        [
            "apply eqm_refl2.",
            "VernacExtend",
            "4f34bea58d6e093ed169579de033c7f5d73e929b"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem neg_add_distr: forall x y, neg(add x y) = add (neg x) (neg y).",
            "VernacStartTheoremProof",
            "8122b12a8d0bb522b2fd602d59888aae04254a96"
        ],
        [
            "intros; unfold neg, add.",
            "VernacExtend",
            "446b9ed61bca8b846953287a48edc1286086a1d7"
        ],
        [
            "apply eqm_samerepr.",
            "VernacExtend",
            "2226a5674ed5a7db984e878fdbb37775ca665295"
        ],
        [
            "apply eqm_trans with (- (unsigned x + unsigned y)).",
            "VernacExtend",
            "e2185d8b7fb9d6b0c5a3b5ca2e71d0d48712a29f"
        ],
        [
            "auto with ints.",
            "VernacExtend",
            "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
        ],
        [
            "replace (- (unsigned x + unsigned y)) with ((- unsigned x) + (- unsigned y)).",
            "VernacExtend",
            "c5e625f5a8ceb588d616e41ff7d101d52d0b37c2"
        ],
        [
            "auto with ints.",
            "VernacExtend",
            "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem sub_zero_l: forall x, sub x zero = x.",
            "VernacStartTheoremProof",
            "8a6bb14b8ad25123a3065d3490fd80f856cc3b94"
        ],
        [
            "intros; unfold sub.",
            "VernacExtend",
            "d39fb4cdac1111998d6106a2d6890a5e3c1132b3"
        ],
        [
            "rewrite unsigned_zero.",
            "VernacExtend",
            "89956b9f461b9934c8fa99e6e63074f0275efcae"
        ],
        [
            "replace (unsigned x - 0) with (unsigned x) by omega.",
            "VernacExtend",
            "a160eadd1cb32e63e0a54d117caaf78f8f07d493"
        ],
        [
            "apply repr_unsigned.",
            "VernacExtend",
            "7033f895e7c0a699adb114621e89aafefb338576"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem sub_zero_r: forall x, sub zero x = neg x.",
            "VernacStartTheoremProof",
            "3730ab63ff19c6c5bb42b7cd87d10335b2ecc523"
        ],
        [
            "intros; unfold sub, neg.",
            "VernacExtend",
            "f0f284e985375745efcf0b5c22bdb6e4e5b7305e"
        ],
        [
            "rewrite unsigned_zero.",
            "VernacExtend",
            "89956b9f461b9934c8fa99e6e63074f0275efcae"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem sub_add_opp: forall x y, sub x y = add x (neg y).",
            "VernacStartTheoremProof",
            "ae111df4434bfb81fd40012a8dc2ac085bc90f21"
        ],
        [
            "intros; unfold sub, add, neg.",
            "VernacExtend",
            "ca8e79fb68dc9677898bad3b0610f18afea4fafa"
        ],
        [
            "apply eqm_samerepr.",
            "VernacExtend",
            "2226a5674ed5a7db984e878fdbb37775ca665295"
        ],
        [
            "apply eqm_add; auto with ints.",
            "VernacExtend",
            "af5726510e5682d3c82760011803c0892c36d2cc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem sub_idem: forall x, sub x x = zero.",
            "VernacStartTheoremProof",
            "d03f9f2bd90e39e5b07fed7fddf39342efb66012"
        ],
        [
            "intros; unfold sub.",
            "VernacExtend",
            "d39fb4cdac1111998d6106a2d6890a5e3c1132b3"
        ],
        [
            "unfold zero.",
            "VernacExtend",
            "1f909792743ffabee09dc445053cd7808033ff89"
        ],
        [
            "decEq.",
            "VernacExtend",
            "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem sub_add_l: forall x y z, sub (add x y) z = add (sub x z) y.",
            "VernacStartTheoremProof",
            "ece353ba580fa70e4ac8f1fb88acf9d3f127159b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "repeat rewrite sub_add_opp.",
            "VernacExtend",
            "f031127fc21f554022329d56149f6bf30dd64ac2"
        ],
        [
            "repeat rewrite add_assoc.",
            "VernacExtend",
            "f9ee13e09071202a78ea18f8af5746590337d16f"
        ],
        [
            "decEq.",
            "VernacExtend",
            "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
        ],
        [
            "apply add_commut.",
            "VernacExtend",
            "da322b7bed597f016f37917b132c2dd1b4d3fc9f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem sub_add_r: forall x y z, sub x (add y z) = add (sub x z) (neg y).",
            "VernacStartTheoremProof",
            "088d6a06aef1d58d6c53590ff668fe0a84feadee"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "repeat rewrite sub_add_opp.",
            "VernacExtend",
            "f031127fc21f554022329d56149f6bf30dd64ac2"
        ],
        [
            "rewrite neg_add_distr.",
            "VernacExtend",
            "91b1c72b389a6b65a6eb24fff050918672e72465"
        ],
        [
            "rewrite add_permut.",
            "VernacExtend",
            "4ecd311a8b8c9b77e141bf2dbd592d7f66ba2f0d"
        ],
        [
            "apply add_commut.",
            "VernacExtend",
            "da322b7bed597f016f37917b132c2dd1b4d3fc9f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem sub_shifted: forall x y z, sub (add x z) (add y z) = sub x y.",
            "VernacStartTheoremProof",
            "432b98f21de3ca6d2bd7b810165faf9630be53b2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite sub_add_opp.",
            "VernacExtend",
            "149aee86536ad4266b276b48c48fc771f09f2ae7"
        ],
        [
            "rewrite neg_add_distr.",
            "VernacExtend",
            "91b1c72b389a6b65a6eb24fff050918672e72465"
        ],
        [
            "rewrite add_assoc.",
            "VernacExtend",
            "ad3a5a815f5c731ca973b85c3a98fab1355860f5"
        ],
        [
            "rewrite (add_commut (neg y) (neg z)).",
            "VernacExtend",
            "84e6b10620f1afcada063f62fe34c68bf860def8"
        ],
        [
            "rewrite <- (add_assoc z).",
            "VernacExtend",
            "f43dab3c9725809b4fd5c8a9d967555d0b59a89e"
        ],
        [
            "rewrite add_neg_zero.",
            "VernacExtend",
            "bc17e0365887424af17c4b8e95587659e3aa0134"
        ],
        [
            "rewrite (add_commut zero).",
            "VernacExtend",
            "72f02c316388c0c55a886b943bb44156eba92648"
        ],
        [
            "rewrite add_zero.",
            "VernacExtend",
            "f974590c4d53784eabf879b1edac80b48dd263f7"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply sub_add_opp.",
            "VernacExtend",
            "2ba83e32d39523761f365f917dabeaac1b19c3be"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem sub_signed: forall x y, sub x y = repr (signed x - signed y).",
            "VernacStartTheoremProof",
            "eb29b72385960a1048dc0aa5826fec28d90baeb0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold sub.",
            "VernacExtend",
            "09a336a2b822859bc335120602ae265ad23b7a0d"
        ],
        [
            "apply eqm_samerepr.",
            "VernacExtend",
            "2226a5674ed5a7db984e878fdbb37775ca665295"
        ],
        [
            "apply eqm_sub; apply eqm_sym; apply eqm_signed_unsigned.",
            "VernacExtend",
            "25b2ea8d9a7354b7265779fbc0372ebb76f4832b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem unsigned_sub_borrow: forall x y, unsigned (sub x y) = unsigned x - unsigned y + unsigned (sub_borrow x y zero) * modulus.",
            "VernacStartTheoremProof",
            "cc7e925cdbf40c71aa5fe17d21bc4092912d5bd9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold sub, sub_borrow.",
            "VernacExtend",
            "d0054f2bf88f7559176573a4373382890373474a"
        ],
        [
            "rewrite unsigned_zero.",
            "VernacExtend",
            "89956b9f461b9934c8fa99e6e63074f0275efcae"
        ],
        [
            "rewrite Z.sub_0_r.",
            "VernacExtend",
            "7c1ebdca8a3d1d773bf152b4a568fe42ea3a288b"
        ],
        [
            "rewrite unsigned_repr_eq.",
            "VernacExtend",
            "4cdb0c1f390fe84b3a9c8bac49c0b5813452743a"
        ],
        [
            "generalize (unsigned_range x) (unsigned_range y).",
            "VernacExtend",
            "a13a4ed3bded6153267e977896bcd2455187d557"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (zlt (unsigned x - unsigned y) 0).",
            "VernacExtend",
            "7437796774211d4015eec90dca106ee8ec98be2e"
        ],
        [
            "rewrite unsigned_one.",
            "VernacExtend",
            "52f1cc9e4b7b0a3b7c37f5e9a1a6c514d4cb1683"
        ],
        [
            "apply Zmod_unique with (-1).",
            "VernacExtend",
            "9fbfa02026507947911435325d2aedbb9d4084b4"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite unsigned_zero.",
            "VernacExtend",
            "89956b9f461b9934c8fa99e6e63074f0275efcae"
        ],
        [
            "apply Zmod_unique with 0.",
            "VernacExtend",
            "ac4928d6d5599fb111ed1b2a906c054db978f8ba"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_commut: forall x y, mul x y = mul y x.",
            "VernacStartTheoremProof",
            "ba298fccc6e37944ef08fedfb7791ef3e81bfeb1"
        ],
        [
            "intros; unfold mul.",
            "VernacExtend",
            "a4e488cb7271cb7368ec20c55b8e031180aaee4b"
        ],
        [
            "decEq.",
            "VernacExtend",
            "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_zero: forall x, mul x zero = zero.",
            "VernacStartTheoremProof",
            "906fc2c83ab5e50af9aa215f722b7fcbbc2efa44"
        ],
        [
            "intros; unfold mul.",
            "VernacExtend",
            "a4e488cb7271cb7368ec20c55b8e031180aaee4b"
        ],
        [
            "rewrite unsigned_zero.",
            "VernacExtend",
            "89956b9f461b9934c8fa99e6e63074f0275efcae"
        ],
        [
            "unfold zero.",
            "VernacExtend",
            "1f909792743ffabee09dc445053cd7808033ff89"
        ],
        [
            "decEq.",
            "VernacExtend",
            "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_one: forall x, mul x one = x.",
            "VernacStartTheoremProof",
            "94c80e7a58a7d3ea22ea3a71e718545b8e5b88eb"
        ],
        [
            "intros; unfold mul.",
            "VernacExtend",
            "a4e488cb7271cb7368ec20c55b8e031180aaee4b"
        ],
        [
            "rewrite unsigned_one.",
            "VernacExtend",
            "52f1cc9e4b7b0a3b7c37f5e9a1a6c514d4cb1683"
        ],
        [
            "transitivity (repr (unsigned x)).",
            "VernacExtend",
            "ce2d78b728dff46d9f3a12cb6349e1d7b2305f1d"
        ],
        [
            "decEq.",
            "VernacExtend",
            "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "apply repr_unsigned.",
            "VernacExtend",
            "7033f895e7c0a699adb114621e89aafefb338576"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_mone: forall x, mul x mone = neg x.",
            "VernacStartTheoremProof",
            "8d0a66a187106dd8ebe420d478919f49c5a08b9c"
        ],
        [
            "intros; unfold mul, neg.",
            "VernacExtend",
            "44ed779f320cc3a52126fbe75d118b5bf07f66f5"
        ],
        [
            "rewrite unsigned_mone.",
            "VernacExtend",
            "8f638f66e0273f316077da6f32f87449b5bcaa54"
        ],
        [
            "apply eqm_samerepr.",
            "VernacExtend",
            "2226a5674ed5a7db984e878fdbb37775ca665295"
        ],
        [
            "replace (-unsigned x) with (0 - unsigned x) by omega.",
            "VernacExtend",
            "3ce4434542fc30fc9e2219b61d60a3df596874b8"
        ],
        [
            "replace (unsigned x * (modulus - 1)) with (unsigned x * modulus - unsigned x) by ring.",
            "VernacExtend",
            "40bd10540bf0b40dd4b2419f3a50b46effa7cfbd"
        ],
        [
            "apply eqm_sub.",
            "VernacExtend",
            "89203e9861d3d20e16db6ba55a6a41de8352f78f"
        ],
        [
            "exists (unsigned x).",
            "VernacExtend",
            "d268fa8cc6c7052dacadc9ac5bec43ac6d9d5a69"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply eqm_refl.",
            "VernacExtend",
            "cd38aceb6abd087396d34625c4f0ed69968a7526"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_assoc: forall x y z, mul (mul x y) z = mul x (mul y z).",
            "VernacStartTheoremProof",
            "96caeeefc80d2f30d9e07324ce5738649b40fcd1"
        ],
        [
            "intros; unfold mul.",
            "VernacExtend",
            "a4e488cb7271cb7368ec20c55b8e031180aaee4b"
        ],
        [
            "set (x' := unsigned x).",
            "VernacExtend",
            "37cea74d2fdd215da8906415651a9e10de7f9ca0"
        ],
        [
            "set (y' := unsigned y).",
            "VernacExtend",
            "65865d37b040a6ef65e92eeec0041c0908c91bed"
        ],
        [
            "set (z' := unsigned z).",
            "VernacExtend",
            "7c6d2d0828173c29360389a4a483a2210dd1d457"
        ],
        [
            "apply eqm_samerepr.",
            "VernacExtend",
            "2226a5674ed5a7db984e878fdbb37775ca665295"
        ],
        [
            "apply eqm_trans with ((x' * y') * z').",
            "VernacExtend",
            "93ae032d554f0f4e3ba770e675abcae8b1a31fb6"
        ],
        [
            "auto with ints.",
            "VernacExtend",
            "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
        ],
        [
            "rewrite <- Z.mul_assoc.",
            "VernacExtend",
            "a482030af4b7eacc2f9923f251ef4410ebcc85f5"
        ],
        [
            "auto with ints.",
            "VernacExtend",
            "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_add_distr_l: forall x y z, mul (add x y) z = add (mul x z) (mul y z).",
            "VernacStartTheoremProof",
            "6840b3581cfc168b73364e3882856d0df646a436"
        ],
        [
            "intros; unfold mul, add.",
            "VernacExtend",
            "0ed4beb938ead78cb86e0955fc3c2708827adcc0"
        ],
        [
            "apply eqm_samerepr.",
            "VernacExtend",
            "2226a5674ed5a7db984e878fdbb37775ca665295"
        ],
        [
            "set (x' := unsigned x).",
            "VernacExtend",
            "37cea74d2fdd215da8906415651a9e10de7f9ca0"
        ],
        [
            "set (y' := unsigned y).",
            "VernacExtend",
            "65865d37b040a6ef65e92eeec0041c0908c91bed"
        ],
        [
            "set (z' := unsigned z).",
            "VernacExtend",
            "7c6d2d0828173c29360389a4a483a2210dd1d457"
        ],
        [
            "apply eqm_trans with ((x' + y') * z').",
            "VernacExtend",
            "3f964ebd9a76f05bd7ac9fc3575a8758d274a8e6"
        ],
        [
            "auto with ints.",
            "VernacExtend",
            "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
        ],
        [
            "replace ((x' + y') * z') with (x' * z' + y' * z').",
            "VernacExtend",
            "4aadd2f445f785b027625e8f7674b4cbb259e360"
        ],
        [
            "auto with ints.",
            "VernacExtend",
            "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_add_distr_r: forall x y z, mul x (add y z) = add (mul x y) (mul x z).",
            "VernacStartTheoremProof",
            "0c27cac24e03306009ecc67f1156e4a5b329e32d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite mul_commut.",
            "VernacExtend",
            "7e479a6cc087b15b3e77ca62eef65a115285e229"
        ],
        [
            "rewrite mul_add_distr_l.",
            "VernacExtend",
            "e4ac6ea58660fa7c7e3913cfb5ed0ac39d3e2082"
        ],
        [
            "decEq; apply mul_commut.",
            "VernacExtend",
            "fe10d83ac80ee2a799fda1b8902a4525db4e2ced"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem neg_mul_distr_l: forall x y, neg(mul x y) = mul (neg x) y.",
            "VernacStartTheoremProof",
            "8ec0c4621ef674b68687a2d64e7bc92344dea56d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold mul, neg.",
            "VernacExtend",
            "98632fc93ecb26a55461d5581c8bbf6d7c004b22"
        ],
        [
            "set (x' := unsigned x).",
            "VernacExtend",
            "37cea74d2fdd215da8906415651a9e10de7f9ca0"
        ],
        [
            "set (y' := unsigned y).",
            "VernacExtend",
            "65865d37b040a6ef65e92eeec0041c0908c91bed"
        ],
        [
            "apply eqm_samerepr.",
            "VernacExtend",
            "2226a5674ed5a7db984e878fdbb37775ca665295"
        ],
        [
            "apply eqm_trans with (- (x' * y')).",
            "VernacExtend",
            "ca784b5cf281ecd7847fb3ff71273fbb6241c863"
        ],
        [
            "auto with ints.",
            "VernacExtend",
            "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
        ],
        [
            "replace (- (x' * y')) with ((-x') * y') by ring.",
            "VernacExtend",
            "90d0578dd390eaf7b3f53d2ecd55cc68f3552113"
        ],
        [
            "auto with ints.",
            "VernacExtend",
            "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem neg_mul_distr_r: forall x y, neg(mul x y) = mul x (neg y).",
            "VernacStartTheoremProof",
            "ed6c2e856ab0c05c980abe0b2810fb421ef0dc44"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (mul_commut x y).",
            "VernacExtend",
            "cc32d558350087835a54ad33a44536749dea8d29"
        ],
        [
            "rewrite (mul_commut x (neg y)).",
            "VernacExtend",
            "f614d2bca1d37714315c867aabc0d3b289497cca"
        ],
        [
            "apply neg_mul_distr_l.",
            "VernacExtend",
            "e21ff232fa438e516e7981c694a312fb1ca1317c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_signed: forall x y, mul x y = repr (signed x * signed y).",
            "VernacStartTheoremProof",
            "56cce80ed90f28080d0bd53a760b0798788a9539"
        ],
        [
            "intros; unfold mul.",
            "VernacExtend",
            "a4e488cb7271cb7368ec20c55b8e031180aaee4b"
        ],
        [
            "apply eqm_samerepr.",
            "VernacExtend",
            "2226a5674ed5a7db984e878fdbb37775ca665295"
        ],
        [
            "apply eqm_mult; apply eqm_sym; apply eqm_signed_unsigned.",
            "VernacExtend",
            "c13b26832ce0f08e09c4831827e3eea979b4cc6e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modu_divu_Euclid: forall x y, y <> zero -> x = add (mul (divu x y) y) (modu x y).",
            "VernacStartTheoremProof",
            "1599078581ab48ec9784aa094c9db85c244264f2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold add, mul, divu, modu.",
            "VernacExtend",
            "b9ac8da158260870816f5036697c0a0dfaa68558"
        ],
        [
            "transitivity (repr (unsigned x)).",
            "VernacExtend",
            "ce2d78b728dff46d9f3a12cb6349e1d7b2305f1d"
        ],
        [
            "auto with ints.",
            "VernacExtend",
            "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
        ],
        [
            "apply eqm_samerepr.",
            "VernacExtend",
            "2226a5674ed5a7db984e878fdbb37775ca665295"
        ],
        [
            "set (x' := unsigned x).",
            "VernacExtend",
            "37cea74d2fdd215da8906415651a9e10de7f9ca0"
        ],
        [
            "set (y' := unsigned y).",
            "VernacExtend",
            "65865d37b040a6ef65e92eeec0041c0908c91bed"
        ],
        [
            "apply eqm_trans with ((x' / y') * y' + x' mod y').",
            "VernacExtend",
            "87ff0a8865c75084122c64620c81d2e37428577f"
        ],
        [
            "apply eqm_refl2.",
            "VernacExtend",
            "4f34bea58d6e093ed169579de033c7f5d73e929b"
        ],
        [
            "rewrite Z.mul_comm.",
            "VernacExtend",
            "088699fe7f894ededd3c93ab3a27f9d105f1ab84"
        ],
        [
            "apply Z_div_mod_eq.",
            "VernacExtend",
            "c7c7b8c0b3f502009e6f882787bdcc803640e476"
        ],
        [
            "generalize (unsigned_range y); intro.",
            "VernacExtend",
            "acc467580631678b6b6a62ca1e466b1dfe000857"
        ],
        [
            "assert (unsigned y <> 0).",
            "VernacExtend",
            "7eb23e1291bcb004b04f8f402ebd36124aee931b"
        ],
        [
            "red; intro.",
            "VernacExtend",
            "12e00b6ab6f8834b6f81959ca42843abaa311f37"
        ],
        [
            "elim H.",
            "VernacExtend",
            "853aa440c3a3810be05f0f87d0e688c05b92253d"
        ],
        [
            "rewrite <- (repr_unsigned y).",
            "VernacExtend",
            "140fc635f53509ca75abf324c73c2a5f03133e74"
        ],
        [
            "unfold zero.",
            "VernacExtend",
            "1f909792743ffabee09dc445053cd7808033ff89"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "unfold y'.",
            "VernacExtend",
            "ec58d62b3625cce4cac0a816e6c7b98cf405b83a"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "auto with ints.",
            "VernacExtend",
            "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem modu_divu: forall x y, y <> zero -> modu x y = sub x (mul (divu x y) y).",
            "VernacStartTheoremProof",
            "b1f3949767c49fe46c20017e8da093ca0540b95a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (forall a b c, a = add b c -> c = sub a b).",
            "VernacExtend",
            "89e49325b7239ba7a5edff6fe14ba7c9cce77a3b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "subst a.",
            "VernacExtend",
            "d7670e5f9c196bd417b16b29da3532f33d34884d"
        ],
        [
            "rewrite sub_add_l.",
            "VernacExtend",
            "b85e13497290d8a5e632989cf312f50e4a7ca326"
        ],
        [
            "rewrite sub_idem.",
            "VernacExtend",
            "74b97c28b775af06a38fa8c8173c0bac7b76d296"
        ],
        [
            "rewrite add_commut.",
            "VernacExtend",
            "e75b7ced8dcae7a5a7e30f10878b5dbc00bb9021"
        ],
        [
            "rewrite add_zero.",
            "VernacExtend",
            "f974590c4d53784eabf879b1edac80b48dd263f7"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply modu_divu_Euclid.",
            "VernacExtend",
            "0c5d8996718e21dd3001c1d859e3299283ccbd2d"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mods_divs_Euclid: forall x y, x = add (mul (divs x y) y) (mods x y).",
            "VernacStartTheoremProof",
            "8fe3aa9ce6a6cf755248203425a18b363725ff78"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold add, mul, divs, mods.",
            "VernacExtend",
            "223b4b59834dde6e2fa5e8dc59eaf6fd6561eb76"
        ],
        [
            "transitivity (repr (signed x)).",
            "VernacExtend",
            "292958cac404e280efd3ede006a6b4b41b5e68bd"
        ],
        [
            "auto with ints.",
            "VernacExtend",
            "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
        ],
        [
            "apply eqm_samerepr.",
            "VernacExtend",
            "2226a5674ed5a7db984e878fdbb37775ca665295"
        ],
        [
            "set (x' := signed x).",
            "VernacExtend",
            "53d50f0951153ffc978b297a1056035a34452ad0"
        ],
        [
            "set (y' := signed y).",
            "VernacExtend",
            "a8365377390de7d7f78ba84eae39d40b5cd092ce"
        ],
        [
            "apply eqm_trans with ((Z.quot x' y') * y' + Z.rem x' y').",
            "VernacExtend",
            "35fafacb4c9a0e1b4426c0acbe15eca51f84db1a"
        ],
        [
            "apply eqm_refl2.",
            "VernacExtend",
            "4f34bea58d6e093ed169579de033c7f5d73e929b"
        ],
        [
            "rewrite Z.mul_comm.",
            "VernacExtend",
            "088699fe7f894ededd3c93ab3a27f9d105f1ab84"
        ],
        [
            "apply Z.quot_rem'.",
            "VernacExtend",
            "41ef6273884c78048453985ebebb4b55a25bcaaf"
        ],
        [
            "apply eqm_add; auto with ints.",
            "VernacExtend",
            "af5726510e5682d3c82760011803c0892c36d2cc"
        ],
        [
            "apply eqm_unsigned_repr_r.",
            "VernacExtend",
            "0911e24b4d5bf4d1fa1c42c2b6b4303c14b2d0db"
        ],
        [
            "apply eqm_mult; auto with ints.",
            "VernacExtend",
            "f9048979ffe21f789d37b97a35a74a9a377a30a1"
        ],
        [
            "unfold y'.",
            "VernacExtend",
            "ec58d62b3625cce4cac0a816e6c7b98cf405b83a"
        ],
        [
            "apply eqm_signed_unsigned.",
            "VernacExtend",
            "d8614df8b73ff309ccafc1b69753d7e1944f658e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mods_divs: forall x y, mods x y = sub x (mul (divs x y) y).",
            "VernacStartTheoremProof",
            "2886de8a466232edbba7c4c471b78f58d7d15212"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (forall a b c, a = add b c -> c = sub a b).",
            "VernacExtend",
            "89e49325b7239ba7a5edff6fe14ba7c9cce77a3b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "subst a.",
            "VernacExtend",
            "d7670e5f9c196bd417b16b29da3532f33d34884d"
        ],
        [
            "rewrite sub_add_l.",
            "VernacExtend",
            "b85e13497290d8a5e632989cf312f50e4a7ca326"
        ],
        [
            "rewrite sub_idem.",
            "VernacExtend",
            "74b97c28b775af06a38fa8c8173c0bac7b76d296"
        ],
        [
            "rewrite add_commut.",
            "VernacExtend",
            "e75b7ced8dcae7a5a7e30f10878b5dbc00bb9021"
        ],
        [
            "rewrite add_zero.",
            "VernacExtend",
            "f974590c4d53784eabf879b1edac80b48dd263f7"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply mods_divs_Euclid.",
            "VernacExtend",
            "3d9bd190114768ea32650a9997521c2596ac3e11"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem divu_one: forall x, divu x one = x.",
            "VernacStartTheoremProof",
            "68cbc5863e8a47897cf7224007832b8f160f02bf"
        ],
        [
            "unfold divu; intros.",
            "VernacExtend",
            "aa54a1152a916081452c83f5d6869c2ac9f3f331"
        ],
        [
            "rewrite unsigned_one.",
            "VernacExtend",
            "52f1cc9e4b7b0a3b7c37f5e9a1a6c514d4cb1683"
        ],
        [
            "rewrite Zdiv_1_r.",
            "VernacExtend",
            "fb519c27d201f0568a21677dcf3ac2ffedb61d8b"
        ],
        [
            "apply repr_unsigned.",
            "VernacExtend",
            "7033f895e7c0a699adb114621e89aafefb338576"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem divs_one: forall x, zwordsize > 1 -> divs x one = x.",
            "VernacStartTheoremProof",
            "72e7313f8800fd761547b4d357358f6d98334a50"
        ],
        [
            "unfold divs; intros.",
            "VernacExtend",
            "e2d9b969ef4a149090f8a79e0cabd382baf71432"
        ],
        [
            "rewrite signed_one.",
            "VernacExtend",
            "3ac458e0e12ef77b3ca6c2bd665e5e200ef6f5df"
        ],
        [
            "rewrite Z.quot_1_r.",
            "VernacExtend",
            "c76da0aed8ddf96c7b8f42a8b078eebcda3031e0"
        ],
        [
            "apply repr_signed.",
            "VernacExtend",
            "6ac037f1d42a8ffc7ffc97da2226a128bb137982"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem modu_one: forall x, modu x one = zero.",
            "VernacStartTheoremProof",
            "a767cbfa142aec982bc20ee0d977feef9b60c5f2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite modu_divu.",
            "VernacExtend",
            "58c71cace382cfd202b9b2d74e714aed6e8558dc"
        ],
        [
            "rewrite divu_one.",
            "VernacExtend",
            "20073d1db8c5647570bac2e449a32ca9ca3138c4"
        ],
        [
            "rewrite mul_one.",
            "VernacExtend",
            "48e185ca99d9fb7850b9fee25eb6e9a16ab7f505"
        ],
        [
            "apply sub_idem.",
            "VernacExtend",
            "0d351e2ff3a0e2f9a517ac22afc7233dc23f5d18"
        ],
        [
            "apply one_not_zero.",
            "VernacExtend",
            "3100bf57338f28e8a19aae3a83d8631989ffd4d8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem divs_mone: forall x, divs x mone = neg x.",
            "VernacStartTheoremProof",
            "7167e01f798c464a80697aa5003a1493d7f08fcc"
        ],
        [
            "unfold divs, neg; intros.",
            "VernacExtend",
            "fd5a5a7ac5b0d3b9be4eab06215cb52d99a2abea"
        ],
        [
            "rewrite signed_mone.",
            "VernacExtend",
            "ebd25e8871ab72127eab3ffa5449c8f2c24396e5"
        ],
        [
            "replace (Z.quot (signed x) (-1)) with (- (signed x)).",
            "VernacExtend",
            "48a14c60aa8f8337721ec838fd3d6dc39a5774b8"
        ],
        [
            "apply eqm_samerepr.",
            "VernacExtend",
            "2226a5674ed5a7db984e878fdbb37775ca665295"
        ],
        [
            "apply eqm_neg.",
            "VernacExtend",
            "ae34228661aadfb504fadb20b3fc83a007c4c27d"
        ],
        [
            "apply eqm_signed_unsigned.",
            "VernacExtend",
            "d8614df8b73ff309ccafc1b69753d7e1944f658e"
        ],
        [
            "set (x' := signed x).",
            "VernacExtend",
            "53d50f0951153ffc978b297a1056035a34452ad0"
        ],
        [
            "set (one := 1).",
            "VernacExtend",
            "da822c5bf427173821a13a6033efb8489c6fa149"
        ],
        [
            "change (-1) with (- one).",
            "VernacExtend",
            "1265198340d48e214f3daab81928ac349be8b043"
        ],
        [
            "rewrite Zquot_opp_r.",
            "VernacExtend",
            "93837ed5e2413080a14343fa4bf8ff71e114b73f"
        ],
        [
            "assert (Z.quot x' one = x').",
            "VernacExtend",
            "6785d878ddbbc9e65952a1278a9f20165eeaac89"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Zquot_unique_full with 0.",
            "VernacExtend",
            "251da33267a2c2890c6e8004f6351491b240e4d9"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "change (Z.abs one) with 1.",
            "VernacExtend",
            "40b770f2249f21868f64babb5396655a19da160f"
        ],
        [
            "destruct (zle 0 x').",
            "VernacExtend",
            "d196d619763c2f9f58803c38b9f4154389395c97"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "unfold one; ring.",
            "VernacExtend",
            "0bb9674ab779679dc75f8e7b7fea6e5c3ee85579"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mods_mone: forall x, mods x mone = zero.",
            "VernacStartTheoremProof",
            "b33419ce2db418a822771bd0b2f70ada0c16e59b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite mods_divs.",
            "VernacExtend",
            "ade74b2f92c656c0046b7cafa3fd46094e2a51e9"
        ],
        [
            "rewrite divs_mone.",
            "VernacExtend",
            "673494c4e456a66aca581bd26af34c35cbf6ab3c"
        ],
        [
            "rewrite <- neg_mul_distr_l.",
            "VernacExtend",
            "2866b46dfa2e545c01732f68e43bd4c2845aadd1"
        ],
        [
            "rewrite mul_mone.",
            "VernacExtend",
            "c243e273fbb1c9b7f871b82b3db1d1007eb6ebaa"
        ],
        [
            "rewrite neg_involutive.",
            "VernacExtend",
            "63864e7afd1a4982181db692d2a381617a2847bd"
        ],
        [
            "apply sub_idem.",
            "VernacExtend",
            "0d351e2ff3a0e2f9a517ac22afc7233dc23f5d18"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem divmodu2_divu_modu: forall n d, d <> zero -> divmodu2 zero n d = Some (divu n d, modu n d).",
            "VernacStartTheoremProof",
            "7dfa24f842e49e206f39dc30f7f3e341c465de94"
        ],
        [
            "unfold divmodu2, divu, modu; intros.",
            "VernacExtend",
            "a46a846ff530b805b7ef8de4c67dd4bef821c171"
        ],
        [
            "rewrite dec_eq_false by auto.",
            "VernacExtend",
            "f5dc8547351522152203c19172932504558d6fd2"
        ],
        [
            "set (N := unsigned zero * modulus + unsigned n).",
            "VernacExtend",
            "c6ccb9d647974a5e8f52da0779524db2f816ef57"
        ],
        [
            "assert (E1: unsigned n = N) by (unfold N; rewrite unsigned_zero; ring).",
            "VernacExtend",
            "6a3af5b738f11a879fc861c0718ff8ecdd77d623"
        ],
        [
            "rewrite ! E1.",
            "VernacExtend",
            "7c15806735ddac9675a6e3575f32cc74240f8752"
        ],
        [
            "set (D := unsigned d).",
            "VernacExtend",
            "349a7c331ce171a8827fef0f23dd41c9f47bf399"
        ],
        [
            "set (Q := N / D); set (R := N mod D).",
            "VernacExtend",
            "19aa9bae49e24f6d2978613b0f01f4cda3d0b4e2"
        ],
        [
            "assert (E2: Z.div_eucl N D = (Q, R)).",
            "VernacExtend",
            "1a992fd8a7b34873a28a24346dde07f4fe910dd3"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold Q, R, Z.div, Z.modulo.",
            "VernacExtend",
            "1a386d1d7dc9914e30db8fdaab86817132cf0604"
        ],
        [
            "destruct (Z.div_eucl N D); auto.",
            "VernacExtend",
            "a4bafbfec12f564cc55f4c7fef5640160df9b33e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite E2.",
            "VernacExtend",
            "c1992017a1964997678a075d895ea663dab1c9df"
        ],
        [
            "rewrite zle_true.",
            "VernacExtend",
            "94e9a30da73a2701b50d8a453621de40d8280f0d"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (unsigned d <> 0).",
            "VernacExtend",
            "7f49aacce6f05ec33260e0cf3c804552675186fb"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "elim H.",
            "VernacExtend",
            "853aa440c3a3810be05f0f87d0e688c05b92253d"
        ],
        [
            "rewrite <- (repr_unsigned d).",
            "VernacExtend",
            "3e4a2b31404d71a7a4d25ac99bb9e6dcf6878a12"
        ],
        [
            "rewrite H0; auto.",
            "VernacExtend",
            "48df2b0b453adadcea8e6914bccb68bfc33b286b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (0 < D).",
            "VernacExtend",
            "45de28e32202ffc79d3c593eb70bb284497adac5"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold D.",
            "VernacExtend",
            "e0920de6e8552a2bfd7f383ec48f8d977317de3f"
        ],
        [
            "generalize (unsigned_range d); intros.",
            "VernacExtend",
            "4f94435ac2fb1b70c8fec320ad1376701e53556b"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (0 <= Q <= max_unsigned).",
            "VernacExtend",
            "a0a4c6aad53e2fcd0f1456e4486d289a02ddd348"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold Q.",
            "VernacExtend",
            "6c2775be9b30b714c0e0556611a6b2ec9d8bc723"
        ],
        [
            "apply Zdiv_interval_2.",
            "VernacExtend",
            "a54cd5bca005ddf7f7f89e67c7214cc705fff803"
        ],
        [
            "rewrite <- E1; apply unsigned_range_2.",
            "VernacExtend",
            "bbc14025d51de9f4ab7c0188b21fffbd0ef49ffc"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "unfold max_unsigned; generalize modulus_pos; omega.",
            "VernacExtend",
            "0cb1fdaae338ba0b2f8350108ff04cf80d916b62"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unsigned_signed: forall n, unsigned n = if lt n zero then signed n + modulus else signed n.",
            "VernacStartTheoremProof",
            "f1d4c2f589eb98d21ab46f563dea080de6b29ddf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold lt.",
            "VernacExtend",
            "2e821d407c03d5f5e572c51453fdc618d9dec364"
        ],
        [
            "rewrite signed_zero.",
            "VernacExtend",
            "19d56ca0cd36da40c29724bb93cb20d76340e45c"
        ],
        [
            "unfold signed.",
            "VernacExtend",
            "f99b13683b7fbccb713276bdf12a56c47fabc924"
        ],
        [
            "generalize (unsigned_range n).",
            "VernacExtend",
            "77276e8d47ba9f08799db8adaa6c1dc06db092fe"
        ],
        [
            "rewrite half_modulus_modulus.",
            "VernacExtend",
            "4f1be9507367745c91dc7a8dae1c9475380b67ad"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (zlt (unsigned n) half_modulus).",
            "VernacExtend",
            "4f616861fda3d30f1f721ca1f8db92a377979afa"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite zlt_false by omega.",
            "VernacExtend",
            "1a3d93f438781af1cb3b43101336d435afaef9a1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite zlt_true by omega.",
            "VernacExtend",
            "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem divmods2_divs_mods: forall n d, d <> zero -> n <> repr min_signed \\/ d <> mone -> divmods2 (if lt n zero then mone else zero) n d = Some (divs n d, mods n d).",
            "VernacStartTheoremProof",
            "a513bd2d5f4b65754c432043396edd644f879973"
        ],
        [
            "unfold divmods2, divs, mods; intros.",
            "VernacExtend",
            "855314c06c37c28abae9054949c92b1308c11b46"
        ],
        [
            "rewrite dec_eq_false by auto.",
            "VernacExtend",
            "f5dc8547351522152203c19172932504558d6fd2"
        ],
        [
            "set (N := signed (if lt n zero then mone else zero) * modulus + unsigned n).",
            "VernacExtend",
            "983d548847f6398093f0ee0552bc68a088d07c08"
        ],
        [
            "set (D := signed d).",
            "VernacExtend",
            "d4bef3fea3ceed627442415b08a9afb17207175a"
        ],
        [
            "assert (D <> 0).",
            "VernacExtend",
            "d246a55cdb539b19f1824393621962f1140e27c3"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold D; red; intros.",
            "VernacExtend",
            "8156990d2438353f473c86b9995653ee0ee4656b"
        ],
        [
            "elim H.",
            "VernacExtend",
            "853aa440c3a3810be05f0f87d0e688c05b92253d"
        ],
        [
            "rewrite <- (repr_signed d).",
            "VernacExtend",
            "22435d6a60576c362f29d9f7d405062511fcb043"
        ],
        [
            "rewrite H1; auto.",
            "VernacExtend",
            "1413124b63144a92c2b8c7e916995d6cd3746a77"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (N = signed n).",
            "VernacExtend",
            "7ded32ef303488312af34246ed138c9da129e809"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold N.",
            "VernacExtend",
            "e84969bf3a012f2b02bd8ab89f79f6e0b53e6b71"
        ],
        [
            "rewrite unsigned_signed.",
            "VernacExtend",
            "5785d0e29295410e6a8f0172f16ea665304a5d30"
        ],
        [
            "destruct (lt n zero).",
            "VernacExtend",
            "3169d6716b29a69971843e278b2bc655fc2bc8e9"
        ],
        [
            "rewrite signed_mone.",
            "VernacExtend",
            "ebd25e8871ab72127eab3ffa5449c8f2c24396e5"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "rewrite signed_zero.",
            "VernacExtend",
            "19d56ca0cd36da40c29724bb93cb20d76340e45c"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "set (Q := Z.quot N D); set (R := Z.rem N D).",
            "VernacExtend",
            "50b753f8b2ab300f090aa2ae782820f2f3a38bfd"
        ],
        [
            "assert (E2: Z.quotrem N D = (Q, R)).",
            "VernacExtend",
            "5972c2ddfaf55cd3c28ffde114f45fe366e9c4ba"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold Q, R, Z.quot, Z.rem.",
            "VernacExtend",
            "f71cf502a01f63b83e5566dc191cd4e3bb4417f9"
        ],
        [
            "destruct (Z.quotrem N D); auto.",
            "VernacExtend",
            "2ca84272ce4a5dfd79febecdb4d4bc1acf90904f"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite E2.",
            "VernacExtend",
            "c1992017a1964997678a075d895ea663dab1c9df"
        ],
        [
            "assert (min_signed <= N <= max_signed) by (rewrite H2; apply signed_range).",
            "VernacExtend",
            "a6843e4c4ce4b1a135e02db5e0e22a3ef48ccd29"
        ],
        [
            "assert (min_signed <= Q <= max_signed).",
            "VernacExtend",
            "5ffd82eac879134124b29bb04dbd44b4859a7a1d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold Q.",
            "VernacExtend",
            "6c2775be9b30b714c0e0556611a6b2ec9d8bc723"
        ],
        [
            "destruct (zeq D 1); [ | destruct (zeq D (-1))].",
            "VernacExtend",
            "b643c4c60ee73011bfc9cc6191d2e1cbff57382d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite e.",
            "VernacExtend",
            "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
        ],
        [
            "rewrite Z.quot_1_r; auto.",
            "VernacExtend",
            "124df3d08592e326390786a9f22a99de559c6a08"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite e.",
            "VernacExtend",
            "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
        ],
        [
            "change (-1) with (Z.opp 1).",
            "VernacExtend",
            "79a621415cfebbed6fdd8d98025fe348b61290f3"
        ],
        [
            "rewrite Z.quot_opp_r by omega.",
            "VernacExtend",
            "7c159c3e7ffe697a8092230a08143903917271f8"
        ],
        [
            "rewrite Z.quot_1_r.",
            "VernacExtend",
            "c76da0aed8ddf96c7b8f42a8b078eebcda3031e0"
        ],
        [
            "assert (N <> min_signed).",
            "VernacExtend",
            "2e7e44d79f7dbdcf2e2bdb7bbab35fe33a8e46c8"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "red; intros; destruct H0.",
            "VernacExtend",
            "45b8835d63d59ca8b9d0b7cb923a193850c8f35e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "elim H0.",
            "VernacExtend",
            "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
        ],
        [
            "rewrite <- (repr_signed n).",
            "VernacExtend",
            "fac73cfb7dcab5f77204115cdc865ca3f9f89895"
        ],
        [
            "rewrite <- H2.",
            "VernacExtend",
            "c204509e5e85cb1396c425732210ff127ac38a7b"
        ],
        [
            "rewrite H4.",
            "VernacExtend",
            "fc5d011df68f7160e4669d129d2975825ac089bb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "elim H0.",
            "VernacExtend",
            "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
        ],
        [
            "rewrite <- (repr_signed d).",
            "VernacExtend",
            "22435d6a60576c362f29d9f7d405062511fcb043"
        ],
        [
            "unfold D in e; rewrite e; auto.",
            "VernacExtend",
            "9db67c615319e408fe0c67fe608bf58962284fa1"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "unfold min_signed, max_signed in *.",
            "VernacExtend",
            "0a5ce9383c7eaa014ad10d6332461beadea6480f"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (Z.abs (Z.quot N D) < half_modulus).",
            "VernacExtend",
            "eb6fa6b7fd68fa936e4d8a31c0126640b00c43bb"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite <- Z.quot_abs by omega.",
            "VernacExtend",
            "e0d74c17ddf5b5e0689688342a2c22a78e5d0c51"
        ],
        [
            "apply Zquot_lt_upper_bound.",
            "VernacExtend",
            "61bd27888dedc0fb19e3d5515e7f6c824b82182f"
        ],
        [
            "xomega.",
            "VernacExtend",
            "92dc13ff6a078243e0cd72420247996d076ca43b"
        ],
        [
            "xomega.",
            "VernacExtend",
            "92dc13ff6a078243e0cd72420247996d076ca43b"
        ],
        [
            "apply Z.le_lt_trans with (half_modulus * 1).",
            "VernacExtend",
            "f0abcf99933ed05770e4a006b1cf30504b1d3691"
        ],
        [
            "rewrite Z.mul_1_r.",
            "VernacExtend",
            "80f92f5dcc09db388a2087f0ef3ff1d16ecdfdff"
        ],
        [
            "unfold min_signed, max_signed in H3; xomega.",
            "VernacExtend",
            "51dd6fcf44a120937627518124c438470689977e"
        ],
        [
            "apply Zmult_lt_compat_l.",
            "VernacExtend",
            "7a9d6f1e8ff69171598695489216bd3111dec834"
        ],
        [
            "generalize half_modulus_pos; omega.",
            "VernacExtend",
            "84349a0a8d7cb036146828c241fa5c72249fbb54"
        ],
        [
            "xomega.",
            "VernacExtend",
            "92dc13ff6a078243e0cd72420247996d076ca43b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite Z.abs_lt in H4.",
            "VernacExtend",
            "c62ecfb6aee4a96ab6c08c3a02a7a967e5057727"
        ],
        [
            "unfold min_signed, max_signed; omega.",
            "VernacExtend",
            "8a2751f9f2b8d684e1e27f3060479ed0bde88d25"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "unfold proj_sumbool; rewrite ! zle_true by omega; simpl.",
            "VernacExtend",
            "c81e0facfa6fa059f56fafd0d13d4adf9080c2b6"
        ],
        [
            "unfold Q, R; rewrite H2; auto.",
            "VernacExtend",
            "909f68589edf0e37fe525864b71ec4b09a23cbf3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark Ztestbit_0: forall n, Z.testbit 0 n = false.",
            "VernacStartTheoremProof",
            "a4a04f9e0bd55b16083ae54595e7b45f790d415f"
        ],
        [
            "Proof Z.testbit_0_l.",
            "VernacExactProof",
            "05a364f66b7885fdd4cf8ff1efbefc5f8eaa645a"
        ],
        [
            "Remark Ztestbit_1: forall n, Z.testbit 1 n = zeq n 0.",
            "VernacStartTheoremProof",
            "28cc632373bf5f4a18bff7d73538efac188ed6c3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct n; simpl; auto.",
            "VernacExtend",
            "1e3544c1db38cf9d3b82500db7d90f24bce9aeea"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark Ztestbit_m1: forall n, 0 <= n -> Z.testbit (-1) n = true.",
            "VernacStartTheoremProof",
            "0d6bd24cb3283975982459712b975a535bc20026"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct n; simpl; auto.",
            "VernacExtend",
            "1e3544c1db38cf9d3b82500db7d90f24bce9aeea"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark Zshiftin_spec: forall b x, Zshiftin b x = 2 * x + (if b then 1 else 0).",
            "VernacStartTheoremProof",
            "2a8faaacac87a1c5e8e445252ee19d4e8c1eaf53"
        ],
        [
            "unfold Zshiftin; intros.",
            "VernacExtend",
            "8544381b1609b993aa2799f33ce9a2c47da8df30"
        ],
        [
            "destruct b.",
            "VernacExtend",
            "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Z.succ_double_spec.",
            "VernacExtend",
            "8bc2717e7923d84312ac9000dbbbd737baebc29b"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Z.double_spec.",
            "VernacExtend",
            "91dfab94a8e039994fe27000daabec42e7754785"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark Zshiftin_inj: forall b1 x1 b2 x2, Zshiftin b1 x1 = Zshiftin b2 x2 -> b1 = b2 /\\ x1 = x2.",
            "VernacStartTheoremProof",
            "5c73b73524ada716bc01e1d670bc17158735ef38"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite !Zshiftin_spec in H.",
            "VernacExtend",
            "97353c2d1078e053bf20417b9ca84cea27ec0eab"
        ],
        [
            "destruct b1; destruct b2.",
            "VernacExtend",
            "b3859bae3bf0f946802f03471131138b3d63cb98"
        ],
        [
            "split; [auto|omega].",
            "VernacExtend",
            "dc8969f22da5bb8c94f02904ce1e1da8478b5f66"
        ],
        [
            "omegaContradiction.",
            "VernacExtend",
            "329a0d87fada76e54a403fa49705e937670711cd"
        ],
        [
            "omegaContradiction.",
            "VernacExtend",
            "329a0d87fada76e54a403fa49705e937670711cd"
        ],
        [
            "split; [auto|omega].",
            "VernacExtend",
            "dc8969f22da5bb8c94f02904ce1e1da8478b5f66"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark Zdecomp: forall x, x = Zshiftin (Z.odd x) (Z.div2 x).",
            "VernacStartTheoremProof",
            "bc64a40fcadca5b9ce35354dc4caf653f376bcd5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct x; simpl.",
            "VernacExtend",
            "b0c3c03e2d0a8fa13c533c8a79c2c6b3067d60db"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct p; auto.",
            "VernacExtend",
            "94280b3a49c08b76852fac1fca3c7461587f918a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct p; auto.",
            "VernacExtend",
            "94280b3a49c08b76852fac1fca3c7461587f918a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Pos.pred_double_succ.",
            "VernacExtend",
            "eaa8aac3ead417b3d8bde9615ec8b2f7ed32bfba"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark Ztestbit_shiftin: forall b x n, 0 <= n -> Z.testbit (Zshiftin b x) n = if zeq n 0 then b else Z.testbit x (Z.pred n).",
            "VernacStartTheoremProof",
            "61a406acf6a0efce3bfa739a097b8c1379f69b7d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite Zshiftin_spec.",
            "VernacExtend",
            "d6761270d320e65edf1ff35092908241b44e627f"
        ],
        [
            "destruct (zeq n 0).",
            "VernacExtend",
            "4176a7e0059dea26cced6a60ea81dc6dae3cc010"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst n.",
            "VernacExtend",
            "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
        ],
        [
            "destruct b.",
            "VernacExtend",
            "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply Z.testbit_odd_0.",
            "VernacExtend",
            "914938ff3d17529b407d0f89f6249dcc64394521"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite Z.add_0_r.",
            "VernacExtend",
            "06ae07741c51588ad5058ce812450f10227d7b7a"
        ],
        [
            "apply Z.testbit_even_0.",
            "VernacExtend",
            "0703c1d02304c29ff831a8b1f74f535be85e71cc"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (0 <= Z.pred n) by omega.",
            "VernacExtend",
            "26aedd200ad01505ce6d403ee6bf6aeac4254287"
        ],
        [
            "set (n' := Z.pred n) in *.",
            "VernacExtend",
            "538fc31a2f22408950236bd28987287677dd7f09"
        ],
        [
            "replace n with (Z.succ n') by (unfold n'; omega).",
            "VernacExtend",
            "1642b122fc402c22215d8d9dc633d57ff6bcdaf9"
        ],
        [
            "destruct b.",
            "VernacExtend",
            "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply Z.testbit_odd_succ; auto.",
            "VernacExtend",
            "e90b9c6f5d8df36d3599bbada4535bdc369a4166"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite Z.add_0_r.",
            "VernacExtend",
            "06ae07741c51588ad5058ce812450f10227d7b7a"
        ],
        [
            "apply Z.testbit_even_succ; auto.",
            "VernacExtend",
            "f4cc1b4eb6ecd947099b950c069ff94c308927cb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark Ztestbit_shiftin_base: forall b x, Z.testbit (Zshiftin b x) 0 = b.",
            "VernacStartTheoremProof",
            "4fbb549b94a5ffa9eee4b95c6b76eb41d9bcf07a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite Ztestbit_shiftin.",
            "VernacExtend",
            "4566040421bf5d63fd1949bb270b1f6e45af96d4"
        ],
        [
            "apply zeq_true.",
            "VernacExtend",
            "af0121a2373c6f0f0aecd87040e8474a45a41dff"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark Ztestbit_shiftin_succ: forall b x n, 0 <= n -> Z.testbit (Zshiftin b x) (Z.succ n) = Z.testbit x n.",
            "VernacStartTheoremProof",
            "4704c6252d8e6ae19c90d0e5eea15a9a3aec39a9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite Ztestbit_shiftin.",
            "VernacExtend",
            "4566040421bf5d63fd1949bb270b1f6e45af96d4"
        ],
        [
            "rewrite zeq_false.",
            "VernacExtend",
            "dab8f9109b7a6d08485a19d2b305200449ea8478"
        ],
        [
            "rewrite Z.pred_succ.",
            "VernacExtend",
            "fd019b24c7f66d66d1631141e017af69d900e942"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark Ztestbit_eq: forall n x, 0 <= n -> Z.testbit x n = if zeq n 0 then Z.odd x else Z.testbit (Z.div2 x) (Z.pred n).",
            "VernacStartTheoremProof",
            "04a92f4483cb7d44d77262113cc16bd183063cef"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (Zdecomp x) at 1.",
            "VernacExtend",
            "32c4e2329c7c883af7bbd3331c351c95956ae68c"
        ],
        [
            "apply Ztestbit_shiftin; auto.",
            "VernacExtend",
            "ad66a91ab1f2a2a8e540b4b2512938cc02e9f3ec"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark Ztestbit_base: forall x, Z.testbit x 0 = Z.odd x.",
            "VernacStartTheoremProof",
            "b034bfddfb3a10f3241948e4805fd4c498d2a622"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite Ztestbit_eq.",
            "VernacExtend",
            "cc27e9791667c9a7f1466faf67869f938d5d405a"
        ],
        [
            "apply zeq_true.",
            "VernacExtend",
            "af0121a2373c6f0f0aecd87040e8474a45a41dff"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark Ztestbit_succ: forall n x, 0 <= n -> Z.testbit x (Z.succ n) = Z.testbit (Z.div2 x) n.",
            "VernacStartTheoremProof",
            "41a9909b1df74fe671d351203ac05237139a96ba"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite Ztestbit_eq.",
            "VernacExtend",
            "cc27e9791667c9a7f1466faf67869f938d5d405a"
        ],
        [
            "rewrite zeq_false.",
            "VernacExtend",
            "dab8f9109b7a6d08485a19d2b305200449ea8478"
        ],
        [
            "rewrite Z.pred_succ.",
            "VernacExtend",
            "fd019b24c7f66d66d1631141e017af69d900e942"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqmod_same_bits: forall n x y, (forall i, 0 <= i < Z.of_nat n -> Z.testbit x i = Z.testbit y i) -> eqmod (two_power_nat n) x y.",
            "VernacStartTheoremProof",
            "0943f31741288924cfa8f2b776f353dc8cafbaa5"
        ],
        [
            "induction n; intros.",
            "VernacExtend",
            "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "change (two_power_nat 0) with 1.",
            "VernacExtend",
            "c7f4c4b58f57dade691379376039997baa8fd90e"
        ],
        [
            "exists (x-y); ring.",
            "VernacExtend",
            "7d8b9cbc7e6e484ca3ebec520a9932e67e664f45"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite two_power_nat_S.",
            "VernacExtend",
            "a9744f6bd9a8fe7c31c0f7154478ac3b90a12f1b"
        ],
        [
            "assert (eqmod (two_power_nat n) (Z.div2 x) (Z.div2 y)).",
            "VernacExtend",
            "d9c84834a1b76ffd29d987cfaba13f526a354d14"
        ],
        [
            "apply IHn.",
            "VernacExtend",
            "1c9414f4f052b2727ca012553a4a3a2a0fc85649"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- !Ztestbit_succ.",
            "VernacExtend",
            "837309136a16d510349c7f9f91a790c3158eaa53"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "rewrite Nat2Z.inj_succ; omega.",
            "VernacExtend",
            "138dc6550f8c1f2984d228a98db031923f5c7ba4"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "destruct H0 as [k EQ].",
            "VernacExtend",
            "4ee66c3dbfb8b5efbe1d25a135d60a6ce584ed94"
        ],
        [
            "exists k.",
            "VernacExtend",
            "5bd085ef2f3e8bbd4bde88ae4ddb2fb4c72df1a9"
        ],
        [
            "rewrite (Zdecomp x).",
            "VernacExtend",
            "bbfaec973e49a865a8697e2aa301fde6a3b455ac"
        ],
        [
            "rewrite (Zdecomp y).",
            "VernacExtend",
            "d9dc0f01b3227e515daffe768a019322b861608a"
        ],
        [
            "replace (Z.odd y) with (Z.odd x).",
            "VernacExtend",
            "04f09411fa8418e1bb1711e426eaa28ec50c8ea3"
        ],
        [
            "rewrite EQ.",
            "VernacExtend",
            "359c5e196f83a6afbd9ede635bddbf545fd1eb82"
        ],
        [
            "rewrite !Zshiftin_spec.",
            "VernacExtend",
            "aa9d3dedf623bac9a8173e30b44355badd5e5367"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "exploit (H 0).",
            "VernacExtend",
            "42ad913e3fffb0d0520c84c3a3969674905fe674"
        ],
        [
            "rewrite Nat2Z.inj_succ; omega.",
            "VernacExtend",
            "138dc6550f8c1f2984d228a98db031923f5c7ba4"
        ],
        [
            "rewrite !Ztestbit_base.",
            "VernacExtend",
            "c89b155d8b7ef94b9eebafde7a23e12ee3517b5e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqm_same_bits: forall x y, (forall i, 0 <= i < zwordsize -> Z.testbit x i = Z.testbit y i) -> eqm x y.",
            "VernacStartTheoremProof",
            "c83922831dcfd618f0f7195e140410e7f0dd3202"
        ],
        [
            "Proof (eqmod_same_bits wordsize).",
            "VernacExactProof",
            "5d0fd32b0f49c7ea2460904f30645da0b82502f1"
        ],
        [
            "Lemma same_bits_eqmod: forall n x y i, eqmod (two_power_nat n) x y -> 0 <= i < Z.of_nat n -> Z.testbit x i = Z.testbit y i.",
            "VernacStartTheoremProof",
            "b1fb541764503b6a9272b6e9918edd7ffd52d9eb"
        ],
        [
            "induction n; intros.",
            "VernacExtend",
            "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "omegaContradiction.",
            "VernacExtend",
            "329a0d87fada76e54a403fa49705e937670711cd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Nat2Z.inj_succ in H0.",
            "VernacExtend",
            "857b92af4753b6fa2e29560a1f8f1b3f36116146"
        ],
        [
            "rewrite two_power_nat_S in H.",
            "VernacExtend",
            "3e4a703255e1d1cba37f1db1db4eb3be76c2e046"
        ],
        [
            "rewrite !(Ztestbit_eq i); intuition.",
            "VernacExtend",
            "c5a5a95371c98449ab8f08afc3c86aa6369793b3"
        ],
        [
            "destruct H as [k EQ].",
            "VernacExtend",
            "c9baa1112395e78126ee4d1c1c1dc430c2db4072"
        ],
        [
            "assert (EQ': Zshiftin (Z.odd x) (Z.div2 x) = Zshiftin (Z.odd y) (k * two_power_nat n + Z.div2 y)).",
            "VernacExtend",
            "c4adbed3747daf8d1ce448538fd71f3b603e9bc7"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite (Zdecomp x) in EQ.",
            "VernacExtend",
            "856eb8ef9dc7a34ca46aa47b163eeeab1f7d082b"
        ],
        [
            "rewrite (Zdecomp y) in EQ.",
            "VernacExtend",
            "15e7e5efd29f87fa5c9cb9835960b50ab69aa4cb"
        ],
        [
            "rewrite EQ.",
            "VernacExtend",
            "359c5e196f83a6afbd9ede635bddbf545fd1eb82"
        ],
        [
            "rewrite !Zshiftin_spec.",
            "VernacExtend",
            "aa9d3dedf623bac9a8173e30b44355badd5e5367"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "exploit Zshiftin_inj; eauto.",
            "VernacExtend",
            "e0910e9696baa83aa5ae8ef6bc6f621d9473bc63"
        ],
        [
            "intros [A B].",
            "VernacExtend",
            "269ecc1b12a78cad85161d58003fb0ebdea8ebc3"
        ],
        [
            "destruct (zeq i 0).",
            "VernacExtend",
            "d84935205e6f3de20c609dbacd0c5438037a33e9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply IHn.",
            "VernacExtend",
            "1c9414f4f052b2727ca012553a4a3a2a0fc85649"
        ],
        [
            "exists k; auto.",
            "VernacExtend",
            "930bbe24c94723a9e2f5da004090011e877c06d9"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma same_bits_eqm: forall x y i, eqm x y -> 0 <= i < zwordsize -> Z.testbit x i = Z.testbit y i.",
            "VernacStartTheoremProof",
            "9ed07f90fc3f41ef36abd2343e3b5ab3ea60a9ba"
        ],
        [
            "Proof (same_bits_eqmod wordsize).",
            "VernacExactProof",
            "3ace5601322c0fe9712056ba21d16834bbd2a1e3"
        ],
        [
            "Remark two_power_nat_infinity: forall x, 0 <= x -> exists n, x < two_power_nat n.",
            "VernacStartTheoremProof",
            "9a88bd46eae59de2bcb65a1345f132e84c63b47c"
        ],
        [
            "intros x0 POS0; pattern x0; apply natlike_ind; auto.",
            "VernacExtend",
            "a1cd05de4a0edd1834edef3fe4e3c59e8c1c9e1d"
        ],
        [
            "exists O.",
            "VernacExtend",
            "857793ba1f2fca166b38dcce16bdb0403ad0f7dc"
        ],
        [
            "compute; auto.",
            "VernacExtend",
            "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H0 as [n LT].",
            "VernacExtend",
            "86659fe9b0d341bd6273f4001c9f9e2824336aa7"
        ],
        [
            "exists (S n).",
            "VernacExtend",
            "cd2a24563bef1e96e5268d448b7159cbb0bda443"
        ],
        [
            "rewrite two_power_nat_S.",
            "VernacExtend",
            "a9744f6bd9a8fe7c31c0f7154478ac3b90a12f1b"
        ],
        [
            "generalize (two_power_nat_pos n).",
            "VernacExtend",
            "0ba544cb0f284372dd11bdd2e82f5b029e731ed1"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma equal_same_bits: forall x y, (forall i, 0 <= i -> Z.testbit x i = Z.testbit y i) -> x = y.",
            "VernacStartTheoremProof",
            "adc3312bcd0bfa47f409d6ee47dc92d919ed46de"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "set (z := if zlt x y then y - x else x - y).",
            "VernacExtend",
            "2cfd5510205820de2966ea02ca01a69e442ad691"
        ],
        [
            "assert (0 <= z).",
            "VernacExtend",
            "dd09589ef10b3e3a90bd32302d0fc05a1ea6656a"
        ],
        [
            "unfold z; destruct (zlt x y); omega.",
            "VernacExtend",
            "51306231d757e71daa7b54798b9bfb7084a990c9"
        ],
        [
            "exploit (two_power_nat_infinity z); auto.",
            "VernacExtend",
            "523042c08cbfd4bb7ab8a4ef6da450ed49753392"
        ],
        [
            "intros [n LT].",
            "VernacExtend",
            "765cb27f401613fc6941bbff50f821fe0d33b548"
        ],
        [
            "assert (eqmod (two_power_nat n) x y).",
            "VernacExtend",
            "3b978065418d76a6c0c15297458a38039d7e8e59"
        ],
        [
            "apply eqmod_same_bits.",
            "VernacExtend",
            "bb8c61219ef74b55b9293b7db8e9d861a7644b51"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "assert (eqmod (two_power_nat n) z 0).",
            "VernacExtend",
            "a6b1e0c726eaf8c2ac45991b484528e09e7930d8"
        ],
        [
            "unfold z.",
            "VernacExtend",
            "3f5f13843987e7698cc305c40b7a59532fd5ee56"
        ],
        [
            "destruct (zlt x y).",
            "VernacExtend",
            "9e08f9755cc45e7bf9d1fed51f1ae7fddcc8cf70"
        ],
        [
            "replace 0 with (y - y) by omega.",
            "VernacExtend",
            "09d8d9ce67d7ba7451df15b49e90951f5896fd1b"
        ],
        [
            "apply eqmod_sub.",
            "VernacExtend",
            "c9dc99d4bbc6cea99f146d1993e5dcb92eaf027c"
        ],
        [
            "apply eqmod_refl.",
            "VernacExtend",
            "dd13026dc2e4aa9828d8fe4d8ad9645368260127"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "replace 0 with (x - x) by omega.",
            "VernacExtend",
            "a42773e066711e8541fecea2da1d21c9355faf71"
        ],
        [
            "apply eqmod_sub.",
            "VernacExtend",
            "c9dc99d4bbc6cea99f146d1993e5dcb92eaf027c"
        ],
        [
            "apply eqmod_refl.",
            "VernacExtend",
            "dd13026dc2e4aa9828d8fe4d8ad9645368260127"
        ],
        [
            "apply eqmod_sym; auto.",
            "VernacExtend",
            "425a72fa8c834da65e825c9215e83c9c1a6e6878"
        ],
        [
            "assert (z = 0).",
            "VernacExtend",
            "68271cafcb320a563ef253f76f0138e6b15ef58c"
        ],
        [
            "apply eqmod_small_eq with (two_power_nat n).",
            "VernacExtend",
            "2a816d5b8bd265321663184d2012665d0d7c57ec"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "generalize (two_power_nat_pos n); omega.",
            "VernacExtend",
            "6f13ab2ec40379deca9f6c07ec7aaef221b2c591"
        ],
        [
            "unfold z in H3.",
            "VernacExtend",
            "7c92b02aff8f8ae04e5704c59edee10e2be32381"
        ],
        [
            "destruct (zlt x y); omega.",
            "VernacExtend",
            "61ad751b402a17bc69ee7a6e24fa6c8577502dd3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Z_one_complement: forall i, 0 <= i -> forall x, Z.testbit (-x-1) i = negb (Z.testbit x i).",
            "VernacStartTheoremProof",
            "2d8c614775233060ed3b800cefac15dcabcff2e4"
        ],
        [
            "intros i0 POS0.",
            "VernacExtend",
            "9ff333e026e0aecebe5f30d72ba096e68d695c17"
        ],
        [
            "pattern i0.",
            "VernacExtend",
            "1a983b0ddd685db9653586847604c73a7c95f084"
        ],
        [
            "apply Zlt_0_ind; auto.",
            "VernacExtend",
            "1da3917c34b2bda951299549c1b2828f43b7b783"
        ],
        [
            "intros i IND POS x.",
            "VernacExtend",
            "a867c938d4a44b5f32077e055dd99d2cbc94bfab"
        ],
        [
            "rewrite (Zdecomp x).",
            "VernacExtend",
            "bbfaec973e49a865a8697e2aa301fde6a3b455ac"
        ],
        [
            "set (y := Z.div2 x).",
            "VernacExtend",
            "d2ccd0058dbd3656494f091fcbb5514ef6629124"
        ],
        [
            "replace (- Zshiftin (Z.odd x) y - 1) with (Zshiftin (negb (Z.odd x)) (- y - 1)).",
            "VernacExtend",
            "c172cacd0f54c1efa537c6a0624e5c5ef48ac4ff"
        ],
        [
            "rewrite !Ztestbit_shiftin; auto.",
            "VernacExtend",
            "6de2cab66e5c21e555d5dc59e8d400bfe2eaddd2"
        ],
        [
            "destruct (zeq i 0).",
            "VernacExtend",
            "d84935205e6f3de20c609dbacd0c5438037a33e9"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply IND.",
            "VernacExtend",
            "e7daae69ff1a356c02a963bd11f2cc2e784b4977"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite !Zshiftin_spec.",
            "VernacExtend",
            "aa9d3dedf623bac9a8173e30b44355badd5e5367"
        ],
        [
            "destruct (Z.odd x); simpl negb; ring.",
            "VernacExtend",
            "e52dbff8cd2bfa828c93f62794d1296467c2c83e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Ztestbit_above: forall n x i, 0 <= x < two_power_nat n -> i >= Z.of_nat n -> Z.testbit x i = false.",
            "VernacStartTheoremProof",
            "26fe5b847a659bd68987fb2d81031d6549a4204b"
        ],
        [
            "induction n; intros.",
            "VernacExtend",
            "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "change (two_power_nat 0) with 1 in H.",
            "VernacExtend",
            "64e98d9b4590525702dd3abfaea7fca98dd5a64f"
        ],
        [
            "replace x with 0 by omega.",
            "VernacExtend",
            "57d2a309932c1536f48f0bec30279bc173120551"
        ],
        [
            "apply Z.testbit_0_l.",
            "VernacExtend",
            "7cae98e3568a00aa4d50007b1f11061ad6c07cc4"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Nat2Z.inj_succ in H0.",
            "VernacExtend",
            "857b92af4753b6fa2e29560a1f8f1b3f36116146"
        ],
        [
            "rewrite Ztestbit_eq.",
            "VernacExtend",
            "cc27e9791667c9a7f1466faf67869f938d5d405a"
        ],
        [
            "rewrite zeq_false.",
            "VernacExtend",
            "dab8f9109b7a6d08485a19d2b305200449ea8478"
        ],
        [
            "apply IHn.",
            "VernacExtend",
            "1c9414f4f052b2727ca012553a4a3a2a0fc85649"
        ],
        [
            "rewrite two_power_nat_S in H.",
            "VernacExtend",
            "3e4a703255e1d1cba37f1db1db4eb3be76c2e046"
        ],
        [
            "rewrite (Zdecomp x) in H.",
            "VernacExtend",
            "ff732c19a76a325485c07adcd0063086cd7874ef"
        ],
        [
            "rewrite Zshiftin_spec in H.",
            "VernacExtend",
            "7fc908698e058abfbd9cf3287389d0de46588342"
        ],
        [
            "destruct (Z.odd x); omega.",
            "VernacExtend",
            "0fabeef20b10371355ec660c030b7b196fbf9659"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Ztestbit_above_neg: forall n x i, -two_power_nat n <= x < 0 -> i >= Z.of_nat n -> Z.testbit x i = true.",
            "VernacStartTheoremProof",
            "cc8a721ac37e53725bd48ada8a6b6c125768d20e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "set (y := -x-1).",
            "VernacExtend",
            "7c128df85132d1d13fc2f6cdf00214b1f7aef47b"
        ],
        [
            "assert (Z.testbit y i = false).",
            "VernacExtend",
            "515e97b7d5e0f335d1437eaad75f6e511eefda6c"
        ],
        [
            "apply Ztestbit_above with n.",
            "VernacExtend",
            "bfe1654b470394338f15ecb1d7ea6096b2339401"
        ],
        [
            "unfold y; omega.",
            "VernacExtend",
            "063a4251a1e52ea0aac2b3476e96b3471524db17"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold y in H1.",
            "VernacExtend",
            "f5f637486ecf667882bc1b52061a36c54b6dd0de"
        ],
        [
            "rewrite Z_one_complement in H1.",
            "VernacExtend",
            "99b9cbecd8fbcd3ed8ef7f949630cea83a4a5f82"
        ],
        [
            "change true with (negb false).",
            "VernacExtend",
            "18a942df4a07dbf18345ef51141f1527de63e701"
        ],
        [
            "rewrite <- H1.",
            "VernacExtend",
            "b8b417d956609d1854d18921f25bc0ffae73a74e"
        ],
        [
            "rewrite negb_involutive; auto.",
            "VernacExtend",
            "8994ecd79c2e78c0cc45051b55105f0fd02a8437"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zsign_bit: forall n x, 0 <= x < two_power_nat (S n) -> Z.testbit x (Z.of_nat n) = if zlt x (two_power_nat n) then false else true.",
            "VernacStartTheoremProof",
            "fb28a13481cc9e9c7f93d2cfeac453fe0465a2d9"
        ],
        [
            "induction n; intros.",
            "VernacExtend",
            "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "change (two_power_nat 1) with 2 in H.",
            "VernacExtend",
            "36f152407df4bd4633f3e06722a63a1af8be6abb"
        ],
        [
            "assert (x = 0 \\/ x = 1) by omega.",
            "VernacExtend",
            "6fe722be144b9e7e830af8ae7367eea8b77d50ad"
        ],
        [
            "destruct H0; subst x; reflexivity.",
            "VernacExtend",
            "e0265cdc26fbce3c15a44dc838d20eff225427ec"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Nat2Z.inj_succ.",
            "VernacExtend",
            "1fc791f52357dc9e0a22fac0a6d82e87969a1699"
        ],
        [
            "rewrite Ztestbit_eq.",
            "VernacExtend",
            "cc27e9791667c9a7f1466faf67869f938d5d405a"
        ],
        [
            "rewrite zeq_false.",
            "VernacExtend",
            "dab8f9109b7a6d08485a19d2b305200449ea8478"
        ],
        [
            "rewrite Z.pred_succ.",
            "VernacExtend",
            "fd019b24c7f66d66d1631141e017af69d900e942"
        ],
        [
            "rewrite IHn.",
            "VernacExtend",
            "ec9472e508d0ba82a8f6be939d2e4d39f35c3667"
        ],
        [
            "rewrite two_power_nat_S.",
            "VernacExtend",
            "a9744f6bd9a8fe7c31c0f7154478ac3b90a12f1b"
        ],
        [
            "destruct (zlt (Z.div2 x) (two_power_nat n)); rewrite (Zdecomp x); rewrite Zshiftin_spec.",
            "VernacExtend",
            "82df6eb08f949206ac3337b7c1f4766b7ebe05ea"
        ],
        [
            "rewrite zlt_true.",
            "VernacExtend",
            "b49135e183425368b4318af106711c28871bcc77"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct (Z.odd x); omega.",
            "VernacExtend",
            "0fabeef20b10371355ec660c030b7b196fbf9659"
        ],
        [
            "rewrite zlt_false.",
            "VernacExtend",
            "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct (Z.odd x); omega.",
            "VernacExtend",
            "0fabeef20b10371355ec660c030b7b196fbf9659"
        ],
        [
            "rewrite (Zdecomp x) in H; rewrite Zshiftin_spec in H.",
            "VernacExtend",
            "5cf3263ae2b969ad1a3a0996c4464ec5f734ece0"
        ],
        [
            "rewrite two_power_nat_S in H.",
            "VernacExtend",
            "3e4a703255e1d1cba37f1db1db4eb3be76c2e046"
        ],
        [
            "destruct (Z.odd x); omega.",
            "VernacExtend",
            "0fabeef20b10371355ec660c030b7b196fbf9659"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zshiftin_ind: forall (P: Z -> Prop), P 0 -> (forall b x, 0 <= x -> P x -> P (Zshiftin b x)) -> forall x, 0 <= x -> P x.",
            "VernacStartTheoremProof",
            "890f4898659fc6bec573cc6e2b90d3390db0b8e3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "induction p.",
            "VernacExtend",
            "57241b1bf2113f288b5c35cf50cb4c85d8323deb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "change (P (Zshiftin true (Z.pos p))).",
            "VernacExtend",
            "7863f34649cac34ee441aca07a0ad82cd1454ccc"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "change (P (Zshiftin false (Z.pos p))).",
            "VernacExtend",
            "9ba4317561cd402d1b742113acc8fbc56e2e3f17"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "change (P (Zshiftin true 0)).",
            "VernacExtend",
            "c38a34a93022f24a4bb92a6d80c61803d1ec61c9"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "compute in H1.",
            "VernacExtend",
            "dba0d31eef68602688d1d9f450f2f2e9ffe6cda6"
        ],
        [
            "intuition congruence.",
            "VernacExtend",
            "2cba3542847e3f4ea52f3f62375adc6e8f8f04bc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zshiftin_pos_ind: forall (P: Z -> Prop), P 1 -> (forall b x, 0 < x -> P x -> P (Zshiftin b x)) -> forall x, 0 < x -> P x.",
            "VernacStartTheoremProof",
            "81dfe559a8f2d37a54218afaf6dd57b6a7be17da"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct x; simpl in H1; try discriminate.",
            "VernacExtend",
            "1ae9897e53653304d708088e7751a2b39bfaeb4f"
        ],
        [
            "induction p.",
            "VernacExtend",
            "57241b1bf2113f288b5c35cf50cb4c85d8323deb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "change (P (Zshiftin true (Z.pos p))).",
            "VernacExtend",
            "7863f34649cac34ee441aca07a0ad82cd1454ccc"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "change (P (Zshiftin false (Z.pos p))).",
            "VernacExtend",
            "9ba4317561cd402d1b742113acc8fbc56e2e3f17"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Ztestbit_le: forall x y, 0 <= y -> (forall i, 0 <= i -> Z.testbit x i = true -> Z.testbit y i = true) -> x <= y.",
            "VernacStartTheoremProof",
            "faa7867c4ad6266f1ca0dcc1d8a2334ab05290a4"
        ],
        [
            "intros x y0 POS0; revert x; pattern y0; apply Zshiftin_ind; auto; intros.",
            "VernacExtend",
            "e3efe28e7de92ce15048f4349c124acda2777c4d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "replace x with 0.",
            "VernacExtend",
            "c8a127fa02c208e49db325a0e53bc2702e87ad52"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply equal_same_bits; intros.",
            "VernacExtend",
            "73ce991e4619c1e5d9bbd33ccb23dec8610abb80"
        ],
        [
            "rewrite Ztestbit_0.",
            "VernacExtend",
            "6240d6d1de40f083071d07df10c155d455262b1d"
        ],
        [
            "destruct (Z.testbit x i) as [] eqn:E; auto.",
            "VernacExtend",
            "ff3b583f3b735497334d8a5bae08b391a623b816"
        ],
        [
            "exploit H; eauto.",
            "VernacExtend",
            "e4042976bceeb1e0a2b61f377ada9badc4c146f3"
        ],
        [
            "rewrite Ztestbit_0.",
            "VernacExtend",
            "6240d6d1de40f083071d07df10c155d455262b1d"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (Z.div2 x0 <= x).",
            "VernacExtend",
            "02a0caba514ff13138a1ab1689d6964b084fcf3d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exploit (H1 (Z.succ i)).",
            "VernacExtend",
            "2b10bb53a7171315a41be7f726cfca9a389870b1"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite Ztestbit_succ; auto.",
            "VernacExtend",
            "ba319e0a7b257d31f6678242f602517932e1cb0a"
        ],
        [
            "rewrite Ztestbit_shiftin_succ; auto.",
            "VernacExtend",
            "ec8eab286577c21d23f2191975d78d66db40c9e0"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite (Zdecomp x0).",
            "VernacExtend",
            "8e907a06206c15c2a0677ca49e16c04677fd4bf2"
        ],
        [
            "rewrite !Zshiftin_spec.",
            "VernacExtend",
            "aa9d3dedf623bac9a8173e30b44355badd5e5367"
        ],
        [
            "destruct (Z.odd x0) as [] eqn:E1; destruct b as [] eqn:E2; try omega.",
            "VernacExtend",
            "54d6b9a204907becb341757a65daecfbfaaa5839"
        ],
        [
            "exploit (H1 0).",
            "VernacExtend",
            "ee38799b1ba5b791835eb39e854bc74e56324226"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite Ztestbit_base; auto.",
            "VernacExtend",
            "6983e04882a216b29db1b2fbc32ddd431264929a"
        ],
        [
            "rewrite Ztestbit_shiftin_base.",
            "VernacExtend",
            "67fcc070b6aa4f6cde6d350ee6966645f880c9da"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition testbit (x: int) (i: Z) : bool := Z.testbit (unsigned x) i.",
            "VernacDefinition",
            "afea20471f15cc44fc24f9555b36170b412ebe68"
        ],
        [
            "Lemma testbit_repr: forall x i, 0 <= i < zwordsize -> testbit (repr x) i = Z.testbit x i.",
            "VernacStartTheoremProof",
            "3641ba32491ec9c28290efd72f2a77936fbda29d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold testbit.",
            "VernacExtend",
            "14f68f27aaaec42f64d3a8f3009fc6eaa35592a6"
        ],
        [
            "apply same_bits_eqm; auto with ints.",
            "VernacExtend",
            "5356a73989d88a3ac93555b646b78ff2c2f24634"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma same_bits_eq: forall x y, (forall i, 0 <= i < zwordsize -> testbit x i = testbit y i) -> x = y.",
            "VernacStartTheoremProof",
            "034e9e63e84ed33732e498dc53494a8d42b2f326"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- (repr_unsigned x).",
            "VernacExtend",
            "393ec19ffbe8f172593c1f542e8d6811517b657c"
        ],
        [
            "rewrite <- (repr_unsigned y).",
            "VernacExtend",
            "140fc635f53509ca75abf324c73c2a5f03133e74"
        ],
        [
            "apply eqm_samerepr.",
            "VernacExtend",
            "2226a5674ed5a7db984e878fdbb37775ca665295"
        ],
        [
            "apply eqm_same_bits.",
            "VernacExtend",
            "6a44a90c65d4264d6b846bf8c46f55129a7f34cc"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bits_above: forall x i, i >= zwordsize -> testbit x i = false.",
            "VernacStartTheoremProof",
            "a12a1f47456591e33f30398f8cdd85320f8b5c3b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Ztestbit_above with wordsize; auto.",
            "VernacExtend",
            "12c51459c1ccd6b4a9e9bcec46cf5116c29d57e5"
        ],
        [
            "apply unsigned_range.",
            "VernacExtend",
            "107f7224db1bfb90305cbe8f1e64d98d5760b23b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bits_zero: forall i, testbit zero i = false.",
            "VernacStartTheoremProof",
            "558fb4d80289d8eb9d4a5d68cc51be5ff1ee8af2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold testbit.",
            "VernacExtend",
            "14f68f27aaaec42f64d3a8f3009fc6eaa35592a6"
        ],
        [
            "rewrite unsigned_zero.",
            "VernacExtend",
            "89956b9f461b9934c8fa99e6e63074f0275efcae"
        ],
        [
            "apply Ztestbit_0.",
            "VernacExtend",
            "9eabae5755d85655c33afa1ead756f180af22081"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark bits_one: forall n, testbit one n = zeq n 0.",
            "VernacStartTheoremProof",
            "bbba0ddde5a0dc7b8036c12ae76b1663eedfc85a"
        ],
        [
            "unfold testbit; intros.",
            "VernacExtend",
            "e141ca7104042d5efedc92997cf18ad2ac54ab38"
        ],
        [
            "rewrite unsigned_one.",
            "VernacExtend",
            "52f1cc9e4b7b0a3b7c37f5e9a1a6c514d4cb1683"
        ],
        [
            "apply Ztestbit_1.",
            "VernacExtend",
            "4455c3deac697a1f244820344c5007c4b3140393"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bits_mone: forall i, 0 <= i < zwordsize -> testbit mone i = true.",
            "VernacStartTheoremProof",
            "faa0f883e899c637eb6a7f6398c1e234932653ee"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold mone.",
            "VernacExtend",
            "914091818c6862aecc1a83f26df67bb372164c1d"
        ],
        [
            "rewrite testbit_repr; auto.",
            "VernacExtend",
            "d20143ed773e39c9c2d38dc1a41b649eadbc95c6"
        ],
        [
            "apply Ztestbit_m1.",
            "VernacExtend",
            "e060649db36180548752a8ce6fbc07eb2ee245ab"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite bits_zero bits_mone : ints.",
            "VernacExtend",
            "b7c99b2c3d33f644feea86a2bef4ca5ef7157eae"
        ],
        [
            "Ltac bit_solve := intros; apply same_bits_eq; intros; autorewrite with ints; auto with bool.",
            "VernacExtend",
            "f56aa7653701727b78767069999107303c9237f2"
        ],
        [
            "Lemma sign_bit_of_unsigned: forall x, testbit x (zwordsize - 1) = if zlt (unsigned x) half_modulus then false else true.",
            "VernacStartTheoremProof",
            "6a18e4d3cd78ec2ab8d41e4d5fa7da4b324bc41e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold testbit.",
            "VernacExtend",
            "14f68f27aaaec42f64d3a8f3009fc6eaa35592a6"
        ],
        [
            "set (ws1 := Init.Nat.pred wordsize).",
            "VernacExtend",
            "937328195a9fc639d06c6846f84ede8b17c75c9a"
        ],
        [
            "assert (zwordsize - 1 = Z.of_nat ws1).",
            "VernacExtend",
            "4ac92e760b908e9ae6cf61cbd469533df33a878c"
        ],
        [
            "unfold zwordsize, ws1, wordsize.",
            "VernacExtend",
            "8df1fd96106bef86d148d8c1563f75f6d95ec8c7"
        ],
        [
            "destruct WS.wordsize as [] eqn:E.",
            "VernacExtend",
            "43bb653705f90dd2e1fb614133f391d1837edc88"
        ],
        [
            "elim WS.wordsize_not_zero; auto.",
            "VernacExtend",
            "739b1b3f154319772e91a98127de375f7418efe0"
        ],
        [
            "rewrite Nat2Z.inj_succ.",
            "VernacExtend",
            "1fc791f52357dc9e0a22fac0a6d82e87969a1699"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "assert (half_modulus = two_power_nat ws1).",
            "VernacExtend",
            "eb8d291987172c20b3d2cde0584116e4fb461b15"
        ],
        [
            "rewrite two_power_nat_two_p.",
            "VernacExtend",
            "e21f56ecabf68cda5e6534a700cce51443bacebe"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "apply half_modulus_power.",
            "VernacExtend",
            "dfa7660565d43933333d79302ab3dad356e6a417"
        ],
        [
            "rewrite H; rewrite H0.",
            "VernacExtend",
            "cadacb31556a02adbe2c6bc962279414f9ba19d0"
        ],
        [
            "apply Zsign_bit.",
            "VernacExtend",
            "62cd92683d5190974000c4a7f846a7d6017c0c63"
        ],
        [
            "rewrite two_power_nat_S.",
            "VernacExtend",
            "a9744f6bd9a8fe7c31c0f7154478ac3b90a12f1b"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "rewrite <- half_modulus_modulus.",
            "VernacExtend",
            "f10a4b80c09add08e44af19a2a1d26c440324e92"
        ],
        [
            "apply unsigned_range.",
            "VernacExtend",
            "107f7224db1bfb90305cbe8f1e64d98d5760b23b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bits_signed: forall x i, 0 <= i -> Z.testbit (signed x) i = testbit x (if zlt i zwordsize then i else zwordsize - 1).",
            "VernacStartTheoremProof",
            "88b39b4e689fe70343f54bc24458ead7d9e8da19"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (zlt i zwordsize).",
            "VernacExtend",
            "cbf965911aa29c8b776e1700f06d5a1afa2ff80a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply same_bits_eqm.",
            "VernacExtend",
            "099ae282b8083eb6b85222b05a6bc17566bc4e50"
        ],
        [
            "apply eqm_signed_unsigned.",
            "VernacExtend",
            "d8614df8b73ff309ccafc1b69753d7e1944f658e"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold signed.",
            "VernacExtend",
            "f99b13683b7fbccb713276bdf12a56c47fabc924"
        ],
        [
            "rewrite sign_bit_of_unsigned.",
            "VernacExtend",
            "6cd437092de47964ce76741c43d81f13650dde7b"
        ],
        [
            "destruct (zlt (unsigned x) half_modulus).",
            "VernacExtend",
            "96100f79c30f7c1ed7c9d19caec035348a472e2e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply Ztestbit_above with wordsize.",
            "VernacExtend",
            "ad2a00c6773ef3c789e155cbfc7febf420f86850"
        ],
        [
            "apply unsigned_range.",
            "VernacExtend",
            "107f7224db1bfb90305cbe8f1e64d98d5760b23b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply Ztestbit_above_neg with wordsize.",
            "VernacExtend",
            "cb11708ddd3a01f721f619b8569c9ffa26c76554"
        ],
        [
            "fold modulus.",
            "VernacExtend",
            "82d16181f0b954350f02a74ec336c69fd618891c"
        ],
        [
            "generalize (unsigned_range x).",
            "VernacExtend",
            "7892db8fc005b0cd4ce2d3aa05f16d9b6948c153"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bits_le: forall x y, (forall i, 0 <= i < zwordsize -> testbit x i = true -> testbit y i = true) -> unsigned x <= unsigned y.",
            "VernacStartTheoremProof",
            "29c66e8815748ed1bb0635c3b58f4b864348410f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Ztestbit_le.",
            "VernacExtend",
            "a6836efdc2fb846fb1120e75bd8dd5bd8c661a87"
        ],
        [
            "generalize (unsigned_range y); omega.",
            "VernacExtend",
            "42fda19b1742db2649f926c7d3bceaa4596993b0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "fold (testbit y i).",
            "VernacExtend",
            "855eb520bba810bffd1731eece11437893a1503f"
        ],
        [
            "destruct (zlt i zwordsize).",
            "VernacExtend",
            "cbf965911aa29c8b776e1700f06d5a1afa2ff80a"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "fold (testbit x i) in H1.",
            "VernacExtend",
            "ed468daf8c8f844b6dcc910994dd53ef6b84cfad"
        ],
        [
            "rewrite bits_above in H1; auto.",
            "VernacExtend",
            "6c23886fa8b5c56f53d83bec89d75bf629fc6171"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bits_and: forall x y i, 0 <= i < zwordsize -> testbit (and x y) i = testbit x i && testbit y i.",
            "VernacStartTheoremProof",
            "a9523a8d819ffed703e91bea0da83d21010f6213"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold and.",
            "VernacExtend",
            "e94c9e2b0798d0e8493212655e19be936928ff54"
        ],
        [
            "rewrite testbit_repr; auto.",
            "VernacExtend",
            "d20143ed773e39c9c2d38dc1a41b649eadbc95c6"
        ],
        [
            "rewrite Z.land_spec; intuition.",
            "VernacExtend",
            "8c7e0c36e26ebbaacf92f64a6f89665bbc0c5215"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bits_or: forall x y i, 0 <= i < zwordsize -> testbit (or x y) i = testbit x i || testbit y i.",
            "VernacStartTheoremProof",
            "3d4aaa46258a8128091c26ebd020d361827e4109"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold or.",
            "VernacExtend",
            "bac389b163114492e7ff8a5d8175222e3e3f7c6f"
        ],
        [
            "rewrite testbit_repr; auto.",
            "VernacExtend",
            "d20143ed773e39c9c2d38dc1a41b649eadbc95c6"
        ],
        [
            "rewrite Z.lor_spec; intuition.",
            "VernacExtend",
            "e0dede42a774eddff76253e7d32d53dfe3619787"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bits_xor: forall x y i, 0 <= i < zwordsize -> testbit (xor x y) i = xorb (testbit x i) (testbit y i).",
            "VernacStartTheoremProof",
            "e90400cad803852dd44fdcfe59a5206e8877f46d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold xor.",
            "VernacExtend",
            "b0bc2f749f202cf4bc384a9ba1982358cb870ce6"
        ],
        [
            "rewrite testbit_repr; auto.",
            "VernacExtend",
            "d20143ed773e39c9c2d38dc1a41b649eadbc95c6"
        ],
        [
            "rewrite Z.lxor_spec; intuition.",
            "VernacExtend",
            "215167ef9b98ddb9d3cb62edc18d9ec277017789"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bits_not: forall x i, 0 <= i < zwordsize -> testbit (not x) i = negb (testbit x i).",
            "VernacStartTheoremProof",
            "6c12b18013f35eefc52f615e4cfdc1c62d354a3e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold not.",
            "VernacExtend",
            "6c337369ba68753b2202c88d3c56bf02e1807b95"
        ],
        [
            "rewrite bits_xor; auto.",
            "VernacExtend",
            "03e51acedee1919fdf83244d55abb95fda1f6313"
        ],
        [
            "rewrite bits_mone; auto.",
            "VernacExtend",
            "65db6e3a47425ff5b36895a38f5378183c298773"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite bits_and bits_or bits_xor bits_not: ints.",
            "VernacExtend",
            "097ad4f0ef50449871116e9db83af861a8735981"
        ],
        [
            "Theorem and_commut: forall x y, and x y = and y x.",
            "VernacStartTheoremProof",
            "aa887ef37bce9df8c4c9b3a9a8f25b2aab516064"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem and_assoc: forall x y z, and (and x y) z = and x (and y z).",
            "VernacStartTheoremProof",
            "3daf2e10d310be1c3199f079933ebb134bff94a7"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem and_zero: forall x, and x zero = zero.",
            "VernacStartTheoremProof",
            "fb51892bfc77ffe67c69761de49f45622545ce09"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "apply andb_b_false.",
            "VernacExtend",
            "800b5950ba8762b19db92eb01b6bf91959e92496"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary and_zero_l: forall x, and zero x = zero.",
            "VernacStartTheoremProof",
            "0567828aad7d0cc0dcb89800346b41582f413957"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite and_commut.",
            "VernacExtend",
            "b10a32c5381ffe79399fa5b6823f886c3c37781f"
        ],
        [
            "apply and_zero.",
            "VernacExtend",
            "44206f74dc8d718354f02e6cd0d98255639e390f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem and_mone: forall x, and x mone = x.",
            "VernacStartTheoremProof",
            "9f4a72ece292291578106c8880b6f280acc23628"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "apply andb_b_true.",
            "VernacExtend",
            "3d8d6fdefd286b684bbfdf38e8bec9f56d2377b1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary and_mone_l: forall x, and mone x = x.",
            "VernacStartTheoremProof",
            "1f3982ef7306d1f77dc9b6ed84e814894372e1a0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite and_commut.",
            "VernacExtend",
            "b10a32c5381ffe79399fa5b6823f886c3c37781f"
        ],
        [
            "apply and_mone.",
            "VernacExtend",
            "767f40a24e45eb8d7f8b31795fb3ff90cbdffeeb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem and_idem: forall x, and x x = x.",
            "VernacStartTheoremProof",
            "8880b574e52bd4de7f1c4b350a2616ea971b7155"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "destruct (testbit x i); auto.",
            "VernacExtend",
            "14ae4e0b13609c15898355f9aa7010474018f3e7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem or_commut: forall x y, or x y = or y x.",
            "VernacStartTheoremProof",
            "f8c549b43e2448762378693d17f29a8ba680e812"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem or_assoc: forall x y z, or (or x y) z = or x (or y z).",
            "VernacStartTheoremProof",
            "cd1da70d59b8504f3cf4b20e11d86b1199b22b0c"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem or_zero: forall x, or x zero = x.",
            "VernacStartTheoremProof",
            "f6a884aec5d3cc675cdd018ac8f4093bdb6ff203"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary or_zero_l: forall x, or zero x = x.",
            "VernacStartTheoremProof",
            "8c5095fe9a4888237678f8d44c66ea8030a313cb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite or_commut.",
            "VernacExtend",
            "b267079fba13ec3e9108e70ab24d4c26a1f49abf"
        ],
        [
            "apply or_zero.",
            "VernacExtend",
            "dfe78735e617efe3305a6d77a2f52257e69602e4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem or_mone: forall x, or x mone = mone.",
            "VernacStartTheoremProof",
            "ad1658f36213e288f7b0e57696da7cd48381383a"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem or_idem: forall x, or x x = x.",
            "VernacStartTheoremProof",
            "efa626c2f6ea3bd09f327145ac28085d3e8537fb"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "destruct (testbit x i); auto.",
            "VernacExtend",
            "14ae4e0b13609c15898355f9aa7010474018f3e7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem and_or_distrib: forall x y z, and x (or y z) = or (and x y) (and x z).",
            "VernacStartTheoremProof",
            "f918000cf6c74a388815867132394a5a57a54072"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "apply demorgan1.",
            "VernacExtend",
            "23840ec06625a4ea73d9be8a87e4d83124ddc1ea"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary and_or_distrib_l: forall x y z, and (or x y) z = or (and x z) (and y z).",
            "VernacStartTheoremProof",
            "c6a302c29dd35d92cc69438ed46613ae6e575512"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (and_commut (or x y)).",
            "VernacExtend",
            "a5b78550b73cf023615399f8f980cbc963a4f747"
        ],
        [
            "rewrite and_or_distrib.",
            "VernacExtend",
            "bc1c4dd15e64e710915b56d06d2deba3942e0a0d"
        ],
        [
            "f_equal; apply and_commut.",
            "VernacExtend",
            "8f50a219d8f8cfb6e7b2ef6fb1adaa829246aa68"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem or_and_distrib: forall x y z, or x (and y z) = and (or x y) (or x z).",
            "VernacStartTheoremProof",
            "a2d21685db58343d1238f8be03eae643dc24dd87"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "apply orb_andb_distrib_r.",
            "VernacExtend",
            "554626220a4054fe0ba3760e07a4b08c81e52e90"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary or_and_distrib_l: forall x y z, or (and x y) z = and (or x z) (or y z).",
            "VernacStartTheoremProof",
            "7875d42ebcdacf46fc6b424a9886ecd33b26ef55"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (or_commut (and x y)).",
            "VernacExtend",
            "e7809a8928fec0546ba90719f41e5497cc31d269"
        ],
        [
            "rewrite or_and_distrib.",
            "VernacExtend",
            "faed279d89056f00d48876e63e7e8d1fbd1da5a7"
        ],
        [
            "f_equal; apply or_commut.",
            "VernacExtend",
            "d54dba23989c157d4996f80e453ed0a81ecb59e0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem and_or_absorb: forall x y, and x (or x y) = x.",
            "VernacStartTheoremProof",
            "c7f2dd00f43727b57a93190a184f3c8f5b0ce515"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "assert (forall a b, a && (a || b) = a) by destr_bool.",
            "VernacExtend",
            "4a5baaf1d8961bc7fc2109eb139e0b0e34d609df"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem or_and_absorb: forall x y, or x (and x y) = x.",
            "VernacStartTheoremProof",
            "8935e4abee420bb998488cbd7ef5ebc4572ff104"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "assert (forall a b, a || (a && b) = a) by destr_bool.",
            "VernacExtend",
            "950d07d363a431f345a5508320d5686a9b4e328e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem xor_commut: forall x y, xor x y = xor y x.",
            "VernacStartTheoremProof",
            "0ee7f7dee9de3e3f05d2e73bcb172b93c01d263a"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "apply xorb_comm.",
            "VernacExtend",
            "95a70ded1b93af11da2e8cf472e0b53a66157824"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem xor_assoc: forall x y z, xor (xor x y) z = xor x (xor y z).",
            "VernacStartTheoremProof",
            "1e53e371615b20a214fc8245f97db92e4fe44c3b"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "apply xorb_assoc.",
            "VernacExtend",
            "396f293dffb44558a83e77d5d63dca4c07382ed4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem xor_zero: forall x, xor x zero = x.",
            "VernacStartTheoremProof",
            "f8695cd6000488c23a9461c4d998ddfa7cc34ba4"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "apply xorb_false.",
            "VernacExtend",
            "678636e75ed80827a24df851ed4662e6c736aab5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary xor_zero_l: forall x, xor zero x = x.",
            "VernacStartTheoremProof",
            "f4d7cb06e9124d1beb5fb026f28f7268f77d6920"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite xor_commut.",
            "VernacExtend",
            "ac3161d3090fececc9cb27dcdf3ae5f3b21813b5"
        ],
        [
            "apply xor_zero.",
            "VernacExtend",
            "e734334fb5b575ecbd8f7a1548b8abb7ee09f8b4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem xor_idem: forall x, xor x x = zero.",
            "VernacStartTheoremProof",
            "385bb613c08934a5995e1048bbd52fceb6f938e6"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "apply xorb_nilpotent.",
            "VernacExtend",
            "afcbb842254c1e94f74a0666f72095145ab8d689"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem xor_zero_one: xor zero one = one.",
            "VernacStartTheoremProof",
            "d247aa4eeea61291dcc1c243b6ccd3a5c25ae663"
        ],
        [
            "rewrite xor_commut.",
            "VernacExtend",
            "ac3161d3090fececc9cb27dcdf3ae5f3b21813b5"
        ],
        [
            "apply xor_zero.",
            "VernacExtend",
            "e734334fb5b575ecbd8f7a1548b8abb7ee09f8b4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem xor_one_one: xor one one = zero.",
            "VernacStartTheoremProof",
            "43754b30b8e9f0d0c057c4a4f28dbfa1e524ffaf"
        ],
        [
            "apply xor_idem.",
            "VernacExtend",
            "66aedcd283392792f8d46ba2677c964814c2c6ae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem xor_zero_equal: forall x y, xor x y = zero -> x = y.",
            "VernacStartTheoremProof",
            "b8b3191d149af1a336bac4dc34a76605d9789517"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply same_bits_eq; intros.",
            "VernacExtend",
            "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
        ],
        [
            "assert (xorb (testbit x i) (testbit y i) = false).",
            "VernacExtend",
            "772486b7099730e7f4f736739ceda05a81aba4a2"
        ],
        [
            "rewrite <- bits_xor; auto.",
            "VernacExtend",
            "17981019ba2a483c7367c2fc430957db25cb7238"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "apply bits_zero.",
            "VernacExtend",
            "7c8e33b9d05c29c0ce1576a7b560fe8e98f45c41"
        ],
        [
            "destruct (testbit x i); destruct (testbit y i); reflexivity || discriminate.",
            "VernacExtend",
            "873dd76d72731ec215e3a3537301d605db4d6263"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem xor_is_zero: forall x y, eq (xor x y) zero = eq x y.",
            "VernacStartTheoremProof",
            "edfe1b3d5e0ffbc9a95075ba2cdb77aa65840d69"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "predSpec eq eq_spec (xor x y) zero.",
            "VernacExtend",
            "f3bdf06842a10eac5c8d1481cff92173a21e1a70"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply xor_zero_equal in H.",
            "VernacExtend",
            "4063670c7127aafc357725add83bb253609453ff"
        ],
        [
            "subst y.",
            "VernacExtend",
            "f056a00b852bc549d1b8bb21d500c90d8ff37bf8"
        ],
        [
            "rewrite eq_true; auto.",
            "VernacExtend",
            "b1a7da17cef74e98611c251eb6f39eedeee6733a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "predSpec eq eq_spec x y.",
            "VernacExtend",
            "820331c62ecbcb823d976fbb120ee032c5485e1b"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "elim H; subst y; apply xor_idem.",
            "VernacExtend",
            "d95a8ac07acfec429f5a4a1246c6cd98a4cef223"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem and_xor_distrib: forall x y z, and x (xor y z) = xor (and x y) (and x z).",
            "VernacStartTheoremProof",
            "cf0bacab171e24ca30af6abca909aeb8c2697fe6"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "assert (forall a b c, a && (xorb b c) = xorb (a && b) (a && c)) by destr_bool.",
            "VernacExtend",
            "5be60befc5a672ac8bc22920e5d13c8e54ab7f9f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem and_le: forall x y, unsigned (and x y) <= unsigned x.",
            "VernacStartTheoremProof",
            "7a3a3ae839ee93c5211239576fa0bfd1a21161be"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply bits_le; intros.",
            "VernacExtend",
            "ed4de188cc3fe02fa48b479f915e5e236b120c2f"
        ],
        [
            "rewrite bits_and in H0; auto.",
            "VernacExtend",
            "93369ebc41e5a2c68994ab844644a1cc9391adce"
        ],
        [
            "rewrite andb_true_iff in H0.",
            "VernacExtend",
            "5b6d7f3e3b842bd9348eed5f95d5c2f291ddf286"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem or_le: forall x y, unsigned x <= unsigned (or x y).",
            "VernacStartTheoremProof",
            "becf81e2327a8b82d2f69a945d7227ab06baff0e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply bits_le; intros.",
            "VernacExtend",
            "ed4de188cc3fe02fa48b479f915e5e236b120c2f"
        ],
        [
            "rewrite bits_or; auto.",
            "VernacExtend",
            "f825906d58bc4259d3a99e7adc9c4ffd5820c063"
        ],
        [
            "rewrite H0; auto.",
            "VernacExtend",
            "48df2b0b453adadcea8e6914bccb68bfc33b286b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem not_involutive: forall (x: int), not (not x) = x.",
            "VernacStartTheoremProof",
            "f801e4e9af03fb85be8009314f97b166b9423c31"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold not.",
            "VernacExtend",
            "6c337369ba68753b2202c88d3c56bf02e1807b95"
        ],
        [
            "rewrite xor_assoc.",
            "VernacExtend",
            "a036f57e19de52ab695699cf4d714b4842aa7bb6"
        ],
        [
            "rewrite xor_idem.",
            "VernacExtend",
            "017e5ec48f75fe487eb8dd27ee9d8b63669e9c95"
        ],
        [
            "apply xor_zero.",
            "VernacExtend",
            "e734334fb5b575ecbd8f7a1548b8abb7ee09f8b4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem not_zero: not zero = mone.",
            "VernacStartTheoremProof",
            "7639a9e7b499c7f7cdc446447ab8a9696c423c51"
        ],
        [
            "unfold not.",
            "VernacExtend",
            "6c337369ba68753b2202c88d3c56bf02e1807b95"
        ],
        [
            "rewrite xor_commut.",
            "VernacExtend",
            "ac3161d3090fececc9cb27dcdf3ae5f3b21813b5"
        ],
        [
            "apply xor_zero.",
            "VernacExtend",
            "e734334fb5b575ecbd8f7a1548b8abb7ee09f8b4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem not_mone: not mone = zero.",
            "VernacStartTheoremProof",
            "d1e75fa824a124e8f4e4a69c4e4d3b903c2f94a6"
        ],
        [
            "rewrite <- (not_involutive zero).",
            "VernacExtend",
            "b840808382fc720ff88076f60ca0dc92184a9cb2"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "decEq.",
            "VernacExtend",
            "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
        ],
        [
            "apply not_zero.",
            "VernacExtend",
            "8a98393d604ffc04515e98387f46dd9ea082c47b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem not_or_and_not: forall x y, not (or x y) = and (not x) (not y).",
            "VernacStartTheoremProof",
            "6dba5cb7dd9105485e7868b0c86a09bd768cf12c"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "apply negb_orb.",
            "VernacExtend",
            "080860e7f123bb04d7c638b450c0d9d8e9380ba7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem not_and_or_not: forall x y, not (and x y) = or (not x) (not y).",
            "VernacStartTheoremProof",
            "eddeeb4be3bae9362bf4088beb2075e7c77f0bd6"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "apply negb_andb.",
            "VernacExtend",
            "914c531c6ce8354cf3012942a40bdaaeae308700"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem and_not_self: forall x, and x (not x) = zero.",
            "VernacStartTheoremProof",
            "b046f5b95f55862017c6bedcabfccbfb0b4846f7"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem or_not_self: forall x, or x (not x) = mone.",
            "VernacStartTheoremProof",
            "edaa218a12a0569c7234f2d127d94372eadacd9e"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem xor_not_self: forall x, xor x (not x) = mone.",
            "VernacStartTheoremProof",
            "cd2ce64a8c7e4d0cd3fcc7704597b2296102ad10"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "destruct (testbit x i); auto.",
            "VernacExtend",
            "14ae4e0b13609c15898355f9aa7010474018f3e7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unsigned_not: forall x, unsigned (not x) = max_unsigned - unsigned x.",
            "VernacStartTheoremProof",
            "72d7155fc66a6d99dd576bc30f782c6e1f2aee41"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "transitivity (unsigned (repr(-unsigned x - 1))).",
            "VernacExtend",
            "49fc0ba01d41383f7365c313022d2dce3251e755"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "rewrite testbit_repr; auto.",
            "VernacExtend",
            "d20143ed773e39c9c2d38dc1a41b649eadbc95c6"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Z_one_complement.",
            "VernacExtend",
            "d9e1cdfd6fb96ea97c044daf2bee58f193a1e240"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite unsigned_repr_eq.",
            "VernacExtend",
            "4cdb0c1f390fe84b3a9c8bac49c0b5813452743a"
        ],
        [
            "apply Zmod_unique with (-1).",
            "VernacExtend",
            "9fbfa02026507947911435325d2aedbb9d4084b4"
        ],
        [
            "unfold max_unsigned.",
            "VernacExtend",
            "36f5add4f60c9b122a3b68fcbd2bef84e6e0d135"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "generalize (unsigned_range x).",
            "VernacExtend",
            "7892db8fc005b0cd4ce2d3aa05f16d9b6948c153"
        ],
        [
            "unfold max_unsigned.",
            "VernacExtend",
            "36f5add4f60c9b122a3b68fcbd2bef84e6e0d135"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem not_neg: forall x, not x = add (neg x) mone.",
            "VernacStartTheoremProof",
            "d6d5806cc1a08e49407c86153bd41c7122025b42"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "rewrite <- (repr_unsigned x) at 1.",
            "VernacExtend",
            "6e4513db39dea3249e7b467ccdea45363167be1b"
        ],
        [
            "unfold add.",
            "VernacExtend",
            "11cf98bf231f22df486b46b3b6a1c38a94e859dd"
        ],
        [
            "rewrite !testbit_repr; auto.",
            "VernacExtend",
            "ed03c006a62cc982ce1a4504966398fdfcfdcbc0"
        ],
        [
            "transitivity (Z.testbit (-unsigned x - 1) i).",
            "VernacExtend",
            "f42c8c71590788b85fb17f0d5ae7a451cfe2a185"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Z_one_complement.",
            "VernacExtend",
            "d9e1cdfd6fb96ea97c044daf2bee58f193a1e240"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply same_bits_eqm; auto.",
            "VernacExtend",
            "898ef81bb7f934fa4641c3d860ccb00328ef7408"
        ],
        [
            "replace (-unsigned x - 1) with (-unsigned x + (-1)) by omega.",
            "VernacExtend",
            "6bd06c23dc486762515544bb2336475d9d6fcaaf"
        ],
        [
            "apply eqm_add.",
            "VernacExtend",
            "6c81c3e6c0a0d0574105329a31bbe3cdf542f623"
        ],
        [
            "unfold neg.",
            "VernacExtend",
            "c7932042fd728b6ba2d5f9ca45c06c287061699d"
        ],
        [
            "apply eqm_unsigned_repr.",
            "VernacExtend",
            "8083262b54f87caceff266da1e7020054aa5a39f"
        ],
        [
            "rewrite unsigned_mone.",
            "VernacExtend",
            "8f638f66e0273f316077da6f32f87449b5bcaa54"
        ],
        [
            "exists (-1).",
            "VernacExtend",
            "10cfb9c5f69f349790dc8e74c7e676b4b9d8ae27"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem neg_not: forall x, neg x = add (not x) one.",
            "VernacStartTheoremProof",
            "276329fb75bbe05a467f092fbf7e484918a1bade"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite not_neg.",
            "VernacExtend",
            "767ba678e03a71bacf026ff40aac65578929987f"
        ],
        [
            "rewrite add_assoc.",
            "VernacExtend",
            "ad3a5a815f5c731ca973b85c3a98fab1355860f5"
        ],
        [
            "replace (add mone one) with zero.",
            "VernacExtend",
            "fddb95ebcff8fddcf45b88af3c2ead8e1d75a6b7"
        ],
        [
            "rewrite add_zero.",
            "VernacExtend",
            "f974590c4d53784eabf879b1edac80b48dd263f7"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply eqm_samerepr.",
            "VernacExtend",
            "2226a5674ed5a7db984e878fdbb37775ca665295"
        ],
        [
            "rewrite unsigned_mone.",
            "VernacExtend",
            "8f638f66e0273f316077da6f32f87449b5bcaa54"
        ],
        [
            "rewrite unsigned_one.",
            "VernacExtend",
            "52f1cc9e4b7b0a3b7c37f5e9a1a6c514d4cb1683"
        ],
        [
            "exists (-1).",
            "VernacExtend",
            "10cfb9c5f69f349790dc8e74c7e676b4b9d8ae27"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem sub_add_not: forall x y, sub x y = add (add x (not y)) one.",
            "VernacStartTheoremProof",
            "e1a3c4d9a86d6dd7fda78cb48db53ed0818feb45"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite sub_add_opp.",
            "VernacExtend",
            "149aee86536ad4266b276b48c48fc771f09f2ae7"
        ],
        [
            "rewrite neg_not.",
            "VernacExtend",
            "9540601a34b6c5e9c3cffb1527fead02ab9a69c7"
        ],
        [
            "rewrite ! add_assoc.",
            "VernacExtend",
            "8d08d7c6c8b8935df99691a18a48ba7a4c3e128d"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem sub_add_not_3: forall x y b, b = zero \\/ b = one -> sub (sub x y) b = add (add x (not y)) (xor b one).",
            "VernacStartTheoremProof",
            "b681fa31041d83158a784487602bea7487e77e63"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite ! sub_add_not.",
            "VernacExtend",
            "9621d68d17169c58dc7530eaee802a19aff4a1eb"
        ],
        [
            "rewrite ! add_assoc.",
            "VernacExtend",
            "8d08d7c6c8b8935df99691a18a48ba7a4c3e128d"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite <- neg_not.",
            "VernacExtend",
            "4bdb8b26d3e2cf2d6fe0de908d509e8606786d14"
        ],
        [
            "rewrite <- sub_add_opp.",
            "VernacExtend",
            "b3dae747ff0e663e20c7be0f3203ec49a4e66b10"
        ],
        [
            "destruct H; subst b.",
            "VernacExtend",
            "fe4da5c6b64f69b498e4d6a09edf54de13adac43"
        ],
        [
            "rewrite xor_zero_l.",
            "VernacExtend",
            "c684d7ce820c49253c833022478df7de4b696326"
        ],
        [
            "rewrite sub_zero_l.",
            "VernacExtend",
            "9d4df09d1c104770e78c1d21b6dc274cc89866d5"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite xor_idem.",
            "VernacExtend",
            "017e5ec48f75fe487eb8dd27ee9d8b63669e9c95"
        ],
        [
            "rewrite sub_idem.",
            "VernacExtend",
            "74b97c28b775af06a38fa8c8173c0bac7b76d296"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem sub_borrow_add_carry: forall x y b, b = zero \\/ b = one -> sub_borrow x y b = xor (add_carry x (not y) (xor b one)) one.",
            "VernacStartTheoremProof",
            "389030b51a3bffa725cc034c1ccb2b3b6c6be536"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold sub_borrow, add_carry.",
            "VernacExtend",
            "09d2aad94cb50bdd80a23ed57c986ab7d32e8460"
        ],
        [
            "rewrite unsigned_not.",
            "VernacExtend",
            "bd0211f4b694fa621cb7343ad15dc35495a5f320"
        ],
        [
            "replace (unsigned (xor b one)) with (1 - unsigned b).",
            "VernacExtend",
            "cddb098de75f94483fc6f14a5c1f265829b8be79"
        ],
        [
            "destruct (zlt (unsigned x - unsigned y - unsigned b)).",
            "VernacExtend",
            "98b532009bc843c0bf94a67818876ca945e494c9"
        ],
        [
            "rewrite zlt_true.",
            "VernacExtend",
            "b49135e183425368b4318af106711c28871bcc77"
        ],
        [
            "rewrite xor_zero_l; auto.",
            "VernacExtend",
            "ed1c46e3c910ac645b409d7030e3deaade0dbe6c"
        ],
        [
            "unfold max_unsigned; omega.",
            "VernacExtend",
            "8050b2acbf1f11f7b1479a8f25e2549120cc659f"
        ],
        [
            "rewrite zlt_false.",
            "VernacExtend",
            "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
        ],
        [
            "rewrite xor_idem; auto.",
            "VernacExtend",
            "c6ab6c46f604a11c15fcd77be229870846b9b1c7"
        ],
        [
            "unfold max_unsigned; omega.",
            "VernacExtend",
            "8050b2acbf1f11f7b1479a8f25e2549120cc659f"
        ],
        [
            "destruct H; subst b.",
            "VernacExtend",
            "fe4da5c6b64f69b498e4d6a09edf54de13adac43"
        ],
        [
            "rewrite xor_zero_l.",
            "VernacExtend",
            "c684d7ce820c49253c833022478df7de4b696326"
        ],
        [
            "rewrite unsigned_one, unsigned_zero; auto.",
            "VernacExtend",
            "515741703c10316b2bfb4ff87a20ee3f75dee1de"
        ],
        [
            "rewrite xor_idem.",
            "VernacExtend",
            "017e5ec48f75fe487eb8dd27ee9d8b63669e9c95"
        ],
        [
            "rewrite unsigned_one, unsigned_zero; auto.",
            "VernacExtend",
            "515741703c10316b2bfb4ff87a20ee3f75dee1de"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Z_add_is_or: forall i, 0 <= i -> forall x y, (forall j, 0 <= j <= i -> Z.testbit x j && Z.testbit y j = false) -> Z.testbit (x + y) i = Z.testbit x i || Z.testbit y i.",
            "VernacStartTheoremProof",
            "37efbf33f74f2f29af72859fb94fd6fbe88f4e78"
        ],
        [
            "intros i0 POS0.",
            "VernacExtend",
            "9ff333e026e0aecebe5f30d72ba096e68d695c17"
        ],
        [
            "pattern i0.",
            "VernacExtend",
            "1a983b0ddd685db9653586847604c73a7c95f084"
        ],
        [
            "apply Zlt_0_ind; auto.",
            "VernacExtend",
            "1da3917c34b2bda951299549c1b2828f43b7b783"
        ],
        [
            "intros i IND POS x y EXCL.",
            "VernacExtend",
            "f3cdfe17115aa059af220cb239e637c4cc1b6116"
        ],
        [
            "rewrite (Zdecomp x) in *.",
            "VernacExtend",
            "bf4bfeac046adb3843c20172d6d6a870ed6acf1d"
        ],
        [
            "rewrite (Zdecomp y) in *.",
            "VernacExtend",
            "167c608f94f681d6b8a0732897d7cb80830ed46e"
        ],
        [
            "transitivity (Z.testbit (Zshiftin (Z.odd x || Z.odd y) (Z.div2 x + Z.div2 y)) i).",
            "VernacExtend",
            "38f10acd00e993cea9ac598998e0baf7fb32e020"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite !Zshiftin_spec.",
            "VernacExtend",
            "aa9d3dedf623bac9a8173e30b44355badd5e5367"
        ],
        [
            "exploit (EXCL 0).",
            "VernacExtend",
            "6ed2968867df6ac82280ea8fce055d9f0d604c12"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite !Ztestbit_shiftin_base.",
            "VernacExtend",
            "e54dc2cfb82f64241918deaccb7ee3e78c7d5f9b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "Opaque Z.mul.",
            "VernacSetOpacity",
            "09832988410936646cf7f16914fed9d73426bcc3"
        ],
        [
            "destruct (Z.odd x); destruct (Z.odd y); simpl in *; discriminate || ring.",
            "VernacExtend",
            "cd72c82b9775f0743038140f700285eaccfd3aa9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite !Ztestbit_shiftin; auto.",
            "VernacExtend",
            "6de2cab66e5c21e555d5dc59e8d400bfe2eaddd2"
        ],
        [
            "destruct (zeq i 0).",
            "VernacExtend",
            "d84935205e6f3de20c609dbacd0c5438037a33e9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply IND.",
            "VernacExtend",
            "e7daae69ff1a356c02a963bd11f2cc2e784b4977"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exploit (EXCL (Z.succ j)).",
            "VernacExtend",
            "9a4c8c3d7b6e22fe8c5e315a4a0adaab8f1a0b4d"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite !Ztestbit_shiftin_succ.",
            "VernacExtend",
            "f49b21d01261cebb2aaab9a44cc87682d2996ab9"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem add_is_or: forall x y, and x y = zero -> add x y = or x y.",
            "VernacStartTheoremProof",
            "bfc39f3d61a69487dc37701bb29fd4e8244e7f62"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "unfold add.",
            "VernacExtend",
            "11cf98bf231f22df486b46b3b6a1c38a94e859dd"
        ],
        [
            "rewrite testbit_repr; auto.",
            "VernacExtend",
            "d20143ed773e39c9c2d38dc1a41b649eadbc95c6"
        ],
        [
            "apply Z_add_is_or.",
            "VernacExtend",
            "6ca340efc7df23eb99081796bc43e39d6a74f900"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (testbit (and x y) j = testbit zero j) by congruence.",
            "VernacExtend",
            "c0e05d2974dc8978ad974f14d530d33a16b52021"
        ],
        [
            "autorewrite with ints in H2.",
            "VernacExtend",
            "6a54b4d1ab7c76480828237ba209066524529411"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem xor_is_or: forall x y, and x y = zero -> xor x y = or x y.",
            "VernacStartTheoremProof",
            "c505dc6fe1a800e587da4356e933087cb640d169"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "assert (testbit (and x y) i = testbit zero i) by congruence.",
            "VernacExtend",
            "32bb05fad7115f1651a9f42d7c82f01a09e2dcca"
        ],
        [
            "autorewrite with ints in H1; auto.",
            "VernacExtend",
            "310850364021b15a924922dfeb4eae741644b131"
        ],
        [
            "destruct (testbit x i); destruct (testbit y i); simpl in *; congruence.",
            "VernacExtend",
            "3a1092b9ee68e87081d8fc8d2550d1523ae539ef"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem add_is_xor: forall x y, and x y = zero -> add x y = xor x y.",
            "VernacStartTheoremProof",
            "26485ada6ba7247b2d001380fc3afbeae84a2e2e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite xor_is_or; auto.",
            "VernacExtend",
            "4e68ad362e754d0c869a663f7e035de06c108cec"
        ],
        [
            "apply add_is_or; auto.",
            "VernacExtend",
            "89af6eb98d0f78245994c0672986121642687fcb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem add_and: forall x y z, and y z = zero -> add (and x y) (and x z) = and x (or y z).",
            "VernacStartTheoremProof",
            "181aeb77ffd6c36dea04a74383cc219ad00bdd21"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite add_is_or.",
            "VernacExtend",
            "ac866ecb578700d9e3e43c1730881642f3343556"
        ],
        [
            "rewrite and_or_distrib; auto.",
            "VernacExtend",
            "245616068a10eb20bb93acfb396f3ee42a2e4d51"
        ],
        [
            "rewrite (and_commut x y).",
            "VernacExtend",
            "52dd98f77d0938a99aec0723a4924da3967466ac"
        ],
        [
            "rewrite and_assoc.",
            "VernacExtend",
            "62a08aa2ddd81c637f08d9fda9e004ce7b188a4b"
        ],
        [
            "repeat rewrite <- (and_assoc x).",
            "VernacExtend",
            "fc82b02766d847dc481b009e909aa61b5164165a"
        ],
        [
            "rewrite (and_commut (and x x)).",
            "VernacExtend",
            "ba78f21ef1c8aa1967ecf6a133469aff25ab35df"
        ],
        [
            "rewrite <- and_assoc.",
            "VernacExtend",
            "fadebad2e38f5a2a9adcca4f7a974a9fcc270595"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "rewrite and_commut.",
            "VernacExtend",
            "b10a32c5381ffe79399fa5b6823f886c3c37781f"
        ],
        [
            "apply and_zero.",
            "VernacExtend",
            "44206f74dc8d718354f02e6cd0d98255639e390f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bits_shl: forall x y i, 0 <= i < zwordsize -> testbit (shl x y) i = if zlt i (unsigned y) then false else testbit x (i - unsigned y).",
            "VernacStartTheoremProof",
            "df38aacccaf7d1acc37dea1cbda23c49f69a7b86"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold shl.",
            "VernacExtend",
            "d933b5e131ce79e2821341c8f63e07a70ac2e1a0"
        ],
        [
            "rewrite testbit_repr; auto.",
            "VernacExtend",
            "d20143ed773e39c9c2d38dc1a41b649eadbc95c6"
        ],
        [
            "destruct (zlt i (unsigned y)).",
            "VernacExtend",
            "8ff4ce42ea7d05abc2f401d4fbe4284897679fa9"
        ],
        [
            "apply Z.shiftl_spec_low.",
            "VernacExtend",
            "c3b358c742be3eb903da98ae78625599b3c5305a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply Z.shiftl_spec_high.",
            "VernacExtend",
            "7bc7482bd58465bc21f5a7184ed17e365f00da26"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bits_shru: forall x y i, 0 <= i < zwordsize -> testbit (shru x y) i = if zlt (i + unsigned y) zwordsize then testbit x (i + unsigned y) else false.",
            "VernacStartTheoremProof",
            "923b91092d3188ce3a21446ee2a4d8d2179119bb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold shru.",
            "VernacExtend",
            "6bc2eec5ac24b3d88f131d79dde21420cba5c4be"
        ],
        [
            "rewrite testbit_repr; auto.",
            "VernacExtend",
            "d20143ed773e39c9c2d38dc1a41b649eadbc95c6"
        ],
        [
            "rewrite Z.shiftr_spec.",
            "VernacExtend",
            "80c165d6ba099c7565e4b5045695449745807abf"
        ],
        [
            "fold (testbit x (i + unsigned y)).",
            "VernacExtend",
            "3d2f4914e1e7d295778a440c1522c70bef8d9be0"
        ],
        [
            "destruct (zlt (i + unsigned y) zwordsize).",
            "VernacExtend",
            "28d16ad0f4748b9129aacbe67806f56def762abf"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply bits_above; auto.",
            "VernacExtend",
            "68e2d5a5c1b1136e70a4ff0724963c782e3c6d9e"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bits_shr: forall x y i, 0 <= i < zwordsize -> testbit (shr x y) i = testbit x (if zlt (i + unsigned y) zwordsize then i + unsigned y else zwordsize - 1).",
            "VernacStartTheoremProof",
            "73b2ff3b7d3e40b97214ddd27a74b291b234dd8a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold shr.",
            "VernacExtend",
            "b0785b9ec45cd18cb02fe6ea9a4f119054b99009"
        ],
        [
            "rewrite testbit_repr; auto.",
            "VernacExtend",
            "d20143ed773e39c9c2d38dc1a41b649eadbc95c6"
        ],
        [
            "rewrite Z.shiftr_spec.",
            "VernacExtend",
            "80c165d6ba099c7565e4b5045695449745807abf"
        ],
        [
            "apply bits_signed.",
            "VernacExtend",
            "56f1ed558ed74d0eda0686b72cf662783fdfc9be"
        ],
        [
            "generalize (unsigned_range y); omega.",
            "VernacExtend",
            "42fda19b1742db2649f926c7d3bceaa4596993b0"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite bits_shl bits_shru bits_shr: ints.",
            "VernacExtend",
            "58ce1a5d0c40f9cc277a8b133da1b8e993b2de86"
        ],
        [
            "Theorem shl_zero: forall x, shl x zero = x.",
            "VernacStartTheoremProof",
            "ebf2e2c7bbb893fd40b9ec4d2f4229f302170172"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "rewrite unsigned_zero.",
            "VernacExtend",
            "89956b9f461b9934c8fa99e6e63074f0275efcae"
        ],
        [
            "rewrite zlt_false.",
            "VernacExtend",
            "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
        ],
        [
            "f_equal; omega.",
            "VernacExtend",
            "3b812353131f9b9bebbd6410b3fa7c9d2e597ec3"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bitwise_binop_shl: forall f f' x y n, (forall x y i, 0 <= i < zwordsize -> testbit (f x y) i = f' (testbit x i) (testbit y i)) -> f' false false = false -> f (shl x n) (shl y n) = shl (f x y) n.",
            "VernacStartTheoremProof",
            "830d3e27a27d185aab348589f65af4805d4c078c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply same_bits_eq; intros.",
            "VernacExtend",
            "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
        ],
        [
            "rewrite H; auto.",
            "VernacExtend",
            "3e25713af8eaa76cddf9287af10d66733da2ee16"
        ],
        [
            "rewrite !bits_shl; auto.",
            "VernacExtend",
            "2451fc6228943a073a46233a3a7d04d4a305320d"
        ],
        [
            "destruct (zlt i (unsigned n)); auto.",
            "VernacExtend",
            "727ee4b681da638ffdafc311614e3ac04c218889"
        ],
        [
            "rewrite H; auto.",
            "VernacExtend",
            "3e25713af8eaa76cddf9287af10d66733da2ee16"
        ],
        [
            "generalize (unsigned_range n); omega.",
            "VernacExtend",
            "12c3457282dddbb4df81d1e34b8796753589dfa6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem and_shl: forall x y n, and (shl x n) (shl y n) = shl (and x y) n.",
            "VernacStartTheoremProof",
            "1a3141a675604b642cb14890812d13244cee1872"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply bitwise_binop_shl with andb.",
            "VernacExtend",
            "f487b88701b4590041afbadabe1ccb1aa5e2873e"
        ],
        [
            "exact bits_and.",
            "VernacExtend",
            "207bfd0e3a5029422d3eb0c47e1a67f65bd16588"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem or_shl: forall x y n, or (shl x n) (shl y n) = shl (or x y) n.",
            "VernacStartTheoremProof",
            "cd252be3e03d88d2823181bf7a6ea490dc150ca4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply bitwise_binop_shl with orb.",
            "VernacExtend",
            "2286752a5e2eb9ce4c7a4990096385163ffbd317"
        ],
        [
            "exact bits_or.",
            "VernacExtend",
            "62259bfc6df42cd2df27ebf4ca0f7c291f977bdb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem xor_shl: forall x y n, xor (shl x n) (shl y n) = shl (xor x y) n.",
            "VernacStartTheoremProof",
            "6816a32b7aaa053d7ce1f8e6ecd04742b96e8b15"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply bitwise_binop_shl with xorb.",
            "VernacExtend",
            "539770f8f2a4bf99a712904ab824041bbf52ed2d"
        ],
        [
            "exact bits_xor.",
            "VernacExtend",
            "eb517663224a45ead53e886c70aa04ae25aadecc"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltu_inv: forall x y, ltu x y = true -> 0 <= unsigned x < unsigned y.",
            "VernacStartTheoremProof",
            "afbb4d17fbae52a9ab4982bc6dff3cb8adadd086"
        ],
        [
            "unfold ltu; intros.",
            "VernacExtend",
            "9368dcfe020012ed33721d5b7f15dafc7884ef24"
        ],
        [
            "destruct (zlt (unsigned x) (unsigned y)).",
            "VernacExtend",
            "7d750880a5227f6d96d309aa51c5d6072d28d668"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "generalize (unsigned_range x); omega.",
            "VernacExtend",
            "82d43e79c3776eb155d8ee4a39923b4051549c3b"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltu_iwordsize_inv: forall x, ltu x iwordsize = true -> 0 <= unsigned x < zwordsize.",
            "VernacStartTheoremProof",
            "c0c22cbd6eff57d39ff12e4778d48ad517515d45"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (ltu_inv _ _ H).",
            "VernacExtend",
            "7b58a295ab1791d1e4a443703f076aec968a783c"
        ],
        [
            "rewrite unsigned_repr_wordsize.",
            "VernacExtend",
            "68bf2f65418d45548a5d1a5f941d2ad54148206b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem shl_shl: forall x y z, ltu y iwordsize = true -> ltu z iwordsize = true -> ltu (add y z) iwordsize = true -> shl (shl x y) z = shl x (add y z).",
            "VernacStartTheoremProof",
            "37393a9dd31609189d2284ab27a8e92226c1bad5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (ltu_iwordsize_inv _ H) (ltu_iwordsize_inv _ H0); intros.",
            "VernacExtend",
            "addc275edaa6d82f262a39539f4be82df5a8b3ba"
        ],
        [
            "assert (unsigned (add y z) = unsigned y + unsigned z).",
            "VernacExtend",
            "b4585325a58ffdf43e37379fcbedfdfc68962b51"
        ],
        [
            "unfold add.",
            "VernacExtend",
            "11cf98bf231f22df486b46b3b6a1c38a94e859dd"
        ],
        [
            "apply unsigned_repr.",
            "VernacExtend",
            "cbb55125b21da3156cf49c45f71d95a6743593f6"
        ],
        [
            "generalize two_wordsize_max_unsigned; omega.",
            "VernacExtend",
            "1867487a3ccf1d446bc1323a988de67b70f3fb3a"
        ],
        [
            "apply same_bits_eq; intros.",
            "VernacExtend",
            "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
        ],
        [
            "rewrite bits_shl; auto.",
            "VernacExtend",
            "8ceddad9fb2f5a1a90d3d6f9fde9ccf26e61696f"
        ],
        [
            "destruct (zlt i (unsigned z)).",
            "VernacExtend",
            "8c91e70922899b4ee428d5a1643d281b51400371"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite bits_shl; auto.",
            "VernacExtend",
            "8ceddad9fb2f5a1a90d3d6f9fde9ccf26e61696f"
        ],
        [
            "rewrite zlt_true.",
            "VernacExtend",
            "b49135e183425368b4318af106711c28871bcc77"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite bits_shl.",
            "VernacExtend",
            "a0e1637f702fc4b84135a3530c9ecde2820a246f"
        ],
        [
            "destruct (zlt (i - unsigned z) (unsigned y)).",
            "VernacExtend",
            "802b0cb2fa9de3894986c443497cd0a730c6a2e9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite bits_shl; auto.",
            "VernacExtend",
            "8ceddad9fb2f5a1a90d3d6f9fde9ccf26e61696f"
        ],
        [
            "rewrite zlt_true.",
            "VernacExtend",
            "b49135e183425368b4318af106711c28871bcc77"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite bits_shl; auto.",
            "VernacExtend",
            "8ceddad9fb2f5a1a90d3d6f9fde9ccf26e61696f"
        ],
        [
            "rewrite zlt_false.",
            "VernacExtend",
            "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem sub_ltu: forall x y, ltu x y = true -> 0 <= unsigned y - unsigned x <= unsigned y.",
            "VernacStartTheoremProof",
            "3329343ecb453d33e783b2792c0eae14706857ee"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (ltu_inv x y H).",
            "VernacExtend",
            "1fec4063df48fed179b0234f07e4fa6d8e9030d7"
        ],
        [
            "intros .",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem shru_zero: forall x, shru x zero = x.",
            "VernacStartTheoremProof",
            "b84adbc13e491a1b0aeb7d9d1aff5715607a451f"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "rewrite unsigned_zero.",
            "VernacExtend",
            "89956b9f461b9934c8fa99e6e63074f0275efcae"
        ],
        [
            "rewrite zlt_true.",
            "VernacExtend",
            "b49135e183425368b4318af106711c28871bcc77"
        ],
        [
            "f_equal; omega.",
            "VernacExtend",
            "3b812353131f9b9bebbd6410b3fa7c9d2e597ec3"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bitwise_binop_shru: forall f f' x y n, (forall x y i, 0 <= i < zwordsize -> testbit (f x y) i = f' (testbit x i) (testbit y i)) -> f' false false = false -> f (shru x n) (shru y n) = shru (f x y) n.",
            "VernacStartTheoremProof",
            "64bd146bce2a280a3575980e75ae158c57fc71ae"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply same_bits_eq; intros.",
            "VernacExtend",
            "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
        ],
        [
            "rewrite H; auto.",
            "VernacExtend",
            "3e25713af8eaa76cddf9287af10d66733da2ee16"
        ],
        [
            "rewrite !bits_shru; auto.",
            "VernacExtend",
            "0bf1d6a080c06fd32b82ec620db4e1a68e5495d1"
        ],
        [
            "destruct (zlt (i + unsigned n) zwordsize); auto.",
            "VernacExtend",
            "7d1f2b17399b8c3fbde429758727fa5d4792aad7"
        ],
        [
            "rewrite H; auto.",
            "VernacExtend",
            "3e25713af8eaa76cddf9287af10d66733da2ee16"
        ],
        [
            "generalize (unsigned_range n); omega.",
            "VernacExtend",
            "12c3457282dddbb4df81d1e34b8796753589dfa6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem and_shru: forall x y n, and (shru x n) (shru y n) = shru (and x y) n.",
            "VernacStartTheoremProof",
            "205e41b484b9438af668ff04595a6aacd91e76dc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply bitwise_binop_shru with andb; auto.",
            "VernacExtend",
            "1218295428d585db68958d3c76f2bc1938c29d0d"
        ],
        [
            "exact bits_and.",
            "VernacExtend",
            "207bfd0e3a5029422d3eb0c47e1a67f65bd16588"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem or_shru: forall x y n, or (shru x n) (shru y n) = shru (or x y) n.",
            "VernacStartTheoremProof",
            "6af0819deeec0a4d490d96c970bd89bd3485111a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply bitwise_binop_shru with orb; auto.",
            "VernacExtend",
            "b5ccb4082f658038abbc443f5c09dce002d11872"
        ],
        [
            "exact bits_or.",
            "VernacExtend",
            "62259bfc6df42cd2df27ebf4ca0f7c291f977bdb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem xor_shru: forall x y n, xor (shru x n) (shru y n) = shru (xor x y) n.",
            "VernacStartTheoremProof",
            "d56c7667b0f24b44e5439d66bf35e1837763dc05"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply bitwise_binop_shru with xorb; auto.",
            "VernacExtend",
            "4b9dabefaecc939afa27d2d3cc222886e1096f86"
        ],
        [
            "exact bits_xor.",
            "VernacExtend",
            "eb517663224a45ead53e886c70aa04ae25aadecc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem shru_shru: forall x y z, ltu y iwordsize = true -> ltu z iwordsize = true -> ltu (add y z) iwordsize = true -> shru (shru x y) z = shru x (add y z).",
            "VernacStartTheoremProof",
            "1353ce804358701e54ce98b64489e32bed5044be"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (ltu_iwordsize_inv _ H) (ltu_iwordsize_inv _ H0); intros.",
            "VernacExtend",
            "addc275edaa6d82f262a39539f4be82df5a8b3ba"
        ],
        [
            "assert (unsigned (add y z) = unsigned y + unsigned z).",
            "VernacExtend",
            "b4585325a58ffdf43e37379fcbedfdfc68962b51"
        ],
        [
            "unfold add.",
            "VernacExtend",
            "11cf98bf231f22df486b46b3b6a1c38a94e859dd"
        ],
        [
            "apply unsigned_repr.",
            "VernacExtend",
            "cbb55125b21da3156cf49c45f71d95a6743593f6"
        ],
        [
            "generalize two_wordsize_max_unsigned; omega.",
            "VernacExtend",
            "1867487a3ccf1d446bc1323a988de67b70f3fb3a"
        ],
        [
            "apply same_bits_eq; intros.",
            "VernacExtend",
            "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
        ],
        [
            "rewrite bits_shru; auto.",
            "VernacExtend",
            "c4c629df9cf060299ef7b4c0d8265d9d79a27d30"
        ],
        [
            "destruct (zlt (i + unsigned z) zwordsize).",
            "VernacExtend",
            "1d6d3028ce894238284d243ac77df669887c4ee0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite bits_shru.",
            "VernacExtend",
            "a63a609db343946cb726afaf3c287b7802ce80be"
        ],
        [
            "destruct (zlt (i + unsigned z + unsigned y) zwordsize).",
            "VernacExtend",
            "d454c6b474e8ba94c557e47b59ea6bade276bf68"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite bits_shru; auto.",
            "VernacExtend",
            "c4c629df9cf060299ef7b4c0d8265d9d79a27d30"
        ],
        [
            "rewrite zlt_true.",
            "VernacExtend",
            "b49135e183425368b4318af106711c28871bcc77"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite bits_shru; auto.",
            "VernacExtend",
            "c4c629df9cf060299ef7b4c0d8265d9d79a27d30"
        ],
        [
            "rewrite zlt_false.",
            "VernacExtend",
            "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite bits_shru; auto.",
            "VernacExtend",
            "c4c629df9cf060299ef7b4c0d8265d9d79a27d30"
        ],
        [
            "rewrite zlt_false.",
            "VernacExtend",
            "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem shr_zero: forall x, shr x zero = x.",
            "VernacStartTheoremProof",
            "9179280e6621eb068c79be7f69c9ae8016a231b8"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "rewrite unsigned_zero.",
            "VernacExtend",
            "89956b9f461b9934c8fa99e6e63074f0275efcae"
        ],
        [
            "rewrite zlt_true.",
            "VernacExtend",
            "b49135e183425368b4318af106711c28871bcc77"
        ],
        [
            "f_equal; omega.",
            "VernacExtend",
            "3b812353131f9b9bebbd6410b3fa7c9d2e597ec3"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bitwise_binop_shr: forall f f' x y n, (forall x y i, 0 <= i < zwordsize -> testbit (f x y) i = f' (testbit x i) (testbit y i)) -> f (shr x n) (shr y n) = shr (f x y) n.",
            "VernacStartTheoremProof",
            "30ae7a926407627fe7418035cd29b476a0ca8d13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply same_bits_eq; intros.",
            "VernacExtend",
            "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
        ],
        [
            "rewrite H; auto.",
            "VernacExtend",
            "3e25713af8eaa76cddf9287af10d66733da2ee16"
        ],
        [
            "rewrite !bits_shr; auto.",
            "VernacExtend",
            "46ac122c98a59a7d1a19cef74d06542a59c1713f"
        ],
        [
            "rewrite H; auto.",
            "VernacExtend",
            "3e25713af8eaa76cddf9287af10d66733da2ee16"
        ],
        [
            "destruct (zlt (i + unsigned n) zwordsize).",
            "VernacExtend",
            "657a8c30a7dadb4652dc432a6563bfddcb185e7d"
        ],
        [
            "generalize (unsigned_range n); omega.",
            "VernacExtend",
            "12c3457282dddbb4df81d1e34b8796753589dfa6"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem and_shr: forall x y n, and (shr x n) (shr y n) = shr (and x y) n.",
            "VernacStartTheoremProof",
            "f4428e4c1f8ad00579adeb284b57dda47b58f38f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply bitwise_binop_shr with andb.",
            "VernacExtend",
            "c3178823072546ac06c55b30f0792db622e82fc0"
        ],
        [
            "exact bits_and.",
            "VernacExtend",
            "207bfd0e3a5029422d3eb0c47e1a67f65bd16588"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem or_shr: forall x y n, or (shr x n) (shr y n) = shr (or x y) n.",
            "VernacStartTheoremProof",
            "edf15b65e0f1eb4f94ead53734599ea5fd9e5978"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply bitwise_binop_shr with orb.",
            "VernacExtend",
            "f17927d6535df22c83764061871abe04d68f0415"
        ],
        [
            "exact bits_or.",
            "VernacExtend",
            "62259bfc6df42cd2df27ebf4ca0f7c291f977bdb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem xor_shr: forall x y n, xor (shr x n) (shr y n) = shr (xor x y) n.",
            "VernacStartTheoremProof",
            "294a01202c69ef0cb9b93147eda52a6121fc5014"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply bitwise_binop_shr with xorb.",
            "VernacExtend",
            "88e974e8674cdb84615faf980a85436234a42da9"
        ],
        [
            "exact bits_xor.",
            "VernacExtend",
            "eb517663224a45ead53e886c70aa04ae25aadecc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem shr_shr: forall x y z, ltu y iwordsize = true -> ltu z iwordsize = true -> ltu (add y z) iwordsize = true -> shr (shr x y) z = shr x (add y z).",
            "VernacStartTheoremProof",
            "dc4807fa893a83e57e49fc2ede717eb6dddfacce"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (ltu_iwordsize_inv _ H) (ltu_iwordsize_inv _ H0); intros.",
            "VernacExtend",
            "addc275edaa6d82f262a39539f4be82df5a8b3ba"
        ],
        [
            "assert (unsigned (add y z) = unsigned y + unsigned z).",
            "VernacExtend",
            "b4585325a58ffdf43e37379fcbedfdfc68962b51"
        ],
        [
            "unfold add.",
            "VernacExtend",
            "11cf98bf231f22df486b46b3b6a1c38a94e859dd"
        ],
        [
            "apply unsigned_repr.",
            "VernacExtend",
            "cbb55125b21da3156cf49c45f71d95a6743593f6"
        ],
        [
            "generalize two_wordsize_max_unsigned; omega.",
            "VernacExtend",
            "1867487a3ccf1d446bc1323a988de67b70f3fb3a"
        ],
        [
            "apply same_bits_eq; intros.",
            "VernacExtend",
            "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
        ],
        [
            "rewrite !bits_shr; auto.",
            "VernacExtend",
            "46ac122c98a59a7d1a19cef74d06542a59c1713f"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "destruct (zlt (i + unsigned z) zwordsize).",
            "VernacExtend",
            "1d6d3028ce894238284d243ac77df669887c4ee0"
        ],
        [
            "rewrite H4.",
            "VernacExtend",
            "fc5d011df68f7160e4669d129d2975825ac089bb"
        ],
        [
            "replace (i + (unsigned y + unsigned z)) with (i + unsigned z + unsigned y) by omega.",
            "VernacExtend",
            "762a2c4ba16f544707b07943fe18e2d7071f8f23"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite (zlt_false _ (i + unsigned (add y z))).",
            "VernacExtend",
            "da808160868cce139f065cf8356a9e72ad1ef4ee"
        ],
        [
            "destruct (zlt (zwordsize - 1 + unsigned y) zwordsize); omega.",
            "VernacExtend",
            "988ed273b2ecba8c8aba00a47d1f0704cd2b4cdc"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "destruct (zlt (i + unsigned z) zwordsize); omega.",
            "VernacExtend",
            "75a94238b0419f3267ffcb55f3298207698f7cd4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem and_shr_shru: forall x y z, and (shr x z) (shru y z) = shru (and x y) z.",
            "VernacStartTheoremProof",
            "81b9525690518d2ac00a9c13b758af3731297bf5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply same_bits_eq; intros.",
            "VernacExtend",
            "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
        ],
        [
            "rewrite bits_and; auto.",
            "VernacExtend",
            "ebb7cb503b8fdcd326d9062c755d67707c1d2e79"
        ],
        [
            "rewrite bits_shr; auto.",
            "VernacExtend",
            "46a4f6a2843486202c3e28200045f786c7aa06e8"
        ],
        [
            "rewrite !bits_shru; auto.",
            "VernacExtend",
            "0bf1d6a080c06fd32b82ec620db4e1a68e5495d1"
        ],
        [
            "destruct (zlt (i + unsigned z) zwordsize).",
            "VernacExtend",
            "1d6d3028ce894238284d243ac77df669887c4ee0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite bits_and; auto.",
            "VernacExtend",
            "ebb7cb503b8fdcd326d9062c755d67707c1d2e79"
        ],
        [
            "generalize (unsigned_range z); omega.",
            "VernacExtend",
            "a39b948df5a537a672106cebebf3ba236cd83c15"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply andb_false_r.",
            "VernacExtend",
            "96acabd8a60f7c2e82c0ec27c34e893436485a16"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem shr_and_shru_and: forall x y z, shru (shl z y) y = z -> and (shr x y) z = and (shru x y) z.",
            "VernacStartTheoremProof",
            "89231025acf846213efb5b576016637b1b395768"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "rewrite and_shru.",
            "VernacExtend",
            "29d26fa414338db28a63991e95f4e0e4a8a971a2"
        ],
        [
            "rewrite and_shr_shru.",
            "VernacExtend",
            "dca51a2be657d5836f70f8e0f52f0edcae99c6a5"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem shru_lt_zero: forall x, shru x (repr (zwordsize - 1)) = if lt x zero then one else zero.",
            "VernacStartTheoremProof",
            "c9f14a923a18e9a33a6e9db0764611cace344547"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply same_bits_eq; intros.",
            "VernacExtend",
            "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
        ],
        [
            "rewrite bits_shru; auto.",
            "VernacExtend",
            "c4c629df9cf060299ef7b4c0d8265d9d79a27d30"
        ],
        [
            "rewrite unsigned_repr.",
            "VernacExtend",
            "5134990e153a3f2ce893c9ea9837f183c322ceb2"
        ],
        [
            "destruct (zeq i 0).",
            "VernacExtend",
            "d84935205e6f3de20c609dbacd0c5438037a33e9"
        ],
        [
            "subst i.",
            "VernacExtend",
            "8a51b06e94f64277663e0022260aa1e58bff437c"
        ],
        [
            "rewrite Z.add_0_l.",
            "VernacExtend",
            "44f25f9f1c5a6e47f391f3c0a94821844d59e729"
        ],
        [
            "rewrite zlt_true.",
            "VernacExtend",
            "b49135e183425368b4318af106711c28871bcc77"
        ],
        [
            "rewrite sign_bit_of_unsigned.",
            "VernacExtend",
            "6cd437092de47964ce76741c43d81f13650dde7b"
        ],
        [
            "unfold lt.",
            "VernacExtend",
            "2e821d407c03d5f5e572c51453fdc618d9dec364"
        ],
        [
            "rewrite signed_zero.",
            "VernacExtend",
            "19d56ca0cd36da40c29724bb93cb20d76340e45c"
        ],
        [
            "unfold signed.",
            "VernacExtend",
            "f99b13683b7fbccb713276bdf12a56c47fabc924"
        ],
        [
            "destruct (zlt (unsigned x) half_modulus).",
            "VernacExtend",
            "96100f79c30f7c1ed7c9d19caec035348a472e2e"
        ],
        [
            "rewrite zlt_false.",
            "VernacExtend",
            "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "generalize (unsigned_range x); omega.",
            "VernacExtend",
            "82d43e79c3776eb155d8ee4a39923b4051549c3b"
        ],
        [
            "rewrite zlt_true.",
            "VernacExtend",
            "b49135e183425368b4318af106711c28871bcc77"
        ],
        [
            "unfold one; rewrite testbit_repr; auto.",
            "VernacExtend",
            "32e2187d8e5a5ff4cd4f491394ec1c4c6a6a2808"
        ],
        [
            "generalize (unsigned_range x); omega.",
            "VernacExtend",
            "82d43e79c3776eb155d8ee4a39923b4051549c3b"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite zlt_false.",
            "VernacExtend",
            "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
        ],
        [
            "unfold testbit.",
            "VernacExtend",
            "14f68f27aaaec42f64d3a8f3009fc6eaa35592a6"
        ],
        [
            "rewrite Ztestbit_eq.",
            "VernacExtend",
            "cc27e9791667c9a7f1466faf67869f938d5d405a"
        ],
        [
            "rewrite zeq_false.",
            "VernacExtend",
            "dab8f9109b7a6d08485a19d2b305200449ea8478"
        ],
        [
            "destruct (lt x zero).",
            "VernacExtend",
            "56431311febe9c755a97db275e2484cffe963341"
        ],
        [
            "rewrite unsigned_one.",
            "VernacExtend",
            "52f1cc9e4b7b0a3b7c37f5e9a1a6c514d4cb1683"
        ],
        [
            "simpl Z.div2.",
            "VernacExtend",
            "97548dec0e2026996bb0eaad0c2289dd70b95681"
        ],
        [
            "rewrite Z.testbit_0_l; auto.",
            "VernacExtend",
            "b6110e289d3c1f2e6ec50f3547ced256074b22df"
        ],
        [
            "rewrite unsigned_zero.",
            "VernacExtend",
            "89956b9f461b9934c8fa99e6e63074f0275efcae"
        ],
        [
            "simpl Z.div2.",
            "VernacExtend",
            "97548dec0e2026996bb0eaad0c2289dd70b95681"
        ],
        [
            "rewrite Z.testbit_0_l; auto.",
            "VernacExtend",
            "b6110e289d3c1f2e6ec50f3547ced256074b22df"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "generalize wordsize_max_unsigned; omega.",
            "VernacExtend",
            "3f1b96d7bb5d8b56488da98617ce0a4bf6d89d59"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem shr_lt_zero: forall x, shr x (repr (zwordsize - 1)) = if lt x zero then mone else zero.",
            "VernacStartTheoremProof",
            "dbebaae9c1772108af4b03e860acffd2c0c2a685"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply same_bits_eq; intros.",
            "VernacExtend",
            "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
        ],
        [
            "rewrite bits_shr; auto.",
            "VernacExtend",
            "46a4f6a2843486202c3e28200045f786c7aa06e8"
        ],
        [
            "rewrite unsigned_repr.",
            "VernacExtend",
            "5134990e153a3f2ce893c9ea9837f183c322ceb2"
        ],
        [
            "transitivity (testbit x (zwordsize - 1)).",
            "VernacExtend",
            "645b561d72a8ae655dfe26d3f1cbab502e43128f"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "destruct (zlt (i + (zwordsize - 1)) zwordsize); omega.",
            "VernacExtend",
            "96fc6b1d7d6c17e6e5df4e3cf63750f5b5ed7306"
        ],
        [
            "rewrite sign_bit_of_unsigned.",
            "VernacExtend",
            "6cd437092de47964ce76741c43d81f13650dde7b"
        ],
        [
            "unfold lt.",
            "VernacExtend",
            "2e821d407c03d5f5e572c51453fdc618d9dec364"
        ],
        [
            "rewrite signed_zero.",
            "VernacExtend",
            "19d56ca0cd36da40c29724bb93cb20d76340e45c"
        ],
        [
            "unfold signed.",
            "VernacExtend",
            "f99b13683b7fbccb713276bdf12a56c47fabc924"
        ],
        [
            "destruct (zlt (unsigned x) half_modulus).",
            "VernacExtend",
            "96100f79c30f7c1ed7c9d19caec035348a472e2e"
        ],
        [
            "rewrite zlt_false.",
            "VernacExtend",
            "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
        ],
        [
            "rewrite bits_zero; auto.",
            "VernacExtend",
            "0193d46f7daae040537e7ce3218d8709b2a62cbb"
        ],
        [
            "generalize (unsigned_range x); omega.",
            "VernacExtend",
            "82d43e79c3776eb155d8ee4a39923b4051549c3b"
        ],
        [
            "rewrite zlt_true.",
            "VernacExtend",
            "b49135e183425368b4318af106711c28871bcc77"
        ],
        [
            "rewrite bits_mone; auto.",
            "VernacExtend",
            "65db6e3a47425ff5b36895a38f5378183c298773"
        ],
        [
            "generalize (unsigned_range x); omega.",
            "VernacExtend",
            "82d43e79c3776eb155d8ee4a39923b4051549c3b"
        ],
        [
            "generalize wordsize_max_unsigned; omega.",
            "VernacExtend",
            "3f1b96d7bb5d8b56488da98617ce0a4bf6d89d59"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bits_rol: forall x y i, 0 <= i < zwordsize -> testbit (rol x y) i = testbit x ((i - unsigned y) mod zwordsize).",
            "VernacStartTheoremProof",
            "cbdcc2f9e4a15b81694c57375bc2f18d9000d275"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold rol.",
            "VernacExtend",
            "e900d8110ee787715c0db88bc5fb4322c81f244b"
        ],
        [
            "exploit (Z_div_mod_eq (unsigned y) zwordsize).",
            "VernacExtend",
            "d0025da865cc9f60e6e4a7ca491d162acf7d4733"
        ],
        [
            "apply wordsize_pos.",
            "VernacExtend",
            "3cdd00bd38b50c8ad9d29d70090aa8df30337a33"
        ],
        [
            "set (j := unsigned y mod zwordsize).",
            "VernacExtend",
            "f802a7f3185b7d0dee2f506a52aaab34af4d9053"
        ],
        [
            "set (k := unsigned y / zwordsize).",
            "VernacExtend",
            "b01688e7ad36a91ac8be870db0f5d7c9b9d9cc56"
        ],
        [
            "intros EQ.",
            "VernacExtend",
            "55ec42483a4ca0813a68f464f2703cf9ccb237d7"
        ],
        [
            "exploit (Z_mod_lt (unsigned y) zwordsize).",
            "VernacExtend",
            "38fa592daeb0f6d2098ac945a66443708508c30a"
        ],
        [
            "apply wordsize_pos.",
            "VernacExtend",
            "3cdd00bd38b50c8ad9d29d70090aa8df30337a33"
        ],
        [
            "fold j.",
            "VernacExtend",
            "3b9f44fe3ca7e47ca3bc3dec14f5c8ee66f1808a"
        ],
        [
            "intros RANGE.",
            "VernacExtend",
            "9de95a71cc29edba5b897291bfb834bd347e8a47"
        ],
        [
            "rewrite testbit_repr; auto.",
            "VernacExtend",
            "d20143ed773e39c9c2d38dc1a41b649eadbc95c6"
        ],
        [
            "rewrite Z.lor_spec.",
            "VernacExtend",
            "75a6643c937d8dc0641f7afdbd97c3ffc0537068"
        ],
        [
            "rewrite Z.shiftr_spec.",
            "VernacExtend",
            "80c165d6ba099c7565e4b5045695449745807abf"
        ],
        [
            "2: omega.",
            "VernacExtend",
            "d479151185a43f07b17d29025d6b6de4845088dc"
        ],
        [
            "destruct (zlt i j).",
            "VernacExtend",
            "e893076fe290fe374ca92e55252886896dec3463"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Z.shiftl_spec_low; auto.",
            "VernacExtend",
            "31cd7e5c0f207414a1deddee17f701e7a5f53d74"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold testbit.",
            "VernacExtend",
            "14f68f27aaaec42f64d3a8f3009fc6eaa35592a6"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Zmod_unique with (-k - 1).",
            "VernacExtend",
            "634f5f52977f47df8e3be1c9ec8e5b2875e934fd"
        ],
        [
            "rewrite EQ.",
            "VernacExtend",
            "359c5e196f83a6afbd9ede635bddbf545fd1eb82"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Z.shiftl_spec_high.",
            "VernacExtend",
            "d2ac89502b0dd72f8f60921d1436459aff03a87a"
        ],
        [
            "fold (testbit x (i + (zwordsize - j))).",
            "VernacExtend",
            "fde5140d444664f74b77270b57698e292823ec48"
        ],
        [
            "rewrite bits_above.",
            "VernacExtend",
            "03e9b48636da98aadfef128985f39171a63a4d68"
        ],
        [
            "rewrite orb_false_r.",
            "VernacExtend",
            "1f347086f7a141d5c22c1549eee172fd8a72e833"
        ],
        [
            "fold (testbit x (i - j)).",
            "VernacExtend",
            "9d0a05fae1a750ce525671425e3eaadac1352f05"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Zmod_unique with (-k).",
            "VernacExtend",
            "f85d2400dce6ecdf3317216fb24250f0433c1de6"
        ],
        [
            "rewrite EQ.",
            "VernacExtend",
            "359c5e196f83a6afbd9ede635bddbf545fd1eb82"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bits_ror: forall x y i, 0 <= i < zwordsize -> testbit (ror x y) i = testbit x ((i + unsigned y) mod zwordsize).",
            "VernacStartTheoremProof",
            "97e930b5aae63b3cbbc3b297b657cfcdde02c841"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold ror.",
            "VernacExtend",
            "dce1ea2995299e225c6998026c8e8db8d37d6d0e"
        ],
        [
            "exploit (Z_div_mod_eq (unsigned y) zwordsize).",
            "VernacExtend",
            "d0025da865cc9f60e6e4a7ca491d162acf7d4733"
        ],
        [
            "apply wordsize_pos.",
            "VernacExtend",
            "3cdd00bd38b50c8ad9d29d70090aa8df30337a33"
        ],
        [
            "set (j := unsigned y mod zwordsize).",
            "VernacExtend",
            "f802a7f3185b7d0dee2f506a52aaab34af4d9053"
        ],
        [
            "set (k := unsigned y / zwordsize).",
            "VernacExtend",
            "b01688e7ad36a91ac8be870db0f5d7c9b9d9cc56"
        ],
        [
            "intros EQ.",
            "VernacExtend",
            "55ec42483a4ca0813a68f464f2703cf9ccb237d7"
        ],
        [
            "exploit (Z_mod_lt (unsigned y) zwordsize).",
            "VernacExtend",
            "38fa592daeb0f6d2098ac945a66443708508c30a"
        ],
        [
            "apply wordsize_pos.",
            "VernacExtend",
            "3cdd00bd38b50c8ad9d29d70090aa8df30337a33"
        ],
        [
            "fold j.",
            "VernacExtend",
            "3b9f44fe3ca7e47ca3bc3dec14f5c8ee66f1808a"
        ],
        [
            "intros RANGE.",
            "VernacExtend",
            "9de95a71cc29edba5b897291bfb834bd347e8a47"
        ],
        [
            "rewrite testbit_repr; auto.",
            "VernacExtend",
            "d20143ed773e39c9c2d38dc1a41b649eadbc95c6"
        ],
        [
            "rewrite Z.lor_spec.",
            "VernacExtend",
            "75a6643c937d8dc0641f7afdbd97c3ffc0537068"
        ],
        [
            "rewrite Z.shiftr_spec.",
            "VernacExtend",
            "80c165d6ba099c7565e4b5045695449745807abf"
        ],
        [
            "2: omega.",
            "VernacExtend",
            "d479151185a43f07b17d29025d6b6de4845088dc"
        ],
        [
            "destruct (zlt (i + j) zwordsize).",
            "VernacExtend",
            "59dfa916a17854ac92c87a946d28fb8f00f372dc"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Z.shiftl_spec_low; auto.",
            "VernacExtend",
            "31cd7e5c0f207414a1deddee17f701e7a5f53d74"
        ],
        [
            "rewrite orb_false_r.",
            "VernacExtend",
            "1f347086f7a141d5c22c1549eee172fd8a72e833"
        ],
        [
            "unfold testbit.",
            "VernacExtend",
            "14f68f27aaaec42f64d3a8f3009fc6eaa35592a6"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Zmod_unique with k.",
            "VernacExtend",
            "f9fbc26dc89759237ec56579aa36b5d8c557772a"
        ],
        [
            "rewrite EQ.",
            "VernacExtend",
            "359c5e196f83a6afbd9ede635bddbf545fd1eb82"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Z.shiftl_spec_high.",
            "VernacExtend",
            "d2ac89502b0dd72f8f60921d1436459aff03a87a"
        ],
        [
            "fold (testbit x (i + j)).",
            "VernacExtend",
            "d03faa01a945f58fb0419ce324b163d1578e3991"
        ],
        [
            "rewrite bits_above.",
            "VernacExtend",
            "03e9b48636da98aadfef128985f39171a63a4d68"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold testbit.",
            "VernacExtend",
            "14f68f27aaaec42f64d3a8f3009fc6eaa35592a6"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Zmod_unique with (k + 1).",
            "VernacExtend",
            "1c933d8180e839c363545d384e2a5c228e567eda"
        ],
        [
            "rewrite EQ.",
            "VernacExtend",
            "359c5e196f83a6afbd9ede635bddbf545fd1eb82"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite bits_rol bits_ror: ints.",
            "VernacExtend",
            "4dda943aaeeedf159deafad665df0fd38946350e"
        ],
        [
            "Theorem shl_rolm: forall x n, ltu n iwordsize = true -> shl x n = rolm x n (shl mone n).",
            "VernacStartTheoremProof",
            "020412d2fbb6e5ba7c0f70932c0730d371174675"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (ltu_inv _ _ H).",
            "VernacExtend",
            "7b58a295ab1791d1e4a443703f076aec968a783c"
        ],
        [
            "rewrite unsigned_repr_wordsize; intros.",
            "VernacExtend",
            "63ceff6946be78ac54a2ccaa15636254eb1b914d"
        ],
        [
            "unfold rolm.",
            "VernacExtend",
            "14eec38d3d18613e2564fccd9e38bfe653630dc5"
        ],
        [
            "apply same_bits_eq; intros.",
            "VernacExtend",
            "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
        ],
        [
            "rewrite bits_and; auto.",
            "VernacExtend",
            "ebb7cb503b8fdcd326d9062c755d67707c1d2e79"
        ],
        [
            "rewrite !bits_shl; auto.",
            "VernacExtend",
            "2451fc6228943a073a46233a3a7d04d4a305320d"
        ],
        [
            "rewrite bits_rol; auto.",
            "VernacExtend",
            "a761e8903abbd476678659101b981eb11a60acac"
        ],
        [
            "destruct (zlt i (unsigned n)).",
            "VernacExtend",
            "1537577fe05b4da7a891e35ff7a8c5be65e5cc7b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite andb_false_r; auto.",
            "VernacExtend",
            "0597380d3b8c5004f944d81b561ad8146e321614"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "generalize (unsigned_range n); intros.",
            "VernacExtend",
            "41156d8d04a6b3912e820f99d34a420137a264d3"
        ],
        [
            "rewrite bits_mone.",
            "VernacExtend",
            "6ea2d675b787ca145f8429763e80f04fcc6043ef"
        ],
        [
            "rewrite andb_true_r.",
            "VernacExtend",
            "230918acbe37788580429f7b57db0df199d9fbfd"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Zmod_small.",
            "VernacExtend",
            "439f7572e12963e1685c905bb39e49700a5d1e32"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem shru_rolm: forall x n, ltu n iwordsize = true -> shru x n = rolm x (sub iwordsize n) (shru mone n).",
            "VernacStartTheoremProof",
            "39e3845c3fd9648d8d3cc61feb859e22504a7150"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (ltu_inv _ _ H).",
            "VernacExtend",
            "7b58a295ab1791d1e4a443703f076aec968a783c"
        ],
        [
            "rewrite unsigned_repr_wordsize; intros.",
            "VernacExtend",
            "63ceff6946be78ac54a2ccaa15636254eb1b914d"
        ],
        [
            "unfold rolm.",
            "VernacExtend",
            "14eec38d3d18613e2564fccd9e38bfe653630dc5"
        ],
        [
            "apply same_bits_eq; intros.",
            "VernacExtend",
            "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
        ],
        [
            "rewrite bits_and; auto.",
            "VernacExtend",
            "ebb7cb503b8fdcd326d9062c755d67707c1d2e79"
        ],
        [
            "rewrite !bits_shru; auto.",
            "VernacExtend",
            "0bf1d6a080c06fd32b82ec620db4e1a68e5495d1"
        ],
        [
            "rewrite bits_rol; auto.",
            "VernacExtend",
            "a761e8903abbd476678659101b981eb11a60acac"
        ],
        [
            "destruct (zlt (i + unsigned n) zwordsize).",
            "VernacExtend",
            "657a8c30a7dadb4652dc432a6563bfddcb185e7d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "generalize (unsigned_range n); intros.",
            "VernacExtend",
            "41156d8d04a6b3912e820f99d34a420137a264d3"
        ],
        [
            "rewrite bits_mone.",
            "VernacExtend",
            "6ea2d675b787ca145f8429763e80f04fcc6043ef"
        ],
        [
            "rewrite andb_true_r.",
            "VernacExtend",
            "230918acbe37788580429f7b57db0df199d9fbfd"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "unfold sub.",
            "VernacExtend",
            "09a336a2b822859bc335120602ae265ad23b7a0d"
        ],
        [
            "rewrite unsigned_repr.",
            "VernacExtend",
            "5134990e153a3f2ce893c9ea9837f183c322ceb2"
        ],
        [
            "rewrite unsigned_repr_wordsize.",
            "VernacExtend",
            "68bf2f65418d45548a5d1a5f941d2ad54148206b"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Zmod_unique with (-1).",
            "VernacExtend",
            "9fbfa02026507947911435325d2aedbb9d4084b4"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite unsigned_repr_wordsize.",
            "VernacExtend",
            "68bf2f65418d45548a5d1a5f941d2ad54148206b"
        ],
        [
            "generalize wordsize_max_unsigned.",
            "VernacExtend",
            "818588ddd7da527827745e853d3040136c0e060b"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite andb_false_r; auto.",
            "VernacExtend",
            "0597380d3b8c5004f944d81b561ad8146e321614"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem rol_zero: forall x, rol x zero = x.",
            "VernacStartTheoremProof",
            "d6b83df7c98c685ca33592c9370ded051412520a"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite unsigned_zero.",
            "VernacExtend",
            "89956b9f461b9934c8fa99e6e63074f0275efcae"
        ],
        [
            "rewrite Z.sub_0_r.",
            "VernacExtend",
            "7c1ebdca8a3d1d773bf152b4a568fe42ea3a288b"
        ],
        [
            "apply Zmod_small; auto.",
            "VernacExtend",
            "3c5f5fc03f3d275d13e04469433962442134d5ce"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bitwise_binop_rol: forall f f' x y n, (forall x y i, 0 <= i < zwordsize -> testbit (f x y) i = f' (testbit x i) (testbit y i)) -> rol (f x y) n = f (rol x n) (rol y n).",
            "VernacStartTheoremProof",
            "81f676055139e70ad705f416391cd06f8515b498"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply same_bits_eq; intros.",
            "VernacExtend",
            "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
        ],
        [
            "rewrite H; auto.",
            "VernacExtend",
            "3e25713af8eaa76cddf9287af10d66733da2ee16"
        ],
        [
            "rewrite !bits_rol; auto.",
            "VernacExtend",
            "452ac2a694d255e914efc267cc205fc086f6c5dd"
        ],
        [
            "rewrite H; auto.",
            "VernacExtend",
            "3e25713af8eaa76cddf9287af10d66733da2ee16"
        ],
        [
            "apply Z_mod_lt.",
            "VernacExtend",
            "d33d3cab9911c0f11554b4e753af00e7b5fcc4ca"
        ],
        [
            "apply wordsize_pos.",
            "VernacExtend",
            "3cdd00bd38b50c8ad9d29d70090aa8df30337a33"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem rol_and: forall x y n, rol (and x y) n = and (rol x n) (rol y n).",
            "VernacStartTheoremProof",
            "9cfd4b1bf192a78fd406c17b8a2f5127ef55af70"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply bitwise_binop_rol with andb.",
            "VernacExtend",
            "33cdc947828f9cd1f8fab6bca043353617b4f8b5"
        ],
        [
            "exact bits_and.",
            "VernacExtend",
            "207bfd0e3a5029422d3eb0c47e1a67f65bd16588"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem rol_or: forall x y n, rol (or x y) n = or (rol x n) (rol y n).",
            "VernacStartTheoremProof",
            "97cebfa8b38eacdbd3bc6a8d6a10d708534b5996"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply bitwise_binop_rol with orb.",
            "VernacExtend",
            "a54fbf9118d329c93d6df1a3a2a63ce3cedb59e7"
        ],
        [
            "exact bits_or.",
            "VernacExtend",
            "62259bfc6df42cd2df27ebf4ca0f7c291f977bdb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem rol_xor: forall x y n, rol (xor x y) n = xor (rol x n) (rol y n).",
            "VernacStartTheoremProof",
            "576340e1151b6c3db2c78022416d0bf968dfcb9e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply bitwise_binop_rol with xorb.",
            "VernacExtend",
            "a649251db61403458d4c051692944ade7d92f953"
        ],
        [
            "exact bits_xor.",
            "VernacExtend",
            "eb517663224a45ead53e886c70aa04ae25aadecc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem rol_rol: forall x n m, Z.divide zwordsize modulus -> rol (rol x n) m = rol x (modu (add n m) iwordsize).",
            "VernacStartTheoremProof",
            "14e82750eaa08d5f561093af47760cd384eba1c6"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply eqmod_mod_eq.",
            "VernacExtend",
            "e462c5f68727dc40165d24c024a428f990dc8959"
        ],
        [
            "apply wordsize_pos.",
            "VernacExtend",
            "3cdd00bd38b50c8ad9d29d70090aa8df30337a33"
        ],
        [
            "set (M := unsigned m); set (N := unsigned n).",
            "VernacExtend",
            "efcd787296099b6acdbca2d02fd4d56e58b8a298"
        ],
        [
            "apply eqmod_trans with (i - M - N).",
            "VernacExtend",
            "b2f15cc150b4d44ee57b6d967cc84cacfcdf750a"
        ],
        [
            "apply eqmod_sub.",
            "VernacExtend",
            "c9dc99d4bbc6cea99f146d1993e5dcb92eaf027c"
        ],
        [
            "apply eqmod_sym.",
            "VernacExtend",
            "902d0b5a0351b9e5d185513882fb9db7c28921db"
        ],
        [
            "apply eqmod_mod.",
            "VernacExtend",
            "1729dd014b983334b1b539b611f2322ed5a7d321"
        ],
        [
            "apply wordsize_pos.",
            "VernacExtend",
            "3cdd00bd38b50c8ad9d29d70090aa8df30337a33"
        ],
        [
            "apply eqmod_refl.",
            "VernacExtend",
            "dd13026dc2e4aa9828d8fe4d8ad9645368260127"
        ],
        [
            "replace (i - M - N) with (i - (M + N)) by omega.",
            "VernacExtend",
            "71067d74e5172b7a9ebe3006d579141eb2e19032"
        ],
        [
            "apply eqmod_sub.",
            "VernacExtend",
            "c9dc99d4bbc6cea99f146d1993e5dcb92eaf027c"
        ],
        [
            "apply eqmod_refl.",
            "VernacExtend",
            "dd13026dc2e4aa9828d8fe4d8ad9645368260127"
        ],
        [
            "apply eqmod_trans with (Z.modulo (unsigned n + unsigned m) zwordsize).",
            "VernacExtend",
            "e190a8af9dfe2809f890066957b5e45ec5db3726"
        ],
        [
            "replace (M + N) with (N + M) by omega.",
            "VernacExtend",
            "2380a6ab9d0aa32e6601a519f6fe1c62b054ad35"
        ],
        [
            "apply eqmod_mod.",
            "VernacExtend",
            "1729dd014b983334b1b539b611f2322ed5a7d321"
        ],
        [
            "apply wordsize_pos.",
            "VernacExtend",
            "3cdd00bd38b50c8ad9d29d70090aa8df30337a33"
        ],
        [
            "unfold modu, add.",
            "VernacExtend",
            "39a0f01f7b90f281285c4f205823aaabc91edbd7"
        ],
        [
            "fold M; fold N.",
            "VernacExtend",
            "e77c0f7c5b3ad593398caaa66198fe7e2e0d6b40"
        ],
        [
            "rewrite unsigned_repr_wordsize.",
            "VernacExtend",
            "68bf2f65418d45548a5d1a5f941d2ad54148206b"
        ],
        [
            "assert (forall a, eqmod zwordsize a (unsigned (repr a))).",
            "VernacExtend",
            "e1faf98f0f5b2c91ae4ae16eb4fea8d5144f21ab"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply eqmod_divides.",
            "VernacExtend",
            "91305a0fbd7f40bdbbd9d1436ff706e26c882935"
        ],
        [
            "apply eqm_unsigned_repr.",
            "VernacExtend",
            "8083262b54f87caceff266da1e7020054aa5a39f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply eqmod_trans.",
            "VernacExtend",
            "873aa463fa1610d45637e3ebd547a25e5e7cb9d7"
        ],
        [
            "2: apply H1.",
            "VernacExtend",
            "d18188d8e2990d57fcbebf2544560d72952a1c9f"
        ],
        [
            "apply eqmod_refl2.",
            "VernacExtend",
            "6526d3d5541dbea224534fae25462f7818e89a7a"
        ],
        [
            "apply eqmod_mod_eq.",
            "VernacExtend",
            "e462c5f68727dc40165d24c024a428f990dc8959"
        ],
        [
            "apply wordsize_pos.",
            "VernacExtend",
            "3cdd00bd38b50c8ad9d29d70090aa8df30337a33"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply Z_mod_lt.",
            "VernacExtend",
            "d33d3cab9911c0f11554b4e753af00e7b5fcc4ca"
        ],
        [
            "apply wordsize_pos.",
            "VernacExtend",
            "3cdd00bd38b50c8ad9d29d70090aa8df30337a33"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem rolm_zero: forall x m, rolm x zero m = and x m.",
            "VernacStartTheoremProof",
            "39522a82370bb82279ae406da00323248bb5b70c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold rolm.",
            "VernacExtend",
            "14eec38d3d18613e2564fccd9e38bfe653630dc5"
        ],
        [
            "rewrite rol_zero.",
            "VernacExtend",
            "08f68666c0eabcde9d23515a74a2be03e1f4b104"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem rolm_rolm: forall x n1 m1 n2 m2, Z.divide zwordsize modulus -> rolm (rolm x n1 m1) n2 m2 = rolm x (modu (add n1 n2) iwordsize) (and (rol m1 n2) m2).",
            "VernacStartTheoremProof",
            "32f21b96c8b0101d8106385c39bb01d3fd09345f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold rolm.",
            "VernacExtend",
            "14eec38d3d18613e2564fccd9e38bfe653630dc5"
        ],
        [
            "rewrite rol_and.",
            "VernacExtend",
            "456aa1378769ef0d81d1c85565e8835167ac3b1d"
        ],
        [
            "rewrite and_assoc.",
            "VernacExtend",
            "62a08aa2ddd81c637f08d9fda9e004ce7b188a4b"
        ],
        [
            "rewrite rol_rol.",
            "VernacExtend",
            "c879c63ba528b87d0275f1dbd4669ad743a3b540"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem or_rolm: forall x n m1 m2, or (rolm x n m1) (rolm x n m2) = rolm x n (or m1 m2).",
            "VernacStartTheoremProof",
            "69d0f3556989b46edaa473f02ef3b7846b4d68cd"
        ],
        [
            "intros; unfold rolm.",
            "VernacExtend",
            "8c80d42f88e4657b0f14f4cf2487430e2e4e1d3d"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply and_or_distrib.",
            "VernacExtend",
            "a16f36925b69c1ff884fb045883ccfeca5d255fe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ror_rol: forall x y, ltu y iwordsize = true -> ror x y = rol x (sub iwordsize y).",
            "VernacStartTheoremProof",
            "3b921e41398e1c4837b27eceaf9369774b74a0cd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (ltu_iwordsize_inv _ H); intros.",
            "VernacExtend",
            "76fa1f5fd16204711110758b968337f72da7aff1"
        ],
        [
            "apply same_bits_eq; intros.",
            "VernacExtend",
            "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
        ],
        [
            "rewrite bits_ror; auto.",
            "VernacExtend",
            "71e844ecd5b30eb1cebe392bbe47926b884898a2"
        ],
        [
            "rewrite bits_rol; auto.",
            "VernacExtend",
            "a761e8903abbd476678659101b981eb11a60acac"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "unfold sub.",
            "VernacExtend",
            "09a336a2b822859bc335120602ae265ad23b7a0d"
        ],
        [
            "rewrite unsigned_repr.",
            "VernacExtend",
            "5134990e153a3f2ce893c9ea9837f183c322ceb2"
        ],
        [
            "rewrite unsigned_repr_wordsize.",
            "VernacExtend",
            "68bf2f65418d45548a5d1a5f941d2ad54148206b"
        ],
        [
            "apply eqmod_mod_eq.",
            "VernacExtend",
            "e462c5f68727dc40165d24c024a428f990dc8959"
        ],
        [
            "apply wordsize_pos.",
            "VernacExtend",
            "3cdd00bd38b50c8ad9d29d70090aa8df30337a33"
        ],
        [
            "exists 1.",
            "VernacExtend",
            "18eb310858be5acae7304d0d9ed33063568db310"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "rewrite unsigned_repr_wordsize.",
            "VernacExtend",
            "68bf2f65418d45548a5d1a5f941d2ad54148206b"
        ],
        [
            "generalize wordsize_pos; generalize wordsize_max_unsigned; omega.",
            "VernacExtend",
            "34783cfdaa823729861a9f4165eabcf36064c5a2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ror_rol_neg: forall x y, (zwordsize | modulus) -> ror x y = rol x (neg y).",
            "VernacStartTheoremProof",
            "b3f6236c459c991bf0171f604a4a5e9b5bba6b73"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply same_bits_eq; intros.",
            "VernacExtend",
            "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
        ],
        [
            "rewrite bits_ror by auto.",
            "VernacExtend",
            "011e960a01745ea27c7e83832b1dc93ed6d07eaa"
        ],
        [
            "rewrite bits_rol by auto.",
            "VernacExtend",
            "bc878f4b1abaa5697e69a03054f5b1fece7c0eb6"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply eqmod_mod_eq.",
            "VernacExtend",
            "e462c5f68727dc40165d24c024a428f990dc8959"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply eqmod_trans with (i - (- unsigned y)).",
            "VernacExtend",
            "f727a3d304a3700eb67c1d18c270619c390b08c1"
        ],
        [
            "apply eqmod_refl2; omega.",
            "VernacExtend",
            "20a23e02315db61bf8a0c1d8bab6dc09591ee695"
        ],
        [
            "apply eqmod_sub.",
            "VernacExtend",
            "c9dc99d4bbc6cea99f146d1993e5dcb92eaf027c"
        ],
        [
            "apply eqmod_refl.",
            "VernacExtend",
            "dd13026dc2e4aa9828d8fe4d8ad9645368260127"
        ],
        [
            "apply eqmod_divides with modulus.",
            "VernacExtend",
            "992fca5cd20238ecb17c8ce75482099da8475a25"
        ],
        [
            "apply eqm_unsigned_repr.",
            "VernacExtend",
            "8083262b54f87caceff266da1e7020054aa5a39f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem or_ror: forall x y z, ltu y iwordsize = true -> ltu z iwordsize = true -> add y z = iwordsize -> ror x z = or (shl x y) (shru x z).",
            "VernacStartTheoremProof",
            "d8e9f65fa56c1fa041daa0b224e8f6b460d02502"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (ltu_iwordsize_inv _ H) (ltu_iwordsize_inv _ H0); intros.",
            "VernacExtend",
            "addc275edaa6d82f262a39539f4be82df5a8b3ba"
        ],
        [
            "unfold ror, or, shl, shru.",
            "VernacExtend",
            "953c7ef9d275e1d2fa7b8ac98bd306f7d7b22302"
        ],
        [
            "apply same_bits_eq; intros.",
            "VernacExtend",
            "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
        ],
        [
            "rewrite !testbit_repr; auto.",
            "VernacExtend",
            "ed03c006a62cc982ce1a4504966398fdfcfdcbc0"
        ],
        [
            "rewrite !Z.lor_spec.",
            "VernacExtend",
            "f36a909dee3fe5f43f9712ef5600eee9e9289132"
        ],
        [
            "rewrite orb_comm.",
            "VernacExtend",
            "d19a1a861dc82473715be9ccb56b9a66a0d4d2e1"
        ],
        [
            "f_equal; apply same_bits_eqm; auto.",
            "VernacExtend",
            "49e19fa1763fedc60741a9411f739bbaadb5d18e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply eqm_unsigned_repr_r.",
            "VernacExtend",
            "0911e24b4d5bf4d1fa1c42c2b6b4303c14b2d0db"
        ],
        [
            "apply eqm_refl2.",
            "VernacExtend",
            "4f34bea58d6e093ed169579de033c7f5d73e929b"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite Zmod_small; auto.",
            "VernacExtend",
            "2ff134b70790bb2d3bd287a0e9a50193522c92e0"
        ],
        [
            "assert (unsigned (add y z) = zwordsize).",
            "VernacExtend",
            "996d9a9fd95e6ff6e4c6a9e1a7f41b104358b8d8"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "apply unsigned_repr_wordsize.",
            "VernacExtend",
            "819e2710964f72c395c00613c3bde4f8bd718670"
        ],
        [
            "unfold add in H5.",
            "VernacExtend",
            "723afd40364bd30ce720289877a1f85d1415562c"
        ],
        [
            "rewrite unsigned_repr in H5.",
            "VernacExtend",
            "8a776a60ecea9298d88d1bb19efaa4bde364b5b3"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "generalize two_wordsize_max_unsigned; omega.",
            "VernacExtend",
            "1867487a3ccf1d446bc1323a988de67b70f3fb3a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply eqm_unsigned_repr_r.",
            "VernacExtend",
            "0911e24b4d5bf4d1fa1c42c2b6b4303c14b2d0db"
        ],
        [
            "apply eqm_refl2.",
            "VernacExtend",
            "4f34bea58d6e093ed169579de033c7f5d73e929b"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply Zmod_small; auto.",
            "VernacExtend",
            "3c5f5fc03f3d275d13e04469433962442134d5ce"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint powerserie (l: list Z): Z := match l with | nil => 0 | x :: xs => two_p x + powerserie xs end.",
            "VernacFixpoint",
            "91d083994fd7eb025e7100f96409e8e21f58b331"
        ],
        [
            "Lemma Z_one_bits_powerserie: forall x, 0 <= x < modulus -> x = powerserie (Z_one_bits wordsize x 0).",
            "VernacStartTheoremProof",
            "35080328ade0d473749130151a02adedf5ab42bf"
        ],
        [
            "assert (forall n x i, 0 <= i -> 0 <= x < two_power_nat n -> x * two_p i = powerserie (Z_one_bits n x i)).",
            "VernacExtend",
            "010856f6be711ea9c5cef772ba4fa6837d28e488"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "induction n; intros.",
            "VernacExtend",
            "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite two_power_nat_O in H0.",
            "VernacExtend",
            "d49f052eaec281cb1122416dfae36089666b456f"
        ],
        [
            "assert (x = 0) by omega.",
            "VernacExtend",
            "b03ee24a9e6832b38390d1f51d87d6b9f5b86329"
        ],
        [
            "subst x.",
            "VernacExtend",
            "76c28b0a6a4a7c1568fa30e26ee411c5e5d54968"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite two_power_nat_S in H0.",
            "VernacExtend",
            "be49cd5edc297f489fed5009701a564caad56263"
        ],
        [
            "simpl Z_one_bits.",
            "VernacExtend",
            "a948623b2202a9290ad5333f3d5788c7dc309141"
        ],
        [
            "rewrite (Zdecomp x) in H0.",
            "VernacExtend",
            "12d4644a0d9cbae6b6001aba9b6d2cecfaa986f0"
        ],
        [
            "rewrite Zshiftin_spec in H0.",
            "VernacExtend",
            "41e3092ca3eeedfe042fa4ae98f3cc1bc1615f1f"
        ],
        [
            "assert (EQ: Z.div2 x * two_p (i + 1) = powerserie (Z_one_bits n (Z.div2 x) (i + 1))).",
            "VernacExtend",
            "db3f3335cc41475c4d0d182e5200be13cc97446e"
        ],
        [
            "apply IHn.",
            "VernacExtend",
            "1c9414f4f052b2727ca012553a4a3a2a0fc85649"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "destruct (Z.odd x); omega.",
            "VernacExtend",
            "0fabeef20b10371355ec660c030b7b196fbf9659"
        ],
        [
            "rewrite two_p_is_exp in EQ.",
            "VernacExtend",
            "ad7aa59448d6f1f588e60c831ec0f1777a1a4a7d"
        ],
        [
            "change (two_p 1) with 2 in EQ.",
            "VernacExtend",
            "d5218c74bb18c8c5a62a458110b7bb244f101da7"
        ],
        [
            "rewrite (Zdecomp x) at 1.",
            "VernacExtend",
            "32c4e2329c7c883af7bbd3331c351c95956ae68c"
        ],
        [
            "rewrite Zshiftin_spec.",
            "VernacExtend",
            "d6761270d320e65edf1ff35092908241b44e627f"
        ],
        [
            "destruct (Z.odd x); simpl powerserie; rewrite <- EQ; ring.",
            "VernacExtend",
            "c7640f9459cd4c230d4e4aefefcfddec162f03da"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "change (two_p 0) with 1.",
            "VernacExtend",
            "e319d482d7714e1df6d2534de3913d2db24e3e04"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "exact H0.",
            "VernacExtend",
            "3920fece303e3c4728f9cdc71daff99239237dbd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Z_one_bits_range: forall x i, In i (Z_one_bits wordsize x 0) -> 0 <= i < zwordsize.",
            "VernacStartTheoremProof",
            "86b51614e8fc2e6c5029cc155a27cab3d1c26988"
        ],
        [
            "assert (forall n x i j, In j (Z_one_bits n x i) -> i <= j < i + Z.of_nat n).",
            "VernacExtend",
            "7d167b6ef61611340a859b0007a8afd552b7791d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "induction n; simpl In.",
            "VernacExtend",
            "74bd597b89b1182bcdcde7eb65c924654ade5d35"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "intros x i j.",
            "VernacExtend",
            "7715789984adce9e83546497142385d8ba19fb61"
        ],
        [
            "rewrite Nat2Z.inj_succ.",
            "VernacExtend",
            "1fc791f52357dc9e0a22fac0a6d82e87969a1699"
        ],
        [
            "assert (In j (Z_one_bits n (Z.div2 x) (i + 1)) -> i <= j < i + Z.succ (Z.of_nat n)).",
            "VernacExtend",
            "908adec1c90df5dc51ca6e3b8f8c161ae661bfcd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exploit IHn; eauto.",
            "VernacExtend",
            "ba0e68eadd07b401a5d24f6ba00f000aeeb7eee3"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "destruct (Z.odd x); simpl.",
            "VernacExtend",
            "c84365e2e579ff255deb68c1a2dac34f0a284997"
        ],
        [
            "intros [A|B].",
            "VernacExtend",
            "782833abaf6ecb36fd2585722846c4137f0bcf98"
        ],
        [
            "subst j.",
            "VernacExtend",
            "4959fd5cfffa27452c2d688b999587736fe34624"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (H wordsize x 0 i H0).",
            "VernacExtend",
            "af0d77a7befdc9df8b22039988ca7033635ad470"
        ],
        [
            "fold zwordsize; omega.",
            "VernacExtend",
            "276db1c5a2eccb6894b85518f5686dbd11c06ce3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_power2_rng: forall n logn, is_power2 n = Some logn -> 0 <= unsigned logn < zwordsize.",
            "VernacStartTheoremProof",
            "57fb57c9b215da3138fefc2f5b7d2306957a3f15"
        ],
        [
            "intros n logn.",
            "VernacExtend",
            "772f01abf630a3d9b8f3fc0ac566debb9415586c"
        ],
        [
            "unfold is_power2.",
            "VernacExtend",
            "0e7f1b3e516242c117c1a65d64263574d1ea5460"
        ],
        [
            "generalize (Z_one_bits_range (unsigned n)).",
            "VernacExtend",
            "269aef496556ec040d9e23971db998e73598d642"
        ],
        [
            "destruct (Z_one_bits wordsize (unsigned n) 0).",
            "VernacExtend",
            "8dd28fb5174799c3981dd5be8a41de661f22a383"
        ],
        [
            "intros; discriminate.",
            "VernacExtend",
            "1ec997c70ceedc981f8865c1573c00554b73dfd4"
        ],
        [
            "destruct l.",
            "VernacExtend",
            "a4218804e377a0d685aafec59adbc3652d543b9c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "injection H0; intro; subst logn; clear H0.",
            "VernacExtend",
            "cf16537db6ce26efadf065ada6fd16853625d1a9"
        ],
        [
            "assert (0 <= z < zwordsize).",
            "VernacExtend",
            "7b32f4ac012c3b1feeef8490f198a1dbf12ff53d"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "auto with coqlib.",
            "VernacExtend",
            "bf4be239b4d8868fa0ff9785d68d66d28f74c632"
        ],
        [
            "rewrite unsigned_repr.",
            "VernacExtend",
            "5134990e153a3f2ce893c9ea9837f183c322ceb2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "generalize wordsize_max_unsigned; omega.",
            "VernacExtend",
            "3f1b96d7bb5d8b56488da98617ce0a4bf6d89d59"
        ],
        [
            "intros; discriminate.",
            "VernacExtend",
            "1ec997c70ceedc981f8865c1573c00554b73dfd4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem is_power2_range: forall n logn, is_power2 n = Some logn -> ltu logn iwordsize = true.",
            "VernacStartTheoremProof",
            "122e6fcd3a0fc972d250250485696c6aa6ac651b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold ltu.",
            "VernacExtend",
            "e59e12052a96cc6c37e4e3abfd319dcb453c0f12"
        ],
        [
            "rewrite unsigned_repr_wordsize.",
            "VernacExtend",
            "68bf2f65418d45548a5d1a5f941d2ad54148206b"
        ],
        [
            "apply zlt_true.",
            "VernacExtend",
            "135d300e9c683e2995f4687be0904a8b2009f6fe"
        ],
        [
            "generalize (is_power2_rng _ _ H).",
            "VernacExtend",
            "f7dacbab210b98230a9cd81263adb250fcce50ec"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_power2_correct: forall n logn, is_power2 n = Some logn -> unsigned n = two_p (unsigned logn).",
            "VernacStartTheoremProof",
            "2dad83e58b0396130fadef96fad1e949246d309f"
        ],
        [
            "intros n logn.",
            "VernacExtend",
            "772f01abf630a3d9b8f3fc0ac566debb9415586c"
        ],
        [
            "unfold is_power2.",
            "VernacExtend",
            "0e7f1b3e516242c117c1a65d64263574d1ea5460"
        ],
        [
            "generalize (Z_one_bits_powerserie (unsigned n) (unsigned_range n)).",
            "VernacExtend",
            "e0b399b7b19653f4b139a71caf7cfaec75ccede2"
        ],
        [
            "generalize (Z_one_bits_range (unsigned n)).",
            "VernacExtend",
            "269aef496556ec040d9e23971db998e73598d642"
        ],
        [
            "destruct (Z_one_bits wordsize (unsigned n) 0).",
            "VernacExtend",
            "8dd28fb5174799c3981dd5be8a41de661f22a383"
        ],
        [
            "intros; discriminate.",
            "VernacExtend",
            "1ec997c70ceedc981f8865c1573c00554b73dfd4"
        ],
        [
            "destruct l.",
            "VernacExtend",
            "a4218804e377a0d685aafec59adbc3652d543b9c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "injection H1; intros; subst logn; clear H1.",
            "VernacExtend",
            "efaa41f660a970aa590378714ef3a55b50bb5776"
        ],
        [
            "rewrite unsigned_repr.",
            "VernacExtend",
            "5134990e153a3f2ce893c9ea9837f183c322ceb2"
        ],
        [
            "replace (two_p z) with (two_p z + 0).",
            "VernacExtend",
            "2430ccac23bf126ac88ae104e6c6a2be6221a89d"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "elim (H z); intros.",
            "VernacExtend",
            "cb22351ee412bd9acc14d0b9aefdd6b4e478d8f2"
        ],
        [
            "generalize wordsize_max_unsigned; omega.",
            "VernacExtend",
            "3f1b96d7bb5d8b56488da98617ce0a4bf6d89d59"
        ],
        [
            "auto with coqlib.",
            "VernacExtend",
            "bf4be239b4d8868fa0ff9785d68d66d28f74c632"
        ],
        [
            "intros; discriminate.",
            "VernacExtend",
            "1ec997c70ceedc981f8865c1573c00554b73dfd4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark two_p_range: forall n, 0 <= n < zwordsize -> 0 <= two_p n <= max_unsigned.",
            "VernacStartTheoremProof",
            "afe7a6ad66d6b241b33030d41cdc9fbdf8af502f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assert (two_p n > 0).",
            "VernacExtend",
            "a2cd8a99ed1874f39d77ad1b220687003b28892e"
        ],
        [
            "apply two_p_gt_ZERO.",
            "VernacExtend",
            "9690045ae69e536e22b7db6c37ee985732e7c4b7"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "generalize (two_p_monotone_strict _ _ H).",
            "VernacExtend",
            "ecc4be0c47a3d3cb8ba17ede93ef6beabd375349"
        ],
        [
            "unfold zwordsize; rewrite <- two_power_nat_two_p.",
            "VernacExtend",
            "ad016ae0ad00169325296f7a0fb4b3424563f762"
        ],
        [
            "unfold max_unsigned, modulus.",
            "VernacExtend",
            "a003fb64c08a2c31cd764776b3bb0fe050fd5579"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark Z_one_bits_zero: forall n i, Z_one_bits n 0 i = nil.",
            "VernacStartTheoremProof",
            "dc21d6960016a172fe81792766465dc92abf3210"
        ],
        [
            "induction n; intros; simpl; auto.",
            "VernacExtend",
            "64c1c9b4400229bea09b845c60061f9fa1846879"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark Z_one_bits_two_p: forall n x i, 0 <= x < Z.of_nat n -> Z_one_bits n (two_p x) i = (i + x) :: nil.",
            "VernacStartTheoremProof",
            "c2db1656b356203b87de62c9f46be9a353b0dd61"
        ],
        [
            "induction n; intros; simpl.",
            "VernacExtend",
            "f27a2774667ef3bddfddc5ec776ca116504c7463"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "omegaContradiction.",
            "VernacExtend",
            "329a0d87fada76e54a403fa49705e937670711cd"
        ],
        [
            "rewrite Nat2Z.inj_succ in H.",
            "VernacExtend",
            "aad252ba7eeff8ba6d219c16a99b9cd7a7466690"
        ],
        [
            "assert (x = 0 \\/ 0 < x) by omega.",
            "VernacExtend",
            "4e35219e6467f7fd2aa5204b5b6b47a2af55740b"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "subst x; simpl.",
            "VernacExtend",
            "2f8437b331365d30d508fbd8b1b0384ceae8a188"
        ],
        [
            "decEq.",
            "VernacExtend",
            "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply Z_one_bits_zero.",
            "VernacExtend",
            "a5adf7e666f254ff96fb45aa022f60329a4c58ba"
        ],
        [
            "assert (Z.odd (two_p x) = false /\\ Z.div2 (two_p x) = two_p (x-1)).",
            "VernacExtend",
            "6ccf95065a3f1f36156424c4ecc1b7f4d69d435b"
        ],
        [
            "apply Zshiftin_inj.",
            "VernacExtend",
            "7439da2fd27cabf86f784982ab0d0f438efb3bec"
        ],
        [
            "rewrite <- Zdecomp.",
            "VernacExtend",
            "6ac25ae7daa27732ec049cbcf377da2f7a4abe6f"
        ],
        [
            "rewrite !Zshiftin_spec.",
            "VernacExtend",
            "aa9d3dedf623bac9a8173e30b44355badd5e5367"
        ],
        [
            "rewrite <- two_p_S.",
            "VernacExtend",
            "8eb7240a71b2161fc95c2193e4ff099221db490e"
        ],
        [
            "rewrite Z.add_0_r.",
            "VernacExtend",
            "06ae07741c51588ad5058ce812450f10227d7b7a"
        ],
        [
            "f_equal; omega.",
            "VernacExtend",
            "3b812353131f9b9bebbd6410b3fa7c9d2e597ec3"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "destruct H1 as [A B]; rewrite A; rewrite B.",
            "VernacExtend",
            "d455cb2cfbc7e446df026435e2e5dac9c401a1ae"
        ],
        [
            "rewrite IHn.",
            "VernacExtend",
            "ec9472e508d0ba82a8f6be939d2e4d39f35c3667"
        ],
        [
            "f_equal; omega.",
            "VernacExtend",
            "3b812353131f9b9bebbd6410b3fa7c9d2e597ec3"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_power2_two_p: forall n, 0 <= n < zwordsize -> is_power2 (repr (two_p n)) = Some (repr n).",
            "VernacStartTheoremProof",
            "2742e34302557328c39d9a6c4244182a5d23e029"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold is_power2.",
            "VernacExtend",
            "0e7f1b3e516242c117c1a65d64263574d1ea5460"
        ],
        [
            "rewrite unsigned_repr.",
            "VernacExtend",
            "5134990e153a3f2ce893c9ea9837f183c322ceb2"
        ],
        [
            "rewrite Z_one_bits_two_p.",
            "VernacExtend",
            "abc1b86d5e765abedea36eb707264dffb54ae54a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply two_p_range.",
            "VernacExtend",
            "0249522f8d19db902735724734ad89949b2ef67c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zshiftl_mul_two_p: forall x n, 0 <= n -> Z.shiftl x n = x * two_p n.",
            "VernacStartTheoremProof",
            "25ed61dfb5d5c67f16bebbbb515c6e46908b4322"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct n; simpl.",
            "VernacExtend",
            "6554f156164019d92e1907ce49ab9159d733a0bb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "pattern p.",
            "VernacExtend",
            "caf1e84d2b8aac5a90ef71142712703a45201e3d"
        ],
        [
            "apply Pos.peano_ind.",
            "VernacExtend",
            "d19465b8ed98f4b88c06abe31275cd26191ce580"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "change (two_power_pos 1) with 2.",
            "VernacExtend",
            "fba97a86c97142398b108a639b6cb6ad7dcb22ef"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite Pos.iter_succ.",
            "VernacExtend",
            "a6c28db9a5d22c6001772e60494ce19a76039ae4"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "rewrite Pplus_one_succ_l.",
            "VernacExtend",
            "0b0c2b2508e7bbd54c8724e26e38d1e71e9e022f"
        ],
        [
            "rewrite two_power_pos_is_exp.",
            "VernacExtend",
            "53838041bee173a09a0a3738374b23a00419fd23"
        ],
        [
            "change (two_power_pos 1) with 2.",
            "VernacExtend",
            "fba97a86c97142398b108a639b6cb6ad7dcb22ef"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "compute in H.",
            "VernacExtend",
            "686103f70bd92c1e64ec2f78836e7444971cef09"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma shl_mul_two_p: forall x y, shl x y = mul x (repr (two_p (unsigned y))).",
            "VernacStartTheoremProof",
            "6baec9b07f00b84d0420bd6c962f562d91f2ebcc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold shl, mul.",
            "VernacExtend",
            "b53737c85e0b6b344a16439e19ba23f19505dc69"
        ],
        [
            "apply eqm_samerepr.",
            "VernacExtend",
            "2226a5674ed5a7db984e878fdbb37775ca665295"
        ],
        [
            "rewrite Zshiftl_mul_two_p.",
            "VernacExtend",
            "7fe5e587f7347ca6752e2a84434e39399219b1c6"
        ],
        [
            "auto with ints.",
            "VernacExtend",
            "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
        ],
        [
            "generalize (unsigned_range y); omega.",
            "VernacExtend",
            "42fda19b1742db2649f926c7d3bceaa4596993b0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem shl_mul: forall x y, shl x y = mul x (shl one y).",
            "VernacStartTheoremProof",
            "2cc82ddfbd49ca02c0299c96369b3b0405ba5e1b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (shl one y = repr (two_p (unsigned y))).",
            "VernacExtend",
            "617b8a468520b031e20f84706d76acac47b167b8"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite shl_mul_two_p.",
            "VernacExtend",
            "22cc3304a3a573fd3d033d2dafe6f62e99726c2b"
        ],
        [
            "rewrite mul_commut.",
            "VernacExtend",
            "7e479a6cc087b15b3e77ca62eef65a115285e229"
        ],
        [
            "rewrite mul_one.",
            "VernacExtend",
            "48e185ca99d9fb7850b9fee25eb6e9a16ab7f505"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "apply shl_mul_two_p.",
            "VernacExtend",
            "cb51b16d0cf4ad6353617169805898acd25c58a8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_pow2: forall x n logn, is_power2 n = Some logn -> mul x n = shl x logn.",
            "VernacStartTheoremProof",
            "90352458597ebbf6c3465d57db70f79df7dac9d3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (is_power2_correct n logn H); intro.",
            "VernacExtend",
            "289d2de04336f178e9ee11c380182368304f4793"
        ],
        [
            "rewrite shl_mul_two_p.",
            "VernacExtend",
            "22cc3304a3a573fd3d033d2dafe6f62e99726c2b"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "rewrite repr_unsigned.",
            "VernacExtend",
            "21d65804482992e66265036604c87ce7071df035"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem shifted_or_is_add: forall x y n, 0 <= n < zwordsize -> unsigned y < two_p n -> or (shl x (repr n)) y = repr(unsigned x * two_p n + unsigned y).",
            "VernacStartTheoremProof",
            "8cfa53925f7a654964ff08e97c042bfc921a377d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- add_is_or.",
            "VernacExtend",
            "485e24d811be7a0c82d4705d9712ef0fcecaeaf3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold add.",
            "VernacExtend",
            "11cf98bf231f22df486b46b3b6a1c38a94e859dd"
        ],
        [
            "apply eqm_samerepr.",
            "VernacExtend",
            "2226a5674ed5a7db984e878fdbb37775ca665295"
        ],
        [
            "apply eqm_add; auto with ints.",
            "VernacExtend",
            "af5726510e5682d3c82760011803c0892c36d2cc"
        ],
        [
            "rewrite shl_mul_two_p.",
            "VernacExtend",
            "22cc3304a3a573fd3d033d2dafe6f62e99726c2b"
        ],
        [
            "unfold mul.",
            "VernacExtend",
            "177e01106c95f433aa4fec630d226d724d6b851d"
        ],
        [
            "apply eqm_unsigned_repr_l.",
            "VernacExtend",
            "f8c0df5a7c25eea501480495633bd91f52c10673"
        ],
        [
            "apply eqm_mult; auto with ints.",
            "VernacExtend",
            "f9048979ffe21f789d37b97a35a74a9a377a30a1"
        ],
        [
            "apply eqm_unsigned_repr_l.",
            "VernacExtend",
            "f8c0df5a7c25eea501480495633bd91f52c10673"
        ],
        [
            "apply eqm_refl2.",
            "VernacExtend",
            "4f34bea58d6e093ed169579de033c7f5d73e929b"
        ],
        [
            "rewrite unsigned_repr.",
            "VernacExtend",
            "5134990e153a3f2ce893c9ea9837f183c322ceb2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "generalize wordsize_max_unsigned; omega.",
            "VernacExtend",
            "3f1b96d7bb5d8b56488da98617ce0a4bf6d89d59"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "rewrite unsigned_repr.",
            "VernacExtend",
            "5134990e153a3f2ce893c9ea9837f183c322ceb2"
        ],
        [
            "destruct (zlt i n).",
            "VernacExtend",
            "e95249794f6baef3de0ea4980efbabfd979ed1b4"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "replace (testbit y i) with false.",
            "VernacExtend",
            "ecf8d7b8380e325b347852e3f7c524b514260b11"
        ],
        [
            "apply andb_false_r.",
            "VernacExtend",
            "96acabd8a60f7c2e82c0ec27c34e893436485a16"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "unfold testbit.",
            "VernacExtend",
            "14f68f27aaaec42f64d3a8f3009fc6eaa35592a6"
        ],
        [
            "assert (EQ: Z.of_nat (Z.to_nat n) = n) by (apply Z2Nat.id; omega).",
            "VernacExtend",
            "dfb6d91a6a96812d812a8bb5970d0679c05aee9e"
        ],
        [
            "apply Ztestbit_above with (Z.to_nat n).",
            "VernacExtend",
            "d77f40940c0c2df15dd55572bebaecdbc1dab948"
        ],
        [
            "rewrite <- EQ in H0.",
            "VernacExtend",
            "a11551c7f8e5c168f855e6696253f6191ea50193"
        ],
        [
            "rewrite <- two_power_nat_two_p in H0.",
            "VernacExtend",
            "88e9d0c3ced8e3349526f33f78ce465c7930dba4"
        ],
        [
            "generalize (unsigned_range y); omega.",
            "VernacExtend",
            "42fda19b1742db2649f926c7d3bceaa4596993b0"
        ],
        [
            "rewrite EQ; auto.",
            "VernacExtend",
            "64d63d4ce372e7de310250555f999e4eb80d6fb2"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "generalize wordsize_max_unsigned; omega.",
            "VernacExtend",
            "3f1b96d7bb5d8b56488da98617ce0a4bf6d89d59"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zshiftr_div_two_p: forall x n, 0 <= n -> Z.shiftr x n = x / two_p n.",
            "VernacStartTheoremProof",
            "c262505f2faf0e8529ab88599b21adc6467357ed"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct n; unfold Z.shiftr; simpl.",
            "VernacExtend",
            "f524b83fabf41d5d49ea959f3858cd19f6ca772c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Zdiv_1_r.",
            "VernacExtend",
            "fb519c27d201f0568a21677dcf3ac2ffedb61d8b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "pattern p.",
            "VernacExtend",
            "caf1e84d2b8aac5a90ef71142712703a45201e3d"
        ],
        [
            "apply Pos.peano_ind.",
            "VernacExtend",
            "d19465b8ed98f4b88c06abe31275cd26191ce580"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "change (two_power_pos 1) with 2.",
            "VernacExtend",
            "fba97a86c97142398b108a639b6cb6ad7dcb22ef"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Zdiv2_div.",
            "VernacExtend",
            "58996576d6726002ecf7e01a80fd5df52360f49e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite Pos.iter_succ.",
            "VernacExtend",
            "a6c28db9a5d22c6001772e60494ce19a76039ae4"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "rewrite Pplus_one_succ_l.",
            "VernacExtend",
            "0b0c2b2508e7bbd54c8724e26e38d1e71e9e022f"
        ],
        [
            "rewrite two_power_pos_is_exp.",
            "VernacExtend",
            "53838041bee173a09a0a3738374b23a00419fd23"
        ],
        [
            "change (two_power_pos 1) with 2.",
            "VernacExtend",
            "fba97a86c97142398b108a639b6cb6ad7dcb22ef"
        ],
        [
            "rewrite Zdiv2_div.",
            "VernacExtend",
            "faa2b4d775e7c98b35c99ee87bd44efc8c133a91"
        ],
        [
            "rewrite Z.mul_comm.",
            "VernacExtend",
            "088699fe7f894ededd3c93ab3a27f9d105f1ab84"
        ],
        [
            "apply Zdiv_Zdiv.",
            "VernacExtend",
            "5fda31ae53cb352de5081c4a4f3fa70e954db73a"
        ],
        [
            "rewrite two_power_pos_nat.",
            "VernacExtend",
            "905cbc42d75479a675013b8e14f2d2cb89a6895c"
        ],
        [
            "apply two_power_nat_pos.",
            "VernacExtend",
            "b662a9ac34dd1a59671605f975e998a807dd01e1"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "compute in H.",
            "VernacExtend",
            "686103f70bd92c1e64ec2f78836e7444971cef09"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma shru_div_two_p: forall x y, shru x y = repr (unsigned x / two_p (unsigned y)).",
            "VernacStartTheoremProof",
            "3f0031d2c43c9beb1782c148a3c6972c520e2b64"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold shru.",
            "VernacExtend",
            "6bc2eec5ac24b3d88f131d79dde21420cba5c4be"
        ],
        [
            "rewrite Zshiftr_div_two_p.",
            "VernacExtend",
            "90fc01f0f0eae61bd03ac4563e0f8b19e779fe5c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "generalize (unsigned_range y); omega.",
            "VernacExtend",
            "42fda19b1742db2649f926c7d3bceaa4596993b0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem divu_pow2: forall x n logn, is_power2 n = Some logn -> divu x n = shru x logn.",
            "VernacStartTheoremProof",
            "6164197757eb9252796e9c1decfd538c8c9ef594"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (is_power2_correct n logn H).",
            "VernacExtend",
            "688d9dc1b74ba81a486e6919034083f3e7201404"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "unfold divu.",
            "VernacExtend",
            "a590fd4befdc5a95066b4da954521dc3b686dbcc"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "apply shru_div_two_p.",
            "VernacExtend",
            "dc9b9c15ab4569e0fb3cbfc2e9f7b82f5b890836"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma shr_div_two_p: forall x y, shr x y = repr (signed x / two_p (unsigned y)).",
            "VernacStartTheoremProof",
            "12db95b219bfb1bd344f1a69f7e70fcb58dd2044"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold shr.",
            "VernacExtend",
            "b0785b9ec45cd18cb02fe6ea9a4f119054b99009"
        ],
        [
            "rewrite Zshiftr_div_two_p.",
            "VernacExtend",
            "90fc01f0f0eae61bd03ac4563e0f8b19e779fe5c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "generalize (unsigned_range y); omega.",
            "VernacExtend",
            "42fda19b1742db2649f926c7d3bceaa4596993b0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem divs_pow2: forall x n logn, is_power2 n = Some logn -> divs x n = shrx x logn.",
            "VernacStartTheoremProof",
            "f0f27a988b701b0a294b9c51b97f845fd788326f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (is_power2_correct _ _ H); intro.",
            "VernacExtend",
            "614c718227d368c04ebd58bd022cfa26c3ddd4be"
        ],
        [
            "unfold shrx.",
            "VernacExtend",
            "727bd665896b035639034d80830e195a4775c00e"
        ],
        [
            "rewrite shl_mul_two_p.",
            "VernacExtend",
            "22cc3304a3a573fd3d033d2dafe6f62e99726c2b"
        ],
        [
            "rewrite mul_commut.",
            "VernacExtend",
            "7e479a6cc087b15b3e77ca62eef65a115285e229"
        ],
        [
            "rewrite mul_one.",
            "VernacExtend",
            "48e185ca99d9fb7850b9fee25eb6e9a16ab7f505"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "rewrite repr_unsigned.",
            "VernacExtend",
            "21d65804482992e66265036604c87ce7071df035"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Ztestbit_mod_two_p: forall n x i, 0 <= n -> 0 <= i -> Z.testbit (x mod (two_p n)) i = if zlt i n then Z.testbit x i else false.",
            "VernacStartTheoremProof",
            "ba73104f1a890c02d84aee09200350ba10ed8510"
        ],
        [
            "intros n0 x i N0POS.",
            "VernacExtend",
            "fef63b3ba60c9db1a5a7a33838eedd8ffcda1daf"
        ],
        [
            "revert x i; pattern n0; apply natlike_ind; auto.",
            "VernacExtend",
            "4f605c05e7e684cc2df9a39f03c60271dae914f5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "change (two_p 0) with 1.",
            "VernacExtend",
            "e319d482d7714e1df6d2534de3913d2db24e3e04"
        ],
        [
            "rewrite Zmod_1_r.",
            "VernacExtend",
            "514ca001a7e743bc03af0d30b3e55d30fcee1a57"
        ],
        [
            "rewrite Z.testbit_0_l.",
            "VernacExtend",
            "3d10313570d6407f4c0dbb64ffc4e4e6b470f6b3"
        ],
        [
            "rewrite zlt_false; auto.",
            "VernacExtend",
            "a7f28c2617535b77e0035b271ce2717cc06a3d86"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite two_p_S; auto.",
            "VernacExtend",
            "90f17c6866ad6f0d1a89251afe1ff96ccc854029"
        ],
        [
            "replace (x0 mod (2 * two_p x)) with (Zshiftin (Z.odd x0) (Z.div2 x0 mod two_p x)).",
            "VernacExtend",
            "4bc1cb7db13f25bc5769d28fb77e132cd81c6d68"
        ],
        [
            "rewrite Ztestbit_shiftin; auto.",
            "VernacExtend",
            "46ec7e9a8b00ef8ac13c8cecf9c88a0fff7b0d10"
        ],
        [
            "rewrite (Ztestbit_eq i x0); auto.",
            "VernacExtend",
            "d940d880d63b0639e4f581e80b9e9cbedb67515a"
        ],
        [
            "destruct (zeq i 0).",
            "VernacExtend",
            "d84935205e6f3de20c609dbacd0c5438037a33e9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite zlt_true; auto.",
            "VernacExtend",
            "2530d4fd01d0742590fadf383a697c5eb37b78be"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "destruct (zlt (Z.pred i) x).",
            "VernacExtend",
            "fc8fd200832ec4591e9f6a34677735053281d701"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite zlt_true; auto.",
            "VernacExtend",
            "2530d4fd01d0742590fadf383a697c5eb37b78be"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite zlt_false; auto.",
            "VernacExtend",
            "a7f28c2617535b77e0035b271ce2717cc06a3d86"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite (Zdecomp x0) at 3.",
            "VernacExtend",
            "82c77291316a9a4e1bcf5ac89501f6cd4ca7266b"
        ],
        [
            "set (x1 := Z.div2 x0).",
            "VernacExtend",
            "fe50aaf5e8b6358718d24335ed50c78ac80aa514"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Zmod_unique with (x1 / two_p x).",
            "VernacExtend",
            "27726ba64a22528fab2d9dce2210a5514f8e2780"
        ],
        [
            "rewrite !Zshiftin_spec.",
            "VernacExtend",
            "aa9d3dedf623bac9a8173e30b44355badd5e5367"
        ],
        [
            "rewrite Z.add_assoc.",
            "VernacExtend",
            "29e409a5136d36d9bdb955a7c32d658d7720aea4"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "transitivity (2 * (two_p x * (x1 / two_p x) + x1 mod two_p x)).",
            "VernacExtend",
            "0f7bc2369e369a8feac65bc05f906c61d92a409c"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply Z_div_mod_eq.",
            "VernacExtend",
            "c7c7b8c0b3f502009e6f882787bdcc803640e476"
        ],
        [
            "apply two_p_gt_ZERO; auto.",
            "VernacExtend",
            "eed3343784be464d43407f45fee9c83a7f552536"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "rewrite Zshiftin_spec.",
            "VernacExtend",
            "d6761270d320e65edf1ff35092908241b44e627f"
        ],
        [
            "exploit (Z_mod_lt x1 (two_p x)).",
            "VernacExtend",
            "0fc34c793690748b6ae3707ede41f88feb7f070c"
        ],
        [
            "apply two_p_gt_ZERO; auto.",
            "VernacExtend",
            "eed3343784be464d43407f45fee9c83a7f552536"
        ],
        [
            "destruct (Z.odd x0); omega.",
            "VernacExtend",
            "2147d29a4e3cf90c2e43b8cafba5d2e88fac0ad0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary Ztestbit_two_p_m1: forall n i, 0 <= n -> 0 <= i -> Z.testbit (two_p n - 1) i = if zlt i n then true else false.",
            "VernacStartTheoremProof",
            "76cabd2d98c55eabe001abce585c3e9a039a1b90"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace (two_p n - 1) with ((-1) mod (two_p n)).",
            "VernacExtend",
            "8552617f3db0671948f2ea87b89f21285acbd54d"
        ],
        [
            "rewrite Ztestbit_mod_two_p; auto.",
            "VernacExtend",
            "a7ace985b22656c74fcf94ae5275d4190a679b6a"
        ],
        [
            "destruct (zlt i n); auto.",
            "VernacExtend",
            "f3d4c5dfa327d8d47baf0b2715c47dcb9150c40f"
        ],
        [
            "apply Ztestbit_m1; auto.",
            "VernacExtend",
            "d1af5caedb86a41449e33b46c4ba83d48392b2c5"
        ],
        [
            "apply Zmod_unique with (-1).",
            "VernacExtend",
            "9fbfa02026507947911435325d2aedbb9d4084b4"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "exploit (two_p_gt_ZERO n).",
            "VernacExtend",
            "0f179a1b749def55b9007856ac00999f40c169f8"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem modu_and: forall x n logn, is_power2 n = Some logn -> modu x n = and x (sub n one).",
            "VernacStartTheoremProof",
            "d282d920126b14ecb05b1beb442a3ec7cb2a759f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (is_power2_correct _ _ H); intro.",
            "VernacExtend",
            "614c718227d368c04ebd58bd022cfa26c3ddd4be"
        ],
        [
            "generalize (is_power2_rng _ _ H); intro.",
            "VernacExtend",
            "4e8d6f46afd1f48ec5e1031a09b19b8469bc0aee"
        ],
        [
            "apply same_bits_eq; intros.",
            "VernacExtend",
            "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
        ],
        [
            "rewrite bits_and; auto.",
            "VernacExtend",
            "ebb7cb503b8fdcd326d9062c755d67707c1d2e79"
        ],
        [
            "unfold sub.",
            "VernacExtend",
            "09a336a2b822859bc335120602ae265ad23b7a0d"
        ],
        [
            "rewrite testbit_repr; auto.",
            "VernacExtend",
            "d20143ed773e39c9c2d38dc1a41b649eadbc95c6"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "rewrite unsigned_one.",
            "VernacExtend",
            "52f1cc9e4b7b0a3b7c37f5e9a1a6c514d4cb1683"
        ],
        [
            "unfold modu.",
            "VernacExtend",
            "f422c7f651883f9b1be11387013adc1ad2a7e0c8"
        ],
        [
            "rewrite testbit_repr; auto.",
            "VernacExtend",
            "d20143ed773e39c9c2d38dc1a41b649eadbc95c6"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "rewrite Ztestbit_mod_two_p.",
            "VernacExtend",
            "e9ee0f7649e004f471927a611a7f3a6cd5b57453"
        ],
        [
            "rewrite Ztestbit_two_p_m1.",
            "VernacExtend",
            "00ce27b32fe65c9db345e2d0edaac376197ce585"
        ],
        [
            "destruct (zlt i (unsigned logn)).",
            "VernacExtend",
            "bed5dc98d18683ba942d394e69517d77789174f3"
        ],
        [
            "rewrite andb_true_r; auto.",
            "VernacExtend",
            "8d3ecd774644b39473041cd140b9a59f6c79550c"
        ],
        [
            "rewrite andb_false_r; auto.",
            "VernacExtend",
            "0597380d3b8c5004f944d81b561ad8146e321614"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zquot_Zdiv: forall x y, y > 0 -> Z.quot x y = if zlt x 0 then (x + y - 1) / y else x / y.",
            "VernacStartTheoremProof",
            "37745af759f0fbed082616463d70844309aeb5d2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (zlt x 0).",
            "VernacExtend",
            "3d2dd3593e50f587b58f6529ad8960e4a05ff108"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Zquot_unique_full with ((x + y - 1) mod y - (y - 1)).",
            "VernacExtend",
            "4d1c8be658741bccf26b72df9519099396cfae57"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "right; split.",
            "VernacExtend",
            "7f40e6faa2e8d6f2ee2a39b745aa28054e5d87de"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "exploit (Z_mod_lt (x + y - 1) y); auto.",
            "VernacExtend",
            "82963549ab9395fbc9c9940b805b71ede35de890"
        ],
        [
            "rewrite Z.abs_eq.",
            "VernacExtend",
            "4d74d669a671e59eb9a86ae3d0d908e33e8120a7"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "transitivity ((y * ((x + y - 1) / y) + (x + y - 1) mod y) - (y-1)).",
            "VernacExtend",
            "02566f214b150a26e31d82bde7812fa975b7675e"
        ],
        [
            "rewrite <- Z_div_mod_eq.",
            "VernacExtend",
            "a2072dd14a19c9c0f8c30ef0c09c5a6ed86b2cd6"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply Zquot_Zdiv_pos; omega.",
            "VernacExtend",
            "a9bf4f32511fd5718f6d17dccfee45cad2d0bdb2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem shrx_zero: forall x, zwordsize > 1 -> shrx x zero = x.",
            "VernacStartTheoremProof",
            "579fa93fd852e18d967bd8a74712f8ad9684369c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold shrx.",
            "VernacExtend",
            "727bd665896b035639034d80830e195a4775c00e"
        ],
        [
            "rewrite shl_zero.",
            "VernacExtend",
            "8760c36cc41929d5c935314c7147a1ebf53a8cdf"
        ],
        [
            "unfold divs.",
            "VernacExtend",
            "f268efa166c7bd9f01ff4537de50df7a32d19571"
        ],
        [
            "rewrite signed_one by auto.",
            "VernacExtend",
            "43446213f37f754ebaf9b3105db9a43fcd33b305"
        ],
        [
            "rewrite Z.quot_1_r.",
            "VernacExtend",
            "c76da0aed8ddf96c7b8f42a8b078eebcda3031e0"
        ],
        [
            "apply repr_signed.",
            "VernacExtend",
            "6ac037f1d42a8ffc7ffc97da2226a128bb137982"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem shrx_shr: forall x y, ltu y (repr (zwordsize - 1)) = true -> shrx x y = shr (if lt x zero then add x (sub (shl one y) one) else x) y.",
            "VernacStartTheoremProof",
            "03a1dd07b6bf0cc068df5da566c3f436833fcb60"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "set (uy := unsigned y).",
            "VernacExtend",
            "837fd20e4f7b956cfdf38d2d39b01e0352e81c9e"
        ],
        [
            "assert (0 <= uy < zwordsize - 1).",
            "VernacExtend",
            "72fb7f12712c7af0a9c3663a56381abfd83527a8"
        ],
        [
            "generalize (ltu_inv _ _ H).",
            "VernacExtend",
            "7b58a295ab1791d1e4a443703f076aec968a783c"
        ],
        [
            "rewrite unsigned_repr.",
            "VernacExtend",
            "5134990e153a3f2ce893c9ea9837f183c322ceb2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "generalize wordsize_pos wordsize_max_unsigned; omega.",
            "VernacExtend",
            "f7d9a86b05d78860203faeef31c672ad32a7c863"
        ],
        [
            "rewrite shr_div_two_p.",
            "VernacExtend",
            "46a926ad1175b718b679973342ee4f1fff9d19e1"
        ],
        [
            "unfold shrx.",
            "VernacExtend",
            "727bd665896b035639034d80830e195a4775c00e"
        ],
        [
            "unfold divs.",
            "VernacExtend",
            "f268efa166c7bd9f01ff4537de50df7a32d19571"
        ],
        [
            "assert (shl one y = repr (two_p uy)).",
            "VernacExtend",
            "bb6980ba22e360461a8f726858d62adff3eef124"
        ],
        [
            "transitivity (mul one (repr (two_p uy))).",
            "VernacExtend",
            "32283def995af020919fdcc9b9bce77b2a100930"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply mul_pow2.",
            "VernacExtend",
            "e2344d50d09bed896db272ada4431d87ea226a46"
        ],
        [
            "replace y with (repr uy).",
            "VernacExtend",
            "3eebfb423e1bd929c542335bf92b69fc31f01f6a"
        ],
        [
            "apply is_power2_two_p.",
            "VernacExtend",
            "346c40d239ef16fdf9d1036c63a33212c59794f5"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply repr_unsigned.",
            "VernacExtend",
            "7033f895e7c0a699adb114621e89aafefb338576"
        ],
        [
            "rewrite mul_commut.",
            "VernacExtend",
            "7e479a6cc087b15b3e77ca62eef65a115285e229"
        ],
        [
            "apply mul_one.",
            "VernacExtend",
            "14c276170530c7fb04d2a172707ba8595b981ce3"
        ],
        [
            "assert (two_p uy > 0).",
            "VernacExtend",
            "11d9bfd98d3ae19fe3e1e420a90235eaa9a4fd61"
        ],
        [
            "apply two_p_gt_ZERO.",
            "VernacExtend",
            "9690045ae69e536e22b7db6c37ee985732e7c4b7"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "assert (two_p uy < half_modulus).",
            "VernacExtend",
            "3488da22c3f854a07ae3c3743e346b3de0b869f4"
        ],
        [
            "rewrite half_modulus_power.",
            "VernacExtend",
            "fd8ccafd38bbc04cf02d63bcd61c884d7a7470f8"
        ],
        [
            "apply two_p_monotone_strict.",
            "VernacExtend",
            "9f9347abd1e7a23e387d0ed249667589d29440a0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (two_p uy < modulus).",
            "VernacExtend",
            "dcd00e6e72933f1fa24a6854983ffa94553fe7c2"
        ],
        [
            "rewrite modulus_power.",
            "VernacExtend",
            "753142ad8669d3fd0251ba06a6ea2fc37e67244d"
        ],
        [
            "apply two_p_monotone_strict.",
            "VernacExtend",
            "9f9347abd1e7a23e387d0ed249667589d29440a0"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "assert (unsigned (shl one y) = two_p uy).",
            "VernacExtend",
            "8458abf599cb1c126b2041e8190384c2b7ff16b1"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "apply unsigned_repr.",
            "VernacExtend",
            "cbb55125b21da3156cf49c45f71d95a6743593f6"
        ],
        [
            "unfold max_unsigned.",
            "VernacExtend",
            "36f5add4f60c9b122a3b68fcbd2bef84e6e0d135"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "assert (signed (shl one y) = two_p uy).",
            "VernacExtend",
            "994059765e9af16b4083b0359ce4e86de4a538d7"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "apply signed_repr.",
            "VernacExtend",
            "adf1ccf79802672332bf27c82e1f983090114eac"
        ],
        [
            "unfold max_signed.",
            "VernacExtend",
            "f8dfc169a274f28f22cf16df03cc4eb70fbb62d5"
        ],
        [
            "generalize min_signed_neg.",
            "VernacExtend",
            "ac7ec763bc9d04fd155ad86b784068f7e17c5cfa"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite H6.",
            "VernacExtend",
            "ff6a429844c59cba51300abb872460dbdbab812d"
        ],
        [
            "rewrite Zquot_Zdiv; auto.",
            "VernacExtend",
            "9de087b106de9db4a68a6dd67d5cd72cda7ed6a2"
        ],
        [
            "unfold lt.",
            "VernacExtend",
            "2e821d407c03d5f5e572c51453fdc618d9dec364"
        ],
        [
            "rewrite signed_zero.",
            "VernacExtend",
            "19d56ca0cd36da40c29724bb93cb20d76340e45c"
        ],
        [
            "destruct (zlt (signed x) 0); auto.",
            "VernacExtend",
            "c4ab8f014bf5bc4652eb4fd580dc16b484df0992"
        ],
        [
            "rewrite add_signed.",
            "VernacExtend",
            "ed5edd67ff4718914294a2f2af85a85915c80577"
        ],
        [
            "assert (signed (sub (shl one y) one) = two_p uy - 1).",
            "VernacExtend",
            "b1fd32c4da10ca1300feb0854370acd0e1e369fa"
        ],
        [
            "unfold sub.",
            "VernacExtend",
            "09a336a2b822859bc335120602ae265ad23b7a0d"
        ],
        [
            "rewrite H5.",
            "VernacExtend",
            "d39eba0f5559f57239c887c68680638084d28197"
        ],
        [
            "rewrite unsigned_one.",
            "VernacExtend",
            "52f1cc9e4b7b0a3b7c37f5e9a1a6c514d4cb1683"
        ],
        [
            "apply signed_repr.",
            "VernacExtend",
            "adf1ccf79802672332bf27c82e1f983090114eac"
        ],
        [
            "generalize min_signed_neg.",
            "VernacExtend",
            "ac7ec763bc9d04fd155ad86b784068f7e17c5cfa"
        ],
        [
            "unfold max_signed.",
            "VernacExtend",
            "f8dfc169a274f28f22cf16df03cc4eb70fbb62d5"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite H7.",
            "VernacExtend",
            "2b0de906e9dfacfe89c031c2266760d29b5450f6"
        ],
        [
            "rewrite signed_repr.",
            "VernacExtend",
            "c2ed7b2fcebad79aff5b86b90cf7dda2f0d52061"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "generalize (signed_range x).",
            "VernacExtend",
            "05aa574215226a540af9d48a1f6ebaf04266cae5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (two_p uy - 1 <= max_signed).",
            "VernacExtend",
            "64b303151046ad5ee1c5d32a3f03a0cbf7c278ca"
        ],
        [
            "unfold max_signed.",
            "VernacExtend",
            "f8dfc169a274f28f22cf16df03cc4eb70fbb62d5"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem shrx_shr_2: forall x y, ltu y (repr (zwordsize - 1)) = true -> shrx x y = shr (add x (shru (shr x (repr (zwordsize - 1))) (sub iwordsize y))) y.",
            "VernacStartTheoremProof",
            "2e86ea321cac4d19af99c62376e2f87e77fa4fcd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite shrx_shr by auto.",
            "VernacExtend",
            "0500b17d39749a508e309fa80925d82352644616"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite shr_lt_zero.",
            "VernacExtend",
            "de145c7e77d562946db78ed9edb12d31a64b38d0"
        ],
        [
            "destruct (lt x zero).",
            "VernacExtend",
            "56431311febe9c755a97db275e2484cffe963341"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "set (uy := unsigned y).",
            "VernacExtend",
            "837fd20e4f7b956cfdf38d2d39b01e0352e81c9e"
        ],
        [
            "generalize (unsigned_range y); fold uy; intros.",
            "VernacExtend",
            "20ae75fef06f3db29650b368b12c9f6c4f5d7699"
        ],
        [
            "assert (0 <= uy < zwordsize - 1).",
            "VernacExtend",
            "72fb7f12712c7af0a9c3663a56381abfd83527a8"
        ],
        [
            "generalize (ltu_inv _ _ H).",
            "VernacExtend",
            "7b58a295ab1791d1e4a443703f076aec968a783c"
        ],
        [
            "rewrite unsigned_repr.",
            "VernacExtend",
            "5134990e153a3f2ce893c9ea9837f183c322ceb2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "generalize wordsize_pos wordsize_max_unsigned; omega.",
            "VernacExtend",
            "f7d9a86b05d78860203faeef31c672ad32a7c863"
        ],
        [
            "assert (two_p uy < modulus).",
            "VernacExtend",
            "dcd00e6e72933f1fa24a6854983ffa94553fe7c2"
        ],
        [
            "rewrite modulus_power.",
            "VernacExtend",
            "753142ad8669d3fd0251ba06a6ea2fc37e67244d"
        ],
        [
            "apply two_p_monotone_strict.",
            "VernacExtend",
            "9f9347abd1e7a23e387d0ed249667589d29440a0"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite shl_mul_two_p.",
            "VernacExtend",
            "22cc3304a3a573fd3d033d2dafe6f62e99726c2b"
        ],
        [
            "fold uy.",
            "VernacExtend",
            "132af332409b07aff641beb2f76bef5968c163a1"
        ],
        [
            "rewrite mul_commut.",
            "VernacExtend",
            "7e479a6cc087b15b3e77ca62eef65a115285e229"
        ],
        [
            "rewrite mul_one.",
            "VernacExtend",
            "48e185ca99d9fb7850b9fee25eb6e9a16ab7f505"
        ],
        [
            "unfold sub.",
            "VernacExtend",
            "09a336a2b822859bc335120602ae265ad23b7a0d"
        ],
        [
            "rewrite unsigned_one.",
            "VernacExtend",
            "52f1cc9e4b7b0a3b7c37f5e9a1a6c514d4cb1683"
        ],
        [
            "rewrite unsigned_repr.",
            "VernacExtend",
            "5134990e153a3f2ce893c9ea9837f183c322ceb2"
        ],
        [
            "rewrite unsigned_repr_wordsize.",
            "VernacExtend",
            "68bf2f65418d45548a5d1a5f941d2ad54148206b"
        ],
        [
            "fold uy.",
            "VernacExtend",
            "132af332409b07aff641beb2f76bef5968c163a1"
        ],
        [
            "apply same_bits_eq; intros.",
            "VernacExtend",
            "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
        ],
        [
            "rewrite bits_shru by auto.",
            "VernacExtend",
            "aec9c7bee89375aea4fe5442e80cf054e0c2bcdf"
        ],
        [
            "rewrite testbit_repr by auto.",
            "VernacExtend",
            "8dadad04a0b2de2914f06b82bef19544f0ee6dde"
        ],
        [
            "rewrite Ztestbit_two_p_m1 by omega.",
            "VernacExtend",
            "ac46153878d8d744929868ec2109b76e59be13f9"
        ],
        [
            "rewrite unsigned_repr by (generalize wordsize_max_unsigned; omega).",
            "VernacExtend",
            "54214920ecefeb1d0f797e0512e3348a8d80ede4"
        ],
        [
            "destruct (zlt i uy).",
            "VernacExtend",
            "80a1228518f8c8c1a6a29e7dbfd580643712122b"
        ],
        [
            "rewrite zlt_true by omega.",
            "VernacExtend",
            "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
        ],
        [
            "rewrite bits_mone by omega.",
            "VernacExtend",
            "f0ef98d85b9a9b561a0c8c3544bb12a268c25ef6"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite zlt_false by omega.",
            "VernacExtend",
            "1a3d93f438781af1cb3b43101336d435afaef9a1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (two_p uy > 0) by (apply two_p_gt_ZERO; omega).",
            "VernacExtend",
            "de0f7662c06de9a51b7587ba1db535bda2c6ef6e"
        ],
        [
            "unfold max_unsigned; omega.",
            "VernacExtend",
            "8050b2acbf1f11f7b1479a8f25e2549120cc659f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "replace (shru zero (sub iwordsize y)) with zero.",
            "VernacExtend",
            "7743d7f4621128ced05d66930bf74299b11cff89"
        ],
        [
            "rewrite add_zero; auto.",
            "VernacExtend",
            "2dcda68403fce6a7bcb3b254804a56642fda9d74"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "destruct (zlt (i + unsigned (sub iwordsize y)) zwordsize); auto.",
            "VernacExtend",
            "5d081c2dc596c06509ac7a5d5920b2a9356fe2d4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zdiv_shift: forall x y, y > 0 -> (x + (y - 1)) / y = x / y + if zeq (Z.modulo x y) 0 then 0 else 1.",
            "VernacStartTheoremProof",
            "ca6236b35fca2b23cbc270a2943dc4057fa7f03b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (Z_div_mod_eq x y H).",
            "VernacExtend",
            "d78179d5f5cb58c0f07be0034042f6ae1569c693"
        ],
        [
            "generalize (Z_mod_lt x y H).",
            "VernacExtend",
            "260f3d3d2500e7e35d0a340500ff23546cd58212"
        ],
        [
            "set (q := x / y).",
            "VernacExtend",
            "fc5dccd2d39761ac2918533017dba4f22bd291bd"
        ],
        [
            "set (r := x mod y).",
            "VernacExtend",
            "2e7dd47f2bf599cf69a2a36c95a07f3bade722f1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (zeq r 0).",
            "VernacExtend",
            "70f086795f7be82ad063b2b7c6177d5bd62006d8"
        ],
        [
            "apply Zdiv_unique with (y - 1).",
            "VernacExtend",
            "9904955fd0529c06ea443f2018a7374055177a31"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "rewrite e.",
            "VernacExtend",
            "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply Zdiv_unique with (r - 1).",
            "VernacExtend",
            "31c1fc0122b319170ddc0a7433076d6c58b24ebc"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem shrx_carry: forall x y, ltu y (repr (zwordsize - 1)) = true -> shrx x y = add (shr x y) (shr_carry x y).",
            "VernacStartTheoremProof",
            "85fc8660feacd7b7aedb6aa8933d40b6ace0f528"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite shrx_shr; auto.",
            "VernacExtend",
            "1297aad8e88c17b9176e19e9be05997e67c97634"
        ],
        [
            "unfold shr_carry.",
            "VernacExtend",
            "33bc4c932c7cb6aa5d4cb824bcee828470e19c88"
        ],
        [
            "unfold lt.",
            "VernacExtend",
            "2e821d407c03d5f5e572c51453fdc618d9dec364"
        ],
        [
            "set (sx := signed x).",
            "VernacExtend",
            "a75c960226def46f25e9d39a009a8cbc7c8d726a"
        ],
        [
            "rewrite signed_zero.",
            "VernacExtend",
            "19d56ca0cd36da40c29724bb93cb20d76340e45c"
        ],
        [
            "destruct (zlt sx 0); simpl.",
            "VernacExtend",
            "fc6fef5821d426cc5e445144c21ddfd8695df41a"
        ],
        [
            "2: rewrite add_zero; auto.",
            "VernacExtend",
            "1b52a0b816ceb1654ab6dfe00162440c33d8442d"
        ],
        [
            "set (uy := unsigned y).",
            "VernacExtend",
            "837fd20e4f7b956cfdf38d2d39b01e0352e81c9e"
        ],
        [
            "assert (0 <= uy < zwordsize - 1).",
            "VernacExtend",
            "72fb7f12712c7af0a9c3663a56381abfd83527a8"
        ],
        [
            "generalize (ltu_inv _ _ H).",
            "VernacExtend",
            "7b58a295ab1791d1e4a443703f076aec968a783c"
        ],
        [
            "rewrite unsigned_repr.",
            "VernacExtend",
            "5134990e153a3f2ce893c9ea9837f183c322ceb2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "generalize wordsize_pos wordsize_max_unsigned; omega.",
            "VernacExtend",
            "f7d9a86b05d78860203faeef31c672ad32a7c863"
        ],
        [
            "assert (shl one y = repr (two_p uy)).",
            "VernacExtend",
            "bb6980ba22e360461a8f726858d62adff3eef124"
        ],
        [
            "rewrite shl_mul_two_p.",
            "VernacExtend",
            "22cc3304a3a573fd3d033d2dafe6f62e99726c2b"
        ],
        [
            "rewrite mul_commut.",
            "VernacExtend",
            "7e479a6cc087b15b3e77ca62eef65a115285e229"
        ],
        [
            "apply mul_one.",
            "VernacExtend",
            "14c276170530c7fb04d2a172707ba8595b981ce3"
        ],
        [
            "assert (and x (sub (shl one y) one) = modu x (repr (two_p uy))).",
            "VernacExtend",
            "62e83c025d82588f9f82805a397a7e346baa4c44"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "apply modu_and with (logn := y).",
            "VernacExtend",
            "0073a013d9f185b7d42afe1f783d7fa3dc51075a"
        ],
        [
            "rewrite is_power2_two_p.",
            "VernacExtend",
            "4f7ae949987c423c05f00363fa68742cb2bc0f8b"
        ],
        [
            "unfold uy.",
            "VernacExtend",
            "71b5c182ebf4330dadeb53a61d982eac03efaffa"
        ],
        [
            "rewrite repr_unsigned.",
            "VernacExtend",
            "21d65804482992e66265036604c87ce7071df035"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "repeat rewrite shr_div_two_p.",
            "VernacExtend",
            "7bdfe3e6711d54325744d5d79e956f8258bf3fff"
        ],
        [
            "fold sx.",
            "VernacExtend",
            "4c1a01a78c597429e278f594faa3d796e1748f50"
        ],
        [
            "fold uy.",
            "VernacExtend",
            "132af332409b07aff641beb2f76bef5968c163a1"
        ],
        [
            "assert (two_p uy > 0).",
            "VernacExtend",
            "11d9bfd98d3ae19fe3e1e420a90235eaa9a4fd61"
        ],
        [
            "apply two_p_gt_ZERO.",
            "VernacExtend",
            "9690045ae69e536e22b7db6c37ee985732e7c4b7"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "assert (two_p uy < modulus).",
            "VernacExtend",
            "dcd00e6e72933f1fa24a6854983ffa94553fe7c2"
        ],
        [
            "rewrite modulus_power.",
            "VernacExtend",
            "753142ad8669d3fd0251ba06a6ea2fc37e67244d"
        ],
        [
            "apply two_p_monotone_strict.",
            "VernacExtend",
            "9f9347abd1e7a23e387d0ed249667589d29440a0"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "assert (two_p uy < half_modulus).",
            "VernacExtend",
            "3488da22c3f854a07ae3c3743e346b3de0b869f4"
        ],
        [
            "rewrite half_modulus_power.",
            "VernacExtend",
            "fd8ccafd38bbc04cf02d63bcd61c884d7a7470f8"
        ],
        [
            "apply two_p_monotone_strict.",
            "VernacExtend",
            "9f9347abd1e7a23e387d0ed249667589d29440a0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (two_p uy < modulus).",
            "VernacExtend",
            "dcd00e6e72933f1fa24a6854983ffa94553fe7c2"
        ],
        [
            "rewrite modulus_power.",
            "VernacExtend",
            "753142ad8669d3fd0251ba06a6ea2fc37e67244d"
        ],
        [
            "apply two_p_monotone_strict.",
            "VernacExtend",
            "9f9347abd1e7a23e387d0ed249667589d29440a0"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "assert (sub (repr (two_p uy)) one = repr (two_p uy - 1)).",
            "VernacExtend",
            "dfee346e87e0bc1f5a828b96ec59f5ef3a4f506c"
        ],
        [
            "unfold sub.",
            "VernacExtend",
            "09a336a2b822859bc335120602ae265ad23b7a0d"
        ],
        [
            "apply eqm_samerepr.",
            "VernacExtend",
            "2226a5674ed5a7db984e878fdbb37775ca665295"
        ],
        [
            "apply eqm_sub.",
            "VernacExtend",
            "89203e9861d3d20e16db6ba55a6a41de8352f78f"
        ],
        [
            "apply eqm_sym; apply eqm_unsigned_repr.",
            "VernacExtend",
            "746efd7685e40b6d2048745aa7ebc53621f77b4e"
        ],
        [
            "rewrite unsigned_one.",
            "VernacExtend",
            "52f1cc9e4b7b0a3b7c37f5e9a1a6c514d4cb1683"
        ],
        [
            "apply eqm_refl.",
            "VernacExtend",
            "cd38aceb6abd087396d34625c4f0ed69968a7526"
        ],
        [
            "rewrite H7.",
            "VernacExtend",
            "2b0de906e9dfacfe89c031c2266760d29b5450f6"
        ],
        [
            "rewrite add_signed.",
            "VernacExtend",
            "ed5edd67ff4718914294a2f2af85a85915c80577"
        ],
        [
            "fold sx.",
            "VernacExtend",
            "4c1a01a78c597429e278f594faa3d796e1748f50"
        ],
        [
            "rewrite (signed_repr (two_p uy - 1)).",
            "VernacExtend",
            "d5797abfe82974fa78924f61dca1b25285791144"
        ],
        [
            "rewrite signed_repr.",
            "VernacExtend",
            "c2ed7b2fcebad79aff5b86b90cf7dda2f0d52061"
        ],
        [
            "unfold modu.",
            "VernacExtend",
            "f422c7f651883f9b1be11387013adc1ad2a7e0c8"
        ],
        [
            "rewrite unsigned_repr.",
            "VernacExtend",
            "5134990e153a3f2ce893c9ea9837f183c322ceb2"
        ],
        [
            "unfold eq.",
            "VernacExtend",
            "933b6273fd52e184377d2b6af7fe95b080d1399c"
        ],
        [
            "rewrite unsigned_zero.",
            "VernacExtend",
            "89956b9f461b9934c8fa99e6e63074f0275efcae"
        ],
        [
            "rewrite unsigned_repr.",
            "VernacExtend",
            "5134990e153a3f2ce893c9ea9837f183c322ceb2"
        ],
        [
            "assert (unsigned x mod two_p uy = sx mod two_p uy).",
            "VernacExtend",
            "83cd0312c7a1b033b7c37120243305a690504435"
        ],
        [
            "apply eqmod_mod_eq; auto.",
            "VernacExtend",
            "1adce391e6a2d4a0fa2d9300c7cd29d5c10521b2"
        ],
        [
            "apply eqmod_divides with modulus.",
            "VernacExtend",
            "992fca5cd20238ecb17c8ce75482099da8475a25"
        ],
        [
            "fold eqm.",
            "VernacExtend",
            "c6e8013129a0ecae3ed775e2654432fb90dc0c41"
        ],
        [
            "unfold sx.",
            "VernacExtend",
            "40621d5016e6afb5be4a9e240185b1574a51719c"
        ],
        [
            "apply eqm_sym.",
            "VernacExtend",
            "f47e8ad0613afa49106216f940d8037154af13ba"
        ],
        [
            "apply eqm_signed_unsigned.",
            "VernacExtend",
            "d8614df8b73ff309ccafc1b69753d7e1944f658e"
        ],
        [
            "unfold modulus.",
            "VernacExtend",
            "202f368b6f08b873343d2b49e63dddcb32f23f66"
        ],
        [
            "rewrite two_power_nat_two_p.",
            "VernacExtend",
            "e21f56ecabf68cda5e6534a700cce51443bacebe"
        ],
        [
            "exists (two_p (zwordsize - uy)).",
            "VernacExtend",
            "3f0ecf77ff047e34a4bddbc883b346f0c5594f55"
        ],
        [
            "rewrite <- two_p_is_exp.",
            "VernacExtend",
            "3e5dd28ca80a1938686082ddc0a22c4345d87d29"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "fold zwordsize; omega.",
            "VernacExtend",
            "276db1c5a2eccb6894b85518f5686dbd11c06ce3"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite H8.",
            "VernacExtend",
            "ef335154f8a1120928ddce71bc7a2456078d36bc"
        ],
        [
            "rewrite Zdiv_shift; auto.",
            "VernacExtend",
            "a30cadd248f374ce8740a0e4e963e16d0b48d807"
        ],
        [
            "unfold add.",
            "VernacExtend",
            "11cf98bf231f22df486b46b3b6a1c38a94e859dd"
        ],
        [
            "apply eqm_samerepr.",
            "VernacExtend",
            "2226a5674ed5a7db984e878fdbb37775ca665295"
        ],
        [
            "apply eqm_add.",
            "VernacExtend",
            "6c81c3e6c0a0d0574105329a31bbe3cdf542f623"
        ],
        [
            "apply eqm_unsigned_repr.",
            "VernacExtend",
            "8083262b54f87caceff266da1e7020054aa5a39f"
        ],
        [
            "destruct (zeq (sx mod two_p uy) 0); simpl.",
            "VernacExtend",
            "352d190cd66b7913a65062450dcaf72fe79bf8f8"
        ],
        [
            "rewrite unsigned_zero.",
            "VernacExtend",
            "89956b9f461b9934c8fa99e6e63074f0275efcae"
        ],
        [
            "apply eqm_refl.",
            "VernacExtend",
            "cd38aceb6abd087396d34625c4f0ed69968a7526"
        ],
        [
            "rewrite unsigned_one.",
            "VernacExtend",
            "52f1cc9e4b7b0a3b7c37f5e9a1a6c514d4cb1683"
        ],
        [
            "apply eqm_refl.",
            "VernacExtend",
            "cd38aceb6abd087396d34625c4f0ed69968a7526"
        ],
        [
            "generalize (Z_mod_lt (unsigned x) (two_p uy) H3).",
            "VernacExtend",
            "001fbb832583b534ada6295fb9b93e3ebd18b687"
        ],
        [
            "unfold max_unsigned.",
            "VernacExtend",
            "36f5add4f60c9b122a3b68fcbd2bef84e6e0d135"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "unfold max_unsigned; omega.",
            "VernacExtend",
            "8050b2acbf1f11f7b1479a8f25e2549120cc659f"
        ],
        [
            "generalize (signed_range x).",
            "VernacExtend",
            "05aa574215226a540af9d48a1f6ebaf04266cae5"
        ],
        [
            "fold sx.",
            "VernacExtend",
            "4c1a01a78c597429e278f594faa3d796e1748f50"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "unfold max_signed.",
            "VernacExtend",
            "f8dfc169a274f28f22cf16df03cc4eb70fbb62d5"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "generalize min_signed_neg.",
            "VernacExtend",
            "ac7ec763bc9d04fd155ad86b784068f7e17c5cfa"
        ],
        [
            "unfold max_signed.",
            "VernacExtend",
            "f8dfc169a274f28f22cf16df03cc4eb70fbb62d5"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma shr_shru_positive: forall x y, signed x >= 0 -> shr x y = shru x y.",
            "VernacStartTheoremProof",
            "630764bd390cfbd502e9a6bb8318a9fcdba205ff"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite shr_div_two_p.",
            "VernacExtend",
            "46a926ad1175b718b679973342ee4f1fff9d19e1"
        ],
        [
            "rewrite shru_div_two_p.",
            "VernacExtend",
            "6dc3b34a71bc286ec3f610310d1bdf0e2d6e5394"
        ],
        [
            "rewrite signed_eq_unsigned.",
            "VernacExtend",
            "0a5fff4d6bab5acacf68ae1a47394be387d69575"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply signed_positive.",
            "VernacExtend",
            "451f145b6c30d224f144e699df0923fd7b3f399a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma and_positive: forall x y, signed y >= 0 -> signed (and x y) >= 0.",
            "VernacStartTheoremProof",
            "d06540e2a08b4cb9c392611a22965c8757e7c937"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (unsigned y < half_modulus).",
            "VernacExtend",
            "06e6679e9ce29d4504777b0f8c0f5d388a8010c2"
        ],
        [
            "rewrite signed_positive in H.",
            "VernacExtend",
            "09d3ed621110a77d2a57f21765a5f7cf280e282b"
        ],
        [
            "unfold max_signed in H; omega.",
            "VernacExtend",
            "b08f1b81fa4bc81e935d59af1432c8568c6f5e72"
        ],
        [
            "generalize (sign_bit_of_unsigned y).",
            "VernacExtend",
            "22d747baf8289a4535cea8f588613393effa89fd"
        ],
        [
            "rewrite zlt_true; auto.",
            "VernacExtend",
            "2530d4fd01d0742590fadf383a697c5eb37b78be"
        ],
        [
            "intros A.",
            "VernacExtend",
            "1e674201f6164f095fcb9efa159981a648ffff11"
        ],
        [
            "generalize (sign_bit_of_unsigned (and x y)).",
            "VernacExtend",
            "b5ba1b91a8a60cbc85b1252b31b31fd719a166c4"
        ],
        [
            "rewrite bits_and.",
            "VernacExtend",
            "c7f6e515ba49aa8a1f1db7a7769fa71e6206de05"
        ],
        [
            "rewrite A.",
            "VernacExtend",
            "66a3aec75a717b72a3c9a20459f4dabe8d0df2c1"
        ],
        [
            "rewrite andb_false_r.",
            "VernacExtend",
            "e8dfa19869bd43e29d5896355e5f1bf34bb7a9a4"
        ],
        [
            "unfold signed.",
            "VernacExtend",
            "f99b13683b7fbccb713276bdf12a56c47fabc924"
        ],
        [
            "destruct (zlt (unsigned (and x y)) half_modulus).",
            "VernacExtend",
            "182d0bb2e3d1311328d657ee6152871e6f8c9387"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (unsigned_range (and x y)); omega.",
            "VernacExtend",
            "c2ba23c4c4b4bdaa3ba9c745ea33e8bfa6323b2b"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "generalize wordsize_pos; omega.",
            "VernacExtend",
            "1be2fda6bfa5aa53c9fdc4049e4df24e68556740"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem shr_and_is_shru_and: forall x y z, lt y zero = false -> shr (and x y) z = shru (and x y) z.",
            "VernacStartTheoremProof",
            "6935e096b8749f94bf37a0b09923b779ba2c9b0d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply shr_shru_positive.",
            "VernacExtend",
            "f67ded5d036e1ea9648db3682ce17320d3e76fb9"
        ],
        [
            "apply and_positive.",
            "VernacExtend",
            "cb32e501832cf85518500225ef403f2c868dfac7"
        ],
        [
            "unfold lt in H.",
            "VernacExtend",
            "7577161adf47fb51e5468637528599d05c124141"
        ],
        [
            "rewrite signed_zero in H.",
            "VernacExtend",
            "17343bc330db1608dfa15e7a823742bc22510349"
        ],
        [
            "destruct (zlt (signed y) 0).",
            "VernacExtend",
            "ffe41beefcb49f79ce63b934d26fc3d0f600d21c"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Ziter_base: forall (A: Type) n (f: A -> A) x, n <= 0 -> Z.iter n f x = x.",
            "VernacStartTheoremProof",
            "3ee487786aaf31394a948f9ba6cd63c1a384d74c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Z.iter.",
            "VernacExtend",
            "b941504b86af6877b3ac9130cf3c47d5564ef213"
        ],
        [
            "destruct n; auto.",
            "VernacExtend",
            "ac1a46c3d4b557b3710fa36973beb6e353d40fb6"
        ],
        [
            "compute in H.",
            "VernacExtend",
            "686103f70bd92c1e64ec2f78836e7444971cef09"
        ],
        [
            "elim H; auto.",
            "VernacExtend",
            "93275a139e0a54467a849c9ab468d4fd7beb5813"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Ziter_succ: forall (A: Type) n (f: A -> A) x, 0 <= n -> Z.iter (Z.succ n) f x = f (Z.iter n f x).",
            "VernacStartTheoremProof",
            "19e602a2fa3e6ab74dba76ca9ed11c5a9f3aa813"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct n; simpl.",
            "VernacExtend",
            "6554f156164019d92e1907ce49ab9159d733a0bb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Pos.add_1_r.",
            "VernacExtend",
            "55a2bed981075a8e459b652bca988f7e054bee2e"
        ],
        [
            "apply Pos.iter_succ.",
            "VernacExtend",
            "4f494f6874a06b8a1e039228167b4a7b80c0c9e2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "compute in H.",
            "VernacExtend",
            "686103f70bd92c1e64ec2f78836e7444971cef09"
        ],
        [
            "elim H; auto.",
            "VernacExtend",
            "93275a139e0a54467a849c9ab468d4fd7beb5813"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Znatlike_ind: forall (P: Z -> Prop), (forall n, n <= 0 -> P n) -> (forall n, 0 <= n -> P n -> P (Z.succ n)) -> forall n, P n.",
            "VernacStartTheoremProof",
            "f9cdc33365921f77ff843012640e5da0f53da20c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (zle 0 n).",
            "VernacExtend",
            "087bcb1646b6217a63e74eda6b93b67029e86a3b"
        ],
        [
            "apply natlike_ind; auto.",
            "VernacExtend",
            "ee5b8d1380e3d82c62ef2961a05ca77c4b4b553e"
        ],
        [
            "apply H; omega.",
            "VernacExtend",
            "25f1ceb280800c37161013440275309d43c00c5f"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zzero_ext_spec: forall n x i, 0 <= i -> Z.testbit (Zzero_ext n x) i = if zlt i n then Z.testbit x i else false.",
            "VernacStartTheoremProof",
            "b24da5259fe90775b0b6cb2326299923ffe17a58"
        ],
        [
            "unfold Zzero_ext.",
            "VernacExtend",
            "8fcb03629364688cef35d6de3af65938d6393e22"
        ],
        [
            "induction n using Znatlike_ind.",
            "VernacExtend",
            "4eefa9ecf8720d9623122a1f84796ebd183536db"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite Ziter_base; auto.",
            "VernacExtend",
            "69c507e2abae4346444a2572eabacc4096f7f881"
        ],
        [
            "rewrite zlt_false.",
            "VernacExtend",
            "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
        ],
        [
            "rewrite Ztestbit_0; auto.",
            "VernacExtend",
            "7c1683088573bc865fd7d009b13c3de326e4e7f5"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite Ziter_succ; auto.",
            "VernacExtend",
            "03dd15257f523cf0877565a5a1caf90126676517"
        ],
        [
            "rewrite Ztestbit_shiftin; auto.",
            "VernacExtend",
            "46ec7e9a8b00ef8ac13c8cecf9c88a0fff7b0d10"
        ],
        [
            "rewrite (Ztestbit_eq i x); auto.",
            "VernacExtend",
            "1af4f5fb1d240e746c0693a4729846aaaa29fdb6"
        ],
        [
            "destruct (zeq i 0).",
            "VernacExtend",
            "d84935205e6f3de20c609dbacd0c5438037a33e9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "subst i.",
            "VernacExtend",
            "8a51b06e94f64277663e0022260aa1e58bff437c"
        ],
        [
            "rewrite zlt_true; auto.",
            "VernacExtend",
            "2530d4fd01d0742590fadf383a697c5eb37b78be"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite IHn.",
            "VernacExtend",
            "ec9472e508d0ba82a8f6be939d2e4d39f35c3667"
        ],
        [
            "destruct (zlt (Z.pred i) n).",
            "VernacExtend",
            "3491eecc6fc8b2d7d7e88116c0221a8816775719"
        ],
        [
            "rewrite zlt_true; auto.",
            "VernacExtend",
            "2530d4fd01d0742590fadf383a697c5eb37b78be"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite zlt_false; auto.",
            "VernacExtend",
            "a7f28c2617535b77e0035b271ce2717cc06a3d86"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bits_zero_ext: forall n x i, 0 <= i -> testbit (zero_ext n x) i = if zlt i n then testbit x i else false.",
            "VernacStartTheoremProof",
            "5eefbca1e21827ef5b66cf173e092b45a3ae871a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold zero_ext.",
            "VernacExtend",
            "5e977e59163ea2848b288796f8df3c35a74ebe09"
        ],
        [
            "destruct (zlt i zwordsize).",
            "VernacExtend",
            "cbf965911aa29c8b776e1700f06d5a1afa2ff80a"
        ],
        [
            "rewrite testbit_repr; auto.",
            "VernacExtend",
            "d20143ed773e39c9c2d38dc1a41b649eadbc95c6"
        ],
        [
            "rewrite Zzero_ext_spec.",
            "VernacExtend",
            "e15bd55590380e0f9a068b83e96a92292f233ad0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite !bits_above; auto.",
            "VernacExtend",
            "427e20cd388bdb9d597f8b4dfb738c9c526d0a47"
        ],
        [
            "destruct (zlt i n); auto.",
            "VernacExtend",
            "f3d4c5dfa327d8d47baf0b2715c47dcb9150c40f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zsign_ext_spec: forall n x i, 0 <= i -> 0 < n -> Z.testbit (Zsign_ext n x) i = Z.testbit x (if zlt i n then i else n - 1).",
            "VernacStartTheoremProof",
            "b80fe3d98c6dd75f545870dac7b040e307b8e499"
        ],
        [
            "intros n0 x i I0 N0.",
            "VernacExtend",
            "8ad896748367ae506ea795deee347273385b62ef"
        ],
        [
            "revert x i I0.",
            "VernacExtend",
            "b9a1aadf461dd4e535cf664fa7d50e4e1809369f"
        ],
        [
            "pattern n0.",
            "VernacExtend",
            "45685a382feac7d373248a2afd7966b6f3da8355"
        ],
        [
            "apply Zlt_lower_bound_ind with (z := 1).",
            "VernacExtend",
            "598dedbcdcb702ec60aa4c922b9eeb9eac7af362"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold Zsign_ext.",
            "VernacExtend",
            "2bc1bdeccb48cf309326408c1aa1f77d10fc5023"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (zeq x 1).",
            "VernacExtend",
            "4a7b60cb094be12843e71f7a5902f0ea668b0dfa"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "subst x; simpl.",
            "VernacExtend",
            "2f8437b331365d30d508fbd8b1b0384ceae8a188"
        ],
        [
            "replace (if zlt i 1 then i else 0) with 0.",
            "VernacExtend",
            "f7a8fd1b9797ba83eaccd00b93903f1a91e3064e"
        ],
        [
            "rewrite Ztestbit_base.",
            "VernacExtend",
            "095d25dcb17cfd42881ac648005a7e3652330992"
        ],
        [
            "destruct (Z.odd x0).",
            "VernacExtend",
            "40491273f0257c5ffb94abeee19f26adca998df9"
        ],
        [
            "apply Ztestbit_m1; auto.",
            "VernacExtend",
            "d1af5caedb86a41449e33b46c4ba83d48392b2c5"
        ],
        [
            "apply Ztestbit_0.",
            "VernacExtend",
            "9eabae5755d85655c33afa1ead756f180af22081"
        ],
        [
            "destruct (zlt i 1); omega.",
            "VernacExtend",
            "6aa2685566a8518f7c91d9f4c9a6da06fdc0f119"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "set (x1 := Z.pred x).",
            "VernacExtend",
            "bd190b3db3957d155fe9eae3cf6b06990b01b616"
        ],
        [
            "replace x1 with (Z.succ (Z.pred x1)).",
            "VernacExtend",
            "15cacf575705415598ff55b7d6214bd2a8387ace"
        ],
        [
            "rewrite Ziter_succ.",
            "VernacExtend",
            "f5fa2a84176d632618dcdfd17bf0b2e21f02f767"
        ],
        [
            "rewrite Ztestbit_shiftin.",
            "VernacExtend",
            "4566040421bf5d63fd1949bb270b1f6e45af96d4"
        ],
        [
            "destruct (zeq i 0).",
            "VernacExtend",
            "d84935205e6f3de20c609dbacd0c5438037a33e9"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "subst i.",
            "VernacExtend",
            "8a51b06e94f64277663e0022260aa1e58bff437c"
        ],
        [
            "rewrite zlt_true.",
            "VernacExtend",
            "b49135e183425368b4318af106711c28871bcc77"
        ],
        [
            "rewrite Ztestbit_base; auto.",
            "VernacExtend",
            "6983e04882a216b29db1b2fbc32ddd431264929a"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "unfold x1.",
            "VernacExtend",
            "cd4dcfe0d88eae49343e419a7d7a326f0ec70333"
        ],
        [
            "destruct (zlt (Z.pred i) (Z.pred x)).",
            "VernacExtend",
            "15b341a49aa332753858e7cb787f4e53894d99c5"
        ],
        [
            "rewrite zlt_true.",
            "VernacExtend",
            "b49135e183425368b4318af106711c28871bcc77"
        ],
        [
            "rewrite (Ztestbit_eq i x0); auto.",
            "VernacExtend",
            "d940d880d63b0639e4f581e80b9e9cbedb67515a"
        ],
        [
            "rewrite zeq_false; auto.",
            "VernacExtend",
            "d8f8647dc65cf23070a70db5ce3df4ff9417226b"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite zlt_false.",
            "VernacExtend",
            "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
        ],
        [
            "rewrite (Ztestbit_eq (x - 1) x0).",
            "VernacExtend",
            "2845357e08adaf18a8a8a698445b6add13305ca7"
        ],
        [
            "rewrite zeq_false; auto.",
            "VernacExtend",
            "d8f8647dc65cf23070a70db5ce3df4ff9417226b"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "unfold x1; omega.",
            "VernacExtend",
            "9bf0624297ca2affd0a2f401ab18b69aa507da1f"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "unfold x1; omega.",
            "VernacExtend",
            "9bf0624297ca2affd0a2f401ab18b69aa507da1f"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bits_sign_ext: forall n x i, 0 <= i < zwordsize -> 0 < n -> testbit (sign_ext n x) i = testbit x (if zlt i n then i else n - 1).",
            "VernacStartTheoremProof",
            "422306a7065eb432bc60071109601f3aa8d5393b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold sign_ext.",
            "VernacExtend",
            "9efea3b2d32afb5423405e4130252da15c29ebf6"
        ],
        [
            "rewrite testbit_repr; auto.",
            "VernacExtend",
            "d20143ed773e39c9c2d38dc1a41b649eadbc95c6"
        ],
        [
            "rewrite Zsign_ext_spec.",
            "VernacExtend",
            "cd75f36dad4ca712f7efb6778b7347e1a2f1c0dd"
        ],
        [
            "destruct (zlt i n); auto.",
            "VernacExtend",
            "f3d4c5dfa327d8d47baf0b2715c47dcb9150c40f"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite bits_zero_ext bits_sign_ext: ints.",
            "VernacExtend",
            "e2ec2a23ce390ced143b437e42edc9df7fb699bb"
        ],
        [
            "Theorem zero_ext_above: forall n x, n >= zwordsize -> zero_ext n x = x.",
            "VernacStartTheoremProof",
            "0e60c5cc06a6b06d34b8dc96050ab3a62a2c2e71"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply same_bits_eq; intros.",
            "VernacExtend",
            "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
        ],
        [
            "rewrite bits_zero_ext.",
            "VernacExtend",
            "75121cbd781fe341a7520324499407a6b13b81f3"
        ],
        [
            "apply zlt_true.",
            "VernacExtend",
            "135d300e9c683e2995f4687be0904a8b2009f6fe"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem sign_ext_above: forall n x, n >= zwordsize -> sign_ext n x = x.",
            "VernacStartTheoremProof",
            "4c00ae52b110f66a7a7c3f30945a76076f52ae8f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply same_bits_eq; intros.",
            "VernacExtend",
            "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
        ],
        [
            "unfold sign_ext; rewrite testbit_repr; auto.",
            "VernacExtend",
            "60fb700cb74998bd756102ccf8d711a6cd557ebb"
        ],
        [
            "rewrite Zsign_ext_spec.",
            "VernacExtend",
            "cd75f36dad4ca712f7efb6778b7347e1a2f1c0dd"
        ],
        [
            "rewrite zlt_true.",
            "VernacExtend",
            "b49135e183425368b4318af106711c28871bcc77"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem zero_ext_and: forall n x, 0 <= n -> zero_ext n x = and x (repr (two_p n - 1)).",
            "VernacStartTheoremProof",
            "aaf59f1c6175338705fb59454ff6e4c48ed56746"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "rewrite testbit_repr; auto.",
            "VernacExtend",
            "d20143ed773e39c9c2d38dc1a41b649eadbc95c6"
        ],
        [
            "rewrite Ztestbit_two_p_m1; intuition.",
            "VernacExtend",
            "af20052b78fe6f3f388e404de9e016b92638d0b8"
        ],
        [
            "destruct (zlt i n).",
            "VernacExtend",
            "e95249794f6baef3de0ea4980efbabfd979ed1b4"
        ],
        [
            "rewrite andb_true_r; auto.",
            "VernacExtend",
            "8d3ecd774644b39473041cd140b9a59f6c79550c"
        ],
        [
            "rewrite andb_false_r; auto.",
            "VernacExtend",
            "0597380d3b8c5004f944d81b561ad8146e321614"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem zero_ext_mod: forall n x, 0 <= n < zwordsize -> unsigned (zero_ext n x) = Z.modulo (unsigned x) (two_p n).",
            "VernacStartTheoremProof",
            "0da9fee016cf42a4ae282aa51f042b373a488b44"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply equal_same_bits.",
            "VernacExtend",
            "4439b102c92624b9f7b1dd28063ebd86121be389"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite Ztestbit_mod_two_p; auto.",
            "VernacExtend",
            "a7ace985b22656c74fcf94ae5275d4190a679b6a"
        ],
        [
            "fold (testbit (zero_ext n x) i).",
            "VernacExtend",
            "2ca1e830c2f35849c9ca992bb4c59dc9dab1c39e"
        ],
        [
            "destruct (zlt i zwordsize).",
            "VernacExtend",
            "cbf965911aa29c8b776e1700f06d5a1afa2ff80a"
        ],
        [
            "rewrite bits_zero_ext; auto.",
            "VernacExtend",
            "508f8be23e4d43a9f071aa7e8bbe9cb59f41e1a9"
        ],
        [
            "rewrite bits_above.",
            "VernacExtend",
            "03e9b48636da98aadfef128985f39171a63a4d68"
        ],
        [
            "rewrite zlt_false; auto.",
            "VernacExtend",
            "a7f28c2617535b77e0035b271ce2717cc06a3d86"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem zero_ext_widen: forall x n n', 0 <= n <= n' -> zero_ext n' (zero_ext n x) = zero_ext n x.",
            "VernacStartTheoremProof",
            "2cf12c03ce672ba194cbfc656e49332cedbd6f8c"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "destruct (zlt i n).",
            "VernacExtend",
            "e95249794f6baef3de0ea4980efbabfd979ed1b4"
        ],
        [
            "apply zlt_true.",
            "VernacExtend",
            "135d300e9c683e2995f4687be0904a8b2009f6fe"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "destruct (zlt i n'); auto.",
            "VernacExtend",
            "3d37562c6334ebc5cfeef198fcd0cdc43e27285a"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem sign_ext_widen: forall x n n', 0 < n <= n' -> sign_ext n' (sign_ext n x) = sign_ext n x.",
            "VernacStartTheoremProof",
            "c4f3853385a3bf1918a9b7bbb1754e8ae46373da"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (zlt n' zwordsize).",
            "VernacExtend",
            "5bbd179849bcccea4dd873e99fd5bc31300f973f"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "destruct (zlt i n').",
            "VernacExtend",
            "d55843d0228664dea9f2838fea843fc35e95b135"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite (zlt_false _ i n).",
            "VernacExtend",
            "129b342d27d68f8408ccbdc6daa3e46a8ba35bc2"
        ],
        [
            "destruct (zlt (n' - 1) n); f_equal; omega.",
            "VernacExtend",
            "5189ca1d10eee0ead945576135f23cda90dae134"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "destruct (zlt i n'); omega.",
            "VernacExtend",
            "e358133a5e98c83e973fb1a3bdf357e8af28a3b2"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply sign_ext_above; auto.",
            "VernacExtend",
            "9f8083dcb7f926f856296481641679c1c23a2f4f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem sign_zero_ext_widen: forall x n n', 0 <= n < n' -> sign_ext n' (zero_ext n x) = zero_ext n x.",
            "VernacStartTheoremProof",
            "d9bd50b33542aefd095fb6ab533c2f95057c321e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (zlt n' zwordsize).",
            "VernacExtend",
            "5bbd179849bcccea4dd873e99fd5bc31300f973f"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "destruct (zlt i n').",
            "VernacExtend",
            "d55843d0228664dea9f2838fea843fc35e95b135"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite !zlt_false.",
            "VernacExtend",
            "6845e781b8908255eb35986619d0358459e9aaa9"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "destruct (zlt i n'); omega.",
            "VernacExtend",
            "e358133a5e98c83e973fb1a3bdf357e8af28a3b2"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply sign_ext_above; auto.",
            "VernacExtend",
            "9f8083dcb7f926f856296481641679c1c23a2f4f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem zero_ext_narrow: forall x n n', 0 <= n <= n' -> zero_ext n (zero_ext n' x) = zero_ext n x.",
            "VernacStartTheoremProof",
            "25567c95d57477525c016201d110263c5e7d162d"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "destruct (zlt i n).",
            "VernacExtend",
            "e95249794f6baef3de0ea4980efbabfd979ed1b4"
        ],
        [
            "apply zlt_true.",
            "VernacExtend",
            "135d300e9c683e2995f4687be0904a8b2009f6fe"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem sign_ext_narrow: forall x n n', 0 < n <= n' -> sign_ext n (sign_ext n' x) = sign_ext n x.",
            "VernacStartTheoremProof",
            "c4f8ed455483c4c9330ead6e964a0b0525b35bc8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (zlt n zwordsize).",
            "VernacExtend",
            "76daac13afefbd872f5aedf01ea7582726d91f39"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "destruct (zlt i n); f_equal; apply zlt_true; omega.",
            "VernacExtend",
            "cae35df721cc4d4f2c19a876857cf14a809fed0f"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "destruct (zlt i n); omega.",
            "VernacExtend",
            "bc7921a05cf4b8bfafd177ce349c11e5a8ca9770"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite (sign_ext_above n').",
            "VernacExtend",
            "bb15fc689ffa3508f678462f67f8c4d6825bbcca"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem zero_sign_ext_narrow: forall x n n', 0 < n <= n' -> zero_ext n (sign_ext n' x) = zero_ext n x.",
            "VernacStartTheoremProof",
            "1a19dd43922ce74dabd3a8bb4aac14ad76bb6c26"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (zlt n' zwordsize).",
            "VernacExtend",
            "5bbd179849bcccea4dd873e99fd5bc31300f973f"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "destruct (zlt i n); auto.",
            "VernacExtend",
            "f3d4c5dfa327d8d47baf0b2715c47dcb9150c40f"
        ],
        [
            "rewrite zlt_true; auto.",
            "VernacExtend",
            "2530d4fd01d0742590fadf383a697c5eb37b78be"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite sign_ext_above; auto.",
            "VernacExtend",
            "2b2c3199e001ac63ebbfff246f76309d215373dc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem zero_ext_idem: forall n x, 0 <= n -> zero_ext n (zero_ext n x) = zero_ext n x.",
            "VernacStartTheoremProof",
            "d18f516097e6caefe95daf55a55e2a3341b815c0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply zero_ext_widen.",
            "VernacExtend",
            "fb916c4a30b2faecbf9a2a1f62a4aefa890c125d"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem sign_ext_idem: forall n x, 0 < n -> sign_ext n (sign_ext n x) = sign_ext n x.",
            "VernacStartTheoremProof",
            "407606214d4c02c98f7b472c435c4e6c4938c28b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply sign_ext_widen.",
            "VernacExtend",
            "a1980c8c2669c5d3e8b14a9bd66893d1043c0e25"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem sign_ext_zero_ext: forall n x, 0 < n -> sign_ext n (zero_ext n x) = sign_ext n x.",
            "VernacStartTheoremProof",
            "cfeafe22378da8acadcea2c37d84e09af4761467"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (zlt n zwordsize).",
            "VernacExtend",
            "76daac13afefbd872f5aedf01ea7582726d91f39"
        ],
        [
            "bit_solve.",
            "VernacExtend",
            "5fdc71c3c0513a0a774137b89f357afcac7883bd"
        ],
        [
            "destruct (zlt i n).",
            "VernacExtend",
            "e95249794f6baef3de0ea4980efbabfd979ed1b4"
        ],
        [
            "rewrite zlt_true; auto.",
            "VernacExtend",
            "2530d4fd01d0742590fadf383a697c5eb37b78be"
        ],
        [
            "rewrite zlt_true; auto.",
            "VernacExtend",
            "2530d4fd01d0742590fadf383a697c5eb37b78be"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "destruct (zlt i n); omega.",
            "VernacExtend",
            "bc7921a05cf4b8bfafd177ce349c11e5a8ca9770"
        ],
        [
            "rewrite zero_ext_above; auto.",
            "VernacExtend",
            "d41a0c503a51e80826a16393d3a8b9e56af4526b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem zero_ext_sign_ext: forall n x, 0 < n -> zero_ext n (sign_ext n x) = zero_ext n x.",
            "VernacStartTheoremProof",
            "87b77603381af20f45f20720f11e8b11cee380b5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply zero_sign_ext_narrow.",
            "VernacExtend",
            "248d310417df7d54ac3c58696eb2721ae3468831"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem sign_ext_equal_if_zero_equal: forall n x y, 0 < n -> zero_ext n x = zero_ext n y -> sign_ext n x = sign_ext n y.",
            "VernacStartTheoremProof",
            "a001256a1b40f3b1be194394ba4569c34aaa5cc5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- (sign_ext_zero_ext n x H).",
            "VernacExtend",
            "e59a532413387c665fcc418c551cbe51d0e36180"
        ],
        [
            "rewrite <- (sign_ext_zero_ext n y H).",
            "VernacExtend",
            "a9039df0ca77757f3c0395b2dee662d917a591b9"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem zero_ext_shru_shl: forall n x, 0 < n < zwordsize -> let y := repr (zwordsize - n) in zero_ext n x = shru (shl x y) y.",
            "VernacStartTheoremProof",
            "56cc6093e25611c1621da7cb0e74abfbec301b0f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (unsigned y = zwordsize - n).",
            "VernacExtend",
            "cead33ed73d75c824e632d23cabc54808f1d6ca3"
        ],
        [
            "unfold y.",
            "VernacExtend",
            "29a8f7868cdd745151dd20abb7f3c232bfc6cb70"
        ],
        [
            "apply unsigned_repr.",
            "VernacExtend",
            "cbb55125b21da3156cf49c45f71d95a6743593f6"
        ],
        [
            "generalize wordsize_max_unsigned.",
            "VernacExtend",
            "818588ddd7da527827745e853d3040136c0e060b"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply same_bits_eq; intros.",
            "VernacExtend",
            "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
        ],
        [
            "rewrite bits_zero_ext.",
            "VernacExtend",
            "75121cbd781fe341a7520324499407a6b13b81f3"
        ],
        [
            "rewrite bits_shru; auto.",
            "VernacExtend",
            "c4c629df9cf060299ef7b4c0d8265d9d79a27d30"
        ],
        [
            "destruct (zlt i n).",
            "VernacExtend",
            "e95249794f6baef3de0ea4980efbabfd979ed1b4"
        ],
        [
            "rewrite zlt_true.",
            "VernacExtend",
            "b49135e183425368b4318af106711c28871bcc77"
        ],
        [
            "rewrite bits_shl.",
            "VernacExtend",
            "a0e1637f702fc4b84135a3530c9ecde2820a246f"
        ],
        [
            "rewrite zlt_false.",
            "VernacExtend",
            "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite zlt_false.",
            "VernacExtend",
            "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem sign_ext_shr_shl: forall n x, 0 < n < zwordsize -> let y := repr (zwordsize - n) in sign_ext n x = shr (shl x y) y.",
            "VernacStartTheoremProof",
            "289065f55a62e502b128f5e248f514adf99b0829"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (unsigned y = zwordsize - n).",
            "VernacExtend",
            "cead33ed73d75c824e632d23cabc54808f1d6ca3"
        ],
        [
            "unfold y.",
            "VernacExtend",
            "29a8f7868cdd745151dd20abb7f3c232bfc6cb70"
        ],
        [
            "apply unsigned_repr.",
            "VernacExtend",
            "cbb55125b21da3156cf49c45f71d95a6743593f6"
        ],
        [
            "generalize wordsize_max_unsigned.",
            "VernacExtend",
            "818588ddd7da527827745e853d3040136c0e060b"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply same_bits_eq; intros.",
            "VernacExtend",
            "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
        ],
        [
            "rewrite bits_sign_ext.",
            "VernacExtend",
            "7601717c22d10461182faf9daf64531116424027"
        ],
        [
            "rewrite bits_shr; auto.",
            "VernacExtend",
            "46a4f6a2843486202c3e28200045f786c7aa06e8"
        ],
        [
            "destruct (zlt i n).",
            "VernacExtend",
            "e95249794f6baef3de0ea4980efbabfd979ed1b4"
        ],
        [
            "rewrite zlt_true.",
            "VernacExtend",
            "b49135e183425368b4318af106711c28871bcc77"
        ],
        [
            "rewrite bits_shl.",
            "VernacExtend",
            "a0e1637f702fc4b84135a3530c9ecde2820a246f"
        ],
        [
            "rewrite zlt_false.",
            "VernacExtend",
            "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite zlt_false.",
            "VernacExtend",
            "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
        ],
        [
            "rewrite bits_shl.",
            "VernacExtend",
            "a0e1637f702fc4b84135a3530c9ecde2820a246f"
        ],
        [
            "rewrite zlt_false.",
            "VernacExtend",
            "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma zero_ext_range: forall n x, 0 <= n < zwordsize -> 0 <= unsigned (zero_ext n x) < two_p n.",
            "VernacStartTheoremProof",
            "d50fcb62da6a5fbff1d70a7898e1ce713fde8864"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite zero_ext_mod; auto.",
            "VernacExtend",
            "4e40ee57461148745aae4f661b164abfc826bac4"
        ],
        [
            "apply Z_mod_lt.",
            "VernacExtend",
            "d33d3cab9911c0f11554b4e753af00e7b5fcc4ca"
        ],
        [
            "apply two_p_gt_ZERO.",
            "VernacExtend",
            "9690045ae69e536e22b7db6c37ee985732e7c4b7"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqmod_zero_ext: forall n x, 0 <= n < zwordsize -> eqmod (two_p n) (unsigned (zero_ext n x)) (unsigned x).",
            "VernacStartTheoremProof",
            "f333b551216a4460aba3f3749ad098319dd548ce"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite zero_ext_mod; auto.",
            "VernacExtend",
            "4e40ee57461148745aae4f661b164abfc826bac4"
        ],
        [
            "apply eqmod_sym.",
            "VernacExtend",
            "902d0b5a0351b9e5d185513882fb9db7c28921db"
        ],
        [
            "apply eqmod_mod.",
            "VernacExtend",
            "1729dd014b983334b1b539b611f2322ed5a7d321"
        ],
        [
            "apply two_p_gt_ZERO.",
            "VernacExtend",
            "9690045ae69e536e22b7db6c37ee985732e7c4b7"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sign_ext_range: forall n x, 0 < n < zwordsize -> -two_p (n-1) <= signed (sign_ext n x) < two_p (n-1).",
            "VernacStartTheoremProof",
            "e72487a7ea11b7936ea1936e06fb860e60a50df0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite sign_ext_shr_shl; auto.",
            "VernacExtend",
            "ec1fd571f811acb159c03e9d58fb08c7011ae1d0"
        ],
        [
            "set (X := shl x (repr (zwordsize - n))).",
            "VernacExtend",
            "be89e00057948fdbdd51f598872a1dfde7d1bc20"
        ],
        [
            "assert (two_p (n - 1) > 0) by (apply two_p_gt_ZERO; omega).",
            "VernacExtend",
            "811c56578c9a0882123cb9e78715085618124a7a"
        ],
        [
            "assert (unsigned (repr (zwordsize - n)) = zwordsize - n).",
            "VernacExtend",
            "beb0533b4e34b86f4abf002cfe62caa24a0dbdf0"
        ],
        [
            "apply unsigned_repr.",
            "VernacExtend",
            "cbb55125b21da3156cf49c45f71d95a6743593f6"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "generalize wordsize_max_unsigned; omega.",
            "VernacExtend",
            "3f1b96d7bb5d8b56488da98617ce0a4bf6d89d59"
        ],
        [
            "rewrite shr_div_two_p.",
            "VernacExtend",
            "46a926ad1175b718b679973342ee4f1fff9d19e1"
        ],
        [
            "rewrite signed_repr.",
            "VernacExtend",
            "c2ed7b2fcebad79aff5b86b90cf7dda2f0d52061"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "apply Zdiv_interval_1.",
            "VernacExtend",
            "249bb7e54e7cf9bc477279682f71f9d1da915d4d"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply two_p_gt_ZERO; omega.",
            "VernacExtend",
            "8f34bbf65f7cc242f0b3064d493088fa943ee5c0"
        ],
        [
            "replace (- two_p (n - 1) * two_p (zwordsize - n)) with (- (two_p (n - 1) * two_p (zwordsize - n))) by ring.",
            "VernacExtend",
            "89e61475e691fd07cc866eeaaacc17f71a08ecde"
        ],
        [
            "rewrite <- two_p_is_exp.",
            "VernacExtend",
            "3e5dd28ca80a1938686082ddc0a22c4345d87d29"
        ],
        [
            "replace (n - 1 + (zwordsize - n)) with (zwordsize - 1) by omega.",
            "VernacExtend",
            "569045023ebe91f33519d18a38b8f516b96991c9"
        ],
        [
            "rewrite <- half_modulus_power.",
            "VernacExtend",
            "820a514ed4da7557e1e67fe980878f5a9b189d5d"
        ],
        [
            "generalize (signed_range X).",
            "VernacExtend",
            "f4dd4c6ceb718a2406661b5f4c16f51f89cf3cfd"
        ],
        [
            "unfold min_signed, max_signed.",
            "VernacExtend",
            "33c0760e781552aec857e6894a7ca108a9f152c6"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply Zdiv_interval_2.",
            "VernacExtend",
            "a54cd5bca005ddf7f7f89e67c7214cc705fff803"
        ],
        [
            "apply signed_range.",
            "VernacExtend",
            "9028b7ceee94c7065a016841414b7629811dbd3f"
        ],
        [
            "generalize min_signed_neg; omega.",
            "VernacExtend",
            "86eb16b26ac72e8e0a50f866e321c0f4350d8c3a"
        ],
        [
            "generalize max_signed_pos; omega.",
            "VernacExtend",
            "23712da0ec0c042f16a9d6d1dde70b09948423dd"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "apply two_p_gt_ZERO.",
            "VernacExtend",
            "9690045ae69e536e22b7db6c37ee985732e7c4b7"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqmod_sign_ext': forall n x, 0 < n < zwordsize -> eqmod (two_p n) (unsigned (sign_ext n x)) (unsigned x).",
            "VernacStartTheoremProof",
            "766c3479c4aa3f5909c517f8f747027911387ad3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "set (N := Z.to_nat n).",
            "VernacExtend",
            "a52b8c4619412f1b5fdd75ea6be1ca05dbccf8f3"
        ],
        [
            "assert (Z.of_nat N = n) by (apply Z2Nat.id; omega).",
            "VernacExtend",
            "87857d34be09ba9ea945a29d235802603354aee5"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "rewrite <- two_power_nat_two_p.",
            "VernacExtend",
            "c026b56990c64eb1f6e2ff8bbc93117be8aced20"
        ],
        [
            "apply eqmod_same_bits; intros.",
            "VernacExtend",
            "9387b192bcd097b3a7c7322fafe089d43981c779"
        ],
        [
            "rewrite H0 in H1.",
            "VernacExtend",
            "45eb32137302b214d582b77378332f104f8e1d7f"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "fold (testbit (sign_ext n x) i).",
            "VernacExtend",
            "06e84634690ea5b9dc40dba93905467e37318014"
        ],
        [
            "rewrite bits_sign_ext.",
            "VernacExtend",
            "7601717c22d10461182faf9daf64531116424027"
        ],
        [
            "rewrite zlt_true.",
            "VernacExtend",
            "b49135e183425368b4318af106711c28871bcc77"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqmod_sign_ext: forall n x, 0 < n < zwordsize -> eqmod (two_p n) (signed (sign_ext n x)) (unsigned x).",
            "VernacStartTheoremProof",
            "eef74d9ecb4962f29e6279bd2ed8d39a389c1c7c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply eqmod_trans with (unsigned (sign_ext n x)).",
            "VernacExtend",
            "d1073ccd6678b5dcf8f048cb6be1cef4e70de4ec"
        ],
        [
            "apply eqmod_divides with modulus.",
            "VernacExtend",
            "992fca5cd20238ecb17c8ce75482099da8475a25"
        ],
        [
            "apply eqm_signed_unsigned.",
            "VernacExtend",
            "d8614df8b73ff309ccafc1b69753d7e1944f658e"
        ],
        [
            "exists (two_p (zwordsize - n)).",
            "VernacExtend",
            "588cf4de04247244c5ecf59cc07b8dc25d08b2b0"
        ],
        [
            "unfold modulus.",
            "VernacExtend",
            "202f368b6f08b873343d2b49e63dddcb32f23f66"
        ],
        [
            "rewrite two_power_nat_two_p.",
            "VernacExtend",
            "e21f56ecabf68cda5e6534a700cce51443bacebe"
        ],
        [
            "fold zwordsize.",
            "VernacExtend",
            "17af035e4e4c23ca9f63a90713b9d548e98e411e"
        ],
        [
            "rewrite <- two_p_is_exp.",
            "VernacExtend",
            "3e5dd28ca80a1938686082ddc0a22c4345d87d29"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply eqmod_sign_ext'; auto.",
            "VernacExtend",
            "17e3456e156520149b58550fcaa4fee5ac0e9c95"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem one_bits_range: forall x i, In i (one_bits x) -> ltu i iwordsize = true.",
            "VernacStartTheoremProof",
            "6dfc2dad2080d03050a09558a878b9f000cb89c2"
        ],
        [
            "assert (A: forall p, 0 <= p < zwordsize -> ltu (repr p) iwordsize = true).",
            "VernacExtend",
            "9f349a41384325c1f36089ccc610ae2170a78d2d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold ltu, iwordsize.",
            "VernacExtend",
            "d5dfaa44e5aa433432c70f900eb85fe365108df3"
        ],
        [
            "apply zlt_true.",
            "VernacExtend",
            "135d300e9c683e2995f4687be0904a8b2009f6fe"
        ],
        [
            "repeat rewrite unsigned_repr.",
            "VernacExtend",
            "e8d4b7e060e6f4fa4265ec5bdaf47f2be4e39bda"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "generalize wordsize_max_unsigned; omega.",
            "VernacExtend",
            "3f1b96d7bb5d8b56488da98617ce0a4bf6d89d59"
        ],
        [
            "generalize wordsize_max_unsigned; omega.",
            "VernacExtend",
            "3f1b96d7bb5d8b56488da98617ce0a4bf6d89d59"
        ],
        [
            "unfold one_bits.",
            "VernacExtend",
            "1678f59c2310072211a505d0c4ec6b5583d99864"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (list_in_map_inv _ _ _ H) as [i0 [EQ IN]].",
            "VernacExtend",
            "9010afaf954a3ed97abdb8f8fa264b711725c4d2"
        ],
        [
            "subst i.",
            "VernacExtend",
            "8a51b06e94f64277663e0022260aa1e58bff437c"
        ],
        [
            "apply A.",
            "VernacExtend",
            "1a87f2153b7f216e98a49f505249a93490a4689c"
        ],
        [
            "apply Z_one_bits_range with (unsigned x); auto.",
            "VernacExtend",
            "e0f82af6092b65119b431f086e7305032bd33cc3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint int_of_one_bits (l: list int) : int := match l with | nil => zero | a :: b => add (shl one a) (int_of_one_bits b) end.",
            "VernacFixpoint",
            "90317ba7d52383d77dc6433cbddcd57e36b91efa"
        ],
        [
            "Theorem one_bits_decomp: forall x, x = int_of_one_bits (one_bits x).",
            "VernacStartTheoremProof",
            "8180d717bd1110d0b7177a27dfa9e76f1301f1ed"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "transitivity (repr (powerserie (Z_one_bits wordsize (unsigned x) 0))).",
            "VernacExtend",
            "e0952a9327551128b7adbf86b7b1aabbc0654447"
        ],
        [
            "transitivity (repr (unsigned x)).",
            "VernacExtend",
            "ce2d78b728dff46d9f3a12cb6349e1d7b2305f1d"
        ],
        [
            "auto with ints.",
            "VernacExtend",
            "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
        ],
        [
            "decEq.",
            "VernacExtend",
            "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
        ],
        [
            "apply Z_one_bits_powerserie.",
            "VernacExtend",
            "981951fa4d823eaee4fe526b60bded741c0cbaca"
        ],
        [
            "auto with ints.",
            "VernacExtend",
            "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
        ],
        [
            "unfold one_bits.",
            "VernacExtend",
            "1678f59c2310072211a505d0c4ec6b5583d99864"
        ],
        [
            "generalize (Z_one_bits_range (unsigned x)).",
            "VernacExtend",
            "fed53754c616410b537c15a48d0ce64048f5827c"
        ],
        [
            "generalize (Z_one_bits wordsize (unsigned x) 0).",
            "VernacExtend",
            "ad579a65080cc0ab0c7b9cc0321d94af3e65c097"
        ],
        [
            "induction l.",
            "VernacExtend",
            "1194af70832939708f8c7fde2f18f81c37b97a0c"
        ],
        [
            "intros; reflexivity.",
            "VernacExtend",
            "c20cfa06d7b692e82c145d2df3bde4c2fe4eb461"
        ],
        [
            "intros; simpl.",
            "VernacExtend",
            "3da5a0bf1c6e40c602010ee4543b1d990c82e623"
        ],
        [
            "rewrite <- IHl.",
            "VernacExtend",
            "d08c434fe9e4c4b4cc3e1701a922431b2b99a42a"
        ],
        [
            "unfold add.",
            "VernacExtend",
            "11cf98bf231f22df486b46b3b6a1c38a94e859dd"
        ],
        [
            "apply eqm_samerepr.",
            "VernacExtend",
            "2226a5674ed5a7db984e878fdbb37775ca665295"
        ],
        [
            "apply eqm_add.",
            "VernacExtend",
            "6c81c3e6c0a0d0574105329a31bbe3cdf542f623"
        ],
        [
            "rewrite shl_mul_two_p.",
            "VernacExtend",
            "22cc3304a3a573fd3d033d2dafe6f62e99726c2b"
        ],
        [
            "rewrite mul_commut.",
            "VernacExtend",
            "7e479a6cc087b15b3e77ca62eef65a115285e229"
        ],
        [
            "rewrite mul_one.",
            "VernacExtend",
            "48e185ca99d9fb7850b9fee25eb6e9a16ab7f505"
        ],
        [
            "apply eqm_unsigned_repr_r.",
            "VernacExtend",
            "0911e24b4d5bf4d1fa1c42c2b6b4303c14b2d0db"
        ],
        [
            "rewrite unsigned_repr.",
            "VernacExtend",
            "5134990e153a3f2ce893c9ea9837f183c322ceb2"
        ],
        [
            "auto with ints.",
            "VernacExtend",
            "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
        ],
        [
            "generalize (H a (in_eq _ _)).",
            "VernacExtend",
            "7aff8e866358886db9008f6d0a4ea9e7377e78ff"
        ],
        [
            "generalize wordsize_max_unsigned.",
            "VernacExtend",
            "818588ddd7da527827745e853d3040136c0e060b"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "auto with ints.",
            "VernacExtend",
            "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
        ],
        [
            "intros; apply H; auto with coqlib.",
            "VernacExtend",
            "2dd1d5db6b658c80bb41c82faed0ca1b45c2e78e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem negate_cmp: forall c x y, cmp (negate_comparison c) x y = negb (cmp c x y).",
            "VernacStartTheoremProof",
            "3d2258fba3eabf4ba6e3c6f2a5b49431ad1d4138"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct c; simpl; try rewrite negb_elim; auto.",
            "VernacExtend",
            "36cdd5083060e460ce16fed4595e3a17eb55b0ee"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem negate_cmpu: forall c x y, cmpu (negate_comparison c) x y = negb (cmpu c x y).",
            "VernacStartTheoremProof",
            "5b2ef0d3bdd45f8778ad76a28c72810ce852a48c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct c; simpl; try rewrite negb_elim; auto.",
            "VernacExtend",
            "36cdd5083060e460ce16fed4595e3a17eb55b0ee"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem swap_cmp: forall c x y, cmp (swap_comparison c) x y = cmp c y x.",
            "VernacStartTheoremProof",
            "1e13ae7f7f002ea92ccc108f7f435817cfc7bbcb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct c; simpl; auto.",
            "VernacExtend",
            "9a8c53e38efcde2edf8b5678b2171eb173be54f8"
        ],
        [
            "apply eq_sym.",
            "VernacExtend",
            "313410cb7bcb68dc243125f00e91764f51d94be6"
        ],
        [
            "decEq.",
            "VernacExtend",
            "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
        ],
        [
            "apply eq_sym.",
            "VernacExtend",
            "313410cb7bcb68dc243125f00e91764f51d94be6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem swap_cmpu: forall c x y, cmpu (swap_comparison c) x y = cmpu c y x.",
            "VernacStartTheoremProof",
            "fcde506db8406273b2ec9fa0d2817d72741a1540"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct c; simpl; auto.",
            "VernacExtend",
            "9a8c53e38efcde2edf8b5678b2171eb173be54f8"
        ],
        [
            "apply eq_sym.",
            "VernacExtend",
            "313410cb7bcb68dc243125f00e91764f51d94be6"
        ],
        [
            "decEq.",
            "VernacExtend",
            "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
        ],
        [
            "apply eq_sym.",
            "VernacExtend",
            "313410cb7bcb68dc243125f00e91764f51d94be6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma translate_eq: forall x y d, eq (add x d) (add y d) = eq x y.",
            "VernacStartTheoremProof",
            "0c529b24f0a09332cb4343033d2d76f4593822d6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold eq.",
            "VernacExtend",
            "933b6273fd52e184377d2b6af7fe95b080d1399c"
        ],
        [
            "case (zeq (unsigned x) (unsigned y)); intro.",
            "VernacExtend",
            "d4d8355bea845a378d4f1b5ef96581376650a64d"
        ],
        [
            "unfold add.",
            "VernacExtend",
            "11cf98bf231f22df486b46b3b6a1c38a94e859dd"
        ],
        [
            "rewrite e.",
            "VernacExtend",
            "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
        ],
        [
            "apply zeq_true.",
            "VernacExtend",
            "af0121a2373c6f0f0aecd87040e8474a45a41dff"
        ],
        [
            "apply zeq_false.",
            "VernacExtend",
            "638f2ef719046a383079789ec905f48e720c6eaf"
        ],
        [
            "unfold add.",
            "VernacExtend",
            "11cf98bf231f22df486b46b3b6a1c38a94e859dd"
        ],
        [
            "red; intro.",
            "VernacExtend",
            "12e00b6ab6f8834b6f81959ca42843abaa311f37"
        ],
        [
            "apply n.",
            "VernacExtend",
            "ed7192228e57856197020582fd87949160a69557"
        ],
        [
            "apply eqm_small_eq; auto with ints.",
            "VernacExtend",
            "fda35641cb4e1b5844a36977950123ddf290fe76"
        ],
        [
            "replace (unsigned x) with ((unsigned x + unsigned d) - unsigned d).",
            "VernacExtend",
            "f9cfce50fa145b76ba42065641cc263cdf3e1dae"
        ],
        [
            "replace (unsigned y) with ((unsigned y + unsigned d) - unsigned d).",
            "VernacExtend",
            "ef88b3be2860ad1f548a70e3aa149d1f524c394d"
        ],
        [
            "apply eqm_sub.",
            "VernacExtend",
            "89203e9861d3d20e16db6ba55a6a41de8352f78f"
        ],
        [
            "apply eqm_trans with (unsigned (repr (unsigned x + unsigned d))).",
            "VernacExtend",
            "4887e79d99142a4dd0fb12931dc5d83a5835e8ee"
        ],
        [
            "eauto with ints.",
            "VernacExtend",
            "df94bcbc17835e3e591fa9c9e43cc784462f1d09"
        ],
        [
            "apply eqm_trans with (unsigned (repr (unsigned y + unsigned d))).",
            "VernacExtend",
            "3316dcb7f326ddb60f8d233806ce93d7f9df3ccc"
        ],
        [
            "eauto with ints.",
            "VernacExtend",
            "df94bcbc17835e3e591fa9c9e43cc784462f1d09"
        ],
        [
            "eauto with ints.",
            "VernacExtend",
            "df94bcbc17835e3e591fa9c9e43cc784462f1d09"
        ],
        [
            "eauto with ints.",
            "VernacExtend",
            "df94bcbc17835e3e591fa9c9e43cc784462f1d09"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma translate_ltu: forall x y d, 0 <= unsigned x + unsigned d <= max_unsigned -> 0 <= unsigned y + unsigned d <= max_unsigned -> ltu (add x d) (add y d) = ltu x y.",
            "VernacStartTheoremProof",
            "2f51d4fdcb2ce982b3fa5afc233d62b7c37f4207"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold add.",
            "VernacExtend",
            "11cf98bf231f22df486b46b3b6a1c38a94e859dd"
        ],
        [
            "unfold ltu.",
            "VernacExtend",
            "e59e12052a96cc6c37e4e3abfd319dcb453c0f12"
        ],
        [
            "repeat rewrite unsigned_repr; auto.",
            "VernacExtend",
            "924927bb9ff6233b3ceaf5b3d7f44a89bad325f1"
        ],
        [
            "case (zlt (unsigned x) (unsigned y)); intro.",
            "VernacExtend",
            "fb0a10066c417e9517174393d577affcad937dec"
        ],
        [
            "apply zlt_true.",
            "VernacExtend",
            "135d300e9c683e2995f4687be0904a8b2009f6fe"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply zlt_false.",
            "VernacExtend",
            "be2bba19d1146ae87d6aab887548ee6a38065fd7"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem translate_cmpu: forall c x y d, 0 <= unsigned x + unsigned d <= max_unsigned -> 0 <= unsigned y + unsigned d <= max_unsigned -> cmpu c (add x d) (add y d) = cmpu c x y.",
            "VernacStartTheoremProof",
            "837369f93a35472ff1ea1aa35cfeed9058a4232a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold cmpu.",
            "VernacExtend",
            "bcfc413c8304bc0ed7781a2cc1b0f182075e56a4"
        ],
        [
            "rewrite translate_eq.",
            "VernacExtend",
            "b85dff9defc82024f8044f29afb185247f284814"
        ],
        [
            "repeat rewrite translate_ltu; auto.",
            "VernacExtend",
            "603fd450f09628170424a089671e833ea08c6489"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma translate_lt: forall x y d, min_signed <= signed x + signed d <= max_signed -> min_signed <= signed y + signed d <= max_signed -> lt (add x d) (add y d) = lt x y.",
            "VernacStartTheoremProof",
            "8e1e164511c51d466c3cee47c834e19f985eb8e3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "repeat rewrite add_signed.",
            "VernacExtend",
            "8ef07960004a0590b55c827141bac071b73f6cc7"
        ],
        [
            "unfold lt.",
            "VernacExtend",
            "2e821d407c03d5f5e572c51453fdc618d9dec364"
        ],
        [
            "repeat rewrite signed_repr; auto.",
            "VernacExtend",
            "c5c24306ce74fbb697197be0bba6da2e148ae136"
        ],
        [
            "case (zlt (signed x) (signed y)); intro.",
            "VernacExtend",
            "55129f5fbb78855b826defc87dab0a5cb73aaf91"
        ],
        [
            "apply zlt_true.",
            "VernacExtend",
            "135d300e9c683e2995f4687be0904a8b2009f6fe"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply zlt_false.",
            "VernacExtend",
            "be2bba19d1146ae87d6aab887548ee6a38065fd7"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem translate_cmp: forall c x y d, min_signed <= signed x + signed d <= max_signed -> min_signed <= signed y + signed d <= max_signed -> cmp c (add x d) (add y d) = cmp c x y.",
            "VernacStartTheoremProof",
            "68b92ec05702367579593ce01b589eb3ff4c7bcb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold cmp.",
            "VernacExtend",
            "adc910ce4f6056d2017f8a94c4edbcaba937cedc"
        ],
        [
            "rewrite translate_eq.",
            "VernacExtend",
            "b85dff9defc82024f8044f29afb185247f284814"
        ],
        [
            "repeat rewrite translate_lt; auto.",
            "VernacExtend",
            "ff0749ffc58f67ec707e03fd64f2b3688179c6c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem notbool_isfalse_istrue: forall x, is_false x -> is_true (notbool x).",
            "VernacStartTheoremProof",
            "781891e1397b660149b2171adfff6249004fd6e7"
        ],
        [
            "unfold is_false, is_true, notbool; intros; subst x.",
            "VernacExtend",
            "3fe000fd7f4421d2c0ee6b7b992b031b8b7f1fe4"
        ],
        [
            "rewrite eq_true.",
            "VernacExtend",
            "1066b69102f46f529de3e1f135bc7f35df936697"
        ],
        [
            "apply one_not_zero.",
            "VernacExtend",
            "3100bf57338f28e8a19aae3a83d8631989ffd4d8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem notbool_istrue_isfalse: forall x, is_true x -> is_false (notbool x).",
            "VernacStartTheoremProof",
            "ae69ad2f50d559ea75c68685d6cd9ebd323bbf08"
        ],
        [
            "unfold is_false, is_true, notbool; intros.",
            "VernacExtend",
            "54ca4bb268a008a1a7d15d80176d8b3eb4814883"
        ],
        [
            "generalize (eq_spec x zero).",
            "VernacExtend",
            "00cef7c308f4b21534eefafbb30ed81f8857f7b5"
        ],
        [
            "case (eq x zero); intro.",
            "VernacExtend",
            "33915f3fcc6f24231f774eccffcf575a905da83e"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ltu_range_test: forall x y, ltu x y = true -> unsigned y <= max_signed -> 0 <= signed x < unsigned y.",
            "VernacStartTheoremProof",
            "db5a0dec0ee0585dc9ab80f51d768f78fbfc4e2c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold ltu in H.",
            "VernacExtend",
            "2240a3877f776610e43c93d10a774fc5adc8583d"
        ],
        [
            "destruct (zlt (unsigned x) (unsigned y)); try discriminate.",
            "VernacExtend",
            "74c161ac529944e42a1eaf5fb5c92954f27aba4b"
        ],
        [
            "rewrite signed_eq_unsigned.",
            "VernacExtend",
            "0a5fff4d6bab5acacf68ae1a47394be387d69575"
        ],
        [
            "generalize (unsigned_range x).",
            "VernacExtend",
            "7892db8fc005b0cd4ce2d3aa05f16d9b6948c153"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lt_sub_overflow: forall x y, xor (sub_overflow x y zero) (negative (sub x y)) = if lt x y then one else zero.",
            "VernacStartTheoremProof",
            "58865708e4efc6eff70b816eabf459e7908fc5bf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold negative, sub_overflow, lt.",
            "VernacExtend",
            "b82d315726bc9d713615bbc3ef76b63c57f1e1ca"
        ],
        [
            "rewrite sub_signed.",
            "VernacExtend",
            "836169b6b1fe4c8a01cd3c1d96232c9c71bebb47"
        ],
        [
            "rewrite signed_zero.",
            "VernacExtend",
            "19d56ca0cd36da40c29724bb93cb20d76340e45c"
        ],
        [
            "rewrite Z.sub_0_r.",
            "VernacExtend",
            "7c1ebdca8a3d1d773bf152b4a568fe42ea3a288b"
        ],
        [
            "generalize (signed_range x) (signed_range y).",
            "VernacExtend",
            "a2bcf6d5a8bc710f72001c54a871728e9470ba4b"
        ],
        [
            "set (X := signed x); set (Y := signed y).",
            "VernacExtend",
            "8de248c11d283151190ff2f79a32c0e3d16ebc8a"
        ],
        [
            "intros RX RY.",
            "VernacExtend",
            "3c0f6a0a84851192cbff25ee1d54e93ae78ec1ed"
        ],
        [
            "unfold min_signed, max_signed in *.",
            "VernacExtend",
            "0a5ce9383c7eaa014ad10d6332461beadea6480f"
        ],
        [
            "generalize half_modulus_pos half_modulus_modulus; intros HM MM.",
            "VernacExtend",
            "4be60b0e7d852db0810818ad5f838485b5558f32"
        ],
        [
            "destruct (zle 0 (X - Y)).",
            "VernacExtend",
            "a6da82099772e266a63167535f866e6e6bec5687"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold proj_sumbool at 1; rewrite zle_true at 1 by omega.",
            "VernacExtend",
            "785af41bd1d613ea12f44caff5435209f8e9e46b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite (zlt_false _ X) by omega.",
            "VernacExtend",
            "e52a59a883aead102034b863b393d935cecada85"
        ],
        [
            "destruct (zlt (X - Y) half_modulus).",
            "VernacExtend",
            "3d5d62fe24d4d93adbbb672404cff4572db6823f"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold proj_sumbool; rewrite zle_true by omega.",
            "VernacExtend",
            "29e89f5f7dad9aab245cf35ef8c44e1ccc4af9fc"
        ],
        [
            "rewrite signed_repr.",
            "VernacExtend",
            "c2ed7b2fcebad79aff5b86b90cf7dda2f0d52061"
        ],
        [
            "rewrite zlt_false by omega.",
            "VernacExtend",
            "1a3d93f438781af1cb3b43101336d435afaef9a1"
        ],
        [
            "apply xor_idem.",
            "VernacExtend",
            "66aedcd283392792f8d46ba2677c964814c2c6ae"
        ],
        [
            "unfold min_signed, max_signed; omega.",
            "VernacExtend",
            "8a2751f9f2b8d684e1e27f3060479ed0bde88d25"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold proj_sumbool; rewrite zle_false by omega.",
            "VernacExtend",
            "563ea0aac829a5f0187fc2796eedba00a4fe94f4"
        ],
        [
            "replace (signed (repr (X - Y))) with (X - Y - modulus).",
            "VernacExtend",
            "8524199328f6882e0819da8ef35cb47ba59086c5"
        ],
        [
            "rewrite zlt_true by omega.",
            "VernacExtend",
            "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
        ],
        [
            "apply xor_idem.",
            "VernacExtend",
            "66aedcd283392792f8d46ba2677c964814c2c6ae"
        ],
        [
            "rewrite signed_repr_eq.",
            "VernacExtend",
            "c2cfde576a77d8f389586e6e52189a909c90cc47"
        ],
        [
            "replace ((X - Y) mod modulus) with (X - Y).",
            "VernacExtend",
            "062b01edbfbf83a9c0c55f42ffd6eb79af01d6a1"
        ],
        [
            "rewrite zlt_false; auto.",
            "VernacExtend",
            "a7f28c2617535b77e0035b271ce2717cc06a3d86"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Zmod_unique with 0; omega.",
            "VernacExtend",
            "de86d670da44cd24e9d53912454c7b42c913671f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold proj_sumbool at 2.",
            "VernacExtend",
            "465d7514ac44f69139c2efd45e22bf8ebbaee94d"
        ],
        [
            "rewrite zle_true at 1 by omega.",
            "VernacExtend",
            "88d0186469b0926fe9e0142cb30ee782984cdd98"
        ],
        [
            "rewrite andb_true_r.",
            "VernacExtend",
            "230918acbe37788580429f7b57db0df199d9fbfd"
        ],
        [
            "rewrite (zlt_true _ X) by omega.",
            "VernacExtend",
            "85f35fd11d67aa25b4e852e4c1c00fa12758ac9f"
        ],
        [
            "destruct (zlt (X - Y) (-half_modulus)).",
            "VernacExtend",
            "e046308052393547ba5a9baf968ecfc6d40d1f3b"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold proj_sumbool; rewrite zle_false by omega.",
            "VernacExtend",
            "563ea0aac829a5f0187fc2796eedba00a4fe94f4"
        ],
        [
            "replace (signed (repr (X - Y))) with (X - Y + modulus).",
            "VernacExtend",
            "a4d38dc929cb09549f3cdeaaaa1a400bb3259f22"
        ],
        [
            "rewrite zlt_false by omega.",
            "VernacExtend",
            "1a3d93f438781af1cb3b43101336d435afaef9a1"
        ],
        [
            "apply xor_zero.",
            "VernacExtend",
            "e734334fb5b575ecbd8f7a1548b8abb7ee09f8b4"
        ],
        [
            "rewrite signed_repr_eq.",
            "VernacExtend",
            "c2cfde576a77d8f389586e6e52189a909c90cc47"
        ],
        [
            "replace ((X - Y) mod modulus) with (X - Y + modulus).",
            "VernacExtend",
            "b0fe00c8c53d45142c3f487eb79890933f271a54"
        ],
        [
            "rewrite zlt_true by omega; auto.",
            "VernacExtend",
            "42bfbde4ec99fa739b6c889bd62d15938a265857"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Zmod_unique with (-1); omega.",
            "VernacExtend",
            "c29f0a74ce3aa1ad4978eb98e439e2b790582696"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold proj_sumbool; rewrite zle_true by omega.",
            "VernacExtend",
            "29e89f5f7dad9aab245cf35ef8c44e1ccc4af9fc"
        ],
        [
            "rewrite signed_repr.",
            "VernacExtend",
            "c2ed7b2fcebad79aff5b86b90cf7dda2f0d52061"
        ],
        [
            "rewrite zlt_true by omega.",
            "VernacExtend",
            "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
        ],
        [
            "apply xor_zero_l.",
            "VernacExtend",
            "8fc7cfc3f5ceb36eb1d7e5c4ab0d66e03b912e84"
        ],
        [
            "unfold min_signed, max_signed; omega.",
            "VernacExtend",
            "8a2751f9f2b8d684e1e27f3060479ed0bde88d25"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma signed_eq: forall x y, eq x y = zeq (signed x) (signed y).",
            "VernacStartTheoremProof",
            "2e9a351bd423b74e3e210287880f77f6e970446b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold eq.",
            "VernacExtend",
            "933b6273fd52e184377d2b6af7fe95b080d1399c"
        ],
        [
            "unfold proj_sumbool.",
            "VernacExtend",
            "9486e2b04f32f63b41268a30bc0b2a9032f4c304"
        ],
        [
            "destruct (zeq (unsigned x) (unsigned y)); destruct (zeq (signed x) (signed y)); auto.",
            "VernacExtend",
            "85971b172e13cf6366fb9de532b030624d98ca7c"
        ],
        [
            "elim n.",
            "VernacExtend",
            "c68f766a88bb5402d72ee6adaca953661a5d18b2"
        ],
        [
            "unfold signed.",
            "VernacExtend",
            "f99b13683b7fbccb713276bdf12a56c47fabc924"
        ],
        [
            "rewrite e; auto.",
            "VernacExtend",
            "485a49d71ef49f65ae1d9302c55b3a0ac9ac277b"
        ],
        [
            "elim n.",
            "VernacExtend",
            "c68f766a88bb5402d72ee6adaca953661a5d18b2"
        ],
        [
            "apply eqm_small_eq; auto with ints.",
            "VernacExtend",
            "fda35641cb4e1b5844a36977950123ddf290fe76"
        ],
        [
            "eapply eqm_trans.",
            "VernacExtend",
            "9f3fd86ee9c5373049e523208bcf1537c23fbe10"
        ],
        [
            "apply eqm_sym.",
            "VernacExtend",
            "f47e8ad0613afa49106216f940d8037154af13ba"
        ],
        [
            "apply eqm_signed_unsigned.",
            "VernacExtend",
            "d8614df8b73ff309ccafc1b69753d7e1944f658e"
        ],
        [
            "rewrite e.",
            "VernacExtend",
            "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
        ],
        [
            "apply eqm_signed_unsigned.",
            "VernacExtend",
            "d8614df8b73ff309ccafc1b69753d7e1944f658e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_lt: forall x y, negb (lt y x) = (lt x y || eq x y).",
            "VernacStartTheoremProof",
            "b9a97f5475be9f5b8a141578d5de3be1e06fffd1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold lt.",
            "VernacExtend",
            "2e821d407c03d5f5e572c51453fdc618d9dec364"
        ],
        [
            "rewrite signed_eq.",
            "VernacExtend",
            "c59332ba14b3f7e048c5bca9e5c81dccae050a0f"
        ],
        [
            "unfold proj_sumbool.",
            "VernacExtend",
            "9486e2b04f32f63b41268a30bc0b2a9032f4c304"
        ],
        [
            "destruct (zlt (signed y) (signed x)).",
            "VernacExtend",
            "30eff75205b0690ca36e2647c926a0b1277ae068"
        ],
        [
            "rewrite zlt_false.",
            "VernacExtend",
            "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
        ],
        [
            "rewrite zeq_false.",
            "VernacExtend",
            "dab8f9109b7a6d08485a19d2b305200449ea8478"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "destruct (zeq (signed x) (signed y)).",
            "VernacExtend",
            "00592a2d1c351b532313bf3c0a44b0d6a81a883c"
        ],
        [
            "rewrite zlt_false.",
            "VernacExtend",
            "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite zlt_true.",
            "VernacExtend",
            "b49135e183425368b4318af106711c28871bcc77"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_not: forall x y, lt y x = negb (lt x y) && negb (eq x y).",
            "VernacStartTheoremProof",
            "8ed1ca4d72eceb49562df455b14ee1abf2b22be8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- negb_orb.",
            "VernacExtend",
            "f344f3a934d257cce2bff71ac9c716cdd7d7955d"
        ],
        [
            "rewrite <- not_lt.",
            "VernacExtend",
            "efdfc76eae55da3f1e35ca9f3d3c99b97c12e286"
        ],
        [
            "rewrite negb_involutive.",
            "VernacExtend",
            "26794076710129c6559391372636b9da5e2f9672"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_ltu: forall x y, negb (ltu y x) = (ltu x y || eq x y).",
            "VernacStartTheoremProof",
            "5354490290e6536a4ba72084217b3801bec42b0e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold ltu, eq.",
            "VernacExtend",
            "21251fa7eae55af1a97cb3000ada70707c5da85b"
        ],
        [
            "destruct (zlt (unsigned y) (unsigned x)).",
            "VernacExtend",
            "2c6f00aa0b6e5159ccd4ae516bee64ac4143f07b"
        ],
        [
            "rewrite zlt_false.",
            "VernacExtend",
            "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
        ],
        [
            "rewrite zeq_false.",
            "VernacExtend",
            "dab8f9109b7a6d08485a19d2b305200449ea8478"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "destruct (zeq (unsigned x) (unsigned y)).",
            "VernacExtend",
            "8f4acbb0bbf577c78dea1fd316f3b2e914ffaa2d"
        ],
        [
            "rewrite zlt_false.",
            "VernacExtend",
            "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite zlt_true.",
            "VernacExtend",
            "b49135e183425368b4318af106711c28871bcc77"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltu_not: forall x y, ltu y x = negb (ltu x y) && negb (eq x y).",
            "VernacStartTheoremProof",
            "21038f0adb9bf90888d9b7a48bdd4cd8ebc8c4c6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- negb_orb.",
            "VernacExtend",
            "f344f3a934d257cce2bff71ac9c716cdd7d7955d"
        ],
        [
            "rewrite <- not_ltu.",
            "VernacExtend",
            "88dbefa9649de5a2156f5be831ac5f3fc7041025"
        ],
        [
            "rewrite negb_involutive.",
            "VernacExtend",
            "26794076710129c6559391372636b9da5e2f9672"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition no_overlap (ofs1: int) (sz1: Z) (ofs2: int) (sz2: Z) : bool := let x1 := unsigned ofs1 in let x2 := unsigned ofs2 in zlt (x1 + sz1) modulus && zlt (x2 + sz2) modulus && (zle (x1 + sz1) x2 || zle (x2 + sz2) x1).",
            "VernacDefinition",
            "6e90dc883980f89e916a0b5de7e68938352fb27c"
        ],
        [
            "Lemma no_overlap_sound: forall ofs1 sz1 ofs2 sz2 base, sz1 > 0 -> sz2 > 0 -> no_overlap ofs1 sz1 ofs2 sz2 = true -> unsigned (add base ofs1) + sz1 <= unsigned (add base ofs2) \\/ unsigned (add base ofs2) + sz2 <= unsigned (add base ofs1).",
            "VernacStartTheoremProof",
            "4b707e1105e834bdd1ccec0525beabaaa2f0314d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (andb_prop _ _ H1).",
            "VernacExtend",
            "d0213afb319c649384c768e669eecdc8c20bb71e"
        ],
        [
            "clear H1.",
            "VernacExtend",
            "c05bbc655b5fdcbbabbab72bd73c28fb300d5502"
        ],
        [
            "destruct (andb_prop _ _ H2).",
            "VernacExtend",
            "2a0c7d368df83e5735377f8a31180fe5a2270c11"
        ],
        [
            "clear H2.",
            "VernacExtend",
            "d86cdda4c02f9faf6d4c6694d967beddb27ce36a"
        ],
        [
            "apply proj_sumbool_true in H1.",
            "VernacExtend",
            "bcfd74a02f55c21f52d11a35d4f5c401886636f1"
        ],
        [
            "apply proj_sumbool_true in H4.",
            "VernacExtend",
            "768a1567fc04f271096c8c56bc6e1c05e039439c"
        ],
        [
            "assert (unsigned ofs1 + sz1 <= unsigned ofs2 \\/ unsigned ofs2 + sz2 <= unsigned ofs1).",
            "VernacExtend",
            "a481b6573f5745e8700d6d3ec0f637695f936fc2"
        ],
        [
            "destruct (orb_prop _ _ H3).",
            "VernacExtend",
            "c0c2c2752e6b512c419f9e117ca2bf5dc5036872"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "eapply proj_sumbool_true; eauto.",
            "VernacExtend",
            "a33be217d620004d8efbcff5e8cceb9b2bbf4498"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "eapply proj_sumbool_true; eauto.",
            "VernacExtend",
            "a33be217d620004d8efbcff5e8cceb9b2bbf4498"
        ],
        [
            "clear H3.",
            "VernacExtend",
            "fc50f4d83926cbda2c6b6c4c8fff0c14162e2a3f"
        ],
        [
            "generalize (unsigned_range ofs1) (unsigned_range ofs2).",
            "VernacExtend",
            "488d7059c1351ec5c8c4005b626536d4a7949413"
        ],
        [
            "intros P Q.",
            "VernacExtend",
            "7751791de3f7d3a51bb606370c6c0e8f8866edb8"
        ],
        [
            "generalize (unsigned_add_either base ofs1) (unsigned_add_either base ofs2).",
            "VernacExtend",
            "f0aec889d2c251e9d91d13ce96be4115c5268759"
        ],
        [
            "intros [C|C] [D|D]; omega.",
            "VernacExtend",
            "1d39f403ba00ecc87b6ca50139cc2a93c395f4d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Zsize (x: Z) : Z := match x with | Zpos p => Zpos (Pos.size p) | _ => 0 end.",
            "VernacDefinition",
            "d550390d7728732f257f917b4ae1db066efae012"
        ],
        [
            "Definition size (x: int) : Z := Zsize (unsigned x).",
            "VernacDefinition",
            "c3cdb1a4c21eeaf304d15ed2a73750c738342528"
        ],
        [
            "Remark Zsize_pos: forall x, 0 <= Zsize x.",
            "VernacStartTheoremProof",
            "bfda8f7733af310307739e52d520bea3d8127221"
        ],
        [
            "destruct x; simpl.",
            "VernacExtend",
            "b0c3c03e2d0a8fa13c533c8a79c2c6b3067d60db"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "compute; intuition congruence.",
            "VernacExtend",
            "b1e4ec174532a4bdd5fe31fcded6521ccfff32fe"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark Zsize_pos': forall x, 0 < x -> 0 < Zsize x.",
            "VernacStartTheoremProof",
            "165931d7e2c9d42035858fcad6743ba6b2448fda"
        ],
        [
            "destruct x; simpl; intros; try discriminate.",
            "VernacExtend",
            "25c1e0a3b8222c78fd07571ecc83f89d370b2dba"
        ],
        [
            "compute; auto.",
            "VernacExtend",
            "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zsize_shiftin: forall b x, 0 < x -> Zsize (Zshiftin b x) = Z.succ (Zsize x).",
            "VernacStartTheoremProof",
            "c2554e4eb0a61469461e41e24a094cb943439a26"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct x; compute in H; try discriminate.",
            "VernacExtend",
            "3dc107643cfce88330e3712ae62e03c615abd95b"
        ],
        [
            "destruct b.",
            "VernacExtend",
            "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
        ],
        [
            "change (Zshiftin true (Zpos p)) with (Zpos (p~1)).",
            "VernacExtend",
            "889503c714b92a51a094fefd06171e228927b86e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite Pos.add_1_r; auto.",
            "VernacExtend",
            "649a0debcb876cd2156eb3af7c0b9a15327d14f7"
        ],
        [
            "change (Zshiftin false (Zpos p)) with (Zpos (p~0)).",
            "VernacExtend",
            "3d3f39773589b0482b814997e8888c048b936351"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite Pos.add_1_r; auto.",
            "VernacExtend",
            "649a0debcb876cd2156eb3af7c0b9a15327d14f7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Ztestbit_size_1: forall x, 0 < x -> Z.testbit x (Z.pred (Zsize x)) = true.",
            "VernacStartTheoremProof",
            "1d34e7a07bfb5d0c03e3c9dd8ceec7df1df0292e"
        ],
        [
            "intros x0 POS0; pattern x0; apply Zshiftin_pos_ind; auto.",
            "VernacExtend",
            "1661991e6d8ff61a8c084aa05d841704b3d07a33"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite Zsize_shiftin; auto.",
            "VernacExtend",
            "9d9f483d419417465a27db45778b4043aee23ca7"
        ],
        [
            "replace (Z.pred (Z.succ (Zsize x))) with (Z.succ (Z.pred (Zsize x))) by omega.",
            "VernacExtend",
            "8ed51203fb237afb97f412d4b9223079284a527c"
        ],
        [
            "rewrite Ztestbit_shiftin_succ.",
            "VernacExtend",
            "6e01c7d151fa41f8550b7895c7efdc3f710940b0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "generalize (Zsize_pos' x H); omega.",
            "VernacExtend",
            "a8c1b5ae7b78a73938119c1d537acaaf97a7fdae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Ztestbit_size_2: forall x, 0 <= x -> forall i, i >= Zsize x -> Z.testbit x i = false.",
            "VernacStartTheoremProof",
            "1b1de462f6cd78f71088ba815dfbbf36db14d5af"
        ],
        [
            "intros x0 POS0.",
            "VernacExtend",
            "8d08c5cc6617f2ba15783e199650e39d07b15d67"
        ],
        [
            "destruct (zeq x0 0).",
            "VernacExtend",
            "2f6d64c3cabda25461ed897405742af4507be03c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst x0; intros.",
            "VernacExtend",
            "e4843ae900c016164de667b282884383058d6ae0"
        ],
        [
            "apply Ztestbit_0.",
            "VernacExtend",
            "9eabae5755d85655c33afa1ead756f180af22081"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "pattern x0; apply Zshiftin_pos_ind.",
            "VernacExtend",
            "c3707464eee6e8ad514f629d27e42ebe4b37fb5e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "change 1 with (Zshiftin true 0).",
            "VernacExtend",
            "63d775e07381796f0f76df4363c8a8a807d80aba"
        ],
        [
            "rewrite Ztestbit_shiftin.",
            "VernacExtend",
            "4566040421bf5d63fd1949bb270b1f6e45af96d4"
        ],
        [
            "rewrite zeq_false.",
            "VernacExtend",
            "dab8f9109b7a6d08485a19d2b305200449ea8478"
        ],
        [
            "apply Ztestbit_0.",
            "VernacExtend",
            "9eabae5755d85655c33afa1ead756f180af22081"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite Zsize_shiftin in H1; auto.",
            "VernacExtend",
            "b743509517a01d8ab0b22104d8cf11cfa90a7392"
        ],
        [
            "generalize (Zsize_pos' _ H); intros.",
            "VernacExtend",
            "c5146f1c615405b92aed91f51b3ef09170e5e750"
        ],
        [
            "rewrite Ztestbit_shiftin.",
            "VernacExtend",
            "4566040421bf5d63fd1949bb270b1f6e45af96d4"
        ],
        [
            "rewrite zeq_false.",
            "VernacExtend",
            "dab8f9109b7a6d08485a19d2b305200449ea8478"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zsize_interval_1: forall x, 0 <= x -> 0 <= x < two_p (Zsize x).",
            "VernacStartTheoremProof",
            "af176bc39e5c8a31891805968fd09edc1692f4fe"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (x = x mod (two_p (Zsize x))).",
            "VernacExtend",
            "93ec54e400750a59f1a6fd9ceff80dfbc179d775"
        ],
        [
            "apply equal_same_bits; intros.",
            "VernacExtend",
            "73ce991e4619c1e5d9bbd33ccb23dec8610abb80"
        ],
        [
            "rewrite Ztestbit_mod_two_p; auto.",
            "VernacExtend",
            "a7ace985b22656c74fcf94ae5275d4190a679b6a"
        ],
        [
            "destruct (zlt i (Zsize x)).",
            "VernacExtend",
            "e3dd564a30279c32f3ea5419733b8f0c7a024761"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply Ztestbit_size_2; auto.",
            "VernacExtend",
            "436ffb59a253954aba53784a6d46fa498ac2ddcc"
        ],
        [
            "apply Zsize_pos; auto.",
            "VernacExtend",
            "98d75b21aebdacf5a61cb26a1dfff792bc09f84d"
        ],
        [
            "rewrite H0 at 1.",
            "VernacExtend",
            "4e52b21df18c8b0210ec90283fd944b8533f66e5"
        ],
        [
            "rewrite H0 at 3.",
            "VernacExtend",
            "a7125203c42147819778947bf5616f8429930219"
        ],
        [
            "apply Z_mod_lt.",
            "VernacExtend",
            "d33d3cab9911c0f11554b4e753af00e7b5fcc4ca"
        ],
        [
            "apply two_p_gt_ZERO.",
            "VernacExtend",
            "9690045ae69e536e22b7db6c37ee985732e7c4b7"
        ],
        [
            "apply Zsize_pos; auto.",
            "VernacExtend",
            "98d75b21aebdacf5a61cb26a1dfff792bc09f84d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zsize_interval_2: forall x n, 0 <= n -> 0 <= x < two_p n -> n >= Zsize x.",
            "VernacStartTheoremProof",
            "08abb96cd99c0e29e6890fb25cb8ddfc7d6c28df"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "set (N := Z.to_nat n).",
            "VernacExtend",
            "a52b8c4619412f1b5fdd75ea6be1ca05dbccf8f3"
        ],
        [
            "assert (Z.of_nat N = n) by (apply Z2Nat.id; auto).",
            "VernacExtend",
            "93323640f845475b9c8caf3aa358a432bd7d3365"
        ],
        [
            "rewrite <- H1 in H0.",
            "VernacExtend",
            "42d08cd43ac5900fc8cb5b0f113d48246a828cad"
        ],
        [
            "rewrite <- two_power_nat_two_p in H0.",
            "VernacExtend",
            "88e9d0c3ced8e3349526f33f78ce465c7930dba4"
        ],
        [
            "destruct (zeq x 0).",
            "VernacExtend",
            "88d963c1277323a031a00ba48112440efb13faf9"
        ],
        [
            "subst x; simpl; omega.",
            "VernacExtend",
            "dcd1f26b31530315243f673a3f9e90b698e98ba0"
        ],
        [
            "destruct (zlt n (Zsize x)); auto.",
            "VernacExtend",
            "7b08b8c9212a169a6e46a782326313314332d2f1"
        ],
        [
            "exploit (Ztestbit_above N x (Z.pred (Zsize x))).",
            "VernacExtend",
            "bda0ac54e9660661e19ce3e5a6721b21a3d9180f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite Ztestbit_size_1.",
            "VernacExtend",
            "03244c94fb6e60e86848d17676c660e43a566e13"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zsize_monotone: forall x y, 0 <= x <= y -> Zsize x <= Zsize y.",
            "VernacStartTheoremProof",
            "232628df0f39732d203e04db9a7de3a3fc2b4816"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Z.ge_le.",
            "VernacExtend",
            "3351a334448d564f67359e48646d6511e5ababa4"
        ],
        [
            "apply Zsize_interval_2.",
            "VernacExtend",
            "57cdeefbfd8b6d9a2332615fe6d299bfd47fadac"
        ],
        [
            "apply Zsize_pos.",
            "VernacExtend",
            "e0be7dbcd986b447681231756fa7f65928cf7233"
        ],
        [
            "exploit (Zsize_interval_1 y).",
            "VernacExtend",
            "6c569471b37205c95e8dc6c7fa4ad1d8c2445ac0"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem size_zero: size zero = 0.",
            "VernacStartTheoremProof",
            "23fb2de1edb99c9c82e2ac0fb07a84b0a210c6b0"
        ],
        [
            "unfold size; rewrite unsigned_zero; auto.",
            "VernacExtend",
            "d1603591863d2e1036dd0537a3e5a8d5c8cf5316"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem bits_size_1: forall x, x = zero \\/ testbit x (Z.pred (size x)) = true.",
            "VernacStartTheoremProof",
            "c69342a09656cc3a5514f0f2956416e2b98065dd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (zeq (unsigned x) 0).",
            "VernacExtend",
            "628159a3cb814b8e66d7c4f7b4c4fa49182510c5"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "rewrite <- (repr_unsigned x).",
            "VernacExtend",
            "393ec19ffbe8f172593c1f542e8d6811517b657c"
        ],
        [
            "rewrite e; auto.",
            "VernacExtend",
            "485a49d71ef49f65ae1d9302c55b3a0ac9ac277b"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "apply Ztestbit_size_1.",
            "VernacExtend",
            "a04694b64334d0cca8b9eebeacccce16c6ec6c9e"
        ],
        [
            "generalize (unsigned_range x); omega.",
            "VernacExtend",
            "82d43e79c3776eb155d8ee4a39923b4051549c3b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem bits_size_2: forall x i, size x <= i -> testbit x i = false.",
            "VernacStartTheoremProof",
            "89a84ecb28b2fb375b8282dd9448d9d38b7c636c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Ztestbit_size_2.",
            "VernacExtend",
            "cfe34ec7b19f7ed59fdfb6fa70d166365769a150"
        ],
        [
            "generalize (unsigned_range x); omega.",
            "VernacExtend",
            "82d43e79c3776eb155d8ee4a39923b4051549c3b"
        ],
        [
            "fold (size x); omega.",
            "VernacExtend",
            "c21a8c6c762b6344d724e27fda0879bd887ded0b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem size_range: forall x, 0 <= size x <= zwordsize.",
            "VernacStartTheoremProof",
            "cf313c13c3fd60f052594fc03385e541841302d7"
        ],
        [
            "intros; split.",
            "VernacExtend",
            "786909835bea92a2bb1ac0d0634a6eb379d5f275"
        ],
        [
            "apply Zsize_pos.",
            "VernacExtend",
            "e0be7dbcd986b447681231756fa7f65928cf7233"
        ],
        [
            "destruct (bits_size_1 x).",
            "VernacExtend",
            "0bdcc6c0b12802684d0a467eee912e202cc3fb18"
        ],
        [
            "subst x; unfold size; rewrite unsigned_zero; simpl.",
            "VernacExtend",
            "63154fc08324846482341ba47e041e84a9436206"
        ],
        [
            "generalize wordsize_pos; omega.",
            "VernacExtend",
            "1be2fda6bfa5aa53c9fdc4049e4df24e68556740"
        ],
        [
            "destruct (zle (size x) zwordsize); auto.",
            "VernacExtend",
            "7b8ae921398d9a13359e8fdc0225e6f07a6e9e30"
        ],
        [
            "rewrite bits_above in H.",
            "VernacExtend",
            "43dede375aae00345c6425b096791b2af6969766"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem bits_size_3: forall x n, 0 <= n -> (forall i, n <= i < zwordsize -> testbit x i = false) -> size x <= n.",
            "VernacStartTheoremProof",
            "c515d6b79a76f8094c0e9a5228aa610bd7eaadd0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (zle (size x) n).",
            "VernacExtend",
            "72e6cf8f06835a82df2a47619da283f78b8f57b6"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct (bits_size_1 x).",
            "VernacExtend",
            "0bdcc6c0b12802684d0a467eee912e202cc3fb18"
        ],
        [
            "subst x.",
            "VernacExtend",
            "76c28b0a6a4a7c1568fa30e26ee411c5e5d54968"
        ],
        [
            "unfold size; rewrite unsigned_zero; assumption.",
            "VernacExtend",
            "39adb1f12516f73716cf21905b7ce4c9d3234861"
        ],
        [
            "rewrite (H0 (Z.pred (size x))) in H1.",
            "VernacExtend",
            "6abd1f25085dba2e1846743d4fa237676cad7c8e"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "generalize (size_range x); omega.",
            "VernacExtend",
            "88b5ebec5467973c3f71227148fa213c7a6ec5cf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem bits_size_4: forall x n, 0 <= n -> testbit x (Z.pred n) = true -> (forall i, n <= i < zwordsize -> testbit x i = false) -> size x = n.",
            "VernacStartTheoremProof",
            "4f0877dfea18f79f075b8cdb8abfe3e83ffb87b4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (size x <= n).",
            "VernacExtend",
            "854996d7009280201f1c2ec68b72eeef62e9f642"
        ],
        [
            "apply bits_size_3; auto.",
            "VernacExtend",
            "db3eb45cce87343e9fe375edd32760a4f3aa2748"
        ],
        [
            "destruct (zlt (size x) n).",
            "VernacExtend",
            "a29cbee8c7ce3601e9289de68983cd2cfee25135"
        ],
        [
            "rewrite bits_size_2 in H0.",
            "VernacExtend",
            "84ef62f9c2f7030fd9d9ac8ec61b0d636b7766a5"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem size_interval_1: forall x, 0 <= unsigned x < two_p (size x).",
            "VernacStartTheoremProof",
            "469bf344c70fb6e8102a3a7ffb2906bf313e26f7"
        ],
        [
            "intros; apply Zsize_interval_1.",
            "VernacExtend",
            "8587bbaba5ffbaaaf81accd45e0e15aee4063bcf"
        ],
        [
            "generalize (unsigned_range x); omega.",
            "VernacExtend",
            "82d43e79c3776eb155d8ee4a39923b4051549c3b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem size_interval_2: forall x n, 0 <= n -> 0 <= unsigned x < two_p n -> n >= size x.",
            "VernacStartTheoremProof",
            "9a450b22a139c25b530d2fb0078b9f1f98cce053"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Zsize_interval_2; auto.",
            "VernacExtend",
            "d9c176c2f4cc5a77565aae7d2ce21222a3736e2e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem size_and: forall a b, size (and a b) <= Z.min (size a) (size b).",
            "VernacStartTheoremProof",
            "9d741cc78f3c0eb21c678bcdcfe005f8bdf7a6fa"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (0 <= Z.min (size a) (size b)).",
            "VernacExtend",
            "2f88a0fc87e10f4ef96c0bad21a3dee4f70ded77"
        ],
        [
            "generalize (size_range a) (size_range b).",
            "VernacExtend",
            "45e8819109904cd158ae25adc1d3f89163113115"
        ],
        [
            "zify; omega.",
            "VernacExtend",
            "5fb0df05710c307ca01829a575fcf81498a16c8a"
        ],
        [
            "apply bits_size_3.",
            "VernacExtend",
            "1de3c79008de2e4d76541397aa09370f2a8e065a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite bits_and.",
            "VernacExtend",
            "c7f6e515ba49aa8a1f1db7a7769fa71e6206de05"
        ],
        [
            "zify.",
            "VernacExtend",
            "1cc314461888aca2a8d9ab0ac2e16f28edc6c9bb"
        ],
        [
            "subst z z0.",
            "VernacExtend",
            "1419978260dd01a1d45bb3ebc86581eea5da4a36"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "rewrite (bits_size_2 a).",
            "VernacExtend",
            "616421b4bd536e4f7b342082bdf4c751e9babd13"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite (bits_size_2 b).",
            "VernacExtend",
            "29af8cde270eb9afe962594a14dce6fa60ee2a74"
        ],
        [
            "apply andb_false_r.",
            "VernacExtend",
            "96acabd8a60f7c2e82c0ec27c34e893436485a16"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary and_interval: forall a b, 0 <= unsigned (and a b) < two_p (Z.min (size a) (size b)).",
            "VernacStartTheoremProof",
            "b44f3bf0488921a8c60415a01dcc5563647b965c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (size_interval_1 (and a b)); intros.",
            "VernacExtend",
            "0caed9c72911a9850194f93ff7b51db571adbcd1"
        ],
        [
            "assert (two_p (size (and a b)) <= two_p (Z.min (size a) (size b))).",
            "VernacExtend",
            "fb6c9a329937958879c42e5758ca2c7c447005dc"
        ],
        [
            "apply two_p_monotone.",
            "VernacExtend",
            "4511487dda240968dd836bc9f28d13e8e65a4f4d"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "generalize (size_range (and a b)); omega.",
            "VernacExtend",
            "ead2c802f68065916ea3e896a924845943bd2e16"
        ],
        [
            "apply size_and.",
            "VernacExtend",
            "0f2939c97e3f57cd5b125144ab238fd79b1a45c3"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem size_or: forall a b, size (or a b) = Z.max (size a) (size b).",
            "VernacStartTheoremProof",
            "40809b2366896e2e6860040d8f9d28b0fb6f6184"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (size_range a) (size_range b); intros.",
            "VernacExtend",
            "f5a57c09f01031b0bbfe97b341bdb3af28c8da90"
        ],
        [
            "destruct (bits_size_1 a).",
            "VernacExtend",
            "404df1b025847b507905a070d42f0acabde47ce1"
        ],
        [
            "subst a.",
            "VernacExtend",
            "d7670e5f9c196bd417b16b29da3532f33d34884d"
        ],
        [
            "rewrite size_zero.",
            "VernacExtend",
            "ea7b9ff3445ed29e094cb4b0f536bb46643731f8"
        ],
        [
            "rewrite or_zero_l.",
            "VernacExtend",
            "f72609061754bb9f2a9f6ef8001ccef85c27eee1"
        ],
        [
            "zify; omega.",
            "VernacExtend",
            "5fb0df05710c307ca01829a575fcf81498a16c8a"
        ],
        [
            "destruct (bits_size_1 b).",
            "VernacExtend",
            "a5eef0ca417e0614c9f5dafdeb3e7a1ba7a8fc58"
        ],
        [
            "subst b.",
            "VernacExtend",
            "f6a3780afda85f3eb20e4cd9f3da775990bbc7d3"
        ],
        [
            "rewrite size_zero.",
            "VernacExtend",
            "ea7b9ff3445ed29e094cb4b0f536bb46643731f8"
        ],
        [
            "rewrite or_zero.",
            "VernacExtend",
            "951c9b2e3a5aea20b35e41858c06f75c4e387410"
        ],
        [
            "zify; omega.",
            "VernacExtend",
            "5fb0df05710c307ca01829a575fcf81498a16c8a"
        ],
        [
            "zify.",
            "VernacExtend",
            "1cc314461888aca2a8d9ab0ac2e16f28edc6c9bb"
        ],
        [
            "destruct H3 as [[P Q] | [P Q]]; subst.",
            "VernacExtend",
            "29289b0547fb830ce082d176d7cc026664ddb08d"
        ],
        [
            "apply bits_size_4.",
            "VernacExtend",
            "33d4ec4cb249d6c132301c543062401fb7e647bf"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "rewrite bits_or.",
            "VernacExtend",
            "561b2d931153f363b82ca884be7e16f4ff786ff2"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "apply orb_true_r.",
            "VernacExtend",
            "f6c982e3797841078d730c93c95d18e257302343"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite bits_or.",
            "VernacExtend",
            "561b2d931153f363b82ca884be7e16f4ff786ff2"
        ],
        [
            "rewrite !bits_size_2.",
            "VernacExtend",
            "26f3e5535f28c3f1ffe882d771ec3165e8e366c6"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply bits_size_4.",
            "VernacExtend",
            "33d4ec4cb249d6c132301c543062401fb7e647bf"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "rewrite bits_or.",
            "VernacExtend",
            "561b2d931153f363b82ca884be7e16f4ff786ff2"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "apply orb_true_l.",
            "VernacExtend",
            "6449f3a5dbe39e6583ea277b66e6a45dccb846ec"
        ],
        [
            "destruct (zeq (size a) 0).",
            "VernacExtend",
            "0f2b22b06d3a7824b3badb79650a82670706e496"
        ],
        [
            "unfold testbit in H1.",
            "VernacExtend",
            "57af6564e620ce0a48c8ec819945fcbda0f8c6d4"
        ],
        [
            "rewrite Z.testbit_neg_r in H1.",
            "VernacExtend",
            "477306b76eacf7f3a24d904a2b127c28b843fdd8"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite bits_or.",
            "VernacExtend",
            "561b2d931153f363b82ca884be7e16f4ff786ff2"
        ],
        [
            "rewrite !bits_size_2.",
            "VernacExtend",
            "26f3e5535f28c3f1ffe882d771ec3165e8e366c6"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary or_interval: forall a b, 0 <= unsigned (or a b) < two_p (Z.max (size a) (size b)).",
            "VernacStartTheoremProof",
            "6d10624b3d1d7e389b8daa0278c49ce5886fb89a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- size_or.",
            "VernacExtend",
            "2b9e4a09d0436e9049ae72e32b5a804d83dfff3f"
        ],
        [
            "apply size_interval_1.",
            "VernacExtend",
            "f7b2477b01ce943c78e5256910bd43d887b781d9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem size_xor: forall a b, size (xor a b) <= Z.max (size a) (size b).",
            "VernacStartTheoremProof",
            "ecf13d75ef61130e9db9b1eae3b61e745f819d05"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (0 <= Z.max (size a) (size b)).",
            "VernacExtend",
            "0414900a86173f74d461a0f7a5cf281b453fb98c"
        ],
        [
            "generalize (size_range a) (size_range b).",
            "VernacExtend",
            "45e8819109904cd158ae25adc1d3f89163113115"
        ],
        [
            "zify; omega.",
            "VernacExtend",
            "5fb0df05710c307ca01829a575fcf81498a16c8a"
        ],
        [
            "apply bits_size_3.",
            "VernacExtend",
            "1de3c79008de2e4d76541397aa09370f2a8e065a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite bits_xor.",
            "VernacExtend",
            "9f72434af7d2239af76b40dbbf1067d96b9f7000"
        ],
        [
            "rewrite !bits_size_2.",
            "VernacExtend",
            "26f3e5535f28c3f1ffe882d771ec3165e8e366c6"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "zify; omega.",
            "VernacExtend",
            "5fb0df05710c307ca01829a575fcf81498a16c8a"
        ],
        [
            "zify; omega.",
            "VernacExtend",
            "5fb0df05710c307ca01829a575fcf81498a16c8a"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary xor_interval: forall a b, 0 <= unsigned (xor a b) < two_p (Z.max (size a) (size b)).",
            "VernacStartTheoremProof",
            "676cc606b692b943e189a1545677dd7d0c3e2b81"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (size_interval_1 (xor a b)); intros.",
            "VernacExtend",
            "17c931d36dc8879c5ecf58c0cc00d9120577e1d1"
        ],
        [
            "assert (two_p (size (xor a b)) <= two_p (Z.max (size a) (size b))).",
            "VernacExtend",
            "002f849022e279c63f21030229b0aeaea167247c"
        ],
        [
            "apply two_p_monotone.",
            "VernacExtend",
            "4511487dda240968dd836bc9f28d13e8e65a4f4d"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "generalize (size_range (xor a b)); omega.",
            "VernacExtend",
            "99d3ba0dd6abd1693d622beb9796ad4c1a612768"
        ],
        [
            "apply size_xor.",
            "VernacExtend",
            "0ea6f9432d19d865f9aea815bd9091e727ea322c"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Make.",
            "VernacEndSegment",
            "158dcf795fe84f422408437686b9ec9e7417690b"
        ],
        [
            "Module Wordsize_32.",
            "VernacDefineModule",
            "ca54b70a3ea8c3edb76bc1009a9311714e4d384b"
        ],
        [
            "Definition wordsize := 32%nat.",
            "VernacDefinition",
            "c3661c70c12a3635c0ff326ff6cd20020e8d9f55"
        ],
        [
            "Remark wordsize_not_zero: wordsize <> 0%nat.",
            "VernacStartTheoremProof",
            "3aa2c261728bb6a0c3690d82d1ca8985462db19a"
        ],
        [
            "unfold wordsize; congruence.",
            "VernacExtend",
            "2a392e1352012e815f48aeaab33b94f0e9991c63"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Wordsize_32.",
            "VernacEndSegment",
            "00efa228c7aaa8863d580dbcaa59c79ab41794a6"
        ],
        [
            "Strategy opaque [Wordsize_32.wordsize].",
            "VernacSetStrategy",
            "a044e3083fa60288842d91c3ae71cad5e13d6593"
        ],
        [
            "Module Int := Make(Wordsize_32).",
            "VernacDefineModule",
            "489ef5bef06d20579c37e72479be6c11d9e02217"
        ],
        [
            "Strategy 0 [Wordsize_32.wordsize].",
            "VernacSetStrategy",
            "433101243182d4363af687f3d3760b5250798134"
        ],
        [
            "Notation int := Int.int.",
            "VernacSyntacticDefinition",
            "89845a6408f70ad66d44772aa96fd8246feb5c74"
        ],
        [
            "Remark int_wordsize_divides_modulus: Z.divide (Z.of_nat Int.wordsize) Int.modulus.",
            "VernacStartTheoremProof",
            "1c1e92de3c0a38a2c217840940747bef9830b33c"
        ],
        [
            "exists (two_p (32-5)); reflexivity.",
            "VernacExtend",
            "2027381e36d74af155e472c3630d0af5844960fe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Module Wordsize_8.",
            "VernacDefineModule",
            "f2faa8b95f2db2e2137311597f25f575bf03b01d"
        ],
        [
            "Definition wordsize := 8%nat.",
            "VernacDefinition",
            "2c549794dcc276b55a8caa79cc9972dc6afd8d63"
        ],
        [
            "Remark wordsize_not_zero: wordsize <> 0%nat.",
            "VernacStartTheoremProof",
            "3aa2c261728bb6a0c3690d82d1ca8985462db19a"
        ],
        [
            "unfold wordsize; congruence.",
            "VernacExtend",
            "2a392e1352012e815f48aeaab33b94f0e9991c63"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Wordsize_8.",
            "VernacEndSegment",
            "1de33168f96ace9954a608d88f98b27b006aaa85"
        ],
        [
            "Strategy opaque [Wordsize_8.wordsize].",
            "VernacSetStrategy",
            "7e8b65bd8376b36fbd3b3c8c26c884e6bf47eeb5"
        ],
        [
            "Module Byte := Make(Wordsize_8).",
            "VernacDefineModule",
            "09b1092bab4330e6925b57fa98b6901746103667"
        ],
        [
            "Strategy 0 [Wordsize_8.wordsize].",
            "VernacSetStrategy",
            "4d60b236ba0954120d0199045af42440e187f8f0"
        ],
        [
            "Notation byte := Byte.int.",
            "VernacSyntacticDefinition",
            "a314afdf7cb9ba35a283c25717b64cc251627262"
        ],
        [
            "Module Wordsize_64.",
            "VernacDefineModule",
            "aefcc86c1801cbcec147b9b075ed90bd9166f75f"
        ],
        [
            "Definition wordsize := 64%nat.",
            "VernacDefinition",
            "09859282b6a14d57e651eff8c8fa08486d1f104f"
        ],
        [
            "Remark wordsize_not_zero: wordsize <> 0%nat.",
            "VernacStartTheoremProof",
            "3aa2c261728bb6a0c3690d82d1ca8985462db19a"
        ],
        [
            "unfold wordsize; congruence.",
            "VernacExtend",
            "2a392e1352012e815f48aeaab33b94f0e9991c63"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Wordsize_64.",
            "VernacEndSegment",
            "939125c99a08bff2f744ca1497b67e3fe1298814"
        ],
        [
            "Strategy opaque [Wordsize_64.wordsize].",
            "VernacSetStrategy",
            "08f6cdcbf4138119feed5530c6c55c8649def4bc"
        ],
        [
            "Module Int64.",
            "VernacDefineModule",
            "257f0fca790389b2ab62157f24a730a96219759d"
        ],
        [
            "Include Make(Wordsize_64).",
            "VernacInclude",
            "32ed24c486123568954e7783aa2f3005599e78e8"
        ],
        [
            "Definition iwordsize': Int.int := Int.repr zwordsize.",
            "VernacDefinition",
            "e8b73983e98a78545a881f352dcf257a9c0aba26"
        ],
        [
            "Definition shl' (x: int) (y: Int.int): int := repr (Z.shiftl (unsigned x) (Int.unsigned y)).",
            "VernacDefinition",
            "e65ae29987b41262ec30a9607189fa0ad849acb1"
        ],
        [
            "Definition shru' (x: int) (y: Int.int): int := repr (Z.shiftr (unsigned x) (Int.unsigned y)).",
            "VernacDefinition",
            "f5bfb617f805fdc847b7352776084ab8a8b8fe48"
        ],
        [
            "Definition shr' (x: int) (y: Int.int): int := repr (Z.shiftr (signed x) (Int.unsigned y)).",
            "VernacDefinition",
            "d512835db0d2a0b75fbc6dd68da417527ab85aab"
        ],
        [
            "Definition rol' (x: int) (y: Int.int): int := rol x (repr (Int.unsigned y)).",
            "VernacDefinition",
            "d032b996c1bb2db73c8c0408c10abb17aa85f942"
        ],
        [
            "Definition shrx' (x: int) (y: Int.int): int := divs x (shl' one y).",
            "VernacDefinition",
            "d35d5a51f8f55a034c9f39c42155d4f59ece5c22"
        ],
        [
            "Definition shr_carry' (x: int) (y: Int.int): int := if lt x zero && negb (eq (and x (sub (shl' one y) one)) zero) then one else zero.",
            "VernacDefinition",
            "32560c4bee14a5ece786bcceb51997c00f216025"
        ],
        [
            "Lemma bits_shl': forall x y i, 0 <= i < zwordsize -> testbit (shl' x y) i = if zlt i (Int.unsigned y) then false else testbit x (i - Int.unsigned y).",
            "VernacStartTheoremProof",
            "411ad37f5ddfec83b09a17e8624797d4a151c7a0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold shl'.",
            "VernacExtend",
            "62b7a04ea789f661d15b3936f29f401975e1ac2f"
        ],
        [
            "rewrite testbit_repr; auto.",
            "VernacExtend",
            "d20143ed773e39c9c2d38dc1a41b649eadbc95c6"
        ],
        [
            "destruct (zlt i (Int.unsigned y)).",
            "VernacExtend",
            "f439089e63ef470bcf323a1f4b3305d73e56134e"
        ],
        [
            "apply Z.shiftl_spec_low.",
            "VernacExtend",
            "c3b358c742be3eb903da98ae78625599b3c5305a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply Z.shiftl_spec_high.",
            "VernacExtend",
            "7bc7482bd58465bc21f5a7184ed17e365f00da26"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bits_shru': forall x y i, 0 <= i < zwordsize -> testbit (shru' x y) i = if zlt (i + Int.unsigned y) zwordsize then testbit x (i + Int.unsigned y) else false.",
            "VernacStartTheoremProof",
            "4bd091302a0a342e085694bd668cc3f005185cf9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold shru'.",
            "VernacExtend",
            "bccb6cd64bef022c79587a9f22baadb223bf9345"
        ],
        [
            "rewrite testbit_repr; auto.",
            "VernacExtend",
            "d20143ed773e39c9c2d38dc1a41b649eadbc95c6"
        ],
        [
            "rewrite Z.shiftr_spec.",
            "VernacExtend",
            "80c165d6ba099c7565e4b5045695449745807abf"
        ],
        [
            "fold (testbit x (i + Int.unsigned y)).",
            "VernacExtend",
            "c17671f39cbd13990fbbea2d12a14230f89b88b7"
        ],
        [
            "destruct (zlt (i + Int.unsigned y) zwordsize).",
            "VernacExtend",
            "fe5b63a10662e9e75a91e9f4ce7bca51d49af5fb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply bits_above; auto.",
            "VernacExtend",
            "68e2d5a5c1b1136e70a4ff0724963c782e3c6d9e"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bits_shr': forall x y i, 0 <= i < zwordsize -> testbit (shr' x y) i = testbit x (if zlt (i + Int.unsigned y) zwordsize then i + Int.unsigned y else zwordsize - 1).",
            "VernacStartTheoremProof",
            "0bb855758f78dbc04b22b446bbd671a75c32f6f3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold shr'.",
            "VernacExtend",
            "3f2ca58b0137b9c25c627f325423599fcece7b09"
        ],
        [
            "rewrite testbit_repr; auto.",
            "VernacExtend",
            "d20143ed773e39c9c2d38dc1a41b649eadbc95c6"
        ],
        [
            "rewrite Z.shiftr_spec.",
            "VernacExtend",
            "80c165d6ba099c7565e4b5045695449745807abf"
        ],
        [
            "apply bits_signed.",
            "VernacExtend",
            "56f1ed558ed74d0eda0686b72cf662783fdfc9be"
        ],
        [
            "generalize (Int.unsigned_range y); omega.",
            "VernacExtend",
            "97fa897f7d8537eccb79a400fd839cb7d511a100"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma shl'_mul_two_p: forall x y, shl' x y = mul x (repr (two_p (Int.unsigned y))).",
            "VernacStartTheoremProof",
            "afd4ed8227e5cf7731f1127b3808a90b7c8bd1a3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold shl', mul.",
            "VernacExtend",
            "ecbf6fea8ee208513407d443748ebf278e318a64"
        ],
        [
            "apply eqm_samerepr.",
            "VernacExtend",
            "2226a5674ed5a7db984e878fdbb37775ca665295"
        ],
        [
            "rewrite Zshiftl_mul_two_p.",
            "VernacExtend",
            "7fe5e587f7347ca6752e2a84434e39399219b1c6"
        ],
        [
            "apply eqm_mult.",
            "VernacExtend",
            "2a50cf06165627ed9dbd12bd10f56ff1fd8640b4"
        ],
        [
            "apply eqm_refl.",
            "VernacExtend",
            "cd38aceb6abd087396d34625c4f0ed69968a7526"
        ],
        [
            "apply eqm_unsigned_repr.",
            "VernacExtend",
            "8083262b54f87caceff266da1e7020054aa5a39f"
        ],
        [
            "generalize (Int.unsigned_range y); omega.",
            "VernacExtend",
            "97fa897f7d8537eccb79a400fd839cb7d511a100"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma shl'_one_two_p: forall y, shl' one y = repr (two_p (Int.unsigned y)).",
            "VernacStartTheoremProof",
            "b01d01825e733bb416ef3d5385721dae37c450b5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite shl'_mul_two_p.",
            "VernacExtend",
            "e45d69aa26c38755bda50119961766c083cfdda3"
        ],
        [
            "rewrite mul_commut.",
            "VernacExtend",
            "7e479a6cc087b15b3e77ca62eef65a115285e229"
        ],
        [
            "rewrite mul_one.",
            "VernacExtend",
            "48e185ca99d9fb7850b9fee25eb6e9a16ab7f505"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem shl'_mul: forall x y, shl' x y = mul x (shl' one y).",
            "VernacStartTheoremProof",
            "8ce64bf4e4bb21e91dc8fa358a63c94a87776d3a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite shl'_one_two_p.",
            "VernacExtend",
            "79361cab5dcc2516c3f6c562e4b09cbda1b2994f"
        ],
        [
            "apply shl'_mul_two_p.",
            "VernacExtend",
            "03d4ab599e2d8fe68016d55e2d4c9bffb2da5a1a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem shl'_zero: forall x, shl' x Int.zero = x.",
            "VernacStartTheoremProof",
            "68313e2d0e911df6b6af3ff94aabbf1f371e0933"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold shl'.",
            "VernacExtend",
            "62b7a04ea789f661d15b3936f29f401975e1ac2f"
        ],
        [
            "rewrite Int.unsigned_zero.",
            "VernacExtend",
            "89cd39791bb3da529969241353d48ab8dd678f66"
        ],
        [
            "unfold Z.shiftl.",
            "VernacExtend",
            "dbb6015ac83ff190df80c411aec0584c0235b6be"
        ],
        [
            "apply repr_unsigned.",
            "VernacExtend",
            "7033f895e7c0a699adb114621e89aafefb338576"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem shru'_zero : forall x, shru' x Int.zero = x.",
            "VernacStartTheoremProof",
            "fd6a97c22124cffa5e698050c48a068cde2ff9b8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold shru'.",
            "VernacExtend",
            "bccb6cd64bef022c79587a9f22baadb223bf9345"
        ],
        [
            "rewrite Int.unsigned_zero.",
            "VernacExtend",
            "89cd39791bb3da529969241353d48ab8dd678f66"
        ],
        [
            "unfold Z.shiftr.",
            "VernacExtend",
            "e0836769f16a9462d6eca79a790c8b81327743e9"
        ],
        [
            "apply repr_unsigned.",
            "VernacExtend",
            "7033f895e7c0a699adb114621e89aafefb338576"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem shr'_zero : forall x, shr' x Int.zero = x.",
            "VernacStartTheoremProof",
            "186985d2e29a03d3539bc9a589f5139b0f3b7a8a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold shr'.",
            "VernacExtend",
            "3f2ca58b0137b9c25c627f325423599fcece7b09"
        ],
        [
            "rewrite Int.unsigned_zero.",
            "VernacExtend",
            "89cd39791bb3da529969241353d48ab8dd678f66"
        ],
        [
            "unfold Z.shiftr.",
            "VernacExtend",
            "e0836769f16a9462d6eca79a790c8b81327743e9"
        ],
        [
            "apply repr_signed.",
            "VernacExtend",
            "6ac037f1d42a8ffc7ffc97da2226a128bb137982"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem shrx'_zero: forall x, shrx' x Int.zero = x.",
            "VernacStartTheoremProof",
            "1d04fae1944700abfc1a7ead96dcbfc25c481d07"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "change (shrx' x Int.zero) with (shrx x zero).",
            "VernacExtend",
            "5461b723d0fac547af44e6ca3666436b34ef289b"
        ],
        [
            "apply shrx_zero.",
            "VernacExtend",
            "45be59d79ced05847627772e55106edeacb96117"
        ],
        [
            "compute; auto.",
            "VernacExtend",
            "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem shrx'_carry: forall x y, Int.ltu y (Int.repr 63) = true -> shrx' x y = add (shr' x y) (shr_carry' x y).",
            "VernacStartTheoremProof",
            "ff58f9d27b8e3bc5a84768ca21474467eeb0eefb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Int.ltu_inv in H.",
            "VernacExtend",
            "3b10a734d364d708dc57561d2a074557270232a0"
        ],
        [
            "change (Int.unsigned (Int.repr 63)) with 63 in H.",
            "VernacExtend",
            "9a166205ddbac33c1a14898a10942ab0228a17a7"
        ],
        [
            "set (y1 := Int64.repr (Int.unsigned y)).",
            "VernacExtend",
            "f7a1e7693583b5187c7639fd0587dd5e76bbeb0d"
        ],
        [
            "assert (U: unsigned y1 = Int.unsigned y).",
            "VernacExtend",
            "364c9fa8456bf216076f2d4c9028a8a2cf2f71ed"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply unsigned_repr.",
            "VernacExtend",
            "cbb55125b21da3156cf49c45f71d95a6743593f6"
        ],
        [
            "assert (63 < max_unsigned) by reflexivity.",
            "VernacExtend",
            "4bc8b1dc575ad91b2bb85cfc83e9a52a17e7587f"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "transitivity (shrx x y1).",
            "VernacExtend",
            "4d05673bf8762aa57db3b7face61f8527d7f7c6f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold shrx', shrx, shl', shl.",
            "VernacExtend",
            "0a9e90bcfe5dcdd95d8ab78c2b915290c98f29a4"
        ],
        [
            "rewrite U; auto.",
            "VernacExtend",
            "b5e2e2fb9332ac5ba2502273537dc2cae1215d4e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite shrx_carry.",
            "VernacExtend",
            "29b2a6bbc9ebb03a89b6ce07894341e9c1f90dbb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "unfold shr, shr'.",
            "VernacExtend",
            "ffa19bc8ddf07d54b9d375681176691cbcc6cccb"
        ],
        [
            "rewrite U; auto.",
            "VernacExtend",
            "b5e2e2fb9332ac5ba2502273537dc2cae1215d4e"
        ],
        [
            "unfold shr_carry, shr_carry', shl, shl'.",
            "VernacExtend",
            "f9f589e5d3633fdeb87222ef94491e076361114e"
        ],
        [
            "rewrite U; auto.",
            "VernacExtend",
            "b5e2e2fb9332ac5ba2502273537dc2cae1215d4e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold ltu.",
            "VernacExtend",
            "e59e12052a96cc6c37e4e3abfd319dcb453c0f12"
        ],
        [
            "apply zlt_true.",
            "VernacExtend",
            "135d300e9c683e2995f4687be0904a8b2009f6fe"
        ],
        [
            "rewrite U; tauto.",
            "VernacExtend",
            "610d31bfa2a4354abd66c81662da5b772547a706"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem shrx'_shr_2: forall x y, Int.ltu y (Int.repr 63) = true -> shrx' x y = shr' (add x (shru' (shr' x (Int.repr 63)) (Int.sub (Int.repr 64) y))) y.",
            "VernacStartTheoremProof",
            "2f3ae0d97428fe55637c664f6620d020c1d13a87"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "set (z := repr (Int.unsigned y)).",
            "VernacExtend",
            "66d8136b770387c78466baa98750d5584c38937f"
        ],
        [
            "apply Int.ltu_inv in H.",
            "VernacExtend",
            "3b10a734d364d708dc57561d2a074557270232a0"
        ],
        [
            "change (Int.unsigned (Int.repr 63)) with 63 in H.",
            "VernacExtend",
            "9a166205ddbac33c1a14898a10942ab0228a17a7"
        ],
        [
            "assert (N1: 63 < max_unsigned) by reflexivity.",
            "VernacExtend",
            "b069863f16f061f32b9216970a5bec77a04173f0"
        ],
        [
            "assert (N2: 63 < Int.max_unsigned) by reflexivity.",
            "VernacExtend",
            "c785131cf8c55dc87409cd8cf76b0a3f21ebf95d"
        ],
        [
            "assert (A: unsigned z = Int.unsigned y).",
            "VernacExtend",
            "b75d8e3e83bd501b807bca139c6416c107292171"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold z; apply unsigned_repr; omega.",
            "VernacExtend",
            "99bf2024371b4d322f1f605644f58cab57e960b2"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (B: unsigned (sub (repr 64) z) = Int.unsigned (Int.sub (Int.repr 64) y)).",
            "VernacExtend",
            "422c05c7c939a9305286d905016e940dcf086420"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold z.",
            "VernacExtend",
            "3f5f13843987e7698cc305c40b7a59532fd5ee56"
        ],
        [
            "unfold sub, Int.sub.",
            "VernacExtend",
            "fba320c22e6df4d6d7d929be1b26b61afdf5f250"
        ],
        [
            "change (unsigned (repr 64)) with 64.",
            "VernacExtend",
            "f8b09e7d7be59be6c5eb19bc50d3b49501d16fa0"
        ],
        [
            "change (Int.unsigned (Int.repr 64)) with 64.",
            "VernacExtend",
            "8c41c900d3038a0c5f8a37d232bdbd77b67870da"
        ],
        [
            "rewrite (unsigned_repr (Int.unsigned y)) by omega.",
            "VernacExtend",
            "ffaab7e5a7601beccbcb95207dd4b9d1b9274f00"
        ],
        [
            "rewrite unsigned_repr, Int.unsigned_repr by omega.",
            "VernacExtend",
            "df5a81f5adf815ac082b7600c0fa71fb7459426c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "unfold shrx', shr', shru', shl'.",
            "VernacExtend",
            "3d568a1abf13d14286f6074c9d061d1b79d4e4cc"
        ],
        [
            "rewrite <- A.",
            "VernacExtend",
            "ae4f7c34b9745c58374bff661e3bf44cf209be15"
        ],
        [
            "change (Int.unsigned (Int.repr 63)) with (unsigned (repr 63)).",
            "VernacExtend",
            "b129f8b31583fcbe1a048462b90bf8beb3ef34bb"
        ],
        [
            "rewrite <- B.",
            "VernacExtend",
            "cab647b3b85c808796ed38ab4d9dfced5d87c3da"
        ],
        [
            "apply shrx_shr_2.",
            "VernacExtend",
            "88ffb33d223482aabf2e24679243a52c45db25f9"
        ],
        [
            "unfold ltu.",
            "VernacExtend",
            "e59e12052a96cc6c37e4e3abfd319dcb453c0f12"
        ],
        [
            "apply zlt_true.",
            "VernacExtend",
            "135d300e9c683e2995f4687be0904a8b2009f6fe"
        ],
        [
            "change (unsigned z < 63).",
            "VernacExtend",
            "22dd58791f5abced57480188e4453bfc360e04c3"
        ],
        [
            "rewrite A; omega.",
            "VernacExtend",
            "70ddc82783da84674b8316bc50b875b3e275d8ca"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark int_ltu_2_inv: forall y z, Int.ltu y iwordsize' = true -> Int.ltu z iwordsize' = true -> Int.unsigned (Int.add y z) <= Int.unsigned iwordsize' -> let y' := repr (Int.unsigned y) in let z' := repr (Int.unsigned z) in Int.unsigned y = unsigned y' /\\ Int.unsigned z = unsigned z' /\\ ltu y' iwordsize = true /\\ ltu z' iwordsize = true /\\ Int.unsigned (Int.add y z) = unsigned (add y' z') /\\ add y' z' = repr (Int.unsigned (Int.add y z)).",
            "VernacStartTheoremProof",
            "8315155fa8eeb84e93815a6985fd6761d122d29f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Int.ltu_inv in H.",
            "VernacExtend",
            "3b10a734d364d708dc57561d2a074557270232a0"
        ],
        [
            "apply Int.ltu_inv in H0.",
            "VernacExtend",
            "59874ac8f07fac4be6498e012481ff7c82fc2126"
        ],
        [
            "change (Int.unsigned iwordsize') with 64 in *.",
            "VernacExtend",
            "b44fe7e845176062af98ce88b84b7d871cada53c"
        ],
        [
            "assert (128 < max_unsigned) by reflexivity.",
            "VernacExtend",
            "72a84441faf8f86f4cb8758bb72ded36fb0896d7"
        ],
        [
            "assert (128 < Int.max_unsigned) by reflexivity.",
            "VernacExtend",
            "d1b17fbbd2386e57bc89f9c77772e2cc7f04fece"
        ],
        [
            "assert (Y: unsigned y' = Int.unsigned y) by (apply unsigned_repr; omega).",
            "VernacExtend",
            "3b7e21d1ef0b05f6efc4e4097351a0f78b34255e"
        ],
        [
            "assert (Z: unsigned z' = Int.unsigned z) by (apply unsigned_repr; omega).",
            "VernacExtend",
            "d29d8a14f3cf015649a53e735e842814ac073073"
        ],
        [
            "assert (P: Int.unsigned (Int.add y z) = unsigned (add y' z')).",
            "VernacExtend",
            "34c127f621eed5234bb6e61a163cc6562b625626"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold Int.add.",
            "VernacExtend",
            "297893a5fb9f4fbd3aabf4876520c214cc213bad"
        ],
        [
            "rewrite Int.unsigned_repr by omega.",
            "VernacExtend",
            "9986c3ceb3b460e3a090640a27e54ada9a88f0bc"
        ],
        [
            "unfold add.",
            "VernacExtend",
            "11cf98bf231f22df486b46b3b6a1c38a94e859dd"
        ],
        [
            "rewrite unsigned_repr by omega.",
            "VernacExtend",
            "7339ef17f9ea8e3378ec9ff1f43c6f29b5f199ce"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intuition auto.",
            "VernacExtend",
            "51e4da273bc2a464ad12897a5a8769bb8257393a"
        ],
        [
            "apply zlt_true.",
            "VernacExtend",
            "135d300e9c683e2995f4687be0904a8b2009f6fe"
        ],
        [
            "rewrite Y; auto.",
            "VernacExtend",
            "0e9d0ed05e624a1c6e2cbeab2bea9744f556e564"
        ],
        [
            "apply zlt_true.",
            "VernacExtend",
            "135d300e9c683e2995f4687be0904a8b2009f6fe"
        ],
        [
            "rewrite Z; auto.",
            "VernacExtend",
            "7e2dfd7e1daf37b0d10fa5a7e013be32d258dbe2"
        ],
        [
            "rewrite P.",
            "VernacExtend",
            "a68444f3ff5a99dd68a5269da7bfb78567ba4ea2"
        ],
        [
            "rewrite repr_unsigned.",
            "VernacExtend",
            "21d65804482992e66265036604c87ce7071df035"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem or_ror': forall x y z, Int.ltu y iwordsize' = true -> Int.ltu z iwordsize' = true -> Int.add y z = iwordsize' -> ror x (repr (Int.unsigned z)) = or (shl' x y) (shru' x z).",
            "VernacStartTheoremProof",
            "b02b31c1667b25ab4a18f16093c1cdbc6f3da593"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (int_ltu_2_inv y z) as (A & B & C & D & E & F); auto.",
            "VernacExtend",
            "ee1369a8339264c2af9089d57c397f7b21145ea4"
        ],
        [
            "rewrite H1; omega.",
            "VernacExtend",
            "929a7910c3ec0b34643f98df816ca29d89132233"
        ],
        [
            "replace (shl' x y) with (shl x (repr (Int.unsigned y))).",
            "VernacExtend",
            "a948b19a20c111e833f4102326d5af4dd57e6381"
        ],
        [
            "replace (shru' x z) with (shru x (repr (Int.unsigned z))).",
            "VernacExtend",
            "08f55177e61e075ae2afc439dbaacf8115846c01"
        ],
        [
            "apply or_ror; auto.",
            "VernacExtend",
            "42eae3ca04d6ad6cb99d8d73b8a27188bf4686a9"
        ],
        [
            "rewrite F, H1.",
            "VernacExtend",
            "e054634213f4ef8ab4bd4b46e978c80c7bdd39dd"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "unfold shru, shru'; rewrite <- B; auto.",
            "VernacExtend",
            "fd9d73a66d27657aaebea216b4a4acad5e89cdcf"
        ],
        [
            "unfold shl, shl'; rewrite <- A; auto.",
            "VernacExtend",
            "925d04841b617948bbf77d8a6e4a2a4627383e57"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem shl'_shl': forall x y z, Int.ltu y iwordsize' = true -> Int.ltu z iwordsize' = true -> Int.ltu (Int.add y z) iwordsize' = true -> shl' (shl' x y) z = shl' x (Int.add y z).",
            "VernacStartTheoremProof",
            "402f1d298ecafa9fe39a48347ac419b1e8b92ed3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Int.ltu_inv in H1.",
            "VernacExtend",
            "3e2179f2d4688e4e4e4dcaf7050da2df9c65d144"
        ],
        [
            "destruct (int_ltu_2_inv y z) as (A & B & C & D & E & F); auto.",
            "VernacExtend",
            "ee1369a8339264c2af9089d57c397f7b21145ea4"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "set (y' := repr (Int.unsigned y)) in *.",
            "VernacExtend",
            "74fc312b5a03a03a9bbb1985fe7d5457532b25af"
        ],
        [
            "set (z' := repr (Int.unsigned z)) in *.",
            "VernacExtend",
            "9f316d639765e40dbebb752314bba4d0144d4061"
        ],
        [
            "replace (shl' x y) with (shl x y').",
            "VernacExtend",
            "73d0ac07999d1589e772a133eaa54d4bc5d377e3"
        ],
        [
            "replace (shl' (shl x y') z) with (shl (shl x y') z').",
            "VernacExtend",
            "a2d4351327b32b955cf10f7ffc5b90a4e45316da"
        ],
        [
            "replace (shl' x (Int.add y z)) with (shl x (add y' z')).",
            "VernacExtend",
            "b8d9ea2ac4eda3f43c41d7d09ea346786f26bc39"
        ],
        [
            "apply shl_shl; auto.",
            "VernacExtend",
            "84c0078d6f115a2aa4781ac0f75f4e7ac7feff74"
        ],
        [
            "apply zlt_true.",
            "VernacExtend",
            "135d300e9c683e2995f4687be0904a8b2009f6fe"
        ],
        [
            "rewrite <- E.",
            "VernacExtend",
            "c62c6425624de37707b227590f371d7ae7fc2165"
        ],
        [
            "change (unsigned iwordsize) with zwordsize.",
            "VernacExtend",
            "a79245763aa0b69473a447cf648089fbfab6d7f0"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "unfold shl, shl'.",
            "VernacExtend",
            "e8626b1b6042de9a7fba569ad82cdb0bf0d195c2"
        ],
        [
            "rewrite E; auto.",
            "VernacExtend",
            "778a5942581efd020b739c3c70f5a25b2f502fe3"
        ],
        [
            "unfold shl at 1, shl'.",
            "VernacExtend",
            "78b92c7fdd58fc2609e6a0c476a2d15d27291827"
        ],
        [
            "rewrite <- B; auto.",
            "VernacExtend",
            "c04a8dce43911b15c02b6dc877314d46debbd87d"
        ],
        [
            "unfold shl, shl'; rewrite <- A; auto.",
            "VernacExtend",
            "925d04841b617948bbf77d8a6e4a2a4627383e57"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem shru'_shru': forall x y z, Int.ltu y iwordsize' = true -> Int.ltu z iwordsize' = true -> Int.ltu (Int.add y z) iwordsize' = true -> shru' (shru' x y) z = shru' x (Int.add y z).",
            "VernacStartTheoremProof",
            "3ed26c3290c8c57db6bfdafeded82dea6e321f06"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Int.ltu_inv in H1.",
            "VernacExtend",
            "3e2179f2d4688e4e4e4dcaf7050da2df9c65d144"
        ],
        [
            "destruct (int_ltu_2_inv y z) as (A & B & C & D & E & F); auto.",
            "VernacExtend",
            "ee1369a8339264c2af9089d57c397f7b21145ea4"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "set (y' := repr (Int.unsigned y)) in *.",
            "VernacExtend",
            "74fc312b5a03a03a9bbb1985fe7d5457532b25af"
        ],
        [
            "set (z' := repr (Int.unsigned z)) in *.",
            "VernacExtend",
            "9f316d639765e40dbebb752314bba4d0144d4061"
        ],
        [
            "replace (shru' x y) with (shru x y').",
            "VernacExtend",
            "6bc1e66f1c4c42a4623ce341a27e965242d79b67"
        ],
        [
            "replace (shru' (shru x y') z) with (shru (shru x y') z').",
            "VernacExtend",
            "ecdb9e730caf14040b208f780a9caebceacd5227"
        ],
        [
            "replace (shru' x (Int.add y z)) with (shru x (add y' z')).",
            "VernacExtend",
            "9229c7d8cbae081b5be73be389e7d08af24c0db7"
        ],
        [
            "apply shru_shru; auto.",
            "VernacExtend",
            "027bc7d69eb09ac86bb6e052cb8420213bbe0449"
        ],
        [
            "apply zlt_true.",
            "VernacExtend",
            "135d300e9c683e2995f4687be0904a8b2009f6fe"
        ],
        [
            "rewrite <- E.",
            "VernacExtend",
            "c62c6425624de37707b227590f371d7ae7fc2165"
        ],
        [
            "change (unsigned iwordsize) with zwordsize.",
            "VernacExtend",
            "a79245763aa0b69473a447cf648089fbfab6d7f0"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "unfold shru, shru'.",
            "VernacExtend",
            "ec5a1f37e855c724e5853c6296e9b255e98f755f"
        ],
        [
            "rewrite E; auto.",
            "VernacExtend",
            "778a5942581efd020b739c3c70f5a25b2f502fe3"
        ],
        [
            "unfold shru at 1, shru'.",
            "VernacExtend",
            "3bb46adf199818a0030fd41299e02d1940193f1e"
        ],
        [
            "rewrite <- B; auto.",
            "VernacExtend",
            "c04a8dce43911b15c02b6dc877314d46debbd87d"
        ],
        [
            "unfold shru, shru'; rewrite <- A; auto.",
            "VernacExtend",
            "be8b777b5a6b4a14088ea8139dd0d30895ee9a50"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem shr'_shr': forall x y z, Int.ltu y iwordsize' = true -> Int.ltu z iwordsize' = true -> Int.ltu (Int.add y z) iwordsize' = true -> shr' (shr' x y) z = shr' x (Int.add y z).",
            "VernacStartTheoremProof",
            "94f7b9f04bcc71382862af296c06f0d9f6cce781"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Int.ltu_inv in H1.",
            "VernacExtend",
            "3e2179f2d4688e4e4e4dcaf7050da2df9c65d144"
        ],
        [
            "destruct (int_ltu_2_inv y z) as (A & B & C & D & E & F); auto.",
            "VernacExtend",
            "ee1369a8339264c2af9089d57c397f7b21145ea4"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "set (y' := repr (Int.unsigned y)) in *.",
            "VernacExtend",
            "74fc312b5a03a03a9bbb1985fe7d5457532b25af"
        ],
        [
            "set (z' := repr (Int.unsigned z)) in *.",
            "VernacExtend",
            "9f316d639765e40dbebb752314bba4d0144d4061"
        ],
        [
            "replace (shr' x y) with (shr x y').",
            "VernacExtend",
            "966ad76457188887d42d778899b1a0c6b838c4f1"
        ],
        [
            "replace (shr' (shr x y') z) with (shr (shr x y') z').",
            "VernacExtend",
            "254e4531c335a434417b4d965ec85ab2fb628c6f"
        ],
        [
            "replace (shr' x (Int.add y z)) with (shr x (add y' z')).",
            "VernacExtend",
            "7d3eeed0a8d9f566532640bc39cfc2d2ad8465d7"
        ],
        [
            "apply shr_shr; auto.",
            "VernacExtend",
            "e658bb084efe7777b4ce84dce620f208a097d020"
        ],
        [
            "apply zlt_true.",
            "VernacExtend",
            "135d300e9c683e2995f4687be0904a8b2009f6fe"
        ],
        [
            "rewrite <- E.",
            "VernacExtend",
            "c62c6425624de37707b227590f371d7ae7fc2165"
        ],
        [
            "change (unsigned iwordsize) with zwordsize.",
            "VernacExtend",
            "a79245763aa0b69473a447cf648089fbfab6d7f0"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "unfold shr, shr'.",
            "VernacExtend",
            "ffa19bc8ddf07d54b9d375681176691cbcc6cccb"
        ],
        [
            "rewrite E; auto.",
            "VernacExtend",
            "778a5942581efd020b739c3c70f5a25b2f502fe3"
        ],
        [
            "unfold shr at 1, shr'.",
            "VernacExtend",
            "f32f31392a757f139b3908666201621aaf40ce31"
        ],
        [
            "rewrite <- B; auto.",
            "VernacExtend",
            "c04a8dce43911b15c02b6dc877314d46debbd87d"
        ],
        [
            "unfold shr, shr'; rewrite <- A; auto.",
            "VernacExtend",
            "5f0eec899b76ae2b98eea35dc3ddc0d59ee7c9ce"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition one_bits' (x: int) : list Int.int := List.map Int.repr (Z_one_bits wordsize (unsigned x) 0).",
            "VernacDefinition",
            "579f144c128a2ec0bb50846a6e001ccf041fd0cf"
        ],
        [
            "Definition is_power2' (x: int) : option Int.int := match Z_one_bits wordsize (unsigned x) 0 with | i :: nil => Some (Int.repr i) | _ => None end.",
            "VernacDefinition",
            "3603f2eae11b15a88b66e76729e2a6dec4f49ee9"
        ],
        [
            "Theorem one_bits'_range: forall x i, In i (one_bits' x) -> Int.ltu i iwordsize' = true.",
            "VernacStartTheoremProof",
            "33ddc4554c82ca304348b4b2bc8beff5d4a154ad"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (list_in_map_inv _ _ _ H) as [i0 [EQ IN]].",
            "VernacExtend",
            "9010afaf954a3ed97abdb8f8fa264b711725c4d2"
        ],
        [
            "exploit Z_one_bits_range; eauto.",
            "VernacExtend",
            "9e26f7339be73af87fea627345c664668963531b"
        ],
        [
            "intros R.",
            "VernacExtend",
            "b3ff821fb07e83935978cec895c7191956030088"
        ],
        [
            "unfold Int.ltu.",
            "VernacExtend",
            "af9bb555e7ff976047f5582fed58c62158c36a7f"
        ],
        [
            "rewrite EQ.",
            "VernacExtend",
            "359c5e196f83a6afbd9ede635bddbf545fd1eb82"
        ],
        [
            "rewrite Int.unsigned_repr.",
            "VernacExtend",
            "a8943e35722dfb96bf3f1ebc66d4a8cd6f05e78a"
        ],
        [
            "change (Int.unsigned iwordsize') with zwordsize.",
            "VernacExtend",
            "a980a5d3cc29869e3d76ba3c2ac38c0e4c837e2c"
        ],
        [
            "apply zlt_true.",
            "VernacExtend",
            "135d300e9c683e2995f4687be0904a8b2009f6fe"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "assert (zwordsize < Int.max_unsigned) by reflexivity.",
            "VernacExtend",
            "ff90a1ac05904a2f5a2085577b0320ae6daf5b8c"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint int_of_one_bits' (l: list Int.int) : int := match l with | nil => zero | a :: b => add (shl' one a) (int_of_one_bits' b) end.",
            "VernacFixpoint",
            "d8b1815e3f5eb5b6f14c116733f35f68b210c7d4"
        ],
        [
            "Theorem one_bits'_decomp: forall x, x = int_of_one_bits' (one_bits' x).",
            "VernacStartTheoremProof",
            "538a9fc542cc3f4dc933d51492f741b71e861071"
        ],
        [
            "assert (REC: forall l, (forall i, In i l -> 0 <= i < zwordsize) -> int_of_one_bits' (List.map Int.repr l) = repr (powerserie l)).",
            "VernacExtend",
            "824068c53e7cdb8b4044f6dd9ba2b28f02d8bc5f"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "induction l; simpl; intros.",
            "VernacExtend",
            "34e9ea5965da389dfe8faf53c8ea4965d4fdcc22"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite IHl by eauto.",
            "VernacExtend",
            "3c1ff980e9ad251a3c93e44df3b4ec439ee636da"
        ],
        [
            "apply eqm_samerepr; apply eqm_add.",
            "VernacExtend",
            "ca07b66336315a0337b1aeb594e0e61f17183a4e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite shl'_one_two_p.",
            "VernacExtend",
            "79361cab5dcc2516c3f6c562e4b09cbda1b2994f"
        ],
        [
            "rewrite Int.unsigned_repr.",
            "VernacExtend",
            "a8943e35722dfb96bf3f1ebc66d4a8cd6f05e78a"
        ],
        [
            "apply eqm_sym; apply eqm_unsigned_repr.",
            "VernacExtend",
            "746efd7685e40b6d2048745aa7ebc53621f77b4e"
        ],
        [
            "exploit (H a).",
            "VernacExtend",
            "c299eabf805b4922e49597b5f3b36331843d93fd"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (zwordsize < Int.max_unsigned) by reflexivity.",
            "VernacExtend",
            "ff90a1ac05904a2f5a2085577b0320ae6daf5b8c"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply eqm_sym; apply eqm_unsigned_repr.",
            "VernacExtend",
            "746efd7685e40b6d2048745aa7ebc53621f77b4e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- (repr_unsigned x) at 1.",
            "VernacExtend",
            "6e4513db39dea3249e7b467ccdea45363167be1b"
        ],
        [
            "unfold one_bits'.",
            "VernacExtend",
            "18d7955dee9c934adc6320a732843c308a8cc59b"
        ],
        [
            "rewrite REC.",
            "VernacExtend",
            "144aa4f8424f20a39c5c5ae73911504bac835e41"
        ],
        [
            "rewrite <- Z_one_bits_powerserie.",
            "VernacExtend",
            "b68928c793abbcbfff4050253d5d209bd134fc02"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply unsigned_range.",
            "VernacExtend",
            "107f7224db1bfb90305cbe8f1e64d98d5760b23b"
        ],
        [
            "apply Z_one_bits_range.",
            "VernacExtend",
            "92ab8ac39389977ca5573ff2d305abbb254a670f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_power2'_rng: forall n logn, is_power2' n = Some logn -> 0 <= Int.unsigned logn < zwordsize.",
            "VernacStartTheoremProof",
            "d7fb2bde7fc687876c05c3046b0660ad59e6101f"
        ],
        [
            "unfold is_power2'; intros n logn P2.",
            "VernacExtend",
            "b486d347ea12717a322b486f51acb458dccdbf4c"
        ],
        [
            "destruct (Z_one_bits wordsize (unsigned n) 0) as [ | i [ | ? ?]] eqn:B; inv P2.",
            "VernacExtend",
            "c8bfdada0e665fa57dae513551ece5500ea8c172"
        ],
        [
            "assert (0 <= i < zwordsize).",
            "VernacExtend",
            "67ee15694c511800fae6d2b50e102c0682d5a062"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply Z_one_bits_range with (unsigned n).",
            "VernacExtend",
            "913df80f2964cd60b38bcc6ec57601800bc1f67a"
        ],
        [
            "rewrite B; auto with coqlib.",
            "VernacExtend",
            "4ff8a1cc0c3db0ba986c72a6280e5855be8ec882"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite Int.unsigned_repr.",
            "VernacExtend",
            "a8943e35722dfb96bf3f1ebc66d4a8cd6f05e78a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (zwordsize < Int.max_unsigned) by reflexivity.",
            "VernacExtend",
            "ff90a1ac05904a2f5a2085577b0320ae6daf5b8c"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem is_power2'_range: forall n logn, is_power2' n = Some logn -> Int.ltu logn iwordsize' = true.",
            "VernacStartTheoremProof",
            "861a06cd3061eaea44bf7b23cfb92b07706b9233"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Int.ltu.",
            "VernacExtend",
            "af9bb555e7ff976047f5582fed58c62158c36a7f"
        ],
        [
            "change (Int.unsigned iwordsize') with zwordsize.",
            "VernacExtend",
            "a980a5d3cc29869e3d76ba3c2ac38c0e4c837e2c"
        ],
        [
            "apply zlt_true.",
            "VernacExtend",
            "135d300e9c683e2995f4687be0904a8b2009f6fe"
        ],
        [
            "generalize (is_power2'_rng _ _ H).",
            "VernacExtend",
            "7fcf1741f9f3a04d9b60e544522e5d39c054c7cc"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_power2'_correct: forall n logn, is_power2' n = Some logn -> unsigned n = two_p (Int.unsigned logn).",
            "VernacStartTheoremProof",
            "85df8e8cf8ec5354613b2c732430c343fc164bcc"
        ],
        [
            "unfold is_power2'; intros.",
            "VernacExtend",
            "d9824dd8e535d10fe71b433122665ad234624707"
        ],
        [
            "destruct (Z_one_bits wordsize (unsigned n) 0) as [ | i [ | ? ?]] eqn:B; inv H.",
            "VernacExtend",
            "818874277be5b541a9a77fa2caa9395173adf923"
        ],
        [
            "rewrite (Z_one_bits_powerserie (unsigned n)) by (apply unsigned_range).",
            "VernacExtend",
            "010dfeefae858082b4b53db1b3e6f76de0bbda59"
        ],
        [
            "rewrite Int.unsigned_repr.",
            "VernacExtend",
            "a8943e35722dfb96bf3f1ebc66d4a8cd6f05e78a"
        ],
        [
            "rewrite B; simpl.",
            "VernacExtend",
            "64b3aa5f3ded6883cc71e0728cc13a43d15d3abf"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "assert (0 <= i < zwordsize).",
            "VernacExtend",
            "67ee15694c511800fae6d2b50e102c0682d5a062"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply Z_one_bits_range with (unsigned n).",
            "VernacExtend",
            "913df80f2964cd60b38bcc6ec57601800bc1f67a"
        ],
        [
            "rewrite B; auto with coqlib.",
            "VernacExtend",
            "4ff8a1cc0c3db0ba986c72a6280e5855be8ec882"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (zwordsize < Int.max_unsigned) by reflexivity.",
            "VernacExtend",
            "ff90a1ac05904a2f5a2085577b0320ae6daf5b8c"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_pow2': forall x n logn, is_power2' n = Some logn -> mul x n = shl' x logn.",
            "VernacStartTheoremProof",
            "121e4e23bce371be85439ebbed0b65a496a66fda"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite shl'_mul.",
            "VernacExtend",
            "2786a30381b4529635ee19bee5788330db7f146f"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite shl'_one_two_p.",
            "VernacExtend",
            "79361cab5dcc2516c3f6c562e4b09cbda1b2994f"
        ],
        [
            "rewrite <- (repr_unsigned n).",
            "VernacExtend",
            "c2410aa77c68eb9cab0d5d690d0ca1c6311dcbec"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply is_power2'_correct; auto.",
            "VernacExtend",
            "1be96ea5703289b50dce9a458ec1f7863b702548"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem divu_pow2': forall x n logn, is_power2' n = Some logn -> divu x n = shru' x logn.",
            "VernacStartTheoremProof",
            "b61a9864d580964998c073ed5fed4d85cbe7ae9b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (is_power2'_correct n logn H).",
            "VernacExtend",
            "777a3692b480dee74769893d02e166f064008f85"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "unfold divu.",
            "VernacExtend",
            "a590fd4befdc5a95066b4da954521dc3b686dbcc"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "unfold shru'.",
            "VernacExtend",
            "bccb6cd64bef022c79587a9f22baadb223bf9345"
        ],
        [
            "rewrite Zshiftr_div_two_p.",
            "VernacExtend",
            "90fc01f0f0eae61bd03ac4563e0f8b19e779fe5c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "eapply is_power2'_rng; eauto.",
            "VernacExtend",
            "5e1e8cdfd54d371b5f21fa2908da59b96d4c3e67"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition loword (n: int) : Int.int := Int.repr (unsigned n).",
            "VernacDefinition",
            "924791907e8da93389342d54ed3a147136cd7ed9"
        ],
        [
            "Definition hiword (n: int) : Int.int := Int.repr (unsigned (shru n (repr Int.zwordsize))).",
            "VernacDefinition",
            "b0dfd3c24cf99034f7162e027e246bf76e977f4f"
        ],
        [
            "Definition ofwords (hi lo: Int.int) : int := or (shl (repr (Int.unsigned hi)) (repr Int.zwordsize)) (repr (Int.unsigned lo)).",
            "VernacDefinition",
            "3a3443fab748f22a01bb747ce7eb20fb7c072b24"
        ],
        [
            "Lemma bits_loword: forall n i, 0 <= i < Int.zwordsize -> Int.testbit (loword n) i = testbit n i.",
            "VernacStartTheoremProof",
            "a4cea602292a3ef0acd6bc9c559f374f2a4a6e29"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold loword.",
            "VernacExtend",
            "905d761cdf480315e919f6fd082d261f834b3315"
        ],
        [
            "rewrite Int.testbit_repr; auto.",
            "VernacExtend",
            "0447ffcc87c7035831486a8d06f35043455e93f5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bits_hiword: forall n i, 0 <= i < Int.zwordsize -> Int.testbit (hiword n) i = testbit n (i + Int.zwordsize).",
            "VernacStartTheoremProof",
            "bb4137ac612cd79fc07c706a884e3f67dfa461d0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold hiword.",
            "VernacExtend",
            "da681576c8117b5b63f7977145af043bb64e5a7c"
        ],
        [
            "rewrite Int.testbit_repr; auto.",
            "VernacExtend",
            "0447ffcc87c7035831486a8d06f35043455e93f5"
        ],
        [
            "assert (zwordsize = 2 * Int.zwordsize) by reflexivity.",
            "VernacExtend",
            "1b29bc7f171652138eff857b5c53d85cc5641db8"
        ],
        [
            "fold (testbit (shru n (repr Int.zwordsize)) i).",
            "VernacExtend",
            "c83060948ac7aadf7517ed99ff002331c22b9141"
        ],
        [
            "rewrite bits_shru.",
            "VernacExtend",
            "a63a609db343946cb726afaf3c287b7802ce80be"
        ],
        [
            "change (unsigned (repr Int.zwordsize)) with Int.zwordsize.",
            "VernacExtend",
            "28d5084059e172eecf41d799a57b674f9a44f88d"
        ],
        [
            "apply zlt_true.",
            "VernacExtend",
            "135d300e9c683e2995f4687be0904a8b2009f6fe"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bits_ofwords: forall hi lo i, 0 <= i < zwordsize -> testbit (ofwords hi lo) i = if zlt i Int.zwordsize then Int.testbit lo i else Int.testbit hi (i - Int.zwordsize).",
            "VernacStartTheoremProof",
            "949d6a7ab4559671f9a610d1b767ec1e738b9fe5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold ofwords.",
            "VernacExtend",
            "552e843a362976a228f5f9d3d7f61c479165c5be"
        ],
        [
            "rewrite bits_or; auto.",
            "VernacExtend",
            "f825906d58bc4259d3a99e7adc9c4ffd5820c063"
        ],
        [
            "rewrite bits_shl; auto.",
            "VernacExtend",
            "8ceddad9fb2f5a1a90d3d6f9fde9ccf26e61696f"
        ],
        [
            "change (unsigned (repr Int.zwordsize)) with Int.zwordsize.",
            "VernacExtend",
            "28d5084059e172eecf41d799a57b674f9a44f88d"
        ],
        [
            "assert (zwordsize = 2 * Int.zwordsize) by reflexivity.",
            "VernacExtend",
            "1b29bc7f171652138eff857b5c53d85cc5641db8"
        ],
        [
            "destruct (zlt i Int.zwordsize).",
            "VernacExtend",
            "36965c69056d1565bd2af3276289dd29e7f0cc00"
        ],
        [
            "rewrite testbit_repr; auto.",
            "VernacExtend",
            "d20143ed773e39c9c2d38dc1a41b649eadbc95c6"
        ],
        [
            "rewrite !testbit_repr; auto.",
            "VernacExtend",
            "ed03c006a62cc982ce1a4504966398fdfcfdcbc0"
        ],
        [
            "fold (Int.testbit lo i).",
            "VernacExtend",
            "1e7c0111b18a9a2e319ff9eac4f8a6b271060310"
        ],
        [
            "rewrite Int.bits_above.",
            "VernacExtend",
            "2c1bb270ce4254bb996a35b336c09be013fbdad6"
        ],
        [
            "apply orb_false_r.",
            "VernacExtend",
            "c0fa87fb1baa1cbcd361805f26554fb59f562524"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lo_ofwords: forall hi lo, loword (ofwords hi lo) = lo.",
            "VernacStartTheoremProof",
            "276bba55a9e2d8bd254239b4d97c3192a79e2c09"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Int.same_bits_eq; intros.",
            "VernacExtend",
            "ef26647008bcdf50e45dfe09c06063978628f164"
        ],
        [
            "rewrite bits_loword; auto.",
            "VernacExtend",
            "c484dd0978ff536f722e226bffbb3a81c58813c7"
        ],
        [
            "rewrite bits_ofwords.",
            "VernacExtend",
            "47f37d9997617a91e0dcfd83f898d977c03dc103"
        ],
        [
            "apply zlt_true.",
            "VernacExtend",
            "135d300e9c683e2995f4687be0904a8b2009f6fe"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "assert (zwordsize = 2 * Int.zwordsize) by reflexivity.",
            "VernacExtend",
            "1b29bc7f171652138eff857b5c53d85cc5641db8"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hi_ofwords: forall hi lo, hiword (ofwords hi lo) = hi.",
            "VernacStartTheoremProof",
            "79911c33bac23d64521541ab60a97574d6ae8faa"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Int.same_bits_eq; intros.",
            "VernacExtend",
            "ef26647008bcdf50e45dfe09c06063978628f164"
        ],
        [
            "rewrite bits_hiword; auto.",
            "VernacExtend",
            "39ae5bd3bfd1a01cf8f9c6041308996acd97bbd4"
        ],
        [
            "rewrite bits_ofwords.",
            "VernacExtend",
            "47f37d9997617a91e0dcfd83f898d977c03dc103"
        ],
        [
            "rewrite zlt_false.",
            "VernacExtend",
            "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "assert (zwordsize = 2 * Int.zwordsize) by reflexivity.",
            "VernacExtend",
            "1b29bc7f171652138eff857b5c53d85cc5641db8"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ofwords_recompose: forall n, ofwords (hiword n) (loword n) = n.",
            "VernacStartTheoremProof",
            "f14827afb7f4e3d930c22392172a6cab42332eb1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply same_bits_eq; intros.",
            "VernacExtend",
            "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
        ],
        [
            "rewrite bits_ofwords; auto.",
            "VernacExtend",
            "62cb4f82beaeba2693d8cbd54d39659938745d34"
        ],
        [
            "destruct (zlt i Int.zwordsize).",
            "VernacExtend",
            "36965c69056d1565bd2af3276289dd29e7f0cc00"
        ],
        [
            "apply bits_loword.",
            "VernacExtend",
            "e7f81147170ad732a40acb27e82ca7ea25424bc3"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite bits_hiword.",
            "VernacExtend",
            "84301c33e4dc7015a9c60a3f79e91e03146ef9cd"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "assert (zwordsize = 2 * Int.zwordsize) by reflexivity.",
            "VernacExtend",
            "1b29bc7f171652138eff857b5c53d85cc5641db8"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ofwords_add: forall lo hi, ofwords hi lo = repr (Int.unsigned hi * two_p 32 + Int.unsigned lo).",
            "VernacStartTheoremProof",
            "134137b9c348020e8ac63cd1cb5306f8e183cd7e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold ofwords.",
            "VernacExtend",
            "552e843a362976a228f5f9d3d7f61c479165c5be"
        ],
        [
            "rewrite shifted_or_is_add.",
            "VernacExtend",
            "2e6978a4ff844fe3f9472a94550fcaf89acd01e6"
        ],
        [
            "apply eqm_samerepr.",
            "VernacExtend",
            "2226a5674ed5a7db984e878fdbb37775ca665295"
        ],
        [
            "apply eqm_add.",
            "VernacExtend",
            "6c81c3e6c0a0d0574105329a31bbe3cdf542f623"
        ],
        [
            "apply eqm_mult.",
            "VernacExtend",
            "2a50cf06165627ed9dbd12bd10f56ff1fd8640b4"
        ],
        [
            "apply eqm_sym; apply eqm_unsigned_repr.",
            "VernacExtend",
            "746efd7685e40b6d2048745aa7ebc53621f77b4e"
        ],
        [
            "apply eqm_refl.",
            "VernacExtend",
            "cd38aceb6abd087396d34625c4f0ed69968a7526"
        ],
        [
            "apply eqm_sym; apply eqm_unsigned_repr.",
            "VernacExtend",
            "746efd7685e40b6d2048745aa7ebc53621f77b4e"
        ],
        [
            "change Int.zwordsize with 32; change zwordsize with 64; omega.",
            "VernacExtend",
            "05ff3b0aff4fe1e9ad4c5e75b39ce4cf5620d904"
        ],
        [
            "rewrite unsigned_repr.",
            "VernacExtend",
            "5134990e153a3f2ce893c9ea9837f183c322ceb2"
        ],
        [
            "generalize (Int.unsigned_range lo).",
            "VernacExtend",
            "00f96bd0dc0b53ce0d76e2cda2fe941d92ad04cf"
        ],
        [
            "intros [A B].",
            "VernacExtend",
            "269ecc1b12a78cad85161d58003fb0ebdea8ebc3"
        ],
        [
            "exact B.",
            "VernacExtend",
            "f052f8e9c426ecc3b01a48cbf92f5b0175487b9a"
        ],
        [
            "assert (Int.max_unsigned < max_unsigned) by (compute; auto).",
            "VernacExtend",
            "a76700b13737517856e62657f7309495ec3d44e3"
        ],
        [
            "generalize (Int.unsigned_range_2 lo); omega.",
            "VernacExtend",
            "9b7b9144b2261374450a1a24e281d8a418fb7236"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ofwords_add': forall lo hi, unsigned (ofwords hi lo) = Int.unsigned hi * two_p 32 + Int.unsigned lo.",
            "VernacStartTheoremProof",
            "d9f2688251b5c87731e830457f4dfe94b9ea2635"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite ofwords_add.",
            "VernacExtend",
            "5ceeb88b9f12c371f27ef33ad4fe9bb62883478c"
        ],
        [
            "apply unsigned_repr.",
            "VernacExtend",
            "cbb55125b21da3156cf49c45f71d95a6743593f6"
        ],
        [
            "generalize (Int.unsigned_range hi) (Int.unsigned_range lo).",
            "VernacExtend",
            "fe8a12efbdae518a8df9f19a995adb7feb085a66"
        ],
        [
            "change (two_p 32) with Int.modulus.",
            "VernacExtend",
            "49d3ad9d5dad69d20c51e894a4980581aea22b69"
        ],
        [
            "change Int.modulus with 4294967296.",
            "VernacExtend",
            "57185799b9e971ee5fcb305708fba40953052080"
        ],
        [
            "change max_unsigned with 18446744073709551615.",
            "VernacExtend",
            "21a12cf449ba9cf55e69c8b258be996bc1df6188"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark eqm_mul_2p32: forall x y, Int.eqm x y -> eqm (x * two_p 32) (y * two_p 32).",
            "VernacStartTheoremProof",
            "96f3e0c5d936add88e50717c6fa7581372ddd241"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H as [k EQ].",
            "VernacExtend",
            "c9baa1112395e78126ee4d1c1c1dc430c2db4072"
        ],
        [
            "exists k.",
            "VernacExtend",
            "5bd085ef2f3e8bbd4bde88ae4ddb2fb4c72df1a9"
        ],
        [
            "rewrite EQ.",
            "VernacExtend",
            "359c5e196f83a6afbd9ede635bddbf545fd1eb82"
        ],
        [
            "change Int.modulus with (two_p 32).",
            "VernacExtend",
            "7e9aa7c9a569a8e5be3cbc0d8367b26497a3f312"
        ],
        [
            "change modulus with (two_p 32 * two_p 32).",
            "VernacExtend",
            "f7f9451814139ed1b1b12e3bb4356239e2a5ce8b"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ofwords_add'': forall lo hi, signed (ofwords hi lo) = Int.signed hi * two_p 32 + Int.unsigned lo.",
            "VernacStartTheoremProof",
            "1a5185ecee2742b6b498f2b83dfbea52b470bcfa"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite ofwords_add.",
            "VernacExtend",
            "5ceeb88b9f12c371f27ef33ad4fe9bb62883478c"
        ],
        [
            "replace (repr (Int.unsigned hi * two_p 32 + Int.unsigned lo)) with (repr (Int.signed hi * two_p 32 + Int.unsigned lo)).",
            "VernacExtend",
            "9f57ce6ae11796905077b88a18748d877f8f0105"
        ],
        [
            "apply signed_repr.",
            "VernacExtend",
            "adf1ccf79802672332bf27c82e1f983090114eac"
        ],
        [
            "generalize (Int.signed_range hi) (Int.unsigned_range lo).",
            "VernacExtend",
            "1340bab68f3c8174929c84ecc5f8fbe99604ba14"
        ],
        [
            "change (two_p 32) with Int.modulus.",
            "VernacExtend",
            "49d3ad9d5dad69d20c51e894a4980581aea22b69"
        ],
        [
            "change min_signed with (Int.min_signed * Int.modulus).",
            "VernacExtend",
            "a7b0dd955f9024b603ee7058f937b86c6d500d79"
        ],
        [
            "change max_signed with (Int.max_signed * Int.modulus + Int.modulus - 1).",
            "VernacExtend",
            "a1b24271cc733c3db6080d960d571db49c969b6a"
        ],
        [
            "change Int.modulus with 4294967296.",
            "VernacExtend",
            "57185799b9e971ee5fcb305708fba40953052080"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply eqm_samerepr.",
            "VernacExtend",
            "2226a5674ed5a7db984e878fdbb37775ca665295"
        ],
        [
            "apply eqm_add.",
            "VernacExtend",
            "6c81c3e6c0a0d0574105329a31bbe3cdf542f623"
        ],
        [
            "apply eqm_mul_2p32.",
            "VernacExtend",
            "ac416561659634c2f003eab7db7273d3c4f44d73"
        ],
        [
            "apply Int.eqm_signed_unsigned.",
            "VernacExtend",
            "19f5570918516452a92e2418d588fa0058ae01b2"
        ],
        [
            "apply eqm_refl.",
            "VernacExtend",
            "cd38aceb6abd087396d34625c4f0ed69968a7526"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decompose_bitwise_binop: forall f f64 f32 xh xl yh yl, (forall x y i, 0 <= i < zwordsize -> testbit (f64 x y) i = f (testbit x i) (testbit y i)) -> (forall x y i, 0 <= i < Int.zwordsize -> Int.testbit (f32 x y) i = f (Int.testbit x i) (Int.testbit y i)) -> f64 (ofwords xh xl) (ofwords yh yl) = ofwords (f32 xh yh) (f32 xl yl).",
            "VernacStartTheoremProof",
            "2a6779c59de2d89bfb64a5c2751552363eb233b5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Int64.same_bits_eq; intros.",
            "VernacExtend",
            "e40835669e65a3bf44a1b7da4992aa3b741b9691"
        ],
        [
            "rewrite H by auto.",
            "VernacExtend",
            "223b608150ce9f33043268eccac47746c38cae2c"
        ],
        [
            "rewrite ! bits_ofwords by auto.",
            "VernacExtend",
            "f4bac6a85fdeb377ef0f7f1dcbe265b14a5bad0b"
        ],
        [
            "assert (zwordsize = 2 * Int.zwordsize) by reflexivity.",
            "VernacExtend",
            "1b29bc7f171652138eff857b5c53d85cc5641db8"
        ],
        [
            "destruct (zlt i Int.zwordsize); rewrite H0 by omega; auto.",
            "VernacExtend",
            "82394dfd6eff71103d67192148e36e9e470b541f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decompose_and: forall xh xl yh yl, and (ofwords xh xl) (ofwords yh yl) = ofwords (Int.and xh yh) (Int.and xl yl).",
            "VernacStartTheoremProof",
            "feb9521d200441365ecb6a7d42f069d63ad586ca"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply decompose_bitwise_binop with andb.",
            "VernacExtend",
            "cfe8fcedb4f16d4f43248120a4ccca0840e9919c"
        ],
        [
            "apply bits_and.",
            "VernacExtend",
            "6821cf98716593f5651153f241f968db826fe635"
        ],
        [
            "apply Int.bits_and.",
            "VernacExtend",
            "9e06f3a7941e5d0cf2e24db0bcc228ee09b5c47d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decompose_or: forall xh xl yh yl, or (ofwords xh xl) (ofwords yh yl) = ofwords (Int.or xh yh) (Int.or xl yl).",
            "VernacStartTheoremProof",
            "b99b42690df464988d6371bf4bbcaea4c2093bd6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply decompose_bitwise_binop with orb.",
            "VernacExtend",
            "7146071a275094133d997005230a178392c29971"
        ],
        [
            "apply bits_or.",
            "VernacExtend",
            "352b60047c922ffd0de052af87bd20c3f41ddc91"
        ],
        [
            "apply Int.bits_or.",
            "VernacExtend",
            "5b7f59414b0305e40004ee811d3ff53479ce0e6a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decompose_xor: forall xh xl yh yl, xor (ofwords xh xl) (ofwords yh yl) = ofwords (Int.xor xh yh) (Int.xor xl yl).",
            "VernacStartTheoremProof",
            "c3faf51abfb780a2c977238d2c054bb19beecd16"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply decompose_bitwise_binop with xorb.",
            "VernacExtend",
            "fa5f1c46e914fb98b8e1cca30306f31528f8083d"
        ],
        [
            "apply bits_xor.",
            "VernacExtend",
            "123a96797a5200819242a1309514fcfb766d4422"
        ],
        [
            "apply Int.bits_xor.",
            "VernacExtend",
            "9bfcaad96446c4ac01bc93f53735e452e51b77e2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decompose_not: forall xh xl, not (ofwords xh xl) = ofwords (Int.not xh) (Int.not xl).",
            "VernacStartTheoremProof",
            "e60bf5d179708751ff150def7596eed4fb06371a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold not, Int.not.",
            "VernacExtend",
            "92f157f59b057451473fd6e8f8362c7ba137c9e7"
        ],
        [
            "rewrite <- decompose_xor.",
            "VernacExtend",
            "b2e837b399ed9c0d53bb213161e57785ff562352"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply (Int64.eq_spec mone (ofwords Int.mone Int.mone)).",
            "VernacExtend",
            "02c4647edca114726a6cf2f4d7112e6f68be550e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decompose_shl_1: forall xh xl y, 0 <= Int.unsigned y < Int.zwordsize -> shl' (ofwords xh xl) y = ofwords (Int.or (Int.shl xh y) (Int.shru xl (Int.sub Int.iwordsize y))) (Int.shl xl y).",
            "VernacStartTheoremProof",
            "d963544c0955db00b69057f23f6f28ab3f12f0d8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Int.unsigned (Int.sub Int.iwordsize y) = Int.zwordsize - Int.unsigned y).",
            "VernacExtend",
            "58591357136fc989f17ecdea5c0f36b3874af253"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold Int.sub.",
            "VernacExtend",
            "1170869a324af572e1e05cd70a3c8ddc34d9f678"
        ],
        [
            "rewrite Int.unsigned_repr.",
            "VernacExtend",
            "a8943e35722dfb96bf3f1ebc66d4a8cd6f05e78a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite Int.unsigned_repr_wordsize.",
            "VernacExtend",
            "085aad41418d64371790d9cee768fd45e3b00867"
        ],
        [
            "generalize Int.wordsize_max_unsigned; omega.",
            "VernacExtend",
            "c2f0bdd64a28af3f4262b00bd08376130fc90c2d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (zwordsize = 2 * Int.zwordsize) by reflexivity.",
            "VernacExtend",
            "1b29bc7f171652138eff857b5c53d85cc5641db8"
        ],
        [
            "apply Int64.same_bits_eq; intros.",
            "VernacExtend",
            "e40835669e65a3bf44a1b7da4992aa3b741b9691"
        ],
        [
            "rewrite bits_shl' by auto.",
            "VernacExtend",
            "56674d4854374afc8a3e99981ea81350e14eaa9b"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "rewrite bits_ofwords by auto.",
            "VernacExtend",
            "05561d9f08f2582def67b0c01711576cca51ec90"
        ],
        [
            "destruct (zlt i Int.zwordsize).",
            "VernacExtend",
            "36965c69056d1565bd2af3276289dd29e7f0cc00"
        ],
        [
            "rewrite Int.bits_shl by omega.",
            "VernacExtend",
            "30070da6a9648df78d6be6cc68358945cb3ccafd"
        ],
        [
            "destruct (zlt i (Int.unsigned y)).",
            "VernacExtend",
            "f439089e63ef470bcf323a1f4b3305d73e56134e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite bits_ofwords by omega.",
            "VernacExtend",
            "f53c5f05e4a2dd89043b10b8440f6d7ac028cdb9"
        ],
        [
            "rewrite zlt_true by omega.",
            "VernacExtend",
            "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite zlt_false by omega.",
            "VernacExtend",
            "1a3d93f438781af1cb3b43101336d435afaef9a1"
        ],
        [
            "rewrite bits_ofwords by omega.",
            "VernacExtend",
            "f53c5f05e4a2dd89043b10b8440f6d7ac028cdb9"
        ],
        [
            "rewrite Int.bits_or by omega.",
            "VernacExtend",
            "c1fd56c715aa7e4a8254feb4cc93c56f470b3529"
        ],
        [
            "rewrite Int.bits_shl by omega.",
            "VernacExtend",
            "30070da6a9648df78d6be6cc68358945cb3ccafd"
        ],
        [
            "rewrite Int.bits_shru by omega.",
            "VernacExtend",
            "4a0a3a23bcbe2af00d5209edf88e3b6d0ff7057e"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "destruct (zlt (i - Int.unsigned y) (Int.zwordsize)).",
            "VernacExtend",
            "2c30b16abf5575d4a0a913dbb1b057d7394683c4"
        ],
        [
            "rewrite zlt_true by omega.",
            "VernacExtend",
            "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
        ],
        [
            "rewrite zlt_true by omega.",
            "VernacExtend",
            "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
        ],
        [
            "rewrite orb_false_l.",
            "VernacExtend",
            "dce4660bb0304c3566af283a80836da73d45b705"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite zlt_false by omega.",
            "VernacExtend",
            "1a3d93f438781af1cb3b43101336d435afaef9a1"
        ],
        [
            "rewrite zlt_false by omega.",
            "VernacExtend",
            "1a3d93f438781af1cb3b43101336d435afaef9a1"
        ],
        [
            "rewrite orb_false_r.",
            "VernacExtend",
            "1f347086f7a141d5c22c1549eee172fd8a72e833"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decompose_shl_2: forall xh xl y, Int.zwordsize <= Int.unsigned y < zwordsize -> shl' (ofwords xh xl) y = ofwords (Int.shl xl (Int.sub y Int.iwordsize)) Int.zero.",
            "VernacStartTheoremProof",
            "f8fbb5a24ddd8b300faa3fc5c4f85257d828b29a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (zwordsize = 2 * Int.zwordsize) by reflexivity.",
            "VernacExtend",
            "1b29bc7f171652138eff857b5c53d85cc5641db8"
        ],
        [
            "assert (Int.unsigned (Int.sub y Int.iwordsize) = Int.unsigned y - Int.zwordsize).",
            "VernacExtend",
            "ac77881210f9f14b6e90aa0bb04642ba31991772"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold Int.sub.",
            "VernacExtend",
            "1170869a324af572e1e05cd70a3c8ddc34d9f678"
        ],
        [
            "rewrite Int.unsigned_repr.",
            "VernacExtend",
            "a8943e35722dfb96bf3f1ebc66d4a8cd6f05e78a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite Int.unsigned_repr_wordsize.",
            "VernacExtend",
            "085aad41418d64371790d9cee768fd45e3b00867"
        ],
        [
            "generalize (Int.unsigned_range_2 y).",
            "VernacExtend",
            "6b5905db15033139d01d5aedb977e23c5dd9e844"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply Int64.same_bits_eq; intros.",
            "VernacExtend",
            "e40835669e65a3bf44a1b7da4992aa3b741b9691"
        ],
        [
            "rewrite bits_shl' by auto.",
            "VernacExtend",
            "56674d4854374afc8a3e99981ea81350e14eaa9b"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "rewrite bits_ofwords by auto.",
            "VernacExtend",
            "05561d9f08f2582def67b0c01711576cca51ec90"
        ],
        [
            "destruct (zlt i Int.zwordsize).",
            "VernacExtend",
            "36965c69056d1565bd2af3276289dd29e7f0cc00"
        ],
        [
            "rewrite zlt_true by omega.",
            "VernacExtend",
            "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
        ],
        [
            "apply Int.bits_zero.",
            "VernacExtend",
            "1d93a9d008cd1d96185c3b6509dcbd0910e4df21"
        ],
        [
            "rewrite Int.bits_shl by omega.",
            "VernacExtend",
            "30070da6a9648df78d6be6cc68358945cb3ccafd"
        ],
        [
            "destruct (zlt i (Int.unsigned y)).",
            "VernacExtend",
            "f439089e63ef470bcf323a1f4b3305d73e56134e"
        ],
        [
            "rewrite zlt_true by omega.",
            "VernacExtend",
            "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite zlt_false by omega.",
            "VernacExtend",
            "1a3d93f438781af1cb3b43101336d435afaef9a1"
        ],
        [
            "rewrite bits_ofwords by omega.",
            "VernacExtend",
            "f53c5f05e4a2dd89043b10b8440f6d7ac028cdb9"
        ],
        [
            "rewrite zlt_true by omega.",
            "VernacExtend",
            "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decompose_shru_1: forall xh xl y, 0 <= Int.unsigned y < Int.zwordsize -> shru' (ofwords xh xl) y = ofwords (Int.shru xh y) (Int.or (Int.shru xl y) (Int.shl xh (Int.sub Int.iwordsize y))).",
            "VernacStartTheoremProof",
            "d8e2fa0bb09548d2419d1fee258f826e54918eb7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Int.unsigned (Int.sub Int.iwordsize y) = Int.zwordsize - Int.unsigned y).",
            "VernacExtend",
            "58591357136fc989f17ecdea5c0f36b3874af253"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold Int.sub.",
            "VernacExtend",
            "1170869a324af572e1e05cd70a3c8ddc34d9f678"
        ],
        [
            "rewrite Int.unsigned_repr.",
            "VernacExtend",
            "a8943e35722dfb96bf3f1ebc66d4a8cd6f05e78a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite Int.unsigned_repr_wordsize.",
            "VernacExtend",
            "085aad41418d64371790d9cee768fd45e3b00867"
        ],
        [
            "generalize Int.wordsize_max_unsigned; omega.",
            "VernacExtend",
            "c2f0bdd64a28af3f4262b00bd08376130fc90c2d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (zwordsize = 2 * Int.zwordsize) by reflexivity.",
            "VernacExtend",
            "1b29bc7f171652138eff857b5c53d85cc5641db8"
        ],
        [
            "apply Int64.same_bits_eq; intros.",
            "VernacExtend",
            "e40835669e65a3bf44a1b7da4992aa3b741b9691"
        ],
        [
            "rewrite bits_shru' by auto.",
            "VernacExtend",
            "98611f43167aa979e66026f7443e180d7ea44f6b"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "rewrite bits_ofwords by auto.",
            "VernacExtend",
            "05561d9f08f2582def67b0c01711576cca51ec90"
        ],
        [
            "destruct (zlt i Int.zwordsize).",
            "VernacExtend",
            "36965c69056d1565bd2af3276289dd29e7f0cc00"
        ],
        [
            "rewrite zlt_true by omega.",
            "VernacExtend",
            "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
        ],
        [
            "rewrite bits_ofwords by omega.",
            "VernacExtend",
            "f53c5f05e4a2dd89043b10b8440f6d7ac028cdb9"
        ],
        [
            "rewrite Int.bits_or by omega.",
            "VernacExtend",
            "c1fd56c715aa7e4a8254feb4cc93c56f470b3529"
        ],
        [
            "rewrite Int.bits_shl by omega.",
            "VernacExtend",
            "30070da6a9648df78d6be6cc68358945cb3ccafd"
        ],
        [
            "rewrite Int.bits_shru by omega.",
            "VernacExtend",
            "4a0a3a23bcbe2af00d5209edf88e3b6d0ff7057e"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "destruct (zlt (i + Int.unsigned y) (Int.zwordsize)).",
            "VernacExtend",
            "f561bb14947471cc87a3696930b683a6ae494fab"
        ],
        [
            "rewrite zlt_true by omega.",
            "VernacExtend",
            "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
        ],
        [
            "rewrite orb_false_r.",
            "VernacExtend",
            "1f347086f7a141d5c22c1549eee172fd8a72e833"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite zlt_false by omega.",
            "VernacExtend",
            "1a3d93f438781af1cb3b43101336d435afaef9a1"
        ],
        [
            "rewrite orb_false_l.",
            "VernacExtend",
            "dce4660bb0304c3566af283a80836da73d45b705"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite Int.bits_shru by omega.",
            "VernacExtend",
            "4a0a3a23bcbe2af00d5209edf88e3b6d0ff7057e"
        ],
        [
            "destruct (zlt (i + Int.unsigned y) zwordsize).",
            "VernacExtend",
            "fe5b63a10662e9e75a91e9f4ce7bca51d49af5fb"
        ],
        [
            "rewrite bits_ofwords by omega.",
            "VernacExtend",
            "f53c5f05e4a2dd89043b10b8440f6d7ac028cdb9"
        ],
        [
            "rewrite zlt_true by omega.",
            "VernacExtend",
            "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
        ],
        [
            "rewrite zlt_false by omega.",
            "VernacExtend",
            "1a3d93f438781af1cb3b43101336d435afaef9a1"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite zlt_false by omega.",
            "VernacExtend",
            "1a3d93f438781af1cb3b43101336d435afaef9a1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decompose_shru_2: forall xh xl y, Int.zwordsize <= Int.unsigned y < zwordsize -> shru' (ofwords xh xl) y = ofwords Int.zero (Int.shru xh (Int.sub y Int.iwordsize)).",
            "VernacStartTheoremProof",
            "88b9c237601bdde1dc2643f054232b5b757e4da2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (zwordsize = 2 * Int.zwordsize) by reflexivity.",
            "VernacExtend",
            "1b29bc7f171652138eff857b5c53d85cc5641db8"
        ],
        [
            "assert (Int.unsigned (Int.sub y Int.iwordsize) = Int.unsigned y - Int.zwordsize).",
            "VernacExtend",
            "ac77881210f9f14b6e90aa0bb04642ba31991772"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold Int.sub.",
            "VernacExtend",
            "1170869a324af572e1e05cd70a3c8ddc34d9f678"
        ],
        [
            "rewrite Int.unsigned_repr.",
            "VernacExtend",
            "a8943e35722dfb96bf3f1ebc66d4a8cd6f05e78a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite Int.unsigned_repr_wordsize.",
            "VernacExtend",
            "085aad41418d64371790d9cee768fd45e3b00867"
        ],
        [
            "generalize (Int.unsigned_range_2 y).",
            "VernacExtend",
            "6b5905db15033139d01d5aedb977e23c5dd9e844"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply Int64.same_bits_eq; intros.",
            "VernacExtend",
            "e40835669e65a3bf44a1b7da4992aa3b741b9691"
        ],
        [
            "rewrite bits_shru' by auto.",
            "VernacExtend",
            "98611f43167aa979e66026f7443e180d7ea44f6b"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "rewrite bits_ofwords by auto.",
            "VernacExtend",
            "05561d9f08f2582def67b0c01711576cca51ec90"
        ],
        [
            "destruct (zlt i Int.zwordsize).",
            "VernacExtend",
            "36965c69056d1565bd2af3276289dd29e7f0cc00"
        ],
        [
            "rewrite Int.bits_shru by omega.",
            "VernacExtend",
            "4a0a3a23bcbe2af00d5209edf88e3b6d0ff7057e"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "destruct (zlt (i + Int.unsigned y) zwordsize).",
            "VernacExtend",
            "fe5b63a10662e9e75a91e9f4ce7bca51d49af5fb"
        ],
        [
            "rewrite zlt_true by omega.",
            "VernacExtend",
            "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
        ],
        [
            "rewrite bits_ofwords by omega.",
            "VernacExtend",
            "f53c5f05e4a2dd89043b10b8440f6d7ac028cdb9"
        ],
        [
            "rewrite zlt_false by omega.",
            "VernacExtend",
            "1a3d93f438781af1cb3b43101336d435afaef9a1"
        ],
        [
            "f_equal; omega.",
            "VernacExtend",
            "3b812353131f9b9bebbd6410b3fa7c9d2e597ec3"
        ],
        [
            "rewrite zlt_false by omega.",
            "VernacExtend",
            "1a3d93f438781af1cb3b43101336d435afaef9a1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite zlt_false by omega.",
            "VernacExtend",
            "1a3d93f438781af1cb3b43101336d435afaef9a1"
        ],
        [
            "apply Int.bits_zero.",
            "VernacExtend",
            "1d93a9d008cd1d96185c3b6509dcbd0910e4df21"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decompose_shr_1: forall xh xl y, 0 <= Int.unsigned y < Int.zwordsize -> shr' (ofwords xh xl) y = ofwords (Int.shr xh y) (Int.or (Int.shru xl y) (Int.shl xh (Int.sub Int.iwordsize y))).",
            "VernacStartTheoremProof",
            "f0a34ba74ad73b9aeadc3e82d9e0038c391b8437"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Int.unsigned (Int.sub Int.iwordsize y) = Int.zwordsize - Int.unsigned y).",
            "VernacExtend",
            "58591357136fc989f17ecdea5c0f36b3874af253"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold Int.sub.",
            "VernacExtend",
            "1170869a324af572e1e05cd70a3c8ddc34d9f678"
        ],
        [
            "rewrite Int.unsigned_repr.",
            "VernacExtend",
            "a8943e35722dfb96bf3f1ebc66d4a8cd6f05e78a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite Int.unsigned_repr_wordsize.",
            "VernacExtend",
            "085aad41418d64371790d9cee768fd45e3b00867"
        ],
        [
            "generalize Int.wordsize_max_unsigned; omega.",
            "VernacExtend",
            "c2f0bdd64a28af3f4262b00bd08376130fc90c2d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (zwordsize = 2 * Int.zwordsize) by reflexivity.",
            "VernacExtend",
            "1b29bc7f171652138eff857b5c53d85cc5641db8"
        ],
        [
            "apply Int64.same_bits_eq; intros.",
            "VernacExtend",
            "e40835669e65a3bf44a1b7da4992aa3b741b9691"
        ],
        [
            "rewrite bits_shr' by auto.",
            "VernacExtend",
            "b1aa834682cc69e26c2912f0f6e2efd5f3520956"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "rewrite bits_ofwords by auto.",
            "VernacExtend",
            "05561d9f08f2582def67b0c01711576cca51ec90"
        ],
        [
            "destruct (zlt i Int.zwordsize).",
            "VernacExtend",
            "36965c69056d1565bd2af3276289dd29e7f0cc00"
        ],
        [
            "rewrite zlt_true by omega.",
            "VernacExtend",
            "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
        ],
        [
            "rewrite bits_ofwords by omega.",
            "VernacExtend",
            "f53c5f05e4a2dd89043b10b8440f6d7ac028cdb9"
        ],
        [
            "rewrite Int.bits_or by omega.",
            "VernacExtend",
            "c1fd56c715aa7e4a8254feb4cc93c56f470b3529"
        ],
        [
            "rewrite Int.bits_shl by omega.",
            "VernacExtend",
            "30070da6a9648df78d6be6cc68358945cb3ccafd"
        ],
        [
            "rewrite Int.bits_shru by omega.",
            "VernacExtend",
            "4a0a3a23bcbe2af00d5209edf88e3b6d0ff7057e"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "destruct (zlt (i + Int.unsigned y) (Int.zwordsize)).",
            "VernacExtend",
            "f561bb14947471cc87a3696930b683a6ae494fab"
        ],
        [
            "rewrite zlt_true by omega.",
            "VernacExtend",
            "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
        ],
        [
            "rewrite orb_false_r.",
            "VernacExtend",
            "1f347086f7a141d5c22c1549eee172fd8a72e833"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite zlt_false by omega.",
            "VernacExtend",
            "1a3d93f438781af1cb3b43101336d435afaef9a1"
        ],
        [
            "rewrite orb_false_l.",
            "VernacExtend",
            "dce4660bb0304c3566af283a80836da73d45b705"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite Int.bits_shr by omega.",
            "VernacExtend",
            "3bea41576588a878332779b2b1bd034c6102f8dc"
        ],
        [
            "destruct (zlt (i + Int.unsigned y) zwordsize).",
            "VernacExtend",
            "fe5b63a10662e9e75a91e9f4ce7bca51d49af5fb"
        ],
        [
            "rewrite bits_ofwords by omega.",
            "VernacExtend",
            "f53c5f05e4a2dd89043b10b8440f6d7ac028cdb9"
        ],
        [
            "rewrite zlt_true by omega.",
            "VernacExtend",
            "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
        ],
        [
            "rewrite zlt_false by omega.",
            "VernacExtend",
            "1a3d93f438781af1cb3b43101336d435afaef9a1"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite zlt_false by omega.",
            "VernacExtend",
            "1a3d93f438781af1cb3b43101336d435afaef9a1"
        ],
        [
            "rewrite bits_ofwords by omega.",
            "VernacExtend",
            "f53c5f05e4a2dd89043b10b8440f6d7ac028cdb9"
        ],
        [
            "rewrite zlt_false by omega.",
            "VernacExtend",
            "1a3d93f438781af1cb3b43101336d435afaef9a1"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decompose_shr_2: forall xh xl y, Int.zwordsize <= Int.unsigned y < zwordsize -> shr' (ofwords xh xl) y = ofwords (Int.shr xh (Int.sub Int.iwordsize Int.one)) (Int.shr xh (Int.sub y Int.iwordsize)).",
            "VernacStartTheoremProof",
            "9cb34751ddccbb5032f9e376fc85dc6b1ccd978b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (zwordsize = 2 * Int.zwordsize) by reflexivity.",
            "VernacExtend",
            "1b29bc7f171652138eff857b5c53d85cc5641db8"
        ],
        [
            "assert (Int.unsigned (Int.sub y Int.iwordsize) = Int.unsigned y - Int.zwordsize).",
            "VernacExtend",
            "ac77881210f9f14b6e90aa0bb04642ba31991772"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold Int.sub.",
            "VernacExtend",
            "1170869a324af572e1e05cd70a3c8ddc34d9f678"
        ],
        [
            "rewrite Int.unsigned_repr.",
            "VernacExtend",
            "a8943e35722dfb96bf3f1ebc66d4a8cd6f05e78a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite Int.unsigned_repr_wordsize.",
            "VernacExtend",
            "085aad41418d64371790d9cee768fd45e3b00867"
        ],
        [
            "generalize (Int.unsigned_range_2 y).",
            "VernacExtend",
            "6b5905db15033139d01d5aedb977e23c5dd9e844"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply Int64.same_bits_eq; intros.",
            "VernacExtend",
            "e40835669e65a3bf44a1b7da4992aa3b741b9691"
        ],
        [
            "rewrite bits_shr' by auto.",
            "VernacExtend",
            "b1aa834682cc69e26c2912f0f6e2efd5f3520956"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "rewrite bits_ofwords by auto.",
            "VernacExtend",
            "05561d9f08f2582def67b0c01711576cca51ec90"
        ],
        [
            "destruct (zlt i Int.zwordsize).",
            "VernacExtend",
            "36965c69056d1565bd2af3276289dd29e7f0cc00"
        ],
        [
            "rewrite Int.bits_shr by omega.",
            "VernacExtend",
            "3bea41576588a878332779b2b1bd034c6102f8dc"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "destruct (zlt (i + Int.unsigned y) zwordsize).",
            "VernacExtend",
            "fe5b63a10662e9e75a91e9f4ce7bca51d49af5fb"
        ],
        [
            "rewrite zlt_true by omega.",
            "VernacExtend",
            "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
        ],
        [
            "rewrite bits_ofwords by omega.",
            "VernacExtend",
            "f53c5f05e4a2dd89043b10b8440f6d7ac028cdb9"
        ],
        [
            "rewrite zlt_false by omega.",
            "VernacExtend",
            "1a3d93f438781af1cb3b43101336d435afaef9a1"
        ],
        [
            "f_equal; omega.",
            "VernacExtend",
            "3b812353131f9b9bebbd6410b3fa7c9d2e597ec3"
        ],
        [
            "rewrite zlt_false by omega.",
            "VernacExtend",
            "1a3d93f438781af1cb3b43101336d435afaef9a1"
        ],
        [
            "rewrite bits_ofwords by omega.",
            "VernacExtend",
            "f53c5f05e4a2dd89043b10b8440f6d7ac028cdb9"
        ],
        [
            "rewrite zlt_false by omega.",
            "VernacExtend",
            "1a3d93f438781af1cb3b43101336d435afaef9a1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite Int.bits_shr by omega.",
            "VernacExtend",
            "3bea41576588a878332779b2b1bd034c6102f8dc"
        ],
        [
            "change (Int.unsigned (Int.sub Int.iwordsize Int.one)) with (Int.zwordsize - 1).",
            "VernacExtend",
            "ce0d23b73c2e0433f1856f911b655f784bf8ead8"
        ],
        [
            "destruct (zlt (i + Int.unsigned y) zwordsize); rewrite bits_ofwords by omega.",
            "VernacExtend",
            "e9dfea6954eca3175a3c4b4caa56eddb298d3b4a"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "rewrite zlt_false by omega.",
            "VernacExtend",
            "1a3d93f438781af1cb3b43101336d435afaef9a1"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "destruct (zlt (i - Int.zwordsize + (Int.zwordsize - 1)) Int.zwordsize); omega.",
            "VernacExtend",
            "d10e2234e36b39e8fb0afb8770b9b4d19141c743"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "rewrite zlt_false by omega.",
            "VernacExtend",
            "1a3d93f438781af1cb3b43101336d435afaef9a1"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "destruct (zlt (i - Int.zwordsize + (Int.zwordsize - 1)) Int.zwordsize); omega.",
            "VernacExtend",
            "d10e2234e36b39e8fb0afb8770b9b4d19141c743"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decompose_add: forall xh xl yh yl, add (ofwords xh xl) (ofwords yh yl) = ofwords (Int.add (Int.add xh yh) (Int.add_carry xl yl Int.zero)) (Int.add xl yl).",
            "VernacStartTheoremProof",
            "d6a8da33298e36d7d5117aeafa41c55ced1eaf8f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "rewrite ofwords_add.",
            "VernacExtend",
            "5ceeb88b9f12c371f27ef33ad4fe9bb62883478c"
        ],
        [
            "rewrite add_unsigned.",
            "VernacExtend",
            "349bdc05af730edc67c16b07eae2e12b7485afa2"
        ],
        [
            "apply eqm_samerepr.",
            "VernacExtend",
            "2226a5674ed5a7db984e878fdbb37775ca665295"
        ],
        [
            "rewrite ! ofwords_add'.",
            "VernacExtend",
            "6059a4a6671c5fb1cab95ae1e11036e34d8f7554"
        ],
        [
            "rewrite (Int.unsigned_add_carry xl yl).",
            "VernacExtend",
            "3bc0005eda4ebff06692185e97ad017db3e9d070"
        ],
        [
            "set (cc := Int.add_carry xl yl Int.zero).",
            "VernacExtend",
            "366109823d3307c733a81833284fd71eda09e323"
        ],
        [
            "set (Xl := Int.unsigned xl); set (Xh := Int.unsigned xh); set (Yl := Int.unsigned yl); set (Yh := Int.unsigned yh).",
            "VernacExtend",
            "587f1b4ea2adc587ec47d975dfb7ad27a8699d4b"
        ],
        [
            "change Int.modulus with (two_p 32).",
            "VernacExtend",
            "7e9aa7c9a569a8e5be3cbc0d8367b26497a3f312"
        ],
        [
            "replace (Xh * two_p 32 + Xl + (Yh * two_p 32 + Yl)) with ((Xh + Yh) * two_p 32 + (Xl + Yl)) by ring.",
            "VernacExtend",
            "f46a6e20df86df9e53a5394f3358569b422b9e72"
        ],
        [
            "replace (Int.unsigned (Int.add (Int.add xh yh) cc) * two_p 32 + (Xl + Yl - Int.unsigned cc * two_p 32)) with ((Int.unsigned (Int.add (Int.add xh yh) cc) - Int.unsigned cc) * two_p 32 + (Xl + Yl)) by ring.",
            "VernacExtend",
            "082560a062874e45797307c2f7aaae8ac849183e"
        ],
        [
            "apply eqm_add.",
            "VernacExtend",
            "6c81c3e6c0a0d0574105329a31bbe3cdf542f623"
        ],
        [
            "2: apply eqm_refl.",
            "VernacExtend",
            "92e05ba69ff9fabbdbcda358b24bba2388a98c09"
        ],
        [
            "apply eqm_mul_2p32.",
            "VernacExtend",
            "ac416561659634c2f003eab7db7273d3c4f44d73"
        ],
        [
            "replace (Xh + Yh) with ((Xh + Yh + Int.unsigned cc) - Int.unsigned cc) by ring.",
            "VernacExtend",
            "2892361df635ca4c19fb3e4dfc169306ed291e37"
        ],
        [
            "apply Int.eqm_sub.",
            "VernacExtend",
            "f20564af0418f404c15fc28c17c0f3b2186f5483"
        ],
        [
            "2: apply Int.eqm_refl.",
            "VernacExtend",
            "cf91529f8b79ef4d922125880256381cc859dc83"
        ],
        [
            "apply Int.eqm_unsigned_repr_l.",
            "VernacExtend",
            "16d72fcf85d5497f6b6df5cf7a5e83e212a6088a"
        ],
        [
            "apply Int.eqm_add.",
            "VernacExtend",
            "b1f3057d78c587b50bf785403065e421d60d17c5"
        ],
        [
            "2: apply Int.eqm_refl.",
            "VernacExtend",
            "cf91529f8b79ef4d922125880256381cc859dc83"
        ],
        [
            "apply Int.eqm_unsigned_repr_l.",
            "VernacExtend",
            "16d72fcf85d5497f6b6df5cf7a5e83e212a6088a"
        ],
        [
            "apply Int.eqm_refl.",
            "VernacExtend",
            "d6f83289b2492449939f56ac2ca091e2f1c90748"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decompose_sub: forall xh xl yh yl, sub (ofwords xh xl) (ofwords yh yl) = ofwords (Int.sub (Int.sub xh yh) (Int.sub_borrow xl yl Int.zero)) (Int.sub xl yl).",
            "VernacStartTheoremProof",
            "949e985a3bf58ffda097c0dd61aa8643524398f7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "rewrite ofwords_add.",
            "VernacExtend",
            "5ceeb88b9f12c371f27ef33ad4fe9bb62883478c"
        ],
        [
            "apply eqm_samerepr.",
            "VernacExtend",
            "2226a5674ed5a7db984e878fdbb37775ca665295"
        ],
        [
            "rewrite ! ofwords_add'.",
            "VernacExtend",
            "6059a4a6671c5fb1cab95ae1e11036e34d8f7554"
        ],
        [
            "rewrite (Int.unsigned_sub_borrow xl yl).",
            "VernacExtend",
            "eb0401a0e793c1c71cb3239ce0683541d2c7cef4"
        ],
        [
            "set (bb := Int.sub_borrow xl yl Int.zero).",
            "VernacExtend",
            "e13d8d925b0d6ea7997b01f42f123e75ba3e141b"
        ],
        [
            "set (Xl := Int.unsigned xl); set (Xh := Int.unsigned xh); set (Yl := Int.unsigned yl); set (Yh := Int.unsigned yh).",
            "VernacExtend",
            "587f1b4ea2adc587ec47d975dfb7ad27a8699d4b"
        ],
        [
            "change Int.modulus with (two_p 32).",
            "VernacExtend",
            "7e9aa7c9a569a8e5be3cbc0d8367b26497a3f312"
        ],
        [
            "replace (Xh * two_p 32 + Xl - (Yh * two_p 32 + Yl)) with ((Xh - Yh) * two_p 32 + (Xl - Yl)) by ring.",
            "VernacExtend",
            "c82bf1df235bb01d903c999dc56dbb4356681da7"
        ],
        [
            "replace (Int.unsigned (Int.sub (Int.sub xh yh) bb) * two_p 32 + (Xl - Yl + Int.unsigned bb * two_p 32)) with ((Int.unsigned (Int.sub (Int.sub xh yh) bb) + Int.unsigned bb) * two_p 32 + (Xl - Yl)) by ring.",
            "VernacExtend",
            "9ac756d0823aa7e06e30cc08882eff737c46a932"
        ],
        [
            "apply eqm_add.",
            "VernacExtend",
            "6c81c3e6c0a0d0574105329a31bbe3cdf542f623"
        ],
        [
            "2: apply eqm_refl.",
            "VernacExtend",
            "92e05ba69ff9fabbdbcda358b24bba2388a98c09"
        ],
        [
            "apply eqm_mul_2p32.",
            "VernacExtend",
            "ac416561659634c2f003eab7db7273d3c4f44d73"
        ],
        [
            "replace (Xh - Yh) with ((Xh - Yh - Int.unsigned bb) + Int.unsigned bb) by ring.",
            "VernacExtend",
            "b5715d116961aa5b69c20eaf7da5305ed30fd39c"
        ],
        [
            "apply Int.eqm_add.",
            "VernacExtend",
            "b1f3057d78c587b50bf785403065e421d60d17c5"
        ],
        [
            "2: apply Int.eqm_refl.",
            "VernacExtend",
            "cf91529f8b79ef4d922125880256381cc859dc83"
        ],
        [
            "apply Int.eqm_unsigned_repr_l.",
            "VernacExtend",
            "16d72fcf85d5497f6b6df5cf7a5e83e212a6088a"
        ],
        [
            "apply Int.eqm_add.",
            "VernacExtend",
            "b1f3057d78c587b50bf785403065e421d60d17c5"
        ],
        [
            "2: apply Int.eqm_refl.",
            "VernacExtend",
            "cf91529f8b79ef4d922125880256381cc859dc83"
        ],
        [
            "apply Int.eqm_unsigned_repr_l.",
            "VernacExtend",
            "16d72fcf85d5497f6b6df5cf7a5e83e212a6088a"
        ],
        [
            "apply Int.eqm_refl.",
            "VernacExtend",
            "d6f83289b2492449939f56ac2ca091e2f1c90748"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decompose_sub': forall xh xl yh yl, sub (ofwords xh xl) (ofwords yh yl) = ofwords (Int.add (Int.add xh (Int.not yh)) (Int.add_carry xl (Int.not yl) Int.one)) (Int.sub xl yl).",
            "VernacStartTheoremProof",
            "4e7fa9ca9ec314944440764034d9dc733d05cc81"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite decompose_sub.",
            "VernacExtend",
            "658a1340cb66be32b3b7a6e023cd77c88badb55d"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite Int.sub_borrow_add_carry by auto.",
            "VernacExtend",
            "9a7396a2b67a5f9e16d026ab288130115d1c8a6d"
        ],
        [
            "rewrite Int.sub_add_not_3.",
            "VernacExtend",
            "13384b066d64ac273ac8d1c70e3350e2598ac2b6"
        ],
        [
            "rewrite Int.xor_assoc.",
            "VernacExtend",
            "34085049fb7160eb8681396f0bb148c64c9961af"
        ],
        [
            "rewrite Int.xor_idem.",
            "VernacExtend",
            "03548c80346d8b69d54c42106c324e09993b15bd"
        ],
        [
            "rewrite Int.xor_zero.",
            "VernacExtend",
            "3b01c70d69e4e0c217c0085a53c3e7c693d46672"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite Int.xor_zero_l.",
            "VernacExtend",
            "bd57ef3ef35d9b87328d75f63f0b48cb6a147575"
        ],
        [
            "unfold Int.add_carry.",
            "VernacExtend",
            "b4e297c287f00ae21fc762e24d725714d057c304"
        ],
        [
            "destruct (zlt (Int.unsigned xl + Int.unsigned (Int.not yl) + Int.unsigned Int.one) Int.modulus); compute; [right|left]; apply Int.mkint_eq; auto.",
            "VernacExtend",
            "640c0becb389f08cfe4c03d964f8fcd993155fa7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition mul' (x y: Int.int) : int := repr (Int.unsigned x * Int.unsigned y).",
            "VernacDefinition",
            "706f46aaa467f5c93fa7ba7fd452ca7aaf8c918e"
        ],
        [
            "Lemma mul'_mulhu: forall x y, mul' x y = ofwords (Int.mulhu x y) (Int.mul x y).",
            "VernacStartTheoremProof",
            "a47528adefcf6cb0ca857d17253c15d60980164d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite ofwords_add.",
            "VernacExtend",
            "5ceeb88b9f12c371f27ef33ad4fe9bb62883478c"
        ],
        [
            "unfold mul', Int.mulhu, Int.mul.",
            "VernacExtend",
            "79b924b9d8f28bad39287640a8176c8a8e2f2144"
        ],
        [
            "set (p := Int.unsigned x * Int.unsigned y).",
            "VernacExtend",
            "1d8b4a85313302239f1d09564884de5ade59eaa8"
        ],
        [
            "set (ph := p / Int.modulus).",
            "VernacExtend",
            "661184355dbd64c529041815d052150b82c3b069"
        ],
        [
            "set (pl := p mod Int.modulus).",
            "VernacExtend",
            "02c6cd6166b67ac8fb0f714b489f04583290150c"
        ],
        [
            "transitivity (repr (ph * Int.modulus + pl)).",
            "VernacExtend",
            "b593660fa26f38fdab2ff041c66b0198c20947ee"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite Z.mul_comm.",
            "VernacExtend",
            "088699fe7f894ededd3c93ab3a27f9d105f1ab84"
        ],
        [
            "apply Z_div_mod_eq.",
            "VernacExtend",
            "c7c7b8c0b3f502009e6f882787bdcc803640e476"
        ],
        [
            "apply Int.modulus_pos.",
            "VernacExtend",
            "098e4b904cbde9eaae3ec6465871c8a33e13af4c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply eqm_samerepr.",
            "VernacExtend",
            "2226a5674ed5a7db984e878fdbb37775ca665295"
        ],
        [
            "apply eqm_add.",
            "VernacExtend",
            "6c81c3e6c0a0d0574105329a31bbe3cdf542f623"
        ],
        [
            "apply eqm_mul_2p32.",
            "VernacExtend",
            "ac416561659634c2f003eab7db7273d3c4f44d73"
        ],
        [
            "auto with ints.",
            "VernacExtend",
            "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
        ],
        [
            "rewrite Int.unsigned_repr_eq.",
            "VernacExtend",
            "bb8c6a81bff17ed516f26dbf13ee674c6334cec4"
        ],
        [
            "apply eqm_refl.",
            "VernacExtend",
            "cd38aceb6abd087396d34625c4f0ed69968a7526"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decompose_mul: forall xh xl yh yl, mul (ofwords xh xl) (ofwords yh yl) = ofwords (Int.add (Int.add (hiword (mul' xl yl)) (Int.mul xl yh)) (Int.mul xh yl)) (loword (mul' xl yl)).",
            "VernacStartTheoremProof",
            "188ba9baf0e23c469bffba0761f0b9cd03751462"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "set (pl := loword (mul' xl yl)); set (ph := hiword (mul' xl yl)).",
            "VernacExtend",
            "b871ebf004d7412aa5b242c169154eff0af3eb18"
        ],
        [
            "assert (EQ0: unsigned (mul' xl yl) = Int.unsigned ph * two_p 32 + Int.unsigned pl).",
            "VernacExtend",
            "f41845a90ebb97edd2b85f9be4ce3b8926e70c35"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite <- (ofwords_recompose (mul' xl yl)).",
            "VernacExtend",
            "14ce53736f009a475ab094581e28a69689d0e2c3"
        ],
        [
            "apply ofwords_add'.",
            "VernacExtend",
            "1ee54e7359bb20c122874555966d738f909bee51"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "rewrite ofwords_add.",
            "VernacExtend",
            "5ceeb88b9f12c371f27ef33ad4fe9bb62883478c"
        ],
        [
            "unfold mul.",
            "VernacExtend",
            "177e01106c95f433aa4fec630d226d724d6b851d"
        ],
        [
            "rewrite !ofwords_add'.",
            "VernacExtend",
            "6059a4a6671c5fb1cab95ae1e11036e34d8f7554"
        ],
        [
            "set (XL := Int.unsigned xl); set (XH := Int.unsigned xh); set (YL := Int.unsigned yl); set (YH := Int.unsigned yh).",
            "VernacExtend",
            "d9b55c2251dedf2b4be4d85c9fa0ece30b364bba"
        ],
        [
            "set (PH := Int.unsigned ph) in *.",
            "VernacExtend",
            "de136696414182e95a871556953700f2c7ff9f2a"
        ],
        [
            "set (PL := Int.unsigned pl) in *.",
            "VernacExtend",
            "69a10e061f3b9510d25d633c8302239e657dd31e"
        ],
        [
            "transitivity (repr (((PH + XL * YH) + XH * YL) * two_p 32 + PL)).",
            "VernacExtend",
            "a2ff1c11e041a983eb3c60df6c9f16742a833bbe"
        ],
        [
            "apply eqm_samerepr.",
            "VernacExtend",
            "2226a5674ed5a7db984e878fdbb37775ca665295"
        ],
        [
            "apply eqm_add.",
            "VernacExtend",
            "6c81c3e6c0a0d0574105329a31bbe3cdf542f623"
        ],
        [
            "2: apply eqm_refl.",
            "VernacExtend",
            "92e05ba69ff9fabbdbcda358b24bba2388a98c09"
        ],
        [
            "apply eqm_mul_2p32.",
            "VernacExtend",
            "ac416561659634c2f003eab7db7273d3c4f44d73"
        ],
        [
            "rewrite Int.add_unsigned.",
            "VernacExtend",
            "f02142b7a7462e42c0a4c66265955c70a7f9a4b6"
        ],
        [
            "apply Int.eqm_unsigned_repr_l.",
            "VernacExtend",
            "16d72fcf85d5497f6b6df5cf7a5e83e212a6088a"
        ],
        [
            "apply Int.eqm_add.",
            "VernacExtend",
            "b1f3057d78c587b50bf785403065e421d60d17c5"
        ],
        [
            "rewrite Int.add_unsigned.",
            "VernacExtend",
            "f02142b7a7462e42c0a4c66265955c70a7f9a4b6"
        ],
        [
            "apply Int.eqm_unsigned_repr_l.",
            "VernacExtend",
            "16d72fcf85d5497f6b6df5cf7a5e83e212a6088a"
        ],
        [
            "apply Int.eqm_add.",
            "VernacExtend",
            "b1f3057d78c587b50bf785403065e421d60d17c5"
        ],
        [
            "apply Int.eqm_refl.",
            "VernacExtend",
            "d6f83289b2492449939f56ac2ca091e2f1c90748"
        ],
        [
            "unfold Int.mul.",
            "VernacExtend",
            "6d6251bd4e6e5f9936b8a5dd0dd49d68ceb1b168"
        ],
        [
            "apply Int.eqm_unsigned_repr_l.",
            "VernacExtend",
            "16d72fcf85d5497f6b6df5cf7a5e83e212a6088a"
        ],
        [
            "apply Int.eqm_refl.",
            "VernacExtend",
            "d6f83289b2492449939f56ac2ca091e2f1c90748"
        ],
        [
            "unfold Int.mul.",
            "VernacExtend",
            "6d6251bd4e6e5f9936b8a5dd0dd49d68ceb1b168"
        ],
        [
            "apply Int.eqm_unsigned_repr_l.",
            "VernacExtend",
            "16d72fcf85d5497f6b6df5cf7a5e83e212a6088a"
        ],
        [
            "apply Int.eqm_refl.",
            "VernacExtend",
            "d6f83289b2492449939f56ac2ca091e2f1c90748"
        ],
        [
            "transitivity (repr (unsigned (mul' xl yl) + (XL * YH + XH * YL) * two_p 32)).",
            "VernacExtend",
            "a9471848d98ad982eae1966ac0cebb0a20286cbe"
        ],
        [
            "rewrite EQ0.",
            "VernacExtend",
            "83c1beb0880ee7bd8dcd6d41a86da4a4e41e6cb9"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "transitivity (repr ((XL * YL + (XL * YH + XH * YL) * two_p 32))).",
            "VernacExtend",
            "0b6cadd8b3582c0bdd110492feae6311c4080226"
        ],
        [
            "apply eqm_samerepr.",
            "VernacExtend",
            "2226a5674ed5a7db984e878fdbb37775ca665295"
        ],
        [
            "apply eqm_add.",
            "VernacExtend",
            "6c81c3e6c0a0d0574105329a31bbe3cdf542f623"
        ],
        [
            "2: apply eqm_refl.",
            "VernacExtend",
            "92e05ba69ff9fabbdbcda358b24bba2388a98c09"
        ],
        [
            "unfold mul'.",
            "VernacExtend",
            "7b0a46efced877ff4b057b6d6099bd5f084a4e33"
        ],
        [
            "apply eqm_unsigned_repr_l.",
            "VernacExtend",
            "f8c0df5a7c25eea501480495633bd91f52c10673"
        ],
        [
            "apply eqm_refl.",
            "VernacExtend",
            "cd38aceb6abd087396d34625c4f0ed69968a7526"
        ],
        [
            "transitivity (repr (0 + (XL * YL + (XL * YH + XH * YL) * two_p 32))).",
            "VernacExtend",
            "596b6e1758f0e3fe5f2806eee942421987a01799"
        ],
        [
            "rewrite Z.add_0_l; auto.",
            "VernacExtend",
            "98f35ee0a5f8902dd4708c191de62b935d8a1915"
        ],
        [
            "transitivity (repr (XH * YH * (two_p 32 * two_p 32) + (XL * YL + (XL * YH + XH * YL) * two_p 32))).",
            "VernacExtend",
            "96cce85e0ea97a1deb620b026aa5dc164c57c810"
        ],
        [
            "apply eqm_samerepr.",
            "VernacExtend",
            "2226a5674ed5a7db984e878fdbb37775ca665295"
        ],
        [
            "apply eqm_add.",
            "VernacExtend",
            "6c81c3e6c0a0d0574105329a31bbe3cdf542f623"
        ],
        [
            "2: apply eqm_refl.",
            "VernacExtend",
            "92e05ba69ff9fabbdbcda358b24bba2388a98c09"
        ],
        [
            "change (two_p 32 * two_p 32) with modulus.",
            "VernacExtend",
            "006abf6e5a5efee376336a503a386832e4245ba3"
        ],
        [
            "exists (- XH * YH).",
            "VernacExtend",
            "3d2088c17f0de491322b3d252649d4740729a549"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decompose_mul_2: forall xh xl yh yl, mul (ofwords xh xl) (ofwords yh yl) = ofwords (Int.add (Int.add (Int.mulhu xl yl) (Int.mul xl yh)) (Int.mul xh yl)) (Int.mul xl yl).",
            "VernacStartTheoremProof",
            "7edeb7f28ea26d93d1ee761fbaa075fcd92cc37b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite decompose_mul.",
            "VernacExtend",
            "85ef03b4806ed51154b0d58da4b51b96e67d7acf"
        ],
        [
            "rewrite mul'_mulhu.",
            "VernacExtend",
            "239927cb8ff2f8684523a83f71537eeddf5fb3ea"
        ],
        [
            "rewrite hi_ofwords, lo_ofwords.",
            "VernacExtend",
            "6d61edac5aaf068a6f77cb7bd5f49ff14f7067d9"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decompose_ltu: forall xh xl yh yl, ltu (ofwords xh xl) (ofwords yh yl) = if Int.eq xh yh then Int.ltu xl yl else Int.ltu xh yh.",
            "VernacStartTheoremProof",
            "4574f2cbd3320372f53bbb1fce3431c8c1258e24"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold ltu.",
            "VernacExtend",
            "e59e12052a96cc6c37e4e3abfd319dcb453c0f12"
        ],
        [
            "rewrite ! ofwords_add'.",
            "VernacExtend",
            "6059a4a6671c5fb1cab95ae1e11036e34d8f7554"
        ],
        [
            "unfold Int.ltu, Int.eq.",
            "VernacExtend",
            "562107b1ba3d964f53aeead0ff500870c623051c"
        ],
        [
            "destruct (zeq (Int.unsigned xh) (Int.unsigned yh)).",
            "VernacExtend",
            "baba3c4dc27adc3778518e9aa5e19e5e294fab8b"
        ],
        [
            "rewrite e.",
            "VernacExtend",
            "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
        ],
        [
            "destruct (zlt (Int.unsigned xl) (Int.unsigned yl)).",
            "VernacExtend",
            "14ff3eb267f28cc1e61b9ba378dca1cf23971669"
        ],
        [
            "apply zlt_true; omega.",
            "VernacExtend",
            "11d5ba53e57a55cf6c538075fe9ff297a155a96d"
        ],
        [
            "apply zlt_false; omega.",
            "VernacExtend",
            "babc6119603ed1a7aaee8e778bd0de4a23c8ad56"
        ],
        [
            "change (two_p 32) with Int.modulus.",
            "VernacExtend",
            "49d3ad9d5dad69d20c51e894a4980581aea22b69"
        ],
        [
            "generalize (Int.unsigned_range xl) (Int.unsigned_range yl).",
            "VernacExtend",
            "4a76386b35dd9e50b4a1ced98bc02ff047eb7c1c"
        ],
        [
            "change Int.modulus with 4294967296.",
            "VernacExtend",
            "57185799b9e971ee5fcb305708fba40953052080"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (zlt (Int.unsigned xh) (Int.unsigned yh)).",
            "VernacExtend",
            "f636b60c3fd7f910121a78f20734d127684c3b73"
        ],
        [
            "apply zlt_true; omega.",
            "VernacExtend",
            "11d5ba53e57a55cf6c538075fe9ff297a155a96d"
        ],
        [
            "apply zlt_false; omega.",
            "VernacExtend",
            "babc6119603ed1a7aaee8e778bd0de4a23c8ad56"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decompose_leu: forall xh xl yh yl, negb (ltu (ofwords yh yl) (ofwords xh xl)) = if Int.eq xh yh then negb (Int.ltu yl xl) else Int.ltu xh yh.",
            "VernacStartTheoremProof",
            "3337ab63c0c3045141fa63c46219b1dededaf872"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite decompose_ltu.",
            "VernacExtend",
            "6df57c20dfe486d0d62b5d6af1751eaf921d3e48"
        ],
        [
            "rewrite Int.eq_sym.",
            "VernacExtend",
            "364ab60eefd1c2da109e5402309eed1c95938ee9"
        ],
        [
            "unfold Int.eq.",
            "VernacExtend",
            "360a8d3fd462d4aaf79f93c9798afd1a24242ebe"
        ],
        [
            "destruct (zeq (Int.unsigned xh) (Int.unsigned yh)).",
            "VernacExtend",
            "baba3c4dc27adc3778518e9aa5e19e5e294fab8b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold Int.ltu.",
            "VernacExtend",
            "af9bb555e7ff976047f5582fed58c62158c36a7f"
        ],
        [
            "destruct (zlt (Int.unsigned xh) (Int.unsigned yh)).",
            "VernacExtend",
            "f636b60c3fd7f910121a78f20734d127684c3b73"
        ],
        [
            "rewrite zlt_false by omega; auto.",
            "VernacExtend",
            "6fd4daba0947d7ae6d7bbe5ab574702b76456198"
        ],
        [
            "rewrite zlt_true by omega; auto.",
            "VernacExtend",
            "42bfbde4ec99fa739b6c889bd62d15938a265857"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decompose_lt: forall xh xl yh yl, lt (ofwords xh xl) (ofwords yh yl) = if Int.eq xh yh then Int.ltu xl yl else Int.lt xh yh.",
            "VernacStartTheoremProof",
            "448a32f105d9f1041bc86175d424216997b8449b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold lt.",
            "VernacExtend",
            "2e821d407c03d5f5e572c51453fdc618d9dec364"
        ],
        [
            "rewrite ! ofwords_add''.",
            "VernacExtend",
            "b895d782407392c535c8d6ef5883587c16d6e5df"
        ],
        [
            "rewrite Int.eq_signed.",
            "VernacExtend",
            "d9de7e737a9e727ecfd5586eca18b7ce326e1fac"
        ],
        [
            "destruct (zeq (Int.signed xh) (Int.signed yh)).",
            "VernacExtend",
            "d362aaeee9847bc80ec734bb1c37b8e020b6a6c0"
        ],
        [
            "rewrite e.",
            "VernacExtend",
            "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
        ],
        [
            "unfold Int.ltu.",
            "VernacExtend",
            "af9bb555e7ff976047f5582fed58c62158c36a7f"
        ],
        [
            "destruct (zlt (Int.unsigned xl) (Int.unsigned yl)).",
            "VernacExtend",
            "14ff3eb267f28cc1e61b9ba378dca1cf23971669"
        ],
        [
            "apply zlt_true; omega.",
            "VernacExtend",
            "11d5ba53e57a55cf6c538075fe9ff297a155a96d"
        ],
        [
            "apply zlt_false; omega.",
            "VernacExtend",
            "babc6119603ed1a7aaee8e778bd0de4a23c8ad56"
        ],
        [
            "change (two_p 32) with Int.modulus.",
            "VernacExtend",
            "49d3ad9d5dad69d20c51e894a4980581aea22b69"
        ],
        [
            "generalize (Int.unsigned_range xl) (Int.unsigned_range yl).",
            "VernacExtend",
            "4a76386b35dd9e50b4a1ced98bc02ff047eb7c1c"
        ],
        [
            "change Int.modulus with 4294967296.",
            "VernacExtend",
            "57185799b9e971ee5fcb305708fba40953052080"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Int.lt.",
            "VernacExtend",
            "40a5c473a3096ac390ed5c47b56989cf156c955a"
        ],
        [
            "destruct (zlt (Int.signed xh) (Int.signed yh)).",
            "VernacExtend",
            "8590e7609313a0eb814dd5394bf999fc6773055a"
        ],
        [
            "apply zlt_true; omega.",
            "VernacExtend",
            "11d5ba53e57a55cf6c538075fe9ff297a155a96d"
        ],
        [
            "apply zlt_false; omega.",
            "VernacExtend",
            "babc6119603ed1a7aaee8e778bd0de4a23c8ad56"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decompose_le: forall xh xl yh yl, negb (lt (ofwords yh yl) (ofwords xh xl)) = if Int.eq xh yh then negb (Int.ltu yl xl) else Int.lt xh yh.",
            "VernacStartTheoremProof",
            "8075d79b6269ff15c281038134d45255122b60bb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite decompose_lt.",
            "VernacExtend",
            "8e3e293553e154fb94fb3caf4d86e823e068ec6a"
        ],
        [
            "rewrite Int.eq_sym.",
            "VernacExtend",
            "364ab60eefd1c2da109e5402309eed1c95938ee9"
        ],
        [
            "rewrite Int.eq_signed.",
            "VernacExtend",
            "d9de7e737a9e727ecfd5586eca18b7ce326e1fac"
        ],
        [
            "destruct (zeq (Int.signed xh) (Int.signed yh)).",
            "VernacExtend",
            "d362aaeee9847bc80ec734bb1c37b8e020b6a6c0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold Int.lt.",
            "VernacExtend",
            "40a5c473a3096ac390ed5c47b56989cf156c955a"
        ],
        [
            "destruct (zlt (Int.signed xh) (Int.signed yh)).",
            "VernacExtend",
            "8590e7609313a0eb814dd5394bf999fc6773055a"
        ],
        [
            "rewrite zlt_false by omega; auto.",
            "VernacExtend",
            "6fd4daba0947d7ae6d7bbe5ab574702b76456198"
        ],
        [
            "rewrite zlt_true by omega; auto.",
            "VernacExtend",
            "42bfbde4ec99fa739b6c889bd62d15938a265857"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark int_unsigned_range: forall x, 0 <= Int.unsigned x <= max_unsigned.",
            "VernacStartTheoremProof",
            "a7e2639dc5a8b13df96c0adaef7a134870306da7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold max_unsigned.",
            "VernacExtend",
            "36f5add4f60c9b122a3b68fcbd2bef84e6e0d135"
        ],
        [
            "unfold modulus.",
            "VernacExtend",
            "202f368b6f08b873343d2b49e63dddcb32f23f66"
        ],
        [
            "generalize (Int.unsigned_range x).",
            "VernacExtend",
            "a67cb5f6af47a78f4dbb03ddda2e54d04610fa71"
        ],
        [
            "unfold Int.modulus in *.",
            "VernacExtend",
            "aa83435dc35193c128728638893d92b05943bd37"
        ],
        [
            "change (wordsize) with 64%nat in *.",
            "VernacExtend",
            "297af2c4d3ef7d09cebef72975a6b7b0ff2e29c0"
        ],
        [
            "change (Int.wordsize) with 32%nat in *.",
            "VernacExtend",
            "4f6cd58f3077c9ce1a844602e3b3f495343b6555"
        ],
        [
            "unfold two_power_nat.",
            "VernacExtend",
            "320518eaf52b73801cbe7fcf8b98329a5e92c21a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark int_unsigned_repr: forall x, unsigned (repr (Int.unsigned x)) = Int.unsigned x.",
            "VernacStartTheoremProof",
            "4a57c5fc19e0764706400345e83a787c4fb32e85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite unsigned_repr.",
            "VernacExtend",
            "5134990e153a3f2ce893c9ea9837f183c322ceb2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply int_unsigned_range.",
            "VernacExtend",
            "ab8e8f1c74109217557e39adf55af768888a1d95"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma int_sub_ltu: forall x y, Int.ltu x y= true -> Int.unsigned (Int.sub y x) = unsigned (sub (repr (Int.unsigned y)) (repr (Int.unsigned x))).",
            "VernacStartTheoremProof",
            "e7027a7965a786032f3b0214dcc8f0e1e2391859"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (Int.sub_ltu x y H).",
            "VernacExtend",
            "c4e10f59d72450d2ce256d677230b464233217d6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Int.sub.",
            "VernacExtend",
            "1170869a324af572e1e05cd70a3c8ddc34d9f678"
        ],
        [
            "unfold sub.",
            "VernacExtend",
            "09a336a2b822859bc335120602ae265ad23b7a0d"
        ],
        [
            "rewrite Int.unsigned_repr.",
            "VernacExtend",
            "a8943e35722dfb96bf3f1ebc66d4a8cd6f05e78a"
        ],
        [
            "rewrite unsigned_repr.",
            "VernacExtend",
            "5134990e153a3f2ce893c9ea9837f183c322ceb2"
        ],
        [
            "rewrite unsigned_repr by apply int_unsigned_range.",
            "VernacExtend",
            "9e5235be7298684f7942eb1e43ac7ba87c853376"
        ],
        [
            "rewrite int_unsigned_repr.",
            "VernacExtend",
            "cc3299b9a558fa831185caa938931d3250430c34"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite unsigned_repr by apply int_unsigned_range.",
            "VernacExtend",
            "9e5235be7298684f7942eb1e43ac7ba87c853376"
        ],
        [
            "rewrite int_unsigned_repr.",
            "VernacExtend",
            "cc3299b9a558fa831185caa938931d3250430c34"
        ],
        [
            "generalize (int_unsigned_range y).",
            "VernacExtend",
            "6decb50993bd985159a719b065f327c013d6c441"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "generalize (Int.sub_ltu x y H).",
            "VernacExtend",
            "c4e10f59d72450d2ce256d677230b464233217d6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (Int.unsigned_range_2 y).",
            "VernacExtend",
            "6b5905db15033139d01d5aedb977e23c5dd9e844"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Int64.",
            "VernacEndSegment",
            "787e805eb786657e1b307e30157a8b49e0858bdc"
        ],
        [
            "Strategy 0 [Wordsize_64.wordsize].",
            "VernacSetStrategy",
            "3cc205e07370ece3294d7d86321530857eb2201f"
        ],
        [
            "Notation int64 := Int64.int.",
            "VernacSyntacticDefinition",
            "6eafc7afb64fbd17d81e9d3f229e773ea54dbe00"
        ],
        [
            "Global Opaque Int.repr Int64.repr Byte.repr.",
            "VernacSetOpacity",
            "a640326059cba27f46aedb5686c22c41b676c82d"
        ],
        [
            "Module Wordsize_Ptrofs.",
            "VernacDefineModule",
            "b0580b2280a8bf6d84acadfcab9696ab3ea46e6a"
        ],
        [
            "Definition wordsize := if Archi.ptr64 then 64%nat else 32%nat.",
            "VernacDefinition",
            "a38e1baee55bbd901b1c689977c83d1d250d64e0"
        ],
        [
            "Remark wordsize_not_zero: wordsize <> 0%nat.",
            "VernacStartTheoremProof",
            "3aa2c261728bb6a0c3690d82d1ca8985462db19a"
        ],
        [
            "unfold wordsize; destruct Archi.ptr64; congruence.",
            "VernacExtend",
            "5471913c7b32159a8e91d303bc8580cf5d295269"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Wordsize_Ptrofs.",
            "VernacEndSegment",
            "8e9ae1cbd30a43750175b65cf7528795d8093141"
        ],
        [
            "Strategy opaque [Wordsize_Ptrofs.wordsize].",
            "VernacSetStrategy",
            "a26c5f3d2e0dffe67915431c4941082469a43306"
        ],
        [
            "Module Ptrofs.",
            "VernacDefineModule",
            "37fc54b4cfcb29ea036360d5334101a8896b409d"
        ],
        [
            "Include Make(Wordsize_Ptrofs).",
            "VernacInclude",
            "5e594bb4f30374b3ae22d6ae1358b2db61a8bc4e"
        ],
        [
            "Definition to_int (x: int): Int.int := Int.repr (unsigned x).",
            "VernacDefinition",
            "d30308f3c8f2f5827a80887a9719c7b65fa611cd"
        ],
        [
            "Definition to_int64 (x: int): Int64.int := Int64.repr (unsigned x).",
            "VernacDefinition",
            "5d04c29de1769c03437af0734b496effaae775df"
        ],
        [
            "Definition of_int (x: Int.int) : int := repr (Int.unsigned x).",
            "VernacDefinition",
            "b83e04974d27e988554d309af3ff67c1153438a3"
        ],
        [
            "Definition of_intu := of_int.",
            "VernacDefinition",
            "ac9c32ee6c77c10e0d8486c9a36b7e888d6421ec"
        ],
        [
            "Definition of_ints (x: Int.int) : int := repr (Int.signed x).",
            "VernacDefinition",
            "b705e0895da55d7e2658cf509fffd920cc23bdbc"
        ],
        [
            "Definition of_int64 (x: Int64.int) : int := repr (Int64.unsigned x).",
            "VernacDefinition",
            "de37f4ad5eb148beb5524ec30995362f8cca91c6"
        ],
        [
            "Definition of_int64u := of_int64.",
            "VernacDefinition",
            "e0240de5e726776b8b1f60dc38a30a17f7a4b992"
        ],
        [
            "Definition of_int64s (x: Int64.int) : int := repr (Int64.signed x).",
            "VernacDefinition",
            "60c0f50b850ef16ab004019830c058fdbfaba518"
        ],
        [
            "Section AGREE32.",
            "VernacBeginSection",
            "43bce3a274f1ff067301b9c0cb882a3d74016602"
        ],
        [
            "Hypothesis _32: Archi.ptr64 = false.",
            "VernacAssumption",
            "7fa5c49858d35579c3d940a3aed2b418a8120ec7"
        ],
        [
            "Lemma modulus_eq32: modulus = Int.modulus.",
            "VernacStartTheoremProof",
            "8fa644b9c7e61bce536b43af74e77f4c3cd3c84e"
        ],
        [
            "unfold modulus, wordsize.",
            "VernacExtend",
            "ac5e411da23fcb2942c80fd16a008612acbdede0"
        ],
        [
            "change Wordsize_Ptrofs.wordsize with (if Archi.ptr64 then 64%nat else 32%nat).",
            "VernacExtend",
            "1d207ed1cbc6bc0568f9525179c9f71f03f2b811"
        ],
        [
            "rewrite _32.",
            "VernacExtend",
            "c69ec9d57790fb19a5780b1e817daa070b65acfd"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqm32: forall x y, Int.eqm x y <-> eqm x y.",
            "VernacStartTheoremProof",
            "5ca48091d0c1c756a68655bd3aa1203f9587c5d5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Int.eqm, eqm.",
            "VernacExtend",
            "11793d20fcdacaf6c3c0ced5b9375be43a509f59"
        ],
        [
            "rewrite modulus_eq32; tauto.",
            "VernacExtend",
            "d9ea8b4c3ca4c08ea6ceb52bb985c9676de68831"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition agree32 (a: Ptrofs.int) (b: Int.int) : Prop := Ptrofs.unsigned a = Int.unsigned b.",
            "VernacDefinition",
            "6f12530988d717bb71822c5eb56e518bc2c9cf7c"
        ],
        [
            "Lemma agree32_repr: forall i, agree32 (Ptrofs.repr i) (Int.repr i).",
            "VernacStartTheoremProof",
            "b9c01dbe0cae51ddd9b55dd0714df543c9ed2797"
        ],
        [
            "intros; red.",
            "VernacExtend",
            "3393be941ed81b8e4a79e80db41d01425f14b126"
        ],
        [
            "rewrite Ptrofs.unsigned_repr_eq, Int.unsigned_repr_eq.",
            "VernacExtend",
            "bb42826753adb1994e5a88e402fe48db71406372"
        ],
        [
            "apply f_equal2.",
            "VernacExtend",
            "be46a64a7879d7dc9b1dce72ceb4b39ac590e100"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply modulus_eq32.",
            "VernacExtend",
            "b6e9cbcec4f02dc54b2c030789b582cd57fdef72"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma agree32_signed: forall a b, agree32 a b -> Ptrofs.signed a = Int.signed b.",
            "VernacStartTheoremProof",
            "89da112a895a76e2fc198d1b87609a83dda037f0"
        ],
        [
            "unfold agree32; intros.",
            "VernacExtend",
            "fc98ac661fdae9456ccfdacee267162ba1cd8941"
        ],
        [
            "unfold signed, Int.signed, half_modulus, Int.half_modulus.",
            "VernacExtend",
            "dab1076b43d345d8165a261202889e60fcedd720"
        ],
        [
            "rewrite modulus_eq32.",
            "VernacExtend",
            "bb56aed543e9f08a1fa7db14a038351a863d077b"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma agree32_of_int: forall b, agree32 (of_int b) b.",
            "VernacStartTheoremProof",
            "5c65aa6e163f484731891f84c82052793244b8fb"
        ],
        [
            "unfold of_int; intros.",
            "VernacExtend",
            "763ab4998b7b22bdfb39210c639fdf0ce12ef49e"
        ],
        [
            "rewrite <- (Int.repr_unsigned b) at 2.",
            "VernacExtend",
            "b02695cbd1ec00aa59326a884c19560888206abb"
        ],
        [
            "apply agree32_repr.",
            "VernacExtend",
            "9636afd95504e750c3ee47ed25a88298f690047a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma agree32_of_ints: forall b, agree32 (of_ints b) b.",
            "VernacStartTheoremProof",
            "e63c58a17f32ad325f1ea35fca8133b701703818"
        ],
        [
            "unfold of_int; intros.",
            "VernacExtend",
            "763ab4998b7b22bdfb39210c639fdf0ce12ef49e"
        ],
        [
            "rewrite <- (Int.repr_signed b) at 2.",
            "VernacExtend",
            "f3612b82cfa4cb6776086f94aa445d72843cd772"
        ],
        [
            "apply agree32_repr.",
            "VernacExtend",
            "9636afd95504e750c3ee47ed25a88298f690047a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma agree32_of_int_eq: forall a b, agree32 a b -> of_int b = a.",
            "VernacStartTheoremProof",
            "4fc65ddcc618e0813afde6a6bd1f21fca42a3d4d"
        ],
        [
            "unfold agree32, of_int; intros.",
            "VernacExtend",
            "4ea4f23b05fdd4cd63e97655b9e7251c23ef8e33"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "apply repr_unsigned.",
            "VernacExtend",
            "7033f895e7c0a699adb114621e89aafefb338576"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma agree32_of_ints_eq: forall a b, agree32 a b -> of_ints b = a.",
            "VernacStartTheoremProof",
            "97861e18010c5870607b0eaa134e09c75b5e896b"
        ],
        [
            "unfold of_ints; intros.",
            "VernacExtend",
            "e3fcbfff0e5ad860d285684010ef2a8974d3d97c"
        ],
        [
            "erewrite <- agree32_signed by eauto.",
            "VernacExtend",
            "54ad6770f253ed35aa03a21cc277ba8962e1d910"
        ],
        [
            "apply repr_signed.",
            "VernacExtend",
            "6ac037f1d42a8ffc7ffc97da2226a128bb137982"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma agree32_to_int: forall a, agree32 a (to_int a).",
            "VernacStartTheoremProof",
            "518286cf9bdba0b764e4b2fffb141a7d635e2991"
        ],
        [
            "unfold agree32, to_int; intros.",
            "VernacExtend",
            "55d98f632087f9eaa86d84a922995c7014bd423e"
        ],
        [
            "rewrite <- (agree32_repr (unsigned a)).",
            "VernacExtend",
            "97615cae7c9981435a4c558e3bd81370016cef3b"
        ],
        [
            "rewrite repr_unsigned; auto.",
            "VernacExtend",
            "c8015c2205e97eee788ab7e4332de1387c44fc52"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma agree32_to_int_eq: forall a b, agree32 a b -> to_int a = b.",
            "VernacStartTheoremProof",
            "a0393c6b0d2079748e4447154ceaf719193ea01c"
        ],
        [
            "unfold agree32, to_int; intros.",
            "VernacExtend",
            "55d98f632087f9eaa86d84a922995c7014bd423e"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "apply Int.repr_unsigned.",
            "VernacExtend",
            "b3d43aae5f6f402bb1c3d022281cbe34cf2ae2f9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma agree32_neg: forall a1 b1, agree32 a1 b1 -> agree32 (Ptrofs.neg a1) (Int.neg b1).",
            "VernacStartTheoremProof",
            "3ddcf1f5dbf01264c4bd279d3cd80f3ae840cca1"
        ],
        [
            "unfold agree32, Ptrofs.neg, Int.neg; intros.",
            "VernacExtend",
            "9b1bef77f76d3550b27838772bccc697bc2d4fc3"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "apply agree32_repr.",
            "VernacExtend",
            "9636afd95504e750c3ee47ed25a88298f690047a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma agree32_add: forall a1 b1 a2 b2, agree32 a1 b1 -> agree32 a2 b2 -> agree32 (Ptrofs.add a1 a2) (Int.add b1 b2).",
            "VernacStartTheoremProof",
            "387977797d0f56cd1310b6392a322753f3a7df25"
        ],
        [
            "unfold agree32, Ptrofs.add, Int.add; intros.",
            "VernacExtend",
            "6f9deb4755c61f766762f713dbe47e5f8c45a6c7"
        ],
        [
            "rewrite H, H0.",
            "VernacExtend",
            "6a2c6e8b471f6fb686cf1a7e2e3992d01a326476"
        ],
        [
            "apply agree32_repr.",
            "VernacExtend",
            "9636afd95504e750c3ee47ed25a88298f690047a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma agree32_sub: forall a1 b1 a2 b2, agree32 a1 b1 -> agree32 a2 b2 -> agree32 (Ptrofs.sub a1 a2) (Int.sub b1 b2).",
            "VernacStartTheoremProof",
            "2b26ba396a812e7528414eaba596478ff5f972cc"
        ],
        [
            "unfold agree32, Ptrofs.sub, Int.sub; intros.",
            "VernacExtend",
            "8c63b0c6ac2b68c66ee907f404798b6cc85689de"
        ],
        [
            "rewrite H, H0.",
            "VernacExtend",
            "6a2c6e8b471f6fb686cf1a7e2e3992d01a326476"
        ],
        [
            "apply agree32_repr.",
            "VernacExtend",
            "9636afd95504e750c3ee47ed25a88298f690047a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma agree32_mul: forall a1 b1 a2 b2, agree32 a1 b1 -> agree32 a2 b2 -> agree32 (Ptrofs.mul a1 a2) (Int.mul b1 b2).",
            "VernacStartTheoremProof",
            "5c0fd836a0f5f63e052f4c1db3b4dd0fef8ddc23"
        ],
        [
            "unfold agree32, Ptrofs.mul, Int.mul; intros.",
            "VernacExtend",
            "273ffba4ea1ce9ba301c5ac552cc9dd529c4acec"
        ],
        [
            "rewrite H, H0.",
            "VernacExtend",
            "6a2c6e8b471f6fb686cf1a7e2e3992d01a326476"
        ],
        [
            "apply agree32_repr.",
            "VernacExtend",
            "9636afd95504e750c3ee47ed25a88298f690047a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma agree32_divs: forall a1 b1 a2 b2, agree32 a1 b1 -> agree32 a2 b2 -> agree32 (Ptrofs.divs a1 a2) (Int.divs b1 b2).",
            "VernacStartTheoremProof",
            "a87e84efc43da8a106fdafb4c3992ef1692f16df"
        ],
        [
            "intros; unfold agree32, Ptrofs.divs, Int.divs.",
            "VernacExtend",
            "925332d03458edc09cea5cdaf3b796d2267eecfa"
        ],
        [
            "erewrite ! agree32_signed by eauto.",
            "VernacExtend",
            "30e76d34a5cf1ce2c2bacd3d599a6e2e588dedc0"
        ],
        [
            "apply agree32_repr.",
            "VernacExtend",
            "9636afd95504e750c3ee47ed25a88298f690047a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma of_int_to_int: forall n, of_int (to_int n) = n.",
            "VernacStartTheoremProof",
            "e583bbd576768db9d2ffb2d6d6cc8e6d60d7c1ed"
        ],
        [
            "intros; unfold of_int, to_int.",
            "VernacExtend",
            "455938ff7996ef542e96b9228c6e1d27edbe8b2e"
        ],
        [
            "apply eqm_repr_eq.",
            "VernacExtend",
            "71d36ee28e6bf68bd7ad2ef64bd4df53ff925122"
        ],
        [
            "rewrite <- eqm32.",
            "VernacExtend",
            "519edf0fa0f2980c7d58347578284a704e546981"
        ],
        [
            "apply Int.eqm_sym; apply Int.eqm_unsigned_repr.",
            "VernacExtend",
            "f29e4ab6ec51ec92f780d6cb2ddc8fcc009dfd04"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma to_int_of_int: forall n, to_int (of_int n) = n.",
            "VernacStartTheoremProof",
            "213755ff4597dbb821966801247dbeacb843a731"
        ],
        [
            "intros; unfold of_int, to_int.",
            "VernacExtend",
            "455938ff7996ef542e96b9228c6e1d27edbe8b2e"
        ],
        [
            "rewrite unsigned_repr.",
            "VernacExtend",
            "5134990e153a3f2ce893c9ea9837f183c322ceb2"
        ],
        [
            "apply Int.repr_unsigned.",
            "VernacExtend",
            "b3d43aae5f6f402bb1c3d022281cbe34cf2ae2f9"
        ],
        [
            "unfold max_unsigned.",
            "VernacExtend",
            "36f5add4f60c9b122a3b68fcbd2bef84e6e0d135"
        ],
        [
            "rewrite modulus_eq32.",
            "VernacExtend",
            "bb56aed543e9f08a1fa7db14a038351a863d077b"
        ],
        [
            "destruct (Int.unsigned_range n); omega.",
            "VernacExtend",
            "51e23294cf98d6e0518682043f99b193d2ca77f5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End AGREE32.",
            "VernacEndSegment",
            "3b4b8ffdd92140f6a5196c6150987e197f9dd872"
        ],
        [
            "Section AGREE64.",
            "VernacBeginSection",
            "f5d7adb81b9dea923a461dbbe6fb39d29c6450b7"
        ],
        [
            "Hypothesis _64: Archi.ptr64 = true.",
            "VernacAssumption",
            "8aa95031dbb129c08cd691c5cb1c9ad76dc95509"
        ],
        [
            "Lemma modulus_eq64: modulus = Int64.modulus.",
            "VernacStartTheoremProof",
            "e8fbec20f880672c011dc27d0a540964b4231503"
        ],
        [
            "unfold modulus, wordsize.",
            "VernacExtend",
            "ac5e411da23fcb2942c80fd16a008612acbdede0"
        ],
        [
            "change Wordsize_Ptrofs.wordsize with (if Archi.ptr64 then 64%nat else 32%nat).",
            "VernacExtend",
            "1d207ed1cbc6bc0568f9525179c9f71f03f2b811"
        ],
        [
            "rewrite _64.",
            "VernacExtend",
            "4d99ee988695bb782236e9fa5f9cf9d23575ab4d"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqm64: forall x y, Int64.eqm x y <-> eqm x y.",
            "VernacStartTheoremProof",
            "affc3a9ce831a4b1bd934ae200d871fab7537f0f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Int64.eqm, eqm.",
            "VernacExtend",
            "3ac8a6ac33545b4065b79d79870e8440bea3eec7"
        ],
        [
            "rewrite modulus_eq64; tauto.",
            "VernacExtend",
            "154482dc942fc6335e64fc4f6fd733a031367ad2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition agree64 (a: Ptrofs.int) (b: Int64.int) : Prop := Ptrofs.unsigned a = Int64.unsigned b.",
            "VernacDefinition",
            "0a660dbca6334f2e7248d7c6c59bddf8139352e5"
        ],
        [
            "Lemma agree64_repr: forall i, agree64 (Ptrofs.repr i) (Int64.repr i).",
            "VernacStartTheoremProof",
            "3532fe7a0a61cfcbf1398eae0ae402f1f2a1f1de"
        ],
        [
            "intros; red.",
            "VernacExtend",
            "3393be941ed81b8e4a79e80db41d01425f14b126"
        ],
        [
            "rewrite Ptrofs.unsigned_repr_eq, Int64.unsigned_repr_eq.",
            "VernacExtend",
            "48164a0d1ec64fbba5594c144d0a80e3276e15fa"
        ],
        [
            "apply f_equal2.",
            "VernacExtend",
            "be46a64a7879d7dc9b1dce72ceb4b39ac590e100"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply modulus_eq64.",
            "VernacExtend",
            "4c31ec218faa997ca37b817ed70946a1d6c12372"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma agree64_signed: forall a b, agree64 a b -> Ptrofs.signed a = Int64.signed b.",
            "VernacStartTheoremProof",
            "6077e87948c7126edb44846892a5beb29c153386"
        ],
        [
            "unfold agree64; intros.",
            "VernacExtend",
            "d87efba14abaa59bcbff1d8014b138accbd97a2f"
        ],
        [
            "unfold signed, Int64.signed, half_modulus, Int64.half_modulus.",
            "VernacExtend",
            "c808604ddaf9a02bb0987c51f106d10e22429f52"
        ],
        [
            "rewrite modulus_eq64.",
            "VernacExtend",
            "0149fcb88450d6f5db8dea97293f7670b019bc1f"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma agree64_of_int: forall b, agree64 (of_int64 b) b.",
            "VernacStartTheoremProof",
            "2b0576703774242fff152727ea34a90af752cdeb"
        ],
        [
            "unfold of_int64; intros.",
            "VernacExtend",
            "cd2d0226375bbc2e5cafc5d31c2f1eb527a59b08"
        ],
        [
            "rewrite <- (Int64.repr_unsigned b) at 2.",
            "VernacExtend",
            "b6c80d02ba958e87c6f13a0d49d36cfa2d2476bb"
        ],
        [
            "apply agree64_repr.",
            "VernacExtend",
            "c276bdeab6eae76ce00fb32331076520877ffef9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma agree64_of_int_eq: forall a b, agree64 a b -> of_int64 b = a.",
            "VernacStartTheoremProof",
            "e8853d4e853e7cf8a7400e238d1a7b296380ab3d"
        ],
        [
            "unfold agree64, of_int64; intros.",
            "VernacExtend",
            "8c6f62c5daf386e8170b4876235c86fd57ee5675"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "apply repr_unsigned.",
            "VernacExtend",
            "7033f895e7c0a699adb114621e89aafefb338576"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma agree64_to_int: forall a, agree64 a (to_int64 a).",
            "VernacStartTheoremProof",
            "9473ea35a4a50cdc782b2f714e1e19d23eb7dda8"
        ],
        [
            "unfold agree64, to_int64; intros.",
            "VernacExtend",
            "e9d3d5fb66ad8b29655fdc4185b98dbf9368ccfb"
        ],
        [
            "rewrite <- (agree64_repr (unsigned a)).",
            "VernacExtend",
            "7c61b091525957c3ca0a7c2c4cc4ab3f0df4d333"
        ],
        [
            "rewrite repr_unsigned; auto.",
            "VernacExtend",
            "c8015c2205e97eee788ab7e4332de1387c44fc52"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma agree64_to_int_eq: forall a b, agree64 a b -> to_int64 a = b.",
            "VernacStartTheoremProof",
            "834fd5d1180d38da97d8d8caed90e6b534efb8df"
        ],
        [
            "unfold agree64, to_int64; intros.",
            "VernacExtend",
            "e9d3d5fb66ad8b29655fdc4185b98dbf9368ccfb"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "apply Int64.repr_unsigned.",
            "VernacExtend",
            "155848270129eed13138aa7b4b60ec49b2ae866f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma agree64_neg: forall a1 b1, agree64 a1 b1 -> agree64 (Ptrofs.neg a1) (Int64.neg b1).",
            "VernacStartTheoremProof",
            "53ab981c6d753804e6cdb75aa708ca0fda94b2a5"
        ],
        [
            "unfold agree64, Ptrofs.neg, Int64.neg; intros.",
            "VernacExtend",
            "81ae85797db6721ece0a2e6c996f0ccb9c64b14c"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "apply agree64_repr.",
            "VernacExtend",
            "c276bdeab6eae76ce00fb32331076520877ffef9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma agree64_add: forall a1 b1 a2 b2, agree64 a1 b1 -> agree64 a2 b2 -> agree64 (Ptrofs.add a1 a2) (Int64.add b1 b2).",
            "VernacStartTheoremProof",
            "ef11da739dd31510f3d16ed65246f8fb1cd99a6d"
        ],
        [
            "unfold agree64, Ptrofs.add, Int.add; intros.",
            "VernacExtend",
            "f095018ac447349f47e86d6cfde9f351121d07fb"
        ],
        [
            "rewrite H, H0.",
            "VernacExtend",
            "6a2c6e8b471f6fb686cf1a7e2e3992d01a326476"
        ],
        [
            "apply agree64_repr.",
            "VernacExtend",
            "c276bdeab6eae76ce00fb32331076520877ffef9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma agree64_sub: forall a1 b1 a2 b2, agree64 a1 b1 -> agree64 a2 b2 -> agree64 (Ptrofs.sub a1 a2) (Int64.sub b1 b2).",
            "VernacStartTheoremProof",
            "dfed1403b7b6705f71b12e472f79648a26dcf3a5"
        ],
        [
            "unfold agree64, Ptrofs.sub, Int.sub; intros.",
            "VernacExtend",
            "77f1c65548616ede162b5268acd7070caebcbeef"
        ],
        [
            "rewrite H, H0.",
            "VernacExtend",
            "6a2c6e8b471f6fb686cf1a7e2e3992d01a326476"
        ],
        [
            "apply agree64_repr.",
            "VernacExtend",
            "c276bdeab6eae76ce00fb32331076520877ffef9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma agree64_mul: forall a1 b1 a2 b2, agree64 a1 b1 -> agree64 a2 b2 -> agree64 (Ptrofs.mul a1 a2) (Int64.mul b1 b2).",
            "VernacStartTheoremProof",
            "c32ca8cd55e85b28c23e632488f867b989d3fc7e"
        ],
        [
            "unfold agree64, Ptrofs.mul, Int.mul; intros.",
            "VernacExtend",
            "f7a70edd7a1268d10d4d394119774ec7565e796b"
        ],
        [
            "rewrite H, H0.",
            "VernacExtend",
            "6a2c6e8b471f6fb686cf1a7e2e3992d01a326476"
        ],
        [
            "apply agree64_repr.",
            "VernacExtend",
            "c276bdeab6eae76ce00fb32331076520877ffef9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma agree64_divs: forall a1 b1 a2 b2, agree64 a1 b1 -> agree64 a2 b2 -> agree64 (Ptrofs.divs a1 a2) (Int64.divs b1 b2).",
            "VernacStartTheoremProof",
            "cd06ac7bca7925b65ec4f35366a7f4de1d5bc85f"
        ],
        [
            "intros; unfold agree64, Ptrofs.divs, Int64.divs.",
            "VernacExtend",
            "35aeb07f5bdc7c6667233d297bb8fc625ba0edc2"
        ],
        [
            "erewrite ! agree64_signed by eauto.",
            "VernacExtend",
            "09fdb67e1c39c757f0f1210539b00ddf48821746"
        ],
        [
            "apply agree64_repr.",
            "VernacExtend",
            "c276bdeab6eae76ce00fb32331076520877ffef9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma of_int64_to_int64: forall n, of_int64 (to_int64 n) = n.",
            "VernacStartTheoremProof",
            "2c3a26d0da688e9d077973556be86a1bd253f155"
        ],
        [
            "intros; unfold of_int64, to_int64.",
            "VernacExtend",
            "26e47100e15ca6219bc600e7798786b9f4012986"
        ],
        [
            "apply eqm_repr_eq.",
            "VernacExtend",
            "71d36ee28e6bf68bd7ad2ef64bd4df53ff925122"
        ],
        [
            "rewrite <- eqm64.",
            "VernacExtend",
            "ad642051a3584ffdc377d910a1067e6014383287"
        ],
        [
            "apply Int64.eqm_sym; apply Int64.eqm_unsigned_repr.",
            "VernacExtend",
            "8bf1a39fe4e3bba9b5486255d37a623f5e68877a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma to_int64_of_int64: forall n, to_int64 (of_int64 n) = n.",
            "VernacStartTheoremProof",
            "f8bbc6669cd9a407ab47f803ea10e814b7ce6efe"
        ],
        [
            "intros; unfold of_int64, to_int64.",
            "VernacExtend",
            "26e47100e15ca6219bc600e7798786b9f4012986"
        ],
        [
            "rewrite unsigned_repr.",
            "VernacExtend",
            "5134990e153a3f2ce893c9ea9837f183c322ceb2"
        ],
        [
            "apply Int64.repr_unsigned.",
            "VernacExtend",
            "155848270129eed13138aa7b4b60ec49b2ae866f"
        ],
        [
            "unfold max_unsigned.",
            "VernacExtend",
            "36f5add4f60c9b122a3b68fcbd2bef84e6e0d135"
        ],
        [
            "rewrite modulus_eq64.",
            "VernacExtend",
            "0149fcb88450d6f5db8dea97293f7670b019bc1f"
        ],
        [
            "destruct (Int64.unsigned_range n); omega.",
            "VernacExtend",
            "999068d356d40e67918a7b88e3e8fb6c6d1454be"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End AGREE64.",
            "VernacEndSegment",
            "7a1d13fa9178461727d072ac5fc8260e41169d2a"
        ],
        [
            "Hint Resolve agree32_repr agree32_of_int agree32_of_ints agree32_of_int_eq agree32_of_ints_eq agree32_to_int agree32_to_int_eq agree32_neg agree32_add agree32_sub agree32_mul agree32_divs agree64_repr agree64_of_int agree64_of_int_eq agree64_to_int agree64_to_int_eq agree64_neg agree64_add agree64_sub agree64_mul agree64_divs : ptrofs.",
            "VernacHints",
            "504bb49d0e012f22c974d40839f98a9c2f86c68e"
        ],
        [
            "End Ptrofs.",
            "VernacEndSegment",
            "8a09343c4e96ca0b5d72b56aaa8335a671f9c50f"
        ],
        [
            "Strategy 0 [Wordsize_Ptrofs.wordsize].",
            "VernacSetStrategy",
            "c9761d5f7b54e4ac0f0cb703c3277e5027209c7c"
        ],
        [
            "Notation ptrofs := Ptrofs.int.",
            "VernacSyntacticDefinition",
            "ac92ebeacaa43c5f64837de55ca207c0ba954dce"
        ],
        [
            "Global Opaque Ptrofs.repr.",
            "VernacSetOpacity",
            "d07bd1a16f832e292f64a06459f88d94f40cb65f"
        ],
        [
            "Hint Resolve Int.modulus_pos Int.eqm_refl Int.eqm_refl2 Int.eqm_sym Int.eqm_trans Int.eqm_small_eq Int.eqm_add Int.eqm_neg Int.eqm_sub Int.eqm_mult Int.eqm_unsigned_repr Int.eqm_unsigned_repr_l Int.eqm_unsigned_repr_r Int.unsigned_range Int.unsigned_range_2 Int.repr_unsigned Int.repr_signed Int.unsigned_repr : ints.",
            "VernacHints",
            "28e8f59ed18894eda657acd9fdca2e9d63f0898a"
        ],
        [
            "Hint Resolve Int64.modulus_pos Int64.eqm_refl Int64.eqm_refl2 Int64.eqm_sym Int64.eqm_trans Int64.eqm_small_eq Int64.eqm_add Int64.eqm_neg Int64.eqm_sub Int64.eqm_mult Int64.eqm_unsigned_repr Int64.eqm_unsigned_repr_l Int64.eqm_unsigned_repr_r Int64.unsigned_range Int64.unsigned_range_2 Int64.repr_unsigned Int64.repr_signed Int64.unsigned_repr : ints.",
            "VernacHints",
            "7dc1de8861853f2f8ab10084994d89c61e7ca5f5"
        ],
        [
            "Hint Resolve Ptrofs.modulus_pos Ptrofs.eqm_refl Ptrofs.eqm_refl2 Ptrofs.eqm_sym Ptrofs.eqm_trans Ptrofs.eqm_small_eq Ptrofs.eqm_add Ptrofs.eqm_neg Ptrofs.eqm_sub Ptrofs.eqm_mult Ptrofs.eqm_unsigned_repr Ptrofs.eqm_unsigned_repr_l Ptrofs.eqm_unsigned_repr_r Ptrofs.unsigned_range Ptrofs.unsigned_range_2 Ptrofs.repr_unsigned Ptrofs.repr_signed Ptrofs.unsigned_repr : ints.",
            "VernacHints",
            "d72731e2a58b3dced49e110aa5819e094220ba46"
        ]
    ],
    "proofs": [
        {
            "name": "wordsize_pos",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "unfold zwordsize, wordsize.",
                        "VernacExtend",
                        "9d8d5ddeb779f6d653e8f3a02c10ad409398cc46"
                    ]
                },
                {
                    "command": [
                        "generalize WS.wordsize_not_zero.",
                        "VernacExtend",
                        "c4d8e0d5f77f91631966c06a578c4f0595d67109"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modulus_power",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "unfold modulus.",
                        "VernacExtend",
                        "202f368b6f08b873343d2b49e63dddcb32f23f66"
                    ]
                },
                {
                    "command": [
                        "apply two_power_nat_two_p.",
                        "VernacExtend",
                        "fd450fee46590be19750e6519114fa669e82f031"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modulus_pos",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "rewrite modulus_power.",
                        "VernacExtend",
                        "753142ad8669d3fd0251ba06a6ea2fc37e67244d"
                    ]
                },
                {
                    "command": [
                        "apply two_p_gt_ZERO.",
                        "VernacExtend",
                        "9690045ae69e536e22b7db6c37ee985732e7c4b7"
                    ]
                },
                {
                    "command": [
                        "generalize wordsize_pos; omega.",
                        "VernacExtend",
                        "1be2fda6bfa5aa53c9fdc4049e4df24e68556740"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "P_mod_two_p_range",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "induction n; simpl; intros.",
                        "VernacExtend",
                        "f4638561e18037d1d0dd2a07d3cbcf68a41a03a8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite two_power_nat_O.",
                        "VernacExtend",
                        "7fe758160ea32bbd6842209920349dd5ce7c532a"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite two_power_nat_S.",
                        "VernacExtend",
                        "a9744f6bd9a8fe7c31c0f7154478ac3b90a12f1b"
                    ]
                },
                {
                    "command": [
                        "destruct p.",
                        "VernacExtend",
                        "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "generalize (IHn p).",
                        "VernacExtend",
                        "a05445d8fe7eb2944d0d21c735b20f466e687362"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.succ_double_spec.",
                        "VernacExtend",
                        "8bc2717e7923d84312ac9000dbbbd737baebc29b"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "generalize (IHn p).",
                        "VernacExtend",
                        "a05445d8fe7eb2944d0d21c735b20f466e687362"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.double_spec.",
                        "VernacExtend",
                        "91dfab94a8e039994fe27000daabec42e7754785"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "generalize (two_power_nat_pos n).",
                        "VernacExtend",
                        "0ba544cb0f284372dd11bdd2e82f5b029e731ed1"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "P_mod_two_p_eq",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "assert (forall n p, exists y, Zpos p = y * two_power_nat n + P_mod_two_p p n).",
                        "VernacExtend",
                        "c41cf40398ac0730257dcb6f1afa0e1b150aa497"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "induction n; simpl; intros.",
                        "VernacExtend",
                        "f4638561e18037d1d0dd2a07d3cbcf68a41a03a8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite two_power_nat_O.",
                        "VernacExtend",
                        "7fe758160ea32bbd6842209920349dd5ce7c532a"
                    ]
                },
                {
                    "command": [
                        "exists (Zpos p).",
                        "VernacExtend",
                        "07d0c2ec2b6f8c4ff60294d3fd5131834e0a225a"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite two_power_nat_S.",
                        "VernacExtend",
                        "a9744f6bd9a8fe7c31c0f7154478ac3b90a12f1b"
                    ]
                },
                {
                    "command": [
                        "destruct p.",
                        "VernacExtend",
                        "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct (IHn p) as [y EQ].",
                        "VernacExtend",
                        "3c40f0a2ad6cfe0c57a246b0a46e4ff4206afe2d"
                    ]
                },
                {
                    "command": [
                        "exists y.",
                        "VernacExtend",
                        "1c06cb2466f48b6def24e74ddeda9956981c0a0a"
                    ]
                },
                {
                    "command": [
                        "change (Zpos p~1) with (2 * Zpos p + 1).",
                        "VernacExtend",
                        "3b32840e92933baa209d50a8243d1ab9f7653b25"
                    ]
                },
                {
                    "command": [
                        "rewrite EQ.",
                        "VernacExtend",
                        "359c5e196f83a6afbd9ede635bddbf545fd1eb82"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.succ_double_spec.",
                        "VernacExtend",
                        "8bc2717e7923d84312ac9000dbbbd737baebc29b"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct (IHn p) as [y EQ].",
                        "VernacExtend",
                        "3c40f0a2ad6cfe0c57a246b0a46e4ff4206afe2d"
                    ]
                },
                {
                    "command": [
                        "exists y.",
                        "VernacExtend",
                        "1c06cb2466f48b6def24e74ddeda9956981c0a0a"
                    ]
                },
                {
                    "command": [
                        "change (Zpos p~0) with (2 * Zpos p).",
                        "VernacExtend",
                        "41a28864a30afbe38ce6cdbc4d5cbec8b95ee828"
                    ]
                },
                {
                    "command": [
                        "rewrite EQ.",
                        "VernacExtend",
                        "359c5e196f83a6afbd9ede635bddbf545fd1eb82"
                    ]
                },
                {
                    "command": [
                        "rewrite (Z.double_spec (P_mod_two_p p n)).",
                        "VernacExtend",
                        "e89eaf3e7e8d686664ee4a55d1031a552543eb7a"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exists 0; omega.",
                        "VernacExtend",
                        "1209a9479de25e5980c3dbb640c5a20268958fb6"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (H n p) as [y EQ].",
                        "VernacExtend",
                        "0ff3dd716dd9a8407e1682d65f0674f1074a795f"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply Zmod_unique with y.",
                        "VernacExtend",
                        "21f9d6abaf331f317e407bf802f58b9c69953c96"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply P_mod_two_p_range.",
                        "VernacExtend",
                        "bf9fabbb532c13c3b76585feecc024245fd1ddc1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_mod_modulus_range",
            "line_nb": 92,
            "steps": [
                {
                    "command": [
                        "intros; unfold Z_mod_modulus.",
                        "VernacExtend",
                        "ba05fcdc270af50f1fdf22558d2fd35c7d7f7d52"
                    ]
                },
                {
                    "command": [
                        "destruct x.",
                        "VernacExtend",
                        "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "generalize modulus_pos; intuition.",
                        "VernacExtend",
                        "5ff24c33f16faa67e313db66af0c5a716ae18d40"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply P_mod_two_p_range.",
                        "VernacExtend",
                        "bf9fabbb532c13c3b76585feecc024245fd1ddc1"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "set (r := P_mod_two_p p wordsize).",
                        "VernacExtend",
                        "b506f5f01a2afd26a66d09302922c377dc53fc3e"
                    ]
                },
                {
                    "command": [
                        "assert (0 <= r < modulus) by apply P_mod_two_p_range.",
                        "VernacExtend",
                        "76a31678cd16a36d78b68a6ab9dfd90e5a882c18"
                    ]
                },
                {
                    "command": [
                        "destruct (zeq r 0).",
                        "VernacExtend",
                        "70f086795f7be82ad063b2b7c6177d5bd62006d8"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "generalize modulus_pos; intuition.",
                        "VernacExtend",
                        "5ff24c33f16faa67e313db66af0c5a716ae18d40"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "Psatz.lia.",
                        "VernacExtend",
                        "fe608be87434e5b0f7a33812ad5aeb04513cceb2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_mod_modulus_range'",
            "line_nb": 108,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (Z_mod_modulus_range x); intuition.",
                        "VernacExtend",
                        "9977e8254fe8e20763a10942cab63177f5f5b4f4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_mod_modulus_eq",
            "line_nb": 112,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Z_mod_modulus.",
                        "VernacExtend",
                        "34b7be662ef2c380c9baae0de6c436ae1cb62ecd"
                    ]
                },
                {
                    "command": [
                        "destruct x.",
                        "VernacExtend",
                        "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Zmod_0_l.",
                        "VernacExtend",
                        "c75295ca0dab7aebda3fc469f4f020b54a2037e0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply P_mod_two_p_eq.",
                        "VernacExtend",
                        "ac626715ef9638714d2028d8fe319ec77c2c7a96"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "generalize (P_mod_two_p_range wordsize p) (P_mod_two_p_eq wordsize p).",
                        "VernacExtend",
                        "1bbdf44cb98ee1d66062352c77b4f4fc1533f681"
                    ]
                },
                {
                    "command": [
                        "fold modulus.",
                        "VernacExtend",
                        "82d16181f0b954350f02a74ec336c69fd618891c"
                    ]
                },
                {
                    "command": [
                        "intros A B.",
                        "VernacExtend",
                        "f0fdd14fe43c412ab9e9cf2b93b27330098322c4"
                    ]
                },
                {
                    "command": [
                        "exploit (Z_div_mod_eq (Zpos p) modulus).",
                        "VernacExtend",
                        "edf138470c2d7d88cbb144cfd3950f7484d6c94a"
                    ]
                },
                {
                    "command": [
                        "apply modulus_pos.",
                        "VernacExtend",
                        "6f515e7167dc290e7550ae000eb950d9300d7cef"
                    ]
                },
                {
                    "command": [
                        "intros C.",
                        "VernacExtend",
                        "815d4ae757176a139c5c7aa2e053513c4e9e1c7c"
                    ]
                },
                {
                    "command": [
                        "set (q := Zpos p / modulus) in *.",
                        "VernacExtend",
                        "f486fb1e6f0b8a749ebc8f30e9829ab10dedde56"
                    ]
                },
                {
                    "command": [
                        "set (r := P_mod_two_p p wordsize) in *.",
                        "VernacExtend",
                        "39b68bd4db06989f6c069f0a81a610e32aac028e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- B in C.",
                        "VernacExtend",
                        "861d9b69600397ae8db8752f0272fcf5a47f4401"
                    ]
                },
                {
                    "command": [
                        "change (Z.neg p) with (- (Z.pos p)).",
                        "VernacExtend",
                        "34f89f6f112091e224be6a0b017d6afa17bda6cc"
                    ]
                },
                {
                    "command": [
                        "destruct (zeq r 0).",
                        "VernacExtend",
                        "70f086795f7be82ad063b2b7c6177d5bd62006d8"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply Zmod_unique with (-q).",
                        "VernacExtend",
                        "53851ae0aaa0f9fb56b2cde7f9ef93ed94bbc798"
                    ]
                },
                {
                    "command": [
                        "rewrite C; rewrite e.",
                        "VernacExtend",
                        "f5af10f4265d3a9001c31e94ea405cdb435fd276"
                    ]
                },
                {
                    "command": [
                        "Psatz.lia.",
                        "VernacExtend",
                        "fe608be87434e5b0f7a33812ad5aeb04513cceb2"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply Zmod_unique with (-q - 1).",
                        "VernacExtend",
                        "f33b700af01cfbef05d08626f72637c8f876c8dc"
                    ]
                },
                {
                    "command": [
                        "rewrite C.",
                        "VernacExtend",
                        "6522c35db68091b070ccdd4e87749a3d6da8e69d"
                    ]
                },
                {
                    "command": [
                        "Psatz.lia.",
                        "VernacExtend",
                        "fe608be87434e5b0f7a33812ad5aeb04513cceb2"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mkint_eq",
            "line_nb": 153,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "subst y.",
                        "VernacExtend",
                        "f056a00b852bc549d1b8bb21d500c90d8ff37bf8"
                    ]
                },
                {
                    "command": [
                        "assert (forall (n m: Z) (P1 P2: n < m), P1 = P2).",
                        "VernacExtend",
                        "54b5f71874d82a4b5528cc1c780692b6143e1227"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold Z.lt; intros.",
                        "VernacExtend",
                        "54e54aad13dc632f84515a270c767e552dfbdc14"
                    ]
                },
                {
                    "command": [
                        "apply eq_proofs_unicity.",
                        "VernacExtend",
                        "77d84e6f924174693a7f4eff3520df946c2d75d8"
                    ]
                },
                {
                    "command": [
                        "intros c1 c2.",
                        "VernacExtend",
                        "099d05b9b904ddc79603e6867f9ebe2553f07f00"
                    ]
                },
                {
                    "command": [
                        "destruct c1; destruct c2; (left; reflexivity) || (right; congruence).",
                        "VernacExtend",
                        "0dfe9d1a869f8613f7bf7a56a1d92783161150ed"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct Px as [Px1 Px2].",
                        "VernacExtend",
                        "2898edf49828ef47251e67ea3964d23d12caa6ce"
                    ]
                },
                {
                    "command": [
                        "destruct Py as [Py1 Py2].",
                        "VernacExtend",
                        "a03ca7e1c9e5d575ba90ddf77351f411695eaed0"
                    ]
                },
                {
                    "command": [
                        "rewrite (H _ _ Px1 Py1).",
                        "VernacExtend",
                        "5db9ffdbc6bae20dc964fed0fa679ad6adb33351"
                    ]
                },
                {
                    "command": [
                        "rewrite (H _ _ Px2 Py2).",
                        "VernacExtend",
                        "dc0de77401b545429192a021d5ca39656aaf93a2"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_dec",
            "line_nb": 169,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct x; destruct y.",
                        "VernacExtend",
                        "66b6bbed80f19a7ddf75313e3d1e4cc780d5f91f"
                    ]
                },
                {
                    "command": [
                        "destruct (zeq intval0 intval1).",
                        "VernacExtend",
                        "c3147eb4821303c0b35bf78f3c29f3baeaf1e68f"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "apply mkint_eq.",
                        "VernacExtend",
                        "be81a2a6894844a023a9bb5122ffed586a6d04fa"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "red; intro.",
                        "VernacExtend",
                        "12e00b6ab6f8834b6f81959ca42843abaa311f37"
                    ]
                },
                {
                    "command": [
                        "injection H.",
                        "VernacExtend",
                        "0b4168b75c87f7c322bfb81e661f04001b54052d"
                    ]
                },
                {
                    "command": [
                        "exact n.",
                        "VernacExtend",
                        "568b72077ac652af70b00a425fbac2a78c603619"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "half_modulus_power",
            "line_nb": 226,
            "steps": [
                {
                    "command": [
                        "unfold half_modulus.",
                        "VernacExtend",
                        "a08d844ba6d0159d571eaa85c14e792fec06814d"
                    ]
                },
                {
                    "command": [
                        "rewrite modulus_power.",
                        "VernacExtend",
                        "753142ad8669d3fd0251ba06a6ea2fc37e67244d"
                    ]
                },
                {
                    "command": [
                        "set (ws1 := zwordsize - 1).",
                        "VernacExtend",
                        "71c3d836e85e35efd566df30e34fcd9b3d0a5c06"
                    ]
                },
                {
                    "command": [
                        "replace (zwordsize) with (Z.succ ws1).",
                        "VernacExtend",
                        "855cb5b11fb05b7d5226a8db7f6af77589356bd2"
                    ]
                },
                {
                    "command": [
                        "rewrite two_p_S.",
                        "VernacExtend",
                        "a29f0291f2a8fd39cf3e3e3483ed64b13d888682"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.mul_comm.",
                        "VernacExtend",
                        "088699fe7f894ededd3c93ab3a27f9d105f1ab84"
                    ]
                },
                {
                    "command": [
                        "apply Z_div_mult.",
                        "VernacExtend",
                        "ddb95f8aa9157f54b8695d0648562ebfc8b6ebce"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "unfold ws1.",
                        "VernacExtend",
                        "ab41ef1aa0ec5579140c966bf0ed359d8f627f9e"
                    ]
                },
                {
                    "command": [
                        "generalize wordsize_pos; omega.",
                        "VernacExtend",
                        "1be2fda6bfa5aa53c9fdc4049e4df24e68556740"
                    ]
                },
                {
                    "command": [
                        "unfold ws1.",
                        "VernacExtend",
                        "ab41ef1aa0ec5579140c966bf0ed359d8f627f9e"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "half_modulus_modulus",
            "line_nb": 240,
            "steps": [
                {
                    "command": [
                        "rewrite half_modulus_power.",
                        "VernacExtend",
                        "fd8ccafd38bbc04cf02d63bcd61c884d7a7470f8"
                    ]
                },
                {
                    "command": [
                        "rewrite modulus_power.",
                        "VernacExtend",
                        "753142ad8669d3fd0251ba06a6ea2fc37e67244d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- two_p_S.",
                        "VernacExtend",
                        "8eb7240a71b2161fc95c2193e4ff099221db490e"
                    ]
                },
                {
                    "command": [
                        "apply f_equal.",
                        "VernacExtend",
                        "ba856cbef3c8e84dcef77c91c8515b497874875b"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "generalize wordsize_pos; omega.",
                        "VernacExtend",
                        "1be2fda6bfa5aa53c9fdc4049e4df24e68556740"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "half_modulus_pos",
            "line_nb": 248,
            "steps": [
                {
                    "command": [
                        "rewrite half_modulus_power.",
                        "VernacExtend",
                        "fd8ccafd38bbc04cf02d63bcd61c884d7a7470f8"
                    ]
                },
                {
                    "command": [
                        "apply two_p_gt_ZERO.",
                        "VernacExtend",
                        "9690045ae69e536e22b7db6c37ee985732e7c4b7"
                    ]
                },
                {
                    "command": [
                        "generalize wordsize_pos; omega.",
                        "VernacExtend",
                        "1be2fda6bfa5aa53c9fdc4049e4df24e68556740"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "min_signed_neg",
            "line_nb": 253,
            "steps": [
                {
                    "command": [
                        "unfold min_signed.",
                        "VernacExtend",
                        "1af507e43f6daf88f50e8ed6e80384764001842c"
                    ]
                },
                {
                    "command": [
                        "generalize half_modulus_pos.",
                        "VernacExtend",
                        "01cc2bf737221379d01a92026ffebe473cea8b29"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_signed_pos",
            "line_nb": 258,
            "steps": [
                {
                    "command": [
                        "unfold max_signed.",
                        "VernacExtend",
                        "f8dfc169a274f28f22cf16df03cc4eb70fbb62d5"
                    ]
                },
                {
                    "command": [
                        "generalize half_modulus_pos.",
                        "VernacExtend",
                        "01cc2bf737221379d01a92026ffebe473cea8b29"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordsize_max_unsigned",
            "line_nb": 263,
            "steps": [
                {
                    "command": [
                        "assert (zwordsize < modulus).",
                        "VernacExtend",
                        "2ddaae3b68df2c0238cb89a010b9ba72afba41a5"
                    ]
                },
                {
                    "command": [
                        "rewrite modulus_power.",
                        "VernacExtend",
                        "753142ad8669d3fd0251ba06a6ea2fc37e67244d"
                    ]
                },
                {
                    "command": [
                        "apply two_p_strict.",
                        "VernacExtend",
                        "e1297555b81fb127bf1d6535034491424fa2db14"
                    ]
                },
                {
                    "command": [
                        "generalize wordsize_pos.",
                        "VernacExtend",
                        "2cb416b61b49a53184eb1521ed15ff122a244b0b"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "unfold max_unsigned.",
                        "VernacExtend",
                        "36f5add4f60c9b122a3b68fcbd2bef84e6e0d135"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "two_wordsize_max_unsigned",
            "line_nb": 272,
            "steps": [
                {
                    "command": [
                        "assert (2 * zwordsize - 1 < modulus).",
                        "VernacExtend",
                        "9ff266f83e8ee05b7a0c40aaa86a461455ae932e"
                    ]
                },
                {
                    "command": [
                        "rewrite modulus_power.",
                        "VernacExtend",
                        "753142ad8669d3fd0251ba06a6ea2fc37e67244d"
                    ]
                },
                {
                    "command": [
                        "apply two_p_strict_2.",
                        "VernacExtend",
                        "021f21eae4bad151646330f19009a6b5c84c8f68"
                    ]
                },
                {
                    "command": [
                        "generalize wordsize_pos; omega.",
                        "VernacExtend",
                        "1be2fda6bfa5aa53c9fdc4049e4df24e68556740"
                    ]
                },
                {
                    "command": [
                        "unfold max_unsigned; omega.",
                        "VernacExtend",
                        "8050b2acbf1f11f7b1479a8f25e2549120cc659f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_signed_unsigned",
            "line_nb": 279,
            "steps": [
                {
                    "command": [
                        "unfold max_signed, max_unsigned.",
                        "VernacExtend",
                        "fb7cd31bc0408ded569e02ed737cf6ebc76ca48a"
                    ]
                },
                {
                    "command": [
                        "rewrite half_modulus_modulus.",
                        "VernacExtend",
                        "4f1be9507367745c91dc7a8dae1c9475380b67ad"
                    ]
                },
                {
                    "command": [
                        "generalize half_modulus_pos.",
                        "VernacExtend",
                        "01cc2bf737221379d01a92026ffebe473cea8b29"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unsigned_repr_eq",
            "line_nb": 285,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply Z_mod_modulus_eq.",
                        "VernacExtend",
                        "c28628052ff0f6ebd00817a123acef4ae56c52a1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "signed_repr_eq",
            "line_nb": 290,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold signed.",
                        "VernacExtend",
                        "f99b13683b7fbccb713276bdf12a56c47fabc924"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_repr_eq.",
                        "VernacExtend",
                        "4cdb0c1f390fe84b3a9c8bac49c0b5813452743a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqmod_refl",
            "line_nb": 300,
            "steps": [
                {
                    "command": [
                        "intros; red.",
                        "VernacExtend",
                        "3393be941ed81b8e4a79e80db41d01425f14b126"
                    ]
                },
                {
                    "command": [
                        "exists 0.",
                        "VernacExtend",
                        "b12b8acd7a1526ef0683513a127984e4864502d9"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqmod_refl2",
            "line_nb": 305,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "subst y.",
                        "VernacExtend",
                        "f056a00b852bc549d1b8bb21d500c90d8ff37bf8"
                    ]
                },
                {
                    "command": [
                        "apply eqmod_refl.",
                        "VernacExtend",
                        "dd13026dc2e4aa9828d8fe4d8ad9645368260127"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqmod_sym",
            "line_nb": 310,
            "steps": [
                {
                    "command": [
                        "intros x y [k EQ]; red.",
                        "VernacExtend",
                        "c456195a8ff2f98ff5025a3367e55f2b031ddbcd"
                    ]
                },
                {
                    "command": [
                        "exists (-k).",
                        "VernacExtend",
                        "9e3844ecc47f2bb50cba4903f29bb1005189e7ed"
                    ]
                },
                {
                    "command": [
                        "subst x.",
                        "VernacExtend",
                        "76c28b0a6a4a7c1568fa30e26ee411c5e5d54968"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqmod_trans",
            "line_nb": 316,
            "steps": [
                {
                    "command": [
                        "intros x y z [k1 EQ1] [k2 EQ2]; red.",
                        "VernacExtend",
                        "f9788afdb60ff9df5944421eebcf690965f6e97c"
                    ]
                },
                {
                    "command": [
                        "exists (k1 + k2).",
                        "VernacExtend",
                        "0fe601b6c51e8a29cd52c635e334b6b857318714"
                    ]
                },
                {
                    "command": [
                        "subst x; subst y.",
                        "VernacExtend",
                        "77fe7f47f4b796321adc8c0b08f617a66de5b867"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqmod_small_eq",
            "line_nb": 322,
            "steps": [
                {
                    "command": [
                        "intros x y [k EQ] I1 I2.",
                        "VernacExtend",
                        "eaddd6c78bb07f27087537958eddfe58178b0000"
                    ]
                },
                {
                    "command": [
                        "generalize (Zdiv_unique _ _ _ _ EQ I2).",
                        "VernacExtend",
                        "3f0b5cc495c25369e55a1fd33aa278a636d72a82"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "rewrite (Zdiv_small x modul I1) in H.",
                        "VernacExtend",
                        "46287fbb52526a6808cb6f89d0829e5282b548aa"
                    ]
                },
                {
                    "command": [
                        "subst k.",
                        "VernacExtend",
                        "1b57ef870be21b34849e5c815396643cf7b2e820"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqmod_mod_eq",
            "line_nb": 330,
            "steps": [
                {
                    "command": [
                        "intros x y [k EQ].",
                        "VernacExtend",
                        "5fd5a719b4c9129d22d0aa1228663128159eb55f"
                    ]
                },
                {
                    "command": [
                        "subst x.",
                        "VernacExtend",
                        "76c28b0a6a4a7c1568fa30e26ee411c5e5d54968"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.add_comm.",
                        "VernacExtend",
                        "cb1af9408ed4e4ab13bf29109365368cad89a879"
                    ]
                },
                {
                    "command": [
                        "apply Z_mod_plus.",
                        "VernacExtend",
                        "b657bc5f35381a86e6c2e9a660fcde2bf16214d9"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqmod_mod",
            "line_nb": 337,
            "steps": [
                {
                    "command": [
                        "intros; red.",
                        "VernacExtend",
                        "3393be941ed81b8e4a79e80db41d01425f14b126"
                    ]
                },
                {
                    "command": [
                        "exists (x / modul).",
                        "VernacExtend",
                        "b5b10c4862b76d367e7029bb48b5c55c9e0e7658"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.mul_comm.",
                        "VernacExtend",
                        "088699fe7f894ededd3c93ab3a27f9d105f1ab84"
                    ]
                },
                {
                    "command": [
                        "apply Z_div_mod_eq.",
                        "VernacExtend",
                        "c7c7b8c0b3f502009e6f882787bdcc803640e476"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqmod_add",
            "line_nb": 344,
            "steps": [
                {
                    "command": [
                        "intros a b c d [k1 EQ1] [k2 EQ2]; red.",
                        "VernacExtend",
                        "ae1bf0b9531f9db8b8066ae97d1ac0c50ac87804"
                    ]
                },
                {
                    "command": [
                        "subst a; subst c.",
                        "VernacExtend",
                        "ab15cac4ca1b7343d0eb71896823437aea4bbe80"
                    ]
                },
                {
                    "command": [
                        "exists (k1 + k2).",
                        "VernacExtend",
                        "0fe601b6c51e8a29cd52c635e334b6b857318714"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqmod_neg",
            "line_nb": 350,
            "steps": [
                {
                    "command": [
                        "intros x y [k EQ]; red.",
                        "VernacExtend",
                        "c456195a8ff2f98ff5025a3367e55f2b031ddbcd"
                    ]
                },
                {
                    "command": [
                        "exists (-k).",
                        "VernacExtend",
                        "9e3844ecc47f2bb50cba4903f29bb1005189e7ed"
                    ]
                },
                {
                    "command": [
                        "rewrite EQ.",
                        "VernacExtend",
                        "359c5e196f83a6afbd9ede635bddbf545fd1eb82"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqmod_sub",
            "line_nb": 356,
            "steps": [
                {
                    "command": [
                        "intros a b c d [k1 EQ1] [k2 EQ2]; red.",
                        "VernacExtend",
                        "ae1bf0b9531f9db8b8066ae97d1ac0c50ac87804"
                    ]
                },
                {
                    "command": [
                        "subst a; subst c.",
                        "VernacExtend",
                        "ab15cac4ca1b7343d0eb71896823437aea4bbe80"
                    ]
                },
                {
                    "command": [
                        "exists (k1 - k2).",
                        "VernacExtend",
                        "b0d222f3ffd16c6cc1992e641ae29af13e6c7088"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqmod_mult",
            "line_nb": 362,
            "steps": [
                {
                    "command": [
                        "intros a b c d [k1 EQ1] [k2 EQ2]; red.",
                        "VernacExtend",
                        "ae1bf0b9531f9db8b8066ae97d1ac0c50ac87804"
                    ]
                },
                {
                    "command": [
                        "subst a; subst b.",
                        "VernacExtend",
                        "aa98f710bde7013896d64bac4e3e2d2e990f2218"
                    ]
                },
                {
                    "command": [
                        "exists (k1 * k2 * modul + c * k2 + k1 * d).",
                        "VernacExtend",
                        "21dcbeee3af66b825fddda0848ea9ee6ccab5b68"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqmod_divides",
            "line_nb": 369,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H as [k1 EQ1].",
                        "VernacExtend",
                        "ae8a53ad1944c0d40101d32245ea4110ff1b461b"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as [k2 EQ2].",
                        "VernacExtend",
                        "05d0bf0f0bf5c4a3ff4b1fac73a54ceed6482c71"
                    ]
                },
                {
                    "command": [
                        "exists (k1*k2).",
                        "VernacExtend",
                        "53fd94a50fbb59d85c0281daaa3cb6e940e31722"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z.mul_assoc.",
                        "VernacExtend",
                        "a482030af4b7eacc2f9923f251ef4410ebcc85f5"
                    ]
                },
                {
                    "command": [
                        "rewrite <- EQ2.",
                        "VernacExtend",
                        "681d28912b80a73973932919e02efd4f68e2a471"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqm_samerepr",
            "line_nb": 407,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold repr.",
                        "VernacExtend",
                        "91e4045fc3bd5344cc6c0e2cdc38993b582889b7"
                    ]
                },
                {
                    "command": [
                        "apply mkint_eq.",
                        "VernacExtend",
                        "be81a2a6894844a023a9bb5122ffed586a6d04fa"
                    ]
                },
                {
                    "command": [
                        "rewrite !Z_mod_modulus_eq.",
                        "VernacExtend",
                        "a24b0b066b2efe16a93ee77df7a3b817b2963e75"
                    ]
                },
                {
                    "command": [
                        "apply eqmod_mod_eq.",
                        "VernacExtend",
                        "e462c5f68727dc40165d24c024a428f990dc8959"
                    ]
                },
                {
                    "command": [
                        "auto with ints.",
                        "VernacExtend",
                        "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
                    ]
                },
                {
                    "command": [
                        "exact H.",
                        "VernacExtend",
                        "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqm_unsigned_repr",
            "line_nb": 416,
            "steps": [
                {
                    "command": [
                        "unfold eqm; intros.",
                        "VernacExtend",
                        "b9ec868c9cb01f2451ff559bde1f0246a0e34f42"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_repr_eq.",
                        "VernacExtend",
                        "4cdb0c1f390fe84b3a9c8bac49c0b5813452743a"
                    ]
                },
                {
                    "command": [
                        "apply eqmod_mod.",
                        "VernacExtend",
                        "1729dd014b983334b1b539b611f2322ed5a7d321"
                    ]
                },
                {
                    "command": [
                        "auto with ints.",
                        "VernacExtend",
                        "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqm_unsigned_repr_l",
            "line_nb": 423,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply eqm_trans with a.",
                        "VernacExtend",
                        "0b864f055a5ad7efc38ccf716f9deba435889129"
                    ]
                },
                {
                    "command": [
                        "apply eqm_sym.",
                        "VernacExtend",
                        "f47e8ad0613afa49106216f940d8037154af13ba"
                    ]
                },
                {
                    "command": [
                        "apply eqm_unsigned_repr.",
                        "VernacExtend",
                        "8083262b54f87caceff266da1e7020054aa5a39f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqm_unsigned_repr_r",
            "line_nb": 431,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply eqm_trans with b.",
                        "VernacExtend",
                        "920de48eb867a92d8ab2c7326ccc9b9b57f4547f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply eqm_unsigned_repr.",
                        "VernacExtend",
                        "8083262b54f87caceff266da1e7020054aa5a39f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqm_signed_unsigned",
            "line_nb": 438,
            "steps": [
                {
                    "command": [
                        "intros; red.",
                        "VernacExtend",
                        "3393be941ed81b8e4a79e80db41d01425f14b126"
                    ]
                },
                {
                    "command": [
                        "unfold signed.",
                        "VernacExtend",
                        "f99b13683b7fbccb713276bdf12a56c47fabc924"
                    ]
                },
                {
                    "command": [
                        "set (y := unsigned x).",
                        "VernacExtend",
                        "9795f7ec619608b486c48ff24d9256581cb75002"
                    ]
                },
                {
                    "command": [
                        "case (zlt y half_modulus); intro.",
                        "VernacExtend",
                        "dc5e674627fb82622126c1893afb9ac642d7d087"
                    ]
                },
                {
                    "command": [
                        "apply eqmod_refl.",
                        "VernacExtend",
                        "dd13026dc2e4aa9828d8fe4d8ad9645368260127"
                    ]
                },
                {
                    "command": [
                        "red; exists (-1); ring.",
                        "VernacExtend",
                        "e3769e3bb8685a3df66e6edf2b135180a16f3430"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unsigned_range",
            "line_nb": 446,
            "steps": [
                {
                    "command": [
                        "destruct i.",
                        "VernacExtend",
                        "7ab4d0c959e49705b3528aeb0ec3e44ca47eacef"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unsigned_range_2",
            "line_nb": 452,
            "steps": [
                {
                    "command": [
                        "intro; unfold max_unsigned.",
                        "VernacExtend",
                        "6cbc9c373568eaf3b5015e1fe804b1f90d4086b4"
                    ]
                },
                {
                    "command": [
                        "generalize (unsigned_range i).",
                        "VernacExtend",
                        "2e4a5d095012ac0fe6e7775adce4e7b86cf9b5b8"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "signed_range",
            "line_nb": 458,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold signed.",
                        "VernacExtend",
                        "f99b13683b7fbccb713276bdf12a56c47fabc924"
                    ]
                },
                {
                    "command": [
                        "generalize (unsigned_range i).",
                        "VernacExtend",
                        "2e4a5d095012ac0fe6e7775adce4e7b86cf9b5b8"
                    ]
                },
                {
                    "command": [
                        "set (n := unsigned i).",
                        "VernacExtend",
                        "c44ad60550ff8a3789675a53b19da9095d83525f"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "case (zlt n half_modulus); intro.",
                        "VernacExtend",
                        "e140d833d306a457e6ba1208204f30d9f0bb4104"
                    ]
                },
                {
                    "command": [
                        "unfold max_signed.",
                        "VernacExtend",
                        "f8dfc169a274f28f22cf16df03cc4eb70fbb62d5"
                    ]
                },
                {
                    "command": [
                        "generalize min_signed_neg.",
                        "VernacExtend",
                        "ac7ec763bc9d04fd155ad86b784068f7e17c5cfa"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "unfold min_signed, max_signed.",
                        "VernacExtend",
                        "33c0760e781552aec857e6894a7ca108a9f152c6"
                    ]
                },
                {
                    "command": [
                        "rewrite half_modulus_modulus in *.",
                        "VernacExtend",
                        "46d265e476b14e3b39bc2892654648fb4ce8b930"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "repr_unsigned",
            "line_nb": 472,
            "steps": [
                {
                    "command": [
                        "destruct i; simpl.",
                        "VernacExtend",
                        "4521b9790b82772dc0c1c54601d42b59e83dbed6"
                    ]
                },
                {
                    "command": [
                        "unfold repr.",
                        "VernacExtend",
                        "91e4045fc3bd5344cc6c0e2cdc38993b582889b7"
                    ]
                },
                {
                    "command": [
                        "apply mkint_eq.",
                        "VernacExtend",
                        "be81a2a6894844a023a9bb5122ffed586a6d04fa"
                    ]
                },
                {
                    "command": [
                        "rewrite Z_mod_modulus_eq.",
                        "VernacExtend",
                        "4749d2a09ffb0e441a81f904f3321483e2f60790"
                    ]
                },
                {
                    "command": [
                        "apply Zmod_small; omega.",
                        "VernacExtend",
                        "a5728ca055ed9bbdf24bd33427fb244e1ebf4482"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "repr_signed",
            "line_nb": 480,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "transitivity (repr (unsigned i)).",
                        "VernacExtend",
                        "136026c9c301efdbde1241887c63b568b81f9136"
                    ]
                },
                {
                    "command": [
                        "apply eqm_samerepr.",
                        "VernacExtend",
                        "2226a5674ed5a7db984e878fdbb37775ca665295"
                    ]
                },
                {
                    "command": [
                        "apply eqm_signed_unsigned.",
                        "VernacExtend",
                        "d8614df8b73ff309ccafc1b69753d7e1944f658e"
                    ]
                },
                {
                    "command": [
                        "auto with ints.",
                        "VernacExtend",
                        "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqm_repr_eq",
            "line_nb": 489,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (repr_unsigned y).",
                        "VernacExtend",
                        "140fc635f53509ca75abf324c73c2a5f03133e74"
                    ]
                },
                {
                    "command": [
                        "apply eqm_samerepr; auto.",
                        "VernacExtend",
                        "f63e226c02e69d34af81551436ed0bea851b7b29"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unsigned_repr",
            "line_nb": 494,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_repr_eq.",
                        "VernacExtend",
                        "4cdb0c1f390fe84b3a9c8bac49c0b5813452743a"
                    ]
                },
                {
                    "command": [
                        "apply Zmod_small.",
                        "VernacExtend",
                        "439f7572e12963e1685c905bb39e49700a5d1e32"
                    ]
                },
                {
                    "command": [
                        "unfold max_unsigned in H.",
                        "VernacExtend",
                        "e05196ac5ea874df85e20c2424af2795b1d6f809"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "signed_repr",
            "line_nb": 502,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold signed.",
                        "VernacExtend",
                        "f99b13683b7fbccb713276bdf12a56c47fabc924"
                    ]
                },
                {
                    "command": [
                        "destruct (zle 0 z).",
                        "VernacExtend",
                        "b2f5dbe9dbb17288796fc90f5c97501d6d2ac376"
                    ]
                },
                {
                    "command": [
                        "replace (unsigned (repr z)) with z.",
                        "VernacExtend",
                        "238435dbfcb09d483a574ec3646ed5cb34f00f57"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true.",
                        "VernacExtend",
                        "b49135e183425368b4318af106711c28871bcc77"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "unfold max_signed in H.",
                        "VernacExtend",
                        "2271c6286e0424728bee9f8c2e83c903205c19a2"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply unsigned_repr.",
                        "VernacExtend",
                        "cbb55125b21da3156cf49c45f71d95a6743593f6"
                    ]
                },
                {
                    "command": [
                        "generalize max_signed_unsigned.",
                        "VernacExtend",
                        "08f5b2060e17b6028ffc29c2f43565b2bf66fb1b"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "pose (z' := z + modulus).",
                        "VernacExtend",
                        "01e6557a798839a61f54116854e934652c8679e7"
                    ]
                },
                {
                    "command": [
                        "replace (repr z) with (repr z').",
                        "VernacExtend",
                        "fc39e0d0a4b6c8d621b3723ee66f06d2143bfe90"
                    ]
                },
                {
                    "command": [
                        "replace (unsigned (repr z')) with z'.",
                        "VernacExtend",
                        "9c395ca16398d5e2a916f0a79258df752d650506"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false.",
                        "VernacExtend",
                        "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
                    ]
                },
                {
                    "command": [
                        "unfold z'.",
                        "VernacExtend",
                        "04b59f4cf7e9e6c4f798f151059f6311fbf8364e"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "unfold z'.",
                        "VernacExtend",
                        "04b59f4cf7e9e6c4f798f151059f6311fbf8364e"
                    ]
                },
                {
                    "command": [
                        "unfold min_signed in H.",
                        "VernacExtend",
                        "e997a7adc9521fb03586a33beb0c8d983c76a3a1"
                    ]
                },
                {
                    "command": [
                        "rewrite half_modulus_modulus.",
                        "VernacExtend",
                        "4f1be9507367745c91dc7a8dae1c9475380b67ad"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply unsigned_repr.",
                        "VernacExtend",
                        "cbb55125b21da3156cf49c45f71d95a6743593f6"
                    ]
                },
                {
                    "command": [
                        "unfold z', max_unsigned.",
                        "VernacExtend",
                        "a11fa65f7c032143af9e9c789460ef2f3c672c37"
                    ]
                },
                {
                    "command": [
                        "unfold min_signed, max_signed in H.",
                        "VernacExtend",
                        "cc0eee8ed34f5d246e9eb1b05b592982738140f4"
                    ]
                },
                {
                    "command": [
                        "rewrite half_modulus_modulus.",
                        "VernacExtend",
                        "4f1be9507367745c91dc7a8dae1c9475380b67ad"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply eqm_samerepr.",
                        "VernacExtend",
                        "2226a5674ed5a7db984e878fdbb37775ca665295"
                    ]
                },
                {
                    "command": [
                        "unfold z'; red.",
                        "VernacExtend",
                        "df5eacb127643bdd0ddf69e696cfa441622f5716"
                    ]
                },
                {
                    "command": [
                        "exists 1.",
                        "VernacExtend",
                        "18eb310858be5acae7304d0d9ed33063568db310"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "signed_eq_unsigned",
            "line_nb": 536,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold signed.",
                        "VernacExtend",
                        "f99b13683b7fbccb713276bdf12a56c47fabc924"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (unsigned x) half_modulus).",
                        "VernacExtend",
                        "96100f79c30f7c1ed7c9d19caec035348a472e2e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "unfold max_signed in H.",
                        "VernacExtend",
                        "2271c6286e0424728bee9f8c2e83c903205c19a2"
                    ]
                },
                {
                    "command": [
                        "omegaContradiction.",
                        "VernacExtend",
                        "329a0d87fada76e54a403fa49705e937670711cd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "signed_positive",
            "line_nb": 544,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold signed, max_signed.",
                        "VernacExtend",
                        "81d2d293a878d2b91a22564777fe4faad43b167f"
                    ]
                },
                {
                    "command": [
                        "generalize (unsigned_range x) half_modulus_modulus half_modulus_pos; intros.",
                        "VernacExtend",
                        "e6b996ec1cbda713e6ad873d69d0f2ed4dbad2a3"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (unsigned x) half_modulus); omega.",
                        "VernacExtend",
                        "72d987c043ac1d1081070673af172111eec74735"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unsigned_zero",
            "line_nb": 550,
            "steps": [
                {
                    "command": [
                        "unfold zero; rewrite unsigned_repr_eq.",
                        "VernacExtend",
                        "528891dd3f536ec4f1f27fd71d8ec3a8999661d3"
                    ]
                },
                {
                    "command": [
                        "apply Zmod_0_l.",
                        "VernacExtend",
                        "af50c32668451ac862e7705801a8f29ecf81ca3e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unsigned_one",
            "line_nb": 554,
            "steps": [
                {
                    "command": [
                        "unfold one; rewrite unsigned_repr_eq.",
                        "VernacExtend",
                        "e4df0ef799447f129acddf1325ca7caafb7ed3ed"
                    ]
                },
                {
                    "command": [
                        "apply Zmod_small.",
                        "VernacExtend",
                        "439f7572e12963e1685c905bb39e49700a5d1e32"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "unfold modulus.",
                        "VernacExtend",
                        "202f368b6f08b873343d2b49e63dddcb32f23f66"
                    ]
                },
                {
                    "command": [
                        "replace wordsize with (S(Init.Nat.pred wordsize)).",
                        "VernacExtend",
                        "2d62f24ab64750b516bfdf52f64a87b83e7c554b"
                    ]
                },
                {
                    "command": [
                        "rewrite two_power_nat_S.",
                        "VernacExtend",
                        "a9744f6bd9a8fe7c31c0f7154478ac3b90a12f1b"
                    ]
                },
                {
                    "command": [
                        "generalize (two_power_nat_pos (Init.Nat.pred wordsize)).",
                        "VernacExtend",
                        "fcb9cd3f27ed365d78b654be4c3afc2149e16be4"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "generalize wordsize_pos.",
                        "VernacExtend",
                        "2cb416b61b49a53184eb1521ed15ff122a244b0b"
                    ]
                },
                {
                    "command": [
                        "unfold zwordsize.",
                        "VernacExtend",
                        "6b3f3f2469545a20c790b5e33b06d7eaec8d28a6"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unsigned_mone",
            "line_nb": 568,
            "steps": [
                {
                    "command": [
                        "unfold mone; rewrite unsigned_repr_eq.",
                        "VernacExtend",
                        "da36cab8c827187e610a059000a7931555247e52"
                    ]
                },
                {
                    "command": [
                        "replace (-1) with ((modulus - 1) + (-1) * modulus).",
                        "VernacExtend",
                        "cfd4f3dcffb92383c62c4853a976dc901f9aa269"
                    ]
                },
                {
                    "command": [
                        "rewrite Z_mod_plus_full.",
                        "VernacExtend",
                        "611be5838111cbc1034a8aa3120f9e799f2b2541"
                    ]
                },
                {
                    "command": [
                        "apply Zmod_small.",
                        "VernacExtend",
                        "439f7572e12963e1685c905bb39e49700a5d1e32"
                    ]
                },
                {
                    "command": [
                        "generalize modulus_pos.",
                        "VernacExtend",
                        "c8c3006ba30b21c701534130ddb536a246d1045b"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "signed_zero",
            "line_nb": 577,
            "steps": [
                {
                    "command": [
                        "unfold signed.",
                        "VernacExtend",
                        "f99b13683b7fbccb713276bdf12a56c47fabc924"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_zero.",
                        "VernacExtend",
                        "89956b9f461b9934c8fa99e6e63074f0275efcae"
                    ]
                },
                {
                    "command": [
                        "apply zlt_true.",
                        "VernacExtend",
                        "135d300e9c683e2995f4687be0904a8b2009f6fe"
                    ]
                },
                {
                    "command": [
                        "generalize half_modulus_pos; omega.",
                        "VernacExtend",
                        "84349a0a8d7cb036146828c241fa5c72249fbb54"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "signed_one",
            "line_nb": 583,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold signed.",
                        "VernacExtend",
                        "f99b13683b7fbccb713276bdf12a56c47fabc924"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_one.",
                        "VernacExtend",
                        "52f1cc9e4b7b0a3b7c37f5e9a1a6c514d4cb1683"
                    ]
                },
                {
                    "command": [
                        "apply zlt_true.",
                        "VernacExtend",
                        "135d300e9c683e2995f4687be0904a8b2009f6fe"
                    ]
                },
                {
                    "command": [
                        "change 1 with (two_p 0).",
                        "VernacExtend",
                        "bfaa6197bafec46ecb47adf43807297e6ace0294"
                    ]
                },
                {
                    "command": [
                        "rewrite half_modulus_power.",
                        "VernacExtend",
                        "fd8ccafd38bbc04cf02d63bcd61c884d7a7470f8"
                    ]
                },
                {
                    "command": [
                        "apply two_p_monotone_strict.",
                        "VernacExtend",
                        "9f9347abd1e7a23e387d0ed249667589d29440a0"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "signed_mone",
            "line_nb": 593,
            "steps": [
                {
                    "command": [
                        "unfold signed.",
                        "VernacExtend",
                        "f99b13683b7fbccb713276bdf12a56c47fabc924"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_mone.",
                        "VernacExtend",
                        "8f638f66e0273f316077da6f32f87449b5bcaa54"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false.",
                        "VernacExtend",
                        "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite half_modulus_modulus.",
                        "VernacExtend",
                        "4f1be9507367745c91dc7a8dae1c9475380b67ad"
                    ]
                },
                {
                    "command": [
                        "generalize half_modulus_pos.",
                        "VernacExtend",
                        "01cc2bf737221379d01a92026ffebe473cea8b29"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "one_not_zero",
            "line_nb": 602,
            "steps": [
                {
                    "command": [
                        "assert (unsigned one <> unsigned zero).",
                        "VernacExtend",
                        "d18a4406616f928ed5bce22785b115f4bd7277a9"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_one; rewrite unsigned_zero; congruence.",
                        "VernacExtend",
                        "5a69fd723f743ec641ce9dde6bd7dc5d5b03be76"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unsigned_repr_wordsize",
            "line_nb": 607,
            "steps": [
                {
                    "command": [
                        "unfold iwordsize; rewrite unsigned_repr_eq.",
                        "VernacExtend",
                        "28cd443d8b577174b807f159524ed0ba27d801fc"
                    ]
                },
                {
                    "command": [
                        "apply Zmod_small.",
                        "VernacExtend",
                        "439f7572e12963e1685c905bb39e49700a5d1e32"
                    ]
                },
                {
                    "command": [
                        "generalize wordsize_pos wordsize_max_unsigned; unfold max_unsigned; omega.",
                        "VernacExtend",
                        "15ef7faff5c58ee48c463e7be0b710e0749573c4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_sym",
            "line_nb": 612,
            "steps": [
                {
                    "command": [
                        "intros; unfold eq.",
                        "VernacExtend",
                        "cd6f155ee3e2d7e91274fcc65550490d896b7567"
                    ]
                },
                {
                    "command": [
                        "case (zeq (unsigned x) (unsigned y)); intro.",
                        "VernacExtend",
                        "d4d8355bea845a378d4f1b5ef96581376650a64d"
                    ]
                },
                {
                    "command": [
                        "rewrite e.",
                        "VernacExtend",
                        "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
                    ]
                },
                {
                    "command": [
                        "rewrite zeq_true.",
                        "VernacExtend",
                        "98dc7bff53064d4bdee6debb2d9c009a8a8d618c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite zeq_false.",
                        "VernacExtend",
                        "dab8f9109b7a6d08485a19d2b305200449ea8478"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_spec",
            "line_nb": 622,
            "steps": [
                {
                    "command": [
                        "intros; unfold eq.",
                        "VernacExtend",
                        "cd6f155ee3e2d7e91274fcc65550490d896b7567"
                    ]
                },
                {
                    "command": [
                        "case (eq_dec x y); intro.",
                        "VernacExtend",
                        "1936a46b9ad80598e6a9795c28e89235b45de84e"
                    ]
                },
                {
                    "command": [
                        "subst y.",
                        "VernacExtend",
                        "f056a00b852bc549d1b8bb21d500c90d8ff37bf8"
                    ]
                },
                {
                    "command": [
                        "rewrite zeq_true.",
                        "VernacExtend",
                        "98dc7bff53064d4bdee6debb2d9c009a8a8d618c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite zeq_false.",
                        "VernacExtend",
                        "dab8f9109b7a6d08485a19d2b305200449ea8478"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "destruct x; destruct y.",
                        "VernacExtend",
                        "66b6bbed80f19a7ddf75313e3d1e4cc780d5f91f"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "red; intro.",
                        "VernacExtend",
                        "12e00b6ab6f8834b6f81959ca42843abaa311f37"
                    ]
                },
                {
                    "command": [
                        "elim n.",
                        "VernacExtend",
                        "c68f766a88bb5402d72ee6adaca953661a5d18b2"
                    ]
                },
                {
                    "command": [
                        "apply mkint_eq.",
                        "VernacExtend",
                        "be81a2a6894844a023a9bb5122ffed586a6d04fa"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_true",
            "line_nb": 637,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (eq_spec x x); case (eq x x); intros; congruence.",
                        "VernacExtend",
                        "7adf782a534eecb336238fc0fc018d090ae445b4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_false",
            "line_nb": 641,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (eq_spec x y); case (eq x y); intros; congruence.",
                        "VernacExtend",
                        "40754d98fd2a5eacc65c41ac5894150ff3221f00"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_signed",
            "line_nb": 645,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "predSpec eq eq_spec x y.",
                        "VernacExtend",
                        "820331c62ecbcb823d976fbb120ee032c5485e1b"
                    ]
                },
                {
                    "command": [
                        "subst x.",
                        "VernacExtend",
                        "76c28b0a6a4a7c1568fa30e26ee411c5e5d54968"
                    ]
                },
                {
                    "command": [
                        "rewrite zeq_true; auto.",
                        "VernacExtend",
                        "423071e182d9e6b7d1f2d847b6fdcd65b4de94e5"
                    ]
                },
                {
                    "command": [
                        "destruct (zeq (signed x) (signed y)); auto.",
                        "VernacExtend",
                        "d79a5b4e13672506f8e717de55d0efc752011584"
                    ]
                },
                {
                    "command": [
                        "elim H.",
                        "VernacExtend",
                        "853aa440c3a3810be05f0f87d0e688c05b92253d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (repr_signed x).",
                        "VernacExtend",
                        "555fb0db52173ec78ea4ccdb677fc91c494bdb3a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (repr_signed y).",
                        "VernacExtend",
                        "9dd47bb3dd6dbac5aa2e042e79f9c4b37f82ff08"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_unsigned",
            "line_nb": 656,
            "steps": [
                {
                    "command": [
                        "intros; reflexivity.",
                        "VernacExtend",
                        "c20cfa06d7b692e82c145d2df3bde4c2fe4eb461"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_signed",
            "line_nb": 659,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite add_unsigned.",
                        "VernacExtend",
                        "349bdc05af730edc67c16b07eae2e12b7485afa2"
                    ]
                },
                {
                    "command": [
                        "apply eqm_samerepr.",
                        "VernacExtend",
                        "2226a5674ed5a7db984e878fdbb37775ca665295"
                    ]
                },
                {
                    "command": [
                        "apply eqm_add; apply eqm_sym; apply eqm_signed_unsigned.",
                        "VernacExtend",
                        "1532a1b5d719042d5f1ae3708ae769ed60fc3dcd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_commut",
            "line_nb": 665,
            "steps": [
                {
                    "command": [
                        "intros; unfold add.",
                        "VernacExtend",
                        "b4839958c5ab83f0cf119be76f61b4888a77291b"
                    ]
                },
                {
                    "command": [
                        "decEq.",
                        "VernacExtend",
                        "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_zero",
            "line_nb": 670,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold add.",
                        "VernacExtend",
                        "11cf98bf231f22df486b46b3b6a1c38a94e859dd"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_zero.",
                        "VernacExtend",
                        "89956b9f461b9934c8fa99e6e63074f0275efcae"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.add_0_r.",
                        "VernacExtend",
                        "06ae07741c51588ad5058ce812450f10227d7b7a"
                    ]
                },
                {
                    "command": [
                        "apply repr_unsigned.",
                        "VernacExtend",
                        "7033f895e7c0a699adb114621e89aafefb338576"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_zero_l",
            "line_nb": 677,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite add_commut.",
                        "VernacExtend",
                        "e75b7ced8dcae7a5a7e30f10878b5dbc00bb9021"
                    ]
                },
                {
                    "command": [
                        "apply add_zero.",
                        "VernacExtend",
                        "641f544960a4dada6ef8eb554d02daf56dae9e44"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_assoc",
            "line_nb": 682,
            "steps": [
                {
                    "command": [
                        "intros; unfold add.",
                        "VernacExtend",
                        "b4839958c5ab83f0cf119be76f61b4888a77291b"
                    ]
                },
                {
                    "command": [
                        "set (x' := unsigned x).",
                        "VernacExtend",
                        "37cea74d2fdd215da8906415651a9e10de7f9ca0"
                    ]
                },
                {
                    "command": [
                        "set (y' := unsigned y).",
                        "VernacExtend",
                        "65865d37b040a6ef65e92eeec0041c0908c91bed"
                    ]
                },
                {
                    "command": [
                        "set (z' := unsigned z).",
                        "VernacExtend",
                        "7c6d2d0828173c29360389a4a483a2210dd1d457"
                    ]
                },
                {
                    "command": [
                        "apply eqm_samerepr.",
                        "VernacExtend",
                        "2226a5674ed5a7db984e878fdbb37775ca665295"
                    ]
                },
                {
                    "command": [
                        "apply eqm_trans with ((x' + y') + z').",
                        "VernacExtend",
                        "9e6618d5851f088493d9410cb1a6a5ec9c4627ab"
                    ]
                },
                {
                    "command": [
                        "auto with ints.",
                        "VernacExtend",
                        "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z.add_assoc.",
                        "VernacExtend",
                        "ac972debc80f23a39f4e00734b65309c5ac68a39"
                    ]
                },
                {
                    "command": [
                        "auto with ints.",
                        "VernacExtend",
                        "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_permut",
            "line_nb": 693,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite (add_commut y z).",
                        "VernacExtend",
                        "d930ae7dec4aba76ea4c7edb9479a6ad468dec26"
                    ]
                },
                {
                    "command": [
                        "rewrite <- add_assoc.",
                        "VernacExtend",
                        "c34a88538a6a595366810d8d189307fbbf983edd"
                    ]
                },
                {
                    "command": [
                        "apply add_commut.",
                        "VernacExtend",
                        "da322b7bed597f016f37917b132c2dd1b4d3fc9f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_neg_zero",
            "line_nb": 699,
            "steps": [
                {
                    "command": [
                        "intros; unfold add, neg, zero.",
                        "VernacExtend",
                        "b8a19e8448fc5d20df5b695b724c21cc89a64483"
                    ]
                },
                {
                    "command": [
                        "apply eqm_samerepr.",
                        "VernacExtend",
                        "2226a5674ed5a7db984e878fdbb37775ca665295"
                    ]
                },
                {
                    "command": [
                        "replace 0 with (unsigned x + (- (unsigned x))).",
                        "VernacExtend",
                        "0692330c1e33e754a98fd2317b2056331d815bf1"
                    ]
                },
                {
                    "command": [
                        "auto with ints.",
                        "VernacExtend",
                        "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unsigned_add_carry",
            "line_nb": 706,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold add, add_carry.",
                        "VernacExtend",
                        "adf1fbfdfc7e022b6ef3e5eef2a2244582c561df"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_zero.",
                        "VernacExtend",
                        "89956b9f461b9934c8fa99e6e63074f0275efcae"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.add_0_r.",
                        "VernacExtend",
                        "06ae07741c51588ad5058ce812450f10227d7b7a"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_repr_eq.",
                        "VernacExtend",
                        "4cdb0c1f390fe84b3a9c8bac49c0b5813452743a"
                    ]
                },
                {
                    "command": [
                        "generalize (unsigned_range x) (unsigned_range y).",
                        "VernacExtend",
                        "a13a4ed3bded6153267e977896bcd2455187d557"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (unsigned x + unsigned y) modulus).",
                        "VernacExtend",
                        "3e8a722dbecb98d9108af584ca6d9a7551c993c3"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_zero.",
                        "VernacExtend",
                        "89956b9f461b9934c8fa99e6e63074f0275efcae"
                    ]
                },
                {
                    "command": [
                        "apply Zmod_unique with 0.",
                        "VernacExtend",
                        "ac4928d6d5599fb111ed1b2a906c054db978f8ba"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_one.",
                        "VernacExtend",
                        "52f1cc9e4b7b0a3b7c37f5e9a1a6c514d4cb1683"
                    ]
                },
                {
                    "command": [
                        "apply Zmod_unique with 1.",
                        "VernacExtend",
                        "b953ec890390b632fe3bcfa9caa0f49a9e85ac31"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unsigned_add_either",
            "line_nb": 724,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_add_carry.",
                        "VernacExtend",
                        "c74332334d22e8420d8c858333a3a31e30245371"
                    ]
                },
                {
                    "command": [
                        "unfold add_carry.",
                        "VernacExtend",
                        "b85aa8a8fdc0460ed1b07bed184ed804399ab881"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_zero.",
                        "VernacExtend",
                        "89956b9f461b9934c8fa99e6e63074f0275efcae"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.add_0_r.",
                        "VernacExtend",
                        "06ae07741c51588ad5058ce812450f10227d7b7a"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (unsigned x + unsigned y) modulus).",
                        "VernacExtend",
                        "3e8a722dbecb98d9108af584ca6d9a7551c993c3"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_zero.",
                        "VernacExtend",
                        "89956b9f461b9934c8fa99e6e63074f0275efcae"
                    ]
                },
                {
                    "command": [
                        "left; omega.",
                        "VernacExtend",
                        "9a0d1509b2ddece54a4a5d691f28c3e86f4a5b72"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_one.",
                        "VernacExtend",
                        "52f1cc9e4b7b0a3b7c37f5e9a1a6c514d4cb1683"
                    ]
                },
                {
                    "command": [
                        "right; omega.",
                        "VernacExtend",
                        "12a62aeea1a26870d19a3f39cd3d9d63bfc5e22b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "neg_repr",
            "line_nb": 736,
            "steps": [
                {
                    "command": [
                        "intros; unfold neg.",
                        "VernacExtend",
                        "cf645b81ef485b53001c969f6c8f481d1dad79cb"
                    ]
                },
                {
                    "command": [
                        "apply eqm_samerepr.",
                        "VernacExtend",
                        "2226a5674ed5a7db984e878fdbb37775ca665295"
                    ]
                },
                {
                    "command": [
                        "auto with ints.",
                        "VernacExtend",
                        "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "neg_zero",
            "line_nb": 741,
            "steps": [
                {
                    "command": [
                        "unfold neg.",
                        "VernacExtend",
                        "c7932042fd728b6ba2d5f9ca45c06c287061699d"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_zero.",
                        "VernacExtend",
                        "89956b9f461b9934c8fa99e6e63074f0275efcae"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "neg_add_distr",
            "line_nb": 756,
            "steps": [
                {
                    "command": [
                        "intros; unfold neg, add.",
                        "VernacExtend",
                        "446b9ed61bca8b846953287a48edc1286086a1d7"
                    ]
                },
                {
                    "command": [
                        "apply eqm_samerepr.",
                        "VernacExtend",
                        "2226a5674ed5a7db984e878fdbb37775ca665295"
                    ]
                },
                {
                    "command": [
                        "apply eqm_trans with (- (unsigned x + unsigned y)).",
                        "VernacExtend",
                        "e2185d8b7fb9d6b0c5a3b5ca2e71d0d48712a29f"
                    ]
                },
                {
                    "command": [
                        "auto with ints.",
                        "VernacExtend",
                        "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
                    ]
                },
                {
                    "command": [
                        "replace (- (unsigned x + unsigned y)) with ((- unsigned x) + (- unsigned y)).",
                        "VernacExtend",
                        "c5e625f5a8ceb588d616e41ff7d101d52d0b37c2"
                    ]
                },
                {
                    "command": [
                        "auto with ints.",
                        "VernacExtend",
                        "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_zero_l",
            "line_nb": 765,
            "steps": [
                {
                    "command": [
                        "intros; unfold sub.",
                        "VernacExtend",
                        "d39fb4cdac1111998d6106a2d6890a5e3c1132b3"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_zero.",
                        "VernacExtend",
                        "89956b9f461b9934c8fa99e6e63074f0275efcae"
                    ]
                },
                {
                    "command": [
                        "replace (unsigned x - 0) with (unsigned x) by omega.",
                        "VernacExtend",
                        "a160eadd1cb32e63e0a54d117caaf78f8f07d493"
                    ]
                },
                {
                    "command": [
                        "apply repr_unsigned.",
                        "VernacExtend",
                        "7033f895e7c0a699adb114621e89aafefb338576"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_zero_r",
            "line_nb": 771,
            "steps": [
                {
                    "command": [
                        "intros; unfold sub, neg.",
                        "VernacExtend",
                        "f0f284e985375745efcf0b5c22bdb6e4e5b7305e"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_zero.",
                        "VernacExtend",
                        "89956b9f461b9934c8fa99e6e63074f0275efcae"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_add_opp",
            "line_nb": 776,
            "steps": [
                {
                    "command": [
                        "intros; unfold sub, add, neg.",
                        "VernacExtend",
                        "ca8e79fb68dc9677898bad3b0610f18afea4fafa"
                    ]
                },
                {
                    "command": [
                        "apply eqm_samerepr.",
                        "VernacExtend",
                        "2226a5674ed5a7db984e878fdbb37775ca665295"
                    ]
                },
                {
                    "command": [
                        "apply eqm_add; auto with ints.",
                        "VernacExtend",
                        "af5726510e5682d3c82760011803c0892c36d2cc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_idem",
            "line_nb": 781,
            "steps": [
                {
                    "command": [
                        "intros; unfold sub.",
                        "VernacExtend",
                        "d39fb4cdac1111998d6106a2d6890a5e3c1132b3"
                    ]
                },
                {
                    "command": [
                        "unfold zero.",
                        "VernacExtend",
                        "1f909792743ffabee09dc445053cd7808033ff89"
                    ]
                },
                {
                    "command": [
                        "decEq.",
                        "VernacExtend",
                        "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_add_l",
            "line_nb": 787,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite sub_add_opp.",
                        "VernacExtend",
                        "f031127fc21f554022329d56149f6bf30dd64ac2"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite add_assoc.",
                        "VernacExtend",
                        "f9ee13e09071202a78ea18f8af5746590337d16f"
                    ]
                },
                {
                    "command": [
                        "decEq.",
                        "VernacExtend",
                        "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
                    ]
                },
                {
                    "command": [
                        "apply add_commut.",
                        "VernacExtend",
                        "da322b7bed597f016f37917b132c2dd1b4d3fc9f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_add_r",
            "line_nb": 794,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite sub_add_opp.",
                        "VernacExtend",
                        "f031127fc21f554022329d56149f6bf30dd64ac2"
                    ]
                },
                {
                    "command": [
                        "rewrite neg_add_distr.",
                        "VernacExtend",
                        "91b1c72b389a6b65a6eb24fff050918672e72465"
                    ]
                },
                {
                    "command": [
                        "rewrite add_permut.",
                        "VernacExtend",
                        "4ecd311a8b8c9b77e141bf2dbd592d7f66ba2f0d"
                    ]
                },
                {
                    "command": [
                        "apply add_commut.",
                        "VernacExtend",
                        "da322b7bed597f016f37917b132c2dd1b4d3fc9f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_shifted",
            "line_nb": 801,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite sub_add_opp.",
                        "VernacExtend",
                        "149aee86536ad4266b276b48c48fc771f09f2ae7"
                    ]
                },
                {
                    "command": [
                        "rewrite neg_add_distr.",
                        "VernacExtend",
                        "91b1c72b389a6b65a6eb24fff050918672e72465"
                    ]
                },
                {
                    "command": [
                        "rewrite add_assoc.",
                        "VernacExtend",
                        "ad3a5a815f5c731ca973b85c3a98fab1355860f5"
                    ]
                },
                {
                    "command": [
                        "rewrite (add_commut (neg y) (neg z)).",
                        "VernacExtend",
                        "84e6b10620f1afcada063f62fe34c68bf860def8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (add_assoc z).",
                        "VernacExtend",
                        "f43dab3c9725809b4fd5c8a9d967555d0b59a89e"
                    ]
                },
                {
                    "command": [
                        "rewrite add_neg_zero.",
                        "VernacExtend",
                        "bc17e0365887424af17c4b8e95587659e3aa0134"
                    ]
                },
                {
                    "command": [
                        "rewrite (add_commut zero).",
                        "VernacExtend",
                        "72f02c316388c0c55a886b943bb44156eba92648"
                    ]
                },
                {
                    "command": [
                        "rewrite add_zero.",
                        "VernacExtend",
                        "f974590c4d53784eabf879b1edac80b48dd263f7"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply sub_add_opp.",
                        "VernacExtend",
                        "2ba83e32d39523761f365f917dabeaac1b19c3be"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_signed",
            "line_nb": 814,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold sub.",
                        "VernacExtend",
                        "09a336a2b822859bc335120602ae265ad23b7a0d"
                    ]
                },
                {
                    "command": [
                        "apply eqm_samerepr.",
                        "VernacExtend",
                        "2226a5674ed5a7db984e878fdbb37775ca665295"
                    ]
                },
                {
                    "command": [
                        "apply eqm_sub; apply eqm_sym; apply eqm_signed_unsigned.",
                        "VernacExtend",
                        "25b2ea8d9a7354b7265779fbc0372ebb76f4832b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unsigned_sub_borrow",
            "line_nb": 820,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold sub, sub_borrow.",
                        "VernacExtend",
                        "d0054f2bf88f7559176573a4373382890373474a"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_zero.",
                        "VernacExtend",
                        "89956b9f461b9934c8fa99e6e63074f0275efcae"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.sub_0_r.",
                        "VernacExtend",
                        "7c1ebdca8a3d1d773bf152b4a568fe42ea3a288b"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_repr_eq.",
                        "VernacExtend",
                        "4cdb0c1f390fe84b3a9c8bac49c0b5813452743a"
                    ]
                },
                {
                    "command": [
                        "generalize (unsigned_range x) (unsigned_range y).",
                        "VernacExtend",
                        "a13a4ed3bded6153267e977896bcd2455187d557"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (unsigned x - unsigned y) 0).",
                        "VernacExtend",
                        "7437796774211d4015eec90dca106ee8ec98be2e"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_one.",
                        "VernacExtend",
                        "52f1cc9e4b7b0a3b7c37f5e9a1a6c514d4cb1683"
                    ]
                },
                {
                    "command": [
                        "apply Zmod_unique with (-1).",
                        "VernacExtend",
                        "9fbfa02026507947911435325d2aedbb9d4084b4"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_zero.",
                        "VernacExtend",
                        "89956b9f461b9934c8fa99e6e63074f0275efcae"
                    ]
                },
                {
                    "command": [
                        "apply Zmod_unique with 0.",
                        "VernacExtend",
                        "ac4928d6d5599fb111ed1b2a906c054db978f8ba"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_commut",
            "line_nb": 838,
            "steps": [
                {
                    "command": [
                        "intros; unfold mul.",
                        "VernacExtend",
                        "a4e488cb7271cb7368ec20c55b8e031180aaee4b"
                    ]
                },
                {
                    "command": [
                        "decEq.",
                        "VernacExtend",
                        "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_zero",
            "line_nb": 843,
            "steps": [
                {
                    "command": [
                        "intros; unfold mul.",
                        "VernacExtend",
                        "a4e488cb7271cb7368ec20c55b8e031180aaee4b"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_zero.",
                        "VernacExtend",
                        "89956b9f461b9934c8fa99e6e63074f0275efcae"
                    ]
                },
                {
                    "command": [
                        "unfold zero.",
                        "VernacExtend",
                        "1f909792743ffabee09dc445053cd7808033ff89"
                    ]
                },
                {
                    "command": [
                        "decEq.",
                        "VernacExtend",
                        "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_one",
            "line_nb": 850,
            "steps": [
                {
                    "command": [
                        "intros; unfold mul.",
                        "VernacExtend",
                        "a4e488cb7271cb7368ec20c55b8e031180aaee4b"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_one.",
                        "VernacExtend",
                        "52f1cc9e4b7b0a3b7c37f5e9a1a6c514d4cb1683"
                    ]
                },
                {
                    "command": [
                        "transitivity (repr (unsigned x)).",
                        "VernacExtend",
                        "ce2d78b728dff46d9f3a12cb6349e1d7b2305f1d"
                    ]
                },
                {
                    "command": [
                        "decEq.",
                        "VernacExtend",
                        "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "apply repr_unsigned.",
                        "VernacExtend",
                        "7033f895e7c0a699adb114621e89aafefb338576"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_mone",
            "line_nb": 858,
            "steps": [
                {
                    "command": [
                        "intros; unfold mul, neg.",
                        "VernacExtend",
                        "44ed779f320cc3a52126fbe75d118b5bf07f66f5"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_mone.",
                        "VernacExtend",
                        "8f638f66e0273f316077da6f32f87449b5bcaa54"
                    ]
                },
                {
                    "command": [
                        "apply eqm_samerepr.",
                        "VernacExtend",
                        "2226a5674ed5a7db984e878fdbb37775ca665295"
                    ]
                },
                {
                    "command": [
                        "replace (-unsigned x) with (0 - unsigned x) by omega.",
                        "VernacExtend",
                        "3ce4434542fc30fc9e2219b61d60a3df596874b8"
                    ]
                },
                {
                    "command": [
                        "replace (unsigned x * (modulus - 1)) with (unsigned x * modulus - unsigned x) by ring.",
                        "VernacExtend",
                        "40bd10540bf0b40dd4b2419f3a50b46effa7cfbd"
                    ]
                },
                {
                    "command": [
                        "apply eqm_sub.",
                        "VernacExtend",
                        "89203e9861d3d20e16db6ba55a6a41de8352f78f"
                    ]
                },
                {
                    "command": [
                        "exists (unsigned x).",
                        "VernacExtend",
                        "d268fa8cc6c7052dacadc9ac5bec43ac6d9d5a69"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply eqm_refl.",
                        "VernacExtend",
                        "cd38aceb6abd087396d34625c4f0ed69968a7526"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_assoc",
            "line_nb": 869,
            "steps": [
                {
                    "command": [
                        "intros; unfold mul.",
                        "VernacExtend",
                        "a4e488cb7271cb7368ec20c55b8e031180aaee4b"
                    ]
                },
                {
                    "command": [
                        "set (x' := unsigned x).",
                        "VernacExtend",
                        "37cea74d2fdd215da8906415651a9e10de7f9ca0"
                    ]
                },
                {
                    "command": [
                        "set (y' := unsigned y).",
                        "VernacExtend",
                        "65865d37b040a6ef65e92eeec0041c0908c91bed"
                    ]
                },
                {
                    "command": [
                        "set (z' := unsigned z).",
                        "VernacExtend",
                        "7c6d2d0828173c29360389a4a483a2210dd1d457"
                    ]
                },
                {
                    "command": [
                        "apply eqm_samerepr.",
                        "VernacExtend",
                        "2226a5674ed5a7db984e878fdbb37775ca665295"
                    ]
                },
                {
                    "command": [
                        "apply eqm_trans with ((x' * y') * z').",
                        "VernacExtend",
                        "93ae032d554f0f4e3ba770e675abcae8b1a31fb6"
                    ]
                },
                {
                    "command": [
                        "auto with ints.",
                        "VernacExtend",
                        "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z.mul_assoc.",
                        "VernacExtend",
                        "a482030af4b7eacc2f9923f251ef4410ebcc85f5"
                    ]
                },
                {
                    "command": [
                        "auto with ints.",
                        "VernacExtend",
                        "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_add_distr_l",
            "line_nb": 880,
            "steps": [
                {
                    "command": [
                        "intros; unfold mul, add.",
                        "VernacExtend",
                        "0ed4beb938ead78cb86e0955fc3c2708827adcc0"
                    ]
                },
                {
                    "command": [
                        "apply eqm_samerepr.",
                        "VernacExtend",
                        "2226a5674ed5a7db984e878fdbb37775ca665295"
                    ]
                },
                {
                    "command": [
                        "set (x' := unsigned x).",
                        "VernacExtend",
                        "37cea74d2fdd215da8906415651a9e10de7f9ca0"
                    ]
                },
                {
                    "command": [
                        "set (y' := unsigned y).",
                        "VernacExtend",
                        "65865d37b040a6ef65e92eeec0041c0908c91bed"
                    ]
                },
                {
                    "command": [
                        "set (z' := unsigned z).",
                        "VernacExtend",
                        "7c6d2d0828173c29360389a4a483a2210dd1d457"
                    ]
                },
                {
                    "command": [
                        "apply eqm_trans with ((x' + y') * z').",
                        "VernacExtend",
                        "3f964ebd9a76f05bd7ac9fc3575a8758d274a8e6"
                    ]
                },
                {
                    "command": [
                        "auto with ints.",
                        "VernacExtend",
                        "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
                    ]
                },
                {
                    "command": [
                        "replace ((x' + y') * z') with (x' * z' + y' * z').",
                        "VernacExtend",
                        "4aadd2f445f785b027625e8f7674b4cbb259e360"
                    ]
                },
                {
                    "command": [
                        "auto with ints.",
                        "VernacExtend",
                        "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_add_distr_r",
            "line_nb": 892,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_commut.",
                        "VernacExtend",
                        "7e479a6cc087b15b3e77ca62eef65a115285e229"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_add_distr_l.",
                        "VernacExtend",
                        "e4ac6ea58660fa7c7e3913cfb5ed0ac39d3e2082"
                    ]
                },
                {
                    "command": [
                        "decEq; apply mul_commut.",
                        "VernacExtend",
                        "fe10d83ac80ee2a799fda1b8902a4525db4e2ced"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "neg_mul_distr_l",
            "line_nb": 898,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold mul, neg.",
                        "VernacExtend",
                        "98632fc93ecb26a55461d5581c8bbf6d7c004b22"
                    ]
                },
                {
                    "command": [
                        "set (x' := unsigned x).",
                        "VernacExtend",
                        "37cea74d2fdd215da8906415651a9e10de7f9ca0"
                    ]
                },
                {
                    "command": [
                        "set (y' := unsigned y).",
                        "VernacExtend",
                        "65865d37b040a6ef65e92eeec0041c0908c91bed"
                    ]
                },
                {
                    "command": [
                        "apply eqm_samerepr.",
                        "VernacExtend",
                        "2226a5674ed5a7db984e878fdbb37775ca665295"
                    ]
                },
                {
                    "command": [
                        "apply eqm_trans with (- (x' * y')).",
                        "VernacExtend",
                        "ca784b5cf281ecd7847fb3ff71273fbb6241c863"
                    ]
                },
                {
                    "command": [
                        "auto with ints.",
                        "VernacExtend",
                        "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
                    ]
                },
                {
                    "command": [
                        "replace (- (x' * y')) with ((-x') * y') by ring.",
                        "VernacExtend",
                        "90d0578dd390eaf7b3f53d2ecd55cc68f3552113"
                    ]
                },
                {
                    "command": [
                        "auto with ints.",
                        "VernacExtend",
                        "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "neg_mul_distr_r",
            "line_nb": 909,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite (mul_commut x y).",
                        "VernacExtend",
                        "cc32d558350087835a54ad33a44536749dea8d29"
                    ]
                },
                {
                    "command": [
                        "rewrite (mul_commut x (neg y)).",
                        "VernacExtend",
                        "f614d2bca1d37714315c867aabc0d3b289497cca"
                    ]
                },
                {
                    "command": [
                        "apply neg_mul_distr_l.",
                        "VernacExtend",
                        "e21ff232fa438e516e7981c694a312fb1ca1317c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_signed",
            "line_nb": 915,
            "steps": [
                {
                    "command": [
                        "intros; unfold mul.",
                        "VernacExtend",
                        "a4e488cb7271cb7368ec20c55b8e031180aaee4b"
                    ]
                },
                {
                    "command": [
                        "apply eqm_samerepr.",
                        "VernacExtend",
                        "2226a5674ed5a7db984e878fdbb37775ca665295"
                    ]
                },
                {
                    "command": [
                        "apply eqm_mult; apply eqm_sym; apply eqm_signed_unsigned.",
                        "VernacExtend",
                        "c13b26832ce0f08e09c4831827e3eea979b4cc6e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modu_divu_Euclid",
            "line_nb": 920,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold add, mul, divu, modu.",
                        "VernacExtend",
                        "b9ac8da158260870816f5036697c0a0dfaa68558"
                    ]
                },
                {
                    "command": [
                        "transitivity (repr (unsigned x)).",
                        "VernacExtend",
                        "ce2d78b728dff46d9f3a12cb6349e1d7b2305f1d"
                    ]
                },
                {
                    "command": [
                        "auto with ints.",
                        "VernacExtend",
                        "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
                    ]
                },
                {
                    "command": [
                        "apply eqm_samerepr.",
                        "VernacExtend",
                        "2226a5674ed5a7db984e878fdbb37775ca665295"
                    ]
                },
                {
                    "command": [
                        "set (x' := unsigned x).",
                        "VernacExtend",
                        "37cea74d2fdd215da8906415651a9e10de7f9ca0"
                    ]
                },
                {
                    "command": [
                        "set (y' := unsigned y).",
                        "VernacExtend",
                        "65865d37b040a6ef65e92eeec0041c0908c91bed"
                    ]
                },
                {
                    "command": [
                        "apply eqm_trans with ((x' / y') * y' + x' mod y').",
                        "VernacExtend",
                        "87ff0a8865c75084122c64620c81d2e37428577f"
                    ]
                },
                {
                    "command": [
                        "apply eqm_refl2.",
                        "VernacExtend",
                        "4f34bea58d6e093ed169579de033c7f5d73e929b"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.mul_comm.",
                        "VernacExtend",
                        "088699fe7f894ededd3c93ab3a27f9d105f1ab84"
                    ]
                },
                {
                    "command": [
                        "apply Z_div_mod_eq.",
                        "VernacExtend",
                        "c7c7b8c0b3f502009e6f882787bdcc803640e476"
                    ]
                },
                {
                    "command": [
                        "generalize (unsigned_range y); intro.",
                        "VernacExtend",
                        "acc467580631678b6b6a62ca1e466b1dfe000857"
                    ]
                },
                {
                    "command": [
                        "assert (unsigned y <> 0).",
                        "VernacExtend",
                        "7eb23e1291bcb004b04f8f402ebd36124aee931b"
                    ]
                },
                {
                    "command": [
                        "red; intro.",
                        "VernacExtend",
                        "12e00b6ab6f8834b6f81959ca42843abaa311f37"
                    ]
                },
                {
                    "command": [
                        "elim H.",
                        "VernacExtend",
                        "853aa440c3a3810be05f0f87d0e688c05b92253d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (repr_unsigned y).",
                        "VernacExtend",
                        "140fc635f53509ca75abf324c73c2a5f03133e74"
                    ]
                },
                {
                    "command": [
                        "unfold zero.",
                        "VernacExtend",
                        "1f909792743ffabee09dc445053cd7808033ff89"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "unfold y'.",
                        "VernacExtend",
                        "ec58d62b3625cce4cac0a816e6c7b98cf405b83a"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "auto with ints.",
                        "VernacExtend",
                        "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modu_divu",
            "line_nb": 943,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (forall a b c, a = add b c -> c = sub a b).",
                        "VernacExtend",
                        "89e49325b7239ba7a5edff6fe14ba7c9cce77a3b"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "subst a.",
                        "VernacExtend",
                        "d7670e5f9c196bd417b16b29da3532f33d34884d"
                    ]
                },
                {
                    "command": [
                        "rewrite sub_add_l.",
                        "VernacExtend",
                        "b85e13497290d8a5e632989cf312f50e4a7ca326"
                    ]
                },
                {
                    "command": [
                        "rewrite sub_idem.",
                        "VernacExtend",
                        "74b97c28b775af06a38fa8c8173c0bac7b76d296"
                    ]
                },
                {
                    "command": [
                        "rewrite add_commut.",
                        "VernacExtend",
                        "e75b7ced8dcae7a5a7e30f10878b5dbc00bb9021"
                    ]
                },
                {
                    "command": [
                        "rewrite add_zero.",
                        "VernacExtend",
                        "f974590c4d53784eabf879b1edac80b48dd263f7"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "apply modu_divu_Euclid.",
                        "VernacExtend",
                        "0c5d8996718e21dd3001c1d859e3299283ccbd2d"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mods_divs_Euclid",
            "line_nb": 957,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold add, mul, divs, mods.",
                        "VernacExtend",
                        "223b4b59834dde6e2fa5e8dc59eaf6fd6561eb76"
                    ]
                },
                {
                    "command": [
                        "transitivity (repr (signed x)).",
                        "VernacExtend",
                        "292958cac404e280efd3ede006a6b4b41b5e68bd"
                    ]
                },
                {
                    "command": [
                        "auto with ints.",
                        "VernacExtend",
                        "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
                    ]
                },
                {
                    "command": [
                        "apply eqm_samerepr.",
                        "VernacExtend",
                        "2226a5674ed5a7db984e878fdbb37775ca665295"
                    ]
                },
                {
                    "command": [
                        "set (x' := signed x).",
                        "VernacExtend",
                        "53d50f0951153ffc978b297a1056035a34452ad0"
                    ]
                },
                {
                    "command": [
                        "set (y' := signed y).",
                        "VernacExtend",
                        "a8365377390de7d7f78ba84eae39d40b5cd092ce"
                    ]
                },
                {
                    "command": [
                        "apply eqm_trans with ((Z.quot x' y') * y' + Z.rem x' y').",
                        "VernacExtend",
                        "35fafacb4c9a0e1b4426c0acbe15eca51f84db1a"
                    ]
                },
                {
                    "command": [
                        "apply eqm_refl2.",
                        "VernacExtend",
                        "4f34bea58d6e093ed169579de033c7f5d73e929b"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.mul_comm.",
                        "VernacExtend",
                        "088699fe7f894ededd3c93ab3a27f9d105f1ab84"
                    ]
                },
                {
                    "command": [
                        "apply Z.quot_rem'.",
                        "VernacExtend",
                        "41ef6273884c78048453985ebebb4b55a25bcaaf"
                    ]
                },
                {
                    "command": [
                        "apply eqm_add; auto with ints.",
                        "VernacExtend",
                        "af5726510e5682d3c82760011803c0892c36d2cc"
                    ]
                },
                {
                    "command": [
                        "apply eqm_unsigned_repr_r.",
                        "VernacExtend",
                        "0911e24b4d5bf4d1fa1c42c2b6b4303c14b2d0db"
                    ]
                },
                {
                    "command": [
                        "apply eqm_mult; auto with ints.",
                        "VernacExtend",
                        "f9048979ffe21f789d37b97a35a74a9a377a30a1"
                    ]
                },
                {
                    "command": [
                        "unfold y'.",
                        "VernacExtend",
                        "ec58d62b3625cce4cac0a816e6c7b98cf405b83a"
                    ]
                },
                {
                    "command": [
                        "apply eqm_signed_unsigned.",
                        "VernacExtend",
                        "d8614df8b73ff309ccafc1b69753d7e1944f658e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mods_divs",
            "line_nb": 975,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (forall a b c, a = add b c -> c = sub a b).",
                        "VernacExtend",
                        "89e49325b7239ba7a5edff6fe14ba7c9cce77a3b"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "subst a.",
                        "VernacExtend",
                        "d7670e5f9c196bd417b16b29da3532f33d34884d"
                    ]
                },
                {
                    "command": [
                        "rewrite sub_add_l.",
                        "VernacExtend",
                        "b85e13497290d8a5e632989cf312f50e4a7ca326"
                    ]
                },
                {
                    "command": [
                        "rewrite sub_idem.",
                        "VernacExtend",
                        "74b97c28b775af06a38fa8c8173c0bac7b76d296"
                    ]
                },
                {
                    "command": [
                        "rewrite add_commut.",
                        "VernacExtend",
                        "e75b7ced8dcae7a5a7e30f10878b5dbc00bb9021"
                    ]
                },
                {
                    "command": [
                        "rewrite add_zero.",
                        "VernacExtend",
                        "f974590c4d53784eabf879b1edac80b48dd263f7"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply mods_divs_Euclid.",
                        "VernacExtend",
                        "3d9bd190114768ea32650a9997521c2596ac3e11"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divu_one",
            "line_nb": 988,
            "steps": [
                {
                    "command": [
                        "unfold divu; intros.",
                        "VernacExtend",
                        "aa54a1152a916081452c83f5d6869c2ac9f3f331"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_one.",
                        "VernacExtend",
                        "52f1cc9e4b7b0a3b7c37f5e9a1a6c514d4cb1683"
                    ]
                },
                {
                    "command": [
                        "rewrite Zdiv_1_r.",
                        "VernacExtend",
                        "fb519c27d201f0568a21677dcf3ac2ffedb61d8b"
                    ]
                },
                {
                    "command": [
                        "apply repr_unsigned.",
                        "VernacExtend",
                        "7033f895e7c0a699adb114621e89aafefb338576"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divs_one",
            "line_nb": 994,
            "steps": [
                {
                    "command": [
                        "unfold divs; intros.",
                        "VernacExtend",
                        "e2d9b969ef4a149090f8a79e0cabd382baf71432"
                    ]
                },
                {
                    "command": [
                        "rewrite signed_one.",
                        "VernacExtend",
                        "3ac458e0e12ef77b3ca6c2bd665e5e200ef6f5df"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.quot_1_r.",
                        "VernacExtend",
                        "c76da0aed8ddf96c7b8f42a8b078eebcda3031e0"
                    ]
                },
                {
                    "command": [
                        "apply repr_signed.",
                        "VernacExtend",
                        "6ac037f1d42a8ffc7ffc97da2226a128bb137982"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modu_one",
            "line_nb": 1001,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite modu_divu.",
                        "VernacExtend",
                        "58c71cace382cfd202b9b2d74e714aed6e8558dc"
                    ]
                },
                {
                    "command": [
                        "rewrite divu_one.",
                        "VernacExtend",
                        "20073d1db8c5647570bac2e449a32ca9ca3138c4"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_one.",
                        "VernacExtend",
                        "48e185ca99d9fb7850b9fee25eb6e9a16ab7f505"
                    ]
                },
                {
                    "command": [
                        "apply sub_idem.",
                        "VernacExtend",
                        "0d351e2ff3a0e2f9a517ac22afc7233dc23f5d18"
                    ]
                },
                {
                    "command": [
                        "apply one_not_zero.",
                        "VernacExtend",
                        "3100bf57338f28e8a19aae3a83d8631989ffd4d8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divs_mone",
            "line_nb": 1009,
            "steps": [
                {
                    "command": [
                        "unfold divs, neg; intros.",
                        "VernacExtend",
                        "fd5a5a7ac5b0d3b9be4eab06215cb52d99a2abea"
                    ]
                },
                {
                    "command": [
                        "rewrite signed_mone.",
                        "VernacExtend",
                        "ebd25e8871ab72127eab3ffa5449c8f2c24396e5"
                    ]
                },
                {
                    "command": [
                        "replace (Z.quot (signed x) (-1)) with (- (signed x)).",
                        "VernacExtend",
                        "48a14c60aa8f8337721ec838fd3d6dc39a5774b8"
                    ]
                },
                {
                    "command": [
                        "apply eqm_samerepr.",
                        "VernacExtend",
                        "2226a5674ed5a7db984e878fdbb37775ca665295"
                    ]
                },
                {
                    "command": [
                        "apply eqm_neg.",
                        "VernacExtend",
                        "ae34228661aadfb504fadb20b3fc83a007c4c27d"
                    ]
                },
                {
                    "command": [
                        "apply eqm_signed_unsigned.",
                        "VernacExtend",
                        "d8614df8b73ff309ccafc1b69753d7e1944f658e"
                    ]
                },
                {
                    "command": [
                        "set (x' := signed x).",
                        "VernacExtend",
                        "53d50f0951153ffc978b297a1056035a34452ad0"
                    ]
                },
                {
                    "command": [
                        "set (one := 1).",
                        "VernacExtend",
                        "da822c5bf427173821a13a6033efb8489c6fa149"
                    ]
                },
                {
                    "command": [
                        "change (-1) with (- one).",
                        "VernacExtend",
                        "1265198340d48e214f3daab81928ac349be8b043"
                    ]
                },
                {
                    "command": [
                        "rewrite Zquot_opp_r.",
                        "VernacExtend",
                        "93837ed5e2413080a14343fa4bf8ff71e114b73f"
                    ]
                },
                {
                    "command": [
                        "assert (Z.quot x' one = x').",
                        "VernacExtend",
                        "6785d878ddbbc9e65952a1278a9f20165eeaac89"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply Zquot_unique_full with 0.",
                        "VernacExtend",
                        "251da33267a2c2890c6e8004f6351491b240e4d9"
                    ]
                },
                {
                    "command": [
                        "red.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "change (Z.abs one) with 1.",
                        "VernacExtend",
                        "40b770f2249f21868f64babb5396655a19da160f"
                    ]
                },
                {
                    "command": [
                        "destruct (zle 0 x').",
                        "VernacExtend",
                        "d196d619763c2f9f58803c38b9f4154389395c97"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "unfold one; ring.",
                        "VernacExtend",
                        "0bb9674ab779679dc75f8e7b7fea6e5c3ee85579"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mods_mone",
            "line_nb": 1033,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite mods_divs.",
                        "VernacExtend",
                        "ade74b2f92c656c0046b7cafa3fd46094e2a51e9"
                    ]
                },
                {
                    "command": [
                        "rewrite divs_mone.",
                        "VernacExtend",
                        "673494c4e456a66aca581bd26af34c35cbf6ab3c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- neg_mul_distr_l.",
                        "VernacExtend",
                        "2866b46dfa2e545c01732f68e43bd4c2845aadd1"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_mone.",
                        "VernacExtend",
                        "c243e273fbb1c9b7f871b82b3db1d1007eb6ebaa"
                    ]
                },
                {
                    "command": [
                        "rewrite neg_involutive.",
                        "VernacExtend",
                        "63864e7afd1a4982181db692d2a381617a2847bd"
                    ]
                },
                {
                    "command": [
                        "apply sub_idem.",
                        "VernacExtend",
                        "0d351e2ff3a0e2f9a517ac22afc7233dc23f5d18"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divmodu2_divu_modu",
            "line_nb": 1042,
            "steps": [
                {
                    "command": [
                        "unfold divmodu2, divu, modu; intros.",
                        "VernacExtend",
                        "a46a846ff530b805b7ef8de4c67dd4bef821c171"
                    ]
                },
                {
                    "command": [
                        "rewrite dec_eq_false by auto.",
                        "VernacExtend",
                        "f5dc8547351522152203c19172932504558d6fd2"
                    ]
                },
                {
                    "command": [
                        "set (N := unsigned zero * modulus + unsigned n).",
                        "VernacExtend",
                        "c6ccb9d647974a5e8f52da0779524db2f816ef57"
                    ]
                },
                {
                    "command": [
                        "assert (E1: unsigned n = N) by (unfold N; rewrite unsigned_zero; ring).",
                        "VernacExtend",
                        "6a3af5b738f11a879fc861c0718ff8ecdd77d623"
                    ]
                },
                {
                    "command": [
                        "rewrite ! E1.",
                        "VernacExtend",
                        "7c15806735ddac9675a6e3575f32cc74240f8752"
                    ]
                },
                {
                    "command": [
                        "set (D := unsigned d).",
                        "VernacExtend",
                        "349a7c331ce171a8827fef0f23dd41c9f47bf399"
                    ]
                },
                {
                    "command": [
                        "set (Q := N / D); set (R := N mod D).",
                        "VernacExtend",
                        "19aa9bae49e24f6d2978613b0f01f4cda3d0b4e2"
                    ]
                },
                {
                    "command": [
                        "assert (E2: Z.div_eucl N D = (Q, R)).",
                        "VernacExtend",
                        "1a992fd8a7b34873a28a24346dde07f4fe910dd3"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold Q, R, Z.div, Z.modulo.",
                        "VernacExtend",
                        "1a386d1d7dc9914e30db8fdaab86817132cf0604"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.div_eucl N D); auto.",
                        "VernacExtend",
                        "a4bafbfec12f564cc55f4c7fef5640160df9b33e"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite E2.",
                        "VernacExtend",
                        "c1992017a1964997678a075d895ea663dab1c9df"
                    ]
                },
                {
                    "command": [
                        "rewrite zle_true.",
                        "VernacExtend",
                        "94e9a30da73a2701b50d8a453621de40d8280f0d"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "assert (unsigned d <> 0).",
                        "VernacExtend",
                        "7f49aacce6f05ec33260e0cf3c804552675186fb"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "elim H.",
                        "VernacExtend",
                        "853aa440c3a3810be05f0f87d0e688c05b92253d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (repr_unsigned d).",
                        "VernacExtend",
                        "3e4a2b31404d71a7a4d25ac99bb9e6dcf6878a12"
                    ]
                },
                {
                    "command": [
                        "rewrite H0; auto.",
                        "VernacExtend",
                        "48df2b0b453adadcea8e6914bccb68bfc33b286b"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (0 < D).",
                        "VernacExtend",
                        "45de28e32202ffc79d3c593eb70bb284497adac5"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold D.",
                        "VernacExtend",
                        "e0920de6e8552a2bfd7f383ec48f8d977317de3f"
                    ]
                },
                {
                    "command": [
                        "generalize (unsigned_range d); intros.",
                        "VernacExtend",
                        "4f94435ac2fb1b70c8fec320ad1376701e53556b"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (0 <= Q <= max_unsigned).",
                        "VernacExtend",
                        "a0a4c6aad53e2fcd0f1456e4486d289a02ddd348"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold Q.",
                        "VernacExtend",
                        "6c2775be9b30b714c0e0556611a6b2ec9d8bc723"
                    ]
                },
                {
                    "command": [
                        "apply Zdiv_interval_2.",
                        "VernacExtend",
                        "a54cd5bca005ddf7f7f89e67c7214cc705fff803"
                    ]
                },
                {
                    "command": [
                        "rewrite <- E1; apply unsigned_range_2.",
                        "VernacExtend",
                        "bbc14025d51de9f4ab7c0188b21fffbd0ef49ffc"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "unfold max_unsigned; generalize modulus_pos; omega.",
                        "VernacExtend",
                        "0cb1fdaae338ba0b2f8350108ff04cf80d916b62"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unsigned_signed",
            "line_nb": 1082,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold lt.",
                        "VernacExtend",
                        "2e821d407c03d5f5e572c51453fdc618d9dec364"
                    ]
                },
                {
                    "command": [
                        "rewrite signed_zero.",
                        "VernacExtend",
                        "19d56ca0cd36da40c29724bb93cb20d76340e45c"
                    ]
                },
                {
                    "command": [
                        "unfold signed.",
                        "VernacExtend",
                        "f99b13683b7fbccb713276bdf12a56c47fabc924"
                    ]
                },
                {
                    "command": [
                        "generalize (unsigned_range n).",
                        "VernacExtend",
                        "77276e8d47ba9f08799db8adaa6c1dc06db092fe"
                    ]
                },
                {
                    "command": [
                        "rewrite half_modulus_modulus.",
                        "VernacExtend",
                        "4f1be9507367745c91dc7a8dae1c9475380b67ad"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (unsigned n) half_modulus).",
                        "VernacExtend",
                        "4f616861fda3d30f1f721ca1f8db92a377979afa"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false by omega.",
                        "VernacExtend",
                        "1a3d93f438781af1cb3b43101336d435afaef9a1"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true by omega.",
                        "VernacExtend",
                        "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divmods2_divs_mods",
            "line_nb": 1098,
            "steps": [
                {
                    "command": [
                        "unfold divmods2, divs, mods; intros.",
                        "VernacExtend",
                        "855314c06c37c28abae9054949c92b1308c11b46"
                    ]
                },
                {
                    "command": [
                        "rewrite dec_eq_false by auto.",
                        "VernacExtend",
                        "f5dc8547351522152203c19172932504558d6fd2"
                    ]
                },
                {
                    "command": [
                        "set (N := signed (if lt n zero then mone else zero) * modulus + unsigned n).",
                        "VernacExtend",
                        "983d548847f6398093f0ee0552bc68a088d07c08"
                    ]
                },
                {
                    "command": [
                        "set (D := signed d).",
                        "VernacExtend",
                        "d4bef3fea3ceed627442415b08a9afb17207175a"
                    ]
                },
                {
                    "command": [
                        "assert (D <> 0).",
                        "VernacExtend",
                        "d246a55cdb539b19f1824393621962f1140e27c3"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold D; red; intros.",
                        "VernacExtend",
                        "8156990d2438353f473c86b9995653ee0ee4656b"
                    ]
                },
                {
                    "command": [
                        "elim H.",
                        "VernacExtend",
                        "853aa440c3a3810be05f0f87d0e688c05b92253d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (repr_signed d).",
                        "VernacExtend",
                        "22435d6a60576c362f29d9f7d405062511fcb043"
                    ]
                },
                {
                    "command": [
                        "rewrite H1; auto.",
                        "VernacExtend",
                        "1413124b63144a92c2b8c7e916995d6cd3746a77"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (N = signed n).",
                        "VernacExtend",
                        "7ded32ef303488312af34246ed138c9da129e809"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold N.",
                        "VernacExtend",
                        "e84969bf3a012f2b02bd8ab89f79f6e0b53e6b71"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_signed.",
                        "VernacExtend",
                        "5785d0e29295410e6a8f0172f16ea665304a5d30"
                    ]
                },
                {
                    "command": [
                        "destruct (lt n zero).",
                        "VernacExtend",
                        "3169d6716b29a69971843e278b2bc655fc2bc8e9"
                    ]
                },
                {
                    "command": [
                        "rewrite signed_mone.",
                        "VernacExtend",
                        "ebd25e8871ab72127eab3ffa5449c8f2c24396e5"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "rewrite signed_zero.",
                        "VernacExtend",
                        "19d56ca0cd36da40c29724bb93cb20d76340e45c"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "set (Q := Z.quot N D); set (R := Z.rem N D).",
                        "VernacExtend",
                        "50b753f8b2ab300f090aa2ae782820f2f3a38bfd"
                    ]
                },
                {
                    "command": [
                        "assert (E2: Z.quotrem N D = (Q, R)).",
                        "VernacExtend",
                        "5972c2ddfaf55cd3c28ffde114f45fe366e9c4ba"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold Q, R, Z.quot, Z.rem.",
                        "VernacExtend",
                        "f71cf502a01f63b83e5566dc191cd4e3bb4417f9"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.quotrem N D); auto.",
                        "VernacExtend",
                        "2ca84272ce4a5dfd79febecdb4d4bc1acf90904f"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite E2.",
                        "VernacExtend",
                        "c1992017a1964997678a075d895ea663dab1c9df"
                    ]
                },
                {
                    "command": [
                        "assert (min_signed <= N <= max_signed) by (rewrite H2; apply signed_range).",
                        "VernacExtend",
                        "a6843e4c4ce4b1a135e02db5e0e22a3ef48ccd29"
                    ]
                },
                {
                    "command": [
                        "assert (min_signed <= Q <= max_signed).",
                        "VernacExtend",
                        "5ffd82eac879134124b29bb04dbd44b4859a7a1d"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold Q.",
                        "VernacExtend",
                        "6c2775be9b30b714c0e0556611a6b2ec9d8bc723"
                    ]
                },
                {
                    "command": [
                        "destruct (zeq D 1); [ | destruct (zeq D (-1))].",
                        "VernacExtend",
                        "b643c4c60ee73011bfc9cc6191d2e1cbff57382d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite e.",
                        "VernacExtend",
                        "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.quot_1_r; auto.",
                        "VernacExtend",
                        "124df3d08592e326390786a9f22a99de559c6a08"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite e.",
                        "VernacExtend",
                        "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
                    ]
                },
                {
                    "command": [
                        "change (-1) with (Z.opp 1).",
                        "VernacExtend",
                        "79a621415cfebbed6fdd8d98025fe348b61290f3"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.quot_opp_r by omega.",
                        "VernacExtend",
                        "7c159c3e7ffe697a8092230a08143903917271f8"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.quot_1_r.",
                        "VernacExtend",
                        "c76da0aed8ddf96c7b8f42a8b078eebcda3031e0"
                    ]
                },
                {
                    "command": [
                        "assert (N <> min_signed).",
                        "VernacExtend",
                        "2e7e44d79f7dbdcf2e2bdb7bbab35fe33a8e46c8"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "red; intros; destruct H0.",
                        "VernacExtend",
                        "45b8835d63d59ca8b9d0b7cb923a193850c8f35e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "elim H0.",
                        "VernacExtend",
                        "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (repr_signed n).",
                        "VernacExtend",
                        "fac73cfb7dcab5f77204115cdc865ca3f9f89895"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H2.",
                        "VernacExtend",
                        "c204509e5e85cb1396c425732210ff127ac38a7b"
                    ]
                },
                {
                    "command": [
                        "rewrite H4.",
                        "VernacExtend",
                        "fc5d011df68f7160e4669d129d2975825ac089bb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "elim H0.",
                        "VernacExtend",
                        "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (repr_signed d).",
                        "VernacExtend",
                        "22435d6a60576c362f29d9f7d405062511fcb043"
                    ]
                },
                {
                    "command": [
                        "unfold D in e; rewrite e; auto.",
                        "VernacExtend",
                        "9db67c615319e408fe0c67fe608bf58962284fa1"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "unfold min_signed, max_signed in *.",
                        "VernacExtend",
                        "0a5ce9383c7eaa014ad10d6332461beadea6480f"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assert (Z.abs (Z.quot N D) < half_modulus).",
                        "VernacExtend",
                        "eb6fa6b7fd68fa936e4d8a31c0126640b00c43bb"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z.quot_abs by omega.",
                        "VernacExtend",
                        "e0d74c17ddf5b5e0689688342a2c22a78e5d0c51"
                    ]
                },
                {
                    "command": [
                        "apply Zquot_lt_upper_bound.",
                        "VernacExtend",
                        "61bd27888dedc0fb19e3d5515e7f6c824b82182f"
                    ]
                },
                {
                    "command": [
                        "xomega.",
                        "VernacExtend",
                        "92dc13ff6a078243e0cd72420247996d076ca43b"
                    ]
                },
                {
                    "command": [
                        "xomega.",
                        "VernacExtend",
                        "92dc13ff6a078243e0cd72420247996d076ca43b"
                    ]
                },
                {
                    "command": [
                        "apply Z.le_lt_trans with (half_modulus * 1).",
                        "VernacExtend",
                        "f0abcf99933ed05770e4a006b1cf30504b1d3691"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.mul_1_r.",
                        "VernacExtend",
                        "80f92f5dcc09db388a2087f0ef3ff1d16ecdfdff"
                    ]
                },
                {
                    "command": [
                        "unfold min_signed, max_signed in H3; xomega.",
                        "VernacExtend",
                        "51dd6fcf44a120937627518124c438470689977e"
                    ]
                },
                {
                    "command": [
                        "apply Zmult_lt_compat_l.",
                        "VernacExtend",
                        "7a9d6f1e8ff69171598695489216bd3111dec834"
                    ]
                },
                {
                    "command": [
                        "generalize half_modulus_pos; omega.",
                        "VernacExtend",
                        "84349a0a8d7cb036146828c241fa5c72249fbb54"
                    ]
                },
                {
                    "command": [
                        "xomega.",
                        "VernacExtend",
                        "92dc13ff6a078243e0cd72420247996d076ca43b"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.abs_lt in H4.",
                        "VernacExtend",
                        "c62ecfb6aee4a96ab6c08c3a02a7a967e5057727"
                    ]
                },
                {
                    "command": [
                        "unfold min_signed, max_signed; omega.",
                        "VernacExtend",
                        "8a2751f9f2b8d684e1e27f3060479ed0bde88d25"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "unfold proj_sumbool; rewrite ! zle_true by omega; simpl.",
                        "VernacExtend",
                        "c81e0facfa6fa059f56fafd0d13d4adf9080c2b6"
                    ]
                },
                {
                    "command": [
                        "unfold Q, R; rewrite H2; auto.",
                        "VernacExtend",
                        "909f68589edf0e37fe525864b71ec4b09a23cbf3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ztestbit_1",
            "line_nb": 1178,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct n; simpl; auto.",
                        "VernacExtend",
                        "1e3544c1db38cf9d3b82500db7d90f24bce9aeea"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ztestbit_m1",
            "line_nb": 1182,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct n; simpl; auto.",
                        "VernacExtend",
                        "1e3544c1db38cf9d3b82500db7d90f24bce9aeea"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zshiftin_spec",
            "line_nb": 1186,
            "steps": [
                {
                    "command": [
                        "unfold Zshiftin; intros.",
                        "VernacExtend",
                        "8544381b1609b993aa2799f33ce9a2c47da8df30"
                    ]
                },
                {
                    "command": [
                        "destruct b.",
                        "VernacExtend",
                        "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.succ_double_spec.",
                        "VernacExtend",
                        "8bc2717e7923d84312ac9000dbbbd737baebc29b"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.double_spec.",
                        "VernacExtend",
                        "91dfab94a8e039994fe27000daabec42e7754785"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zshiftin_inj",
            "line_nb": 1196,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite !Zshiftin_spec in H.",
                        "VernacExtend",
                        "97353c2d1078e053bf20417b9ca84cea27ec0eab"
                    ]
                },
                {
                    "command": [
                        "destruct b1; destruct b2.",
                        "VernacExtend",
                        "b3859bae3bf0f946802f03471131138b3d63cb98"
                    ]
                },
                {
                    "command": [
                        "split; [auto|omega].",
                        "VernacExtend",
                        "dc8969f22da5bb8c94f02904ce1e1da8478b5f66"
                    ]
                },
                {
                    "command": [
                        "omegaContradiction.",
                        "VernacExtend",
                        "329a0d87fada76e54a403fa49705e937670711cd"
                    ]
                },
                {
                    "command": [
                        "omegaContradiction.",
                        "VernacExtend",
                        "329a0d87fada76e54a403fa49705e937670711cd"
                    ]
                },
                {
                    "command": [
                        "split; [auto|omega].",
                        "VernacExtend",
                        "dc8969f22da5bb8c94f02904ce1e1da8478b5f66"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zdecomp",
            "line_nb": 1205,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct x; simpl.",
                        "VernacExtend",
                        "b0c3c03e2d0a8fa13c533c8a79c2c6b3067d60db"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct p; auto.",
                        "VernacExtend",
                        "94280b3a49c08b76852fac1fca3c7461587f918a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct p; auto.",
                        "VernacExtend",
                        "94280b3a49c08b76852fac1fca3c7461587f918a"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Pos.pred_double_succ.",
                        "VernacExtend",
                        "eaa8aac3ead417b3d8bde9615ec8b2f7ed32bfba"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ztestbit_shiftin",
            "line_nb": 1218,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite Zshiftin_spec.",
                        "VernacExtend",
                        "d6761270d320e65edf1ff35092908241b44e627f"
                    ]
                },
                {
                    "command": [
                        "destruct (zeq n 0).",
                        "VernacExtend",
                        "4176a7e0059dea26cced6a60ea81dc6dae3cc010"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "subst n.",
                        "VernacExtend",
                        "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
                    ]
                },
                {
                    "command": [
                        "destruct b.",
                        "VernacExtend",
                        "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply Z.testbit_odd_0.",
                        "VernacExtend",
                        "914938ff3d17529b407d0f89f6249dcc64394521"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.add_0_r.",
                        "VernacExtend",
                        "06ae07741c51588ad5058ce812450f10227d7b7a"
                    ]
                },
                {
                    "command": [
                        "apply Z.testbit_even_0.",
                        "VernacExtend",
                        "0703c1d02304c29ff831a8b1f74f535be85e71cc"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assert (0 <= Z.pred n) by omega.",
                        "VernacExtend",
                        "26aedd200ad01505ce6d403ee6bf6aeac4254287"
                    ]
                },
                {
                    "command": [
                        "set (n' := Z.pred n) in *.",
                        "VernacExtend",
                        "538fc31a2f22408950236bd28987287677dd7f09"
                    ]
                },
                {
                    "command": [
                        "replace n with (Z.succ n') by (unfold n'; omega).",
                        "VernacExtend",
                        "1642b122fc402c22215d8d9dc633d57ff6bcdaf9"
                    ]
                },
                {
                    "command": [
                        "destruct b.",
                        "VernacExtend",
                        "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply Z.testbit_odd_succ; auto.",
                        "VernacExtend",
                        "e90b9c6f5d8df36d3599bbada4535bdc369a4166"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.add_0_r.",
                        "VernacExtend",
                        "06ae07741c51588ad5058ce812450f10227d7b7a"
                    ]
                },
                {
                    "command": [
                        "apply Z.testbit_even_succ; auto.",
                        "VernacExtend",
                        "f4cc1b4eb6ecd947099b950c069ff94c308927cb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ztestbit_shiftin_base",
            "line_nb": 1241,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztestbit_shiftin.",
                        "VernacExtend",
                        "4566040421bf5d63fd1949bb270b1f6e45af96d4"
                    ]
                },
                {
                    "command": [
                        "apply zeq_true.",
                        "VernacExtend",
                        "af0121a2373c6f0f0aecd87040e8474a45a41dff"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ztestbit_shiftin_succ",
            "line_nb": 1247,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztestbit_shiftin.",
                        "VernacExtend",
                        "4566040421bf5d63fd1949bb270b1f6e45af96d4"
                    ]
                },
                {
                    "command": [
                        "rewrite zeq_false.",
                        "VernacExtend",
                        "dab8f9109b7a6d08485a19d2b305200449ea8478"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.pred_succ.",
                        "VernacExtend",
                        "fd019b24c7f66d66d1631141e017af69d900e942"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ztestbit_eq",
            "line_nb": 1256,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite (Zdecomp x) at 1.",
                        "VernacExtend",
                        "32c4e2329c7c883af7bbd3331c351c95956ae68c"
                    ]
                },
                {
                    "command": [
                        "apply Ztestbit_shiftin; auto.",
                        "VernacExtend",
                        "ad66a91ab1f2a2a8e540b4b2512938cc02e9f3ec"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ztestbit_base",
            "line_nb": 1261,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztestbit_eq.",
                        "VernacExtend",
                        "cc27e9791667c9a7f1466faf67869f938d5d405a"
                    ]
                },
                {
                    "command": [
                        "apply zeq_true.",
                        "VernacExtend",
                        "af0121a2373c6f0f0aecd87040e8474a45a41dff"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ztestbit_succ",
            "line_nb": 1267,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztestbit_eq.",
                        "VernacExtend",
                        "cc27e9791667c9a7f1466faf67869f938d5d405a"
                    ]
                },
                {
                    "command": [
                        "rewrite zeq_false.",
                        "VernacExtend",
                        "dab8f9109b7a6d08485a19d2b305200449ea8478"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.pred_succ.",
                        "VernacExtend",
                        "fd019b24c7f66d66d1631141e017af69d900e942"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqmod_same_bits",
            "line_nb": 1276,
            "steps": [
                {
                    "command": [
                        "induction n; intros.",
                        "VernacExtend",
                        "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "change (two_power_nat 0) with 1.",
                        "VernacExtend",
                        "c7f4c4b58f57dade691379376039997baa8fd90e"
                    ]
                },
                {
                    "command": [
                        "exists (x-y); ring.",
                        "VernacExtend",
                        "7d8b9cbc7e6e484ca3ebec520a9932e67e664f45"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite two_power_nat_S.",
                        "VernacExtend",
                        "a9744f6bd9a8fe7c31c0f7154478ac3b90a12f1b"
                    ]
                },
                {
                    "command": [
                        "assert (eqmod (two_power_nat n) (Z.div2 x) (Z.div2 y)).",
                        "VernacExtend",
                        "d9c84834a1b76ffd29d987cfaba13f526a354d14"
                    ]
                },
                {
                    "command": [
                        "apply IHn.",
                        "VernacExtend",
                        "1c9414f4f052b2727ca012553a4a3a2a0fc85649"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- !Ztestbit_succ.",
                        "VernacExtend",
                        "837309136a16d510349c7f9f91a790c3158eaa53"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat2Z.inj_succ; omega.",
                        "VernacExtend",
                        "138dc6550f8c1f2984d228a98db031923f5c7ba4"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as [k EQ].",
                        "VernacExtend",
                        "4ee66c3dbfb8b5efbe1d25a135d60a6ce584ed94"
                    ]
                },
                {
                    "command": [
                        "exists k.",
                        "VernacExtend",
                        "5bd085ef2f3e8bbd4bde88ae4ddb2fb4c72df1a9"
                    ]
                },
                {
                    "command": [
                        "rewrite (Zdecomp x).",
                        "VernacExtend",
                        "bbfaec973e49a865a8697e2aa301fde6a3b455ac"
                    ]
                },
                {
                    "command": [
                        "rewrite (Zdecomp y).",
                        "VernacExtend",
                        "d9dc0f01b3227e515daffe768a019322b861608a"
                    ]
                },
                {
                    "command": [
                        "replace (Z.odd y) with (Z.odd x).",
                        "VernacExtend",
                        "04f09411fa8418e1bb1711e426eaa28ec50c8ea3"
                    ]
                },
                {
                    "command": [
                        "rewrite EQ.",
                        "VernacExtend",
                        "359c5e196f83a6afbd9ede635bddbf545fd1eb82"
                    ]
                },
                {
                    "command": [
                        "rewrite !Zshiftin_spec.",
                        "VernacExtend",
                        "aa9d3dedf623bac9a8173e30b44355badd5e5367"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "exploit (H 0).",
                        "VernacExtend",
                        "42ad913e3fffb0d0520c84c3a3969674905fe674"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat2Z.inj_succ; omega.",
                        "VernacExtend",
                        "138dc6550f8c1f2984d228a98db031923f5c7ba4"
                    ]
                },
                {
                    "command": [
                        "rewrite !Ztestbit_base.",
                        "VernacExtend",
                        "c89b155d8b7ef94b9eebafde7a23e12ee3517b5e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "same_bits_eqmod",
            "line_nb": 1306,
            "steps": [
                {
                    "command": [
                        "induction n; intros.",
                        "VernacExtend",
                        "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl in H0.",
                        "VernacExtend",
                        "a4a6a8421870dbf7255f8d031744eec32f12a941"
                    ]
                },
                {
                    "command": [
                        "omegaContradiction.",
                        "VernacExtend",
                        "329a0d87fada76e54a403fa49705e937670711cd"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat2Z.inj_succ in H0.",
                        "VernacExtend",
                        "857b92af4753b6fa2e29560a1f8f1b3f36116146"
                    ]
                },
                {
                    "command": [
                        "rewrite two_power_nat_S in H.",
                        "VernacExtend",
                        "3e4a703255e1d1cba37f1db1db4eb3be76c2e046"
                    ]
                },
                {
                    "command": [
                        "rewrite !(Ztestbit_eq i); intuition.",
                        "VernacExtend",
                        "c5a5a95371c98449ab8f08afc3c86aa6369793b3"
                    ]
                },
                {
                    "command": [
                        "destruct H as [k EQ].",
                        "VernacExtend",
                        "c9baa1112395e78126ee4d1c1c1dc430c2db4072"
                    ]
                },
                {
                    "command": [
                        "assert (EQ': Zshiftin (Z.odd x) (Z.div2 x) = Zshiftin (Z.odd y) (k * two_power_nat n + Z.div2 y)).",
                        "VernacExtend",
                        "c4adbed3747daf8d1ce448538fd71f3b603e9bc7"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite (Zdecomp x) in EQ.",
                        "VernacExtend",
                        "856eb8ef9dc7a34ca46aa47b163eeeab1f7d082b"
                    ]
                },
                {
                    "command": [
                        "rewrite (Zdecomp y) in EQ.",
                        "VernacExtend",
                        "15e7e5efd29f87fa5c9cb9835960b50ab69aa4cb"
                    ]
                },
                {
                    "command": [
                        "rewrite EQ.",
                        "VernacExtend",
                        "359c5e196f83a6afbd9ede635bddbf545fd1eb82"
                    ]
                },
                {
                    "command": [
                        "rewrite !Zshiftin_spec.",
                        "VernacExtend",
                        "aa9d3dedf623bac9a8173e30b44355badd5e5367"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "exploit Zshiftin_inj; eauto.",
                        "VernacExtend",
                        "e0910e9696baa83aa5ae8ef6bc6f621d9473bc63"
                    ]
                },
                {
                    "command": [
                        "intros [A B].",
                        "VernacExtend",
                        "269ecc1b12a78cad85161d58003fb0ebdea8ebc3"
                    ]
                },
                {
                    "command": [
                        "destruct (zeq i 0).",
                        "VernacExtend",
                        "d84935205e6f3de20c609dbacd0c5438037a33e9"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply IHn.",
                        "VernacExtend",
                        "1c9414f4f052b2727ca012553a4a3a2a0fc85649"
                    ]
                },
                {
                    "command": [
                        "exists k; auto.",
                        "VernacExtend",
                        "930bbe24c94723a9e2f5da004090011e877c06d9"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "two_power_nat_infinity",
            "line_nb": 1336,
            "steps": [
                {
                    "command": [
                        "intros x0 POS0; pattern x0; apply natlike_ind; auto.",
                        "VernacExtend",
                        "a1cd05de4a0edd1834edef3fe4e3c59e8c1c9e1d"
                    ]
                },
                {
                    "command": [
                        "exists O.",
                        "VernacExtend",
                        "857793ba1f2fca166b38dcce16bdb0403ad0f7dc"
                    ]
                },
                {
                    "command": [
                        "compute; auto.",
                        "VernacExtend",
                        "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as [n LT].",
                        "VernacExtend",
                        "86659fe9b0d341bd6273f4001c9f9e2824336aa7"
                    ]
                },
                {
                    "command": [
                        "exists (S n).",
                        "VernacExtend",
                        "cd2a24563bef1e96e5268d448b7159cbb0bda443"
                    ]
                },
                {
                    "command": [
                        "rewrite two_power_nat_S.",
                        "VernacExtend",
                        "a9744f6bd9a8fe7c31c0f7154478ac3b90a12f1b"
                    ]
                },
                {
                    "command": [
                        "generalize (two_power_nat_pos n).",
                        "VernacExtend",
                        "0ba544cb0f284372dd11bdd2e82f5b029e731ed1"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "equal_same_bits",
            "line_nb": 1347,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "set (z := if zlt x y then y - x else x - y).",
                        "VernacExtend",
                        "2cfd5510205820de2966ea02ca01a69e442ad691"
                    ]
                },
                {
                    "command": [
                        "assert (0 <= z).",
                        "VernacExtend",
                        "dd09589ef10b3e3a90bd32302d0fc05a1ea6656a"
                    ]
                },
                {
                    "command": [
                        "unfold z; destruct (zlt x y); omega.",
                        "VernacExtend",
                        "51306231d757e71daa7b54798b9bfb7084a990c9"
                    ]
                },
                {
                    "command": [
                        "exploit (two_power_nat_infinity z); auto.",
                        "VernacExtend",
                        "523042c08cbfd4bb7ab8a4ef6da450ed49753392"
                    ]
                },
                {
                    "command": [
                        "intros [n LT].",
                        "VernacExtend",
                        "765cb27f401613fc6941bbff50f821fe0d33b548"
                    ]
                },
                {
                    "command": [
                        "assert (eqmod (two_power_nat n) x y).",
                        "VernacExtend",
                        "3b978065418d76a6c0c15297458a38039d7e8e59"
                    ]
                },
                {
                    "command": [
                        "apply eqmod_same_bits.",
                        "VernacExtend",
                        "bb8c61219ef74b55b9293b7db8e9d861a7644b51"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "assert (eqmod (two_power_nat n) z 0).",
                        "VernacExtend",
                        "a6b1e0c726eaf8c2ac45991b484528e09e7930d8"
                    ]
                },
                {
                    "command": [
                        "unfold z.",
                        "VernacExtend",
                        "3f5f13843987e7698cc305c40b7a59532fd5ee56"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt x y).",
                        "VernacExtend",
                        "9e08f9755cc45e7bf9d1fed51f1ae7fddcc8cf70"
                    ]
                },
                {
                    "command": [
                        "replace 0 with (y - y) by omega.",
                        "VernacExtend",
                        "09d8d9ce67d7ba7451df15b49e90951f5896fd1b"
                    ]
                },
                {
                    "command": [
                        "apply eqmod_sub.",
                        "VernacExtend",
                        "c9dc99d4bbc6cea99f146d1993e5dcb92eaf027c"
                    ]
                },
                {
                    "command": [
                        "apply eqmod_refl.",
                        "VernacExtend",
                        "dd13026dc2e4aa9828d8fe4d8ad9645368260127"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "replace 0 with (x - x) by omega.",
                        "VernacExtend",
                        "a42773e066711e8541fecea2da1d21c9355faf71"
                    ]
                },
                {
                    "command": [
                        "apply eqmod_sub.",
                        "VernacExtend",
                        "c9dc99d4bbc6cea99f146d1993e5dcb92eaf027c"
                    ]
                },
                {
                    "command": [
                        "apply eqmod_refl.",
                        "VernacExtend",
                        "dd13026dc2e4aa9828d8fe4d8ad9645368260127"
                    ]
                },
                {
                    "command": [
                        "apply eqmod_sym; auto.",
                        "VernacExtend",
                        "425a72fa8c834da65e825c9215e83c9c1a6e6878"
                    ]
                },
                {
                    "command": [
                        "assert (z = 0).",
                        "VernacExtend",
                        "68271cafcb320a563ef253f76f0138e6b15ef58c"
                    ]
                },
                {
                    "command": [
                        "apply eqmod_small_eq with (two_power_nat n).",
                        "VernacExtend",
                        "2a816d5b8bd265321663184d2012665d0d7c57ec"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "generalize (two_power_nat_pos n); omega.",
                        "VernacExtend",
                        "6f13ab2ec40379deca9f6c07ec7aaef221b2c591"
                    ]
                },
                {
                    "command": [
                        "unfold z in H3.",
                        "VernacExtend",
                        "7c92b02aff8f8ae04e5704c59edee10e2be32381"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt x y); omega.",
                        "VernacExtend",
                        "61ad751b402a17bc69ee7a6e24fa6c8577502dd3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_one_complement",
            "line_nb": 1378,
            "steps": [
                {
                    "command": [
                        "intros i0 POS0.",
                        "VernacExtend",
                        "9ff333e026e0aecebe5f30d72ba096e68d695c17"
                    ]
                },
                {
                    "command": [
                        "pattern i0.",
                        "VernacExtend",
                        "1a983b0ddd685db9653586847604c73a7c95f084"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_0_ind; auto.",
                        "VernacExtend",
                        "1da3917c34b2bda951299549c1b2828f43b7b783"
                    ]
                },
                {
                    "command": [
                        "intros i IND POS x.",
                        "VernacExtend",
                        "a867c938d4a44b5f32077e055dd99d2cbc94bfab"
                    ]
                },
                {
                    "command": [
                        "rewrite (Zdecomp x).",
                        "VernacExtend",
                        "bbfaec973e49a865a8697e2aa301fde6a3b455ac"
                    ]
                },
                {
                    "command": [
                        "set (y := Z.div2 x).",
                        "VernacExtend",
                        "d2ccd0058dbd3656494f091fcbb5514ef6629124"
                    ]
                },
                {
                    "command": [
                        "replace (- Zshiftin (Z.odd x) y - 1) with (Zshiftin (negb (Z.odd x)) (- y - 1)).",
                        "VernacExtend",
                        "c172cacd0f54c1efa537c6a0624e5c5ef48ac4ff"
                    ]
                },
                {
                    "command": [
                        "rewrite !Ztestbit_shiftin; auto.",
                        "VernacExtend",
                        "6de2cab66e5c21e555d5dc59e8d400bfe2eaddd2"
                    ]
                },
                {
                    "command": [
                        "destruct (zeq i 0).",
                        "VernacExtend",
                        "d84935205e6f3de20c609dbacd0c5438037a33e9"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply IND.",
                        "VernacExtend",
                        "e7daae69ff1a356c02a963bd11f2cc2e784b4977"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite !Zshiftin_spec.",
                        "VernacExtend",
                        "aa9d3dedf623bac9a8173e30b44355badd5e5367"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.odd x); simpl negb; ring.",
                        "VernacExtend",
                        "e52dbff8cd2bfa828c93f62794d1296467c2c83e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ztestbit_above",
            "line_nb": 1394,
            "steps": [
                {
                    "command": [
                        "induction n; intros.",
                        "VernacExtend",
                        "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "change (two_power_nat 0) with 1 in H.",
                        "VernacExtend",
                        "64e98d9b4590525702dd3abfaea7fca98dd5a64f"
                    ]
                },
                {
                    "command": [
                        "replace x with 0 by omega.",
                        "VernacExtend",
                        "57d2a309932c1536f48f0bec30279bc173120551"
                    ]
                },
                {
                    "command": [
                        "apply Z.testbit_0_l.",
                        "VernacExtend",
                        "7cae98e3568a00aa4d50007b1f11061ad6c07cc4"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat2Z.inj_succ in H0.",
                        "VernacExtend",
                        "857b92af4753b6fa2e29560a1f8f1b3f36116146"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztestbit_eq.",
                        "VernacExtend",
                        "cc27e9791667c9a7f1466faf67869f938d5d405a"
                    ]
                },
                {
                    "command": [
                        "rewrite zeq_false.",
                        "VernacExtend",
                        "dab8f9109b7a6d08485a19d2b305200449ea8478"
                    ]
                },
                {
                    "command": [
                        "apply IHn.",
                        "VernacExtend",
                        "1c9414f4f052b2727ca012553a4a3a2a0fc85649"
                    ]
                },
                {
                    "command": [
                        "rewrite two_power_nat_S in H.",
                        "VernacExtend",
                        "3e4a703255e1d1cba37f1db1db4eb3be76c2e046"
                    ]
                },
                {
                    "command": [
                        "rewrite (Zdecomp x) in H.",
                        "VernacExtend",
                        "ff732c19a76a325485c07adcd0063086cd7874ef"
                    ]
                },
                {
                    "command": [
                        "rewrite Zshiftin_spec in H.",
                        "VernacExtend",
                        "7fc908698e058abfbd9cf3287389d0de46588342"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.odd x); omega.",
                        "VernacExtend",
                        "0fabeef20b10371355ec660c030b7b196fbf9659"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ztestbit_above_neg",
            "line_nb": 1413,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "set (y := -x-1).",
                        "VernacExtend",
                        "7c128df85132d1d13fc2f6cdf00214b1f7aef47b"
                    ]
                },
                {
                    "command": [
                        "assert (Z.testbit y i = false).",
                        "VernacExtend",
                        "515e97b7d5e0f335d1437eaad75f6e511eefda6c"
                    ]
                },
                {
                    "command": [
                        "apply Ztestbit_above with n.",
                        "VernacExtend",
                        "bfe1654b470394338f15ecb1d7ea6096b2339401"
                    ]
                },
                {
                    "command": [
                        "unfold y; omega.",
                        "VernacExtend",
                        "063a4251a1e52ea0aac2b3476e96b3471524db17"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "unfold y in H1.",
                        "VernacExtend",
                        "f5f637486ecf667882bc1b52061a36c54b6dd0de"
                    ]
                },
                {
                    "command": [
                        "rewrite Z_one_complement in H1.",
                        "VernacExtend",
                        "99b9cbecd8fbcd3ed8ef7f949630cea83a4a5f82"
                    ]
                },
                {
                    "command": [
                        "change true with (negb false).",
                        "VernacExtend",
                        "18a942df4a07dbf18345ef51141f1527de63e701"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H1.",
                        "VernacExtend",
                        "b8b417d956609d1854d18921f25bc0ffae73a74e"
                    ]
                },
                {
                    "command": [
                        "rewrite negb_involutive; auto.",
                        "VernacExtend",
                        "8994ecd79c2e78c0cc45051b55105f0fd02a8437"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zsign_bit",
            "line_nb": 1427,
            "steps": [
                {
                    "command": [
                        "induction n; intros.",
                        "VernacExtend",
                        "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "change (two_power_nat 1) with 2 in H.",
                        "VernacExtend",
                        "36f152407df4bd4633f3e06722a63a1af8be6abb"
                    ]
                },
                {
                    "command": [
                        "assert (x = 0 \\/ x = 1) by omega.",
                        "VernacExtend",
                        "6fe722be144b9e7e830af8ae7367eea8b77d50ad"
                    ]
                },
                {
                    "command": [
                        "destruct H0; subst x; reflexivity.",
                        "VernacExtend",
                        "e0265cdc26fbce3c15a44dc838d20eff225427ec"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat2Z.inj_succ.",
                        "VernacExtend",
                        "1fc791f52357dc9e0a22fac0a6d82e87969a1699"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztestbit_eq.",
                        "VernacExtend",
                        "cc27e9791667c9a7f1466faf67869f938d5d405a"
                    ]
                },
                {
                    "command": [
                        "rewrite zeq_false.",
                        "VernacExtend",
                        "dab8f9109b7a6d08485a19d2b305200449ea8478"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.pred_succ.",
                        "VernacExtend",
                        "fd019b24c7f66d66d1631141e017af69d900e942"
                    ]
                },
                {
                    "command": [
                        "rewrite IHn.",
                        "VernacExtend",
                        "ec9472e508d0ba82a8f6be939d2e4d39f35c3667"
                    ]
                },
                {
                    "command": [
                        "rewrite two_power_nat_S.",
                        "VernacExtend",
                        "a9744f6bd9a8fe7c31c0f7154478ac3b90a12f1b"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (Z.div2 x) (two_power_nat n)); rewrite (Zdecomp x); rewrite Zshiftin_spec.",
                        "VernacExtend",
                        "82df6eb08f949206ac3337b7c1f4766b7ebe05ea"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true.",
                        "VernacExtend",
                        "b49135e183425368b4318af106711c28871bcc77"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.odd x); omega.",
                        "VernacExtend",
                        "0fabeef20b10371355ec660c030b7b196fbf9659"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false.",
                        "VernacExtend",
                        "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.odd x); omega.",
                        "VernacExtend",
                        "0fabeef20b10371355ec660c030b7b196fbf9659"
                    ]
                },
                {
                    "command": [
                        "rewrite (Zdecomp x) in H; rewrite Zshiftin_spec in H.",
                        "VernacExtend",
                        "5cf3263ae2b969ad1a3a0996c4464ec5f734ece0"
                    ]
                },
                {
                    "command": [
                        "rewrite two_power_nat_S in H.",
                        "VernacExtend",
                        "3e4a703255e1d1cba37f1db1db4eb3be76c2e046"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.odd x); omega.",
                        "VernacExtend",
                        "0fabeef20b10371355ec660c030b7b196fbf9659"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zshiftin_ind",
            "line_nb": 1453,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct x.",
                        "VernacExtend",
                        "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "induction p.",
                        "VernacExtend",
                        "57241b1bf2113f288b5c35cf50cb4c85d8323deb"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "change (P (Zshiftin true (Z.pos p))).",
                        "VernacExtend",
                        "7863f34649cac34ee441aca07a0ad82cd1454ccc"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "change (P (Zshiftin false (Z.pos p))).",
                        "VernacExtend",
                        "9ba4317561cd402d1b742113acc8fbc56e2e3f17"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "change (P (Zshiftin true 0)).",
                        "VernacExtend",
                        "c38a34a93022f24a4bb92a6d80c61803d1ec61c9"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "compute in H1.",
                        "VernacExtend",
                        "dba0d31eef68602688d1d9f450f2f2e9ffe6cda6"
                    ]
                },
                {
                    "command": [
                        "intuition congruence.",
                        "VernacExtend",
                        "2cba3542847e3f4ea52f3f62375adc6e8f8f04bc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zshiftin_pos_ind",
            "line_nb": 1475,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct x; simpl in H1; try discriminate.",
                        "VernacExtend",
                        "1ae9897e53653304d708088e7751a2b39bfaeb4f"
                    ]
                },
                {
                    "command": [
                        "induction p.",
                        "VernacExtend",
                        "57241b1bf2113f288b5c35cf50cb4c85d8323deb"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "change (P (Zshiftin true (Z.pos p))).",
                        "VernacExtend",
                        "7863f34649cac34ee441aca07a0ad82cd1454ccc"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "change (P (Zshiftin false (Z.pos p))).",
                        "VernacExtend",
                        "9ba4317561cd402d1b742113acc8fbc56e2e3f17"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ztestbit_le",
            "line_nb": 1488,
            "steps": [
                {
                    "command": [
                        "intros x y0 POS0; revert x; pattern y0; apply Zshiftin_ind; auto; intros.",
                        "VernacExtend",
                        "e3efe28e7de92ce15048f4349c124acda2777c4d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "replace x with 0.",
                        "VernacExtend",
                        "c8a127fa02c208e49db325a0e53bc2702e87ad52"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply equal_same_bits; intros.",
                        "VernacExtend",
                        "73ce991e4619c1e5d9bbd33ccb23dec8610abb80"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztestbit_0.",
                        "VernacExtend",
                        "6240d6d1de40f083071d07df10c155d455262b1d"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.testbit x i) as [] eqn:E; auto.",
                        "VernacExtend",
                        "ff3b583f3b735497334d8a5bae08b391a623b816"
                    ]
                },
                {
                    "command": [
                        "exploit H; eauto.",
                        "VernacExtend",
                        "e4042976bceeb1e0a2b61f377ada9badc4c146f3"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztestbit_0.",
                        "VernacExtend",
                        "6240d6d1de40f083071d07df10c155d455262b1d"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assert (Z.div2 x0 <= x).",
                        "VernacExtend",
                        "02a0caba514ff13138a1ab1689d6964b084fcf3d"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exploit (H1 (Z.succ i)).",
                        "VernacExtend",
                        "2b10bb53a7171315a41be7f726cfca9a389870b1"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztestbit_succ; auto.",
                        "VernacExtend",
                        "ba319e0a7b257d31f6678242f602517932e1cb0a"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztestbit_shiftin_succ; auto.",
                        "VernacExtend",
                        "ec8eab286577c21d23f2191975d78d66db40c9e0"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite (Zdecomp x0).",
                        "VernacExtend",
                        "8e907a06206c15c2a0677ca49e16c04677fd4bf2"
                    ]
                },
                {
                    "command": [
                        "rewrite !Zshiftin_spec.",
                        "VernacExtend",
                        "aa9d3dedf623bac9a8173e30b44355badd5e5367"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.odd x0) as [] eqn:E1; destruct b as [] eqn:E2; try omega.",
                        "VernacExtend",
                        "54d6b9a204907becb341757a65daecfbfaaa5839"
                    ]
                },
                {
                    "command": [
                        "exploit (H1 0).",
                        "VernacExtend",
                        "ee38799b1ba5b791835eb39e854bc74e56324226"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztestbit_base; auto.",
                        "VernacExtend",
                        "6983e04882a216b29db1b2fbc32ddd431264929a"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztestbit_shiftin_base.",
                        "VernacExtend",
                        "67fcc070b6aa4f6cde6d350ee6966645f880c9da"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "testbit_repr",
            "line_nb": 1519,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold testbit.",
                        "VernacExtend",
                        "14f68f27aaaec42f64d3a8f3009fc6eaa35592a6"
                    ]
                },
                {
                    "command": [
                        "apply same_bits_eqm; auto with ints.",
                        "VernacExtend",
                        "5356a73989d88a3ac93555b646b78ff2c2f24634"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "same_bits_eq",
            "line_nb": 1524,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (repr_unsigned x).",
                        "VernacExtend",
                        "393ec19ffbe8f172593c1f542e8d6811517b657c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (repr_unsigned y).",
                        "VernacExtend",
                        "140fc635f53509ca75abf324c73c2a5f03133e74"
                    ]
                },
                {
                    "command": [
                        "apply eqm_samerepr.",
                        "VernacExtend",
                        "2226a5674ed5a7db984e878fdbb37775ca665295"
                    ]
                },
                {
                    "command": [
                        "apply eqm_same_bits.",
                        "VernacExtend",
                        "6a44a90c65d4264d6b846bf8c46f55129a7f34cc"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bits_above",
            "line_nb": 1532,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Ztestbit_above with wordsize; auto.",
                        "VernacExtend",
                        "12c51459c1ccd6b4a9e9bcec46cf5116c29d57e5"
                    ]
                },
                {
                    "command": [
                        "apply unsigned_range.",
                        "VernacExtend",
                        "107f7224db1bfb90305cbe8f1e64d98d5760b23b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bits_zero",
            "line_nb": 1537,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold testbit.",
                        "VernacExtend",
                        "14f68f27aaaec42f64d3a8f3009fc6eaa35592a6"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_zero.",
                        "VernacExtend",
                        "89956b9f461b9934c8fa99e6e63074f0275efcae"
                    ]
                },
                {
                    "command": [
                        "apply Ztestbit_0.",
                        "VernacExtend",
                        "9eabae5755d85655c33afa1ead756f180af22081"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bits_one",
            "line_nb": 1543,
            "steps": [
                {
                    "command": [
                        "unfold testbit; intros.",
                        "VernacExtend",
                        "e141ca7104042d5efedc92997cf18ad2ac54ab38"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_one.",
                        "VernacExtend",
                        "52f1cc9e4b7b0a3b7c37f5e9a1a6c514d4cb1683"
                    ]
                },
                {
                    "command": [
                        "apply Ztestbit_1.",
                        "VernacExtend",
                        "4455c3deac697a1f244820344c5007c4b3140393"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bits_mone",
            "line_nb": 1548,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold mone.",
                        "VernacExtend",
                        "914091818c6862aecc1a83f26df67bb372164c1d"
                    ]
                },
                {
                    "command": [
                        "rewrite testbit_repr; auto.",
                        "VernacExtend",
                        "d20143ed773e39c9c2d38dc1a41b649eadbc95c6"
                    ]
                },
                {
                    "command": [
                        "apply Ztestbit_m1.",
                        "VernacExtend",
                        "e060649db36180548752a8ce6fbc07eb2ee245ab"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sign_bit_of_unsigned",
            "line_nb": 1557,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold testbit.",
                        "VernacExtend",
                        "14f68f27aaaec42f64d3a8f3009fc6eaa35592a6"
                    ]
                },
                {
                    "command": [
                        "set (ws1 := Init.Nat.pred wordsize).",
                        "VernacExtend",
                        "937328195a9fc639d06c6846f84ede8b17c75c9a"
                    ]
                },
                {
                    "command": [
                        "assert (zwordsize - 1 = Z.of_nat ws1).",
                        "VernacExtend",
                        "4ac92e760b908e9ae6cf61cbd469533df33a878c"
                    ]
                },
                {
                    "command": [
                        "unfold zwordsize, ws1, wordsize.",
                        "VernacExtend",
                        "8df1fd96106bef86d148d8c1563f75f6d95ec8c7"
                    ]
                },
                {
                    "command": [
                        "destruct WS.wordsize as [] eqn:E.",
                        "VernacExtend",
                        "43bb653705f90dd2e1fb614133f391d1837edc88"
                    ]
                },
                {
                    "command": [
                        "elim WS.wordsize_not_zero; auto.",
                        "VernacExtend",
                        "739b1b3f154319772e91a98127de375f7418efe0"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat2Z.inj_succ.",
                        "VernacExtend",
                        "1fc791f52357dc9e0a22fac0a6d82e87969a1699"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "assert (half_modulus = two_power_nat ws1).",
                        "VernacExtend",
                        "eb8d291987172c20b3d2cde0584116e4fb461b15"
                    ]
                },
                {
                    "command": [
                        "rewrite two_power_nat_two_p.",
                        "VernacExtend",
                        "e21f56ecabf68cda5e6534a700cce51443bacebe"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "apply half_modulus_power.",
                        "VernacExtend",
                        "dfa7660565d43933333d79302ab3dad356e6a417"
                    ]
                },
                {
                    "command": [
                        "rewrite H; rewrite H0.",
                        "VernacExtend",
                        "cadacb31556a02adbe2c6bc962279414f9ba19d0"
                    ]
                },
                {
                    "command": [
                        "apply Zsign_bit.",
                        "VernacExtend",
                        "62cd92683d5190974000c4a7f846a7d6017c0c63"
                    ]
                },
                {
                    "command": [
                        "rewrite two_power_nat_S.",
                        "VernacExtend",
                        "a9744f6bd9a8fe7c31c0f7154478ac3b90a12f1b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0.",
                        "VernacExtend",
                        "f6718c09e494e327328e3c2003dd236939e231f9"
                    ]
                },
                {
                    "command": [
                        "rewrite <- half_modulus_modulus.",
                        "VernacExtend",
                        "f10a4b80c09add08e44af19a2a1d26c440324e92"
                    ]
                },
                {
                    "command": [
                        "apply unsigned_range.",
                        "VernacExtend",
                        "107f7224db1bfb90305cbe8f1e64d98d5760b23b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bits_signed",
            "line_nb": 1579,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i zwordsize).",
                        "VernacExtend",
                        "cbf965911aa29c8b776e1700f06d5a1afa2ff80a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply same_bits_eqm.",
                        "VernacExtend",
                        "099ae282b8083eb6b85222b05a6bc17566bc4e50"
                    ]
                },
                {
                    "command": [
                        "apply eqm_signed_unsigned.",
                        "VernacExtend",
                        "d8614df8b73ff309ccafc1b69753d7e1944f658e"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold signed.",
                        "VernacExtend",
                        "f99b13683b7fbccb713276bdf12a56c47fabc924"
                    ]
                },
                {
                    "command": [
                        "rewrite sign_bit_of_unsigned.",
                        "VernacExtend",
                        "6cd437092de47964ce76741c43d81f13650dde7b"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (unsigned x) half_modulus).",
                        "VernacExtend",
                        "96100f79c30f7c1ed7c9d19caec035348a472e2e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply Ztestbit_above with wordsize.",
                        "VernacExtend",
                        "ad2a00c6773ef3c789e155cbfc7febf420f86850"
                    ]
                },
                {
                    "command": [
                        "apply unsigned_range.",
                        "VernacExtend",
                        "107f7224db1bfb90305cbe8f1e64d98d5760b23b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply Ztestbit_above_neg with wordsize.",
                        "VernacExtend",
                        "cb11708ddd3a01f721f619b8569c9ffa26c76554"
                    ]
                },
                {
                    "command": [
                        "fold modulus.",
                        "VernacExtend",
                        "82d16181f0b954350f02a74ec336c69fd618891c"
                    ]
                },
                {
                    "command": [
                        "generalize (unsigned_range x).",
                        "VernacExtend",
                        "7892db8fc005b0cd4ce2d3aa05f16d9b6948c153"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bits_le",
            "line_nb": 1601,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Ztestbit_le.",
                        "VernacExtend",
                        "a6836efdc2fb846fb1120e75bd8dd5bd8c661a87"
                    ]
                },
                {
                    "command": [
                        "generalize (unsigned_range y); omega.",
                        "VernacExtend",
                        "42fda19b1742db2649f926c7d3bceaa4596993b0"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "fold (testbit y i).",
                        "VernacExtend",
                        "855eb520bba810bffd1731eece11437893a1503f"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i zwordsize).",
                        "VernacExtend",
                        "cbf965911aa29c8b776e1700f06d5a1afa2ff80a"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "fold (testbit x i) in H1.",
                        "VernacExtend",
                        "ed468daf8c8f844b6dcc910994dd53ef6b84cfad"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_above in H1; auto.",
                        "VernacExtend",
                        "6c23886fa8b5c56f53d83bec89d75bf629fc6171"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bits_and",
            "line_nb": 1615,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold and.",
                        "VernacExtend",
                        "e94c9e2b0798d0e8493212655e19be936928ff54"
                    ]
                },
                {
                    "command": [
                        "rewrite testbit_repr; auto.",
                        "VernacExtend",
                        "d20143ed773e39c9c2d38dc1a41b649eadbc95c6"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.land_spec; intuition.",
                        "VernacExtend",
                        "8c7e0c36e26ebbaacf92f64a6f89665bbc0c5215"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bits_or",
            "line_nb": 1621,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold or.",
                        "VernacExtend",
                        "bac389b163114492e7ff8a5d8175222e3e3f7c6f"
                    ]
                },
                {
                    "command": [
                        "rewrite testbit_repr; auto.",
                        "VernacExtend",
                        "d20143ed773e39c9c2d38dc1a41b649eadbc95c6"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.lor_spec; intuition.",
                        "VernacExtend",
                        "e0dede42a774eddff76253e7d32d53dfe3619787"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bits_xor",
            "line_nb": 1627,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold xor.",
                        "VernacExtend",
                        "b0bc2f749f202cf4bc384a9ba1982358cb870ce6"
                    ]
                },
                {
                    "command": [
                        "rewrite testbit_repr; auto.",
                        "VernacExtend",
                        "d20143ed773e39c9c2d38dc1a41b649eadbc95c6"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.lxor_spec; intuition.",
                        "VernacExtend",
                        "215167ef9b98ddb9d3cb62edc18d9ec277017789"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bits_not",
            "line_nb": 1633,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold not.",
                        "VernacExtend",
                        "6c337369ba68753b2202c88d3c56bf02e1807b95"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_xor; auto.",
                        "VernacExtend",
                        "03e51acedee1919fdf83244d55abb95fda1f6313"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_mone; auto.",
                        "VernacExtend",
                        "65db6e3a47425ff5b36895a38f5378183c298773"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "and_commut",
            "line_nb": 1640,
            "steps": [
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "and_assoc",
            "line_nb": 1643,
            "steps": [
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "and_zero",
            "line_nb": 1646,
            "steps": [
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "apply andb_b_false.",
                        "VernacExtend",
                        "800b5950ba8762b19db92eb01b6bf91959e92496"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "and_zero_l",
            "line_nb": 1650,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite and_commut.",
                        "VernacExtend",
                        "b10a32c5381ffe79399fa5b6823f886c3c37781f"
                    ]
                },
                {
                    "command": [
                        "apply and_zero.",
                        "VernacExtend",
                        "44206f74dc8d718354f02e6cd0d98255639e390f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "and_mone",
            "line_nb": 1655,
            "steps": [
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "apply andb_b_true.",
                        "VernacExtend",
                        "3d8d6fdefd286b684bbfdf38e8bec9f56d2377b1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "and_mone_l",
            "line_nb": 1659,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite and_commut.",
                        "VernacExtend",
                        "b10a32c5381ffe79399fa5b6823f886c3c37781f"
                    ]
                },
                {
                    "command": [
                        "apply and_mone.",
                        "VernacExtend",
                        "767f40a24e45eb8d7f8b31795fb3ff90cbdffeeb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "and_idem",
            "line_nb": 1664,
            "steps": [
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "destruct (testbit x i); auto.",
                        "VernacExtend",
                        "14ae4e0b13609c15898355f9aa7010474018f3e7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "or_commut",
            "line_nb": 1668,
            "steps": [
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "or_assoc",
            "line_nb": 1671,
            "steps": [
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "or_zero",
            "line_nb": 1674,
            "steps": [
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "or_zero_l",
            "line_nb": 1677,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite or_commut.",
                        "VernacExtend",
                        "b267079fba13ec3e9108e70ab24d4c26a1f49abf"
                    ]
                },
                {
                    "command": [
                        "apply or_zero.",
                        "VernacExtend",
                        "dfe78735e617efe3305a6d77a2f52257e69602e4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "or_mone",
            "line_nb": 1682,
            "steps": [
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "or_idem",
            "line_nb": 1685,
            "steps": [
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "destruct (testbit x i); auto.",
                        "VernacExtend",
                        "14ae4e0b13609c15898355f9aa7010474018f3e7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "and_or_distrib",
            "line_nb": 1689,
            "steps": [
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "apply demorgan1.",
                        "VernacExtend",
                        "23840ec06625a4ea73d9be8a87e4d83124ddc1ea"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "and_or_distrib_l",
            "line_nb": 1693,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite (and_commut (or x y)).",
                        "VernacExtend",
                        "a5b78550b73cf023615399f8f980cbc963a4f747"
                    ]
                },
                {
                    "command": [
                        "rewrite and_or_distrib.",
                        "VernacExtend",
                        "bc1c4dd15e64e710915b56d06d2deba3942e0a0d"
                    ]
                },
                {
                    "command": [
                        "f_equal; apply and_commut.",
                        "VernacExtend",
                        "8f50a219d8f8cfb6e7b2ef6fb1adaa829246aa68"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "or_and_distrib",
            "line_nb": 1699,
            "steps": [
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "apply orb_andb_distrib_r.",
                        "VernacExtend",
                        "554626220a4054fe0ba3760e07a4b08c81e52e90"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "or_and_distrib_l",
            "line_nb": 1703,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite (or_commut (and x y)).",
                        "VernacExtend",
                        "e7809a8928fec0546ba90719f41e5497cc31d269"
                    ]
                },
                {
                    "command": [
                        "rewrite or_and_distrib.",
                        "VernacExtend",
                        "faed279d89056f00d48876e63e7e8d1fbd1da5a7"
                    ]
                },
                {
                    "command": [
                        "f_equal; apply or_commut.",
                        "VernacExtend",
                        "d54dba23989c157d4996f80e453ed0a81ecb59e0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "and_or_absorb",
            "line_nb": 1709,
            "steps": [
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "assert (forall a b, a && (a || b) = a) by destr_bool.",
                        "VernacExtend",
                        "4a5baaf1d8961bc7fc2109eb139e0b0e34d609df"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "or_and_absorb",
            "line_nb": 1714,
            "steps": [
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "assert (forall a b, a || (a && b) = a) by destr_bool.",
                        "VernacExtend",
                        "950d07d363a431f345a5508320d5686a9b4e328e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xor_commut",
            "line_nb": 1719,
            "steps": [
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "apply xorb_comm.",
                        "VernacExtend",
                        "95a70ded1b93af11da2e8cf472e0b53a66157824"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xor_assoc",
            "line_nb": 1723,
            "steps": [
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "apply xorb_assoc.",
                        "VernacExtend",
                        "396f293dffb44558a83e77d5d63dca4c07382ed4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xor_zero",
            "line_nb": 1727,
            "steps": [
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "apply xorb_false.",
                        "VernacExtend",
                        "678636e75ed80827a24df851ed4662e6c736aab5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xor_zero_l",
            "line_nb": 1731,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite xor_commut.",
                        "VernacExtend",
                        "ac3161d3090fececc9cb27dcdf3ae5f3b21813b5"
                    ]
                },
                {
                    "command": [
                        "apply xor_zero.",
                        "VernacExtend",
                        "e734334fb5b575ecbd8f7a1548b8abb7ee09f8b4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xor_idem",
            "line_nb": 1736,
            "steps": [
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "apply xorb_nilpotent.",
                        "VernacExtend",
                        "afcbb842254c1e94f74a0666f72095145ab8d689"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xor_zero_one",
            "line_nb": 1740,
            "steps": [
                {
                    "command": [
                        "rewrite xor_commut.",
                        "VernacExtend",
                        "ac3161d3090fececc9cb27dcdf3ae5f3b21813b5"
                    ]
                },
                {
                    "command": [
                        "apply xor_zero.",
                        "VernacExtend",
                        "e734334fb5b575ecbd8f7a1548b8abb7ee09f8b4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xor_one_one",
            "line_nb": 1744,
            "steps": [
                {
                    "command": [
                        "apply xor_idem.",
                        "VernacExtend",
                        "66aedcd283392792f8d46ba2677c964814c2c6ae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xor_zero_equal",
            "line_nb": 1747,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply same_bits_eq; intros.",
                        "VernacExtend",
                        "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
                    ]
                },
                {
                    "command": [
                        "assert (xorb (testbit x i) (testbit y i) = false).",
                        "VernacExtend",
                        "772486b7099730e7f4f736739ceda05a81aba4a2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- bits_xor; auto.",
                        "VernacExtend",
                        "17981019ba2a483c7367c2fc430957db25cb7238"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "apply bits_zero.",
                        "VernacExtend",
                        "7c8e33b9d05c29c0ce1576a7b560fe8e98f45c41"
                    ]
                },
                {
                    "command": [
                        "destruct (testbit x i); destruct (testbit y i); reflexivity || discriminate.",
                        "VernacExtend",
                        "873dd76d72731ec215e3a3537301d605db4d6263"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xor_is_zero",
            "line_nb": 1756,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "predSpec eq eq_spec (xor x y) zero.",
                        "VernacExtend",
                        "f3bdf06842a10eac5c8d1481cff92173a21e1a70"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply xor_zero_equal in H.",
                        "VernacExtend",
                        "4063670c7127aafc357725add83bb253609453ff"
                    ]
                },
                {
                    "command": [
                        "subst y.",
                        "VernacExtend",
                        "f056a00b852bc549d1b8bb21d500c90d8ff37bf8"
                    ]
                },
                {
                    "command": [
                        "rewrite eq_true; auto.",
                        "VernacExtend",
                        "b1a7da17cef74e98611c251eb6f39eedeee6733a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "predSpec eq eq_spec x y.",
                        "VernacExtend",
                        "820331c62ecbcb823d976fbb120ee032c5485e1b"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "elim H; subst y; apply xor_idem.",
                        "VernacExtend",
                        "d95a8ac07acfec429f5a4a1246c6cd98a4cef223"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "and_xor_distrib",
            "line_nb": 1770,
            "steps": [
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "assert (forall a b c, a && (xorb b c) = xorb (a && b) (a && c)) by destr_bool.",
                        "VernacExtend",
                        "5be60befc5a672ac8bc22920e5d13c8e54ab7f9f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "and_le",
            "line_nb": 1775,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply bits_le; intros.",
                        "VernacExtend",
                        "ed4de188cc3fe02fa48b479f915e5e236b120c2f"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_and in H0; auto.",
                        "VernacExtend",
                        "93369ebc41e5a2c68994ab844644a1cc9391adce"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_true_iff in H0.",
                        "VernacExtend",
                        "5b6d7f3e3b842bd9348eed5f95d5c2f291ddf286"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "or_le",
            "line_nb": 1782,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply bits_le; intros.",
                        "VernacExtend",
                        "ed4de188cc3fe02fa48b479f915e5e236b120c2f"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_or; auto.",
                        "VernacExtend",
                        "f825906d58bc4259d3a99e7adc9c4ffd5820c063"
                    ]
                },
                {
                    "command": [
                        "rewrite H0; auto.",
                        "VernacExtend",
                        "48df2b0b453adadcea8e6914bccb68bfc33b286b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_involutive",
            "line_nb": 1788,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold not.",
                        "VernacExtend",
                        "6c337369ba68753b2202c88d3c56bf02e1807b95"
                    ]
                },
                {
                    "command": [
                        "rewrite xor_assoc.",
                        "VernacExtend",
                        "a036f57e19de52ab695699cf4d714b4842aa7bb6"
                    ]
                },
                {
                    "command": [
                        "rewrite xor_idem.",
                        "VernacExtend",
                        "017e5ec48f75fe487eb8dd27ee9d8b63669e9c95"
                    ]
                },
                {
                    "command": [
                        "apply xor_zero.",
                        "VernacExtend",
                        "e734334fb5b575ecbd8f7a1548b8abb7ee09f8b4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_zero",
            "line_nb": 1795,
            "steps": [
                {
                    "command": [
                        "unfold not.",
                        "VernacExtend",
                        "6c337369ba68753b2202c88d3c56bf02e1807b95"
                    ]
                },
                {
                    "command": [
                        "rewrite xor_commut.",
                        "VernacExtend",
                        "ac3161d3090fececc9cb27dcdf3ae5f3b21813b5"
                    ]
                },
                {
                    "command": [
                        "apply xor_zero.",
                        "VernacExtend",
                        "e734334fb5b575ecbd8f7a1548b8abb7ee09f8b4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_mone",
            "line_nb": 1800,
            "steps": [
                {
                    "command": [
                        "rewrite <- (not_involutive zero).",
                        "VernacExtend",
                        "b840808382fc720ff88076f60ca0dc92184a9cb2"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "decEq.",
                        "VernacExtend",
                        "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
                    ]
                },
                {
                    "command": [
                        "apply not_zero.",
                        "VernacExtend",
                        "8a98393d604ffc04515e98387f46dd9ea082c47b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_or_and_not",
            "line_nb": 1806,
            "steps": [
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "apply negb_orb.",
                        "VernacExtend",
                        "080860e7f123bb04d7c638b450c0d9d8e9380ba7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_and_or_not",
            "line_nb": 1810,
            "steps": [
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "apply negb_andb.",
                        "VernacExtend",
                        "914c531c6ce8354cf3012942a40bdaaeae308700"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "and_not_self",
            "line_nb": 1814,
            "steps": [
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "or_not_self",
            "line_nb": 1817,
            "steps": [
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xor_not_self",
            "line_nb": 1820,
            "steps": [
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "destruct (testbit x i); auto.",
                        "VernacExtend",
                        "14ae4e0b13609c15898355f9aa7010474018f3e7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unsigned_not",
            "line_nb": 1824,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "transitivity (unsigned (repr(-unsigned x - 1))).",
                        "VernacExtend",
                        "49fc0ba01d41383f7365c313022d2dce3251e755"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "rewrite testbit_repr; auto.",
                        "VernacExtend",
                        "d20143ed773e39c9c2d38dc1a41b649eadbc95c6"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply Z_one_complement.",
                        "VernacExtend",
                        "d9e1cdfd6fb96ea97c044daf2bee58f193a1e240"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_repr_eq.",
                        "VernacExtend",
                        "4cdb0c1f390fe84b3a9c8bac49c0b5813452743a"
                    ]
                },
                {
                    "command": [
                        "apply Zmod_unique with (-1).",
                        "VernacExtend",
                        "9fbfa02026507947911435325d2aedbb9d4084b4"
                    ]
                },
                {
                    "command": [
                        "unfold max_unsigned.",
                        "VernacExtend",
                        "36f5add4f60c9b122a3b68fcbd2bef84e6e0d135"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "generalize (unsigned_range x).",
                        "VernacExtend",
                        "7892db8fc005b0cd4ce2d3aa05f16d9b6948c153"
                    ]
                },
                {
                    "command": [
                        "unfold max_unsigned.",
                        "VernacExtend",
                        "36f5add4f60c9b122a3b68fcbd2bef84e6e0d135"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_neg",
            "line_nb": 1841,
            "steps": [
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (repr_unsigned x) at 1.",
                        "VernacExtend",
                        "6e4513db39dea3249e7b467ccdea45363167be1b"
                    ]
                },
                {
                    "command": [
                        "unfold add.",
                        "VernacExtend",
                        "11cf98bf231f22df486b46b3b6a1c38a94e859dd"
                    ]
                },
                {
                    "command": [
                        "rewrite !testbit_repr; auto.",
                        "VernacExtend",
                        "ed03c006a62cc982ce1a4504966398fdfcfdcbc0"
                    ]
                },
                {
                    "command": [
                        "transitivity (Z.testbit (-unsigned x - 1) i).",
                        "VernacExtend",
                        "f42c8c71590788b85fb17f0d5ae7a451cfe2a185"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply Z_one_complement.",
                        "VernacExtend",
                        "d9e1cdfd6fb96ea97c044daf2bee58f193a1e240"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply same_bits_eqm; auto.",
                        "VernacExtend",
                        "898ef81bb7f934fa4641c3d860ccb00328ef7408"
                    ]
                },
                {
                    "command": [
                        "replace (-unsigned x - 1) with (-unsigned x + (-1)) by omega.",
                        "VernacExtend",
                        "6bd06c23dc486762515544bb2336475d9d6fcaaf"
                    ]
                },
                {
                    "command": [
                        "apply eqm_add.",
                        "VernacExtend",
                        "6c81c3e6c0a0d0574105329a31bbe3cdf542f623"
                    ]
                },
                {
                    "command": [
                        "unfold neg.",
                        "VernacExtend",
                        "c7932042fd728b6ba2d5f9ca45c06c287061699d"
                    ]
                },
                {
                    "command": [
                        "apply eqm_unsigned_repr.",
                        "VernacExtend",
                        "8083262b54f87caceff266da1e7020054aa5a39f"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_mone.",
                        "VernacExtend",
                        "8f638f66e0273f316077da6f32f87449b5bcaa54"
                    ]
                },
                {
                    "command": [
                        "exists (-1).",
                        "VernacExtend",
                        "10cfb9c5f69f349790dc8e74c7e676b4b9d8ae27"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "neg_not",
            "line_nb": 1859,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite not_neg.",
                        "VernacExtend",
                        "767ba678e03a71bacf026ff40aac65578929987f"
                    ]
                },
                {
                    "command": [
                        "rewrite add_assoc.",
                        "VernacExtend",
                        "ad3a5a815f5c731ca973b85c3a98fab1355860f5"
                    ]
                },
                {
                    "command": [
                        "replace (add mone one) with zero.",
                        "VernacExtend",
                        "fddb95ebcff8fddcf45b88af3c2ead8e1d75a6b7"
                    ]
                },
                {
                    "command": [
                        "rewrite add_zero.",
                        "VernacExtend",
                        "f974590c4d53784eabf879b1edac80b48dd263f7"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply eqm_samerepr.",
                        "VernacExtend",
                        "2226a5674ed5a7db984e878fdbb37775ca665295"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_mone.",
                        "VernacExtend",
                        "8f638f66e0273f316077da6f32f87449b5bcaa54"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_one.",
                        "VernacExtend",
                        "52f1cc9e4b7b0a3b7c37f5e9a1a6c514d4cb1683"
                    ]
                },
                {
                    "command": [
                        "exists (-1).",
                        "VernacExtend",
                        "10cfb9c5f69f349790dc8e74c7e676b4b9d8ae27"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_add_not",
            "line_nb": 1872,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite sub_add_opp.",
                        "VernacExtend",
                        "149aee86536ad4266b276b48c48fc771f09f2ae7"
                    ]
                },
                {
                    "command": [
                        "rewrite neg_not.",
                        "VernacExtend",
                        "9540601a34b6c5e9c3cffb1527fead02ab9a69c7"
                    ]
                },
                {
                    "command": [
                        "rewrite ! add_assoc.",
                        "VernacExtend",
                        "8d08d7c6c8b8935df99691a18a48ba7a4c3e128d"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_add_not_3",
            "line_nb": 1879,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite ! sub_add_not.",
                        "VernacExtend",
                        "9621d68d17169c58dc7530eaee802a19aff4a1eb"
                    ]
                },
                {
                    "command": [
                        "rewrite ! add_assoc.",
                        "VernacExtend",
                        "8d08d7c6c8b8935df99691a18a48ba7a4c3e128d"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite <- neg_not.",
                        "VernacExtend",
                        "4bdb8b26d3e2cf2d6fe0de908d509e8606786d14"
                    ]
                },
                {
                    "command": [
                        "rewrite <- sub_add_opp.",
                        "VernacExtend",
                        "b3dae747ff0e663e20c7be0f3203ec49a4e66b10"
                    ]
                },
                {
                    "command": [
                        "destruct H; subst b.",
                        "VernacExtend",
                        "fe4da5c6b64f69b498e4d6a09edf54de13adac43"
                    ]
                },
                {
                    "command": [
                        "rewrite xor_zero_l.",
                        "VernacExtend",
                        "c684d7ce820c49253c833022478df7de4b696326"
                    ]
                },
                {
                    "command": [
                        "rewrite sub_zero_l.",
                        "VernacExtend",
                        "9d4df09d1c104770e78c1d21b6dc274cc89866d5"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite xor_idem.",
                        "VernacExtend",
                        "017e5ec48f75fe487eb8dd27ee9d8b63669e9c95"
                    ]
                },
                {
                    "command": [
                        "rewrite sub_idem.",
                        "VernacExtend",
                        "74b97c28b775af06a38fa8c8173c0bac7b76d296"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_borrow_add_carry",
            "line_nb": 1895,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold sub_borrow, add_carry.",
                        "VernacExtend",
                        "09d2aad94cb50bdd80a23ed57c986ab7d32e8460"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_not.",
                        "VernacExtend",
                        "bd0211f4b694fa621cb7343ad15dc35495a5f320"
                    ]
                },
                {
                    "command": [
                        "replace (unsigned (xor b one)) with (1 - unsigned b).",
                        "VernacExtend",
                        "cddb098de75f94483fc6f14a5c1f265829b8be79"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (unsigned x - unsigned y - unsigned b)).",
                        "VernacExtend",
                        "98b532009bc843c0bf94a67818876ca945e494c9"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true.",
                        "VernacExtend",
                        "b49135e183425368b4318af106711c28871bcc77"
                    ]
                },
                {
                    "command": [
                        "rewrite xor_zero_l; auto.",
                        "VernacExtend",
                        "ed1c46e3c910ac645b409d7030e3deaade0dbe6c"
                    ]
                },
                {
                    "command": [
                        "unfold max_unsigned; omega.",
                        "VernacExtend",
                        "8050b2acbf1f11f7b1479a8f25e2549120cc659f"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false.",
                        "VernacExtend",
                        "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
                    ]
                },
                {
                    "command": [
                        "rewrite xor_idem; auto.",
                        "VernacExtend",
                        "c6ab6c46f604a11c15fcd77be229870846b9b1c7"
                    ]
                },
                {
                    "command": [
                        "unfold max_unsigned; omega.",
                        "VernacExtend",
                        "8050b2acbf1f11f7b1479a8f25e2549120cc659f"
                    ]
                },
                {
                    "command": [
                        "destruct H; subst b.",
                        "VernacExtend",
                        "fe4da5c6b64f69b498e4d6a09edf54de13adac43"
                    ]
                },
                {
                    "command": [
                        "rewrite xor_zero_l.",
                        "VernacExtend",
                        "c684d7ce820c49253c833022478df7de4b696326"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_one, unsigned_zero; auto.",
                        "VernacExtend",
                        "515741703c10316b2bfb4ff87a20ee3f75dee1de"
                    ]
                },
                {
                    "command": [
                        "rewrite xor_idem.",
                        "VernacExtend",
                        "017e5ec48f75fe487eb8dd27ee9d8b63669e9c95"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_one, unsigned_zero; auto.",
                        "VernacExtend",
                        "515741703c10316b2bfb4ff87a20ee3f75dee1de"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_is_or",
            "line_nb": 1946,
            "steps": [
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "unfold add.",
                        "VernacExtend",
                        "11cf98bf231f22df486b46b3b6a1c38a94e859dd"
                    ]
                },
                {
                    "command": [
                        "rewrite testbit_repr; auto.",
                        "VernacExtend",
                        "d20143ed773e39c9c2d38dc1a41b649eadbc95c6"
                    ]
                },
                {
                    "command": [
                        "apply Z_add_is_or.",
                        "VernacExtend",
                        "6ca340efc7df23eb99081796bc43e39d6a74f900"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (testbit (and x y) j = testbit zero j) by congruence.",
                        "VernacExtend",
                        "c0e05d2974dc8978ad974f14d530d33a16b52021"
                    ]
                },
                {
                    "command": [
                        "autorewrite with ints in H2.",
                        "VernacExtend",
                        "6a54b4d1ab7c76480828237ba209066524529411"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xor_is_or",
            "line_nb": 1958,
            "steps": [
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "assert (testbit (and x y) i = testbit zero i) by congruence.",
                        "VernacExtend",
                        "32bb05fad7115f1651a9f42d7c82f01a09e2dcca"
                    ]
                },
                {
                    "command": [
                        "autorewrite with ints in H1; auto.",
                        "VernacExtend",
                        "310850364021b15a924922dfeb4eae741644b131"
                    ]
                },
                {
                    "command": [
                        "destruct (testbit x i); destruct (testbit y i); simpl in *; congruence.",
                        "VernacExtend",
                        "3a1092b9ee68e87081d8fc8d2550d1523ae539ef"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_is_xor",
            "line_nb": 1964,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite xor_is_or; auto.",
                        "VernacExtend",
                        "4e68ad362e754d0c869a663f7e035de06c108cec"
                    ]
                },
                {
                    "command": [
                        "apply add_is_or; auto.",
                        "VernacExtend",
                        "89af6eb98d0f78245994c0672986121642687fcb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_and",
            "line_nb": 1969,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite add_is_or.",
                        "VernacExtend",
                        "ac866ecb578700d9e3e43c1730881642f3343556"
                    ]
                },
                {
                    "command": [
                        "rewrite and_or_distrib; auto.",
                        "VernacExtend",
                        "245616068a10eb20bb93acfb396f3ee42a2e4d51"
                    ]
                },
                {
                    "command": [
                        "rewrite (and_commut x y).",
                        "VernacExtend",
                        "52dd98f77d0938a99aec0723a4924da3967466ac"
                    ]
                },
                {
                    "command": [
                        "rewrite and_assoc.",
                        "VernacExtend",
                        "62a08aa2ddd81c637f08d9fda9e004ce7b188a4b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- (and_assoc x).",
                        "VernacExtend",
                        "fc82b02766d847dc481b009e909aa61b5164165a"
                    ]
                },
                {
                    "command": [
                        "rewrite (and_commut (and x x)).",
                        "VernacExtend",
                        "ba78f21ef1c8aa1967ecf6a133469aff25ab35df"
                    ]
                },
                {
                    "command": [
                        "rewrite <- and_assoc.",
                        "VernacExtend",
                        "fadebad2e38f5a2a9adcca4f7a974a9fcc270595"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "rewrite and_commut.",
                        "VernacExtend",
                        "b10a32c5381ffe79399fa5b6823f886c3c37781f"
                    ]
                },
                {
                    "command": [
                        "apply and_zero.",
                        "VernacExtend",
                        "44206f74dc8d718354f02e6cd0d98255639e390f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bits_shl",
            "line_nb": 1982,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold shl.",
                        "VernacExtend",
                        "d933b5e131ce79e2821341c8f63e07a70ac2e1a0"
                    ]
                },
                {
                    "command": [
                        "rewrite testbit_repr; auto.",
                        "VernacExtend",
                        "d20143ed773e39c9c2d38dc1a41b649eadbc95c6"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i (unsigned y)).",
                        "VernacExtend",
                        "8ff4ce42ea7d05abc2f401d4fbe4284897679fa9"
                    ]
                },
                {
                    "command": [
                        "apply Z.shiftl_spec_low.",
                        "VernacExtend",
                        "c3b358c742be3eb903da98ae78625599b3c5305a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply Z.shiftl_spec_high.",
                        "VernacExtend",
                        "7bc7482bd58465bc21f5a7184ed17e365f00da26"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bits_shru",
            "line_nb": 1993,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold shru.",
                        "VernacExtend",
                        "6bc2eec5ac24b3d88f131d79dde21420cba5c4be"
                    ]
                },
                {
                    "command": [
                        "rewrite testbit_repr; auto.",
                        "VernacExtend",
                        "d20143ed773e39c9c2d38dc1a41b649eadbc95c6"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.shiftr_spec.",
                        "VernacExtend",
                        "80c165d6ba099c7565e4b5045695449745807abf"
                    ]
                },
                {
                    "command": [
                        "fold (testbit x (i + unsigned y)).",
                        "VernacExtend",
                        "3d2f4914e1e7d295778a440c1522c70bef8d9be0"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (i + unsigned y) zwordsize).",
                        "VernacExtend",
                        "28d16ad0f4748b9129aacbe67806f56def762abf"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply bits_above; auto.",
                        "VernacExtend",
                        "68e2d5a5c1b1136e70a4ff0724963c782e3c6d9e"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bits_shr",
            "line_nb": 2004,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold shr.",
                        "VernacExtend",
                        "b0785b9ec45cd18cb02fe6ea9a4f119054b99009"
                    ]
                },
                {
                    "command": [
                        "rewrite testbit_repr; auto.",
                        "VernacExtend",
                        "d20143ed773e39c9c2d38dc1a41b649eadbc95c6"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.shiftr_spec.",
                        "VernacExtend",
                        "80c165d6ba099c7565e4b5045695449745807abf"
                    ]
                },
                {
                    "command": [
                        "apply bits_signed.",
                        "VernacExtend",
                        "56f1ed558ed74d0eda0686b72cf662783fdfc9be"
                    ]
                },
                {
                    "command": [
                        "generalize (unsigned_range y); omega.",
                        "VernacExtend",
                        "42fda19b1742db2649f926c7d3bceaa4596993b0"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shl_zero",
            "line_nb": 2014,
            "steps": [
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_zero.",
                        "VernacExtend",
                        "89956b9f461b9934c8fa99e6e63074f0275efcae"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false.",
                        "VernacExtend",
                        "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
                    ]
                },
                {
                    "command": [
                        "f_equal; omega.",
                        "VernacExtend",
                        "3b812353131f9b9bebbd6410b3fa7c9d2e597ec3"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bitwise_binop_shl",
            "line_nb": 2021,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply same_bits_eq; intros.",
                        "VernacExtend",
                        "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
                    ]
                },
                {
                    "command": [
                        "rewrite H; auto.",
                        "VernacExtend",
                        "3e25713af8eaa76cddf9287af10d66733da2ee16"
                    ]
                },
                {
                    "command": [
                        "rewrite !bits_shl; auto.",
                        "VernacExtend",
                        "2451fc6228943a073a46233a3a7d04d4a305320d"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i (unsigned n)); auto.",
                        "VernacExtend",
                        "727ee4b681da638ffdafc311614e3ac04c218889"
                    ]
                },
                {
                    "command": [
                        "rewrite H; auto.",
                        "VernacExtend",
                        "3e25713af8eaa76cddf9287af10d66733da2ee16"
                    ]
                },
                {
                    "command": [
                        "generalize (unsigned_range n); omega.",
                        "VernacExtend",
                        "12c3457282dddbb4df81d1e34b8796753589dfa6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "and_shl",
            "line_nb": 2030,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply bitwise_binop_shl with andb.",
                        "VernacExtend",
                        "f487b88701b4590041afbadabe1ccb1aa5e2873e"
                    ]
                },
                {
                    "command": [
                        "exact bits_and.",
                        "VernacExtend",
                        "207bfd0e3a5029422d3eb0c47e1a67f65bd16588"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "or_shl",
            "line_nb": 2036,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply bitwise_binop_shl with orb.",
                        "VernacExtend",
                        "2286752a5e2eb9ce4c7a4990096385163ffbd317"
                    ]
                },
                {
                    "command": [
                        "exact bits_or.",
                        "VernacExtend",
                        "62259bfc6df42cd2df27ebf4ca0f7c291f977bdb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xor_shl",
            "line_nb": 2042,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply bitwise_binop_shl with xorb.",
                        "VernacExtend",
                        "539770f8f2a4bf99a712904ab824041bbf52ed2d"
                    ]
                },
                {
                    "command": [
                        "exact bits_xor.",
                        "VernacExtend",
                        "eb517663224a45ead53e886c70aa04ae25aadecc"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltu_inv",
            "line_nb": 2048,
            "steps": [
                {
                    "command": [
                        "unfold ltu; intros.",
                        "VernacExtend",
                        "9368dcfe020012ed33721d5b7f15dafc7884ef24"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (unsigned x) (unsigned y)).",
                        "VernacExtend",
                        "7d750880a5227f6d96d309aa51c5d6072d28d668"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "generalize (unsigned_range x); omega.",
                        "VernacExtend",
                        "82d43e79c3776eb155d8ee4a39923b4051549c3b"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltu_iwordsize_inv",
            "line_nb": 2055,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (ltu_inv _ _ H).",
                        "VernacExtend",
                        "7b58a295ab1791d1e4a443703f076aec968a783c"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_repr_wordsize.",
                        "VernacExtend",
                        "68bf2f65418d45548a5d1a5f941d2ad54148206b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shl_shl",
            "line_nb": 2061,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (ltu_iwordsize_inv _ H) (ltu_iwordsize_inv _ H0); intros.",
                        "VernacExtend",
                        "addc275edaa6d82f262a39539f4be82df5a8b3ba"
                    ]
                },
                {
                    "command": [
                        "assert (unsigned (add y z) = unsigned y + unsigned z).",
                        "VernacExtend",
                        "b4585325a58ffdf43e37379fcbedfdfc68962b51"
                    ]
                },
                {
                    "command": [
                        "unfold add.",
                        "VernacExtend",
                        "11cf98bf231f22df486b46b3b6a1c38a94e859dd"
                    ]
                },
                {
                    "command": [
                        "apply unsigned_repr.",
                        "VernacExtend",
                        "cbb55125b21da3156cf49c45f71d95a6743593f6"
                    ]
                },
                {
                    "command": [
                        "generalize two_wordsize_max_unsigned; omega.",
                        "VernacExtend",
                        "1867487a3ccf1d446bc1323a988de67b70f3fb3a"
                    ]
                },
                {
                    "command": [
                        "apply same_bits_eq; intros.",
                        "VernacExtend",
                        "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_shl; auto.",
                        "VernacExtend",
                        "8ceddad9fb2f5a1a90d3d6f9fde9ccf26e61696f"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i (unsigned z)).",
                        "VernacExtend",
                        "8c91e70922899b4ee428d5a1643d281b51400371"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_shl; auto.",
                        "VernacExtend",
                        "8ceddad9fb2f5a1a90d3d6f9fde9ccf26e61696f"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true.",
                        "VernacExtend",
                        "b49135e183425368b4318af106711c28871bcc77"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_shl.",
                        "VernacExtend",
                        "a0e1637f702fc4b84135a3530c9ecde2820a246f"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (i - unsigned z) (unsigned y)).",
                        "VernacExtend",
                        "802b0cb2fa9de3894986c443497cd0a730c6a2e9"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_shl; auto.",
                        "VernacExtend",
                        "8ceddad9fb2f5a1a90d3d6f9fde9ccf26e61696f"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true.",
                        "VernacExtend",
                        "b49135e183425368b4318af106711c28871bcc77"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_shl; auto.",
                        "VernacExtend",
                        "8ceddad9fb2f5a1a90d3d6f9fde9ccf26e61696f"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false.",
                        "VernacExtend",
                        "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_ltu",
            "line_nb": 2093,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (ltu_inv x y H).",
                        "VernacExtend",
                        "1fec4063df48fed179b0234f07e4fa6d8e9030d7"
                    ]
                },
                {
                    "command": [
                        "intros .",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shru_zero",
            "line_nb": 2101,
            "steps": [
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_zero.",
                        "VernacExtend",
                        "89956b9f461b9934c8fa99e6e63074f0275efcae"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true.",
                        "VernacExtend",
                        "b49135e183425368b4318af106711c28871bcc77"
                    ]
                },
                {
                    "command": [
                        "f_equal; omega.",
                        "VernacExtend",
                        "3b812353131f9b9bebbd6410b3fa7c9d2e597ec3"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bitwise_binop_shru",
            "line_nb": 2108,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply same_bits_eq; intros.",
                        "VernacExtend",
                        "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
                    ]
                },
                {
                    "command": [
                        "rewrite H; auto.",
                        "VernacExtend",
                        "3e25713af8eaa76cddf9287af10d66733da2ee16"
                    ]
                },
                {
                    "command": [
                        "rewrite !bits_shru; auto.",
                        "VernacExtend",
                        "0bf1d6a080c06fd32b82ec620db4e1a68e5495d1"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (i + unsigned n) zwordsize); auto.",
                        "VernacExtend",
                        "7d1f2b17399b8c3fbde429758727fa5d4792aad7"
                    ]
                },
                {
                    "command": [
                        "rewrite H; auto.",
                        "VernacExtend",
                        "3e25713af8eaa76cddf9287af10d66733da2ee16"
                    ]
                },
                {
                    "command": [
                        "generalize (unsigned_range n); omega.",
                        "VernacExtend",
                        "12c3457282dddbb4df81d1e34b8796753589dfa6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "and_shru",
            "line_nb": 2117,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply bitwise_binop_shru with andb; auto.",
                        "VernacExtend",
                        "1218295428d585db68958d3c76f2bc1938c29d0d"
                    ]
                },
                {
                    "command": [
                        "exact bits_and.",
                        "VernacExtend",
                        "207bfd0e3a5029422d3eb0c47e1a67f65bd16588"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "or_shru",
            "line_nb": 2122,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply bitwise_binop_shru with orb; auto.",
                        "VernacExtend",
                        "b5ccb4082f658038abbc443f5c09dce002d11872"
                    ]
                },
                {
                    "command": [
                        "exact bits_or.",
                        "VernacExtend",
                        "62259bfc6df42cd2df27ebf4ca0f7c291f977bdb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xor_shru",
            "line_nb": 2127,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply bitwise_binop_shru with xorb; auto.",
                        "VernacExtend",
                        "4b9dabefaecc939afa27d2d3cc222886e1096f86"
                    ]
                },
                {
                    "command": [
                        "exact bits_xor.",
                        "VernacExtend",
                        "eb517663224a45ead53e886c70aa04ae25aadecc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shru_shru",
            "line_nb": 2132,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (ltu_iwordsize_inv _ H) (ltu_iwordsize_inv _ H0); intros.",
                        "VernacExtend",
                        "addc275edaa6d82f262a39539f4be82df5a8b3ba"
                    ]
                },
                {
                    "command": [
                        "assert (unsigned (add y z) = unsigned y + unsigned z).",
                        "VernacExtend",
                        "b4585325a58ffdf43e37379fcbedfdfc68962b51"
                    ]
                },
                {
                    "command": [
                        "unfold add.",
                        "VernacExtend",
                        "11cf98bf231f22df486b46b3b6a1c38a94e859dd"
                    ]
                },
                {
                    "command": [
                        "apply unsigned_repr.",
                        "VernacExtend",
                        "cbb55125b21da3156cf49c45f71d95a6743593f6"
                    ]
                },
                {
                    "command": [
                        "generalize two_wordsize_max_unsigned; omega.",
                        "VernacExtend",
                        "1867487a3ccf1d446bc1323a988de67b70f3fb3a"
                    ]
                },
                {
                    "command": [
                        "apply same_bits_eq; intros.",
                        "VernacExtend",
                        "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_shru; auto.",
                        "VernacExtend",
                        "c4c629df9cf060299ef7b4c0d8265d9d79a27d30"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (i + unsigned z) zwordsize).",
                        "VernacExtend",
                        "1d6d3028ce894238284d243ac77df669887c4ee0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_shru.",
                        "VernacExtend",
                        "a63a609db343946cb726afaf3c287b7802ce80be"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (i + unsigned z + unsigned y) zwordsize).",
                        "VernacExtend",
                        "d454c6b474e8ba94c557e47b59ea6bade276bf68"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_shru; auto.",
                        "VernacExtend",
                        "c4c629df9cf060299ef7b4c0d8265d9d79a27d30"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true.",
                        "VernacExtend",
                        "b49135e183425368b4318af106711c28871bcc77"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_shru; auto.",
                        "VernacExtend",
                        "c4c629df9cf060299ef7b4c0d8265d9d79a27d30"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false.",
                        "VernacExtend",
                        "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_shru; auto.",
                        "VernacExtend",
                        "c4c629df9cf060299ef7b4c0d8265d9d79a27d30"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false.",
                        "VernacExtend",
                        "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shr_zero",
            "line_nb": 2164,
            "steps": [
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_zero.",
                        "VernacExtend",
                        "89956b9f461b9934c8fa99e6e63074f0275efcae"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true.",
                        "VernacExtend",
                        "b49135e183425368b4318af106711c28871bcc77"
                    ]
                },
                {
                    "command": [
                        "f_equal; omega.",
                        "VernacExtend",
                        "3b812353131f9b9bebbd6410b3fa7c9d2e597ec3"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bitwise_binop_shr",
            "line_nb": 2171,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply same_bits_eq; intros.",
                        "VernacExtend",
                        "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
                    ]
                },
                {
                    "command": [
                        "rewrite H; auto.",
                        "VernacExtend",
                        "3e25713af8eaa76cddf9287af10d66733da2ee16"
                    ]
                },
                {
                    "command": [
                        "rewrite !bits_shr; auto.",
                        "VernacExtend",
                        "46ac122c98a59a7d1a19cef74d06542a59c1713f"
                    ]
                },
                {
                    "command": [
                        "rewrite H; auto.",
                        "VernacExtend",
                        "3e25713af8eaa76cddf9287af10d66733da2ee16"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (i + unsigned n) zwordsize).",
                        "VernacExtend",
                        "657a8c30a7dadb4652dc432a6563bfddcb185e7d"
                    ]
                },
                {
                    "command": [
                        "generalize (unsigned_range n); omega.",
                        "VernacExtend",
                        "12c3457282dddbb4df81d1e34b8796753589dfa6"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "and_shr",
            "line_nb": 2181,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply bitwise_binop_shr with andb.",
                        "VernacExtend",
                        "c3178823072546ac06c55b30f0792db622e82fc0"
                    ]
                },
                {
                    "command": [
                        "exact bits_and.",
                        "VernacExtend",
                        "207bfd0e3a5029422d3eb0c47e1a67f65bd16588"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "or_shr",
            "line_nb": 2186,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply bitwise_binop_shr with orb.",
                        "VernacExtend",
                        "f17927d6535df22c83764061871abe04d68f0415"
                    ]
                },
                {
                    "command": [
                        "exact bits_or.",
                        "VernacExtend",
                        "62259bfc6df42cd2df27ebf4ca0f7c291f977bdb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xor_shr",
            "line_nb": 2191,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply bitwise_binop_shr with xorb.",
                        "VernacExtend",
                        "88e974e8674cdb84615faf980a85436234a42da9"
                    ]
                },
                {
                    "command": [
                        "exact bits_xor.",
                        "VernacExtend",
                        "eb517663224a45ead53e886c70aa04ae25aadecc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shr_shr",
            "line_nb": 2196,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (ltu_iwordsize_inv _ H) (ltu_iwordsize_inv _ H0); intros.",
                        "VernacExtend",
                        "addc275edaa6d82f262a39539f4be82df5a8b3ba"
                    ]
                },
                {
                    "command": [
                        "assert (unsigned (add y z) = unsigned y + unsigned z).",
                        "VernacExtend",
                        "b4585325a58ffdf43e37379fcbedfdfc68962b51"
                    ]
                },
                {
                    "command": [
                        "unfold add.",
                        "VernacExtend",
                        "11cf98bf231f22df486b46b3b6a1c38a94e859dd"
                    ]
                },
                {
                    "command": [
                        "apply unsigned_repr.",
                        "VernacExtend",
                        "cbb55125b21da3156cf49c45f71d95a6743593f6"
                    ]
                },
                {
                    "command": [
                        "generalize two_wordsize_max_unsigned; omega.",
                        "VernacExtend",
                        "1867487a3ccf1d446bc1323a988de67b70f3fb3a"
                    ]
                },
                {
                    "command": [
                        "apply same_bits_eq; intros.",
                        "VernacExtend",
                        "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
                    ]
                },
                {
                    "command": [
                        "rewrite !bits_shr; auto.",
                        "VernacExtend",
                        "46ac122c98a59a7d1a19cef74d06542a59c1713f"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (i + unsigned z) zwordsize).",
                        "VernacExtend",
                        "1d6d3028ce894238284d243ac77df669887c4ee0"
                    ]
                },
                {
                    "command": [
                        "rewrite H4.",
                        "VernacExtend",
                        "fc5d011df68f7160e4669d129d2975825ac089bb"
                    ]
                },
                {
                    "command": [
                        "replace (i + (unsigned y + unsigned z)) with (i + unsigned z + unsigned y) by omega.",
                        "VernacExtend",
                        "762a2c4ba16f544707b07943fe18e2d7071f8f23"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite (zlt_false _ (i + unsigned (add y z))).",
                        "VernacExtend",
                        "da808160868cce139f065cf8356a9e72ad1ef4ee"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (zwordsize - 1 + unsigned y) zwordsize); omega.",
                        "VernacExtend",
                        "988ed273b2ecba8c8aba00a47d1f0704cd2b4cdc"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (i + unsigned z) zwordsize); omega.",
                        "VernacExtend",
                        "75a94238b0419f3267ffcb55f3298207698f7cd4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "and_shr_shru",
            "line_nb": 2215,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply same_bits_eq; intros.",
                        "VernacExtend",
                        "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_and; auto.",
                        "VernacExtend",
                        "ebb7cb503b8fdcd326d9062c755d67707c1d2e79"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_shr; auto.",
                        "VernacExtend",
                        "46a4f6a2843486202c3e28200045f786c7aa06e8"
                    ]
                },
                {
                    "command": [
                        "rewrite !bits_shru; auto.",
                        "VernacExtend",
                        "0bf1d6a080c06fd32b82ec620db4e1a68e5495d1"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (i + unsigned z) zwordsize).",
                        "VernacExtend",
                        "1d6d3028ce894238284d243ac77df669887c4ee0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_and; auto.",
                        "VernacExtend",
                        "ebb7cb503b8fdcd326d9062c755d67707c1d2e79"
                    ]
                },
                {
                    "command": [
                        "generalize (unsigned_range z); omega.",
                        "VernacExtend",
                        "a39b948df5a537a672106cebebf3ba236cd83c15"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply andb_false_r.",
                        "VernacExtend",
                        "96acabd8a60f7c2e82c0ec27c34e893436485a16"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shr_and_shru_and",
            "line_nb": 2228,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "rewrite and_shru.",
                        "VernacExtend",
                        "29d26fa414338db28a63991e95f4e0e4a8a971a2"
                    ]
                },
                {
                    "command": [
                        "rewrite and_shr_shru.",
                        "VernacExtend",
                        "dca51a2be657d5836f70f8e0f52f0edcae99c6a5"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shru_lt_zero",
            "line_nb": 2235,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply same_bits_eq; intros.",
                        "VernacExtend",
                        "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_shru; auto.",
                        "VernacExtend",
                        "c4c629df9cf060299ef7b4c0d8265d9d79a27d30"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_repr.",
                        "VernacExtend",
                        "5134990e153a3f2ce893c9ea9837f183c322ceb2"
                    ]
                },
                {
                    "command": [
                        "destruct (zeq i 0).",
                        "VernacExtend",
                        "d84935205e6f3de20c609dbacd0c5438037a33e9"
                    ]
                },
                {
                    "command": [
                        "subst i.",
                        "VernacExtend",
                        "8a51b06e94f64277663e0022260aa1e58bff437c"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.add_0_l.",
                        "VernacExtend",
                        "44f25f9f1c5a6e47f391f3c0a94821844d59e729"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true.",
                        "VernacExtend",
                        "b49135e183425368b4318af106711c28871bcc77"
                    ]
                },
                {
                    "command": [
                        "rewrite sign_bit_of_unsigned.",
                        "VernacExtend",
                        "6cd437092de47964ce76741c43d81f13650dde7b"
                    ]
                },
                {
                    "command": [
                        "unfold lt.",
                        "VernacExtend",
                        "2e821d407c03d5f5e572c51453fdc618d9dec364"
                    ]
                },
                {
                    "command": [
                        "rewrite signed_zero.",
                        "VernacExtend",
                        "19d56ca0cd36da40c29724bb93cb20d76340e45c"
                    ]
                },
                {
                    "command": [
                        "unfold signed.",
                        "VernacExtend",
                        "f99b13683b7fbccb713276bdf12a56c47fabc924"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (unsigned x) half_modulus).",
                        "VernacExtend",
                        "96100f79c30f7c1ed7c9d19caec035348a472e2e"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false.",
                        "VernacExtend",
                        "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "generalize (unsigned_range x); omega.",
                        "VernacExtend",
                        "82d43e79c3776eb155d8ee4a39923b4051549c3b"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true.",
                        "VernacExtend",
                        "b49135e183425368b4318af106711c28871bcc77"
                    ]
                },
                {
                    "command": [
                        "unfold one; rewrite testbit_repr; auto.",
                        "VernacExtend",
                        "32e2187d8e5a5ff4cd4f491394ec1c4c6a6a2808"
                    ]
                },
                {
                    "command": [
                        "generalize (unsigned_range x); omega.",
                        "VernacExtend",
                        "82d43e79c3776eb155d8ee4a39923b4051549c3b"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false.",
                        "VernacExtend",
                        "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
                    ]
                },
                {
                    "command": [
                        "unfold testbit.",
                        "VernacExtend",
                        "14f68f27aaaec42f64d3a8f3009fc6eaa35592a6"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztestbit_eq.",
                        "VernacExtend",
                        "cc27e9791667c9a7f1466faf67869f938d5d405a"
                    ]
                },
                {
                    "command": [
                        "rewrite zeq_false.",
                        "VernacExtend",
                        "dab8f9109b7a6d08485a19d2b305200449ea8478"
                    ]
                },
                {
                    "command": [
                        "destruct (lt x zero).",
                        "VernacExtend",
                        "56431311febe9c755a97db275e2484cffe963341"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_one.",
                        "VernacExtend",
                        "52f1cc9e4b7b0a3b7c37f5e9a1a6c514d4cb1683"
                    ]
                },
                {
                    "command": [
                        "simpl Z.div2.",
                        "VernacExtend",
                        "97548dec0e2026996bb0eaad0c2289dd70b95681"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.testbit_0_l; auto.",
                        "VernacExtend",
                        "b6110e289d3c1f2e6ec50f3547ced256074b22df"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_zero.",
                        "VernacExtend",
                        "89956b9f461b9934c8fa99e6e63074f0275efcae"
                    ]
                },
                {
                    "command": [
                        "simpl Z.div2.",
                        "VernacExtend",
                        "97548dec0e2026996bb0eaad0c2289dd70b95681"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.testbit_0_l; auto.",
                        "VernacExtend",
                        "b6110e289d3c1f2e6ec50f3547ced256074b22df"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "generalize wordsize_max_unsigned; omega.",
                        "VernacExtend",
                        "3f1b96d7bb5d8b56488da98617ce0a4bf6d89d59"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shr_lt_zero",
            "line_nb": 2272,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply same_bits_eq; intros.",
                        "VernacExtend",
                        "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_shr; auto.",
                        "VernacExtend",
                        "46a4f6a2843486202c3e28200045f786c7aa06e8"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_repr.",
                        "VernacExtend",
                        "5134990e153a3f2ce893c9ea9837f183c322ceb2"
                    ]
                },
                {
                    "command": [
                        "transitivity (testbit x (zwordsize - 1)).",
                        "VernacExtend",
                        "645b561d72a8ae655dfe26d3f1cbab502e43128f"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (i + (zwordsize - 1)) zwordsize); omega.",
                        "VernacExtend",
                        "96fc6b1d7d6c17e6e5df4e3cf63750f5b5ed7306"
                    ]
                },
                {
                    "command": [
                        "rewrite sign_bit_of_unsigned.",
                        "VernacExtend",
                        "6cd437092de47964ce76741c43d81f13650dde7b"
                    ]
                },
                {
                    "command": [
                        "unfold lt.",
                        "VernacExtend",
                        "2e821d407c03d5f5e572c51453fdc618d9dec364"
                    ]
                },
                {
                    "command": [
                        "rewrite signed_zero.",
                        "VernacExtend",
                        "19d56ca0cd36da40c29724bb93cb20d76340e45c"
                    ]
                },
                {
                    "command": [
                        "unfold signed.",
                        "VernacExtend",
                        "f99b13683b7fbccb713276bdf12a56c47fabc924"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (unsigned x) half_modulus).",
                        "VernacExtend",
                        "96100f79c30f7c1ed7c9d19caec035348a472e2e"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false.",
                        "VernacExtend",
                        "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_zero; auto.",
                        "VernacExtend",
                        "0193d46f7daae040537e7ce3218d8709b2a62cbb"
                    ]
                },
                {
                    "command": [
                        "generalize (unsigned_range x); omega.",
                        "VernacExtend",
                        "82d43e79c3776eb155d8ee4a39923b4051549c3b"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true.",
                        "VernacExtend",
                        "b49135e183425368b4318af106711c28871bcc77"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_mone; auto.",
                        "VernacExtend",
                        "65db6e3a47425ff5b36895a38f5378183c298773"
                    ]
                },
                {
                    "command": [
                        "generalize (unsigned_range x); omega.",
                        "VernacExtend",
                        "82d43e79c3776eb155d8ee4a39923b4051549c3b"
                    ]
                },
                {
                    "command": [
                        "generalize wordsize_max_unsigned; omega.",
                        "VernacExtend",
                        "3f1b96d7bb5d8b56488da98617ce0a4bf6d89d59"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shl_rolm",
            "line_nb": 2381,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (ltu_inv _ _ H).",
                        "VernacExtend",
                        "7b58a295ab1791d1e4a443703f076aec968a783c"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_repr_wordsize; intros.",
                        "VernacExtend",
                        "63ceff6946be78ac54a2ccaa15636254eb1b914d"
                    ]
                },
                {
                    "command": [
                        "unfold rolm.",
                        "VernacExtend",
                        "14eec38d3d18613e2564fccd9e38bfe653630dc5"
                    ]
                },
                {
                    "command": [
                        "apply same_bits_eq; intros.",
                        "VernacExtend",
                        "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_and; auto.",
                        "VernacExtend",
                        "ebb7cb503b8fdcd326d9062c755d67707c1d2e79"
                    ]
                },
                {
                    "command": [
                        "rewrite !bits_shl; auto.",
                        "VernacExtend",
                        "2451fc6228943a073a46233a3a7d04d4a305320d"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_rol; auto.",
                        "VernacExtend",
                        "a761e8903abbd476678659101b981eb11a60acac"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i (unsigned n)).",
                        "VernacExtend",
                        "1537577fe05b4da7a891e35ff7a8c5be65e5cc7b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_false_r; auto.",
                        "VernacExtend",
                        "0597380d3b8c5004f944d81b561ad8146e321614"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "generalize (unsigned_range n); intros.",
                        "VernacExtend",
                        "41156d8d04a6b3912e820f99d34a420137a264d3"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_mone.",
                        "VernacExtend",
                        "6ea2d675b787ca145f8429763e80f04fcc6043ef"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_true_r.",
                        "VernacExtend",
                        "230918acbe37788580429f7b57db0df199d9fbfd"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply Zmod_small.",
                        "VernacExtend",
                        "439f7572e12963e1685c905bb39e49700a5d1e32"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shru_rolm",
            "line_nb": 2403,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (ltu_inv _ _ H).",
                        "VernacExtend",
                        "7b58a295ab1791d1e4a443703f076aec968a783c"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_repr_wordsize; intros.",
                        "VernacExtend",
                        "63ceff6946be78ac54a2ccaa15636254eb1b914d"
                    ]
                },
                {
                    "command": [
                        "unfold rolm.",
                        "VernacExtend",
                        "14eec38d3d18613e2564fccd9e38bfe653630dc5"
                    ]
                },
                {
                    "command": [
                        "apply same_bits_eq; intros.",
                        "VernacExtend",
                        "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_and; auto.",
                        "VernacExtend",
                        "ebb7cb503b8fdcd326d9062c755d67707c1d2e79"
                    ]
                },
                {
                    "command": [
                        "rewrite !bits_shru; auto.",
                        "VernacExtend",
                        "0bf1d6a080c06fd32b82ec620db4e1a68e5495d1"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_rol; auto.",
                        "VernacExtend",
                        "a761e8903abbd476678659101b981eb11a60acac"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (i + unsigned n) zwordsize).",
                        "VernacExtend",
                        "657a8c30a7dadb4652dc432a6563bfddcb185e7d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "generalize (unsigned_range n); intros.",
                        "VernacExtend",
                        "41156d8d04a6b3912e820f99d34a420137a264d3"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_mone.",
                        "VernacExtend",
                        "6ea2d675b787ca145f8429763e80f04fcc6043ef"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_true_r.",
                        "VernacExtend",
                        "230918acbe37788580429f7b57db0df199d9fbfd"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "unfold sub.",
                        "VernacExtend",
                        "09a336a2b822859bc335120602ae265ad23b7a0d"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_repr.",
                        "VernacExtend",
                        "5134990e153a3f2ce893c9ea9837f183c322ceb2"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_repr_wordsize.",
                        "VernacExtend",
                        "68bf2f65418d45548a5d1a5f941d2ad54148206b"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply Zmod_unique with (-1).",
                        "VernacExtend",
                        "9fbfa02026507947911435325d2aedbb9d4084b4"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_repr_wordsize.",
                        "VernacExtend",
                        "68bf2f65418d45548a5d1a5f941d2ad54148206b"
                    ]
                },
                {
                    "command": [
                        "generalize wordsize_max_unsigned.",
                        "VernacExtend",
                        "818588ddd7da527827745e853d3040136c0e060b"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_false_r; auto.",
                        "VernacExtend",
                        "0597380d3b8c5004f944d81b561ad8146e321614"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rol_zero",
            "line_nb": 2432,
            "steps": [
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_zero.",
                        "VernacExtend",
                        "89956b9f461b9934c8fa99e6e63074f0275efcae"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.sub_0_r.",
                        "VernacExtend",
                        "7c1ebdca8a3d1d773bf152b4a568fe42ea3a288b"
                    ]
                },
                {
                    "command": [
                        "apply Zmod_small; auto.",
                        "VernacExtend",
                        "3c5f5fc03f3d275d13e04469433962442134d5ce"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bitwise_binop_rol",
            "line_nb": 2439,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply same_bits_eq; intros.",
                        "VernacExtend",
                        "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
                    ]
                },
                {
                    "command": [
                        "rewrite H; auto.",
                        "VernacExtend",
                        "3e25713af8eaa76cddf9287af10d66733da2ee16"
                    ]
                },
                {
                    "command": [
                        "rewrite !bits_rol; auto.",
                        "VernacExtend",
                        "452ac2a694d255e914efc267cc205fc086f6c5dd"
                    ]
                },
                {
                    "command": [
                        "rewrite H; auto.",
                        "VernacExtend",
                        "3e25713af8eaa76cddf9287af10d66733da2ee16"
                    ]
                },
                {
                    "command": [
                        "apply Z_mod_lt.",
                        "VernacExtend",
                        "d33d3cab9911c0f11554b4e753af00e7b5fcc4ca"
                    ]
                },
                {
                    "command": [
                        "apply wordsize_pos.",
                        "VernacExtend",
                        "3cdd00bd38b50c8ad9d29d70090aa8df30337a33"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rol_and",
            "line_nb": 2448,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply bitwise_binop_rol with andb.",
                        "VernacExtend",
                        "33cdc947828f9cd1f8fab6bca043353617b4f8b5"
                    ]
                },
                {
                    "command": [
                        "exact bits_and.",
                        "VernacExtend",
                        "207bfd0e3a5029422d3eb0c47e1a67f65bd16588"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rol_or",
            "line_nb": 2453,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply bitwise_binop_rol with orb.",
                        "VernacExtend",
                        "a54fbf9118d329c93d6df1a3a2a63ce3cedb59e7"
                    ]
                },
                {
                    "command": [
                        "exact bits_or.",
                        "VernacExtend",
                        "62259bfc6df42cd2df27ebf4ca0f7c291f977bdb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rol_xor",
            "line_nb": 2458,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply bitwise_binop_rol with xorb.",
                        "VernacExtend",
                        "a649251db61403458d4c051692944ade7d92f953"
                    ]
                },
                {
                    "command": [
                        "exact bits_xor.",
                        "VernacExtend",
                        "eb517663224a45ead53e886c70aa04ae25aadecc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rolm_zero",
            "line_nb": 2499,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold rolm.",
                        "VernacExtend",
                        "14eec38d3d18613e2564fccd9e38bfe653630dc5"
                    ]
                },
                {
                    "command": [
                        "rewrite rol_zero.",
                        "VernacExtend",
                        "08f68666c0eabcde9d23515a74a2be03e1f4b104"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rolm_rolm",
            "line_nb": 2505,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold rolm.",
                        "VernacExtend",
                        "14eec38d3d18613e2564fccd9e38bfe653630dc5"
                    ]
                },
                {
                    "command": [
                        "rewrite rol_and.",
                        "VernacExtend",
                        "456aa1378769ef0d81d1c85565e8835167ac3b1d"
                    ]
                },
                {
                    "command": [
                        "rewrite and_assoc.",
                        "VernacExtend",
                        "62a08aa2ddd81c637f08d9fda9e004ce7b188a4b"
                    ]
                },
                {
                    "command": [
                        "rewrite rol_rol.",
                        "VernacExtend",
                        "c879c63ba528b87d0275f1dbd4669ad743a3b540"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "or_rolm",
            "line_nb": 2514,
            "steps": [
                {
                    "command": [
                        "intros; unfold rolm.",
                        "VernacExtend",
                        "8c80d42f88e4657b0f14f4cf2487430e2e4e1d3d"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply and_or_distrib.",
                        "VernacExtend",
                        "a16f36925b69c1ff884fb045883ccfeca5d255fe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ror_rol",
            "line_nb": 2519,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (ltu_iwordsize_inv _ H); intros.",
                        "VernacExtend",
                        "76fa1f5fd16204711110758b968337f72da7aff1"
                    ]
                },
                {
                    "command": [
                        "apply same_bits_eq; intros.",
                        "VernacExtend",
                        "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_ror; auto.",
                        "VernacExtend",
                        "71e844ecd5b30eb1cebe392bbe47926b884898a2"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_rol; auto.",
                        "VernacExtend",
                        "a761e8903abbd476678659101b981eb11a60acac"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "unfold sub.",
                        "VernacExtend",
                        "09a336a2b822859bc335120602ae265ad23b7a0d"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_repr.",
                        "VernacExtend",
                        "5134990e153a3f2ce893c9ea9837f183c322ceb2"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_repr_wordsize.",
                        "VernacExtend",
                        "68bf2f65418d45548a5d1a5f941d2ad54148206b"
                    ]
                },
                {
                    "command": [
                        "apply eqmod_mod_eq.",
                        "VernacExtend",
                        "e462c5f68727dc40165d24c024a428f990dc8959"
                    ]
                },
                {
                    "command": [
                        "apply wordsize_pos.",
                        "VernacExtend",
                        "3cdd00bd38b50c8ad9d29d70090aa8df30337a33"
                    ]
                },
                {
                    "command": [
                        "exists 1.",
                        "VernacExtend",
                        "18eb310858be5acae7304d0d9ed33063568db310"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_repr_wordsize.",
                        "VernacExtend",
                        "68bf2f65418d45548a5d1a5f941d2ad54148206b"
                    ]
                },
                {
                    "command": [
                        "generalize wordsize_pos; generalize wordsize_max_unsigned; omega.",
                        "VernacExtend",
                        "34783cfdaa823729861a9f4165eabcf36064c5a2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ror_rol_neg",
            "line_nb": 2536,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply same_bits_eq; intros.",
                        "VernacExtend",
                        "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_ror by auto.",
                        "VernacExtend",
                        "011e960a01745ea27c7e83832b1dc93ed6d07eaa"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_rol by auto.",
                        "VernacExtend",
                        "bc878f4b1abaa5697e69a03054f5b1fece7c0eb6"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply eqmod_mod_eq.",
                        "VernacExtend",
                        "e462c5f68727dc40165d24c024a428f990dc8959"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply eqmod_trans with (i - (- unsigned y)).",
                        "VernacExtend",
                        "f727a3d304a3700eb67c1d18c270619c390b08c1"
                    ]
                },
                {
                    "command": [
                        "apply eqmod_refl2; omega.",
                        "VernacExtend",
                        "20a23e02315db61bf8a0c1d8bab6dc09591ee695"
                    ]
                },
                {
                    "command": [
                        "apply eqmod_sub.",
                        "VernacExtend",
                        "c9dc99d4bbc6cea99f146d1993e5dcb92eaf027c"
                    ]
                },
                {
                    "command": [
                        "apply eqmod_refl.",
                        "VernacExtend",
                        "dd13026dc2e4aa9828d8fe4d8ad9645368260127"
                    ]
                },
                {
                    "command": [
                        "apply eqmod_divides with modulus.",
                        "VernacExtend",
                        "992fca5cd20238ecb17c8ce75482099da8475a25"
                    ]
                },
                {
                    "command": [
                        "apply eqm_unsigned_repr.",
                        "VernacExtend",
                        "8083262b54f87caceff266da1e7020054aa5a39f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "or_ror",
            "line_nb": 2552,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (ltu_iwordsize_inv _ H) (ltu_iwordsize_inv _ H0); intros.",
                        "VernacExtend",
                        "addc275edaa6d82f262a39539f4be82df5a8b3ba"
                    ]
                },
                {
                    "command": [
                        "unfold ror, or, shl, shru.",
                        "VernacExtend",
                        "953c7ef9d275e1d2fa7b8ac98bd306f7d7b22302"
                    ]
                },
                {
                    "command": [
                        "apply same_bits_eq; intros.",
                        "VernacExtend",
                        "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
                    ]
                },
                {
                    "command": [
                        "rewrite !testbit_repr; auto.",
                        "VernacExtend",
                        "ed03c006a62cc982ce1a4504966398fdfcfdcbc0"
                    ]
                },
                {
                    "command": [
                        "rewrite !Z.lor_spec.",
                        "VernacExtend",
                        "f36a909dee3fe5f43f9712ef5600eee9e9289132"
                    ]
                },
                {
                    "command": [
                        "rewrite orb_comm.",
                        "VernacExtend",
                        "d19a1a861dc82473715be9ccb56b9a66a0d4d2e1"
                    ]
                },
                {
                    "command": [
                        "f_equal; apply same_bits_eqm; auto.",
                        "VernacExtend",
                        "49e19fa1763fedc60741a9411f739bbaadb5d18e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply eqm_unsigned_repr_r.",
                        "VernacExtend",
                        "0911e24b4d5bf4d1fa1c42c2b6b4303c14b2d0db"
                    ]
                },
                {
                    "command": [
                        "apply eqm_refl2.",
                        "VernacExtend",
                        "4f34bea58d6e093ed169579de033c7f5d73e929b"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite Zmod_small; auto.",
                        "VernacExtend",
                        "2ff134b70790bb2d3bd287a0e9a50193522c92e0"
                    ]
                },
                {
                    "command": [
                        "assert (unsigned (add y z) = zwordsize).",
                        "VernacExtend",
                        "996d9a9fd95e6ff6e4c6a9e1a7f41b104358b8d8"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "apply unsigned_repr_wordsize.",
                        "VernacExtend",
                        "819e2710964f72c395c00613c3bde4f8bd718670"
                    ]
                },
                {
                    "command": [
                        "unfold add in H5.",
                        "VernacExtend",
                        "723afd40364bd30ce720289877a1f85d1415562c"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_repr in H5.",
                        "VernacExtend",
                        "8a776a60ecea9298d88d1bb19efaa4bde364b5b3"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "generalize two_wordsize_max_unsigned; omega.",
                        "VernacExtend",
                        "1867487a3ccf1d446bc1323a988de67b70f3fb3a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply eqm_unsigned_repr_r.",
                        "VernacExtend",
                        "0911e24b4d5bf4d1fa1c42c2b6b4303c14b2d0db"
                    ]
                },
                {
                    "command": [
                        "apply eqm_refl2.",
                        "VernacExtend",
                        "4f34bea58d6e093ed169579de033c7f5d73e929b"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply Zmod_small; auto.",
                        "VernacExtend",
                        "3c5f5fc03f3d275d13e04469433962442134d5ce"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_one_bits_powerserie",
            "line_nb": 2580,
            "steps": [
                {
                    "command": [
                        "assert (forall n x i, 0 <= i -> 0 <= x < two_power_nat n -> x * two_p i = powerserie (Z_one_bits n x i)).",
                        "VernacExtend",
                        "010856f6be711ea9c5cef772ba4fa6837d28e488"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "induction n; intros.",
                        "VernacExtend",
                        "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite two_power_nat_O in H0.",
                        "VernacExtend",
                        "d49f052eaec281cb1122416dfae36089666b456f"
                    ]
                },
                {
                    "command": [
                        "assert (x = 0) by omega.",
                        "VernacExtend",
                        "b03ee24a9e6832b38390d1f51d87d6b9f5b86329"
                    ]
                },
                {
                    "command": [
                        "subst x.",
                        "VernacExtend",
                        "76c28b0a6a4a7c1568fa30e26ee411c5e5d54968"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite two_power_nat_S in H0.",
                        "VernacExtend",
                        "be49cd5edc297f489fed5009701a564caad56263"
                    ]
                },
                {
                    "command": [
                        "simpl Z_one_bits.",
                        "VernacExtend",
                        "a948623b2202a9290ad5333f3d5788c7dc309141"
                    ]
                },
                {
                    "command": [
                        "rewrite (Zdecomp x) in H0.",
                        "VernacExtend",
                        "12d4644a0d9cbae6b6001aba9b6d2cecfaa986f0"
                    ]
                },
                {
                    "command": [
                        "rewrite Zshiftin_spec in H0.",
                        "VernacExtend",
                        "41e3092ca3eeedfe042fa4ae98f3cc1bc1615f1f"
                    ]
                },
                {
                    "command": [
                        "assert (EQ: Z.div2 x * two_p (i + 1) = powerserie (Z_one_bits n (Z.div2 x) (i + 1))).",
                        "VernacExtend",
                        "db3f3335cc41475c4d0d182e5200be13cc97446e"
                    ]
                },
                {
                    "command": [
                        "apply IHn.",
                        "VernacExtend",
                        "1c9414f4f052b2727ca012553a4a3a2a0fc85649"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.odd x); omega.",
                        "VernacExtend",
                        "0fabeef20b10371355ec660c030b7b196fbf9659"
                    ]
                },
                {
                    "command": [
                        "rewrite two_p_is_exp in EQ.",
                        "VernacExtend",
                        "ad7aa59448d6f1f588e60c831ec0f1777a1a4a7d"
                    ]
                },
                {
                    "command": [
                        "change (two_p 1) with 2 in EQ.",
                        "VernacExtend",
                        "d5218c74bb18c8c5a62a458110b7bb244f101da7"
                    ]
                },
                {
                    "command": [
                        "rewrite (Zdecomp x) at 1.",
                        "VernacExtend",
                        "32c4e2329c7c883af7bbd3331c351c95956ae68c"
                    ]
                },
                {
                    "command": [
                        "rewrite Zshiftin_spec.",
                        "VernacExtend",
                        "d6761270d320e65edf1ff35092908241b44e627f"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.odd x); simpl powerserie; rewrite <- EQ; ring.",
                        "VernacExtend",
                        "c7640f9459cd4c230d4e4aefefcfddec162f03da"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "change (two_p 0) with 1.",
                        "VernacExtend",
                        "e319d482d7714e1df6d2534de3913d2db24e3e04"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "exact H0.",
                        "VernacExtend",
                        "3920fece303e3c4728f9cdc71daff99239237dbd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_one_bits_range",
            "line_nb": 2612,
            "steps": [
                {
                    "command": [
                        "assert (forall n x i j, In j (Z_one_bits n x i) -> i <= j < i + Z.of_nat n).",
                        "VernacExtend",
                        "7d167b6ef61611340a859b0007a8afd552b7791d"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "induction n; simpl In.",
                        "VernacExtend",
                        "74bd597b89b1182bcdcde7eb65c924654ade5d35"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "intros x i j.",
                        "VernacExtend",
                        "7715789984adce9e83546497142385d8ba19fb61"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat2Z.inj_succ.",
                        "VernacExtend",
                        "1fc791f52357dc9e0a22fac0a6d82e87969a1699"
                    ]
                },
                {
                    "command": [
                        "assert (In j (Z_one_bits n (Z.div2 x) (i + 1)) -> i <= j < i + Z.succ (Z.of_nat n)).",
                        "VernacExtend",
                        "908adec1c90df5dc51ca6e3b8f8c161ae661bfcd"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exploit IHn; eauto.",
                        "VernacExtend",
                        "ba0e68eadd07b401a5d24f6ba00f000aeeb7eee3"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.odd x); simpl.",
                        "VernacExtend",
                        "c84365e2e579ff255deb68c1a2dac34f0a284997"
                    ]
                },
                {
                    "command": [
                        "intros [A|B].",
                        "VernacExtend",
                        "782833abaf6ecb36fd2585722846c4137f0bcf98"
                    ]
                },
                {
                    "command": [
                        "subst j.",
                        "VernacExtend",
                        "4959fd5cfffa27452c2d688b999587736fe34624"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (H wordsize x 0 i H0).",
                        "VernacExtend",
                        "af0d77a7befdc9df8b22039988ca7033635ad470"
                    ]
                },
                {
                    "command": [
                        "fold zwordsize; omega.",
                        "VernacExtend",
                        "276db1c5a2eccb6894b85518f5686dbd11c06ce3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_power2_rng",
            "line_nb": 2634,
            "steps": [
                {
                    "command": [
                        "intros n logn.",
                        "VernacExtend",
                        "772f01abf630a3d9b8f3fc0ac566debb9415586c"
                    ]
                },
                {
                    "command": [
                        "unfold is_power2.",
                        "VernacExtend",
                        "0e7f1b3e516242c117c1a65d64263574d1ea5460"
                    ]
                },
                {
                    "command": [
                        "generalize (Z_one_bits_range (unsigned n)).",
                        "VernacExtend",
                        "269aef496556ec040d9e23971db998e73598d642"
                    ]
                },
                {
                    "command": [
                        "destruct (Z_one_bits wordsize (unsigned n) 0).",
                        "VernacExtend",
                        "8dd28fb5174799c3981dd5be8a41de661f22a383"
                    ]
                },
                {
                    "command": [
                        "intros; discriminate.",
                        "VernacExtend",
                        "1ec997c70ceedc981f8865c1573c00554b73dfd4"
                    ]
                },
                {
                    "command": [
                        "destruct l.",
                        "VernacExtend",
                        "a4218804e377a0d685aafec59adbc3652d543b9c"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "injection H0; intro; subst logn; clear H0.",
                        "VernacExtend",
                        "cf16537db6ce26efadf065ada6fd16853625d1a9"
                    ]
                },
                {
                    "command": [
                        "assert (0 <= z < zwordsize).",
                        "VernacExtend",
                        "7b32f4ac012c3b1feeef8490f198a1dbf12ff53d"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "auto with coqlib.",
                        "VernacExtend",
                        "bf4be239b4d8868fa0ff9785d68d66d28f74c632"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_repr.",
                        "VernacExtend",
                        "5134990e153a3f2ce893c9ea9837f183c322ceb2"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "generalize wordsize_max_unsigned; omega.",
                        "VernacExtend",
                        "3f1b96d7bb5d8b56488da98617ce0a4bf6d89d59"
                    ]
                },
                {
                    "command": [
                        "intros; discriminate.",
                        "VernacExtend",
                        "1ec997c70ceedc981f8865c1573c00554b73dfd4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_power2_range",
            "line_nb": 2651,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold ltu.",
                        "VernacExtend",
                        "e59e12052a96cc6c37e4e3abfd319dcb453c0f12"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_repr_wordsize.",
                        "VernacExtend",
                        "68bf2f65418d45548a5d1a5f941d2ad54148206b"
                    ]
                },
                {
                    "command": [
                        "apply zlt_true.",
                        "VernacExtend",
                        "135d300e9c683e2995f4687be0904a8b2009f6fe"
                    ]
                },
                {
                    "command": [
                        "generalize (is_power2_rng _ _ H).",
                        "VernacExtend",
                        "f7dacbab210b98230a9cd81263adb250fcce50ec"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_power2_correct",
            "line_nb": 2659,
            "steps": [
                {
                    "command": [
                        "intros n logn.",
                        "VernacExtend",
                        "772f01abf630a3d9b8f3fc0ac566debb9415586c"
                    ]
                },
                {
                    "command": [
                        "unfold is_power2.",
                        "VernacExtend",
                        "0e7f1b3e516242c117c1a65d64263574d1ea5460"
                    ]
                },
                {
                    "command": [
                        "generalize (Z_one_bits_powerserie (unsigned n) (unsigned_range n)).",
                        "VernacExtend",
                        "e0b399b7b19653f4b139a71caf7cfaec75ccede2"
                    ]
                },
                {
                    "command": [
                        "generalize (Z_one_bits_range (unsigned n)).",
                        "VernacExtend",
                        "269aef496556ec040d9e23971db998e73598d642"
                    ]
                },
                {
                    "command": [
                        "destruct (Z_one_bits wordsize (unsigned n) 0).",
                        "VernacExtend",
                        "8dd28fb5174799c3981dd5be8a41de661f22a383"
                    ]
                },
                {
                    "command": [
                        "intros; discriminate.",
                        "VernacExtend",
                        "1ec997c70ceedc981f8865c1573c00554b73dfd4"
                    ]
                },
                {
                    "command": [
                        "destruct l.",
                        "VernacExtend",
                        "a4218804e377a0d685aafec59adbc3652d543b9c"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl in H0.",
                        "VernacExtend",
                        "a4a6a8421870dbf7255f8d031744eec32f12a941"
                    ]
                },
                {
                    "command": [
                        "injection H1; intros; subst logn; clear H1.",
                        "VernacExtend",
                        "efaa41f660a970aa590378714ef3a55b50bb5776"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_repr.",
                        "VernacExtend",
                        "5134990e153a3f2ce893c9ea9837f183c322ceb2"
                    ]
                },
                {
                    "command": [
                        "replace (two_p z) with (two_p z + 0).",
                        "VernacExtend",
                        "2430ccac23bf126ac88ae104e6c6a2be6221a89d"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "elim (H z); intros.",
                        "VernacExtend",
                        "cb22351ee412bd9acc14d0b9aefdd6b4e478d8f2"
                    ]
                },
                {
                    "command": [
                        "generalize wordsize_max_unsigned; omega.",
                        "VernacExtend",
                        "3f1b96d7bb5d8b56488da98617ce0a4bf6d89d59"
                    ]
                },
                {
                    "command": [
                        "auto with coqlib.",
                        "VernacExtend",
                        "bf4be239b4d8868fa0ff9785d68d66d28f74c632"
                    ]
                },
                {
                    "command": [
                        "intros; discriminate.",
                        "VernacExtend",
                        "1ec997c70ceedc981f8865c1573c00554b73dfd4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "two_p_range",
            "line_nb": 2679,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assert (two_p n > 0).",
                        "VernacExtend",
                        "a2cd8a99ed1874f39d77ad1b220687003b28892e"
                    ]
                },
                {
                    "command": [
                        "apply two_p_gt_ZERO.",
                        "VernacExtend",
                        "9690045ae69e536e22b7db6c37ee985732e7c4b7"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "generalize (two_p_monotone_strict _ _ H).",
                        "VernacExtend",
                        "ecc4be0c47a3d3cb8ba17ede93ef6beabd375349"
                    ]
                },
                {
                    "command": [
                        "unfold zwordsize; rewrite <- two_power_nat_two_p.",
                        "VernacExtend",
                        "ad016ae0ad00169325296f7a0fb4b3424563f762"
                    ]
                },
                {
                    "command": [
                        "unfold max_unsigned, modulus.",
                        "VernacExtend",
                        "a003fb64c08a2c31cd764776b3bb0fe050fd5579"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_one_bits_zero",
            "line_nb": 2691,
            "steps": [
                {
                    "command": [
                        "induction n; intros; simpl; auto.",
                        "VernacExtend",
                        "64c1c9b4400229bea09b845c60061f9fa1846879"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_one_bits_two_p",
            "line_nb": 2694,
            "steps": [
                {
                    "command": [
                        "induction n; intros; simpl.",
                        "VernacExtend",
                        "f27a2774667ef3bddfddc5ec776ca116504c7463"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "omegaContradiction.",
                        "VernacExtend",
                        "329a0d87fada76e54a403fa49705e937670711cd"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat2Z.inj_succ in H.",
                        "VernacExtend",
                        "aad252ba7eeff8ba6d219c16a99b9cd7a7466690"
                    ]
                },
                {
                    "command": [
                        "assert (x = 0 \\/ 0 < x) by omega.",
                        "VernacExtend",
                        "4e35219e6467f7fd2aa5204b5b6b47a2af55740b"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "subst x; simpl.",
                        "VernacExtend",
                        "2f8437b331365d30d508fbd8b1b0384ceae8a188"
                    ]
                },
                {
                    "command": [
                        "decEq.",
                        "VernacExtend",
                        "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply Z_one_bits_zero.",
                        "VernacExtend",
                        "a5adf7e666f254ff96fb45aa022f60329a4c58ba"
                    ]
                },
                {
                    "command": [
                        "assert (Z.odd (two_p x) = false /\\ Z.div2 (two_p x) = two_p (x-1)).",
                        "VernacExtend",
                        "6ccf95065a3f1f36156424c4ecc1b7f4d69d435b"
                    ]
                },
                {
                    "command": [
                        "apply Zshiftin_inj.",
                        "VernacExtend",
                        "7439da2fd27cabf86f784982ab0d0f438efb3bec"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Zdecomp.",
                        "VernacExtend",
                        "6ac25ae7daa27732ec049cbcf377da2f7a4abe6f"
                    ]
                },
                {
                    "command": [
                        "rewrite !Zshiftin_spec.",
                        "VernacExtend",
                        "aa9d3dedf623bac9a8173e30b44355badd5e5367"
                    ]
                },
                {
                    "command": [
                        "rewrite <- two_p_S.",
                        "VernacExtend",
                        "8eb7240a71b2161fc95c2193e4ff099221db490e"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.add_0_r.",
                        "VernacExtend",
                        "06ae07741c51588ad5058ce812450f10227d7b7a"
                    ]
                },
                {
                    "command": [
                        "f_equal; omega.",
                        "VernacExtend",
                        "3b812353131f9b9bebbd6410b3fa7c9d2e597ec3"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as [A B]; rewrite A; rewrite B.",
                        "VernacExtend",
                        "d455cb2cfbc7e446df026435e2e5dac9c401a1ae"
                    ]
                },
                {
                    "command": [
                        "rewrite IHn.",
                        "VernacExtend",
                        "ec9472e508d0ba82a8f6be939d2e4d39f35c3667"
                    ]
                },
                {
                    "command": [
                        "f_equal; omega.",
                        "VernacExtend",
                        "3b812353131f9b9bebbd6410b3fa7c9d2e597ec3"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_power2_two_p",
            "line_nb": 2718,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold is_power2.",
                        "VernacExtend",
                        "0e7f1b3e516242c117c1a65d64263574d1ea5460"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_repr.",
                        "VernacExtend",
                        "5134990e153a3f2ce893c9ea9837f183c322ceb2"
                    ]
                },
                {
                    "command": [
                        "rewrite Z_one_bits_two_p.",
                        "VernacExtend",
                        "abc1b86d5e765abedea36eb707264dffb54ae54a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply two_p_range.",
                        "VernacExtend",
                        "0249522f8d19db902735724734ad89949b2ef67c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zshiftl_mul_two_p",
            "line_nb": 2728,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct n; simpl.",
                        "VernacExtend",
                        "6554f156164019d92e1907ce49ab9159d733a0bb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "pattern p.",
                        "VernacExtend",
                        "caf1e84d2b8aac5a90ef71142712703a45201e3d"
                    ]
                },
                {
                    "command": [
                        "apply Pos.peano_ind.",
                        "VernacExtend",
                        "d19465b8ed98f4b88c06abe31275cd26191ce580"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "change (two_power_pos 1) with 2.",
                        "VernacExtend",
                        "fba97a86c97142398b108a639b6cb6ad7dcb22ef"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite Pos.iter_succ.",
                        "VernacExtend",
                        "a6c28db9a5d22c6001772e60494ce19a76039ae4"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "rewrite Pplus_one_succ_l.",
                        "VernacExtend",
                        "0b0c2b2508e7bbd54c8724e26e38d1e71e9e022f"
                    ]
                },
                {
                    "command": [
                        "rewrite two_power_pos_is_exp.",
                        "VernacExtend",
                        "53838041bee173a09a0a3738374b23a00419fd23"
                    ]
                },
                {
                    "command": [
                        "change (two_power_pos 1) with 2.",
                        "VernacExtend",
                        "fba97a86c97142398b108a639b6cb6ad7dcb22ef"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "compute in H.",
                        "VernacExtend",
                        "686103f70bd92c1e64ec2f78836e7444971cef09"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shl_mul_two_p",
            "line_nb": 2752,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold shl, mul.",
                        "VernacExtend",
                        "b53737c85e0b6b344a16439e19ba23f19505dc69"
                    ]
                },
                {
                    "command": [
                        "apply eqm_samerepr.",
                        "VernacExtend",
                        "2226a5674ed5a7db984e878fdbb37775ca665295"
                    ]
                },
                {
                    "command": [
                        "rewrite Zshiftl_mul_two_p.",
                        "VernacExtend",
                        "7fe5e587f7347ca6752e2a84434e39399219b1c6"
                    ]
                },
                {
                    "command": [
                        "auto with ints.",
                        "VernacExtend",
                        "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
                    ]
                },
                {
                    "command": [
                        "generalize (unsigned_range y); omega.",
                        "VernacExtend",
                        "42fda19b1742db2649f926c7d3bceaa4596993b0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shl_mul",
            "line_nb": 2760,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (shl one y = repr (two_p (unsigned y))).",
                        "VernacExtend",
                        "617b8a468520b031e20f84706d76acac47b167b8"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite shl_mul_two_p.",
                        "VernacExtend",
                        "22cc3304a3a573fd3d033d2dafe6f62e99726c2b"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_commut.",
                        "VernacExtend",
                        "7e479a6cc087b15b3e77ca62eef65a115285e229"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_one.",
                        "VernacExtend",
                        "48e185ca99d9fb7850b9fee25eb6e9a16ab7f505"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "apply shl_mul_two_p.",
                        "VernacExtend",
                        "cb51b16d0cf4ad6353617169805898acd25c58a8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_pow2",
            "line_nb": 2772,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (is_power2_correct n logn H); intro.",
                        "VernacExtend",
                        "289d2de04336f178e9ee11c380182368304f4793"
                    ]
                },
                {
                    "command": [
                        "rewrite shl_mul_two_p.",
                        "VernacExtend",
                        "22cc3304a3a573fd3d033d2dafe6f62e99726c2b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0.",
                        "VernacExtend",
                        "f6718c09e494e327328e3c2003dd236939e231f9"
                    ]
                },
                {
                    "command": [
                        "rewrite repr_unsigned.",
                        "VernacExtend",
                        "21d65804482992e66265036604c87ce7071df035"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shifted_or_is_add",
            "line_nb": 2780,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- add_is_or.",
                        "VernacExtend",
                        "485e24d811be7a0c82d4705d9712ef0fcecaeaf3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold add.",
                        "VernacExtend",
                        "11cf98bf231f22df486b46b3b6a1c38a94e859dd"
                    ]
                },
                {
                    "command": [
                        "apply eqm_samerepr.",
                        "VernacExtend",
                        "2226a5674ed5a7db984e878fdbb37775ca665295"
                    ]
                },
                {
                    "command": [
                        "apply eqm_add; auto with ints.",
                        "VernacExtend",
                        "af5726510e5682d3c82760011803c0892c36d2cc"
                    ]
                },
                {
                    "command": [
                        "rewrite shl_mul_two_p.",
                        "VernacExtend",
                        "22cc3304a3a573fd3d033d2dafe6f62e99726c2b"
                    ]
                },
                {
                    "command": [
                        "unfold mul.",
                        "VernacExtend",
                        "177e01106c95f433aa4fec630d226d724d6b851d"
                    ]
                },
                {
                    "command": [
                        "apply eqm_unsigned_repr_l.",
                        "VernacExtend",
                        "f8c0df5a7c25eea501480495633bd91f52c10673"
                    ]
                },
                {
                    "command": [
                        "apply eqm_mult; auto with ints.",
                        "VernacExtend",
                        "f9048979ffe21f789d37b97a35a74a9a377a30a1"
                    ]
                },
                {
                    "command": [
                        "apply eqm_unsigned_repr_l.",
                        "VernacExtend",
                        "f8c0df5a7c25eea501480495633bd91f52c10673"
                    ]
                },
                {
                    "command": [
                        "apply eqm_refl2.",
                        "VernacExtend",
                        "4f34bea58d6e093ed169579de033c7f5d73e929b"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_repr.",
                        "VernacExtend",
                        "5134990e153a3f2ce893c9ea9837f183c322ceb2"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "generalize wordsize_max_unsigned; omega.",
                        "VernacExtend",
                        "3f1b96d7bb5d8b56488da98617ce0a4bf6d89d59"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_repr.",
                        "VernacExtend",
                        "5134990e153a3f2ce893c9ea9837f183c322ceb2"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i n).",
                        "VernacExtend",
                        "e95249794f6baef3de0ea4980efbabfd979ed1b4"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "replace (testbit y i) with false.",
                        "VernacExtend",
                        "ecf8d7b8380e325b347852e3f7c524b514260b11"
                    ]
                },
                {
                    "command": [
                        "apply andb_false_r.",
                        "VernacExtend",
                        "96acabd8a60f7c2e82c0ec27c34e893436485a16"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "unfold testbit.",
                        "VernacExtend",
                        "14f68f27aaaec42f64d3a8f3009fc6eaa35592a6"
                    ]
                },
                {
                    "command": [
                        "assert (EQ: Z.of_nat (Z.to_nat n) = n) by (apply Z2Nat.id; omega).",
                        "VernacExtend",
                        "dfb6d91a6a96812d812a8bb5970d0679c05aee9e"
                    ]
                },
                {
                    "command": [
                        "apply Ztestbit_above with (Z.to_nat n).",
                        "VernacExtend",
                        "d77f40940c0c2df15dd55572bebaecdbc1dab948"
                    ]
                },
                {
                    "command": [
                        "rewrite <- EQ in H0.",
                        "VernacExtend",
                        "a11551c7f8e5c168f855e6696253f6191ea50193"
                    ]
                },
                {
                    "command": [
                        "rewrite <- two_power_nat_two_p in H0.",
                        "VernacExtend",
                        "88e9d0c3ced8e3349526f33f78ce465c7930dba4"
                    ]
                },
                {
                    "command": [
                        "generalize (unsigned_range y); omega.",
                        "VernacExtend",
                        "42fda19b1742db2649f926c7d3bceaa4596993b0"
                    ]
                },
                {
                    "command": [
                        "rewrite EQ; auto.",
                        "VernacExtend",
                        "64d63d4ce372e7de310250555f999e4eb80d6fb2"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "generalize wordsize_max_unsigned; omega.",
                        "VernacExtend",
                        "3f1b96d7bb5d8b56488da98617ce0a4bf6d89d59"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zshiftr_div_two_p",
            "line_nb": 2816,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct n; unfold Z.shiftr; simpl.",
                        "VernacExtend",
                        "f524b83fabf41d5d49ea959f3858cd19f6ca772c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Zdiv_1_r.",
                        "VernacExtend",
                        "fb519c27d201f0568a21677dcf3ac2ffedb61d8b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "pattern p.",
                        "VernacExtend",
                        "caf1e84d2b8aac5a90ef71142712703a45201e3d"
                    ]
                },
                {
                    "command": [
                        "apply Pos.peano_ind.",
                        "VernacExtend",
                        "d19465b8ed98f4b88c06abe31275cd26191ce580"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "change (two_power_pos 1) with 2.",
                        "VernacExtend",
                        "fba97a86c97142398b108a639b6cb6ad7dcb22ef"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply Zdiv2_div.",
                        "VernacExtend",
                        "58996576d6726002ecf7e01a80fd5df52360f49e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite Pos.iter_succ.",
                        "VernacExtend",
                        "a6c28db9a5d22c6001772e60494ce19a76039ae4"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "rewrite Pplus_one_succ_l.",
                        "VernacExtend",
                        "0b0c2b2508e7bbd54c8724e26e38d1e71e9e022f"
                    ]
                },
                {
                    "command": [
                        "rewrite two_power_pos_is_exp.",
                        "VernacExtend",
                        "53838041bee173a09a0a3738374b23a00419fd23"
                    ]
                },
                {
                    "command": [
                        "change (two_power_pos 1) with 2.",
                        "VernacExtend",
                        "fba97a86c97142398b108a639b6cb6ad7dcb22ef"
                    ]
                },
                {
                    "command": [
                        "rewrite Zdiv2_div.",
                        "VernacExtend",
                        "faa2b4d775e7c98b35c99ee87bd44efc8c133a91"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.mul_comm.",
                        "VernacExtend",
                        "088699fe7f894ededd3c93ab3a27f9d105f1ab84"
                    ]
                },
                {
                    "command": [
                        "apply Zdiv_Zdiv.",
                        "VernacExtend",
                        "5fda31ae53cb352de5081c4a4f3fa70e954db73a"
                    ]
                },
                {
                    "command": [
                        "rewrite two_power_pos_nat.",
                        "VernacExtend",
                        "905cbc42d75479a675013b8e14f2d2cb89a6895c"
                    ]
                },
                {
                    "command": [
                        "apply two_power_nat_pos.",
                        "VernacExtend",
                        "b662a9ac34dd1a59671605f975e998a807dd01e1"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "compute in H.",
                        "VernacExtend",
                        "686103f70bd92c1e64ec2f78836e7444971cef09"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shru_div_two_p",
            "line_nb": 2846,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold shru.",
                        "VernacExtend",
                        "6bc2eec5ac24b3d88f131d79dde21420cba5c4be"
                    ]
                },
                {
                    "command": [
                        "rewrite Zshiftr_div_two_p.",
                        "VernacExtend",
                        "90fc01f0f0eae61bd03ac4563e0f8b19e779fe5c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "generalize (unsigned_range y); omega.",
                        "VernacExtend",
                        "42fda19b1742db2649f926c7d3bceaa4596993b0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divu_pow2",
            "line_nb": 2853,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (is_power2_correct n logn H).",
                        "VernacExtend",
                        "688d9dc1b74ba81a486e6919034083f3e7201404"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "unfold divu.",
                        "VernacExtend",
                        "a590fd4befdc5a95066b4da954521dc3b686dbcc"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "apply shru_div_two_p.",
                        "VernacExtend",
                        "dc9b9c15ab4569e0fb3cbfc2e9f7b82f5b890836"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shr_div_two_p",
            "line_nb": 2862,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold shr.",
                        "VernacExtend",
                        "b0785b9ec45cd18cb02fe6ea9a4f119054b99009"
                    ]
                },
                {
                    "command": [
                        "rewrite Zshiftr_div_two_p.",
                        "VernacExtend",
                        "90fc01f0f0eae61bd03ac4563e0f8b19e779fe5c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "generalize (unsigned_range y); omega.",
                        "VernacExtend",
                        "42fda19b1742db2649f926c7d3bceaa4596993b0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divs_pow2",
            "line_nb": 2869,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (is_power2_correct _ _ H); intro.",
                        "VernacExtend",
                        "614c718227d368c04ebd58bd022cfa26c3ddd4be"
                    ]
                },
                {
                    "command": [
                        "unfold shrx.",
                        "VernacExtend",
                        "727bd665896b035639034d80830e195a4775c00e"
                    ]
                },
                {
                    "command": [
                        "rewrite shl_mul_two_p.",
                        "VernacExtend",
                        "22cc3304a3a573fd3d033d2dafe6f62e99726c2b"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_commut.",
                        "VernacExtend",
                        "7e479a6cc087b15b3e77ca62eef65a115285e229"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_one.",
                        "VernacExtend",
                        "48e185ca99d9fb7850b9fee25eb6e9a16ab7f505"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0.",
                        "VernacExtend",
                        "f6718c09e494e327328e3c2003dd236939e231f9"
                    ]
                },
                {
                    "command": [
                        "rewrite repr_unsigned.",
                        "VernacExtend",
                        "21d65804482992e66265036604c87ce7071df035"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ztestbit_mod_two_p",
            "line_nb": 2880,
            "steps": [
                {
                    "command": [
                        "intros n0 x i N0POS.",
                        "VernacExtend",
                        "fef63b3ba60c9db1a5a7a33838eedd8ffcda1daf"
                    ]
                },
                {
                    "command": [
                        "revert x i; pattern n0; apply natlike_ind; auto.",
                        "VernacExtend",
                        "4f605c05e7e684cc2df9a39f03c60271dae914f5"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "change (two_p 0) with 1.",
                        "VernacExtend",
                        "e319d482d7714e1df6d2534de3913d2db24e3e04"
                    ]
                },
                {
                    "command": [
                        "rewrite Zmod_1_r.",
                        "VernacExtend",
                        "514ca001a7e743bc03af0d30b3e55d30fcee1a57"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.testbit_0_l.",
                        "VernacExtend",
                        "3d10313570d6407f4c0dbb64ffc4e4e6b470f6b3"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false; auto.",
                        "VernacExtend",
                        "a7f28c2617535b77e0035b271ce2717cc06a3d86"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite two_p_S; auto.",
                        "VernacExtend",
                        "90f17c6866ad6f0d1a89251afe1ff96ccc854029"
                    ]
                },
                {
                    "command": [
                        "replace (x0 mod (2 * two_p x)) with (Zshiftin (Z.odd x0) (Z.div2 x0 mod two_p x)).",
                        "VernacExtend",
                        "4bc1cb7db13f25bc5769d28fb77e132cd81c6d68"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztestbit_shiftin; auto.",
                        "VernacExtend",
                        "46ec7e9a8b00ef8ac13c8cecf9c88a0fff7b0d10"
                    ]
                },
                {
                    "command": [
                        "rewrite (Ztestbit_eq i x0); auto.",
                        "VernacExtend",
                        "d940d880d63b0639e4f581e80b9e9cbedb67515a"
                    ]
                },
                {
                    "command": [
                        "destruct (zeq i 0).",
                        "VernacExtend",
                        "d84935205e6f3de20c609dbacd0c5438037a33e9"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true; auto.",
                        "VernacExtend",
                        "2530d4fd01d0742590fadf383a697c5eb37b78be"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (Z.pred i) x).",
                        "VernacExtend",
                        "fc8fd200832ec4591e9f6a34677735053281d701"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true; auto.",
                        "VernacExtend",
                        "2530d4fd01d0742590fadf383a697c5eb37b78be"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false; auto.",
                        "VernacExtend",
                        "a7f28c2617535b77e0035b271ce2717cc06a3d86"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite (Zdecomp x0) at 3.",
                        "VernacExtend",
                        "82c77291316a9a4e1bcf5ac89501f6cd4ca7266b"
                    ]
                },
                {
                    "command": [
                        "set (x1 := Z.div2 x0).",
                        "VernacExtend",
                        "fe50aaf5e8b6358718d24335ed50c78ac80aa514"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply Zmod_unique with (x1 / two_p x).",
                        "VernacExtend",
                        "27726ba64a22528fab2d9dce2210a5514f8e2780"
                    ]
                },
                {
                    "command": [
                        "rewrite !Zshiftin_spec.",
                        "VernacExtend",
                        "aa9d3dedf623bac9a8173e30b44355badd5e5367"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.add_assoc.",
                        "VernacExtend",
                        "29e409a5136d36d9bdb955a7c32d658d7720aea4"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "transitivity (2 * (two_p x * (x1 / two_p x) + x1 mod two_p x)).",
                        "VernacExtend",
                        "0f7bc2369e369a8feac65bc05f906c61d92a409c"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply Z_div_mod_eq.",
                        "VernacExtend",
                        "c7c7b8c0b3f502009e6f882787bdcc803640e476"
                    ]
                },
                {
                    "command": [
                        "apply two_p_gt_ZERO; auto.",
                        "VernacExtend",
                        "eed3343784be464d43407f45fee9c83a7f552536"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "rewrite Zshiftin_spec.",
                        "VernacExtend",
                        "d6761270d320e65edf1ff35092908241b44e627f"
                    ]
                },
                {
                    "command": [
                        "exploit (Z_mod_lt x1 (two_p x)).",
                        "VernacExtend",
                        "0fc34c793690748b6ae3707ede41f88feb7f070c"
                    ]
                },
                {
                    "command": [
                        "apply two_p_gt_ZERO; auto.",
                        "VernacExtend",
                        "eed3343784be464d43407f45fee9c83a7f552536"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.odd x0); omega.",
                        "VernacExtend",
                        "2147d29a4e3cf90c2e43b8cafba5d2e88fac0ad0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ztestbit_two_p_m1",
            "line_nb": 2929,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace (two_p n - 1) with ((-1) mod (two_p n)).",
                        "VernacExtend",
                        "8552617f3db0671948f2ea87b89f21285acbd54d"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztestbit_mod_two_p; auto.",
                        "VernacExtend",
                        "a7ace985b22656c74fcf94ae5275d4190a679b6a"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i n); auto.",
                        "VernacExtend",
                        "f3d4c5dfa327d8d47baf0b2715c47dcb9150c40f"
                    ]
                },
                {
                    "command": [
                        "apply Ztestbit_m1; auto.",
                        "VernacExtend",
                        "d1af5caedb86a41449e33b46c4ba83d48392b2c5"
                    ]
                },
                {
                    "command": [
                        "apply Zmod_unique with (-1).",
                        "VernacExtend",
                        "9fbfa02026507947911435325d2aedbb9d4084b4"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "exploit (two_p_gt_ZERO n).",
                        "VernacExtend",
                        "0f179a1b749def55b9007856ac00999f40c169f8"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modu_and",
            "line_nb": 2941,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (is_power2_correct _ _ H); intro.",
                        "VernacExtend",
                        "614c718227d368c04ebd58bd022cfa26c3ddd4be"
                    ]
                },
                {
                    "command": [
                        "generalize (is_power2_rng _ _ H); intro.",
                        "VernacExtend",
                        "4e8d6f46afd1f48ec5e1031a09b19b8469bc0aee"
                    ]
                },
                {
                    "command": [
                        "apply same_bits_eq; intros.",
                        "VernacExtend",
                        "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_and; auto.",
                        "VernacExtend",
                        "ebb7cb503b8fdcd326d9062c755d67707c1d2e79"
                    ]
                },
                {
                    "command": [
                        "unfold sub.",
                        "VernacExtend",
                        "09a336a2b822859bc335120602ae265ad23b7a0d"
                    ]
                },
                {
                    "command": [
                        "rewrite testbit_repr; auto.",
                        "VernacExtend",
                        "d20143ed773e39c9c2d38dc1a41b649eadbc95c6"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_one.",
                        "VernacExtend",
                        "52f1cc9e4b7b0a3b7c37f5e9a1a6c514d4cb1683"
                    ]
                },
                {
                    "command": [
                        "unfold modu.",
                        "VernacExtend",
                        "f422c7f651883f9b1be11387013adc1ad2a7e0c8"
                    ]
                },
                {
                    "command": [
                        "rewrite testbit_repr; auto.",
                        "VernacExtend",
                        "d20143ed773e39c9c2d38dc1a41b649eadbc95c6"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztestbit_mod_two_p.",
                        "VernacExtend",
                        "e9ee0f7649e004f471927a611a7f3a6cd5b57453"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztestbit_two_p_m1.",
                        "VernacExtend",
                        "00ce27b32fe65c9db345e2d0edaac376197ce585"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i (unsigned logn)).",
                        "VernacExtend",
                        "bed5dc98d18683ba942d394e69517d77789174f3"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_true_r; auto.",
                        "VernacExtend",
                        "8d3ecd774644b39473041cd140b9a59f6c79550c"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_false_r; auto.",
                        "VernacExtend",
                        "0597380d3b8c5004f944d81b561ad8146e321614"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zquot_Zdiv",
            "line_nb": 2964,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt x 0).",
                        "VernacExtend",
                        "3d2dd3593e50f587b58f6529ad8960e4a05ff108"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply Zquot_unique_full with ((x + y - 1) mod y - (y - 1)).",
                        "VernacExtend",
                        "4d1c8be658741bccf26b72df9519099396cfae57"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "red.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "right; split.",
                        "VernacExtend",
                        "7f40e6faa2e8d6f2ee2a39b745aa28054e5d87de"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "exploit (Z_mod_lt (x + y - 1) y); auto.",
                        "VernacExtend",
                        "82963549ab9395fbc9c9940b805b71ede35de890"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.abs_eq.",
                        "VernacExtend",
                        "4d74d669a671e59eb9a86ae3d0d908e33e8120a7"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "transitivity ((y * ((x + y - 1) / y) + (x + y - 1) mod y) - (y-1)).",
                        "VernacExtend",
                        "02566f214b150a26e31d82bde7812fa975b7675e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z_div_mod_eq.",
                        "VernacExtend",
                        "a2072dd14a19c9c0f8c30ef0c09c5a6ed86b2cd6"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply Zquot_Zdiv_pos; omega.",
                        "VernacExtend",
                        "a9bf4f32511fd5718f6d17dccfee45cad2d0bdb2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shrx_zero",
            "line_nb": 2987,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold shrx.",
                        "VernacExtend",
                        "727bd665896b035639034d80830e195a4775c00e"
                    ]
                },
                {
                    "command": [
                        "rewrite shl_zero.",
                        "VernacExtend",
                        "8760c36cc41929d5c935314c7147a1ebf53a8cdf"
                    ]
                },
                {
                    "command": [
                        "unfold divs.",
                        "VernacExtend",
                        "f268efa166c7bd9f01ff4537de50df7a32d19571"
                    ]
                },
                {
                    "command": [
                        "rewrite signed_one by auto.",
                        "VernacExtend",
                        "43446213f37f754ebaf9b3105db9a43fcd33b305"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.quot_1_r.",
                        "VernacExtend",
                        "c76da0aed8ddf96c7b8f42a8b078eebcda3031e0"
                    ]
                },
                {
                    "command": [
                        "apply repr_signed.",
                        "VernacExtend",
                        "6ac037f1d42a8ffc7ffc97da2226a128bb137982"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shrx_shr_2",
            "line_nb": 3065,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite shrx_shr by auto.",
                        "VernacExtend",
                        "0500b17d39749a508e309fa80925d82352644616"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite shr_lt_zero.",
                        "VernacExtend",
                        "de145c7e77d562946db78ed9edb12d31a64b38d0"
                    ]
                },
                {
                    "command": [
                        "destruct (lt x zero).",
                        "VernacExtend",
                        "56431311febe9c755a97db275e2484cffe963341"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "set (uy := unsigned y).",
                        "VernacExtend",
                        "837fd20e4f7b956cfdf38d2d39b01e0352e81c9e"
                    ]
                },
                {
                    "command": [
                        "generalize (unsigned_range y); fold uy; intros.",
                        "VernacExtend",
                        "20ae75fef06f3db29650b368b12c9f6c4f5d7699"
                    ]
                },
                {
                    "command": [
                        "assert (0 <= uy < zwordsize - 1).",
                        "VernacExtend",
                        "72fb7f12712c7af0a9c3663a56381abfd83527a8"
                    ]
                },
                {
                    "command": [
                        "generalize (ltu_inv _ _ H).",
                        "VernacExtend",
                        "7b58a295ab1791d1e4a443703f076aec968a783c"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_repr.",
                        "VernacExtend",
                        "5134990e153a3f2ce893c9ea9837f183c322ceb2"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "generalize wordsize_pos wordsize_max_unsigned; omega.",
                        "VernacExtend",
                        "f7d9a86b05d78860203faeef31c672ad32a7c863"
                    ]
                },
                {
                    "command": [
                        "assert (two_p uy < modulus).",
                        "VernacExtend",
                        "dcd00e6e72933f1fa24a6854983ffa94553fe7c2"
                    ]
                },
                {
                    "command": [
                        "rewrite modulus_power.",
                        "VernacExtend",
                        "753142ad8669d3fd0251ba06a6ea2fc37e67244d"
                    ]
                },
                {
                    "command": [
                        "apply two_p_monotone_strict.",
                        "VernacExtend",
                        "9f9347abd1e7a23e387d0ed249667589d29440a0"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite shl_mul_two_p.",
                        "VernacExtend",
                        "22cc3304a3a573fd3d033d2dafe6f62e99726c2b"
                    ]
                },
                {
                    "command": [
                        "fold uy.",
                        "VernacExtend",
                        "132af332409b07aff641beb2f76bef5968c163a1"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_commut.",
                        "VernacExtend",
                        "7e479a6cc087b15b3e77ca62eef65a115285e229"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_one.",
                        "VernacExtend",
                        "48e185ca99d9fb7850b9fee25eb6e9a16ab7f505"
                    ]
                },
                {
                    "command": [
                        "unfold sub.",
                        "VernacExtend",
                        "09a336a2b822859bc335120602ae265ad23b7a0d"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_one.",
                        "VernacExtend",
                        "52f1cc9e4b7b0a3b7c37f5e9a1a6c514d4cb1683"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_repr.",
                        "VernacExtend",
                        "5134990e153a3f2ce893c9ea9837f183c322ceb2"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_repr_wordsize.",
                        "VernacExtend",
                        "68bf2f65418d45548a5d1a5f941d2ad54148206b"
                    ]
                },
                {
                    "command": [
                        "fold uy.",
                        "VernacExtend",
                        "132af332409b07aff641beb2f76bef5968c163a1"
                    ]
                },
                {
                    "command": [
                        "apply same_bits_eq; intros.",
                        "VernacExtend",
                        "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_shru by auto.",
                        "VernacExtend",
                        "aec9c7bee89375aea4fe5442e80cf054e0c2bcdf"
                    ]
                },
                {
                    "command": [
                        "rewrite testbit_repr by auto.",
                        "VernacExtend",
                        "8dadad04a0b2de2914f06b82bef19544f0ee6dde"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztestbit_two_p_m1 by omega.",
                        "VernacExtend",
                        "ac46153878d8d744929868ec2109b76e59be13f9"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_repr by (generalize wordsize_max_unsigned; omega).",
                        "VernacExtend",
                        "54214920ecefeb1d0f797e0512e3348a8d80ede4"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i uy).",
                        "VernacExtend",
                        "80a1228518f8c8c1a6a29e7dbfd580643712122b"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true by omega.",
                        "VernacExtend",
                        "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_mone by omega.",
                        "VernacExtend",
                        "f0ef98d85b9a9b561a0c8c3544bb12a268c25ef6"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false by omega.",
                        "VernacExtend",
                        "1a3d93f438781af1cb3b43101336d435afaef9a1"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "assert (two_p uy > 0) by (apply two_p_gt_ZERO; omega).",
                        "VernacExtend",
                        "de0f7662c06de9a51b7587ba1db535bda2c6ef6e"
                    ]
                },
                {
                    "command": [
                        "unfold max_unsigned; omega.",
                        "VernacExtend",
                        "8050b2acbf1f11f7b1479a8f25e2549120cc659f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "replace (shru zero (sub iwordsize y)) with zero.",
                        "VernacExtend",
                        "7743d7f4621128ced05d66930bf74299b11cff89"
                    ]
                },
                {
                    "command": [
                        "rewrite add_zero; auto.",
                        "VernacExtend",
                        "2dcda68403fce6a7bcb3b254804a56642fda9d74"
                    ]
                },
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (i + unsigned (sub iwordsize y)) zwordsize); auto.",
                        "VernacExtend",
                        "5d081c2dc596c06509ac7a5d5920b2a9356fe2d4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zdiv_shift",
            "line_nb": 3112,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (Z_div_mod_eq x y H).",
                        "VernacExtend",
                        "d78179d5f5cb58c0f07be0034042f6ae1569c693"
                    ]
                },
                {
                    "command": [
                        "generalize (Z_mod_lt x y H).",
                        "VernacExtend",
                        "260f3d3d2500e7e35d0a340500ff23546cd58212"
                    ]
                },
                {
                    "command": [
                        "set (q := x / y).",
                        "VernacExtend",
                        "fc5dccd2d39761ac2918533017dba4f22bd291bd"
                    ]
                },
                {
                    "command": [
                        "set (r := x mod y).",
                        "VernacExtend",
                        "2e7dd47f2bf599cf69a2a36c95a07f3bade722f1"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (zeq r 0).",
                        "VernacExtend",
                        "70f086795f7be82ad063b2b7c6177d5bd62006d8"
                    ]
                },
                {
                    "command": [
                        "apply Zdiv_unique with (y - 1).",
                        "VernacExtend",
                        "9904955fd0529c06ea443f2018a7374055177a31"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "rewrite e.",
                        "VernacExtend",
                        "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply Zdiv_unique with (r - 1).",
                        "VernacExtend",
                        "31c1fc0122b319170ddc0a7433076d6c58b24ebc"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shr_shru_positive",
            "line_nb": 3236,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite shr_div_two_p.",
                        "VernacExtend",
                        "46a926ad1175b718b679973342ee4f1fff9d19e1"
                    ]
                },
                {
                    "command": [
                        "rewrite shru_div_two_p.",
                        "VernacExtend",
                        "6dc3b34a71bc286ec3f610310d1bdf0e2d6e5394"
                    ]
                },
                {
                    "command": [
                        "rewrite signed_eq_unsigned.",
                        "VernacExtend",
                        "0a5fff4d6bab5acacf68ae1a47394be387d69575"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply signed_positive.",
                        "VernacExtend",
                        "451f145b6c30d224f144e699df0923fd7b3f399a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "and_positive",
            "line_nb": 3245,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (unsigned y < half_modulus).",
                        "VernacExtend",
                        "06e6679e9ce29d4504777b0f8c0f5d388a8010c2"
                    ]
                },
                {
                    "command": [
                        "rewrite signed_positive in H.",
                        "VernacExtend",
                        "09d3ed621110a77d2a57f21765a5f7cf280e282b"
                    ]
                },
                {
                    "command": [
                        "unfold max_signed in H; omega.",
                        "VernacExtend",
                        "b08f1b81fa4bc81e935d59af1432c8568c6f5e72"
                    ]
                },
                {
                    "command": [
                        "generalize (sign_bit_of_unsigned y).",
                        "VernacExtend",
                        "22d747baf8289a4535cea8f588613393effa89fd"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true; auto.",
                        "VernacExtend",
                        "2530d4fd01d0742590fadf383a697c5eb37b78be"
                    ]
                },
                {
                    "command": [
                        "intros A.",
                        "VernacExtend",
                        "1e674201f6164f095fcb9efa159981a648ffff11"
                    ]
                },
                {
                    "command": [
                        "generalize (sign_bit_of_unsigned (and x y)).",
                        "VernacExtend",
                        "b5ba1b91a8a60cbc85b1252b31b31fd719a166c4"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_and.",
                        "VernacExtend",
                        "c7f6e515ba49aa8a1f1db7a7769fa71e6206de05"
                    ]
                },
                {
                    "command": [
                        "rewrite A.",
                        "VernacExtend",
                        "66a3aec75a717b72a3c9a20459f4dabe8d0df2c1"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_false_r.",
                        "VernacExtend",
                        "e8dfa19869bd43e29d5896355e5f1bf34bb7a9a4"
                    ]
                },
                {
                    "command": [
                        "unfold signed.",
                        "VernacExtend",
                        "f99b13683b7fbccb713276bdf12a56c47fabc924"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (unsigned (and x y)) half_modulus).",
                        "VernacExtend",
                        "182d0bb2e3d1311328d657ee6152871e6f8c9387"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (unsigned_range (and x y)); omega.",
                        "VernacExtend",
                        "c2ba23c4c4b4bdaa3ba9c745ea33e8bfa6323b2b"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "generalize wordsize_pos; omega.",
                        "VernacExtend",
                        "1be2fda6bfa5aa53c9fdc4049e4df24e68556740"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shr_and_is_shru_and",
            "line_nb": 3264,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply shr_shru_positive.",
                        "VernacExtend",
                        "f67ded5d036e1ea9648db3682ce17320d3e76fb9"
                    ]
                },
                {
                    "command": [
                        "apply and_positive.",
                        "VernacExtend",
                        "cb32e501832cf85518500225ef403f2c868dfac7"
                    ]
                },
                {
                    "command": [
                        "unfold lt in H.",
                        "VernacExtend",
                        "7577161adf47fb51e5468637528599d05c124141"
                    ]
                },
                {
                    "command": [
                        "rewrite signed_zero in H.",
                        "VernacExtend",
                        "17343bc330db1608dfa15e7a823742bc22510349"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (signed y) 0).",
                        "VernacExtend",
                        "ffe41beefcb49f79ce63b934d26fc3d0f600d21c"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ziter_base",
            "line_nb": 3274,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Z.iter.",
                        "VernacExtend",
                        "b941504b86af6877b3ac9130cf3c47d5564ef213"
                    ]
                },
                {
                    "command": [
                        "destruct n; auto.",
                        "VernacExtend",
                        "ac1a46c3d4b557b3710fa36973beb6e353d40fb6"
                    ]
                },
                {
                    "command": [
                        "compute in H.",
                        "VernacExtend",
                        "686103f70bd92c1e64ec2f78836e7444971cef09"
                    ]
                },
                {
                    "command": [
                        "elim H; auto.",
                        "VernacExtend",
                        "93275a139e0a54467a849c9ab468d4fd7beb5813"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ziter_succ",
            "line_nb": 3281,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct n; simpl.",
                        "VernacExtend",
                        "6554f156164019d92e1907ce49ab9159d733a0bb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Pos.add_1_r.",
                        "VernacExtend",
                        "55a2bed981075a8e459b652bca988f7e054bee2e"
                    ]
                },
                {
                    "command": [
                        "apply Pos.iter_succ.",
                        "VernacExtend",
                        "4f494f6874a06b8a1e039228167b4a7b80c0c9e2"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "compute in H.",
                        "VernacExtend",
                        "686103f70bd92c1e64ec2f78836e7444971cef09"
                    ]
                },
                {
                    "command": [
                        "elim H; auto.",
                        "VernacExtend",
                        "93275a139e0a54467a849c9ab468d4fd7beb5813"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Znatlike_ind",
            "line_nb": 3293,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (zle 0 n).",
                        "VernacExtend",
                        "087bcb1646b6217a63e74eda6b93b67029e86a3b"
                    ]
                },
                {
                    "command": [
                        "apply natlike_ind; auto.",
                        "VernacExtend",
                        "ee5b8d1380e3d82c62ef2961a05ca77c4b4b553e"
                    ]
                },
                {
                    "command": [
                        "apply H; omega.",
                        "VernacExtend",
                        "25f1ceb280800c37161013440275309d43c00c5f"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zzero_ext_spec",
            "line_nb": 3301,
            "steps": [
                {
                    "command": [
                        "unfold Zzero_ext.",
                        "VernacExtend",
                        "8fcb03629364688cef35d6de3af65938d6393e22"
                    ]
                },
                {
                    "command": [
                        "induction n using Znatlike_ind.",
                        "VernacExtend",
                        "4eefa9ecf8720d9623122a1f84796ebd183536db"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite Ziter_base; auto.",
                        "VernacExtend",
                        "69c507e2abae4346444a2572eabacc4096f7f881"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false.",
                        "VernacExtend",
                        "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztestbit_0; auto.",
                        "VernacExtend",
                        "7c1683088573bc865fd7d009b13c3de326e4e7f5"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite Ziter_succ; auto.",
                        "VernacExtend",
                        "03dd15257f523cf0877565a5a1caf90126676517"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztestbit_shiftin; auto.",
                        "VernacExtend",
                        "46ec7e9a8b00ef8ac13c8cecf9c88a0fff7b0d10"
                    ]
                },
                {
                    "command": [
                        "rewrite (Ztestbit_eq i x); auto.",
                        "VernacExtend",
                        "1af4f5fb1d240e746c0693a4729846aaaa29fdb6"
                    ]
                },
                {
                    "command": [
                        "destruct (zeq i 0).",
                        "VernacExtend",
                        "d84935205e6f3de20c609dbacd0c5438037a33e9"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "subst i.",
                        "VernacExtend",
                        "8a51b06e94f64277663e0022260aa1e58bff437c"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true; auto.",
                        "VernacExtend",
                        "2530d4fd01d0742590fadf383a697c5eb37b78be"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite IHn.",
                        "VernacExtend",
                        "ec9472e508d0ba82a8f6be939d2e4d39f35c3667"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (Z.pred i) n).",
                        "VernacExtend",
                        "3491eecc6fc8b2d7d7e88116c0221a8816775719"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true; auto.",
                        "VernacExtend",
                        "2530d4fd01d0742590fadf383a697c5eb37b78be"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false; auto.",
                        "VernacExtend",
                        "a7f28c2617535b77e0035b271ce2717cc06a3d86"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bits_zero_ext",
            "line_nb": 3329,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold zero_ext.",
                        "VernacExtend",
                        "5e977e59163ea2848b288796f8df3c35a74ebe09"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i zwordsize).",
                        "VernacExtend",
                        "cbf965911aa29c8b776e1700f06d5a1afa2ff80a"
                    ]
                },
                {
                    "command": [
                        "rewrite testbit_repr; auto.",
                        "VernacExtend",
                        "d20143ed773e39c9c2d38dc1a41b649eadbc95c6"
                    ]
                },
                {
                    "command": [
                        "rewrite Zzero_ext_spec.",
                        "VernacExtend",
                        "e15bd55590380e0f9a068b83e96a92292f233ad0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite !bits_above; auto.",
                        "VernacExtend",
                        "427e20cd388bdb9d597f8b4dfb738c9c526d0a47"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i n); auto.",
                        "VernacExtend",
                        "f3d4c5dfa327d8d47baf0b2715c47dcb9150c40f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zsign_ext_spec",
            "line_nb": 3340,
            "steps": [
                {
                    "command": [
                        "intros n0 x i I0 N0.",
                        "VernacExtend",
                        "8ad896748367ae506ea795deee347273385b62ef"
                    ]
                },
                {
                    "command": [
                        "revert x i I0.",
                        "VernacExtend",
                        "b9a1aadf461dd4e535cf664fa7d50e4e1809369f"
                    ]
                },
                {
                    "command": [
                        "pattern n0.",
                        "VernacExtend",
                        "45685a382feac7d373248a2afd7966b6f3da8355"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_lower_bound_ind with (z := 1).",
                        "VernacExtend",
                        "598dedbcdcb702ec60aa4c922b9eeb9eac7af362"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold Zsign_ext.",
                        "VernacExtend",
                        "2bc1bdeccb48cf309326408c1aa1f77d10fc5023"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (zeq x 1).",
                        "VernacExtend",
                        "4a7b60cb094be12843e71f7a5902f0ea668b0dfa"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "subst x; simpl.",
                        "VernacExtend",
                        "2f8437b331365d30d508fbd8b1b0384ceae8a188"
                    ]
                },
                {
                    "command": [
                        "replace (if zlt i 1 then i else 0) with 0.",
                        "VernacExtend",
                        "f7a8fd1b9797ba83eaccd00b93903f1a91e3064e"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztestbit_base.",
                        "VernacExtend",
                        "095d25dcb17cfd42881ac648005a7e3652330992"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.odd x0).",
                        "VernacExtend",
                        "40491273f0257c5ffb94abeee19f26adca998df9"
                    ]
                },
                {
                    "command": [
                        "apply Ztestbit_m1; auto.",
                        "VernacExtend",
                        "d1af5caedb86a41449e33b46c4ba83d48392b2c5"
                    ]
                },
                {
                    "command": [
                        "apply Ztestbit_0.",
                        "VernacExtend",
                        "9eabae5755d85655c33afa1ead756f180af22081"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i 1); omega.",
                        "VernacExtend",
                        "6aa2685566a8518f7c91d9f4c9a6da06fdc0f119"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "set (x1 := Z.pred x).",
                        "VernacExtend",
                        "bd190b3db3957d155fe9eae3cf6b06990b01b616"
                    ]
                },
                {
                    "command": [
                        "replace x1 with (Z.succ (Z.pred x1)).",
                        "VernacExtend",
                        "15cacf575705415598ff55b7d6214bd2a8387ace"
                    ]
                },
                {
                    "command": [
                        "rewrite Ziter_succ.",
                        "VernacExtend",
                        "f5fa2a84176d632618dcdfd17bf0b2e21f02f767"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztestbit_shiftin.",
                        "VernacExtend",
                        "4566040421bf5d63fd1949bb270b1f6e45af96d4"
                    ]
                },
                {
                    "command": [
                        "destruct (zeq i 0).",
                        "VernacExtend",
                        "d84935205e6f3de20c609dbacd0c5438037a33e9"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "subst i.",
                        "VernacExtend",
                        "8a51b06e94f64277663e0022260aa1e58bff437c"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true.",
                        "VernacExtend",
                        "b49135e183425368b4318af106711c28871bcc77"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztestbit_base; auto.",
                        "VernacExtend",
                        "6983e04882a216b29db1b2fbc32ddd431264929a"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "unfold x1.",
                        "VernacExtend",
                        "cd4dcfe0d88eae49343e419a7d7a326f0ec70333"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (Z.pred i) (Z.pred x)).",
                        "VernacExtend",
                        "15b341a49aa332753858e7cb787f4e53894d99c5"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true.",
                        "VernacExtend",
                        "b49135e183425368b4318af106711c28871bcc77"
                    ]
                },
                {
                    "command": [
                        "rewrite (Ztestbit_eq i x0); auto.",
                        "VernacExtend",
                        "d940d880d63b0639e4f581e80b9e9cbedb67515a"
                    ]
                },
                {
                    "command": [
                        "rewrite zeq_false; auto.",
                        "VernacExtend",
                        "d8f8647dc65cf23070a70db5ce3df4ff9417226b"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false.",
                        "VernacExtend",
                        "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
                    ]
                },
                {
                    "command": [
                        "rewrite (Ztestbit_eq (x - 1) x0).",
                        "VernacExtend",
                        "2845357e08adaf18a8a8a698445b6add13305ca7"
                    ]
                },
                {
                    "command": [
                        "rewrite zeq_false; auto.",
                        "VernacExtend",
                        "d8f8647dc65cf23070a70db5ce3df4ff9417226b"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "unfold x1; omega.",
                        "VernacExtend",
                        "9bf0624297ca2affd0a2f401ab18b69aa507da1f"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "unfold x1; omega.",
                        "VernacExtend",
                        "9bf0624297ca2affd0a2f401ab18b69aa507da1f"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bits_sign_ext",
            "line_nb": 3393,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold sign_ext.",
                        "VernacExtend",
                        "9efea3b2d32afb5423405e4130252da15c29ebf6"
                    ]
                },
                {
                    "command": [
                        "rewrite testbit_repr; auto.",
                        "VernacExtend",
                        "d20143ed773e39c9c2d38dc1a41b649eadbc95c6"
                    ]
                },
                {
                    "command": [
                        "rewrite Zsign_ext_spec.",
                        "VernacExtend",
                        "cd75f36dad4ca712f7efb6778b7347e1a2f1c0dd"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i n); auto.",
                        "VernacExtend",
                        "f3d4c5dfa327d8d47baf0b2715c47dcb9150c40f"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "zero_ext_above",
            "line_nb": 3403,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply same_bits_eq; intros.",
                        "VernacExtend",
                        "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_zero_ext.",
                        "VernacExtend",
                        "75121cbd781fe341a7520324499407a6b13b81f3"
                    ]
                },
                {
                    "command": [
                        "apply zlt_true.",
                        "VernacExtend",
                        "135d300e9c683e2995f4687be0904a8b2009f6fe"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sign_ext_above",
            "line_nb": 3411,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply same_bits_eq; intros.",
                        "VernacExtend",
                        "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
                    ]
                },
                {
                    "command": [
                        "unfold sign_ext; rewrite testbit_repr; auto.",
                        "VernacExtend",
                        "60fb700cb74998bd756102ccf8d711a6cd557ebb"
                    ]
                },
                {
                    "command": [
                        "rewrite Zsign_ext_spec.",
                        "VernacExtend",
                        "cd75f36dad4ca712f7efb6778b7347e1a2f1c0dd"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true.",
                        "VernacExtend",
                        "b49135e183425368b4318af106711c28871bcc77"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "zero_ext_and",
            "line_nb": 3422,
            "steps": [
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "rewrite testbit_repr; auto.",
                        "VernacExtend",
                        "d20143ed773e39c9c2d38dc1a41b649eadbc95c6"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztestbit_two_p_m1; intuition.",
                        "VernacExtend",
                        "af20052b78fe6f3f388e404de9e016b92638d0b8"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i n).",
                        "VernacExtend",
                        "e95249794f6baef3de0ea4980efbabfd979ed1b4"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_true_r; auto.",
                        "VernacExtend",
                        "8d3ecd774644b39473041cd140b9a59f6c79550c"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_false_r; auto.",
                        "VernacExtend",
                        "0597380d3b8c5004f944d81b561ad8146e321614"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "zero_ext_mod",
            "line_nb": 3431,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply equal_same_bits.",
                        "VernacExtend",
                        "4439b102c92624b9f7b1dd28063ebd86121be389"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztestbit_mod_two_p; auto.",
                        "VernacExtend",
                        "a7ace985b22656c74fcf94ae5275d4190a679b6a"
                    ]
                },
                {
                    "command": [
                        "fold (testbit (zero_ext n x) i).",
                        "VernacExtend",
                        "2ca1e830c2f35849c9ca992bb4c59dc9dab1c39e"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i zwordsize).",
                        "VernacExtend",
                        "cbf965911aa29c8b776e1700f06d5a1afa2ff80a"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_zero_ext; auto.",
                        "VernacExtend",
                        "508f8be23e4d43a9f071aa7e8bbe9cb59f41e1a9"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_above.",
                        "VernacExtend",
                        "03e9b48636da98aadfef128985f39171a63a4d68"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false; auto.",
                        "VernacExtend",
                        "a7f28c2617535b77e0035b271ce2717cc06a3d86"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "zero_ext_widen",
            "line_nb": 3445,
            "steps": [
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i n).",
                        "VernacExtend",
                        "e95249794f6baef3de0ea4980efbabfd979ed1b4"
                    ]
                },
                {
                    "command": [
                        "apply zlt_true.",
                        "VernacExtend",
                        "135d300e9c683e2995f4687be0904a8b2009f6fe"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i n'); auto.",
                        "VernacExtend",
                        "3d37562c6334ebc5cfeef198fcd0cdc43e27285a"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sign_ext_widen",
            "line_nb": 3454,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt n' zwordsize).",
                        "VernacExtend",
                        "5bbd179849bcccea4dd873e99fd5bc31300f973f"
                    ]
                },
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i n').",
                        "VernacExtend",
                        "d55843d0228664dea9f2838fea843fc35e95b135"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite (zlt_false _ i n).",
                        "VernacExtend",
                        "129b342d27d68f8408ccbdc6daa3e46a8ba35bc2"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (n' - 1) n); f_equal; omega.",
                        "VernacExtend",
                        "5189ca1d10eee0ead945576135f23cda90dae134"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i n'); omega.",
                        "VernacExtend",
                        "e358133a5e98c83e973fb1a3bdf357e8af28a3b2"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply sign_ext_above; auto.",
                        "VernacExtend",
                        "9f8083dcb7f926f856296481641679c1c23a2f4f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sign_zero_ext_widen",
            "line_nb": 3469,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt n' zwordsize).",
                        "VernacExtend",
                        "5bbd179849bcccea4dd873e99fd5bc31300f973f"
                    ]
                },
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i n').",
                        "VernacExtend",
                        "d55843d0228664dea9f2838fea843fc35e95b135"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite !zlt_false.",
                        "VernacExtend",
                        "6845e781b8908255eb35986619d0358459e9aaa9"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i n'); omega.",
                        "VernacExtend",
                        "e358133a5e98c83e973fb1a3bdf357e8af28a3b2"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply sign_ext_above; auto.",
                        "VernacExtend",
                        "9f8083dcb7f926f856296481641679c1c23a2f4f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "zero_ext_narrow",
            "line_nb": 3484,
            "steps": [
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i n).",
                        "VernacExtend",
                        "e95249794f6baef3de0ea4980efbabfd979ed1b4"
                    ]
                },
                {
                    "command": [
                        "apply zlt_true.",
                        "VernacExtend",
                        "135d300e9c683e2995f4687be0904a8b2009f6fe"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sign_ext_narrow",
            "line_nb": 3494,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt n zwordsize).",
                        "VernacExtend",
                        "76daac13afefbd872f5aedf01ea7582726d91f39"
                    ]
                },
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i n); f_equal; apply zlt_true; omega.",
                        "VernacExtend",
                        "cae35df721cc4d4f2c19a876857cf14a809fed0f"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i n); omega.",
                        "VernacExtend",
                        "bc7921a05cf4b8bfafd177ce349c11e5a8ca9770"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite (sign_ext_above n').",
                        "VernacExtend",
                        "bb15fc689ffa3508f678462f67f8c4d6825bbcca"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "zero_sign_ext_narrow",
            "line_nb": 3507,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt n' zwordsize).",
                        "VernacExtend",
                        "5bbd179849bcccea4dd873e99fd5bc31300f973f"
                    ]
                },
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i n); auto.",
                        "VernacExtend",
                        "f3d4c5dfa327d8d47baf0b2715c47dcb9150c40f"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true; auto.",
                        "VernacExtend",
                        "2530d4fd01d0742590fadf383a697c5eb37b78be"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite sign_ext_above; auto.",
                        "VernacExtend",
                        "2b2c3199e001ac63ebbfff246f76309d215373dc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "zero_ext_idem",
            "line_nb": 3519,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply zero_ext_widen.",
                        "VernacExtend",
                        "fb916c4a30b2faecbf9a2a1f62a4aefa890c125d"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sign_ext_idem",
            "line_nb": 3524,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply sign_ext_widen.",
                        "VernacExtend",
                        "a1980c8c2669c5d3e8b14a9bd66893d1043c0e25"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sign_ext_zero_ext",
            "line_nb": 3529,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt n zwordsize).",
                        "VernacExtend",
                        "76daac13afefbd872f5aedf01ea7582726d91f39"
                    ]
                },
                {
                    "command": [
                        "bit_solve.",
                        "VernacExtend",
                        "5fdc71c3c0513a0a774137b89f357afcac7883bd"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i n).",
                        "VernacExtend",
                        "e95249794f6baef3de0ea4980efbabfd979ed1b4"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true; auto.",
                        "VernacExtend",
                        "2530d4fd01d0742590fadf383a697c5eb37b78be"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true; auto.",
                        "VernacExtend",
                        "2530d4fd01d0742590fadf383a697c5eb37b78be"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i n); omega.",
                        "VernacExtend",
                        "bc7921a05cf4b8bfafd177ce349c11e5a8ca9770"
                    ]
                },
                {
                    "command": [
                        "rewrite zero_ext_above; auto.",
                        "VernacExtend",
                        "d41a0c503a51e80826a16393d3a8b9e56af4526b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "zero_ext_sign_ext",
            "line_nb": 3540,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply zero_sign_ext_narrow.",
                        "VernacExtend",
                        "248d310417df7d54ac3c58696eb2721ae3468831"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sign_ext_equal_if_zero_equal",
            "line_nb": 3545,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (sign_ext_zero_ext n x H).",
                        "VernacExtend",
                        "e59a532413387c665fcc418c551cbe51d0e36180"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (sign_ext_zero_ext n y H).",
                        "VernacExtend",
                        "a9039df0ca77757f3c0395b2dee662d917a591b9"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "zero_ext_shru_shl",
            "line_nb": 3551,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (unsigned y = zwordsize - n).",
                        "VernacExtend",
                        "cead33ed73d75c824e632d23cabc54808f1d6ca3"
                    ]
                },
                {
                    "command": [
                        "unfold y.",
                        "VernacExtend",
                        "29a8f7868cdd745151dd20abb7f3c232bfc6cb70"
                    ]
                },
                {
                    "command": [
                        "apply unsigned_repr.",
                        "VernacExtend",
                        "cbb55125b21da3156cf49c45f71d95a6743593f6"
                    ]
                },
                {
                    "command": [
                        "generalize wordsize_max_unsigned.",
                        "VernacExtend",
                        "818588ddd7da527827745e853d3040136c0e060b"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply same_bits_eq; intros.",
                        "VernacExtend",
                        "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_zero_ext.",
                        "VernacExtend",
                        "75121cbd781fe341a7520324499407a6b13b81f3"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_shru; auto.",
                        "VernacExtend",
                        "c4c629df9cf060299ef7b4c0d8265d9d79a27d30"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i n).",
                        "VernacExtend",
                        "e95249794f6baef3de0ea4980efbabfd979ed1b4"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true.",
                        "VernacExtend",
                        "b49135e183425368b4318af106711c28871bcc77"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_shl.",
                        "VernacExtend",
                        "a0e1637f702fc4b84135a3530c9ecde2820a246f"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false.",
                        "VernacExtend",
                        "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false.",
                        "VernacExtend",
                        "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sign_ext_shr_shl",
            "line_nb": 3575,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (unsigned y = zwordsize - n).",
                        "VernacExtend",
                        "cead33ed73d75c824e632d23cabc54808f1d6ca3"
                    ]
                },
                {
                    "command": [
                        "unfold y.",
                        "VernacExtend",
                        "29a8f7868cdd745151dd20abb7f3c232bfc6cb70"
                    ]
                },
                {
                    "command": [
                        "apply unsigned_repr.",
                        "VernacExtend",
                        "cbb55125b21da3156cf49c45f71d95a6743593f6"
                    ]
                },
                {
                    "command": [
                        "generalize wordsize_max_unsigned.",
                        "VernacExtend",
                        "818588ddd7da527827745e853d3040136c0e060b"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply same_bits_eq; intros.",
                        "VernacExtend",
                        "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_sign_ext.",
                        "VernacExtend",
                        "7601717c22d10461182faf9daf64531116424027"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_shr; auto.",
                        "VernacExtend",
                        "46a4f6a2843486202c3e28200045f786c7aa06e8"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i n).",
                        "VernacExtend",
                        "e95249794f6baef3de0ea4980efbabfd979ed1b4"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true.",
                        "VernacExtend",
                        "b49135e183425368b4318af106711c28871bcc77"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_shl.",
                        "VernacExtend",
                        "a0e1637f702fc4b84135a3530c9ecde2820a246f"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false.",
                        "VernacExtend",
                        "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false.",
                        "VernacExtend",
                        "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_shl.",
                        "VernacExtend",
                        "a0e1637f702fc4b84135a3530c9ecde2820a246f"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false.",
                        "VernacExtend",
                        "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "zero_ext_range",
            "line_nb": 3605,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite zero_ext_mod; auto.",
                        "VernacExtend",
                        "4e40ee57461148745aae4f661b164abfc826bac4"
                    ]
                },
                {
                    "command": [
                        "apply Z_mod_lt.",
                        "VernacExtend",
                        "d33d3cab9911c0f11554b4e753af00e7b5fcc4ca"
                    ]
                },
                {
                    "command": [
                        "apply two_p_gt_ZERO.",
                        "VernacExtend",
                        "9690045ae69e536e22b7db6c37ee985732e7c4b7"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqmod_zero_ext",
            "line_nb": 3612,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite zero_ext_mod; auto.",
                        "VernacExtend",
                        "4e40ee57461148745aae4f661b164abfc826bac4"
                    ]
                },
                {
                    "command": [
                        "apply eqmod_sym.",
                        "VernacExtend",
                        "902d0b5a0351b9e5d185513882fb9db7c28921db"
                    ]
                },
                {
                    "command": [
                        "apply eqmod_mod.",
                        "VernacExtend",
                        "1729dd014b983334b1b539b611f2322ed5a7d321"
                    ]
                },
                {
                    "command": [
                        "apply two_p_gt_ZERO.",
                        "VernacExtend",
                        "9690045ae69e536e22b7db6c37ee985732e7c4b7"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sign_ext_range",
            "line_nb": 3620,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite sign_ext_shr_shl; auto.",
                        "VernacExtend",
                        "ec1fd571f811acb159c03e9d58fb08c7011ae1d0"
                    ]
                },
                {
                    "command": [
                        "set (X := shl x (repr (zwordsize - n))).",
                        "VernacExtend",
                        "be89e00057948fdbdd51f598872a1dfde7d1bc20"
                    ]
                },
                {
                    "command": [
                        "assert (two_p (n - 1) > 0) by (apply two_p_gt_ZERO; omega).",
                        "VernacExtend",
                        "811c56578c9a0882123cb9e78715085618124a7a"
                    ]
                },
                {
                    "command": [
                        "assert (unsigned (repr (zwordsize - n)) = zwordsize - n).",
                        "VernacExtend",
                        "beb0533b4e34b86f4abf002cfe62caa24a0dbdf0"
                    ]
                },
                {
                    "command": [
                        "apply unsigned_repr.",
                        "VernacExtend",
                        "cbb55125b21da3156cf49c45f71d95a6743593f6"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "generalize wordsize_max_unsigned; omega.",
                        "VernacExtend",
                        "3f1b96d7bb5d8b56488da98617ce0a4bf6d89d59"
                    ]
                },
                {
                    "command": [
                        "rewrite shr_div_two_p.",
                        "VernacExtend",
                        "46a926ad1175b718b679973342ee4f1fff9d19e1"
                    ]
                },
                {
                    "command": [
                        "rewrite signed_repr.",
                        "VernacExtend",
                        "c2ed7b2fcebad79aff5b86b90cf7dda2f0d52061"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "apply Zdiv_interval_1.",
                        "VernacExtend",
                        "249bb7e54e7cf9bc477279682f71f9d1da915d4d"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply two_p_gt_ZERO; omega.",
                        "VernacExtend",
                        "8f34bbf65f7cc242f0b3064d493088fa943ee5c0"
                    ]
                },
                {
                    "command": [
                        "replace (- two_p (n - 1) * two_p (zwordsize - n)) with (- (two_p (n - 1) * two_p (zwordsize - n))) by ring.",
                        "VernacExtend",
                        "89e61475e691fd07cc866eeaaacc17f71a08ecde"
                    ]
                },
                {
                    "command": [
                        "rewrite <- two_p_is_exp.",
                        "VernacExtend",
                        "3e5dd28ca80a1938686082ddc0a22c4345d87d29"
                    ]
                },
                {
                    "command": [
                        "replace (n - 1 + (zwordsize - n)) with (zwordsize - 1) by omega.",
                        "VernacExtend",
                        "569045023ebe91f33519d18a38b8f516b96991c9"
                    ]
                },
                {
                    "command": [
                        "rewrite <- half_modulus_power.",
                        "VernacExtend",
                        "820a514ed4da7557e1e67fe980878f5a9b189d5d"
                    ]
                },
                {
                    "command": [
                        "generalize (signed_range X).",
                        "VernacExtend",
                        "f4dd4c6ceb718a2406661b5f4c16f51f89cf3cfd"
                    ]
                },
                {
                    "command": [
                        "unfold min_signed, max_signed.",
                        "VernacExtend",
                        "33c0760e781552aec857e6894a7ca108a9f152c6"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply Zdiv_interval_2.",
                        "VernacExtend",
                        "a54cd5bca005ddf7f7f89e67c7214cc705fff803"
                    ]
                },
                {
                    "command": [
                        "apply signed_range.",
                        "VernacExtend",
                        "9028b7ceee94c7065a016841414b7629811dbd3f"
                    ]
                },
                {
                    "command": [
                        "generalize min_signed_neg; omega.",
                        "VernacExtend",
                        "86eb16b26ac72e8e0a50f866e321c0f4350d8c3a"
                    ]
                },
                {
                    "command": [
                        "generalize max_signed_pos; omega.",
                        "VernacExtend",
                        "23712da0ec0c042f16a9d6d1dde70b09948423dd"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "apply two_p_gt_ZERO.",
                        "VernacExtend",
                        "9690045ae69e536e22b7db6c37ee985732e7c4b7"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqmod_sign_ext'",
            "line_nb": 3654,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "set (N := Z.to_nat n).",
                        "VernacExtend",
                        "a52b8c4619412f1b5fdd75ea6be1ca05dbccf8f3"
                    ]
                },
                {
                    "command": [
                        "assert (Z.of_nat N = n) by (apply Z2Nat.id; omega).",
                        "VernacExtend",
                        "87857d34be09ba9ea945a29d235802603354aee5"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0.",
                        "VernacExtend",
                        "f6718c09e494e327328e3c2003dd236939e231f9"
                    ]
                },
                {
                    "command": [
                        "rewrite <- two_power_nat_two_p.",
                        "VernacExtend",
                        "c026b56990c64eb1f6e2ff8bbc93117be8aced20"
                    ]
                },
                {
                    "command": [
                        "apply eqmod_same_bits; intros.",
                        "VernacExtend",
                        "9387b192bcd097b3a7c7322fafe089d43981c779"
                    ]
                },
                {
                    "command": [
                        "rewrite H0 in H1.",
                        "VernacExtend",
                        "45eb32137302b214d582b77378332f104f8e1d7f"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "fold (testbit (sign_ext n x) i).",
                        "VernacExtend",
                        "06e84634690ea5b9dc40dba93905467e37318014"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_sign_ext.",
                        "VernacExtend",
                        "7601717c22d10461182faf9daf64531116424027"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true.",
                        "VernacExtend",
                        "b49135e183425368b4318af106711c28871bcc77"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqmod_sign_ext",
            "line_nb": 3671,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply eqmod_trans with (unsigned (sign_ext n x)).",
                        "VernacExtend",
                        "d1073ccd6678b5dcf8f048cb6be1cef4e70de4ec"
                    ]
                },
                {
                    "command": [
                        "apply eqmod_divides with modulus.",
                        "VernacExtend",
                        "992fca5cd20238ecb17c8ce75482099da8475a25"
                    ]
                },
                {
                    "command": [
                        "apply eqm_signed_unsigned.",
                        "VernacExtend",
                        "d8614df8b73ff309ccafc1b69753d7e1944f658e"
                    ]
                },
                {
                    "command": [
                        "exists (two_p (zwordsize - n)).",
                        "VernacExtend",
                        "588cf4de04247244c5ecf59cc07b8dc25d08b2b0"
                    ]
                },
                {
                    "command": [
                        "unfold modulus.",
                        "VernacExtend",
                        "202f368b6f08b873343d2b49e63dddcb32f23f66"
                    ]
                },
                {
                    "command": [
                        "rewrite two_power_nat_two_p.",
                        "VernacExtend",
                        "e21f56ecabf68cda5e6534a700cce51443bacebe"
                    ]
                },
                {
                    "command": [
                        "fold zwordsize.",
                        "VernacExtend",
                        "17af035e4e4c23ca9f63a90713b9d548e98e411e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- two_p_is_exp.",
                        "VernacExtend",
                        "3e5dd28ca80a1938686082ddc0a22c4345d87d29"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply eqmod_sign_ext'; auto.",
                        "VernacExtend",
                        "17e3456e156520149b58550fcaa4fee5ac0e9c95"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "one_bits_range",
            "line_nb": 3687,
            "steps": [
                {
                    "command": [
                        "assert (A: forall p, 0 <= p < zwordsize -> ltu (repr p) iwordsize = true).",
                        "VernacExtend",
                        "9f349a41384325c1f36089ccc610ae2170a78d2d"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold ltu, iwordsize.",
                        "VernacExtend",
                        "d5dfaa44e5aa433432c70f900eb85fe365108df3"
                    ]
                },
                {
                    "command": [
                        "apply zlt_true.",
                        "VernacExtend",
                        "135d300e9c683e2995f4687be0904a8b2009f6fe"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite unsigned_repr.",
                        "VernacExtend",
                        "e8d4b7e060e6f4fa4265ec5bdaf47f2be4e39bda"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "generalize wordsize_max_unsigned; omega.",
                        "VernacExtend",
                        "3f1b96d7bb5d8b56488da98617ce0a4bf6d89d59"
                    ]
                },
                {
                    "command": [
                        "generalize wordsize_max_unsigned; omega.",
                        "VernacExtend",
                        "3f1b96d7bb5d8b56488da98617ce0a4bf6d89d59"
                    ]
                },
                {
                    "command": [
                        "unfold one_bits.",
                        "VernacExtend",
                        "1678f59c2310072211a505d0c4ec6b5583d99864"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (list_in_map_inv _ _ _ H) as [i0 [EQ IN]].",
                        "VernacExtend",
                        "9010afaf954a3ed97abdb8f8fa264b711725c4d2"
                    ]
                },
                {
                    "command": [
                        "subst i.",
                        "VernacExtend",
                        "8a51b06e94f64277663e0022260aa1e58bff437c"
                    ]
                },
                {
                    "command": [
                        "apply A.",
                        "VernacExtend",
                        "1a87f2153b7f216e98a49f505249a93490a4689c"
                    ]
                },
                {
                    "command": [
                        "apply Z_one_bits_range with (unsigned x); auto.",
                        "VernacExtend",
                        "e0f82af6092b65119b431f086e7305032bd33cc3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "one_bits_decomp",
            "line_nb": 3704,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "transitivity (repr (powerserie (Z_one_bits wordsize (unsigned x) 0))).",
                        "VernacExtend",
                        "e0952a9327551128b7adbf86b7b1aabbc0654447"
                    ]
                },
                {
                    "command": [
                        "transitivity (repr (unsigned x)).",
                        "VernacExtend",
                        "ce2d78b728dff46d9f3a12cb6349e1d7b2305f1d"
                    ]
                },
                {
                    "command": [
                        "auto with ints.",
                        "VernacExtend",
                        "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
                    ]
                },
                {
                    "command": [
                        "decEq.",
                        "VernacExtend",
                        "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
                    ]
                },
                {
                    "command": [
                        "apply Z_one_bits_powerserie.",
                        "VernacExtend",
                        "981951fa4d823eaee4fe526b60bded741c0cbaca"
                    ]
                },
                {
                    "command": [
                        "auto with ints.",
                        "VernacExtend",
                        "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
                    ]
                },
                {
                    "command": [
                        "unfold one_bits.",
                        "VernacExtend",
                        "1678f59c2310072211a505d0c4ec6b5583d99864"
                    ]
                },
                {
                    "command": [
                        "generalize (Z_one_bits_range (unsigned x)).",
                        "VernacExtend",
                        "fed53754c616410b537c15a48d0ce64048f5827c"
                    ]
                },
                {
                    "command": [
                        "generalize (Z_one_bits wordsize (unsigned x) 0).",
                        "VernacExtend",
                        "ad579a65080cc0ab0c7b9cc0321d94af3e65c097"
                    ]
                },
                {
                    "command": [
                        "induction l.",
                        "VernacExtend",
                        "1194af70832939708f8c7fde2f18f81c37b97a0c"
                    ]
                },
                {
                    "command": [
                        "intros; reflexivity.",
                        "VernacExtend",
                        "c20cfa06d7b692e82c145d2df3bde4c2fe4eb461"
                    ]
                },
                {
                    "command": [
                        "intros; simpl.",
                        "VernacExtend",
                        "3da5a0bf1c6e40c602010ee4543b1d990c82e623"
                    ]
                },
                {
                    "command": [
                        "rewrite <- IHl.",
                        "VernacExtend",
                        "d08c434fe9e4c4b4cc3e1701a922431b2b99a42a"
                    ]
                },
                {
                    "command": [
                        "unfold add.",
                        "VernacExtend",
                        "11cf98bf231f22df486b46b3b6a1c38a94e859dd"
                    ]
                },
                {
                    "command": [
                        "apply eqm_samerepr.",
                        "VernacExtend",
                        "2226a5674ed5a7db984e878fdbb37775ca665295"
                    ]
                },
                {
                    "command": [
                        "apply eqm_add.",
                        "VernacExtend",
                        "6c81c3e6c0a0d0574105329a31bbe3cdf542f623"
                    ]
                },
                {
                    "command": [
                        "rewrite shl_mul_two_p.",
                        "VernacExtend",
                        "22cc3304a3a573fd3d033d2dafe6f62e99726c2b"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_commut.",
                        "VernacExtend",
                        "7e479a6cc087b15b3e77ca62eef65a115285e229"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_one.",
                        "VernacExtend",
                        "48e185ca99d9fb7850b9fee25eb6e9a16ab7f505"
                    ]
                },
                {
                    "command": [
                        "apply eqm_unsigned_repr_r.",
                        "VernacExtend",
                        "0911e24b4d5bf4d1fa1c42c2b6b4303c14b2d0db"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_repr.",
                        "VernacExtend",
                        "5134990e153a3f2ce893c9ea9837f183c322ceb2"
                    ]
                },
                {
                    "command": [
                        "auto with ints.",
                        "VernacExtend",
                        "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
                    ]
                },
                {
                    "command": [
                        "generalize (H a (in_eq _ _)).",
                        "VernacExtend",
                        "7aff8e866358886db9008f6d0a4ea9e7377e78ff"
                    ]
                },
                {
                    "command": [
                        "generalize wordsize_max_unsigned.",
                        "VernacExtend",
                        "818588ddd7da527827745e853d3040136c0e060b"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "auto with ints.",
                        "VernacExtend",
                        "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
                    ]
                },
                {
                    "command": [
                        "intros; apply H; auto with coqlib.",
                        "VernacExtend",
                        "2dd1d5db6b658c80bb41c82faed0ca1b45c2e78e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "negate_cmp",
            "line_nb": 3734,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct c; simpl; try rewrite negb_elim; auto.",
                        "VernacExtend",
                        "36cdd5083060e460ce16fed4595e3a17eb55b0ee"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "negate_cmpu",
            "line_nb": 3738,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct c; simpl; try rewrite negb_elim; auto.",
                        "VernacExtend",
                        "36cdd5083060e460ce16fed4595e3a17eb55b0ee"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "swap_cmp",
            "line_nb": 3742,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct c; simpl; auto.",
                        "VernacExtend",
                        "9a8c53e38efcde2edf8b5678b2171eb173be54f8"
                    ]
                },
                {
                    "command": [
                        "apply eq_sym.",
                        "VernacExtend",
                        "313410cb7bcb68dc243125f00e91764f51d94be6"
                    ]
                },
                {
                    "command": [
                        "decEq.",
                        "VernacExtend",
                        "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
                    ]
                },
                {
                    "command": [
                        "apply eq_sym.",
                        "VernacExtend",
                        "313410cb7bcb68dc243125f00e91764f51d94be6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "swap_cmpu",
            "line_nb": 3749,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct c; simpl; auto.",
                        "VernacExtend",
                        "9a8c53e38efcde2edf8b5678b2171eb173be54f8"
                    ]
                },
                {
                    "command": [
                        "apply eq_sym.",
                        "VernacExtend",
                        "313410cb7bcb68dc243125f00e91764f51d94be6"
                    ]
                },
                {
                    "command": [
                        "decEq.",
                        "VernacExtend",
                        "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
                    ]
                },
                {
                    "command": [
                        "apply eq_sym.",
                        "VernacExtend",
                        "313410cb7bcb68dc243125f00e91764f51d94be6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "translate_eq",
            "line_nb": 3756,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold eq.",
                        "VernacExtend",
                        "933b6273fd52e184377d2b6af7fe95b080d1399c"
                    ]
                },
                {
                    "command": [
                        "case (zeq (unsigned x) (unsigned y)); intro.",
                        "VernacExtend",
                        "d4d8355bea845a378d4f1b5ef96581376650a64d"
                    ]
                },
                {
                    "command": [
                        "unfold add.",
                        "VernacExtend",
                        "11cf98bf231f22df486b46b3b6a1c38a94e859dd"
                    ]
                },
                {
                    "command": [
                        "rewrite e.",
                        "VernacExtend",
                        "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
                    ]
                },
                {
                    "command": [
                        "apply zeq_true.",
                        "VernacExtend",
                        "af0121a2373c6f0f0aecd87040e8474a45a41dff"
                    ]
                },
                {
                    "command": [
                        "apply zeq_false.",
                        "VernacExtend",
                        "638f2ef719046a383079789ec905f48e720c6eaf"
                    ]
                },
                {
                    "command": [
                        "unfold add.",
                        "VernacExtend",
                        "11cf98bf231f22df486b46b3b6a1c38a94e859dd"
                    ]
                },
                {
                    "command": [
                        "red; intro.",
                        "VernacExtend",
                        "12e00b6ab6f8834b6f81959ca42843abaa311f37"
                    ]
                },
                {
                    "command": [
                        "apply n.",
                        "VernacExtend",
                        "ed7192228e57856197020582fd87949160a69557"
                    ]
                },
                {
                    "command": [
                        "apply eqm_small_eq; auto with ints.",
                        "VernacExtend",
                        "fda35641cb4e1b5844a36977950123ddf290fe76"
                    ]
                },
                {
                    "command": [
                        "replace (unsigned x) with ((unsigned x + unsigned d) - unsigned d).",
                        "VernacExtend",
                        "f9cfce50fa145b76ba42065641cc263cdf3e1dae"
                    ]
                },
                {
                    "command": [
                        "replace (unsigned y) with ((unsigned y + unsigned d) - unsigned d).",
                        "VernacExtend",
                        "ef88b3be2860ad1f548a70e3aa149d1f524c394d"
                    ]
                },
                {
                    "command": [
                        "apply eqm_sub.",
                        "VernacExtend",
                        "89203e9861d3d20e16db6ba55a6a41de8352f78f"
                    ]
                },
                {
                    "command": [
                        "apply eqm_trans with (unsigned (repr (unsigned x + unsigned d))).",
                        "VernacExtend",
                        "4887e79d99142a4dd0fb12931dc5d83a5835e8ee"
                    ]
                },
                {
                    "command": [
                        "eauto with ints.",
                        "VernacExtend",
                        "df94bcbc17835e3e591fa9c9e43cc784462f1d09"
                    ]
                },
                {
                    "command": [
                        "apply eqm_trans with (unsigned (repr (unsigned y + unsigned d))).",
                        "VernacExtend",
                        "3316dcb7f326ddb60f8d233806ce93d7f9df3ccc"
                    ]
                },
                {
                    "command": [
                        "eauto with ints.",
                        "VernacExtend",
                        "df94bcbc17835e3e591fa9c9e43cc784462f1d09"
                    ]
                },
                {
                    "command": [
                        "eauto with ints.",
                        "VernacExtend",
                        "df94bcbc17835e3e591fa9c9e43cc784462f1d09"
                    ]
                },
                {
                    "command": [
                        "eauto with ints.",
                        "VernacExtend",
                        "df94bcbc17835e3e591fa9c9e43cc784462f1d09"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "translate_ltu",
            "line_nb": 3780,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold add.",
                        "VernacExtend",
                        "11cf98bf231f22df486b46b3b6a1c38a94e859dd"
                    ]
                },
                {
                    "command": [
                        "unfold ltu.",
                        "VernacExtend",
                        "e59e12052a96cc6c37e4e3abfd319dcb453c0f12"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite unsigned_repr; auto.",
                        "VernacExtend",
                        "924927bb9ff6233b3ceaf5b3d7f44a89bad325f1"
                    ]
                },
                {
                    "command": [
                        "case (zlt (unsigned x) (unsigned y)); intro.",
                        "VernacExtend",
                        "fb0a10066c417e9517174393d577affcad937dec"
                    ]
                },
                {
                    "command": [
                        "apply zlt_true.",
                        "VernacExtend",
                        "135d300e9c683e2995f4687be0904a8b2009f6fe"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply zlt_false.",
                        "VernacExtend",
                        "be2bba19d1146ae87d6aab887548ee6a38065fd7"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "translate_cmpu",
            "line_nb": 3791,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold cmpu.",
                        "VernacExtend",
                        "bcfc413c8304bc0ed7781a2cc1b0f182075e56a4"
                    ]
                },
                {
                    "command": [
                        "rewrite translate_eq.",
                        "VernacExtend",
                        "b85dff9defc82024f8044f29afb185247f284814"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite translate_ltu; auto.",
                        "VernacExtend",
                        "603fd450f09628170424a089671e833ea08c6489"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "translate_lt",
            "line_nb": 3797,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite add_signed.",
                        "VernacExtend",
                        "8ef07960004a0590b55c827141bac071b73f6cc7"
                    ]
                },
                {
                    "command": [
                        "unfold lt.",
                        "VernacExtend",
                        "2e821d407c03d5f5e572c51453fdc618d9dec364"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite signed_repr; auto.",
                        "VernacExtend",
                        "c5c24306ce74fbb697197be0bba6da2e148ae136"
                    ]
                },
                {
                    "command": [
                        "case (zlt (signed x) (signed y)); intro.",
                        "VernacExtend",
                        "55129f5fbb78855b826defc87dab0a5cb73aaf91"
                    ]
                },
                {
                    "command": [
                        "apply zlt_true.",
                        "VernacExtend",
                        "135d300e9c683e2995f4687be0904a8b2009f6fe"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply zlt_false.",
                        "VernacExtend",
                        "be2bba19d1146ae87d6aab887548ee6a38065fd7"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "translate_cmp",
            "line_nb": 3808,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold cmp.",
                        "VernacExtend",
                        "adc910ce4f6056d2017f8a94c4edbcaba937cedc"
                    ]
                },
                {
                    "command": [
                        "rewrite translate_eq.",
                        "VernacExtend",
                        "b85dff9defc82024f8044f29afb185247f284814"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite translate_lt; auto.",
                        "VernacExtend",
                        "ff0749ffc58f67ec707e03fd64f2b3688179c6c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "notbool_isfalse_istrue",
            "line_nb": 3814,
            "steps": [
                {
                    "command": [
                        "unfold is_false, is_true, notbool; intros; subst x.",
                        "VernacExtend",
                        "3fe000fd7f4421d2c0ee6b7b992b031b8b7f1fe4"
                    ]
                },
                {
                    "command": [
                        "rewrite eq_true.",
                        "VernacExtend",
                        "1066b69102f46f529de3e1f135bc7f35df936697"
                    ]
                },
                {
                    "command": [
                        "apply one_not_zero.",
                        "VernacExtend",
                        "3100bf57338f28e8a19aae3a83d8631989ffd4d8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "notbool_istrue_isfalse",
            "line_nb": 3819,
            "steps": [
                {
                    "command": [
                        "unfold is_false, is_true, notbool; intros.",
                        "VernacExtend",
                        "54ca4bb268a008a1a7d15d80176d8b3eb4814883"
                    ]
                },
                {
                    "command": [
                        "generalize (eq_spec x zero).",
                        "VernacExtend",
                        "00cef7c308f4b21534eefafbb30ed81f8857f7b5"
                    ]
                },
                {
                    "command": [
                        "case (eq x zero); intro.",
                        "VernacExtend",
                        "33915f3fcc6f24231f774eccffcf575a905da83e"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltu_range_test",
            "line_nb": 3826,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold ltu in H.",
                        "VernacExtend",
                        "2240a3877f776610e43c93d10a774fc5adc8583d"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (unsigned x) (unsigned y)); try discriminate.",
                        "VernacExtend",
                        "74c161ac529944e42a1eaf5fb5c92954f27aba4b"
                    ]
                },
                {
                    "command": [
                        "rewrite signed_eq_unsigned.",
                        "VernacExtend",
                        "0a5fff4d6bab5acacf68ae1a47394be387d69575"
                    ]
                },
                {
                    "command": [
                        "generalize (unsigned_range x).",
                        "VernacExtend",
                        "7892db8fc005b0cd4ce2d3aa05f16d9b6948c153"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_sub_overflow",
            "line_nb": 3835,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold negative, sub_overflow, lt.",
                        "VernacExtend",
                        "b82d315726bc9d713615bbc3ef76b63c57f1e1ca"
                    ]
                },
                {
                    "command": [
                        "rewrite sub_signed.",
                        "VernacExtend",
                        "836169b6b1fe4c8a01cd3c1d96232c9c71bebb47"
                    ]
                },
                {
                    "command": [
                        "rewrite signed_zero.",
                        "VernacExtend",
                        "19d56ca0cd36da40c29724bb93cb20d76340e45c"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.sub_0_r.",
                        "VernacExtend",
                        "7c1ebdca8a3d1d773bf152b4a568fe42ea3a288b"
                    ]
                },
                {
                    "command": [
                        "generalize (signed_range x) (signed_range y).",
                        "VernacExtend",
                        "a2bcf6d5a8bc710f72001c54a871728e9470ba4b"
                    ]
                },
                {
                    "command": [
                        "set (X := signed x); set (Y := signed y).",
                        "VernacExtend",
                        "8de248c11d283151190ff2f79a32c0e3d16ebc8a"
                    ]
                },
                {
                    "command": [
                        "intros RX RY.",
                        "VernacExtend",
                        "3c0f6a0a84851192cbff25ee1d54e93ae78ec1ed"
                    ]
                },
                {
                    "command": [
                        "unfold min_signed, max_signed in *.",
                        "VernacExtend",
                        "0a5ce9383c7eaa014ad10d6332461beadea6480f"
                    ]
                },
                {
                    "command": [
                        "generalize half_modulus_pos half_modulus_modulus; intros HM MM.",
                        "VernacExtend",
                        "4be60b0e7d852db0810818ad5f838485b5558f32"
                    ]
                },
                {
                    "command": [
                        "destruct (zle 0 (X - Y)).",
                        "VernacExtend",
                        "a6da82099772e266a63167535f866e6e6bec5687"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold proj_sumbool at 1; rewrite zle_true at 1 by omega.",
                        "VernacExtend",
                        "785af41bd1d613ea12f44caff5435209f8e9e46b"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite (zlt_false _ X) by omega.",
                        "VernacExtend",
                        "e52a59a883aead102034b863b393d935cecada85"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (X - Y) half_modulus).",
                        "VernacExtend",
                        "3d5d62fe24d4d93adbbb672404cff4572db6823f"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "unfold proj_sumbool; rewrite zle_true by omega.",
                        "VernacExtend",
                        "29e89f5f7dad9aab245cf35ef8c44e1ccc4af9fc"
                    ]
                },
                {
                    "command": [
                        "rewrite signed_repr.",
                        "VernacExtend",
                        "c2ed7b2fcebad79aff5b86b90cf7dda2f0d52061"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false by omega.",
                        "VernacExtend",
                        "1a3d93f438781af1cb3b43101336d435afaef9a1"
                    ]
                },
                {
                    "command": [
                        "apply xor_idem.",
                        "VernacExtend",
                        "66aedcd283392792f8d46ba2677c964814c2c6ae"
                    ]
                },
                {
                    "command": [
                        "unfold min_signed, max_signed; omega.",
                        "VernacExtend",
                        "8a2751f9f2b8d684e1e27f3060479ed0bde88d25"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "unfold proj_sumbool; rewrite zle_false by omega.",
                        "VernacExtend",
                        "563ea0aac829a5f0187fc2796eedba00a4fe94f4"
                    ]
                },
                {
                    "command": [
                        "replace (signed (repr (X - Y))) with (X - Y - modulus).",
                        "VernacExtend",
                        "8524199328f6882e0819da8ef35cb47ba59086c5"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true by omega.",
                        "VernacExtend",
                        "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
                    ]
                },
                {
                    "command": [
                        "apply xor_idem.",
                        "VernacExtend",
                        "66aedcd283392792f8d46ba2677c964814c2c6ae"
                    ]
                },
                {
                    "command": [
                        "rewrite signed_repr_eq.",
                        "VernacExtend",
                        "c2cfde576a77d8f389586e6e52189a909c90cc47"
                    ]
                },
                {
                    "command": [
                        "replace ((X - Y) mod modulus) with (X - Y).",
                        "VernacExtend",
                        "062b01edbfbf83a9c0c55f42ffd6eb79af01d6a1"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false; auto.",
                        "VernacExtend",
                        "a7f28c2617535b77e0035b271ce2717cc06a3d86"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply Zmod_unique with 0; omega.",
                        "VernacExtend",
                        "de86d670da44cd24e9d53912454c7b42c913671f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold proj_sumbool at 2.",
                        "VernacExtend",
                        "465d7514ac44f69139c2efd45e22bf8ebbaee94d"
                    ]
                },
                {
                    "command": [
                        "rewrite zle_true at 1 by omega.",
                        "VernacExtend",
                        "88d0186469b0926fe9e0142cb30ee782984cdd98"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_true_r.",
                        "VernacExtend",
                        "230918acbe37788580429f7b57db0df199d9fbfd"
                    ]
                },
                {
                    "command": [
                        "rewrite (zlt_true _ X) by omega.",
                        "VernacExtend",
                        "85f35fd11d67aa25b4e852e4c1c00fa12758ac9f"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (X - Y) (-half_modulus)).",
                        "VernacExtend",
                        "e046308052393547ba5a9baf968ecfc6d40d1f3b"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "unfold proj_sumbool; rewrite zle_false by omega.",
                        "VernacExtend",
                        "563ea0aac829a5f0187fc2796eedba00a4fe94f4"
                    ]
                },
                {
                    "command": [
                        "replace (signed (repr (X - Y))) with (X - Y + modulus).",
                        "VernacExtend",
                        "a4d38dc929cb09549f3cdeaaaa1a400bb3259f22"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false by omega.",
                        "VernacExtend",
                        "1a3d93f438781af1cb3b43101336d435afaef9a1"
                    ]
                },
                {
                    "command": [
                        "apply xor_zero.",
                        "VernacExtend",
                        "e734334fb5b575ecbd8f7a1548b8abb7ee09f8b4"
                    ]
                },
                {
                    "command": [
                        "rewrite signed_repr_eq.",
                        "VernacExtend",
                        "c2cfde576a77d8f389586e6e52189a909c90cc47"
                    ]
                },
                {
                    "command": [
                        "replace ((X - Y) mod modulus) with (X - Y + modulus).",
                        "VernacExtend",
                        "b0fe00c8c53d45142c3f487eb79890933f271a54"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true by omega; auto.",
                        "VernacExtend",
                        "42bfbde4ec99fa739b6c889bd62d15938a265857"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply Zmod_unique with (-1); omega.",
                        "VernacExtend",
                        "c29f0a74ce3aa1ad4978eb98e439e2b790582696"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "unfold proj_sumbool; rewrite zle_true by omega.",
                        "VernacExtend",
                        "29e89f5f7dad9aab245cf35ef8c44e1ccc4af9fc"
                    ]
                },
                {
                    "command": [
                        "rewrite signed_repr.",
                        "VernacExtend",
                        "c2ed7b2fcebad79aff5b86b90cf7dda2f0d52061"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true by omega.",
                        "VernacExtend",
                        "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
                    ]
                },
                {
                    "command": [
                        "apply xor_zero_l.",
                        "VernacExtend",
                        "8fc7cfc3f5ceb36eb1d7e5c4ab0d66e03b912e84"
                    ]
                },
                {
                    "command": [
                        "unfold min_signed, max_signed; omega.",
                        "VernacExtend",
                        "8a2751f9f2b8d684e1e27f3060479ed0bde88d25"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_lt",
            "line_nb": 3907,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold lt.",
                        "VernacExtend",
                        "2e821d407c03d5f5e572c51453fdc618d9dec364"
                    ]
                },
                {
                    "command": [
                        "rewrite signed_eq.",
                        "VernacExtend",
                        "c59332ba14b3f7e048c5bca9e5c81dccae050a0f"
                    ]
                },
                {
                    "command": [
                        "unfold proj_sumbool.",
                        "VernacExtend",
                        "9486e2b04f32f63b41268a30bc0b2a9032f4c304"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (signed y) (signed x)).",
                        "VernacExtend",
                        "30eff75205b0690ca36e2647c926a0b1277ae068"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false.",
                        "VernacExtend",
                        "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
                    ]
                },
                {
                    "command": [
                        "rewrite zeq_false.",
                        "VernacExtend",
                        "dab8f9109b7a6d08485a19d2b305200449ea8478"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "destruct (zeq (signed x) (signed y)).",
                        "VernacExtend",
                        "00592a2d1c351b532313bf3c0a44b0d6a81a883c"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false.",
                        "VernacExtend",
                        "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true.",
                        "VernacExtend",
                        "b49135e183425368b4318af106711c28871bcc77"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_not",
            "line_nb": 3926,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- negb_orb.",
                        "VernacExtend",
                        "f344f3a934d257cce2bff71ac9c716cdd7d7955d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- not_lt.",
                        "VernacExtend",
                        "efdfc76eae55da3f1e35ca9f3d3c99b97c12e286"
                    ]
                },
                {
                    "command": [
                        "rewrite negb_involutive.",
                        "VernacExtend",
                        "26794076710129c6559391372636b9da5e2f9672"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_ltu",
            "line_nb": 3933,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold ltu, eq.",
                        "VernacExtend",
                        "21251fa7eae55af1a97cb3000ada70707c5da85b"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (unsigned y) (unsigned x)).",
                        "VernacExtend",
                        "2c6f00aa0b6e5159ccd4ae516bee64ac4143f07b"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false.",
                        "VernacExtend",
                        "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
                    ]
                },
                {
                    "command": [
                        "rewrite zeq_false.",
                        "VernacExtend",
                        "dab8f9109b7a6d08485a19d2b305200449ea8478"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "destruct (zeq (unsigned x) (unsigned y)).",
                        "VernacExtend",
                        "8f4acbb0bbf577c78dea1fd316f3b2e914ffaa2d"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false.",
                        "VernacExtend",
                        "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true.",
                        "VernacExtend",
                        "b49135e183425368b4318af106711c28871bcc77"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltu_not",
            "line_nb": 3950,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- negb_orb.",
                        "VernacExtend",
                        "f344f3a934d257cce2bff71ac9c716cdd7d7955d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- not_ltu.",
                        "VernacExtend",
                        "88dbefa9649de5a2156f5be831ac5f3fc7041025"
                    ]
                },
                {
                    "command": [
                        "rewrite negb_involutive.",
                        "VernacExtend",
                        "26794076710129c6559391372636b9da5e2f9672"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "no_overlap_sound",
            "line_nb": 3958,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (andb_prop _ _ H1).",
                        "VernacExtend",
                        "d0213afb319c649384c768e669eecdc8c20bb71e"
                    ]
                },
                {
                    "command": [
                        "clear H1.",
                        "VernacExtend",
                        "c05bbc655b5fdcbbabbab72bd73c28fb300d5502"
                    ]
                },
                {
                    "command": [
                        "destruct (andb_prop _ _ H2).",
                        "VernacExtend",
                        "2a0c7d368df83e5735377f8a31180fe5a2270c11"
                    ]
                },
                {
                    "command": [
                        "clear H2.",
                        "VernacExtend",
                        "d86cdda4c02f9faf6d4c6694d967beddb27ce36a"
                    ]
                },
                {
                    "command": [
                        "apply proj_sumbool_true in H1.",
                        "VernacExtend",
                        "bcfd74a02f55c21f52d11a35d4f5c401886636f1"
                    ]
                },
                {
                    "command": [
                        "apply proj_sumbool_true in H4.",
                        "VernacExtend",
                        "768a1567fc04f271096c8c56bc6e1c05e039439c"
                    ]
                },
                {
                    "command": [
                        "assert (unsigned ofs1 + sz1 <= unsigned ofs2 \\/ unsigned ofs2 + sz2 <= unsigned ofs1).",
                        "VernacExtend",
                        "a481b6573f5745e8700d6d3ec0f637695f936fc2"
                    ]
                },
                {
                    "command": [
                        "destruct (orb_prop _ _ H3).",
                        "VernacExtend",
                        "c0c2c2752e6b512c419f9e117ca2bf5dc5036872"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "eapply proj_sumbool_true; eauto.",
                        "VernacExtend",
                        "a33be217d620004d8efbcff5e8cceb9b2bbf4498"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "eapply proj_sumbool_true; eauto.",
                        "VernacExtend",
                        "a33be217d620004d8efbcff5e8cceb9b2bbf4498"
                    ]
                },
                {
                    "command": [
                        "clear H3.",
                        "VernacExtend",
                        "fc50f4d83926cbda2c6b6c4c8fff0c14162e2a3f"
                    ]
                },
                {
                    "command": [
                        "generalize (unsigned_range ofs1) (unsigned_range ofs2).",
                        "VernacExtend",
                        "488d7059c1351ec5c8c4005b626536d4a7949413"
                    ]
                },
                {
                    "command": [
                        "intros P Q.",
                        "VernacExtend",
                        "7751791de3f7d3a51bb606370c6c0e8f8866edb8"
                    ]
                },
                {
                    "command": [
                        "generalize (unsigned_add_either base ofs1) (unsigned_add_either base ofs2).",
                        "VernacExtend",
                        "f0aec889d2c251e9d91d13ce96be4115c5268759"
                    ]
                },
                {
                    "command": [
                        "intros [C|C] [D|D]; omega.",
                        "VernacExtend",
                        "1d39f403ba00ecc87b6ca50139cc2a93c395f4d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zsize_pos",
            "line_nb": 3980,
            "steps": [
                {
                    "command": [
                        "destruct x; simpl.",
                        "VernacExtend",
                        "b0c3c03e2d0a8fa13c533c8a79c2c6b3067d60db"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "compute; intuition congruence.",
                        "VernacExtend",
                        "b1e4ec174532a4bdd5fe31fcded6521ccfff32fe"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zsize_pos'",
            "line_nb": 3986,
            "steps": [
                {
                    "command": [
                        "destruct x; simpl; intros; try discriminate.",
                        "VernacExtend",
                        "25c1e0a3b8222c78fd07571ecc83f89d370b2dba"
                    ]
                },
                {
                    "command": [
                        "compute; auto.",
                        "VernacExtend",
                        "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zsize_shiftin",
            "line_nb": 3990,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct x; compute in H; try discriminate.",
                        "VernacExtend",
                        "3dc107643cfce88330e3712ae62e03c615abd95b"
                    ]
                },
                {
                    "command": [
                        "destruct b.",
                        "VernacExtend",
                        "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
                    ]
                },
                {
                    "command": [
                        "change (Zshiftin true (Zpos p)) with (Zpos (p~1)).",
                        "VernacExtend",
                        "889503c714b92a51a094fefd06171e228927b86e"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite Pos.add_1_r; auto.",
                        "VernacExtend",
                        "649a0debcb876cd2156eb3af7c0b9a15327d14f7"
                    ]
                },
                {
                    "command": [
                        "change (Zshiftin false (Zpos p)) with (Zpos (p~0)).",
                        "VernacExtend",
                        "3d3f39773589b0482b814997e8888c048b936351"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite Pos.add_1_r; auto.",
                        "VernacExtend",
                        "649a0debcb876cd2156eb3af7c0b9a15327d14f7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ztestbit_size_1",
            "line_nb": 4003,
            "steps": [
                {
                    "command": [
                        "intros x0 POS0; pattern x0; apply Zshiftin_pos_ind; auto.",
                        "VernacExtend",
                        "1661991e6d8ff61a8c084aa05d841704b3d07a33"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite Zsize_shiftin; auto.",
                        "VernacExtend",
                        "9d9f483d419417465a27db45778b4043aee23ca7"
                    ]
                },
                {
                    "command": [
                        "replace (Z.pred (Z.succ (Zsize x))) with (Z.succ (Z.pred (Zsize x))) by omega.",
                        "VernacExtend",
                        "8ed51203fb237afb97f412d4b9223079284a527c"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztestbit_shiftin_succ.",
                        "VernacExtend",
                        "6e01c7d151fa41f8550b7895c7efdc3f710940b0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "generalize (Zsize_pos' x H); omega.",
                        "VernacExtend",
                        "a8c1b5ae7b78a73938119c1d537acaaf97a7fdae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ztestbit_size_2",
            "line_nb": 4012,
            "steps": [
                {
                    "command": [
                        "intros x0 POS0.",
                        "VernacExtend",
                        "8d08c5cc6617f2ba15783e199650e39d07b15d67"
                    ]
                },
                {
                    "command": [
                        "destruct (zeq x0 0).",
                        "VernacExtend",
                        "2f6d64c3cabda25461ed897405742af4507be03c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "subst x0; intros.",
                        "VernacExtend",
                        "e4843ae900c016164de667b282884383058d6ae0"
                    ]
                },
                {
                    "command": [
                        "apply Ztestbit_0.",
                        "VernacExtend",
                        "9eabae5755d85655c33afa1ead756f180af22081"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "pattern x0; apply Zshiftin_pos_ind.",
                        "VernacExtend",
                        "c3707464eee6e8ad514f629d27e42ebe4b37fb5e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "change 1 with (Zshiftin true 0).",
                        "VernacExtend",
                        "63d775e07381796f0f76df4363c8a8a807d80aba"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztestbit_shiftin.",
                        "VernacExtend",
                        "4566040421bf5d63fd1949bb270b1f6e45af96d4"
                    ]
                },
                {
                    "command": [
                        "rewrite zeq_false.",
                        "VernacExtend",
                        "dab8f9109b7a6d08485a19d2b305200449ea8478"
                    ]
                },
                {
                    "command": [
                        "apply Ztestbit_0.",
                        "VernacExtend",
                        "9eabae5755d85655c33afa1ead756f180af22081"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite Zsize_shiftin in H1; auto.",
                        "VernacExtend",
                        "b743509517a01d8ab0b22104d8cf11cfa90a7392"
                    ]
                },
                {
                    "command": [
                        "generalize (Zsize_pos' _ H); intros.",
                        "VernacExtend",
                        "c5146f1c615405b92aed91f51b3ef09170e5e750"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztestbit_shiftin.",
                        "VernacExtend",
                        "4566040421bf5d63fd1949bb270b1f6e45af96d4"
                    ]
                },
                {
                    "command": [
                        "rewrite zeq_false.",
                        "VernacExtend",
                        "dab8f9109b7a6d08485a19d2b305200449ea8478"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zsize_interval_1",
            "line_nb": 4042,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (x = x mod (two_p (Zsize x))).",
                        "VernacExtend",
                        "93ec54e400750a59f1a6fd9ceff80dfbc179d775"
                    ]
                },
                {
                    "command": [
                        "apply equal_same_bits; intros.",
                        "VernacExtend",
                        "73ce991e4619c1e5d9bbd33ccb23dec8610abb80"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztestbit_mod_two_p; auto.",
                        "VernacExtend",
                        "a7ace985b22656c74fcf94ae5275d4190a679b6a"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i (Zsize x)).",
                        "VernacExtend",
                        "e3dd564a30279c32f3ea5419733b8f0c7a024761"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply Ztestbit_size_2; auto.",
                        "VernacExtend",
                        "436ffb59a253954aba53784a6d46fa498ac2ddcc"
                    ]
                },
                {
                    "command": [
                        "apply Zsize_pos; auto.",
                        "VernacExtend",
                        "98d75b21aebdacf5a61cb26a1dfff792bc09f84d"
                    ]
                },
                {
                    "command": [
                        "rewrite H0 at 1.",
                        "VernacExtend",
                        "4e52b21df18c8b0210ec90283fd944b8533f66e5"
                    ]
                },
                {
                    "command": [
                        "rewrite H0 at 3.",
                        "VernacExtend",
                        "a7125203c42147819778947bf5616f8429930219"
                    ]
                },
                {
                    "command": [
                        "apply Z_mod_lt.",
                        "VernacExtend",
                        "d33d3cab9911c0f11554b4e753af00e7b5fcc4ca"
                    ]
                },
                {
                    "command": [
                        "apply two_p_gt_ZERO.",
                        "VernacExtend",
                        "9690045ae69e536e22b7db6c37ee985732e7c4b7"
                    ]
                },
                {
                    "command": [
                        "apply Zsize_pos; auto.",
                        "VernacExtend",
                        "98d75b21aebdacf5a61cb26a1dfff792bc09f84d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zsize_interval_2",
            "line_nb": 4057,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "set (N := Z.to_nat n).",
                        "VernacExtend",
                        "a52b8c4619412f1b5fdd75ea6be1ca05dbccf8f3"
                    ]
                },
                {
                    "command": [
                        "assert (Z.of_nat N = n) by (apply Z2Nat.id; auto).",
                        "VernacExtend",
                        "93323640f845475b9c8caf3aa358a432bd7d3365"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H1 in H0.",
                        "VernacExtend",
                        "42d08cd43ac5900fc8cb5b0f113d48246a828cad"
                    ]
                },
                {
                    "command": [
                        "rewrite <- two_power_nat_two_p in H0.",
                        "VernacExtend",
                        "88e9d0c3ced8e3349526f33f78ce465c7930dba4"
                    ]
                },
                {
                    "command": [
                        "destruct (zeq x 0).",
                        "VernacExtend",
                        "88d963c1277323a031a00ba48112440efb13faf9"
                    ]
                },
                {
                    "command": [
                        "subst x; simpl; omega.",
                        "VernacExtend",
                        "dcd1f26b31530315243f673a3f9e90b698e98ba0"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt n (Zsize x)); auto.",
                        "VernacExtend",
                        "7b08b8c9212a169a6e46a782326313314332d2f1"
                    ]
                },
                {
                    "command": [
                        "exploit (Ztestbit_above N x (Z.pred (Zsize x))).",
                        "VernacExtend",
                        "bda0ac54e9660661e19ce3e5a6721b21a3d9180f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztestbit_size_1.",
                        "VernacExtend",
                        "03244c94fb6e60e86848d17676c660e43a566e13"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zsize_monotone",
            "line_nb": 4073,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Z.ge_le.",
                        "VernacExtend",
                        "3351a334448d564f67359e48646d6511e5ababa4"
                    ]
                },
                {
                    "command": [
                        "apply Zsize_interval_2.",
                        "VernacExtend",
                        "57cdeefbfd8b6d9a2332615fe6d299bfd47fadac"
                    ]
                },
                {
                    "command": [
                        "apply Zsize_pos.",
                        "VernacExtend",
                        "e0be7dbcd986b447681231756fa7f65928cf7233"
                    ]
                },
                {
                    "command": [
                        "exploit (Zsize_interval_1 y).",
                        "VernacExtend",
                        "6c569471b37205c95e8dc6c7fa4ad1d8c2445ac0"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_zero",
            "line_nb": 4082,
            "steps": [
                {
                    "command": [
                        "unfold size; rewrite unsigned_zero; auto.",
                        "VernacExtend",
                        "d1603591863d2e1036dd0537a3e5a8d5c8cf5316"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bits_size_1",
            "line_nb": 4085,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (zeq (unsigned x) 0).",
                        "VernacExtend",
                        "628159a3cb814b8e66d7c4f7b4c4fa49182510c5"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (repr_unsigned x).",
                        "VernacExtend",
                        "393ec19ffbe8f172593c1f542e8d6811517b657c"
                    ]
                },
                {
                    "command": [
                        "rewrite e; auto.",
                        "VernacExtend",
                        "485a49d71ef49f65ae1d9302c55b3a0ac9ac277b"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "apply Ztestbit_size_1.",
                        "VernacExtend",
                        "a04694b64334d0cca8b9eebeacccce16c6ec6c9e"
                    ]
                },
                {
                    "command": [
                        "generalize (unsigned_range x); omega.",
                        "VernacExtend",
                        "82d43e79c3776eb155d8ee4a39923b4051549c3b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bits_size_2",
            "line_nb": 4095,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Ztestbit_size_2.",
                        "VernacExtend",
                        "cfe34ec7b19f7ed59fdfb6fa70d166365769a150"
                    ]
                },
                {
                    "command": [
                        "generalize (unsigned_range x); omega.",
                        "VernacExtend",
                        "82d43e79c3776eb155d8ee4a39923b4051549c3b"
                    ]
                },
                {
                    "command": [
                        "fold (size x); omega.",
                        "VernacExtend",
                        "c21a8c6c762b6344d724e27fda0879bd887ded0b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_range",
            "line_nb": 4101,
            "steps": [
                {
                    "command": [
                        "intros; split.",
                        "VernacExtend",
                        "786909835bea92a2bb1ac0d0634a6eb379d5f275"
                    ]
                },
                {
                    "command": [
                        "apply Zsize_pos.",
                        "VernacExtend",
                        "e0be7dbcd986b447681231756fa7f65928cf7233"
                    ]
                },
                {
                    "command": [
                        "destruct (bits_size_1 x).",
                        "VernacExtend",
                        "0bdcc6c0b12802684d0a467eee912e202cc3fb18"
                    ]
                },
                {
                    "command": [
                        "subst x; unfold size; rewrite unsigned_zero; simpl.",
                        "VernacExtend",
                        "63154fc08324846482341ba47e041e84a9436206"
                    ]
                },
                {
                    "command": [
                        "generalize wordsize_pos; omega.",
                        "VernacExtend",
                        "1be2fda6bfa5aa53c9fdc4049e4df24e68556740"
                    ]
                },
                {
                    "command": [
                        "destruct (zle (size x) zwordsize); auto.",
                        "VernacExtend",
                        "7b8ae921398d9a13359e8fdc0225e6f07a6e9e30"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_above in H.",
                        "VernacExtend",
                        "43dede375aae00345c6425b096791b2af6969766"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bits_size_3",
            "line_nb": 4112,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (zle (size x) n).",
                        "VernacExtend",
                        "72e6cf8f06835a82df2a47619da283f78b8f57b6"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "destruct (bits_size_1 x).",
                        "VernacExtend",
                        "0bdcc6c0b12802684d0a467eee912e202cc3fb18"
                    ]
                },
                {
                    "command": [
                        "subst x.",
                        "VernacExtend",
                        "76c28b0a6a4a7c1568fa30e26ee411c5e5d54968"
                    ]
                },
                {
                    "command": [
                        "unfold size; rewrite unsigned_zero; assumption.",
                        "VernacExtend",
                        "39adb1f12516f73716cf21905b7ce4c9d3234861"
                    ]
                },
                {
                    "command": [
                        "rewrite (H0 (Z.pred (size x))) in H1.",
                        "VernacExtend",
                        "6abd1f25085dba2e1846743d4fa237676cad7c8e"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "generalize (size_range x); omega.",
                        "VernacExtend",
                        "88b5ebec5467973c3f71227148fa213c7a6ec5cf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bits_size_4",
            "line_nb": 4123,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (size x <= n).",
                        "VernacExtend",
                        "854996d7009280201f1c2ec68b72eeef62e9f642"
                    ]
                },
                {
                    "command": [
                        "apply bits_size_3; auto.",
                        "VernacExtend",
                        "db3eb45cce87343e9fe375edd32760a4f3aa2748"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (size x) n).",
                        "VernacExtend",
                        "a29cbee8c7ce3601e9289de68983cd2cfee25135"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_size_2 in H0.",
                        "VernacExtend",
                        "84ef62f9c2f7030fd9d9ac8ec61b0d636b7766a5"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_interval_1",
            "line_nb": 4133,
            "steps": [
                {
                    "command": [
                        "intros; apply Zsize_interval_1.",
                        "VernacExtend",
                        "8587bbaba5ffbaaaf81accd45e0e15aee4063bcf"
                    ]
                },
                {
                    "command": [
                        "generalize (unsigned_range x); omega.",
                        "VernacExtend",
                        "82d43e79c3776eb155d8ee4a39923b4051549c3b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_interval_2",
            "line_nb": 4137,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Zsize_interval_2; auto.",
                        "VernacExtend",
                        "d9c176c2f4cc5a77565aae7d2ce21222a3736e2e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_and",
            "line_nb": 4141,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (0 <= Z.min (size a) (size b)).",
                        "VernacExtend",
                        "2f88a0fc87e10f4ef96c0bad21a3dee4f70ded77"
                    ]
                },
                {
                    "command": [
                        "generalize (size_range a) (size_range b).",
                        "VernacExtend",
                        "45e8819109904cd158ae25adc1d3f89163113115"
                    ]
                },
                {
                    "command": [
                        "zify; omega.",
                        "VernacExtend",
                        "5fb0df05710c307ca01829a575fcf81498a16c8a"
                    ]
                },
                {
                    "command": [
                        "apply bits_size_3.",
                        "VernacExtend",
                        "1de3c79008de2e4d76541397aa09370f2a8e065a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_and.",
                        "VernacExtend",
                        "c7f6e515ba49aa8a1f1db7a7769fa71e6206de05"
                    ]
                },
                {
                    "command": [
                        "zify.",
                        "VernacExtend",
                        "1cc314461888aca2a8d9ab0ac2e16f28edc6c9bb"
                    ]
                },
                {
                    "command": [
                        "subst z z0.",
                        "VernacExtend",
                        "1419978260dd01a1d45bb3ebc86581eea5da4a36"
                    ]
                },
                {
                    "command": [
                        "destruct H1.",
                        "VernacExtend",
                        "e752c2122f55c888e09082f784a6da990b01fbe7"
                    ]
                },
                {
                    "command": [
                        "rewrite (bits_size_2 a).",
                        "VernacExtend",
                        "616421b4bd536e4f7b342082bdf4c751e9babd13"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite (bits_size_2 b).",
                        "VernacExtend",
                        "29af8cde270eb9afe962594a14dce6fa60ee2a74"
                    ]
                },
                {
                    "command": [
                        "apply andb_false_r.",
                        "VernacExtend",
                        "96acabd8a60f7c2e82c0ec27c34e893436485a16"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "and_interval",
            "line_nb": 4161,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (size_interval_1 (and a b)); intros.",
                        "VernacExtend",
                        "0caed9c72911a9850194f93ff7b51db571adbcd1"
                    ]
                },
                {
                    "command": [
                        "assert (two_p (size (and a b)) <= two_p (Z.min (size a) (size b))).",
                        "VernacExtend",
                        "fb6c9a329937958879c42e5758ca2c7c447005dc"
                    ]
                },
                {
                    "command": [
                        "apply two_p_monotone.",
                        "VernacExtend",
                        "4511487dda240968dd836bc9f28d13e8e65a4f4d"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "generalize (size_range (and a b)); omega.",
                        "VernacExtend",
                        "ead2c802f68065916ea3e896a924845943bd2e16"
                    ]
                },
                {
                    "command": [
                        "apply size_and.",
                        "VernacExtend",
                        "0f2939c97e3f57cd5b125144ab238fd79b1a45c3"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_or",
            "line_nb": 4171,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (size_range a) (size_range b); intros.",
                        "VernacExtend",
                        "f5a57c09f01031b0bbfe97b341bdb3af28c8da90"
                    ]
                },
                {
                    "command": [
                        "destruct (bits_size_1 a).",
                        "VernacExtend",
                        "404df1b025847b507905a070d42f0acabde47ce1"
                    ]
                },
                {
                    "command": [
                        "subst a.",
                        "VernacExtend",
                        "d7670e5f9c196bd417b16b29da3532f33d34884d"
                    ]
                },
                {
                    "command": [
                        "rewrite size_zero.",
                        "VernacExtend",
                        "ea7b9ff3445ed29e094cb4b0f536bb46643731f8"
                    ]
                },
                {
                    "command": [
                        "rewrite or_zero_l.",
                        "VernacExtend",
                        "f72609061754bb9f2a9f6ef8001ccef85c27eee1"
                    ]
                },
                {
                    "command": [
                        "zify; omega.",
                        "VernacExtend",
                        "5fb0df05710c307ca01829a575fcf81498a16c8a"
                    ]
                },
                {
                    "command": [
                        "destruct (bits_size_1 b).",
                        "VernacExtend",
                        "a5eef0ca417e0614c9f5dafdeb3e7a1ba7a8fc58"
                    ]
                },
                {
                    "command": [
                        "subst b.",
                        "VernacExtend",
                        "f6a3780afda85f3eb20e4cd9f3da775990bbc7d3"
                    ]
                },
                {
                    "command": [
                        "rewrite size_zero.",
                        "VernacExtend",
                        "ea7b9ff3445ed29e094cb4b0f536bb46643731f8"
                    ]
                },
                {
                    "command": [
                        "rewrite or_zero.",
                        "VernacExtend",
                        "951c9b2e3a5aea20b35e41858c06f75c4e387410"
                    ]
                },
                {
                    "command": [
                        "zify; omega.",
                        "VernacExtend",
                        "5fb0df05710c307ca01829a575fcf81498a16c8a"
                    ]
                },
                {
                    "command": [
                        "zify.",
                        "VernacExtend",
                        "1cc314461888aca2a8d9ab0ac2e16f28edc6c9bb"
                    ]
                },
                {
                    "command": [
                        "destruct H3 as [[P Q] | [P Q]]; subst.",
                        "VernacExtend",
                        "29289b0547fb830ce082d176d7cc026664ddb08d"
                    ]
                },
                {
                    "command": [
                        "apply bits_size_4.",
                        "VernacExtend",
                        "33d4ec4cb249d6c132301c543062401fb7e647bf"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_or.",
                        "VernacExtend",
                        "561b2d931153f363b82ca884be7e16f4ff786ff2"
                    ]
                },
                {
                    "command": [
                        "rewrite H2.",
                        "VernacExtend",
                        "c34b98a4ea7c987830199fe378bb7a145a0d652e"
                    ]
                },
                {
                    "command": [
                        "apply orb_true_r.",
                        "VernacExtend",
                        "f6c982e3797841078d730c93c95d18e257302343"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_or.",
                        "VernacExtend",
                        "561b2d931153f363b82ca884be7e16f4ff786ff2"
                    ]
                },
                {
                    "command": [
                        "rewrite !bits_size_2.",
                        "VernacExtend",
                        "26f3e5535f28c3f1ffe882d771ec3165e8e366c6"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply bits_size_4.",
                        "VernacExtend",
                        "33d4ec4cb249d6c132301c543062401fb7e647bf"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_or.",
                        "VernacExtend",
                        "561b2d931153f363b82ca884be7e16f4ff786ff2"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "apply orb_true_l.",
                        "VernacExtend",
                        "6449f3a5dbe39e6583ea277b66e6a45dccb846ec"
                    ]
                },
                {
                    "command": [
                        "destruct (zeq (size a) 0).",
                        "VernacExtend",
                        "0f2b22b06d3a7824b3badb79650a82670706e496"
                    ]
                },
                {
                    "command": [
                        "unfold testbit in H1.",
                        "VernacExtend",
                        "57af6564e620ce0a48c8ec819945fcbda0f8c6d4"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.testbit_neg_r in H1.",
                        "VernacExtend",
                        "477306b76eacf7f3a24d904a2b127c28b843fdd8"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_or.",
                        "VernacExtend",
                        "561b2d931153f363b82ca884be7e16f4ff786ff2"
                    ]
                },
                {
                    "command": [
                        "rewrite !bits_size_2.",
                        "VernacExtend",
                        "26f3e5535f28c3f1ffe882d771ec3165e8e366c6"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "or_interval",
            "line_nb": 4218,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- size_or.",
                        "VernacExtend",
                        "2b9e4a09d0436e9049ae72e32b5a804d83dfff3f"
                    ]
                },
                {
                    "command": [
                        "apply size_interval_1.",
                        "VernacExtend",
                        "f7b2477b01ce943c78e5256910bd43d887b781d9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_xor",
            "line_nb": 4223,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (0 <= Z.max (size a) (size b)).",
                        "VernacExtend",
                        "0414900a86173f74d461a0f7a5cf281b453fb98c"
                    ]
                },
                {
                    "command": [
                        "generalize (size_range a) (size_range b).",
                        "VernacExtend",
                        "45e8819109904cd158ae25adc1d3f89163113115"
                    ]
                },
                {
                    "command": [
                        "zify; omega.",
                        "VernacExtend",
                        "5fb0df05710c307ca01829a575fcf81498a16c8a"
                    ]
                },
                {
                    "command": [
                        "apply bits_size_3.",
                        "VernacExtend",
                        "1de3c79008de2e4d76541397aa09370f2a8e065a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_xor.",
                        "VernacExtend",
                        "9f72434af7d2239af76b40dbbf1067d96b9f7000"
                    ]
                },
                {
                    "command": [
                        "rewrite !bits_size_2.",
                        "VernacExtend",
                        "26f3e5535f28c3f1ffe882d771ec3165e8e366c6"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "zify; omega.",
                        "VernacExtend",
                        "5fb0df05710c307ca01829a575fcf81498a16c8a"
                    ]
                },
                {
                    "command": [
                        "zify; omega.",
                        "VernacExtend",
                        "5fb0df05710c307ca01829a575fcf81498a16c8a"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xor_interval",
            "line_nb": 4238,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (size_interval_1 (xor a b)); intros.",
                        "VernacExtend",
                        "17c931d36dc8879c5ecf58c0cc00d9120577e1d1"
                    ]
                },
                {
                    "command": [
                        "assert (two_p (size (xor a b)) <= two_p (Z.max (size a) (size b))).",
                        "VernacExtend",
                        "002f849022e279c63f21030229b0aeaea167247c"
                    ]
                },
                {
                    "command": [
                        "apply two_p_monotone.",
                        "VernacExtend",
                        "4511487dda240968dd836bc9f28d13e8e65a4f4d"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "generalize (size_range (xor a b)); omega.",
                        "VernacExtend",
                        "99d3ba0dd6abd1693d622beb9796ad4c1a612768"
                    ]
                },
                {
                    "command": [
                        "apply size_xor.",
                        "VernacExtend",
                        "0ea6f9432d19d865f9aea815bd9091e727ea322c"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordsize_not_zero",
            "line_nb": 4251,
            "steps": [
                {
                    "command": [
                        "unfold wordsize; congruence.",
                        "VernacExtend",
                        "2a392e1352012e815f48aeaab33b94f0e9991c63"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "int_wordsize_divides_modulus",
            "line_nb": 4259,
            "steps": [
                {
                    "command": [
                        "exists (two_p (32-5)); reflexivity.",
                        "VernacExtend",
                        "2027381e36d74af155e472c3630d0af5844960fe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bits_shl'",
            "line_nb": 4288,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold shl'.",
                        "VernacExtend",
                        "62b7a04ea789f661d15b3936f29f401975e1ac2f"
                    ]
                },
                {
                    "command": [
                        "rewrite testbit_repr; auto.",
                        "VernacExtend",
                        "d20143ed773e39c9c2d38dc1a41b649eadbc95c6"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i (Int.unsigned y)).",
                        "VernacExtend",
                        "f439089e63ef470bcf323a1f4b3305d73e56134e"
                    ]
                },
                {
                    "command": [
                        "apply Z.shiftl_spec_low.",
                        "VernacExtend",
                        "c3b358c742be3eb903da98ae78625599b3c5305a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply Z.shiftl_spec_high.",
                        "VernacExtend",
                        "7bc7482bd58465bc21f5a7184ed17e365f00da26"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bits_shru'",
            "line_nb": 4299,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold shru'.",
                        "VernacExtend",
                        "bccb6cd64bef022c79587a9f22baadb223bf9345"
                    ]
                },
                {
                    "command": [
                        "rewrite testbit_repr; auto.",
                        "VernacExtend",
                        "d20143ed773e39c9c2d38dc1a41b649eadbc95c6"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.shiftr_spec.",
                        "VernacExtend",
                        "80c165d6ba099c7565e4b5045695449745807abf"
                    ]
                },
                {
                    "command": [
                        "fold (testbit x (i + Int.unsigned y)).",
                        "VernacExtend",
                        "c17671f39cbd13990fbbea2d12a14230f89b88b7"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (i + Int.unsigned y) zwordsize).",
                        "VernacExtend",
                        "fe5b63a10662e9e75a91e9f4ce7bca51d49af5fb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply bits_above; auto.",
                        "VernacExtend",
                        "68e2d5a5c1b1136e70a4ff0724963c782e3c6d9e"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bits_shr'",
            "line_nb": 4310,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold shr'.",
                        "VernacExtend",
                        "3f2ca58b0137b9c25c627f325423599fcece7b09"
                    ]
                },
                {
                    "command": [
                        "rewrite testbit_repr; auto.",
                        "VernacExtend",
                        "d20143ed773e39c9c2d38dc1a41b649eadbc95c6"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.shiftr_spec.",
                        "VernacExtend",
                        "80c165d6ba099c7565e4b5045695449745807abf"
                    ]
                },
                {
                    "command": [
                        "apply bits_signed.",
                        "VernacExtend",
                        "56f1ed558ed74d0eda0686b72cf662783fdfc9be"
                    ]
                },
                {
                    "command": [
                        "generalize (Int.unsigned_range y); omega.",
                        "VernacExtend",
                        "97fa897f7d8537eccb79a400fd839cb7d511a100"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shl'_mul_two_p",
            "line_nb": 4319,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold shl', mul.",
                        "VernacExtend",
                        "ecbf6fea8ee208513407d443748ebf278e318a64"
                    ]
                },
                {
                    "command": [
                        "apply eqm_samerepr.",
                        "VernacExtend",
                        "2226a5674ed5a7db984e878fdbb37775ca665295"
                    ]
                },
                {
                    "command": [
                        "rewrite Zshiftl_mul_two_p.",
                        "VernacExtend",
                        "7fe5e587f7347ca6752e2a84434e39399219b1c6"
                    ]
                },
                {
                    "command": [
                        "apply eqm_mult.",
                        "VernacExtend",
                        "2a50cf06165627ed9dbd12bd10f56ff1fd8640b4"
                    ]
                },
                {
                    "command": [
                        "apply eqm_refl.",
                        "VernacExtend",
                        "cd38aceb6abd087396d34625c4f0ed69968a7526"
                    ]
                },
                {
                    "command": [
                        "apply eqm_unsigned_repr.",
                        "VernacExtend",
                        "8083262b54f87caceff266da1e7020054aa5a39f"
                    ]
                },
                {
                    "command": [
                        "generalize (Int.unsigned_range y); omega.",
                        "VernacExtend",
                        "97fa897f7d8537eccb79a400fd839cb7d511a100"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shl'_one_two_p",
            "line_nb": 4329,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite shl'_mul_two_p.",
                        "VernacExtend",
                        "e45d69aa26c38755bda50119961766c083cfdda3"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_commut.",
                        "VernacExtend",
                        "7e479a6cc087b15b3e77ca62eef65a115285e229"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_one.",
                        "VernacExtend",
                        "48e185ca99d9fb7850b9fee25eb6e9a16ab7f505"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shl'_mul",
            "line_nb": 4336,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite shl'_one_two_p.",
                        "VernacExtend",
                        "79361cab5dcc2516c3f6c562e4b09cbda1b2994f"
                    ]
                },
                {
                    "command": [
                        "apply shl'_mul_two_p.",
                        "VernacExtend",
                        "03d4ab599e2d8fe68016d55e2d4c9bffb2da5a1a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shl'_zero",
            "line_nb": 4341,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold shl'.",
                        "VernacExtend",
                        "62b7a04ea789f661d15b3936f29f401975e1ac2f"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.unsigned_zero.",
                        "VernacExtend",
                        "89cd39791bb3da529969241353d48ab8dd678f66"
                    ]
                },
                {
                    "command": [
                        "unfold Z.shiftl.",
                        "VernacExtend",
                        "dbb6015ac83ff190df80c411aec0584c0235b6be"
                    ]
                },
                {
                    "command": [
                        "apply repr_unsigned.",
                        "VernacExtend",
                        "7033f895e7c0a699adb114621e89aafefb338576"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shru'_zero",
            "line_nb": 4348,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold shru'.",
                        "VernacExtend",
                        "bccb6cd64bef022c79587a9f22baadb223bf9345"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.unsigned_zero.",
                        "VernacExtend",
                        "89cd39791bb3da529969241353d48ab8dd678f66"
                    ]
                },
                {
                    "command": [
                        "unfold Z.shiftr.",
                        "VernacExtend",
                        "e0836769f16a9462d6eca79a790c8b81327743e9"
                    ]
                },
                {
                    "command": [
                        "apply repr_unsigned.",
                        "VernacExtend",
                        "7033f895e7c0a699adb114621e89aafefb338576"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shr'_zero",
            "line_nb": 4355,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold shr'.",
                        "VernacExtend",
                        "3f2ca58b0137b9c25c627f325423599fcece7b09"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.unsigned_zero.",
                        "VernacExtend",
                        "89cd39791bb3da529969241353d48ab8dd678f66"
                    ]
                },
                {
                    "command": [
                        "unfold Z.shiftr.",
                        "VernacExtend",
                        "e0836769f16a9462d6eca79a790c8b81327743e9"
                    ]
                },
                {
                    "command": [
                        "apply repr_signed.",
                        "VernacExtend",
                        "6ac037f1d42a8ffc7ffc97da2226a128bb137982"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shrx'_zero",
            "line_nb": 4362,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "change (shrx' x Int.zero) with (shrx x zero).",
                        "VernacExtend",
                        "5461b723d0fac547af44e6ca3666436b34ef289b"
                    ]
                },
                {
                    "command": [
                        "apply shrx_zero.",
                        "VernacExtend",
                        "45be59d79ced05847627772e55106edeacb96117"
                    ]
                },
                {
                    "command": [
                        "compute; auto.",
                        "VernacExtend",
                        "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shrx'_carry",
            "line_nb": 4368,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Int.ltu_inv in H.",
                        "VernacExtend",
                        "3b10a734d364d708dc57561d2a074557270232a0"
                    ]
                },
                {
                    "command": [
                        "change (Int.unsigned (Int.repr 63)) with 63 in H.",
                        "VernacExtend",
                        "9a166205ddbac33c1a14898a10942ab0228a17a7"
                    ]
                },
                {
                    "command": [
                        "set (y1 := Int64.repr (Int.unsigned y)).",
                        "VernacExtend",
                        "f7a1e7693583b5187c7639fd0587dd5e76bbeb0d"
                    ]
                },
                {
                    "command": [
                        "assert (U: unsigned y1 = Int.unsigned y).",
                        "VernacExtend",
                        "364c9fa8456bf216076f2d4c9028a8a2cf2f71ed"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply unsigned_repr.",
                        "VernacExtend",
                        "cbb55125b21da3156cf49c45f71d95a6743593f6"
                    ]
                },
                {
                    "command": [
                        "assert (63 < max_unsigned) by reflexivity.",
                        "VernacExtend",
                        "4bc8b1dc575ad91b2bb85cfc83e9a52a17e7587f"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "transitivity (shrx x y1).",
                        "VernacExtend",
                        "4d05673bf8762aa57db3b7face61f8527d7f7c6f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold shrx', shrx, shl', shl.",
                        "VernacExtend",
                        "0a9e90bcfe5dcdd95d8ab78c2b915290c98f29a4"
                    ]
                },
                {
                    "command": [
                        "rewrite U; auto.",
                        "VernacExtend",
                        "b5e2e2fb9332ac5ba2502273537dc2cae1215d4e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite shrx_carry.",
                        "VernacExtend",
                        "29b2a6bbc9ebb03a89b6ce07894341e9c1f90dbb"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "unfold shr, shr'.",
                        "VernacExtend",
                        "ffa19bc8ddf07d54b9d375681176691cbcc6cccb"
                    ]
                },
                {
                    "command": [
                        "rewrite U; auto.",
                        "VernacExtend",
                        "b5e2e2fb9332ac5ba2502273537dc2cae1215d4e"
                    ]
                },
                {
                    "command": [
                        "unfold shr_carry, shr_carry', shl, shl'.",
                        "VernacExtend",
                        "f9f589e5d3633fdeb87222ef94491e076361114e"
                    ]
                },
                {
                    "command": [
                        "rewrite U; auto.",
                        "VernacExtend",
                        "b5e2e2fb9332ac5ba2502273537dc2cae1215d4e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "unfold ltu.",
                        "VernacExtend",
                        "e59e12052a96cc6c37e4e3abfd319dcb453c0f12"
                    ]
                },
                {
                    "command": [
                        "apply zlt_true.",
                        "VernacExtend",
                        "135d300e9c683e2995f4687be0904a8b2009f6fe"
                    ]
                },
                {
                    "command": [
                        "rewrite U; tauto.",
                        "VernacExtend",
                        "610d31bfa2a4354abd66c81662da5b772547a706"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shrx'_shr_2",
            "line_nb": 4396,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "set (z := repr (Int.unsigned y)).",
                        "VernacExtend",
                        "66d8136b770387c78466baa98750d5584c38937f"
                    ]
                },
                {
                    "command": [
                        "apply Int.ltu_inv in H.",
                        "VernacExtend",
                        "3b10a734d364d708dc57561d2a074557270232a0"
                    ]
                },
                {
                    "command": [
                        "change (Int.unsigned (Int.repr 63)) with 63 in H.",
                        "VernacExtend",
                        "9a166205ddbac33c1a14898a10942ab0228a17a7"
                    ]
                },
                {
                    "command": [
                        "assert (N1: 63 < max_unsigned) by reflexivity.",
                        "VernacExtend",
                        "b069863f16f061f32b9216970a5bec77a04173f0"
                    ]
                },
                {
                    "command": [
                        "assert (N2: 63 < Int.max_unsigned) by reflexivity.",
                        "VernacExtend",
                        "c785131cf8c55dc87409cd8cf76b0a3f21ebf95d"
                    ]
                },
                {
                    "command": [
                        "assert (A: unsigned z = Int.unsigned y).",
                        "VernacExtend",
                        "b75d8e3e83bd501b807bca139c6416c107292171"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold z; apply unsigned_repr; omega.",
                        "VernacExtend",
                        "99bf2024371b4d322f1f605644f58cab57e960b2"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (B: unsigned (sub (repr 64) z) = Int.unsigned (Int.sub (Int.repr 64) y)).",
                        "VernacExtend",
                        "422c05c7c939a9305286d905016e940dcf086420"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold z.",
                        "VernacExtend",
                        "3f5f13843987e7698cc305c40b7a59532fd5ee56"
                    ]
                },
                {
                    "command": [
                        "unfold sub, Int.sub.",
                        "VernacExtend",
                        "fba320c22e6df4d6d7d929be1b26b61afdf5f250"
                    ]
                },
                {
                    "command": [
                        "change (unsigned (repr 64)) with 64.",
                        "VernacExtend",
                        "f8b09e7d7be59be6c5eb19bc50d3b49501d16fa0"
                    ]
                },
                {
                    "command": [
                        "change (Int.unsigned (Int.repr 64)) with 64.",
                        "VernacExtend",
                        "8c41c900d3038a0c5f8a37d232bdbd77b67870da"
                    ]
                },
                {
                    "command": [
                        "rewrite (unsigned_repr (Int.unsigned y)) by omega.",
                        "VernacExtend",
                        "ffaab7e5a7601beccbcb95207dd4b9d1b9274f00"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_repr, Int.unsigned_repr by omega.",
                        "VernacExtend",
                        "df5a81f5adf815ac082b7600c0fa71fb7459426c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "unfold shrx', shr', shru', shl'.",
                        "VernacExtend",
                        "3d568a1abf13d14286f6074c9d061d1b79d4e4cc"
                    ]
                },
                {
                    "command": [
                        "rewrite <- A.",
                        "VernacExtend",
                        "ae4f7c34b9745c58374bff661e3bf44cf209be15"
                    ]
                },
                {
                    "command": [
                        "change (Int.unsigned (Int.repr 63)) with (unsigned (repr 63)).",
                        "VernacExtend",
                        "b129f8b31583fcbe1a048462b90bf8beb3ef34bb"
                    ]
                },
                {
                    "command": [
                        "rewrite <- B.",
                        "VernacExtend",
                        "cab647b3b85c808796ed38ab4d9dfced5d87c3da"
                    ]
                },
                {
                    "command": [
                        "apply shrx_shr_2.",
                        "VernacExtend",
                        "88ffb33d223482aabf2e24679243a52c45db25f9"
                    ]
                },
                {
                    "command": [
                        "unfold ltu.",
                        "VernacExtend",
                        "e59e12052a96cc6c37e4e3abfd319dcb453c0f12"
                    ]
                },
                {
                    "command": [
                        "apply zlt_true.",
                        "VernacExtend",
                        "135d300e9c683e2995f4687be0904a8b2009f6fe"
                    ]
                },
                {
                    "command": [
                        "change (unsigned z < 63).",
                        "VernacExtend",
                        "22dd58791f5abced57480188e4453bfc360e04c3"
                    ]
                },
                {
                    "command": [
                        "rewrite A; omega.",
                        "VernacExtend",
                        "70ddc82783da84674b8316bc50b875b3e275d8ca"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "int_ltu_2_inv",
            "line_nb": 4427,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Int.ltu_inv in H.",
                        "VernacExtend",
                        "3b10a734d364d708dc57561d2a074557270232a0"
                    ]
                },
                {
                    "command": [
                        "apply Int.ltu_inv in H0.",
                        "VernacExtend",
                        "59874ac8f07fac4be6498e012481ff7c82fc2126"
                    ]
                },
                {
                    "command": [
                        "change (Int.unsigned iwordsize') with 64 in *.",
                        "VernacExtend",
                        "b44fe7e845176062af98ce88b84b7d871cada53c"
                    ]
                },
                {
                    "command": [
                        "assert (128 < max_unsigned) by reflexivity.",
                        "VernacExtend",
                        "72a84441faf8f86f4cb8758bb72ded36fb0896d7"
                    ]
                },
                {
                    "command": [
                        "assert (128 < Int.max_unsigned) by reflexivity.",
                        "VernacExtend",
                        "d1b17fbbd2386e57bc89f9c77772e2cc7f04fece"
                    ]
                },
                {
                    "command": [
                        "assert (Y: unsigned y' = Int.unsigned y) by (apply unsigned_repr; omega).",
                        "VernacExtend",
                        "3b7e21d1ef0b05f6efc4e4097351a0f78b34255e"
                    ]
                },
                {
                    "command": [
                        "assert (Z: unsigned z' = Int.unsigned z) by (apply unsigned_repr; omega).",
                        "VernacExtend",
                        "d29d8a14f3cf015649a53e735e842814ac073073"
                    ]
                },
                {
                    "command": [
                        "assert (P: Int.unsigned (Int.add y z) = unsigned (add y' z')).",
                        "VernacExtend",
                        "34c127f621eed5234bb6e61a163cc6562b625626"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold Int.add.",
                        "VernacExtend",
                        "297893a5fb9f4fbd3aabf4876520c214cc213bad"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.unsigned_repr by omega.",
                        "VernacExtend",
                        "9986c3ceb3b460e3a090640a27e54ada9a88f0bc"
                    ]
                },
                {
                    "command": [
                        "unfold add.",
                        "VernacExtend",
                        "11cf98bf231f22df486b46b3b6a1c38a94e859dd"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_repr by omega.",
                        "VernacExtend",
                        "7339ef17f9ea8e3378ec9ff1f43c6f29b5f199ce"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intuition auto.",
                        "VernacExtend",
                        "51e4da273bc2a464ad12897a5a8769bb8257393a"
                    ]
                },
                {
                    "command": [
                        "apply zlt_true.",
                        "VernacExtend",
                        "135d300e9c683e2995f4687be0904a8b2009f6fe"
                    ]
                },
                {
                    "command": [
                        "rewrite Y; auto.",
                        "VernacExtend",
                        "0e9d0ed05e624a1c6e2cbeab2bea9744f556e564"
                    ]
                },
                {
                    "command": [
                        "apply zlt_true.",
                        "VernacExtend",
                        "135d300e9c683e2995f4687be0904a8b2009f6fe"
                    ]
                },
                {
                    "command": [
                        "rewrite Z; auto.",
                        "VernacExtend",
                        "7e2dfd7e1daf37b0d10fa5a7e013be32d258dbe2"
                    ]
                },
                {
                    "command": [
                        "rewrite P.",
                        "VernacExtend",
                        "a68444f3ff5a99dd68a5269da7bfb78567ba4ea2"
                    ]
                },
                {
                    "command": [
                        "rewrite repr_unsigned.",
                        "VernacExtend",
                        "21d65804482992e66265036604c87ce7071df035"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "or_ror'",
            "line_nb": 4453,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (int_ltu_2_inv y z) as (A & B & C & D & E & F); auto.",
                        "VernacExtend",
                        "ee1369a8339264c2af9089d57c397f7b21145ea4"
                    ]
                },
                {
                    "command": [
                        "rewrite H1; omega.",
                        "VernacExtend",
                        "929a7910c3ec0b34643f98df816ca29d89132233"
                    ]
                },
                {
                    "command": [
                        "replace (shl' x y) with (shl x (repr (Int.unsigned y))).",
                        "VernacExtend",
                        "a948b19a20c111e833f4102326d5af4dd57e6381"
                    ]
                },
                {
                    "command": [
                        "replace (shru' x z) with (shru x (repr (Int.unsigned z))).",
                        "VernacExtend",
                        "08f55177e61e075ae2afc439dbaacf8115846c01"
                    ]
                },
                {
                    "command": [
                        "apply or_ror; auto.",
                        "VernacExtend",
                        "42eae3ca04d6ad6cb99d8d73b8a27188bf4686a9"
                    ]
                },
                {
                    "command": [
                        "rewrite F, H1.",
                        "VernacExtend",
                        "e054634213f4ef8ab4bd4b46e978c80c7bdd39dd"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "unfold shru, shru'; rewrite <- B; auto.",
                        "VernacExtend",
                        "fd9d73a66d27657aaebea216b4a4acad5e89cdcf"
                    ]
                },
                {
                    "command": [
                        "unfold shl, shl'; rewrite <- A; auto.",
                        "VernacExtend",
                        "925d04841b617948bbf77d8a6e4a2a4627383e57"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shl'_shl'",
            "line_nb": 4465,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Int.ltu_inv in H1.",
                        "VernacExtend",
                        "3e2179f2d4688e4e4e4dcaf7050da2df9c65d144"
                    ]
                },
                {
                    "command": [
                        "destruct (int_ltu_2_inv y z) as (A & B & C & D & E & F); auto.",
                        "VernacExtend",
                        "ee1369a8339264c2af9089d57c397f7b21145ea4"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "set (y' := repr (Int.unsigned y)) in *.",
                        "VernacExtend",
                        "74fc312b5a03a03a9bbb1985fe7d5457532b25af"
                    ]
                },
                {
                    "command": [
                        "set (z' := repr (Int.unsigned z)) in *.",
                        "VernacExtend",
                        "9f316d639765e40dbebb752314bba4d0144d4061"
                    ]
                },
                {
                    "command": [
                        "replace (shl' x y) with (shl x y').",
                        "VernacExtend",
                        "73d0ac07999d1589e772a133eaa54d4bc5d377e3"
                    ]
                },
                {
                    "command": [
                        "replace (shl' (shl x y') z) with (shl (shl x y') z').",
                        "VernacExtend",
                        "a2d4351327b32b955cf10f7ffc5b90a4e45316da"
                    ]
                },
                {
                    "command": [
                        "replace (shl' x (Int.add y z)) with (shl x (add y' z')).",
                        "VernacExtend",
                        "b8d9ea2ac4eda3f43c41d7d09ea346786f26bc39"
                    ]
                },
                {
                    "command": [
                        "apply shl_shl; auto.",
                        "VernacExtend",
                        "84c0078d6f115a2aa4781ac0f75f4e7ac7feff74"
                    ]
                },
                {
                    "command": [
                        "apply zlt_true.",
                        "VernacExtend",
                        "135d300e9c683e2995f4687be0904a8b2009f6fe"
                    ]
                },
                {
                    "command": [
                        "rewrite <- E.",
                        "VernacExtend",
                        "c62c6425624de37707b227590f371d7ae7fc2165"
                    ]
                },
                {
                    "command": [
                        "change (unsigned iwordsize) with zwordsize.",
                        "VernacExtend",
                        "a79245763aa0b69473a447cf648089fbfab6d7f0"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "unfold shl, shl'.",
                        "VernacExtend",
                        "e8626b1b6042de9a7fba569ad82cdb0bf0d195c2"
                    ]
                },
                {
                    "command": [
                        "rewrite E; auto.",
                        "VernacExtend",
                        "778a5942581efd020b739c3c70f5a25b2f502fe3"
                    ]
                },
                {
                    "command": [
                        "unfold shl at 1, shl'.",
                        "VernacExtend",
                        "78b92c7fdd58fc2609e6a0c476a2d15d27291827"
                    ]
                },
                {
                    "command": [
                        "rewrite <- B; auto.",
                        "VernacExtend",
                        "c04a8dce43911b15c02b6dc877314d46debbd87d"
                    ]
                },
                {
                    "command": [
                        "unfold shl, shl'; rewrite <- A; auto.",
                        "VernacExtend",
                        "925d04841b617948bbf77d8a6e4a2a4627383e57"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shru'_shru'",
            "line_nb": 4486,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Int.ltu_inv in H1.",
                        "VernacExtend",
                        "3e2179f2d4688e4e4e4dcaf7050da2df9c65d144"
                    ]
                },
                {
                    "command": [
                        "destruct (int_ltu_2_inv y z) as (A & B & C & D & E & F); auto.",
                        "VernacExtend",
                        "ee1369a8339264c2af9089d57c397f7b21145ea4"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "set (y' := repr (Int.unsigned y)) in *.",
                        "VernacExtend",
                        "74fc312b5a03a03a9bbb1985fe7d5457532b25af"
                    ]
                },
                {
                    "command": [
                        "set (z' := repr (Int.unsigned z)) in *.",
                        "VernacExtend",
                        "9f316d639765e40dbebb752314bba4d0144d4061"
                    ]
                },
                {
                    "command": [
                        "replace (shru' x y) with (shru x y').",
                        "VernacExtend",
                        "6bc1e66f1c4c42a4623ce341a27e965242d79b67"
                    ]
                },
                {
                    "command": [
                        "replace (shru' (shru x y') z) with (shru (shru x y') z').",
                        "VernacExtend",
                        "ecdb9e730caf14040b208f780a9caebceacd5227"
                    ]
                },
                {
                    "command": [
                        "replace (shru' x (Int.add y z)) with (shru x (add y' z')).",
                        "VernacExtend",
                        "9229c7d8cbae081b5be73be389e7d08af24c0db7"
                    ]
                },
                {
                    "command": [
                        "apply shru_shru; auto.",
                        "VernacExtend",
                        "027bc7d69eb09ac86bb6e052cb8420213bbe0449"
                    ]
                },
                {
                    "command": [
                        "apply zlt_true.",
                        "VernacExtend",
                        "135d300e9c683e2995f4687be0904a8b2009f6fe"
                    ]
                },
                {
                    "command": [
                        "rewrite <- E.",
                        "VernacExtend",
                        "c62c6425624de37707b227590f371d7ae7fc2165"
                    ]
                },
                {
                    "command": [
                        "change (unsigned iwordsize) with zwordsize.",
                        "VernacExtend",
                        "a79245763aa0b69473a447cf648089fbfab6d7f0"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "unfold shru, shru'.",
                        "VernacExtend",
                        "ec5a1f37e855c724e5853c6296e9b255e98f755f"
                    ]
                },
                {
                    "command": [
                        "rewrite E; auto.",
                        "VernacExtend",
                        "778a5942581efd020b739c3c70f5a25b2f502fe3"
                    ]
                },
                {
                    "command": [
                        "unfold shru at 1, shru'.",
                        "VernacExtend",
                        "3bb46adf199818a0030fd41299e02d1940193f1e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- B; auto.",
                        "VernacExtend",
                        "c04a8dce43911b15c02b6dc877314d46debbd87d"
                    ]
                },
                {
                    "command": [
                        "unfold shru, shru'; rewrite <- A; auto.",
                        "VernacExtend",
                        "be8b777b5a6b4a14088ea8139dd0d30895ee9a50"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shr'_shr'",
            "line_nb": 4507,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Int.ltu_inv in H1.",
                        "VernacExtend",
                        "3e2179f2d4688e4e4e4dcaf7050da2df9c65d144"
                    ]
                },
                {
                    "command": [
                        "destruct (int_ltu_2_inv y z) as (A & B & C & D & E & F); auto.",
                        "VernacExtend",
                        "ee1369a8339264c2af9089d57c397f7b21145ea4"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "set (y' := repr (Int.unsigned y)) in *.",
                        "VernacExtend",
                        "74fc312b5a03a03a9bbb1985fe7d5457532b25af"
                    ]
                },
                {
                    "command": [
                        "set (z' := repr (Int.unsigned z)) in *.",
                        "VernacExtend",
                        "9f316d639765e40dbebb752314bba4d0144d4061"
                    ]
                },
                {
                    "command": [
                        "replace (shr' x y) with (shr x y').",
                        "VernacExtend",
                        "966ad76457188887d42d778899b1a0c6b838c4f1"
                    ]
                },
                {
                    "command": [
                        "replace (shr' (shr x y') z) with (shr (shr x y') z').",
                        "VernacExtend",
                        "254e4531c335a434417b4d965ec85ab2fb628c6f"
                    ]
                },
                {
                    "command": [
                        "replace (shr' x (Int.add y z)) with (shr x (add y' z')).",
                        "VernacExtend",
                        "7d3eeed0a8d9f566532640bc39cfc2d2ad8465d7"
                    ]
                },
                {
                    "command": [
                        "apply shr_shr; auto.",
                        "VernacExtend",
                        "e658bb084efe7777b4ce84dce620f208a097d020"
                    ]
                },
                {
                    "command": [
                        "apply zlt_true.",
                        "VernacExtend",
                        "135d300e9c683e2995f4687be0904a8b2009f6fe"
                    ]
                },
                {
                    "command": [
                        "rewrite <- E.",
                        "VernacExtend",
                        "c62c6425624de37707b227590f371d7ae7fc2165"
                    ]
                },
                {
                    "command": [
                        "change (unsigned iwordsize) with zwordsize.",
                        "VernacExtend",
                        "a79245763aa0b69473a447cf648089fbfab6d7f0"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "unfold shr, shr'.",
                        "VernacExtend",
                        "ffa19bc8ddf07d54b9d375681176691cbcc6cccb"
                    ]
                },
                {
                    "command": [
                        "rewrite E; auto.",
                        "VernacExtend",
                        "778a5942581efd020b739c3c70f5a25b2f502fe3"
                    ]
                },
                {
                    "command": [
                        "unfold shr at 1, shr'.",
                        "VernacExtend",
                        "f32f31392a757f139b3908666201621aaf40ce31"
                    ]
                },
                {
                    "command": [
                        "rewrite <- B; auto.",
                        "VernacExtend",
                        "c04a8dce43911b15c02b6dc877314d46debbd87d"
                    ]
                },
                {
                    "command": [
                        "unfold shr, shr'; rewrite <- A; auto.",
                        "VernacExtend",
                        "5f0eec899b76ae2b98eea35dc3ddc0d59ee7c9ce"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "one_bits'_range",
            "line_nb": 4530,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (list_in_map_inv _ _ _ H) as [i0 [EQ IN]].",
                        "VernacExtend",
                        "9010afaf954a3ed97abdb8f8fa264b711725c4d2"
                    ]
                },
                {
                    "command": [
                        "exploit Z_one_bits_range; eauto.",
                        "VernacExtend",
                        "9e26f7339be73af87fea627345c664668963531b"
                    ]
                },
                {
                    "command": [
                        "intros R.",
                        "VernacExtend",
                        "b3ff821fb07e83935978cec895c7191956030088"
                    ]
                },
                {
                    "command": [
                        "unfold Int.ltu.",
                        "VernacExtend",
                        "af9bb555e7ff976047f5582fed58c62158c36a7f"
                    ]
                },
                {
                    "command": [
                        "rewrite EQ.",
                        "VernacExtend",
                        "359c5e196f83a6afbd9ede635bddbf545fd1eb82"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.unsigned_repr.",
                        "VernacExtend",
                        "a8943e35722dfb96bf3f1ebc66d4a8cd6f05e78a"
                    ]
                },
                {
                    "command": [
                        "change (Int.unsigned iwordsize') with zwordsize.",
                        "VernacExtend",
                        "a980a5d3cc29869e3d76ba3c2ac38c0e4c837e2c"
                    ]
                },
                {
                    "command": [
                        "apply zlt_true.",
                        "VernacExtend",
                        "135d300e9c683e2995f4687be0904a8b2009f6fe"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "assert (zwordsize < Int.max_unsigned) by reflexivity.",
                        "VernacExtend",
                        "ff90a1ac05904a2f5a2085577b0320ae6daf5b8c"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "one_bits'_decomp",
            "line_nb": 4545,
            "steps": [
                {
                    "command": [
                        "assert (REC: forall l, (forall i, In i l -> 0 <= i < zwordsize) -> int_of_one_bits' (List.map Int.repr l) = repr (powerserie l)).",
                        "VernacExtend",
                        "824068c53e7cdb8b4044f6dd9ba2b28f02d8bc5f"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "induction l; simpl; intros.",
                        "VernacExtend",
                        "34e9ea5965da389dfe8faf53c8ea4965d4fdcc22"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl by eauto.",
                        "VernacExtend",
                        "3c1ff980e9ad251a3c93e44df3b4ec439ee636da"
                    ]
                },
                {
                    "command": [
                        "apply eqm_samerepr; apply eqm_add.",
                        "VernacExtend",
                        "ca07b66336315a0337b1aeb594e0e61f17183a4e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite shl'_one_two_p.",
                        "VernacExtend",
                        "79361cab5dcc2516c3f6c562e4b09cbda1b2994f"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.unsigned_repr.",
                        "VernacExtend",
                        "a8943e35722dfb96bf3f1ebc66d4a8cd6f05e78a"
                    ]
                },
                {
                    "command": [
                        "apply eqm_sym; apply eqm_unsigned_repr.",
                        "VernacExtend",
                        "746efd7685e40b6d2048745aa7ebc53621f77b4e"
                    ]
                },
                {
                    "command": [
                        "exploit (H a).",
                        "VernacExtend",
                        "c299eabf805b4922e49597b5f3b36331843d93fd"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "assert (zwordsize < Int.max_unsigned) by reflexivity.",
                        "VernacExtend",
                        "ff90a1ac05904a2f5a2085577b0320ae6daf5b8c"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply eqm_sym; apply eqm_unsigned_repr.",
                        "VernacExtend",
                        "746efd7685e40b6d2048745aa7ebc53621f77b4e"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (repr_unsigned x) at 1.",
                        "VernacExtend",
                        "6e4513db39dea3249e7b467ccdea45363167be1b"
                    ]
                },
                {
                    "command": [
                        "unfold one_bits'.",
                        "VernacExtend",
                        "18d7955dee9c934adc6320a732843c308a8cc59b"
                    ]
                },
                {
                    "command": [
                        "rewrite REC.",
                        "VernacExtend",
                        "144aa4f8424f20a39c5c5ae73911504bac835e41"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z_one_bits_powerserie.",
                        "VernacExtend",
                        "b68928c793abbcbfff4050253d5d209bd134fc02"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply unsigned_range.",
                        "VernacExtend",
                        "107f7224db1bfb90305cbe8f1e64d98d5760b23b"
                    ]
                },
                {
                    "command": [
                        "apply Z_one_bits_range.",
                        "VernacExtend",
                        "92ab8ac39389977ca5573ff2d305abbb254a670f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_power2'_rng",
            "line_nb": 4574,
            "steps": [
                {
                    "command": [
                        "unfold is_power2'; intros n logn P2.",
                        "VernacExtend",
                        "b486d347ea12717a322b486f51acb458dccdbf4c"
                    ]
                },
                {
                    "command": [
                        "destruct (Z_one_bits wordsize (unsigned n) 0) as [ | i [ | ? ?]] eqn:B; inv P2.",
                        "VernacExtend",
                        "c8bfdada0e665fa57dae513551ece5500ea8c172"
                    ]
                },
                {
                    "command": [
                        "assert (0 <= i < zwordsize).",
                        "VernacExtend",
                        "67ee15694c511800fae6d2b50e102c0682d5a062"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply Z_one_bits_range with (unsigned n).",
                        "VernacExtend",
                        "913df80f2964cd60b38bcc6ec57601800bc1f67a"
                    ]
                },
                {
                    "command": [
                        "rewrite B; auto with coqlib.",
                        "VernacExtend",
                        "4ff8a1cc0c3db0ba986c72a6280e5855be8ec882"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.unsigned_repr.",
                        "VernacExtend",
                        "a8943e35722dfb96bf3f1ebc66d4a8cd6f05e78a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "assert (zwordsize < Int.max_unsigned) by reflexivity.",
                        "VernacExtend",
                        "ff90a1ac05904a2f5a2085577b0320ae6daf5b8c"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_power2'_range",
            "line_nb": 4587,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Int.ltu.",
                        "VernacExtend",
                        "af9bb555e7ff976047f5582fed58c62158c36a7f"
                    ]
                },
                {
                    "command": [
                        "change (Int.unsigned iwordsize') with zwordsize.",
                        "VernacExtend",
                        "a980a5d3cc29869e3d76ba3c2ac38c0e4c837e2c"
                    ]
                },
                {
                    "command": [
                        "apply zlt_true.",
                        "VernacExtend",
                        "135d300e9c683e2995f4687be0904a8b2009f6fe"
                    ]
                },
                {
                    "command": [
                        "generalize (is_power2'_rng _ _ H).",
                        "VernacExtend",
                        "7fcf1741f9f3a04d9b60e544522e5d39c054c7cc"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_power2'_correct",
            "line_nb": 4595,
            "steps": [
                {
                    "command": [
                        "unfold is_power2'; intros.",
                        "VernacExtend",
                        "d9824dd8e535d10fe71b433122665ad234624707"
                    ]
                },
                {
                    "command": [
                        "destruct (Z_one_bits wordsize (unsigned n) 0) as [ | i [ | ? ?]] eqn:B; inv H.",
                        "VernacExtend",
                        "818874277be5b541a9a77fa2caa9395173adf923"
                    ]
                },
                {
                    "command": [
                        "rewrite (Z_one_bits_powerserie (unsigned n)) by (apply unsigned_range).",
                        "VernacExtend",
                        "010dfeefae858082b4b53db1b3e6f76de0bbda59"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.unsigned_repr.",
                        "VernacExtend",
                        "a8943e35722dfb96bf3f1ebc66d4a8cd6f05e78a"
                    ]
                },
                {
                    "command": [
                        "rewrite B; simpl.",
                        "VernacExtend",
                        "64b3aa5f3ded6883cc71e0728cc13a43d15d3abf"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "assert (0 <= i < zwordsize).",
                        "VernacExtend",
                        "67ee15694c511800fae6d2b50e102c0682d5a062"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply Z_one_bits_range with (unsigned n).",
                        "VernacExtend",
                        "913df80f2964cd60b38bcc6ec57601800bc1f67a"
                    ]
                },
                {
                    "command": [
                        "rewrite B; auto with coqlib.",
                        "VernacExtend",
                        "4ff8a1cc0c3db0ba986c72a6280e5855be8ec882"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (zwordsize < Int.max_unsigned) by reflexivity.",
                        "VernacExtend",
                        "ff90a1ac05904a2f5a2085577b0320ae6daf5b8c"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_pow2'",
            "line_nb": 4610,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite shl'_mul.",
                        "VernacExtend",
                        "2786a30381b4529635ee19bee5788330db7f146f"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite shl'_one_two_p.",
                        "VernacExtend",
                        "79361cab5dcc2516c3f6c562e4b09cbda1b2994f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (repr_unsigned n).",
                        "VernacExtend",
                        "c2410aa77c68eb9cab0d5d690d0ca1c6311dcbec"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply is_power2'_correct; auto.",
                        "VernacExtend",
                        "1be96ea5703289b50dce9a458ec1f7863b702548"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divu_pow2'",
            "line_nb": 4619,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (is_power2'_correct n logn H).",
                        "VernacExtend",
                        "777a3692b480dee74769893d02e166f064008f85"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "unfold divu.",
                        "VernacExtend",
                        "a590fd4befdc5a95066b4da954521dc3b686dbcc"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "unfold shru'.",
                        "VernacExtend",
                        "bccb6cd64bef022c79587a9f22baadb223bf9345"
                    ]
                },
                {
                    "command": [
                        "rewrite Zshiftr_div_two_p.",
                        "VernacExtend",
                        "90fc01f0f0eae61bd03ac4563e0f8b19e779fe5c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "eapply is_power2'_rng; eauto.",
                        "VernacExtend",
                        "5e1e8cdfd54d371b5f21fa2908da59b96d4c3e67"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bits_loword",
            "line_nb": 4634,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold loword.",
                        "VernacExtend",
                        "905d761cdf480315e919f6fd082d261f834b3315"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.testbit_repr; auto.",
                        "VernacExtend",
                        "0447ffcc87c7035831486a8d06f35043455e93f5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bits_hiword",
            "line_nb": 4639,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold hiword.",
                        "VernacExtend",
                        "da681576c8117b5b63f7977145af043bb64e5a7c"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.testbit_repr; auto.",
                        "VernacExtend",
                        "0447ffcc87c7035831486a8d06f35043455e93f5"
                    ]
                },
                {
                    "command": [
                        "assert (zwordsize = 2 * Int.zwordsize) by reflexivity.",
                        "VernacExtend",
                        "1b29bc7f171652138eff857b5c53d85cc5641db8"
                    ]
                },
                {
                    "command": [
                        "fold (testbit (shru n (repr Int.zwordsize)) i).",
                        "VernacExtend",
                        "c83060948ac7aadf7517ed99ff002331c22b9141"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_shru.",
                        "VernacExtend",
                        "a63a609db343946cb726afaf3c287b7802ce80be"
                    ]
                },
                {
                    "command": [
                        "change (unsigned (repr Int.zwordsize)) with Int.zwordsize.",
                        "VernacExtend",
                        "28d5084059e172eecf41d799a57b674f9a44f88d"
                    ]
                },
                {
                    "command": [
                        "apply zlt_true.",
                        "VernacExtend",
                        "135d300e9c683e2995f4687be0904a8b2009f6fe"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bits_ofwords",
            "line_nb": 4651,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold ofwords.",
                        "VernacExtend",
                        "552e843a362976a228f5f9d3d7f61c479165c5be"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_or; auto.",
                        "VernacExtend",
                        "f825906d58bc4259d3a99e7adc9c4ffd5820c063"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_shl; auto.",
                        "VernacExtend",
                        "8ceddad9fb2f5a1a90d3d6f9fde9ccf26e61696f"
                    ]
                },
                {
                    "command": [
                        "change (unsigned (repr Int.zwordsize)) with Int.zwordsize.",
                        "VernacExtend",
                        "28d5084059e172eecf41d799a57b674f9a44f88d"
                    ]
                },
                {
                    "command": [
                        "assert (zwordsize = 2 * Int.zwordsize) by reflexivity.",
                        "VernacExtend",
                        "1b29bc7f171652138eff857b5c53d85cc5641db8"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i Int.zwordsize).",
                        "VernacExtend",
                        "36965c69056d1565bd2af3276289dd29e7f0cc00"
                    ]
                },
                {
                    "command": [
                        "rewrite testbit_repr; auto.",
                        "VernacExtend",
                        "d20143ed773e39c9c2d38dc1a41b649eadbc95c6"
                    ]
                },
                {
                    "command": [
                        "rewrite !testbit_repr; auto.",
                        "VernacExtend",
                        "ed03c006a62cc982ce1a4504966398fdfcfdcbc0"
                    ]
                },
                {
                    "command": [
                        "fold (Int.testbit lo i).",
                        "VernacExtend",
                        "1e7c0111b18a9a2e319ff9eac4f8a6b271060310"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.bits_above.",
                        "VernacExtend",
                        "2c1bb270ce4254bb996a35b336c09be013fbdad6"
                    ]
                },
                {
                    "command": [
                        "apply orb_false_r.",
                        "VernacExtend",
                        "c0fa87fb1baa1cbcd361805f26554fb59f562524"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lo_ofwords",
            "line_nb": 4667,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Int.same_bits_eq; intros.",
                        "VernacExtend",
                        "ef26647008bcdf50e45dfe09c06063978628f164"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_loword; auto.",
                        "VernacExtend",
                        "c484dd0978ff536f722e226bffbb3a81c58813c7"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_ofwords.",
                        "VernacExtend",
                        "47f37d9997617a91e0dcfd83f898d977c03dc103"
                    ]
                },
                {
                    "command": [
                        "apply zlt_true.",
                        "VernacExtend",
                        "135d300e9c683e2995f4687be0904a8b2009f6fe"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "assert (zwordsize = 2 * Int.zwordsize) by reflexivity.",
                        "VernacExtend",
                        "1b29bc7f171652138eff857b5c53d85cc5641db8"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hi_ofwords",
            "line_nb": 4677,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Int.same_bits_eq; intros.",
                        "VernacExtend",
                        "ef26647008bcdf50e45dfe09c06063978628f164"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_hiword; auto.",
                        "VernacExtend",
                        "39ae5bd3bfd1a01cf8f9c6041308996acd97bbd4"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_ofwords.",
                        "VernacExtend",
                        "47f37d9997617a91e0dcfd83f898d977c03dc103"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false.",
                        "VernacExtend",
                        "05a431e1e9a25ac95748744c08bc71ee0b8c6b3c"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "assert (zwordsize = 2 * Int.zwordsize) by reflexivity.",
                        "VernacExtend",
                        "1b29bc7f171652138eff857b5c53d85cc5641db8"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ofwords_recompose",
            "line_nb": 4689,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply same_bits_eq; intros.",
                        "VernacExtend",
                        "f9502262d3529f0b0748cb4bcf10b1caeb19f461"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_ofwords; auto.",
                        "VernacExtend",
                        "62cb4f82beaeba2693d8cbd54d39659938745d34"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i Int.zwordsize).",
                        "VernacExtend",
                        "36965c69056d1565bd2af3276289dd29e7f0cc00"
                    ]
                },
                {
                    "command": [
                        "apply bits_loword.",
                        "VernacExtend",
                        "e7f81147170ad732a40acb27e82ca7ea25424bc3"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_hiword.",
                        "VernacExtend",
                        "84301c33e4dc7015a9c60a3f79e91e03146ef9cd"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "assert (zwordsize = 2 * Int.zwordsize) by reflexivity.",
                        "VernacExtend",
                        "1b29bc7f171652138eff857b5c53d85cc5641db8"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ofwords_add",
            "line_nb": 4702,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold ofwords.",
                        "VernacExtend",
                        "552e843a362976a228f5f9d3d7f61c479165c5be"
                    ]
                },
                {
                    "command": [
                        "rewrite shifted_or_is_add.",
                        "VernacExtend",
                        "2e6978a4ff844fe3f9472a94550fcaf89acd01e6"
                    ]
                },
                {
                    "command": [
                        "apply eqm_samerepr.",
                        "VernacExtend",
                        "2226a5674ed5a7db984e878fdbb37775ca665295"
                    ]
                },
                {
                    "command": [
                        "apply eqm_add.",
                        "VernacExtend",
                        "6c81c3e6c0a0d0574105329a31bbe3cdf542f623"
                    ]
                },
                {
                    "command": [
                        "apply eqm_mult.",
                        "VernacExtend",
                        "2a50cf06165627ed9dbd12bd10f56ff1fd8640b4"
                    ]
                },
                {
                    "command": [
                        "apply eqm_sym; apply eqm_unsigned_repr.",
                        "VernacExtend",
                        "746efd7685e40b6d2048745aa7ebc53621f77b4e"
                    ]
                },
                {
                    "command": [
                        "apply eqm_refl.",
                        "VernacExtend",
                        "cd38aceb6abd087396d34625c4f0ed69968a7526"
                    ]
                },
                {
                    "command": [
                        "apply eqm_sym; apply eqm_unsigned_repr.",
                        "VernacExtend",
                        "746efd7685e40b6d2048745aa7ebc53621f77b4e"
                    ]
                },
                {
                    "command": [
                        "change Int.zwordsize with 32; change zwordsize with 64; omega.",
                        "VernacExtend",
                        "05ff3b0aff4fe1e9ad4c5e75b39ce4cf5620d904"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_repr.",
                        "VernacExtend",
                        "5134990e153a3f2ce893c9ea9837f183c322ceb2"
                    ]
                },
                {
                    "command": [
                        "generalize (Int.unsigned_range lo).",
                        "VernacExtend",
                        "00f96bd0dc0b53ce0d76e2cda2fe941d92ad04cf"
                    ]
                },
                {
                    "command": [
                        "intros [A B].",
                        "VernacExtend",
                        "269ecc1b12a78cad85161d58003fb0ebdea8ebc3"
                    ]
                },
                {
                    "command": [
                        "exact B.",
                        "VernacExtend",
                        "f052f8e9c426ecc3b01a48cbf92f5b0175487b9a"
                    ]
                },
                {
                    "command": [
                        "assert (Int.max_unsigned < max_unsigned) by (compute; auto).",
                        "VernacExtend",
                        "a76700b13737517856e62657f7309495ec3d44e3"
                    ]
                },
                {
                    "command": [
                        "generalize (Int.unsigned_range_2 lo); omega.",
                        "VernacExtend",
                        "9b7b9144b2261374450a1a24e281d8a418fb7236"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ofwords_add'",
            "line_nb": 4720,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite ofwords_add.",
                        "VernacExtend",
                        "5ceeb88b9f12c371f27ef33ad4fe9bb62883478c"
                    ]
                },
                {
                    "command": [
                        "apply unsigned_repr.",
                        "VernacExtend",
                        "cbb55125b21da3156cf49c45f71d95a6743593f6"
                    ]
                },
                {
                    "command": [
                        "generalize (Int.unsigned_range hi) (Int.unsigned_range lo).",
                        "VernacExtend",
                        "fe8a12efbdae518a8df9f19a995adb7feb085a66"
                    ]
                },
                {
                    "command": [
                        "change (two_p 32) with Int.modulus.",
                        "VernacExtend",
                        "49d3ad9d5dad69d20c51e894a4980581aea22b69"
                    ]
                },
                {
                    "command": [
                        "change Int.modulus with 4294967296.",
                        "VernacExtend",
                        "57185799b9e971ee5fcb305708fba40953052080"
                    ]
                },
                {
                    "command": [
                        "change max_unsigned with 18446744073709551615.",
                        "VernacExtend",
                        "21a12cf449ba9cf55e69c8b258be996bc1df6188"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqm_mul_2p32",
            "line_nb": 4730,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H as [k EQ].",
                        "VernacExtend",
                        "c9baa1112395e78126ee4d1c1c1dc430c2db4072"
                    ]
                },
                {
                    "command": [
                        "exists k.",
                        "VernacExtend",
                        "5bd085ef2f3e8bbd4bde88ae4ddb2fb4c72df1a9"
                    ]
                },
                {
                    "command": [
                        "rewrite EQ.",
                        "VernacExtend",
                        "359c5e196f83a6afbd9ede635bddbf545fd1eb82"
                    ]
                },
                {
                    "command": [
                        "change Int.modulus with (two_p 32).",
                        "VernacExtend",
                        "7e9aa7c9a569a8e5be3cbc0d8367b26497a3f312"
                    ]
                },
                {
                    "command": [
                        "change modulus with (two_p 32 * two_p 32).",
                        "VernacExtend",
                        "f7f9451814139ed1b1b12e3bb4356239e2a5ce8b"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ofwords_add''",
            "line_nb": 4739,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite ofwords_add.",
                        "VernacExtend",
                        "5ceeb88b9f12c371f27ef33ad4fe9bb62883478c"
                    ]
                },
                {
                    "command": [
                        "replace (repr (Int.unsigned hi * two_p 32 + Int.unsigned lo)) with (repr (Int.signed hi * two_p 32 + Int.unsigned lo)).",
                        "VernacExtend",
                        "9f57ce6ae11796905077b88a18748d877f8f0105"
                    ]
                },
                {
                    "command": [
                        "apply signed_repr.",
                        "VernacExtend",
                        "adf1ccf79802672332bf27c82e1f983090114eac"
                    ]
                },
                {
                    "command": [
                        "generalize (Int.signed_range hi) (Int.unsigned_range lo).",
                        "VernacExtend",
                        "1340bab68f3c8174929c84ecc5f8fbe99604ba14"
                    ]
                },
                {
                    "command": [
                        "change (two_p 32) with Int.modulus.",
                        "VernacExtend",
                        "49d3ad9d5dad69d20c51e894a4980581aea22b69"
                    ]
                },
                {
                    "command": [
                        "change min_signed with (Int.min_signed * Int.modulus).",
                        "VernacExtend",
                        "a7b0dd955f9024b603ee7058f937b86c6d500d79"
                    ]
                },
                {
                    "command": [
                        "change max_signed with (Int.max_signed * Int.modulus + Int.modulus - 1).",
                        "VernacExtend",
                        "a1b24271cc733c3db6080d960d571db49c969b6a"
                    ]
                },
                {
                    "command": [
                        "change Int.modulus with 4294967296.",
                        "VernacExtend",
                        "57185799b9e971ee5fcb305708fba40953052080"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply eqm_samerepr.",
                        "VernacExtend",
                        "2226a5674ed5a7db984e878fdbb37775ca665295"
                    ]
                },
                {
                    "command": [
                        "apply eqm_add.",
                        "VernacExtend",
                        "6c81c3e6c0a0d0574105329a31bbe3cdf542f623"
                    ]
                },
                {
                    "command": [
                        "apply eqm_mul_2p32.",
                        "VernacExtend",
                        "ac416561659634c2f003eab7db7273d3c4f44d73"
                    ]
                },
                {
                    "command": [
                        "apply Int.eqm_signed_unsigned.",
                        "VernacExtend",
                        "19f5570918516452a92e2418d588fa0058ae01b2"
                    ]
                },
                {
                    "command": [
                        "apply eqm_refl.",
                        "VernacExtend",
                        "cd38aceb6abd087396d34625c4f0ed69968a7526"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decompose_bitwise_binop",
            "line_nb": 4756,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Int64.same_bits_eq; intros.",
                        "VernacExtend",
                        "e40835669e65a3bf44a1b7da4992aa3b741b9691"
                    ]
                },
                {
                    "command": [
                        "rewrite H by auto.",
                        "VernacExtend",
                        "223b608150ce9f33043268eccac47746c38cae2c"
                    ]
                },
                {
                    "command": [
                        "rewrite ! bits_ofwords by auto.",
                        "VernacExtend",
                        "f4bac6a85fdeb377ef0f7f1dcbe265b14a5bad0b"
                    ]
                },
                {
                    "command": [
                        "assert (zwordsize = 2 * Int.zwordsize) by reflexivity.",
                        "VernacExtend",
                        "1b29bc7f171652138eff857b5c53d85cc5641db8"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i Int.zwordsize); rewrite H0 by omega; auto.",
                        "VernacExtend",
                        "82394dfd6eff71103d67192148e36e9e470b541f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decompose_and",
            "line_nb": 4764,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply decompose_bitwise_binop with andb.",
                        "VernacExtend",
                        "cfe8fcedb4f16d4f43248120a4ccca0840e9919c"
                    ]
                },
                {
                    "command": [
                        "apply bits_and.",
                        "VernacExtend",
                        "6821cf98716593f5651153f241f968db826fe635"
                    ]
                },
                {
                    "command": [
                        "apply Int.bits_and.",
                        "VernacExtend",
                        "9e06f3a7941e5d0cf2e24db0bcc228ee09b5c47d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decompose_or",
            "line_nb": 4770,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply decompose_bitwise_binop with orb.",
                        "VernacExtend",
                        "7146071a275094133d997005230a178392c29971"
                    ]
                },
                {
                    "command": [
                        "apply bits_or.",
                        "VernacExtend",
                        "352b60047c922ffd0de052af87bd20c3f41ddc91"
                    ]
                },
                {
                    "command": [
                        "apply Int.bits_or.",
                        "VernacExtend",
                        "5b7f59414b0305e40004ee811d3ff53479ce0e6a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decompose_xor",
            "line_nb": 4776,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply decompose_bitwise_binop with xorb.",
                        "VernacExtend",
                        "fa5f1c46e914fb98b8e1cca30306f31528f8083d"
                    ]
                },
                {
                    "command": [
                        "apply bits_xor.",
                        "VernacExtend",
                        "123a96797a5200819242a1309514fcfb766d4422"
                    ]
                },
                {
                    "command": [
                        "apply Int.bits_xor.",
                        "VernacExtend",
                        "9bfcaad96446c4ac01bc93f53735e452e51b77e2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decompose_not",
            "line_nb": 4782,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold not, Int.not.",
                        "VernacExtend",
                        "92f157f59b057451473fd6e8f8362c7ba137c9e7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- decompose_xor.",
                        "VernacExtend",
                        "b2e837b399ed9c0d53bb213161e57785ff562352"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply (Int64.eq_spec mone (ofwords Int.mone Int.mone)).",
                        "VernacExtend",
                        "02c4647edca114726a6cf2f4d7112e6f68be550e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decompose_shl_1",
            "line_nb": 4789,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Int.unsigned (Int.sub Int.iwordsize y) = Int.zwordsize - Int.unsigned y).",
                        "VernacExtend",
                        "58591357136fc989f17ecdea5c0f36b3874af253"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold Int.sub.",
                        "VernacExtend",
                        "1170869a324af572e1e05cd70a3c8ddc34d9f678"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.unsigned_repr.",
                        "VernacExtend",
                        "a8943e35722dfb96bf3f1ebc66d4a8cd6f05e78a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.unsigned_repr_wordsize.",
                        "VernacExtend",
                        "085aad41418d64371790d9cee768fd45e3b00867"
                    ]
                },
                {
                    "command": [
                        "generalize Int.wordsize_max_unsigned; omega.",
                        "VernacExtend",
                        "c2f0bdd64a28af3f4262b00bd08376130fc90c2d"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (zwordsize = 2 * Int.zwordsize) by reflexivity.",
                        "VernacExtend",
                        "1b29bc7f171652138eff857b5c53d85cc5641db8"
                    ]
                },
                {
                    "command": [
                        "apply Int64.same_bits_eq; intros.",
                        "VernacExtend",
                        "e40835669e65a3bf44a1b7da4992aa3b741b9691"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_shl' by auto.",
                        "VernacExtend",
                        "56674d4854374afc8a3e99981ea81350e14eaa9b"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_ofwords by auto.",
                        "VernacExtend",
                        "05561d9f08f2582def67b0c01711576cca51ec90"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i Int.zwordsize).",
                        "VernacExtend",
                        "36965c69056d1565bd2af3276289dd29e7f0cc00"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.bits_shl by omega.",
                        "VernacExtend",
                        "30070da6a9648df78d6be6cc68358945cb3ccafd"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i (Int.unsigned y)).",
                        "VernacExtend",
                        "f439089e63ef470bcf323a1f4b3305d73e56134e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_ofwords by omega.",
                        "VernacExtend",
                        "f53c5f05e4a2dd89043b10b8440f6d7ac028cdb9"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true by omega.",
                        "VernacExtend",
                        "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false by omega.",
                        "VernacExtend",
                        "1a3d93f438781af1cb3b43101336d435afaef9a1"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_ofwords by omega.",
                        "VernacExtend",
                        "f53c5f05e4a2dd89043b10b8440f6d7ac028cdb9"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.bits_or by omega.",
                        "VernacExtend",
                        "c1fd56c715aa7e4a8254feb4cc93c56f470b3529"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.bits_shl by omega.",
                        "VernacExtend",
                        "30070da6a9648df78d6be6cc68358945cb3ccafd"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.bits_shru by omega.",
                        "VernacExtend",
                        "4a0a3a23bcbe2af00d5209edf88e3b6d0ff7057e"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (i - Int.unsigned y) (Int.zwordsize)).",
                        "VernacExtend",
                        "2c30b16abf5575d4a0a913dbb1b057d7394683c4"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true by omega.",
                        "VernacExtend",
                        "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true by omega.",
                        "VernacExtend",
                        "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
                    ]
                },
                {
                    "command": [
                        "rewrite orb_false_l.",
                        "VernacExtend",
                        "dce4660bb0304c3566af283a80836da73d45b705"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false by omega.",
                        "VernacExtend",
                        "1a3d93f438781af1cb3b43101336d435afaef9a1"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false by omega.",
                        "VernacExtend",
                        "1a3d93f438781af1cb3b43101336d435afaef9a1"
                    ]
                },
                {
                    "command": [
                        "rewrite orb_false_r.",
                        "VernacExtend",
                        "1f347086f7a141d5c22c1549eee172fd8a72e833"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decompose_shl_2",
            "line_nb": 4829,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (zwordsize = 2 * Int.zwordsize) by reflexivity.",
                        "VernacExtend",
                        "1b29bc7f171652138eff857b5c53d85cc5641db8"
                    ]
                },
                {
                    "command": [
                        "assert (Int.unsigned (Int.sub y Int.iwordsize) = Int.unsigned y - Int.zwordsize).",
                        "VernacExtend",
                        "ac77881210f9f14b6e90aa0bb04642ba31991772"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold Int.sub.",
                        "VernacExtend",
                        "1170869a324af572e1e05cd70a3c8ddc34d9f678"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.unsigned_repr.",
                        "VernacExtend",
                        "a8943e35722dfb96bf3f1ebc66d4a8cd6f05e78a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.unsigned_repr_wordsize.",
                        "VernacExtend",
                        "085aad41418d64371790d9cee768fd45e3b00867"
                    ]
                },
                {
                    "command": [
                        "generalize (Int.unsigned_range_2 y).",
                        "VernacExtend",
                        "6b5905db15033139d01d5aedb977e23c5dd9e844"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply Int64.same_bits_eq; intros.",
                        "VernacExtend",
                        "e40835669e65a3bf44a1b7da4992aa3b741b9691"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_shl' by auto.",
                        "VernacExtend",
                        "56674d4854374afc8a3e99981ea81350e14eaa9b"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_ofwords by auto.",
                        "VernacExtend",
                        "05561d9f08f2582def67b0c01711576cca51ec90"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i Int.zwordsize).",
                        "VernacExtend",
                        "36965c69056d1565bd2af3276289dd29e7f0cc00"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true by omega.",
                        "VernacExtend",
                        "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
                    ]
                },
                {
                    "command": [
                        "apply Int.bits_zero.",
                        "VernacExtend",
                        "1d93a9d008cd1d96185c3b6509dcbd0910e4df21"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.bits_shl by omega.",
                        "VernacExtend",
                        "30070da6a9648df78d6be6cc68358945cb3ccafd"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i (Int.unsigned y)).",
                        "VernacExtend",
                        "f439089e63ef470bcf323a1f4b3305d73e56134e"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true by omega.",
                        "VernacExtend",
                        "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false by omega.",
                        "VernacExtend",
                        "1a3d93f438781af1cb3b43101336d435afaef9a1"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_ofwords by omega.",
                        "VernacExtend",
                        "f53c5f05e4a2dd89043b10b8440f6d7ac028cdb9"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true by omega.",
                        "VernacExtend",
                        "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decompose_shru_1",
            "line_nb": 4858,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Int.unsigned (Int.sub Int.iwordsize y) = Int.zwordsize - Int.unsigned y).",
                        "VernacExtend",
                        "58591357136fc989f17ecdea5c0f36b3874af253"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold Int.sub.",
                        "VernacExtend",
                        "1170869a324af572e1e05cd70a3c8ddc34d9f678"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.unsigned_repr.",
                        "VernacExtend",
                        "a8943e35722dfb96bf3f1ebc66d4a8cd6f05e78a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.unsigned_repr_wordsize.",
                        "VernacExtend",
                        "085aad41418d64371790d9cee768fd45e3b00867"
                    ]
                },
                {
                    "command": [
                        "generalize Int.wordsize_max_unsigned; omega.",
                        "VernacExtend",
                        "c2f0bdd64a28af3f4262b00bd08376130fc90c2d"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (zwordsize = 2 * Int.zwordsize) by reflexivity.",
                        "VernacExtend",
                        "1b29bc7f171652138eff857b5c53d85cc5641db8"
                    ]
                },
                {
                    "command": [
                        "apply Int64.same_bits_eq; intros.",
                        "VernacExtend",
                        "e40835669e65a3bf44a1b7da4992aa3b741b9691"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_shru' by auto.",
                        "VernacExtend",
                        "98611f43167aa979e66026f7443e180d7ea44f6b"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_ofwords by auto.",
                        "VernacExtend",
                        "05561d9f08f2582def67b0c01711576cca51ec90"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i Int.zwordsize).",
                        "VernacExtend",
                        "36965c69056d1565bd2af3276289dd29e7f0cc00"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true by omega.",
                        "VernacExtend",
                        "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_ofwords by omega.",
                        "VernacExtend",
                        "f53c5f05e4a2dd89043b10b8440f6d7ac028cdb9"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.bits_or by omega.",
                        "VernacExtend",
                        "c1fd56c715aa7e4a8254feb4cc93c56f470b3529"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.bits_shl by omega.",
                        "VernacExtend",
                        "30070da6a9648df78d6be6cc68358945cb3ccafd"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.bits_shru by omega.",
                        "VernacExtend",
                        "4a0a3a23bcbe2af00d5209edf88e3b6d0ff7057e"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (i + Int.unsigned y) (Int.zwordsize)).",
                        "VernacExtend",
                        "f561bb14947471cc87a3696930b683a6ae494fab"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true by omega.",
                        "VernacExtend",
                        "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
                    ]
                },
                {
                    "command": [
                        "rewrite orb_false_r.",
                        "VernacExtend",
                        "1f347086f7a141d5c22c1549eee172fd8a72e833"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false by omega.",
                        "VernacExtend",
                        "1a3d93f438781af1cb3b43101336d435afaef9a1"
                    ]
                },
                {
                    "command": [
                        "rewrite orb_false_l.",
                        "VernacExtend",
                        "dce4660bb0304c3566af283a80836da73d45b705"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.bits_shru by omega.",
                        "VernacExtend",
                        "4a0a3a23bcbe2af00d5209edf88e3b6d0ff7057e"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (i + Int.unsigned y) zwordsize).",
                        "VernacExtend",
                        "fe5b63a10662e9e75a91e9f4ce7bca51d49af5fb"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_ofwords by omega.",
                        "VernacExtend",
                        "f53c5f05e4a2dd89043b10b8440f6d7ac028cdb9"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true by omega.",
                        "VernacExtend",
                        "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false by omega.",
                        "VernacExtend",
                        "1a3d93f438781af1cb3b43101336d435afaef9a1"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false by omega.",
                        "VernacExtend",
                        "1a3d93f438781af1cb3b43101336d435afaef9a1"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decompose_shru_2",
            "line_nb": 4898,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (zwordsize = 2 * Int.zwordsize) by reflexivity.",
                        "VernacExtend",
                        "1b29bc7f171652138eff857b5c53d85cc5641db8"
                    ]
                },
                {
                    "command": [
                        "assert (Int.unsigned (Int.sub y Int.iwordsize) = Int.unsigned y - Int.zwordsize).",
                        "VernacExtend",
                        "ac77881210f9f14b6e90aa0bb04642ba31991772"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold Int.sub.",
                        "VernacExtend",
                        "1170869a324af572e1e05cd70a3c8ddc34d9f678"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.unsigned_repr.",
                        "VernacExtend",
                        "a8943e35722dfb96bf3f1ebc66d4a8cd6f05e78a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.unsigned_repr_wordsize.",
                        "VernacExtend",
                        "085aad41418d64371790d9cee768fd45e3b00867"
                    ]
                },
                {
                    "command": [
                        "generalize (Int.unsigned_range_2 y).",
                        "VernacExtend",
                        "6b5905db15033139d01d5aedb977e23c5dd9e844"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply Int64.same_bits_eq; intros.",
                        "VernacExtend",
                        "e40835669e65a3bf44a1b7da4992aa3b741b9691"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_shru' by auto.",
                        "VernacExtend",
                        "98611f43167aa979e66026f7443e180d7ea44f6b"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_ofwords by auto.",
                        "VernacExtend",
                        "05561d9f08f2582def67b0c01711576cca51ec90"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i Int.zwordsize).",
                        "VernacExtend",
                        "36965c69056d1565bd2af3276289dd29e7f0cc00"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.bits_shru by omega.",
                        "VernacExtend",
                        "4a0a3a23bcbe2af00d5209edf88e3b6d0ff7057e"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (i + Int.unsigned y) zwordsize).",
                        "VernacExtend",
                        "fe5b63a10662e9e75a91e9f4ce7bca51d49af5fb"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true by omega.",
                        "VernacExtend",
                        "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_ofwords by omega.",
                        "VernacExtend",
                        "f53c5f05e4a2dd89043b10b8440f6d7ac028cdb9"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false by omega.",
                        "VernacExtend",
                        "1a3d93f438781af1cb3b43101336d435afaef9a1"
                    ]
                },
                {
                    "command": [
                        "f_equal; omega.",
                        "VernacExtend",
                        "3b812353131f9b9bebbd6410b3fa7c9d2e597ec3"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false by omega.",
                        "VernacExtend",
                        "1a3d93f438781af1cb3b43101336d435afaef9a1"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false by omega.",
                        "VernacExtend",
                        "1a3d93f438781af1cb3b43101336d435afaef9a1"
                    ]
                },
                {
                    "command": [
                        "apply Int.bits_zero.",
                        "VernacExtend",
                        "1d93a9d008cd1d96185c3b6509dcbd0910e4df21"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decompose_shr_1",
            "line_nb": 4927,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Int.unsigned (Int.sub Int.iwordsize y) = Int.zwordsize - Int.unsigned y).",
                        "VernacExtend",
                        "58591357136fc989f17ecdea5c0f36b3874af253"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold Int.sub.",
                        "VernacExtend",
                        "1170869a324af572e1e05cd70a3c8ddc34d9f678"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.unsigned_repr.",
                        "VernacExtend",
                        "a8943e35722dfb96bf3f1ebc66d4a8cd6f05e78a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.unsigned_repr_wordsize.",
                        "VernacExtend",
                        "085aad41418d64371790d9cee768fd45e3b00867"
                    ]
                },
                {
                    "command": [
                        "generalize Int.wordsize_max_unsigned; omega.",
                        "VernacExtend",
                        "c2f0bdd64a28af3f4262b00bd08376130fc90c2d"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (zwordsize = 2 * Int.zwordsize) by reflexivity.",
                        "VernacExtend",
                        "1b29bc7f171652138eff857b5c53d85cc5641db8"
                    ]
                },
                {
                    "command": [
                        "apply Int64.same_bits_eq; intros.",
                        "VernacExtend",
                        "e40835669e65a3bf44a1b7da4992aa3b741b9691"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_shr' by auto.",
                        "VernacExtend",
                        "b1aa834682cc69e26c2912f0f6e2efd5f3520956"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_ofwords by auto.",
                        "VernacExtend",
                        "05561d9f08f2582def67b0c01711576cca51ec90"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i Int.zwordsize).",
                        "VernacExtend",
                        "36965c69056d1565bd2af3276289dd29e7f0cc00"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true by omega.",
                        "VernacExtend",
                        "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_ofwords by omega.",
                        "VernacExtend",
                        "f53c5f05e4a2dd89043b10b8440f6d7ac028cdb9"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.bits_or by omega.",
                        "VernacExtend",
                        "c1fd56c715aa7e4a8254feb4cc93c56f470b3529"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.bits_shl by omega.",
                        "VernacExtend",
                        "30070da6a9648df78d6be6cc68358945cb3ccafd"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.bits_shru by omega.",
                        "VernacExtend",
                        "4a0a3a23bcbe2af00d5209edf88e3b6d0ff7057e"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (i + Int.unsigned y) (Int.zwordsize)).",
                        "VernacExtend",
                        "f561bb14947471cc87a3696930b683a6ae494fab"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true by omega.",
                        "VernacExtend",
                        "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
                    ]
                },
                {
                    "command": [
                        "rewrite orb_false_r.",
                        "VernacExtend",
                        "1f347086f7a141d5c22c1549eee172fd8a72e833"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false by omega.",
                        "VernacExtend",
                        "1a3d93f438781af1cb3b43101336d435afaef9a1"
                    ]
                },
                {
                    "command": [
                        "rewrite orb_false_l.",
                        "VernacExtend",
                        "dce4660bb0304c3566af283a80836da73d45b705"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.bits_shr by omega.",
                        "VernacExtend",
                        "3bea41576588a878332779b2b1bd034c6102f8dc"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (i + Int.unsigned y) zwordsize).",
                        "VernacExtend",
                        "fe5b63a10662e9e75a91e9f4ce7bca51d49af5fb"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_ofwords by omega.",
                        "VernacExtend",
                        "f53c5f05e4a2dd89043b10b8440f6d7ac028cdb9"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true by omega.",
                        "VernacExtend",
                        "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false by omega.",
                        "VernacExtend",
                        "1a3d93f438781af1cb3b43101336d435afaef9a1"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false by omega.",
                        "VernacExtend",
                        "1a3d93f438781af1cb3b43101336d435afaef9a1"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_ofwords by omega.",
                        "VernacExtend",
                        "f53c5f05e4a2dd89043b10b8440f6d7ac028cdb9"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false by omega.",
                        "VernacExtend",
                        "1a3d93f438781af1cb3b43101336d435afaef9a1"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decompose_shr_2",
            "line_nb": 4969,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (zwordsize = 2 * Int.zwordsize) by reflexivity.",
                        "VernacExtend",
                        "1b29bc7f171652138eff857b5c53d85cc5641db8"
                    ]
                },
                {
                    "command": [
                        "assert (Int.unsigned (Int.sub y Int.iwordsize) = Int.unsigned y - Int.zwordsize).",
                        "VernacExtend",
                        "ac77881210f9f14b6e90aa0bb04642ba31991772"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold Int.sub.",
                        "VernacExtend",
                        "1170869a324af572e1e05cd70a3c8ddc34d9f678"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.unsigned_repr.",
                        "VernacExtend",
                        "a8943e35722dfb96bf3f1ebc66d4a8cd6f05e78a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.unsigned_repr_wordsize.",
                        "VernacExtend",
                        "085aad41418d64371790d9cee768fd45e3b00867"
                    ]
                },
                {
                    "command": [
                        "generalize (Int.unsigned_range_2 y).",
                        "VernacExtend",
                        "6b5905db15033139d01d5aedb977e23c5dd9e844"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply Int64.same_bits_eq; intros.",
                        "VernacExtend",
                        "e40835669e65a3bf44a1b7da4992aa3b741b9691"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_shr' by auto.",
                        "VernacExtend",
                        "b1aa834682cc69e26c2912f0f6e2efd5f3520956"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_ofwords by auto.",
                        "VernacExtend",
                        "05561d9f08f2582def67b0c01711576cca51ec90"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i Int.zwordsize).",
                        "VernacExtend",
                        "36965c69056d1565bd2af3276289dd29e7f0cc00"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.bits_shr by omega.",
                        "VernacExtend",
                        "3bea41576588a878332779b2b1bd034c6102f8dc"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (i + Int.unsigned y) zwordsize).",
                        "VernacExtend",
                        "fe5b63a10662e9e75a91e9f4ce7bca51d49af5fb"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true by omega.",
                        "VernacExtend",
                        "6f7f6c19b07aad2882190188bcc4a5dc3ce525bb"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_ofwords by omega.",
                        "VernacExtend",
                        "f53c5f05e4a2dd89043b10b8440f6d7ac028cdb9"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false by omega.",
                        "VernacExtend",
                        "1a3d93f438781af1cb3b43101336d435afaef9a1"
                    ]
                },
                {
                    "command": [
                        "f_equal; omega.",
                        "VernacExtend",
                        "3b812353131f9b9bebbd6410b3fa7c9d2e597ec3"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false by omega.",
                        "VernacExtend",
                        "1a3d93f438781af1cb3b43101336d435afaef9a1"
                    ]
                },
                {
                    "command": [
                        "rewrite bits_ofwords by omega.",
                        "VernacExtend",
                        "f53c5f05e4a2dd89043b10b8440f6d7ac028cdb9"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false by omega.",
                        "VernacExtend",
                        "1a3d93f438781af1cb3b43101336d435afaef9a1"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.bits_shr by omega.",
                        "VernacExtend",
                        "3bea41576588a878332779b2b1bd034c6102f8dc"
                    ]
                },
                {
                    "command": [
                        "change (Int.unsigned (Int.sub Int.iwordsize Int.one)) with (Int.zwordsize - 1).",
                        "VernacExtend",
                        "ce0d23b73c2e0433f1856f911b655f784bf8ead8"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (i + Int.unsigned y) zwordsize); rewrite bits_ofwords by omega.",
                        "VernacExtend",
                        "e9dfea6954eca3175a3c4b4caa56eddb298d3b4a"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false by omega.",
                        "VernacExtend",
                        "1a3d93f438781af1cb3b43101336d435afaef9a1"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (i - Int.zwordsize + (Int.zwordsize - 1)) Int.zwordsize); omega.",
                        "VernacExtend",
                        "d10e2234e36b39e8fb0afb8770b9b4d19141c743"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false by omega.",
                        "VernacExtend",
                        "1a3d93f438781af1cb3b43101336d435afaef9a1"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (i - Int.zwordsize + (Int.zwordsize - 1)) Int.zwordsize); omega.",
                        "VernacExtend",
                        "d10e2234e36b39e8fb0afb8770b9b4d19141c743"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decompose_sub'",
            "line_nb": 5058,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite decompose_sub.",
                        "VernacExtend",
                        "658a1340cb66be32b3b7a6e023cd77c88badb55d"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.sub_borrow_add_carry by auto.",
                        "VernacExtend",
                        "9a7396a2b67a5f9e16d026ab288130115d1c8a6d"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.sub_add_not_3.",
                        "VernacExtend",
                        "13384b066d64ac273ac8d1c70e3350e2598ac2b6"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.xor_assoc.",
                        "VernacExtend",
                        "34085049fb7160eb8681396f0bb148c64c9961af"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.xor_idem.",
                        "VernacExtend",
                        "03548c80346d8b69d54c42106c324e09993b15bd"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.xor_zero.",
                        "VernacExtend",
                        "3b01c70d69e4e0c217c0085a53c3e7c693d46672"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.xor_zero_l.",
                        "VernacExtend",
                        "bd57ef3ef35d9b87328d75f63f0b48cb6a147575"
                    ]
                },
                {
                    "command": [
                        "unfold Int.add_carry.",
                        "VernacExtend",
                        "b4e297c287f00ae21fc762e24d725714d057c304"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (Int.unsigned xl + Int.unsigned (Int.not yl) + Int.unsigned Int.one) Int.modulus); compute; [right|left]; apply Int.mkint_eq; auto.",
                        "VernacExtend",
                        "640c0becb389f08cfe4c03d964f8fcd993155fa7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul'_mulhu",
            "line_nb": 5073,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite ofwords_add.",
                        "VernacExtend",
                        "5ceeb88b9f12c371f27ef33ad4fe9bb62883478c"
                    ]
                },
                {
                    "command": [
                        "unfold mul', Int.mulhu, Int.mul.",
                        "VernacExtend",
                        "79b924b9d8f28bad39287640a8176c8a8e2f2144"
                    ]
                },
                {
                    "command": [
                        "set (p := Int.unsigned x * Int.unsigned y).",
                        "VernacExtend",
                        "1d8b4a85313302239f1d09564884de5ade59eaa8"
                    ]
                },
                {
                    "command": [
                        "set (ph := p / Int.modulus).",
                        "VernacExtend",
                        "661184355dbd64c529041815d052150b82c3b069"
                    ]
                },
                {
                    "command": [
                        "set (pl := p mod Int.modulus).",
                        "VernacExtend",
                        "02c6cd6166b67ac8fb0f714b489f04583290150c"
                    ]
                },
                {
                    "command": [
                        "transitivity (repr (ph * Int.modulus + pl)).",
                        "VernacExtend",
                        "b593660fa26f38fdab2ff041c66b0198c20947ee"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.mul_comm.",
                        "VernacExtend",
                        "088699fe7f894ededd3c93ab3a27f9d105f1ab84"
                    ]
                },
                {
                    "command": [
                        "apply Z_div_mod_eq.",
                        "VernacExtend",
                        "c7c7b8c0b3f502009e6f882787bdcc803640e476"
                    ]
                },
                {
                    "command": [
                        "apply Int.modulus_pos.",
                        "VernacExtend",
                        "098e4b904cbde9eaae3ec6465871c8a33e13af4c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply eqm_samerepr.",
                        "VernacExtend",
                        "2226a5674ed5a7db984e878fdbb37775ca665295"
                    ]
                },
                {
                    "command": [
                        "apply eqm_add.",
                        "VernacExtend",
                        "6c81c3e6c0a0d0574105329a31bbe3cdf542f623"
                    ]
                },
                {
                    "command": [
                        "apply eqm_mul_2p32.",
                        "VernacExtend",
                        "ac416561659634c2f003eab7db7273d3c4f44d73"
                    ]
                },
                {
                    "command": [
                        "auto with ints.",
                        "VernacExtend",
                        "7b71ca27fc72ea0f05051d3762ed1b028596b39c"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.unsigned_repr_eq.",
                        "VernacExtend",
                        "bb8c6a81bff17ed516f26dbf13ee674c6334cec4"
                    ]
                },
                {
                    "command": [
                        "apply eqm_refl.",
                        "VernacExtend",
                        "cd38aceb6abd087396d34625c4f0ed69968a7526"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decompose_mul_2",
            "line_nb": 5150,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite decompose_mul.",
                        "VernacExtend",
                        "85ef03b4806ed51154b0d58da4b51b96e67d7acf"
                    ]
                },
                {
                    "command": [
                        "rewrite mul'_mulhu.",
                        "VernacExtend",
                        "239927cb8ff2f8684523a83f71537eeddf5fb3ea"
                    ]
                },
                {
                    "command": [
                        "rewrite hi_ofwords, lo_ofwords.",
                        "VernacExtend",
                        "6d61edac5aaf068a6f77cb7bd5f49ff14f7067d9"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decompose_ltu",
            "line_nb": 5157,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold ltu.",
                        "VernacExtend",
                        "e59e12052a96cc6c37e4e3abfd319dcb453c0f12"
                    ]
                },
                {
                    "command": [
                        "rewrite ! ofwords_add'.",
                        "VernacExtend",
                        "6059a4a6671c5fb1cab95ae1e11036e34d8f7554"
                    ]
                },
                {
                    "command": [
                        "unfold Int.ltu, Int.eq.",
                        "VernacExtend",
                        "562107b1ba3d964f53aeead0ff500870c623051c"
                    ]
                },
                {
                    "command": [
                        "destruct (zeq (Int.unsigned xh) (Int.unsigned yh)).",
                        "VernacExtend",
                        "baba3c4dc27adc3778518e9aa5e19e5e294fab8b"
                    ]
                },
                {
                    "command": [
                        "rewrite e.",
                        "VernacExtend",
                        "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (Int.unsigned xl) (Int.unsigned yl)).",
                        "VernacExtend",
                        "14ff3eb267f28cc1e61b9ba378dca1cf23971669"
                    ]
                },
                {
                    "command": [
                        "apply zlt_true; omega.",
                        "VernacExtend",
                        "11d5ba53e57a55cf6c538075fe9ff297a155a96d"
                    ]
                },
                {
                    "command": [
                        "apply zlt_false; omega.",
                        "VernacExtend",
                        "babc6119603ed1a7aaee8e778bd0de4a23c8ad56"
                    ]
                },
                {
                    "command": [
                        "change (two_p 32) with Int.modulus.",
                        "VernacExtend",
                        "49d3ad9d5dad69d20c51e894a4980581aea22b69"
                    ]
                },
                {
                    "command": [
                        "generalize (Int.unsigned_range xl) (Int.unsigned_range yl).",
                        "VernacExtend",
                        "4a76386b35dd9e50b4a1ced98bc02ff047eb7c1c"
                    ]
                },
                {
                    "command": [
                        "change Int.modulus with 4294967296.",
                        "VernacExtend",
                        "57185799b9e971ee5fcb305708fba40953052080"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (Int.unsigned xh) (Int.unsigned yh)).",
                        "VernacExtend",
                        "f636b60c3fd7f910121a78f20734d127684c3b73"
                    ]
                },
                {
                    "command": [
                        "apply zlt_true; omega.",
                        "VernacExtend",
                        "11d5ba53e57a55cf6c538075fe9ff297a155a96d"
                    ]
                },
                {
                    "command": [
                        "apply zlt_false; omega.",
                        "VernacExtend",
                        "babc6119603ed1a7aaee8e778bd0de4a23c8ad56"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decompose_leu",
            "line_nb": 5175,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite decompose_ltu.",
                        "VernacExtend",
                        "6df57c20dfe486d0d62b5d6af1751eaf921d3e48"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.eq_sym.",
                        "VernacExtend",
                        "364ab60eefd1c2da109e5402309eed1c95938ee9"
                    ]
                },
                {
                    "command": [
                        "unfold Int.eq.",
                        "VernacExtend",
                        "360a8d3fd462d4aaf79f93c9798afd1a24242ebe"
                    ]
                },
                {
                    "command": [
                        "destruct (zeq (Int.unsigned xh) (Int.unsigned yh)).",
                        "VernacExtend",
                        "baba3c4dc27adc3778518e9aa5e19e5e294fab8b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "unfold Int.ltu.",
                        "VernacExtend",
                        "af9bb555e7ff976047f5582fed58c62158c36a7f"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (Int.unsigned xh) (Int.unsigned yh)).",
                        "VernacExtend",
                        "f636b60c3fd7f910121a78f20734d127684c3b73"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false by omega; auto.",
                        "VernacExtend",
                        "6fd4daba0947d7ae6d7bbe5ab574702b76456198"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true by omega; auto.",
                        "VernacExtend",
                        "42bfbde4ec99fa739b6c889bd62d15938a265857"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decompose_lt",
            "line_nb": 5187,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold lt.",
                        "VernacExtend",
                        "2e821d407c03d5f5e572c51453fdc618d9dec364"
                    ]
                },
                {
                    "command": [
                        "rewrite ! ofwords_add''.",
                        "VernacExtend",
                        "b895d782407392c535c8d6ef5883587c16d6e5df"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.eq_signed.",
                        "VernacExtend",
                        "d9de7e737a9e727ecfd5586eca18b7ce326e1fac"
                    ]
                },
                {
                    "command": [
                        "destruct (zeq (Int.signed xh) (Int.signed yh)).",
                        "VernacExtend",
                        "d362aaeee9847bc80ec734bb1c37b8e020b6a6c0"
                    ]
                },
                {
                    "command": [
                        "rewrite e.",
                        "VernacExtend",
                        "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
                    ]
                },
                {
                    "command": [
                        "unfold Int.ltu.",
                        "VernacExtend",
                        "af9bb555e7ff976047f5582fed58c62158c36a7f"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (Int.unsigned xl) (Int.unsigned yl)).",
                        "VernacExtend",
                        "14ff3eb267f28cc1e61b9ba378dca1cf23971669"
                    ]
                },
                {
                    "command": [
                        "apply zlt_true; omega.",
                        "VernacExtend",
                        "11d5ba53e57a55cf6c538075fe9ff297a155a96d"
                    ]
                },
                {
                    "command": [
                        "apply zlt_false; omega.",
                        "VernacExtend",
                        "babc6119603ed1a7aaee8e778bd0de4a23c8ad56"
                    ]
                },
                {
                    "command": [
                        "change (two_p 32) with Int.modulus.",
                        "VernacExtend",
                        "49d3ad9d5dad69d20c51e894a4980581aea22b69"
                    ]
                },
                {
                    "command": [
                        "generalize (Int.unsigned_range xl) (Int.unsigned_range yl).",
                        "VernacExtend",
                        "4a76386b35dd9e50b4a1ced98bc02ff047eb7c1c"
                    ]
                },
                {
                    "command": [
                        "change Int.modulus with 4294967296.",
                        "VernacExtend",
                        "57185799b9e971ee5fcb305708fba40953052080"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Int.lt.",
                        "VernacExtend",
                        "40a5c473a3096ac390ed5c47b56989cf156c955a"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (Int.signed xh) (Int.signed yh)).",
                        "VernacExtend",
                        "8590e7609313a0eb814dd5394bf999fc6773055a"
                    ]
                },
                {
                    "command": [
                        "apply zlt_true; omega.",
                        "VernacExtend",
                        "11d5ba53e57a55cf6c538075fe9ff297a155a96d"
                    ]
                },
                {
                    "command": [
                        "apply zlt_false; omega.",
                        "VernacExtend",
                        "babc6119603ed1a7aaee8e778bd0de4a23c8ad56"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decompose_le",
            "line_nb": 5207,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite decompose_lt.",
                        "VernacExtend",
                        "8e3e293553e154fb94fb3caf4d86e823e068ec6a"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.eq_sym.",
                        "VernacExtend",
                        "364ab60eefd1c2da109e5402309eed1c95938ee9"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.eq_signed.",
                        "VernacExtend",
                        "d9de7e737a9e727ecfd5586eca18b7ce326e1fac"
                    ]
                },
                {
                    "command": [
                        "destruct (zeq (Int.signed xh) (Int.signed yh)).",
                        "VernacExtend",
                        "d362aaeee9847bc80ec734bb1c37b8e020b6a6c0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "unfold Int.lt.",
                        "VernacExtend",
                        "40a5c473a3096ac390ed5c47b56989cf156c955a"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (Int.signed xh) (Int.signed yh)).",
                        "VernacExtend",
                        "8590e7609313a0eb814dd5394bf999fc6773055a"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_false by omega; auto.",
                        "VernacExtend",
                        "6fd4daba0947d7ae6d7bbe5ab574702b76456198"
                    ]
                },
                {
                    "command": [
                        "rewrite zlt_true by omega; auto.",
                        "VernacExtend",
                        "42bfbde4ec99fa739b6c889bd62d15938a265857"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "int_unsigned_range",
            "line_nb": 5219,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold max_unsigned.",
                        "VernacExtend",
                        "36f5add4f60c9b122a3b68fcbd2bef84e6e0d135"
                    ]
                },
                {
                    "command": [
                        "unfold modulus.",
                        "VernacExtend",
                        "202f368b6f08b873343d2b49e63dddcb32f23f66"
                    ]
                },
                {
                    "command": [
                        "generalize (Int.unsigned_range x).",
                        "VernacExtend",
                        "a67cb5f6af47a78f4dbb03ddda2e54d04610fa71"
                    ]
                },
                {
                    "command": [
                        "unfold Int.modulus in *.",
                        "VernacExtend",
                        "aa83435dc35193c128728638893d92b05943bd37"
                    ]
                },
                {
                    "command": [
                        "change (wordsize) with 64%nat in *.",
                        "VernacExtend",
                        "297af2c4d3ef7d09cebef72975a6b7b0ff2e29c0"
                    ]
                },
                {
                    "command": [
                        "change (Int.wordsize) with 32%nat in *.",
                        "VernacExtend",
                        "4f6cd58f3077c9ce1a844602e3b3f495343b6555"
                    ]
                },
                {
                    "command": [
                        "unfold two_power_nat.",
                        "VernacExtend",
                        "320518eaf52b73801cbe7fcf8b98329a5e92c21a"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "int_unsigned_repr",
            "line_nb": 5231,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_repr.",
                        "VernacExtend",
                        "5134990e153a3f2ce893c9ea9837f183c322ceb2"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply int_unsigned_range.",
                        "VernacExtend",
                        "ab8e8f1c74109217557e39adf55af768888a1d95"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "int_sub_ltu",
            "line_nb": 5237,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (Int.sub_ltu x y H).",
                        "VernacExtend",
                        "c4e10f59d72450d2ce256d677230b464233217d6"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Int.sub.",
                        "VernacExtend",
                        "1170869a324af572e1e05cd70a3c8ddc34d9f678"
                    ]
                },
                {
                    "command": [
                        "unfold sub.",
                        "VernacExtend",
                        "09a336a2b822859bc335120602ae265ad23b7a0d"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.unsigned_repr.",
                        "VernacExtend",
                        "a8943e35722dfb96bf3f1ebc66d4a8cd6f05e78a"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_repr.",
                        "VernacExtend",
                        "5134990e153a3f2ce893c9ea9837f183c322ceb2"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_repr by apply int_unsigned_range.",
                        "VernacExtend",
                        "9e5235be7298684f7942eb1e43ac7ba87c853376"
                    ]
                },
                {
                    "command": [
                        "rewrite int_unsigned_repr.",
                        "VernacExtend",
                        "cc3299b9a558fa831185caa938931d3250430c34"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_repr by apply int_unsigned_range.",
                        "VernacExtend",
                        "9e5235be7298684f7942eb1e43ac7ba87c853376"
                    ]
                },
                {
                    "command": [
                        "rewrite int_unsigned_repr.",
                        "VernacExtend",
                        "cc3299b9a558fa831185caa938931d3250430c34"
                    ]
                },
                {
                    "command": [
                        "generalize (int_unsigned_range y).",
                        "VernacExtend",
                        "6decb50993bd985159a719b065f327c013d6c441"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "generalize (Int.sub_ltu x y H).",
                        "VernacExtend",
                        "c4e10f59d72450d2ce256d677230b464233217d6"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (Int.unsigned_range_2 y).",
                        "VernacExtend",
                        "6b5905db15033139d01d5aedb977e23c5dd9e844"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modulus_eq32",
            "line_nb": 5281,
            "steps": [
                {
                    "command": [
                        "unfold modulus, wordsize.",
                        "VernacExtend",
                        "ac5e411da23fcb2942c80fd16a008612acbdede0"
                    ]
                },
                {
                    "command": [
                        "change Wordsize_Ptrofs.wordsize with (if Archi.ptr64 then 64%nat else 32%nat).",
                        "VernacExtend",
                        "1d207ed1cbc6bc0568f9525179c9f71f03f2b811"
                    ]
                },
                {
                    "command": [
                        "rewrite _32.",
                        "VernacExtend",
                        "c69ec9d57790fb19a5780b1e817daa070b65acfd"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqm32",
            "line_nb": 5287,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Int.eqm, eqm.",
                        "VernacExtend",
                        "11793d20fcdacaf6c3c0ced5b9375be43a509f59"
                    ]
                },
                {
                    "command": [
                        "rewrite modulus_eq32; tauto.",
                        "VernacExtend",
                        "d9ea8b4c3ca4c08ea6ceb52bb985c9676de68831"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agree32_repr",
            "line_nb": 5293,
            "steps": [
                {
                    "command": [
                        "intros; red.",
                        "VernacExtend",
                        "3393be941ed81b8e4a79e80db41d01425f14b126"
                    ]
                },
                {
                    "command": [
                        "rewrite Ptrofs.unsigned_repr_eq, Int.unsigned_repr_eq.",
                        "VernacExtend",
                        "bb42826753adb1994e5a88e402fe48db71406372"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2.",
                        "VernacExtend",
                        "be46a64a7879d7dc9b1dce72ceb4b39ac590e100"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply modulus_eq32.",
                        "VernacExtend",
                        "b6e9cbcec4f02dc54b2c030789b582cd57fdef72"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agree32_signed",
            "line_nb": 5300,
            "steps": [
                {
                    "command": [
                        "unfold agree32; intros.",
                        "VernacExtend",
                        "fc98ac661fdae9456ccfdacee267162ba1cd8941"
                    ]
                },
                {
                    "command": [
                        "unfold signed, Int.signed, half_modulus, Int.half_modulus.",
                        "VernacExtend",
                        "dab1076b43d345d8165a261202889e60fcedd720"
                    ]
                },
                {
                    "command": [
                        "rewrite modulus_eq32.",
                        "VernacExtend",
                        "bb56aed543e9f08a1fa7db14a038351a863d077b"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agree32_of_int",
            "line_nb": 5307,
            "steps": [
                {
                    "command": [
                        "unfold of_int; intros.",
                        "VernacExtend",
                        "763ab4998b7b22bdfb39210c639fdf0ce12ef49e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Int.repr_unsigned b) at 2.",
                        "VernacExtend",
                        "b02695cbd1ec00aa59326a884c19560888206abb"
                    ]
                },
                {
                    "command": [
                        "apply agree32_repr.",
                        "VernacExtend",
                        "9636afd95504e750c3ee47ed25a88298f690047a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agree32_of_ints",
            "line_nb": 5312,
            "steps": [
                {
                    "command": [
                        "unfold of_int; intros.",
                        "VernacExtend",
                        "763ab4998b7b22bdfb39210c639fdf0ce12ef49e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Int.repr_signed b) at 2.",
                        "VernacExtend",
                        "f3612b82cfa4cb6776086f94aa445d72843cd772"
                    ]
                },
                {
                    "command": [
                        "apply agree32_repr.",
                        "VernacExtend",
                        "9636afd95504e750c3ee47ed25a88298f690047a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agree32_of_int_eq",
            "line_nb": 5317,
            "steps": [
                {
                    "command": [
                        "unfold agree32, of_int; intros.",
                        "VernacExtend",
                        "4ea4f23b05fdd4cd63e97655b9e7251c23ef8e33"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "apply repr_unsigned.",
                        "VernacExtend",
                        "7033f895e7c0a699adb114621e89aafefb338576"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agree32_of_ints_eq",
            "line_nb": 5322,
            "steps": [
                {
                    "command": [
                        "unfold of_ints; intros.",
                        "VernacExtend",
                        "e3fcbfff0e5ad860d285684010ef2a8974d3d97c"
                    ]
                },
                {
                    "command": [
                        "erewrite <- agree32_signed by eauto.",
                        "VernacExtend",
                        "54ad6770f253ed35aa03a21cc277ba8962e1d910"
                    ]
                },
                {
                    "command": [
                        "apply repr_signed.",
                        "VernacExtend",
                        "6ac037f1d42a8ffc7ffc97da2226a128bb137982"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agree32_to_int",
            "line_nb": 5327,
            "steps": [
                {
                    "command": [
                        "unfold agree32, to_int; intros.",
                        "VernacExtend",
                        "55d98f632087f9eaa86d84a922995c7014bd423e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (agree32_repr (unsigned a)).",
                        "VernacExtend",
                        "97615cae7c9981435a4c558e3bd81370016cef3b"
                    ]
                },
                {
                    "command": [
                        "rewrite repr_unsigned; auto.",
                        "VernacExtend",
                        "c8015c2205e97eee788ab7e4332de1387c44fc52"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agree32_to_int_eq",
            "line_nb": 5332,
            "steps": [
                {
                    "command": [
                        "unfold agree32, to_int; intros.",
                        "VernacExtend",
                        "55d98f632087f9eaa86d84a922995c7014bd423e"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "apply Int.repr_unsigned.",
                        "VernacExtend",
                        "b3d43aae5f6f402bb1c3d022281cbe34cf2ae2f9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agree32_neg",
            "line_nb": 5337,
            "steps": [
                {
                    "command": [
                        "unfold agree32, Ptrofs.neg, Int.neg; intros.",
                        "VernacExtend",
                        "9b1bef77f76d3550b27838772bccc697bc2d4fc3"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "apply agree32_repr.",
                        "VernacExtend",
                        "9636afd95504e750c3ee47ed25a88298f690047a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agree32_add",
            "line_nb": 5342,
            "steps": [
                {
                    "command": [
                        "unfold agree32, Ptrofs.add, Int.add; intros.",
                        "VernacExtend",
                        "6f9deb4755c61f766762f713dbe47e5f8c45a6c7"
                    ]
                },
                {
                    "command": [
                        "rewrite H, H0.",
                        "VernacExtend",
                        "6a2c6e8b471f6fb686cf1a7e2e3992d01a326476"
                    ]
                },
                {
                    "command": [
                        "apply agree32_repr.",
                        "VernacExtend",
                        "9636afd95504e750c3ee47ed25a88298f690047a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agree32_sub",
            "line_nb": 5347,
            "steps": [
                {
                    "command": [
                        "unfold agree32, Ptrofs.sub, Int.sub; intros.",
                        "VernacExtend",
                        "8c63b0c6ac2b68c66ee907f404798b6cc85689de"
                    ]
                },
                {
                    "command": [
                        "rewrite H, H0.",
                        "VernacExtend",
                        "6a2c6e8b471f6fb686cf1a7e2e3992d01a326476"
                    ]
                },
                {
                    "command": [
                        "apply agree32_repr.",
                        "VernacExtend",
                        "9636afd95504e750c3ee47ed25a88298f690047a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agree32_mul",
            "line_nb": 5352,
            "steps": [
                {
                    "command": [
                        "unfold agree32, Ptrofs.mul, Int.mul; intros.",
                        "VernacExtend",
                        "273ffba4ea1ce9ba301c5ac552cc9dd529c4acec"
                    ]
                },
                {
                    "command": [
                        "rewrite H, H0.",
                        "VernacExtend",
                        "6a2c6e8b471f6fb686cf1a7e2e3992d01a326476"
                    ]
                },
                {
                    "command": [
                        "apply agree32_repr.",
                        "VernacExtend",
                        "9636afd95504e750c3ee47ed25a88298f690047a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agree32_divs",
            "line_nb": 5357,
            "steps": [
                {
                    "command": [
                        "intros; unfold agree32, Ptrofs.divs, Int.divs.",
                        "VernacExtend",
                        "925332d03458edc09cea5cdaf3b796d2267eecfa"
                    ]
                },
                {
                    "command": [
                        "erewrite ! agree32_signed by eauto.",
                        "VernacExtend",
                        "30e76d34a5cf1ce2c2bacd3d599a6e2e588dedc0"
                    ]
                },
                {
                    "command": [
                        "apply agree32_repr.",
                        "VernacExtend",
                        "9636afd95504e750c3ee47ed25a88298f690047a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "of_int_to_int",
            "line_nb": 5362,
            "steps": [
                {
                    "command": [
                        "intros; unfold of_int, to_int.",
                        "VernacExtend",
                        "455938ff7996ef542e96b9228c6e1d27edbe8b2e"
                    ]
                },
                {
                    "command": [
                        "apply eqm_repr_eq.",
                        "VernacExtend",
                        "71d36ee28e6bf68bd7ad2ef64bd4df53ff925122"
                    ]
                },
                {
                    "command": [
                        "rewrite <- eqm32.",
                        "VernacExtend",
                        "519edf0fa0f2980c7d58347578284a704e546981"
                    ]
                },
                {
                    "command": [
                        "apply Int.eqm_sym; apply Int.eqm_unsigned_repr.",
                        "VernacExtend",
                        "f29e4ab6ec51ec92f780d6cb2ddc8fcc009dfd04"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "to_int_of_int",
            "line_nb": 5368,
            "steps": [
                {
                    "command": [
                        "intros; unfold of_int, to_int.",
                        "VernacExtend",
                        "455938ff7996ef542e96b9228c6e1d27edbe8b2e"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_repr.",
                        "VernacExtend",
                        "5134990e153a3f2ce893c9ea9837f183c322ceb2"
                    ]
                },
                {
                    "command": [
                        "apply Int.repr_unsigned.",
                        "VernacExtend",
                        "b3d43aae5f6f402bb1c3d022281cbe34cf2ae2f9"
                    ]
                },
                {
                    "command": [
                        "unfold max_unsigned.",
                        "VernacExtend",
                        "36f5add4f60c9b122a3b68fcbd2bef84e6e0d135"
                    ]
                },
                {
                    "command": [
                        "rewrite modulus_eq32.",
                        "VernacExtend",
                        "bb56aed543e9f08a1fa7db14a038351a863d077b"
                    ]
                },
                {
                    "command": [
                        "destruct (Int.unsigned_range n); omega.",
                        "VernacExtend",
                        "51e23294cf98d6e0518682043f99b193d2ca77f5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modulus_eq64",
            "line_nb": 5379,
            "steps": [
                {
                    "command": [
                        "unfold modulus, wordsize.",
                        "VernacExtend",
                        "ac5e411da23fcb2942c80fd16a008612acbdede0"
                    ]
                },
                {
                    "command": [
                        "change Wordsize_Ptrofs.wordsize with (if Archi.ptr64 then 64%nat else 32%nat).",
                        "VernacExtend",
                        "1d207ed1cbc6bc0568f9525179c9f71f03f2b811"
                    ]
                },
                {
                    "command": [
                        "rewrite _64.",
                        "VernacExtend",
                        "4d99ee988695bb782236e9fa5f9cf9d23575ab4d"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqm64",
            "line_nb": 5385,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Int64.eqm, eqm.",
                        "VernacExtend",
                        "3ac8a6ac33545b4065b79d79870e8440bea3eec7"
                    ]
                },
                {
                    "command": [
                        "rewrite modulus_eq64; tauto.",
                        "VernacExtend",
                        "154482dc942fc6335e64fc4f6fd733a031367ad2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agree64_repr",
            "line_nb": 5391,
            "steps": [
                {
                    "command": [
                        "intros; red.",
                        "VernacExtend",
                        "3393be941ed81b8e4a79e80db41d01425f14b126"
                    ]
                },
                {
                    "command": [
                        "rewrite Ptrofs.unsigned_repr_eq, Int64.unsigned_repr_eq.",
                        "VernacExtend",
                        "48164a0d1ec64fbba5594c144d0a80e3276e15fa"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2.",
                        "VernacExtend",
                        "be46a64a7879d7dc9b1dce72ceb4b39ac590e100"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply modulus_eq64.",
                        "VernacExtend",
                        "4c31ec218faa997ca37b817ed70946a1d6c12372"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agree64_signed",
            "line_nb": 5398,
            "steps": [
                {
                    "command": [
                        "unfold agree64; intros.",
                        "VernacExtend",
                        "d87efba14abaa59bcbff1d8014b138accbd97a2f"
                    ]
                },
                {
                    "command": [
                        "unfold signed, Int64.signed, half_modulus, Int64.half_modulus.",
                        "VernacExtend",
                        "c808604ddaf9a02bb0987c51f106d10e22429f52"
                    ]
                },
                {
                    "command": [
                        "rewrite modulus_eq64.",
                        "VernacExtend",
                        "0149fcb88450d6f5db8dea97293f7670b019bc1f"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agree64_of_int",
            "line_nb": 5405,
            "steps": [
                {
                    "command": [
                        "unfold of_int64; intros.",
                        "VernacExtend",
                        "cd2d0226375bbc2e5cafc5d31c2f1eb527a59b08"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Int64.repr_unsigned b) at 2.",
                        "VernacExtend",
                        "b6c80d02ba958e87c6f13a0d49d36cfa2d2476bb"
                    ]
                },
                {
                    "command": [
                        "apply agree64_repr.",
                        "VernacExtend",
                        "c276bdeab6eae76ce00fb32331076520877ffef9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agree64_of_int_eq",
            "line_nb": 5410,
            "steps": [
                {
                    "command": [
                        "unfold agree64, of_int64; intros.",
                        "VernacExtend",
                        "8c6f62c5daf386e8170b4876235c86fd57ee5675"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "apply repr_unsigned.",
                        "VernacExtend",
                        "7033f895e7c0a699adb114621e89aafefb338576"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agree64_to_int",
            "line_nb": 5415,
            "steps": [
                {
                    "command": [
                        "unfold agree64, to_int64; intros.",
                        "VernacExtend",
                        "e9d3d5fb66ad8b29655fdc4185b98dbf9368ccfb"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (agree64_repr (unsigned a)).",
                        "VernacExtend",
                        "7c61b091525957c3ca0a7c2c4cc4ab3f0df4d333"
                    ]
                },
                {
                    "command": [
                        "rewrite repr_unsigned; auto.",
                        "VernacExtend",
                        "c8015c2205e97eee788ab7e4332de1387c44fc52"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agree64_to_int_eq",
            "line_nb": 5420,
            "steps": [
                {
                    "command": [
                        "unfold agree64, to_int64; intros.",
                        "VernacExtend",
                        "e9d3d5fb66ad8b29655fdc4185b98dbf9368ccfb"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "apply Int64.repr_unsigned.",
                        "VernacExtend",
                        "155848270129eed13138aa7b4b60ec49b2ae866f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agree64_neg",
            "line_nb": 5425,
            "steps": [
                {
                    "command": [
                        "unfold agree64, Ptrofs.neg, Int64.neg; intros.",
                        "VernacExtend",
                        "81ae85797db6721ece0a2e6c996f0ccb9c64b14c"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "apply agree64_repr.",
                        "VernacExtend",
                        "c276bdeab6eae76ce00fb32331076520877ffef9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agree64_add",
            "line_nb": 5430,
            "steps": [
                {
                    "command": [
                        "unfold agree64, Ptrofs.add, Int.add; intros.",
                        "VernacExtend",
                        "f095018ac447349f47e86d6cfde9f351121d07fb"
                    ]
                },
                {
                    "command": [
                        "rewrite H, H0.",
                        "VernacExtend",
                        "6a2c6e8b471f6fb686cf1a7e2e3992d01a326476"
                    ]
                },
                {
                    "command": [
                        "apply agree64_repr.",
                        "VernacExtend",
                        "c276bdeab6eae76ce00fb32331076520877ffef9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agree64_sub",
            "line_nb": 5435,
            "steps": [
                {
                    "command": [
                        "unfold agree64, Ptrofs.sub, Int.sub; intros.",
                        "VernacExtend",
                        "77f1c65548616ede162b5268acd7070caebcbeef"
                    ]
                },
                {
                    "command": [
                        "rewrite H, H0.",
                        "VernacExtend",
                        "6a2c6e8b471f6fb686cf1a7e2e3992d01a326476"
                    ]
                },
                {
                    "command": [
                        "apply agree64_repr.",
                        "VernacExtend",
                        "c276bdeab6eae76ce00fb32331076520877ffef9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agree64_mul",
            "line_nb": 5440,
            "steps": [
                {
                    "command": [
                        "unfold agree64, Ptrofs.mul, Int.mul; intros.",
                        "VernacExtend",
                        "f7a70edd7a1268d10d4d394119774ec7565e796b"
                    ]
                },
                {
                    "command": [
                        "rewrite H, H0.",
                        "VernacExtend",
                        "6a2c6e8b471f6fb686cf1a7e2e3992d01a326476"
                    ]
                },
                {
                    "command": [
                        "apply agree64_repr.",
                        "VernacExtend",
                        "c276bdeab6eae76ce00fb32331076520877ffef9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agree64_divs",
            "line_nb": 5445,
            "steps": [
                {
                    "command": [
                        "intros; unfold agree64, Ptrofs.divs, Int64.divs.",
                        "VernacExtend",
                        "35aeb07f5bdc7c6667233d297bb8fc625ba0edc2"
                    ]
                },
                {
                    "command": [
                        "erewrite ! agree64_signed by eauto.",
                        "VernacExtend",
                        "09fdb67e1c39c757f0f1210539b00ddf48821746"
                    ]
                },
                {
                    "command": [
                        "apply agree64_repr.",
                        "VernacExtend",
                        "c276bdeab6eae76ce00fb32331076520877ffef9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "of_int64_to_int64",
            "line_nb": 5450,
            "steps": [
                {
                    "command": [
                        "intros; unfold of_int64, to_int64.",
                        "VernacExtend",
                        "26e47100e15ca6219bc600e7798786b9f4012986"
                    ]
                },
                {
                    "command": [
                        "apply eqm_repr_eq.",
                        "VernacExtend",
                        "71d36ee28e6bf68bd7ad2ef64bd4df53ff925122"
                    ]
                },
                {
                    "command": [
                        "rewrite <- eqm64.",
                        "VernacExtend",
                        "ad642051a3584ffdc377d910a1067e6014383287"
                    ]
                },
                {
                    "command": [
                        "apply Int64.eqm_sym; apply Int64.eqm_unsigned_repr.",
                        "VernacExtend",
                        "8bf1a39fe4e3bba9b5486255d37a623f5e68877a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "to_int64_of_int64",
            "line_nb": 5456,
            "steps": [
                {
                    "command": [
                        "intros; unfold of_int64, to_int64.",
                        "VernacExtend",
                        "26e47100e15ca6219bc600e7798786b9f4012986"
                    ]
                },
                {
                    "command": [
                        "rewrite unsigned_repr.",
                        "VernacExtend",
                        "5134990e153a3f2ce893c9ea9837f183c322ceb2"
                    ]
                },
                {
                    "command": [
                        "apply Int64.repr_unsigned.",
                        "VernacExtend",
                        "155848270129eed13138aa7b4b60ec49b2ae866f"
                    ]
                },
                {
                    "command": [
                        "unfold max_unsigned.",
                        "VernacExtend",
                        "36f5add4f60c9b122a3b68fcbd2bef84e6e0d135"
                    ]
                },
                {
                    "command": [
                        "rewrite modulus_eq64.",
                        "VernacExtend",
                        "0149fcb88450d6f5db8dea97293f7670b019bc1f"
                    ]
                },
                {
                    "command": [
                        "destruct (Int64.unsigned_range n); omega.",
                        "VernacExtend",
                        "999068d356d40e67918a7b88e3e8fb6c6d1454be"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}