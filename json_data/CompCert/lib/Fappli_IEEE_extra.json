{
    "filename": "lib/Fappli_IEEE_extra.v",
    "coq_project": "CompCert",
    "vernac_cmds": [
        [
            "Require Import Psatz.",
            "VernacRequire",
            "6b2d2dcf6e1d84305ecd8f6076dd02d8aab13eff"
        ],
        [
            "Require Import Bool.",
            "VernacRequire",
            "a27d9a6c92262b970381301472e9a1100c206680"
        ],
        [
            "Require Import Eqdep_dec.",
            "VernacRequire",
            "3df4d5c5706856734a53d6d3e96f8d8cd6d87f23"
        ],
        [
            "Require Import Fcore.",
            "VernacRequire",
            "0726413a0cd1e00c4c23af78515a8bb580c73ed5"
        ],
        [
            "Require Import Fcore_digits.",
            "VernacRequire",
            "88b786a7297c6d41db609842668795560290d722"
        ],
        [
            "Require Import Fcalc_digits.",
            "VernacRequire",
            "a66e84f2c3d2b977b9a7db893ee83741416125a1"
        ],
        [
            "Require Import Fcalc_ops.",
            "VernacRequire",
            "3d12d40a8c239f3c3d26da4f928dea2f7d34d6d3"
        ],
        [
            "Require Import Fcalc_round.",
            "VernacRequire",
            "04b9bf46f2d67c43cc7ec0ae5baa890b2a88a7a5"
        ],
        [
            "Require Import Fcalc_bracket.",
            "VernacRequire",
            "f52ed1ddf769329f4ac4906755d738d2cc697d47"
        ],
        [
            "Require Import Fprop_Sterbenz.",
            "VernacRequire",
            "3ee61cf819e8b461e6a917399ec5202e6340583a"
        ],
        [
            "Require Import Fappli_IEEE.",
            "VernacRequire",
            "db3cd5e35ae51a45763c77e32e40a30be044b79b"
        ],
        [
            "Require Import Fappli_rnd_odd.",
            "VernacRequire",
            "a7c73f4f7e6f7dfaacabf4300607ee759ba7e2c5"
        ],
        [
            "Local Open Scope Z_scope.",
            "VernacOpenCloseScope",
            "5313930c0cd5fa63810c1c79463485ebf0638bad"
        ],
        [
            "Section Extra_ops.",
            "VernacBeginSection",
            "09fd4d865096083cd8ca95c1c78a0374c874b1d1"
        ],
        [
            "Variable prec emax : Z.",
            "VernacAssumption",
            "d7cd1fd12e167712951485f6fab2f6df859c3ad1"
        ],
        [
            "Context (prec_gt_0_ : Prec_gt_0 prec).",
            "VernacContext",
            "18e2535874c8b91e287902e8960573741b05597c"
        ],
        [
            "Let emin := (3 - emax - prec)%Z.",
            "VernacDefinition",
            "059e2b6736b3e50cba1129030be68500b64207b3"
        ],
        [
            "Let fexp := FLT_exp emin prec.",
            "VernacDefinition",
            "09433ab9ed269cd09ea2fa3b4526981330fae611"
        ],
        [
            "Hypothesis Hmax : (prec < emax)%Z.",
            "VernacAssumption",
            "6ba8210eb31875ff90983c94eb9ba0d11392732a"
        ],
        [
            "Let binary_float := binary_float prec emax.",
            "VernacDefinition",
            "7decce496eac7eb3b0b9be5ea854b408f0234bb2"
        ],
        [
            "Remark is_finite_not_is_nan: forall (f: binary_float), is_finite _ _ f = true -> is_nan _ _ f = false.",
            "VernacStartTheoremProof",
            "f150efbd3dc249cbbe9f2e1b60a146987658700a"
        ],
        [
            "destruct f; reflexivity || discriminate.",
            "VernacExtend",
            "d57f55e679677d71edc2452439c1f574f515b6b9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark is_finite_strict_finite: forall (f: binary_float), is_finite_strict _ _ f = true -> is_finite _ _ f = true.",
            "VernacStartTheoremProof",
            "889cdbb16a4202f16f04a866343eaa935343b669"
        ],
        [
            "destruct f; reflexivity || discriminate.",
            "VernacExtend",
            "d57f55e679677d71edc2452439c1f574f515b6b9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition is_finite_pos0 (f: binary_float) : bool := match f with | B754_zero _ _ s => negb s | B754_infinity _ _ _ => false | B754_nan _ _ _ _ => false | B754_finite _ _ _ _ _ _ => true end.",
            "VernacDefinition",
            "6affb16d181aff25418a3e017dffcc163bf4b238"
        ],
        [
            "Lemma Bsign_pos0: forall x, is_finite_pos0 x = true -> Bsign _ _ x = Rlt_bool (B2R _ _ x) 0%R.",
            "VernacStartTheoremProof",
            "b088432e3188a3d2da20bb1df2c0e4f51ec2e840"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct x as [ [] | | | [] ex mx Bx ]; try discriminate; simpl.",
            "VernacExtend",
            "646b9b00c16e8762ce955e7629476c4632d35a8d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Rlt_bool_false; auto.",
            "VernacExtend",
            "4671d90f31432cb0b1450065eae26ac9452df6ab"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Rlt_bool_true; auto.",
            "VernacExtend",
            "fe04b463b609fa38fc3470be5bb720d87b124c14"
        ],
        [
            "apply F2R_lt_0_compat.",
            "VernacExtend",
            "02c29d2c58d3045145b3025cc8495a632d8bc4b0"
        ],
        [
            "compute; auto.",
            "VernacExtend",
            "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Rlt_bool_false; auto.",
            "VernacExtend",
            "4671d90f31432cb0b1450065eae26ac9452df6ab"
        ],
        [
            "assert ((F2R (Float radix2 (Z.pos ex) mx) > 0)%R) by ( apply F2R_gt_0_compat; compute; auto ).",
            "VernacExtend",
            "a96ec5a6b74e14ee24e07ec9d9484dd306cb7847"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem B2R_inj_pos0: forall x y, is_finite_pos0 x = true -> is_finite_pos0 y = true -> B2R _ _ x = B2R _ _ y -> x = y.",
            "VernacStartTheoremProof",
            "b025ce28455d987052ecabdaa52b873dc07b1150"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply B2R_Bsign_inj.",
            "VernacExtend",
            "a09b0f96f6caf1961d0b32c66eb42a20ba11b5e5"
        ],
        [
            "destruct x; reflexivity||discriminate.",
            "VernacExtend",
            "b003f37149feb5784fb53b00b404b4299163f04e"
        ],
        [
            "destruct y; reflexivity||discriminate.",
            "VernacExtend",
            "d46066a6acf6223ca66ba3a7de8f5f8111c1d079"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite ! Bsign_pos0 by auto.",
            "VernacExtend",
            "bd3d9c02c4d8795f2984cc9c768cf7db75730ca5"
        ],
        [
            "rewrite H1; auto.",
            "VernacExtend",
            "1413124b63144a92c2b8c7e916995d6cd3746a77"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Beq_dec: forall (f1 f2: binary_float), {f1 = f2} + {f1 <> f2}.",
            "VernacDefinition",
            "fd900df1b1538758f2f0094680f984e8957acf8b"
        ],
        [
            "assert (UIP_bool: forall (b1 b2: bool) (e e': b1 = b2), e = e').",
            "VernacExtend",
            "3a4098ad9b150b6e26ea8171db41317eeacf9d59"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply UIP_dec.",
            "VernacExtend",
            "5360b093d60d28a440197464b45f370aca4a3133"
        ],
        [
            "decide equality.",
            "VernacExtend",
            "10aba07d521545accbb51a4c2e0695a9ddce3199"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Ltac try_not_eq := try solve [right; congruence].",
            "VernacExtend",
            "3cc3e3ed80de98ff5d1e132f99a4c60690838675"
        ],
        [
            "destruct f1 as [| |? []|], f2 as [| |? []|]; try destruct b; try destruct b0; try solve [left; auto]; try_not_eq.",
            "VernacExtend",
            "00cd168ee6fa10f996fcf0df9453ab5bb2b7168b"
        ],
        [
            "destruct (Pos.eq_dec x x0); try_not_eq; subst; left; f_equal; f_equal; apply UIP_bool.",
            "VernacExtend",
            "baf19db8bb4e3547d1d03b9145a8ca4a034ba325"
        ],
        [
            "destruct (Pos.eq_dec x x0); try_not_eq; subst; left; f_equal; f_equal; apply UIP_bool.",
            "VernacExtend",
            "baf19db8bb4e3547d1d03b9145a8ca4a034ba325"
        ],
        [
            "destruct (Pos.eq_dec m m0); try_not_eq; destruct (Z.eq_dec e e1); try solve [right; intro H; inversion H; congruence]; subst; left; f_equal; apply UIP_bool.",
            "VernacExtend",
            "003039c51d954722a9f0e7e187e3a2935a26f6c2"
        ],
        [
            "destruct (Pos.eq_dec m m0); try_not_eq; destruct (Z.eq_dec e e1); try solve [right; intro H; inversion H; congruence]; subst; left; f_equal; apply UIP_bool.",
            "VernacExtend",
            "003039c51d954722a9f0e7e187e3a2935a26f6c2"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition integer_representable (n: Z): Prop := Z.abs n <= 2^emax - 2^(emax - prec) /\\ generic_format radix2 fexp (Z2R n).",
            "VernacDefinition",
            "5fba508725bcdd53e7dbffec1d790b600fa0beb5"
        ],
        [
            "Let int_upper_bound_eq: 2^emax - 2^(emax - prec) = (2^prec - 1) * 2^(emax - prec).",
            "VernacDefinition",
            "435bb5f23267bcc5fcf0db3a01184d21da6cf7d8"
        ],
        [
            "red in prec_gt_0_.",
            "VernacExtend",
            "4b29078a2865ccd92928eaceffc91659787acb4b"
        ],
        [
            "ring_simplify.",
            "VernacExtend",
            "31578f61427562191ce5389abf97dbf9985ea04c"
        ],
        [
            "rewrite <- (Zpower_plus radix2) by omega.",
            "VernacExtend",
            "05151a82acdcd0296850844d2ad40b2e48f1c68d"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma integer_representable_n2p: forall n p, -2^prec < n < 2^prec -> 0 <= p -> p <= emax - prec -> integer_representable (n * 2^p).",
            "VernacStartTheoremProof",
            "a23b84d54cf9909537452ff82fc6c4df93048ebc"
        ],
        [
            "intros; split.",
            "VernacExtend",
            "786909835bea92a2bb1ac0d0634a6eb379d5f275"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "red in prec_gt_0_.",
            "VernacExtend",
            "4b29078a2865ccd92928eaceffc91659787acb4b"
        ],
        [
            "replace (Z.abs (n * 2^p)) with (Z.abs n * 2^p).",
            "VernacExtend",
            "40be955dd27df2ddce9e2adaadbfed3c99987dbc"
        ],
        [
            "rewrite int_upper_bound_eq.",
            "VernacExtend",
            "fc2b91ec9bf534b31e54e931ec9b08e741ae176d"
        ],
        [
            "apply Zmult_le_compat.",
            "VernacExtend",
            "b33eefd4019e95e2e889681f6e56c30da0c59a1c"
        ],
        [
            "zify; omega.",
            "VernacExtend",
            "5fb0df05710c307ca01829a575fcf81498a16c8a"
        ],
        [
            "apply (Zpower_le radix2); omega.",
            "VernacExtend",
            "f523d69e53f1c84a2277fc55a5cc33cffb17932b"
        ],
        [
            "zify; omega.",
            "VernacExtend",
            "5fb0df05710c307ca01829a575fcf81498a16c8a"
        ],
        [
            "apply (Zpower_ge_0 radix2).",
            "VernacExtend",
            "b534f4756c8a1ce37579c7b345b6d68fbc8eb757"
        ],
        [
            "rewrite Z.abs_mul.",
            "VernacExtend",
            "dfb9f0d76126b7e944ccf206eb99068d32732573"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite Z.abs_eq.",
            "VernacExtend",
            "4d74d669a671e59eb9a86ae3d0d908e33e8120a7"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply (Zpower_ge_0 radix2).",
            "VernacExtend",
            "b534f4756c8a1ce37579c7b345b6d68fbc8eb757"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply generic_format_FLT.",
            "VernacExtend",
            "555f10b505d8f1b986407a7320ce6fa79605c566"
        ],
        [
            "exists (Float radix2 n p).",
            "VernacExtend",
            "386f2fa785ef160d4ddd5e59f16018b98f926855"
        ],
        [
            "unfold F2R; simpl.",
            "VernacExtend",
            "a8b73d273d1c692e5deb932d4bd557029927ed13"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "rewrite <- Z2R_Zpower by auto.",
            "VernacExtend",
            "d4e249139aa26c4ea44e3fa178e0d75fc43f429d"
        ],
        [
            "apply Z2R_mult.",
            "VernacExtend",
            "d48fa9ef79dedde1f7a047d74613b32be9dd85dd"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "zify; omega.",
            "VernacExtend",
            "5fb0df05710c307ca01829a575fcf81498a16c8a"
        ],
        [
            "unfold emin; red in prec_gt_0_; omega.",
            "VernacExtend",
            "3847582fdeb81ed3e60d00df49bf24629555a475"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma integer_representable_2p: forall p, 0 <= p <= emax - 1 -> integer_representable (2^p).",
            "VernacStartTheoremProof",
            "8c3f73f9f2b6f7f9bb9c21f91144141648253256"
        ],
        [
            "intros; split.",
            "VernacExtend",
            "786909835bea92a2bb1ac0d0634a6eb379d5f275"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "red in prec_gt_0_.",
            "VernacExtend",
            "4b29078a2865ccd92928eaceffc91659787acb4b"
        ],
        [
            "rewrite Z.abs_eq by (apply (Zpower_ge_0 radix2)).",
            "VernacExtend",
            "234de1bff11d56f17346a668ec2d91b7512a74e8"
        ],
        [
            "apply Z.le_trans with (2^(emax-1)).",
            "VernacExtend",
            "340a3065fcb8b1edccf904e6d17d75906b35b29e"
        ],
        [
            "apply (Zpower_le radix2); omega.",
            "VernacExtend",
            "f523d69e53f1c84a2277fc55a5cc33cffb17932b"
        ],
        [
            "assert (2^emax = 2^(emax-1)*2).",
            "VernacExtend",
            "9837178668726a0f526405d367da14b4bd8ccdd9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "change 2 with (2^1) at 3.",
            "VernacExtend",
            "79cc17ad75b19c834926763b1dfc3c9c896cf346"
        ],
        [
            "rewrite <- (Zpower_plus radix2) by omega.",
            "VernacExtend",
            "05151a82acdcd0296850844d2ad40b2e48f1c68d"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (2^(emax - prec) <= 2^(emax - 1)).",
            "VernacExtend",
            "3ab603a07b0aebcad5af416bc41fe2d2cd469bfe"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply (Zpower_le radix2).",
            "VernacExtend",
            "e887cb624ab91c9d6bbeedf2995671499458cafe"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "red in prec_gt_0_.",
            "VernacExtend",
            "4b29078a2865ccd92928eaceffc91659787acb4b"
        ],
        [
            "apply generic_format_FLT.",
            "VernacExtend",
            "555f10b505d8f1b986407a7320ce6fa79605c566"
        ],
        [
            "exists (Float radix2 1 p).",
            "VernacExtend",
            "ffce3908140b32d5cd8bdcad2210724a8945339e"
        ],
        [
            "unfold F2R; simpl.",
            "VernacExtend",
            "a8b73d273d1c692e5deb932d4bd557029927ed13"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "rewrite Rmult_1_l.",
            "VernacExtend",
            "1ba58092cf1ca2fa8155dfa9c64894290b0f39df"
        ],
        [
            "rewrite <- Z2R_Zpower.",
            "VernacExtend",
            "6a737b45852133a11ffa7a0af2881be74773d2b4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "change 1 with (2^0).",
            "VernacExtend",
            "73d4e5661c01108af99ff7c06a8170c1b2277923"
        ],
        [
            "apply (Zpower_lt radix2).",
            "VernacExtend",
            "ded278edfe3e290020d0c15346dbbb25baa79b42"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold emin; omega.",
            "VernacExtend",
            "d26aa6b8f56948c9f9dd486fdd2c59a9fc725537"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma integer_representable_opp: forall n, integer_representable n -> integer_representable (-n).",
            "VernacStartTheoremProof",
            "a0bce2d754124570807dd9cde2d52837d5e5cdea"
        ],
        [
            "intros n (A & B); split.",
            "VernacExtend",
            "ae0f2c5a05e1b8cf78664d2c2ba9ba5cf1b65d07"
        ],
        [
            "rewrite Z.abs_opp.",
            "VernacExtend",
            "ec9b85953ca6dd541dab910eb2da13f42d984671"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite Z2R_opp.",
            "VernacExtend",
            "f3d51769485a2c167744d3d3fd4fffa672e5e611"
        ],
        [
            "apply generic_format_opp; auto.",
            "VernacExtend",
            "a6f777cf74fb998313d6740812b53dcea28bb7c7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma integer_representable_n2p_wide: forall n p, -2^prec <= n <= 2^prec -> 0 <= p -> p < emax - prec -> integer_representable (n * 2^p).",
            "VernacStartTheoremProof",
            "67ba7e2b3f6e2443254b61257e3c029cb873fe24"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "red in prec_gt_0_.",
            "VernacExtend",
            "4b29078a2865ccd92928eaceffc91659787acb4b"
        ],
        [
            "destruct (Z.eq_dec n (2^prec)); [idtac | destruct (Z.eq_dec n (-2^prec))].",
            "VernacExtend",
            "6e19b9ccccfa2ab4fe55c6e3f6d70b16f0623cf5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite e.",
            "VernacExtend",
            "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
        ],
        [
            "rewrite <- (Zpower_plus radix2) by omega.",
            "VernacExtend",
            "05151a82acdcd0296850844d2ad40b2e48f1c68d"
        ],
        [
            "apply integer_representable_2p.",
            "VernacExtend",
            "fabf3fa99b434cab5c8f978705fd18b8f2291184"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite e.",
            "VernacExtend",
            "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
        ],
        [
            "rewrite <- Zopp_mult_distr_l.",
            "VernacExtend",
            "793267bc17cdca79103d81fb3367e80db2d1a5d0"
        ],
        [
            "apply integer_representable_opp.",
            "VernacExtend",
            "aa27e5f3c704b39f376efd2351818d0b92dbb511"
        ],
        [
            "rewrite <- (Zpower_plus radix2) by omega.",
            "VernacExtend",
            "05151a82acdcd0296850844d2ad40b2e48f1c68d"
        ],
        [
            "apply integer_representable_2p.",
            "VernacExtend",
            "fabf3fa99b434cab5c8f978705fd18b8f2291184"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply integer_representable_n2p; omega.",
            "VernacExtend",
            "b340df19dd38a48420532765a51e9cdaeab596e5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma integer_representable_n: forall n, -2^prec <= n <= 2^prec -> integer_representable n.",
            "VernacStartTheoremProof",
            "42c0e98cc0454503620a198651c8baede79d74ad"
        ],
        [
            "red in prec_gt_0_.",
            "VernacExtend",
            "4b29078a2865ccd92928eaceffc91659787acb4b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace n with (n * 2^0) by (change (2^0) with 1; ring).",
            "VernacExtend",
            "d9dc6b46644e97bb5977df3a7ee0c9f6654d8d92"
        ],
        [
            "apply integer_representable_n2p_wide.",
            "VernacExtend",
            "23e726d7b459f89f7dc0564e7bcfcc0d15b422e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma round_int_no_overflow: forall n, Z.abs n <= 2^emax - 2^(emax-prec) -> (Rabs (round radix2 fexp (round_mode mode_NE) (Z2R n)) < bpow radix2 emax)%R.",
            "VernacStartTheoremProof",
            "a62f2e346f6b9104be3c04f5a8fc98d062a4aa58"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "red in prec_gt_0_.",
            "VernacExtend",
            "4b29078a2865ccd92928eaceffc91659787acb4b"
        ],
        [
            "rewrite <- round_NE_abs.",
            "VernacExtend",
            "14904ff5d35ba3556a9bbd77db3a4654a17b5f3b"
        ],
        [
            "apply Rle_lt_trans with (Z2R (2^emax - 2^(emax-prec))).",
            "VernacExtend",
            "eca6f5ee0b8868b493e9941eb70ac0fab9700678"
        ],
        [
            "apply round_le_generic.",
            "VernacExtend",
            "04cb9c8decee91f3dd7c1ed48f010d87c1bbe053"
        ],
        [
            "apply fexp_correct; auto.",
            "VernacExtend",
            "4ec56761cdd451c636b20d54a8737ee529ef53b5"
        ],
        [
            "apply valid_rnd_N.",
            "VernacExtend",
            "f4ab421000309491d6dc83c8b908849b63ff85b0"
        ],
        [
            "apply generic_format_FLT.",
            "VernacExtend",
            "555f10b505d8f1b986407a7320ce6fa79605c566"
        ],
        [
            "exists (Float radix2 (2^prec-1) (emax-prec)).",
            "VernacExtend",
            "0cd62740017bd39c5a9b560f832720d14f9998a8"
        ],
        [
            "rewrite int_upper_bound_eq.",
            "VernacExtend",
            "fc2b91ec9bf534b31e54e931ec9b08e741ae176d"
        ],
        [
            "unfold F2R; simpl.",
            "VernacExtend",
            "a8b73d273d1c692e5deb932d4bd557029927ed13"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "rewrite <- Z2R_Zpower by omega.",
            "VernacExtend",
            "bc3388d59814ca4d9994fae141ed9a4d348c5e2f"
        ],
        [
            "rewrite <- Z2R_mult.",
            "VernacExtend",
            "4bfcef9c6d8659a267de59ca9647b2d107af9b2a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assert (0 < 2^prec) by (apply (Zpower_gt_0 radix2); omega).",
            "VernacExtend",
            "34b54f7c2991de3eb2b2ce345672090938f01a87"
        ],
        [
            "zify; omega.",
            "VernacExtend",
            "5fb0df05710c307ca01829a575fcf81498a16c8a"
        ],
        [
            "unfold emin; omega.",
            "VernacExtend",
            "d26aa6b8f56948c9f9dd486fdd2c59a9fc725537"
        ],
        [
            "rewrite <- Z2R_abs.",
            "VernacExtend",
            "77629e87057563edf3f2c544c80c7822cbaa734b"
        ],
        [
            "apply Z2R_le.",
            "VernacExtend",
            "b1047db1ca8ec0d49de6b93d8ab59e7c07265bfb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite <- Z2R_Zpower by omega.",
            "VernacExtend",
            "bc3388d59814ca4d9994fae141ed9a4d348c5e2f"
        ],
        [
            "apply Z2R_lt.",
            "VernacExtend",
            "20648688afbdacefe3b6070755cbe6f263ce5093"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "assert (0 < 2^(emax-prec)) by (apply (Zpower_gt_0 radix2); omega).",
            "VernacExtend",
            "84fd658c1ba452f32c4e0bc0e75b60da8e86f588"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply fexp_correct.",
            "VernacExtend",
            "85498cdb4b6cb0deee6b9206d6250d0397d5aa89"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition BofZ (n: Z) : binary_float := binary_normalize prec emax prec_gt_0_ Hmax mode_NE n 0 false.",
            "VernacDefinition",
            "d957177dbfbeafec5beb54fd12cd6fbf7e9a584f"
        ],
        [
            "Theorem BofZ_correct: forall n, if Rlt_bool (Rabs (round radix2 fexp (round_mode mode_NE) (Z2R n))) (bpow radix2 emax) then B2R prec emax (BofZ n) = round radix2 fexp (round_mode mode_NE) (Z2R n) /\\ is_finite _ _ (BofZ n) = true /\\ Bsign prec emax (BofZ n) = Z.ltb n 0 else B2FF prec emax (BofZ n) = binary_overflow prec emax mode_NE (Z.ltb n 0).",
            "VernacStartTheoremProof",
            "12d6d2eda8dbd5ec83838b9ea91b75e269e045ca"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (binary_normalize_correct prec emax prec_gt_0_ Hmax mode_NE n 0 false).",
            "VernacExtend",
            "2658cef91fa1bcb6d2f6156ce27b882a9d40bfda"
        ],
        [
            "fold emin; fold fexp; fold (BofZ n).",
            "VernacExtend",
            "2cc327cb102612bf1dd2ca11641302596501c819"
        ],
        [
            "replace (F2R {| Fnum := n; Fexp := 0 |}) with (Z2R n).",
            "VernacExtend",
            "b241113b31ddc3688af41606eab6b958e0868bb4"
        ],
        [
            "destruct Rlt_bool.",
            "VernacExtend",
            "1d271c5b254ab8ba15735ed683f2dbe76a7cc342"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros (A & B & C).",
            "VernacExtend",
            "600bc83b778b82e4f76af4dba65aea6d61e17221"
        ],
        [
            "split; [|split].",
            "VernacExtend",
            "d2f933e98f73ab8a5c6be2969adff348cdfe06d5"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite C.",
            "VernacExtend",
            "6522c35db68091b070ccdd4e87749a3d6da8e69d"
        ],
        [
            "change 0%R with (Z2R 0).",
            "VernacExtend",
            "0aca30e4eaa8ab73d6cf1051499c94fbbfc180f6"
        ],
        [
            "rewrite Rcompare_Z2R.",
            "VernacExtend",
            "99850ffef35692f481a718b264a52d18cbb5d4fc"
        ],
        [
            "unfold Z.ltb.",
            "VernacExtend",
            "72fdcf336c71c80107e336606b5ff3c0dc08ef62"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros A; rewrite A.",
            "VernacExtend",
            "488f25ccb6b2d65b11068deeda1117696a0e02ec"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "change 0%R with (Z2R 0).",
            "VernacExtend",
            "0aca30e4eaa8ab73d6cf1051499c94fbbfc180f6"
        ],
        [
            "generalize (Z.ltb_spec n 0); intros SPEC; inversion SPEC.",
            "VernacExtend",
            "46301cb94557e418446b8b9371c99debe96458f5"
        ],
        [
            "apply Rlt_bool_true; apply Z2R_lt; auto.",
            "VernacExtend",
            "5fbfb90fd8a13706d744fa4ef56bf9d84d45e479"
        ],
        [
            "apply Rlt_bool_false; apply Z2R_le; auto.",
            "VernacExtend",
            "2919797a5b9fb64707699bf407582ad900852956"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold F2R; simpl.",
            "VernacExtend",
            "a8b73d273d1c692e5deb932d4bd557029927ed13"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem BofZ_finite: forall n, Z.abs n <= 2^emax - 2^(emax-prec) -> B2R _ _ (BofZ n) = round radix2 fexp (round_mode mode_NE) (Z2R n) /\\ is_finite _ _ (BofZ n) = true /\\ Bsign _ _ (BofZ n) = Z.ltb n 0%Z.",
            "VernacStartTheoremProof",
            "0d341e165c14527d2178086f86b6ad71ea2dcdf6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (BofZ_correct n).",
            "VernacExtend",
            "2540b0727a7381540ffd1ac61144d855e02c7048"
        ],
        [
            "rewrite Rlt_bool_true.",
            "VernacExtend",
            "31cd82492c96b4dc35f8c36f967bc8802a2bc6ba"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply round_int_no_overflow; auto.",
            "VernacExtend",
            "95b6882cda02319d762fa0ec12a5a308c8fc1b11"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem BofZ_representable: forall n, integer_representable n -> B2R _ _ (BofZ n) = Z2R n /\\ is_finite _ _ (BofZ n) = true /\\ Bsign _ _ (BofZ n) = (n <? 0).",
            "VernacStartTheoremProof",
            "cd0a069da45513cdc8fdbf4ab343bdd4736a715c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H as (P & Q).",
            "VernacExtend",
            "52c3475ab9b2dd345051d0ee4bd07c4093d505c6"
        ],
        [
            "destruct (BofZ_finite n) as (A & B & C).",
            "VernacExtend",
            "856ef115359fc4430c68f55017a9a515c3f5c6cb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "rewrite A.",
            "VernacExtend",
            "66a3aec75a717b72a3c9a20459f4dabe8d0df2c1"
        ],
        [
            "apply round_generic.",
            "VernacExtend",
            "329c42b8a825480836d8d91cbeb7ff485a68ba31"
        ],
        [
            "apply valid_rnd_round_mode.",
            "VernacExtend",
            "20b08e148269eae05657e863e427e37c03e032b6"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem BofZ_exact: forall n, -2^prec <= n <= 2^prec -> B2R _ _ (BofZ n) = Z2R n /\\ is_finite _ _ (BofZ n) = true /\\ Bsign _ _ (BofZ n) = Z.ltb n 0%Z.",
            "VernacStartTheoremProof",
            "e9274f90704e7b152b11965d844ee61e7526d4ac"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply BofZ_representable.",
            "VernacExtend",
            "0c0dbd7150e34bb97b8cb1ebc86e3eec11e0530c"
        ],
        [
            "apply integer_representable_n; auto.",
            "VernacExtend",
            "e7579ea4ba88dc0bc6d77a0170cabe01629de62f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma BofZ_finite_pos0: forall n, Z.abs n <= 2^emax - 2^(emax-prec) -> is_finite_pos0 (BofZ n) = true.",
            "VernacStartTheoremProof",
            "831f6e7ce21b5bf9b10d567801e8bd44b4c1da36"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (binary_normalize_correct prec emax prec_gt_0_ Hmax mode_NE n 0 false).",
            "VernacExtend",
            "2658cef91fa1bcb6d2f6156ce27b882a9d40bfda"
        ],
        [
            "fold emin; fold fexp; fold (BofZ n).",
            "VernacExtend",
            "2cc327cb102612bf1dd2ca11641302596501c819"
        ],
        [
            "replace (F2R {| Fnum := n; Fexp := 0 |}) with (Z2R n) by (unfold F2R; simpl; ring).",
            "VernacExtend",
            "3be0e3d39c2d083577e1fa3aa67d42412d006d89"
        ],
        [
            "rewrite Rlt_bool_true by (apply round_int_no_overflow; auto).",
            "VernacExtend",
            "f9ad39eeeff591a068380642cff5f21558568b52"
        ],
        [
            "intros (A & B & C).",
            "VernacExtend",
            "600bc83b778b82e4f76af4dba65aea6d61e17221"
        ],
        [
            "destruct (BofZ n); auto; try discriminate.",
            "VernacExtend",
            "79de1f17f96b7d2afefd18fad122ae6b306fcd84"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "rewrite C.",
            "VernacExtend",
            "6522c35db68091b070ccdd4e87749a3d6da8e69d"
        ],
        [
            "change 0%R with (Z2R 0).",
            "VernacExtend",
            "0aca30e4eaa8ab73d6cf1051499c94fbbfc180f6"
        ],
        [
            "rewrite Rcompare_Z2R.",
            "VernacExtend",
            "99850ffef35692f481a718b264a52d18cbb5d4fc"
        ],
        [
            "generalize (Zcompare_spec n 0); intros SPEC; inversion SPEC; auto.",
            "VernacExtend",
            "6557908ddff451d4ab15da5731ab4f1cb2a24694"
        ],
        [
            "assert ((round radix2 fexp ZnearestE (Z2R n) <= -1)%R).",
            "VernacExtend",
            "de301b088681526d88f2e54750c0567545cf335f"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "change (-1)%R with (Z2R (-1)).",
            "VernacExtend",
            "ade50b6cb0cfcbaab7fe8e0bcb822154125bb75d"
        ],
        [
            "apply round_le_generic.",
            "VernacExtend",
            "04cb9c8decee91f3dd7c1ed48f010d87c1bbe053"
        ],
        [
            "apply fexp_correct.",
            "VernacExtend",
            "85498cdb4b6cb0deee6b9206d6250d0397d5aa89"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply valid_rnd_N.",
            "VernacExtend",
            "f4ab421000309491d6dc83c8b908849b63ff85b0"
        ],
        [
            "apply (integer_representable_opp 1).",
            "VernacExtend",
            "c960ae58f60411a94afd2cb7d6739c92954bd5fa"
        ],
        [
            "apply (integer_representable_2p 0).",
            "VernacExtend",
            "dc0a9fde79b34bf322ec3782dddc5ebedbacdef8"
        ],
        [
            "red in prec_gt_0_; omega.",
            "VernacExtend",
            "d5dab93f8056283198d3a561eaaa85ddc796bdea"
        ],
        [
            "apply Z2R_le; omega.",
            "VernacExtend",
            "48e544720b256ddb4a7e9f49475d76732a118d7b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma BofZ_finite_equal: forall x y, Z.abs x <= 2^emax - 2^(emax-prec) -> Z.abs y <= 2^emax - 2^(emax-prec) -> B2R _ _ (BofZ x) = B2R _ _ (BofZ y) -> BofZ x = BofZ y.",
            "VernacStartTheoremProof",
            "74261867c90ca124d24d3dd49d9a3f1ee327aaf3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply B2R_inj_pos0; auto; apply BofZ_finite_pos0; auto.",
            "VernacExtend",
            "236ec9735dbd30a2822484d84febb35754928b7e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem BofZ_plus: forall nan p q, integer_representable p -> integer_representable q -> Bplus _ _ _ Hmax nan mode_NE (BofZ p) (BofZ q) = BofZ (p + q).",
            "VernacStartTheoremProof",
            "bbebe12844399b1d37a19a8c32481650fac8d131"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (BofZ_representable p) as (A & B & C); auto.",
            "VernacExtend",
            "b54734d80b08d361b42d0600762969c9f04fbed9"
        ],
        [
            "destruct (BofZ_representable q) as (D & E & F); auto.",
            "VernacExtend",
            "b08284554bc05fc090c6425c474bd0148baaf3c4"
        ],
        [
            "generalize (Bplus_correct _ _ _ Hmax nan mode_NE (BofZ p) (BofZ q) B E).",
            "VernacExtend",
            "c94051c6e55a838eb8532f2309a968561ed0902b"
        ],
        [
            "fold emin; fold fexp.",
            "VernacExtend",
            "e902875dc03cf15abcd21a62d61e38945c341d5f"
        ],
        [
            "rewrite A, D.",
            "VernacExtend",
            "106c0ceb005bf157e18997508c889c163cbc4c36"
        ],
        [
            "rewrite <- Z2R_plus.",
            "VernacExtend",
            "34b18f1df9cc7268c70f355324b3f0e0fcc9644f"
        ],
        [
            "generalize (BofZ_correct (p + q)).",
            "VernacExtend",
            "f7ec8508ed54f39c5e7c53bfa3793683db07368e"
        ],
        [
            "destruct Rlt_bool.",
            "VernacExtend",
            "1d271c5b254ab8ba15735ed683f2dbe76a7cc342"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros (P & Q & R) (U & V & W).",
            "VernacExtend",
            "4b33fd81102583a86e95213bfedddf5592a3ff16"
        ],
        [
            "apply B2R_Bsign_inj; auto.",
            "VernacExtend",
            "f9c8ab320eaf2edac30031b5e20f8559397978a4"
        ],
        [
            "rewrite P, U; auto.",
            "VernacExtend",
            "cefa74d6b31cb8010f9a91cec2c860fa53d4db95"
        ],
        [
            "rewrite R, W, C, F.",
            "VernacExtend",
            "283e4a1d7129ac2cbf3f57de39cdaf17edb400ff"
        ],
        [
            "change 0%R with (Z2R 0).",
            "VernacExtend",
            "0aca30e4eaa8ab73d6cf1051499c94fbbfc180f6"
        ],
        [
            "rewrite Rcompare_Z2R.",
            "VernacExtend",
            "99850ffef35692f481a718b264a52d18cbb5d4fc"
        ],
        [
            "unfold Z.ltb at 3.",
            "VernacExtend",
            "b277f47f13d77c426ed5e54b8afd48ae7a8e63ca"
        ],
        [
            "generalize (Zcompare_spec (p + q) 0); intros SPEC; inversion SPEC; auto.",
            "VernacExtend",
            "ce3d372166532320a94f5bbc6812fb3eeb12d106"
        ],
        [
            "assert (EITHER: 0 <= p \\/ 0 <= q) by omega.",
            "VernacExtend",
            "9ce92807c46cd4bc03fffeb77289ee73cd3145d6"
        ],
        [
            "destruct EITHER; [apply andb_false_intro1 | apply andb_false_intro2]; apply Zlt_bool_false; auto.",
            "VernacExtend",
            "f9609cc8b402b1ec1e0ea1e314e7efc2420cb283"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros P (U & V).",
            "VernacExtend",
            "3e60601dbb8423a43eeb8e91e2e299ec21447a59"
        ],
        [
            "apply B2FF_inj.",
            "VernacExtend",
            "34eff57b1d6cecac8da247658345ae15e779c4fb"
        ],
        [
            "rewrite P, U, C.",
            "VernacExtend",
            "dd60bfd95cf9ca5133f127cbf10186d1911e03aa"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite C, F in V.",
            "VernacExtend",
            "1cb6805fae76bfe79e1eee5619fec104e584e921"
        ],
        [
            "generalize (Zlt_bool_spec p 0) (Zlt_bool_spec q 0).",
            "VernacExtend",
            "9442b0a96dd66ba782d3c7012aeec8c2bc214040"
        ],
        [
            "rewrite <- V.",
            "VernacExtend",
            "2d88f5df5bfc3c63fa944c0af670fa4abe612bb2"
        ],
        [
            "intros SPEC1 SPEC2; inversion SPEC1; inversion SPEC2; try congruence; symmetry.",
            "VernacExtend",
            "a9d8b00a2ea14b10c058bd4a24896ce236b9274e"
        ],
        [
            "apply Zlt_bool_true; omega.",
            "VernacExtend",
            "b9d4118dd908a461f3b62bb2b756586ab889339a"
        ],
        [
            "apply Zlt_bool_false; omega.",
            "VernacExtend",
            "b62332062b2c1aeda2447e5c5aeddee6f1af38a6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem BofZ_minus: forall nan p q, integer_representable p -> integer_representable q -> Bminus _ _ _ Hmax nan mode_NE (BofZ p) (BofZ q) = BofZ (p - q).",
            "VernacStartTheoremProof",
            "f19696c87ea0ffda019fa88d601c2b3b07ca6a56"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (BofZ_representable p) as (A & B & C); auto.",
            "VernacExtend",
            "b54734d80b08d361b42d0600762969c9f04fbed9"
        ],
        [
            "destruct (BofZ_representable q) as (D & E & F); auto.",
            "VernacExtend",
            "b08284554bc05fc090c6425c474bd0148baaf3c4"
        ],
        [
            "generalize (Bminus_correct _ _ _ Hmax nan mode_NE (BofZ p) (BofZ q) B E).",
            "VernacExtend",
            "27f6d17682c18c12b58f94e5fa81c558b653dcaa"
        ],
        [
            "fold emin; fold fexp.",
            "VernacExtend",
            "e902875dc03cf15abcd21a62d61e38945c341d5f"
        ],
        [
            "rewrite A, D.",
            "VernacExtend",
            "106c0ceb005bf157e18997508c889c163cbc4c36"
        ],
        [
            "rewrite <- Z2R_minus.",
            "VernacExtend",
            "7d4fecf8931f8ca938d25720366e724d7310a2f3"
        ],
        [
            "generalize (BofZ_correct (p - q)).",
            "VernacExtend",
            "fde282817c4cf2da9597eaad17efa3cc8b1deaf7"
        ],
        [
            "destruct Rlt_bool.",
            "VernacExtend",
            "1d271c5b254ab8ba15735ed683f2dbe76a7cc342"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros (P & Q & R) (U & V & W).",
            "VernacExtend",
            "4b33fd81102583a86e95213bfedddf5592a3ff16"
        ],
        [
            "apply B2R_Bsign_inj; auto.",
            "VernacExtend",
            "f9c8ab320eaf2edac30031b5e20f8559397978a4"
        ],
        [
            "rewrite P, U; auto.",
            "VernacExtend",
            "cefa74d6b31cb8010f9a91cec2c860fa53d4db95"
        ],
        [
            "rewrite R, W, C, F.",
            "VernacExtend",
            "283e4a1d7129ac2cbf3f57de39cdaf17edb400ff"
        ],
        [
            "change 0%R with (Z2R 0).",
            "VernacExtend",
            "0aca30e4eaa8ab73d6cf1051499c94fbbfc180f6"
        ],
        [
            "rewrite Rcompare_Z2R.",
            "VernacExtend",
            "99850ffef35692f481a718b264a52d18cbb5d4fc"
        ],
        [
            "unfold Z.ltb at 3.",
            "VernacExtend",
            "b277f47f13d77c426ed5e54b8afd48ae7a8e63ca"
        ],
        [
            "generalize (Zcompare_spec (p - q) 0); intros SPEC; inversion SPEC; auto.",
            "VernacExtend",
            "a605723bb4538607c5056bb4b4971473113af05c"
        ],
        [
            "assert (EITHER: 0 <= p \\/ q < 0) by omega.",
            "VernacExtend",
            "b9342befeb41cf888c98525bf8e8538be6bbddd9"
        ],
        [
            "destruct EITHER; [apply andb_false_intro1 | apply andb_false_intro2].",
            "VernacExtend",
            "338192da5c0c779cee66c2eb6941cdea20d066c4"
        ],
        [
            "rewrite Zlt_bool_false; auto.",
            "VernacExtend",
            "887ea065e6952f87247db504ce4d68c5c6ab423e"
        ],
        [
            "rewrite Zlt_bool_true; auto.",
            "VernacExtend",
            "5e6e6b24e46c058a827c45b537241f946ab7b787"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros P (U & V).",
            "VernacExtend",
            "3e60601dbb8423a43eeb8e91e2e299ec21447a59"
        ],
        [
            "apply B2FF_inj.",
            "VernacExtend",
            "34eff57b1d6cecac8da247658345ae15e779c4fb"
        ],
        [
            "rewrite P, U, C.",
            "VernacExtend",
            "dd60bfd95cf9ca5133f127cbf10186d1911e03aa"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite C, F in V.",
            "VernacExtend",
            "1cb6805fae76bfe79e1eee5619fec104e584e921"
        ],
        [
            "generalize (Zlt_bool_spec p 0) (Zlt_bool_spec q 0).",
            "VernacExtend",
            "9442b0a96dd66ba782d3c7012aeec8c2bc214040"
        ],
        [
            "rewrite V.",
            "VernacExtend",
            "22d30038d8005a7fbe2e5a5c28c65e4e9dc9d597"
        ],
        [
            "intros SPEC1 SPEC2; inversion SPEC1; inversion SPEC2; symmetry.",
            "VernacExtend",
            "9c446f13547f569db0a07a192d8881a928ae5269"
        ],
        [
            "rewrite <- H3 in H1; discriminate.",
            "VernacExtend",
            "b07257fdc6c2d0c126fa87dcd14f59083b4a07d8"
        ],
        [
            "apply Zlt_bool_true; omega.",
            "VernacExtend",
            "b9d4118dd908a461f3b62bb2b756586ab889339a"
        ],
        [
            "apply Zlt_bool_false; omega.",
            "VernacExtend",
            "b62332062b2c1aeda2447e5c5aeddee6f1af38a6"
        ],
        [
            "rewrite <- H3 in H1; discriminate.",
            "VernacExtend",
            "b07257fdc6c2d0c126fa87dcd14f59083b4a07d8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem BofZ_mult: forall nan p q, integer_representable p -> integer_representable q -> 0 < q -> Bmult _ _ _ Hmax nan mode_NE (BofZ p) (BofZ q) = BofZ (p * q).",
            "VernacStartTheoremProof",
            "34f59890134afe89670c6e363cb01c12da63a321"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (SIGN: xorb (p <? 0) (q <? 0) = (p * q <? 0)).",
            "VernacExtend",
            "ec9e386bdc79aeeac185a66d9a550d38e90de2db"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite (Zlt_bool_false q) by omega.",
            "VernacExtend",
            "c70892f0d42007673216389d8c95169dc2a2abfb"
        ],
        [
            "generalize (Zlt_bool_spec p 0); intros SPEC; inversion SPEC; simpl; symmetry.",
            "VernacExtend",
            "e072334f621ef63271b883f8968526a9fcbb28a7"
        ],
        [
            "apply Zlt_bool_true.",
            "VernacExtend",
            "bebe147ff91dd7ce791fff229d45a54236180415"
        ],
        [
            "rewrite Z.mul_comm.",
            "VernacExtend",
            "088699fe7f894ededd3c93ab3a27f9d105f1ab84"
        ],
        [
            "apply Z.mul_pos_neg; omega.",
            "VernacExtend",
            "99380cdc2947afa7ed83335089e74bddc1f9d7e9"
        ],
        [
            "apply Zlt_bool_false.",
            "VernacExtend",
            "727bcedc45dab1285379e344de04340c612a0572"
        ],
        [
            "apply Zsame_sign_imp; omega.",
            "VernacExtend",
            "c8a8f3f3c564db3fbcd03bdfcb9c74069a57788e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (BofZ_representable p) as (A & B & C); auto.",
            "VernacExtend",
            "b54734d80b08d361b42d0600762969c9f04fbed9"
        ],
        [
            "destruct (BofZ_representable q) as (D & E & F); auto.",
            "VernacExtend",
            "b08284554bc05fc090c6425c474bd0148baaf3c4"
        ],
        [
            "generalize (Bmult_correct _ _ _ Hmax nan mode_NE (BofZ p) (BofZ q)).",
            "VernacExtend",
            "0c13229beabb2f823390e1b180bc099842876773"
        ],
        [
            "fold emin; fold fexp.",
            "VernacExtend",
            "e902875dc03cf15abcd21a62d61e38945c341d5f"
        ],
        [
            "rewrite A, B, C, D, E, F.",
            "VernacExtend",
            "cf38619ab8de5cc2836b9de21b88bd30e3ee872f"
        ],
        [
            "rewrite <- Z2R_mult.",
            "VernacExtend",
            "4bfcef9c6d8659a267de59ca9647b2d107af9b2a"
        ],
        [
            "generalize (BofZ_correct (p * q)).",
            "VernacExtend",
            "03490df230aaf7ea08557e90c7f54fe37250a709"
        ],
        [
            "destruct Rlt_bool.",
            "VernacExtend",
            "1d271c5b254ab8ba15735ed683f2dbe76a7cc342"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros (P & Q & R) (U & V & W).",
            "VernacExtend",
            "4b33fd81102583a86e95213bfedddf5592a3ff16"
        ],
        [
            "apply B2R_Bsign_inj; auto.",
            "VernacExtend",
            "f9c8ab320eaf2edac30031b5e20f8559397978a4"
        ],
        [
            "rewrite P, U; auto.",
            "VernacExtend",
            "cefa74d6b31cb8010f9a91cec2c860fa53d4db95"
        ],
        [
            "rewrite R, W; auto.",
            "VernacExtend",
            "fd5ca52e97bcd8598bbeceb8013c74f70f074002"
        ],
        [
            "apply is_finite_not_is_nan; auto.",
            "VernacExtend",
            "487671d35c84c1ea435363958aed8bd554dcff77"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros P U.",
            "VernacExtend",
            "6b5e9555da24c6690353f151f5f7cdf4cd5e3041"
        ],
        [
            "apply B2FF_inj.",
            "VernacExtend",
            "34eff57b1d6cecac8da247658345ae15e779c4fb"
        ],
        [
            "rewrite P, U.",
            "VernacExtend",
            "07e2aa2299a6aed35d03a8231a660adca32c9dde"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem BofZ_mult_2p: forall nan x p, Z.abs x <= 2^emax - 2^(emax-prec) -> 2^prec <= Z.abs x -> 0 <= p <= emax - 1 -> Bmult _ _ _ Hmax nan mode_NE (BofZ x) (BofZ (2^p)) = BofZ (x * 2^p).",
            "VernacStartTheoremProof",
            "7509f6d3b8c2df7b201653aad737d3715ab4859e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (Z.eq_dec x 0).",
            "VernacExtend",
            "3e4b2c03e3f45aea4864931b44a14efbc37ec9a9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst x.",
            "VernacExtend",
            "76c28b0a6a4a7c1568fa30e26ee411c5e5d54968"
        ],
        [
            "apply BofZ_mult.",
            "VernacExtend",
            "3d80deabc65722f133189383049386d67c59b253"
        ],
        [
            "apply integer_representable_n.",
            "VernacExtend",
            "82606dabf765e6367de334ded4cc7646db4df04e"
        ],
        [
            "generalize (Zpower_ge_0 radix2 prec).",
            "VernacExtend",
            "ba2ecba78fe33c82005dad67f8f91dca70c004bd"
        ],
        [
            "simpl; omega.",
            "VernacExtend",
            "e39ee197bcf8e665eb70095a296ce867a0e4d7ae"
        ],
        [
            "apply integer_representable_2p.",
            "VernacExtend",
            "fabf3fa99b434cab5c8f978705fd18b8f2291184"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply (Zpower_gt_0 radix2).",
            "VernacExtend",
            "c39b903ed0c1c3b7f29fbae7d368f98e5b82a93d"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (Z2R x <> 0%R) by (apply (Z2R_neq _ _ n)).",
            "VernacExtend",
            "e9c792633676690ef7040a80eaa8f55b1184a101"
        ],
        [
            "destruct (BofZ_finite x H) as (A & B & C).",
            "VernacExtend",
            "506d3d3f19cf9ffd121df512f6b0e339bf630752"
        ],
        [
            "destruct (BofZ_representable (2^p)) as (D & E & F).",
            "VernacExtend",
            "d1ef2a1212c412a8431a169b5151791ecd1f5a27"
        ],
        [
            "apply integer_representable_2p.",
            "VernacExtend",
            "fabf3fa99b434cab5c8f978705fd18b8f2291184"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (canonic_exp radix2 fexp (Z2R (x * 2^p)) = canonic_exp radix2 fexp (Z2R x) + p).",
            "VernacExtend",
            "c937b823eb768ac0c6448b586252a13301a0a639"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold canonic_exp, fexp.",
            "VernacExtend",
            "ddcc2e1851d3623449281de0370e666df5c0aa04"
        ],
        [
            "rewrite Z2R_mult.",
            "VernacExtend",
            "9df3e88fb03a8e1b32ba077432430323142e8b66"
        ],
        [
            "change (2^p) with (radix2^p).",
            "VernacExtend",
            "0fe06c59c33bb5c98b5da95b258afb10ddafd921"
        ],
        [
            "rewrite Z2R_Zpower by omega.",
            "VernacExtend",
            "3538edfbdcbfd9c66a75a10b3d798d1152734c39"
        ],
        [
            "rewrite ln_beta_mult_bpow by auto.",
            "VernacExtend",
            "7861c5e7789b4d024cf82ad5281d89523233baf6"
        ],
        [
            "assert (prec + 1 <= ln_beta radix2 (Z2R x)).",
            "VernacExtend",
            "5c58d970247b2bc11aa049a79f7fc0ac0db1505b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite <- (ln_beta_abs radix2 (Z2R x)).",
            "VernacExtend",
            "b9ec5f954fbd864ca25761f7be0a19e1e1148e8b"
        ],
        [
            "rewrite <- (ln_beta_bpow radix2 prec).",
            "VernacExtend",
            "6596beed33b138fbc88de78adb3211c50f791f88"
        ],
        [
            "apply ln_beta_le.",
            "VernacExtend",
            "e43580b7286582594a33da026f0809ba6159bbe8"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "rewrite <- Z2R_Zpower by (red in prec_gt_0_;omega).",
            "VernacExtend",
            "a4404cb6fcf461e503a7142147806d029e5e2e34"
        ],
        [
            "rewrite <- Z2R_abs.",
            "VernacExtend",
            "77629e87057563edf3f2c544c80c7822cbaa734b"
        ],
        [
            "apply Z2R_le; auto.",
            "VernacExtend",
            "7b1971a0b9305d2b635a8415b3ab7992a22fe4ab"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "unfold FLT_exp.",
            "VernacExtend",
            "d4f3b9f7d52d234d511b90934a943354be18194a"
        ],
        [
            "unfold emin; red in prec_gt_0_; zify; omega.",
            "VernacExtend",
            "0332812e99f2e55e1e98bf56945ee13bbcfb27de"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (forall m, round radix2 fexp m (Z2R x) * Z2R (2^p) = round radix2 fexp m (Z2R (x * 2^p)))%R.",
            "VernacExtend",
            "67c7aee2a68c0a2e728b45e5ade13f63d1846c27"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold round, scaled_mantissa.",
            "VernacExtend",
            "7469ad7d3b9aede0c8a3252000b6eff5c30abc4e"
        ],
        [
            "rewrite H3.",
            "VernacExtend",
            "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
        ],
        [
            "rewrite Z2R_mult.",
            "VernacExtend",
            "9df3e88fb03a8e1b32ba077432430323142e8b66"
        ],
        [
            "rewrite Z.opp_add_distr.",
            "VernacExtend",
            "a50b3a64716ba6ce04fc27a04864e3cc89e69412"
        ],
        [
            "rewrite bpow_plus.",
            "VernacExtend",
            "a66bde7144b19ede4a139295758f63aab8dcbea6"
        ],
        [
            "set (a := Z2R x); set (b := bpow radix2 (- canonic_exp radix2 fexp a)).",
            "VernacExtend",
            "38aed569883f75af879c7d096c5c95f5cf8b8903"
        ],
        [
            "replace (a * Z2R (2^p) * (b * bpow radix2 (-p)))%R with (a * b)%R.",
            "VernacExtend",
            "441975abd2c7e5cc0162d524cbe9223351632cd2"
        ],
        [
            "unfold F2R; simpl.",
            "VernacExtend",
            "a8b73d273d1c692e5deb932d4bd557029927ed13"
        ],
        [
            "rewrite Rmult_assoc.",
            "VernacExtend",
            "323caa1eefcb937c18a66a7144c1e29b2c1a3e40"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite bpow_plus.",
            "VernacExtend",
            "a66bde7144b19ede4a139295758f63aab8dcbea6"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply (Z2R_Zpower radix2).",
            "VernacExtend",
            "b895142347aa0259b23f3f4bed44cbe1109dbf57"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "transitivity ((a * b) * (Z2R (2^p) * bpow radix2 (-p)))%R.",
            "VernacExtend",
            "ccbd989880ba74278317bd68cd7880e6fe47844f"
        ],
        [
            "rewrite (Z2R_Zpower radix2).",
            "VernacExtend",
            "d615a0e40daaafd58ece2fd14238ded3d350378b"
        ],
        [
            "rewrite <- bpow_plus.",
            "VernacExtend",
            "9ebeb3f5611fe78274a1e2e0131c7f7ed66e1cfc"
        ],
        [
            "replace (p + -p) with 0 by omega.",
            "VernacExtend",
            "16d6951625efc65bbcc05cd80fae502466603ff7"
        ],
        [
            "change (bpow radix2 0) with 1%R.",
            "VernacExtend",
            "25085e5330d9e08c809fb47e2ab007d6c9f297f2"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (forall m x, round radix2 fexp (round_mode m) (round radix2 fexp (round_mode m) x) = round radix2 fexp (round_mode m) x).",
            "VernacExtend",
            "70db339f640743c19780572de15b7bd601ba5441"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply round_generic.",
            "VernacExtend",
            "329c42b8a825480836d8d91cbeb7ff485a68ba31"
        ],
        [
            "apply valid_rnd_round_mode.",
            "VernacExtend",
            "20b08e148269eae05657e863e427e37c03e032b6"
        ],
        [
            "apply generic_format_round.",
            "VernacExtend",
            "48e3baa889a9f7b98c000fe5360f9f01bc0057b2"
        ],
        [
            "apply fexp_correct; auto.",
            "VernacExtend",
            "4ec56761cdd451c636b20d54a8737ee529ef53b5"
        ],
        [
            "apply valid_rnd_round_mode.",
            "VernacExtend",
            "20b08e148269eae05657e863e427e37c03e032b6"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (xorb (x <? 0) (2^p <? 0) = (x * 2^p <? 0)).",
            "VernacExtend",
            "40ea8eea4f48150fa9b2d5027d5f25f7aa6139c0"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (0 < 2^p) by (apply (Zpower_gt_0 radix2); omega).",
            "VernacExtend",
            "aa74b3625dbe4a424ebc7bd8ff07ecd2cf19a0f1"
        ],
        [
            "rewrite (Zlt_bool_false (2^p)) by omega.",
            "VernacExtend",
            "093bc1d56f00d6d0b302b13461d1adcf65664a1b"
        ],
        [
            "rewrite xorb_false_r.",
            "VernacExtend",
            "00beb0fefc34a81ad64fed3fdb46c8bfb939e88e"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "generalize (Zlt_bool_spec x 0); intros SPEC; inversion SPEC.",
            "VernacExtend",
            "f1f79e9d12d5f71ea005f67fcd9384e7d30f4b1a"
        ],
        [
            "apply Zlt_bool_true.",
            "VernacExtend",
            "bebe147ff91dd7ce791fff229d45a54236180415"
        ],
        [
            "apply Z.mul_neg_pos; auto.",
            "VernacExtend",
            "d16fb8e36852aac7238e720e45d5daa28456bf99"
        ],
        [
            "apply Zlt_bool_false.",
            "VernacExtend",
            "727bcedc45dab1285379e344de04340c612a0572"
        ],
        [
            "apply Z.mul_nonneg_nonneg; omega.",
            "VernacExtend",
            "9cbfb46050eab35892b2e9f56e931a737701d0d2"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "generalize (Bmult_correct _ _ _ Hmax nan mode_NE (BofZ x) (BofZ (2^p))) (BofZ_correct (x * 2^p)).",
            "VernacExtend",
            "88856c87c8801d1ca4ec3040760f175e8ce70dd0"
        ],
        [
            "fold emin; fold fexp.",
            "VernacExtend",
            "e902875dc03cf15abcd21a62d61e38945c341d5f"
        ],
        [
            "rewrite A, B, C, D, E, F, H4, H5.",
            "VernacExtend",
            "71f2bf2b84ed6f2033885b9dbe3763c48aa7d548"
        ],
        [
            "destruct Rlt_bool.",
            "VernacExtend",
            "1d271c5b254ab8ba15735ed683f2dbe76a7cc342"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros (P & Q & R) (U & V & W).",
            "VernacExtend",
            "4b33fd81102583a86e95213bfedddf5592a3ff16"
        ],
        [
            "apply B2R_Bsign_inj; auto.",
            "VernacExtend",
            "f9c8ab320eaf2edac30031b5e20f8559397978a4"
        ],
        [
            "rewrite P, U.",
            "VernacExtend",
            "07e2aa2299a6aed35d03a8231a660adca32c9dde"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite R, W.",
            "VernacExtend",
            "c6629e67054290a14a5da69f1c77102068887656"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply is_finite_not_is_nan; auto.",
            "VernacExtend",
            "487671d35c84c1ea435363958aed8bd554dcff77"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros P U.",
            "VernacExtend",
            "6b5e9555da24c6690353f151f5f7cdf4cd5e3041"
        ],
        [
            "apply B2FF_inj.",
            "VernacExtend",
            "34eff57b1d6cecac8da247658345ae15e779c4fb"
        ],
        [
            "rewrite P, U.",
            "VernacExtend",
            "07e2aa2299a6aed35d03a8231a660adca32c9dde"
        ],
        [
            "f_equal; auto.",
            "VernacExtend",
            "8016959cfe83d1ba3fdad91954454045f7af1d22"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma round_odd_flt: forall prec' emin' x choice, prec > 1 -> prec' > 1 -> prec' >= prec + 2 -> emin' <= emin - 2 -> round radix2 fexp (Znearest choice) (round radix2 (FLT_exp emin' prec') Zrnd_odd x) = round radix2 fexp (Znearest choice) x.",
            "VernacStartTheoremProof",
            "a2f9b7b5a99da52ad44c21103262ea1e5dc25e8b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply round_odd_prop.",
            "VernacExtend",
            "10da6226373dd5d0a54ad10ebcf7c895ef575c4b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply fexp_correct; auto.",
            "VernacExtend",
            "4ec56761cdd451c636b20d54a8737ee529ef53b5"
        ],
        [
            "apply exists_NE_FLT.",
            "VernacExtend",
            "50b6cb13fc95b8990e7d8482ceb70db198f544c6"
        ],
        [
            "right; omega.",
            "VernacExtend",
            "12a62aeea1a26870d19a3f39cd3d9d63bfc5e22b"
        ],
        [
            "apply FLT_exp_valid.",
            "VernacExtend",
            "1bd5dea00fd78a9577ca3879840aa9940e260233"
        ],
        [
            "red; omega.",
            "VernacExtend",
            "ae85dd91496b88667e743b35b47cde1293a54706"
        ],
        [
            "apply exists_NE_FLT.",
            "VernacExtend",
            "50b6cb13fc95b8990e7d8482ceb70db198f544c6"
        ],
        [
            "right; omega.",
            "VernacExtend",
            "12a62aeea1a26870d19a3f39cd3d9d63bfc5e22b"
        ],
        [
            "unfold fexp, FLT_exp; intros.",
            "VernacExtend",
            "513d62f3d39deca2638d0e2058ad1d239567236e"
        ],
        [
            "zify; omega.",
            "VernacExtend",
            "5fb0df05710c307ca01829a575fcf81498a16c8a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary round_odd_fix: forall x p choice, prec > 1 -> 0 <= p -> (bpow radix2 (prec + p + 1) <= Rabs x)%R -> round radix2 fexp (Znearest choice) (round radix2 (FIX_exp p) Zrnd_odd x) = round radix2 fexp (Znearest choice) x.",
            "VernacStartTheoremProof",
            "97b674e55b49139cb842542e1c574d173da45d00"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (Req_EM_T x 0%R).",
            "VernacExtend",
            "6fa9d48578b4bdef6f56c0f8c690334bb3a9bf59"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst x.",
            "VernacExtend",
            "76c28b0a6a4a7c1568fa30e26ee411c5e5d54968"
        ],
        [
            "rewrite round_0.",
            "VernacExtend",
            "625125ccb3011c651c29b92e3197f630d3c9a749"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply valid_rnd_odd.",
            "VernacExtend",
            "72466a70c924d9ac3bf4b4828b23dc0210738c32"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "set (prec' := ln_beta radix2 x - p).",
            "VernacExtend",
            "3d66eb82b7af52c420c947bba19613334be50999"
        ],
        [
            "set (emin' := emin - 2).",
            "VernacExtend",
            "f2d839b76460ea1731aecd6d701932803523df49"
        ],
        [
            "assert (PREC: ln_beta radix2 (bpow radix2 (prec + p + 1)) <= ln_beta radix2 x).",
            "VernacExtend",
            "b004c88e2cc744f9726b52a48f4defdd78cc7f8d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite <- (ln_beta_abs radix2 x).",
            "VernacExtend",
            "41f2ecef489d0641459a3dcf1a6f62ec444317e3"
        ],
        [
            "apply ln_beta_le; auto.",
            "VernacExtend",
            "6f2fa41ed00be8320dcbf7c9455a32fd1b426fde"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite ln_beta_bpow in PREC.",
            "VernacExtend",
            "073560254d455c16006c903a9e956506b502065d"
        ],
        [
            "assert (CANON: canonic_exp radix2 (FLT_exp emin' prec') x = canonic_exp radix2 (FIX_exp p) x).",
            "VernacExtend",
            "45c61815f21c838daaa415d48bf39d68b9d9d2c7"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold canonic_exp, FLT_exp, FIX_exp.",
            "VernacExtend",
            "0ae2e9f16f522efe0487d515b255f60e4c08bde2"
        ],
        [
            "replace (ln_beta radix2 x - prec') with p by (unfold prec'; omega).",
            "VernacExtend",
            "fc0a0ef006ec0eb1257d0c8c8d8c7b7aff9579bb"
        ],
        [
            "apply Z.max_l.",
            "VernacExtend",
            "397548bdbbbf16dcf812c7c6271d50f8519ff7bc"
        ],
        [
            "unfold emin', emin.",
            "VernacExtend",
            "63684d054d9da28047df8b504f8ea0fb5c64b98d"
        ],
        [
            "red in prec_gt_0_; omega.",
            "VernacExtend",
            "d5dab93f8056283198d3a561eaaa85ddc796bdea"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (RND: round radix2 (FIX_exp p) Zrnd_odd x = round radix2 (FLT_exp emin' prec') Zrnd_odd x).",
            "VernacExtend",
            "695ac69ecfb119d353ce8086d58a54d590064c9e"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold round, scaled_mantissa.",
            "VernacExtend",
            "7469ad7d3b9aede0c8a3252000b6eff5c30abc4e"
        ],
        [
            "rewrite CANON.",
            "VernacExtend",
            "923fa6ee7d48473b971a16e398536f9025c37d61"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite RND.",
            "VernacExtend",
            "e2e41ae418d374ef518fcb74a5652b3b50c2954a"
        ],
        [
            "apply round_odd_flt.",
            "VernacExtend",
            "1ae56a93d9ef273ab702fe55a56ddc67d37aca1c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold prec'.",
            "VernacExtend",
            "43f496a05ff99d41a414418b63ad8d3f663c6e32"
        ],
        [
            "red in prec_gt_0_; omega.",
            "VernacExtend",
            "d5dab93f8056283198d3a561eaaa85ddc796bdea"
        ],
        [
            "unfold prec'.",
            "VernacExtend",
            "43f496a05ff99d41a414418b63ad8d3f663c6e32"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "unfold emin'.",
            "VernacExtend",
            "1ad493c044ed50a41d5abfd39e3ee726a61feb4d"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition int_round_odd (x: Z) (p: Z) := (if Z.eqb (x mod 2^p) 0 || Z.odd (x / 2^p) then x / 2^p else x / 2^p + 1) * 2^p.",
            "VernacDefinition",
            "3d7600c20e9acfdcb157cba1acbf1699db04e6e9"
        ],
        [
            "Lemma Zrnd_odd_int: forall n p, 0 <= p -> Zrnd_odd (Z2R n * bpow radix2 (-p)) * 2^p = int_round_odd n p.",
            "VernacStartTheoremProof",
            "61cd1331d7731f44205294ceb7283a4695f43417"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (0 < 2^p) by (apply (Zpower_gt_0 radix2); omega).",
            "VernacExtend",
            "aa74b3625dbe4a424ebc7bd8ff07ecd2cf19a0f1"
        ],
        [
            "assert (n = (n / 2^p) * 2^p + n mod 2^p) by (rewrite Z.mul_comm; apply Z.div_mod; omega).",
            "VernacExtend",
            "20e5eaa111642e5b0a2e1bb33686bd3cbd67b032"
        ],
        [
            "assert (0 <= n mod 2^p < 2^p) by (apply Z_mod_lt; omega).",
            "VernacExtend",
            "c9bd8287e3aec8151e243e1149b3e9e4bdb1d69c"
        ],
        [
            "unfold int_round_odd.",
            "VernacExtend",
            "cc940eff27d7a062ba92390d436863bb8c08c79d"
        ],
        [
            "set (q := n / 2^p) in *; set (r := n mod 2^p) in *.",
            "VernacExtend",
            "ad2fed4fada1ce8da80b9c89e4d1d9423daa54a0"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "pose proof (bpow_gt_0 radix2 (-p)).",
            "VernacExtend",
            "775d23ede20b8ec99ecd8a06a9db53aa2a5ab4b1"
        ],
        [
            "assert (bpow radix2 p * bpow radix2 (-p) = 1)%R.",
            "VernacExtend",
            "19d9ea981fe2764b6368f7972ea5b649ece2d238"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite <- bpow_plus.",
            "VernacExtend",
            "9ebeb3f5611fe78274a1e2e0131c7f7ed66e1cfc"
        ],
        [
            "replace (p + -p) with 0 by omega.",
            "VernacExtend",
            "16d6951625efc65bbcc05cd80fae502466603ff7"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Z2R n * bpow radix2 (-p) = Z2R q + Z2R r * bpow radix2 (-p))%R.",
            "VernacExtend",
            "233d6e7f416075a919a70ad986fb7681eeac0498"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "rewrite Z2R_plus, Z2R_mult.",
            "VernacExtend",
            "5ef8f14c94661888c05bdbeb6e8e22c8381a319e"
        ],
        [
            "change (Z2R (2^p)) with (Z2R (radix2^p)).",
            "VernacExtend",
            "6856dd1b85021f93eed0c81778815f2376474100"
        ],
        [
            "rewrite Z2R_Zpower by omega.",
            "VernacExtend",
            "3538edfbdcbfd9c66a75a10b3d798d1152734c39"
        ],
        [
            "ring_simplify.",
            "VernacExtend",
            "31578f61427562191ce5389abf97dbf9985ea04c"
        ],
        [
            "rewrite Rmult_assoc.",
            "VernacExtend",
            "323caa1eefcb937c18a66a7144c1e29b2c1a3e40"
        ],
        [
            "rewrite H4.",
            "VernacExtend",
            "fc5d011df68f7160e4669d129d2975825ac089bb"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (0 <= Z2R r < bpow radix2 p)%R.",
            "VernacExtend",
            "d7bb3e77793908a6e4b00c62aa22145edea24b48"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "change 0%R with (Z2R 0).",
            "VernacExtend",
            "0aca30e4eaa8ab73d6cf1051499c94fbbfc180f6"
        ],
        [
            "apply Z2R_le; omega.",
            "VernacExtend",
            "48e544720b256ddb4a7e9f49475d76732a118d7b"
        ],
        [
            "rewrite <- Z2R_Zpower by omega.",
            "VernacExtend",
            "bc3388d59814ca4d9994fae141ed9a4d348c5e2f"
        ],
        [
            "apply Z2R_lt; tauto.",
            "VernacExtend",
            "25ed43e0da9817f692f424524ae5379110fa51be"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (0 <= Z2R r * bpow radix2 (-p) < 1)%R.",
            "VernacExtend",
            "af8707c66cae12847c59a80e3e0da89987d62a65"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "generalize (bpow_gt_0 radix2 (-p)).",
            "VernacExtend",
            "2e834df8b1198219df05e63ed388449e4755bf34"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rmult_le_pos; lra.",
            "VernacExtend",
            "2443e77eaa3899fcc0dc3f297814b024361367ac"
        ],
        [
            "rewrite <- H4.",
            "VernacExtend",
            "15801069338f53d2cf64b6951fc88c5758e631f8"
        ],
        [
            "apply Rmult_lt_compat_r.",
            "VernacExtend",
            "e041593c57ec6470673cc705c01d215d230e0676"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Zfloor (Z2R n * bpow radix2 (-p)) = q).",
            "VernacExtend",
            "d133cd5f944f841ac0df928f555c5c2b517bb9ac"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply Zfloor_imp.",
            "VernacExtend",
            "9278ce7c32c530a2f8be72314e979fc619d4a028"
        ],
        [
            "rewrite H5.",
            "VernacExtend",
            "d39eba0f5559f57239c887c68680638084d28197"
        ],
        [
            "rewrite Z2R_plus.",
            "VernacExtend",
            "acce6601b0322c726f9b248c200708805f7120a8"
        ],
        [
            "change (Z2R 1) with 1%R.",
            "VernacExtend",
            "fe2cec7f231fc26dcae52d022907075eceed9326"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "unfold Zrnd_odd.",
            "VernacExtend",
            "f9b93684d423c7233c8d7582ba65c171d9fe1bc9"
        ],
        [
            "destruct Req_EM_T.",
            "VernacExtend",
            "51073d142b141058b2650aac3c9b30961b4d84a5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (Z2R r * bpow radix2 (-p) = 0)%R.",
            "VernacExtend",
            "3cb7f9ef8f987073cb66a4f75fd6711162824915"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite H8 in e.",
            "VernacExtend",
            "70dbe2f19e0b24c13dd5023c683167e4eb55e8f0"
        ],
        [
            "rewrite e in H5.",
            "VernacExtend",
            "67329c5424077a6a253b706840a0fde433ad760b"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply Rmult_integral in H9.",
            "VernacExtend",
            "4bc182d115cc72eb042e97be01ca0a421dc501ba"
        ],
        [
            "destruct H9; [ | lra ].",
            "VernacExtend",
            "df45bd19040f7393536601f78d74ba9edf337f2f"
        ],
        [
            "apply (eq_Z2R r 0) in H9.",
            "VernacExtend",
            "cf0358ab388123a5d7be00715040a36e830f60ca"
        ],
        [
            "apply <- Z.eqb_eq in H9.",
            "VernacExtend",
            "946ca4b75e0c7b5e6b4a84b13955a355df6a58d5"
        ],
        [
            "rewrite H9.",
            "VernacExtend",
            "7e513e390abfc88b77648f4c54df1434c5ffa9d3"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (Z2R r * bpow radix2 (-p) <> 0)%R.",
            "VernacExtend",
            "8d36818dd034d146680d801325dbca31f46ea27b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite H8 in n0.",
            "VernacExtend",
            "b8eb338a332354e72c21d0e2d96edc857b543d89"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (Z.eqb r 0) eqn:RZ.",
            "VernacExtend",
            "7e71e02630b7171f99aacf530503b41bcc03d388"
        ],
        [
            "apply Z.eqb_eq in RZ.",
            "VernacExtend",
            "a4098bb7dfea69c8758836f55738ab74ec328d06"
        ],
        [
            "rewrite RZ in H9.",
            "VernacExtend",
            "6d07cad44d08651253af26a4c309f5aef1062799"
        ],
        [
            "change (Z2R 0) with 0%R in H9.",
            "VernacExtend",
            "dc61437bffd52841b9d10ebaa7ac6298f887143f"
        ],
        [
            "rewrite Rmult_0_l in H9.",
            "VernacExtend",
            "19f3c93c85f9b87b7cf32ad34a9af5cb1401f6c7"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "rewrite Zceil_floor_neq by lra.",
            "VernacExtend",
            "770a2d9f956841f31e72c9b712559dfaefa6e759"
        ],
        [
            "rewrite H8.",
            "VernacExtend",
            "ef335154f8a1120928ddce71bc7a2456078d36bc"
        ],
        [
            "change Zeven with Z.even.",
            "VernacExtend",
            "33df79dbbd6f223e9b3e8dfb0a4c0df6e7954912"
        ],
        [
            "rewrite Zodd_even_bool.",
            "VernacExtend",
            "6a44fec092c4465c16b76c1a832a7dd7f82a2006"
        ],
        [
            "destruct (Z.even q); auto.",
            "VernacExtend",
            "fdc9ef2d947061567da169abed7eb7cb655f0ef3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma int_round_odd_le: forall p x y, 0 <= p -> x <= y -> int_round_odd x p <= int_round_odd y p.",
            "VernacStartTheoremProof",
            "6a1a5077955333ef7520aaf14263c9f642cd771c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Zrnd_odd (Z2R x * bpow radix2 (-p)) <= Zrnd_odd (Z2R y * bpow radix2 (-p))).",
            "VernacExtend",
            "9de1f3d0c3ffaaff010ba78abb340fbc996ac95f"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply Zrnd_le.",
            "VernacExtend",
            "40a015e9273d06e9e9e1204712ee76e014c94f7e"
        ],
        [
            "apply valid_rnd_odd.",
            "VernacExtend",
            "72466a70c924d9ac3bf4b4828b23dc0210738c32"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "apply Z2R_le; auto.",
            "VernacExtend",
            "7b1971a0b9305d2b635a8415b3ab7992a22fe4ab"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite <- ! Zrnd_odd_int by auto.",
            "VernacExtend",
            "4a03c5b2f410310d62efe1eda40368661ac45c82"
        ],
        [
            "apply Zmult_le_compat_r.",
            "VernacExtend",
            "f58b7ccb589950a24b866c403e0c7e458695106a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply (Zpower_ge_0 radix2).",
            "VernacExtend",
            "b534f4756c8a1ce37579c7b345b6d68fbc8eb757"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma int_round_odd_exact: forall p x, 0 <= p -> (2^p | x) -> int_round_odd x p = x.",
            "VernacStartTheoremProof",
            "daadfa82b0b96b18e38f284da84d9ba61a07df24"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold int_round_odd.",
            "VernacExtend",
            "cc940eff27d7a062ba92390d436863bb8c08c79d"
        ],
        [
            "apply Znumtheory.Zdivide_mod in H0.",
            "VernacExtend",
            "d62c8d57a9b1e00b41d3346d19b290bf1dc26fe4"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Z.mul_comm.",
            "VernacExtend",
            "088699fe7f894ededd3c93ab3a27f9d105f1ab84"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Z_div_exact_2.",
            "VernacExtend",
            "688cd9bdf348f1fcc5d93341eae5ac276fc2bdd1"
        ],
        [
            "apply Z.lt_gt.",
            "VernacExtend",
            "dc71d367ecfba7881ab9241fc30fdd62fa24e40e"
        ],
        [
            "apply (Zpower_gt_0 radix2).",
            "VernacExtend",
            "c39b903ed0c1c3b7f29fbae7d368f98e5b82a93d"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem BofZ_round_odd: forall x p, prec > 1 -> Z.abs x <= 2^emax - 2^(emax-prec) -> 0 <= p <= emax - prec -> 2^(prec + p + 1) <= Z.abs x -> BofZ x = BofZ (int_round_odd x p).",
            "VernacStartTheoremProof",
            "c5de54a0a5742922e9975cfc8c059606403f6498"
        ],
        [
            "intros x p PREC XRANGE PRANGE XGE.",
            "VernacExtend",
            "6907b2c198f8e51196441d70f65d2e9bca5ef162"
        ],
        [
            "assert (DIV: (2^p | 2^emax - 2^(emax - prec))).",
            "VernacExtend",
            "f8f4b728ba9f61a3dbe97779002069ff23aecaac"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite int_upper_bound_eq.",
            "VernacExtend",
            "fc2b91ec9bf534b31e54e931ec9b08e741ae176d"
        ],
        [
            "apply Z.divide_mul_r.",
            "VernacExtend",
            "3e751d33f4d825fcea96680f8d4908e2e2b353dd"
        ],
        [
            "exists (2^(emax - prec - p)).",
            "VernacExtend",
            "4b8cd5052d44289310ae1c6070c5c7484304dfa2"
        ],
        [
            "red in prec_gt_0_.",
            "VernacExtend",
            "4b29078a2865ccd92928eaceffc91659787acb4b"
        ],
        [
            "rewrite <- (Zpower_plus radix2) by omega.",
            "VernacExtend",
            "05151a82acdcd0296850844d2ad40b2e48f1c68d"
        ],
        [
            "f_equal; omega.",
            "VernacExtend",
            "3b812353131f9b9bebbd6410b3fa7c9d2e597ec3"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (YRANGE: Z.abs (int_round_odd x p) <= 2^emax - 2^(emax-prec)).",
            "VernacExtend",
            "446bef967dcc5514c88f5d5dcdab26092b9bff7b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply Z.abs_le.",
            "VernacExtend",
            "33dbfaa369722f1767f92e2774ecb2dd0d1c2398"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "replace (-(2^emax - 2^(emax-prec))) with (int_round_odd (-(2^emax - 2^(emax-prec))) p).",
            "VernacExtend",
            "66eb0ded4ab86762f92fdef466e78253a4d10391"
        ],
        [
            "apply int_round_odd_le; zify; omega.",
            "VernacExtend",
            "332414c21610dc758fc931edbcc9a72d08a0aeb6"
        ],
        [
            "apply int_round_odd_exact.",
            "VernacExtend",
            "8930311d7c3227777563b5e72dde1dcfbf4887d0"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply Z.divide_opp_r.",
            "VernacExtend",
            "0bb36874f41874b6bed41c63daec1512530f7555"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "replace (2^emax - 2^(emax-prec)) with (int_round_odd (2^emax - 2^(emax-prec)) p).",
            "VernacExtend",
            "91f561b99784042575ea2be333e95bf2888b0190"
        ],
        [
            "apply int_round_odd_le; zify; omega.",
            "VernacExtend",
            "332414c21610dc758fc931edbcc9a72d08a0aeb6"
        ],
        [
            "apply int_round_odd_exact.",
            "VernacExtend",
            "8930311d7c3227777563b5e72dde1dcfbf4887d0"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (BofZ_finite x XRANGE) as (X1 & X2 & X3).",
            "VernacExtend",
            "776555a9601668b6b4110c4821019233b3d31650"
        ],
        [
            "destruct (BofZ_finite (int_round_odd x p) YRANGE) as (Y1 & Y2 & Y3).",
            "VernacExtend",
            "7dcf80fe35b6df85fbf3ac367a3ae4d07332b43e"
        ],
        [
            "apply BofZ_finite_equal; auto.",
            "VernacExtend",
            "6148f4c3af46eca3aa705d2f960319a4052e2c2e"
        ],
        [
            "rewrite X1, Y1.",
            "VernacExtend",
            "82faf6fd489d4b33f3de6693a2c3033da612b687"
        ],
        [
            "assert (Z2R (int_round_odd x p) = round radix2 (FIX_exp p) Zrnd_odd (Z2R x)).",
            "VernacExtend",
            "5511eddd506c889dc0253e5258c9055a65eaabd5"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold round, scaled_mantissa, canonic_exp, FIX_exp.",
            "VernacExtend",
            "1cd5ea622ce4d762b4752d78e7d11e8bbd751bc2"
        ],
        [
            "rewrite <- Zrnd_odd_int by omega.",
            "VernacExtend",
            "593a0e6c44eb30e781e8a39f526984f06c73132f"
        ],
        [
            "unfold F2R; simpl.",
            "VernacExtend",
            "a8b73d273d1c692e5deb932d4bd557029927ed13"
        ],
        [
            "rewrite Z2R_mult.",
            "VernacExtend",
            "9df3e88fb03a8e1b32ba077432430323142e8b66"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply (Z2R_Zpower radix2).",
            "VernacExtend",
            "b895142347aa0259b23f3f4bed44cbe1109dbf57"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply round_odd_fix.",
            "VernacExtend",
            "df95a37f28cae98fa4b5df286eeecb98c9e9a8e2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite <- Z2R_Zpower.",
            "VernacExtend",
            "6a737b45852133a11ffa7a0af2881be74773d2b4"
        ],
        [
            "rewrite <- Z2R_abs.",
            "VernacExtend",
            "77629e87057563edf3f2c544c80c7822cbaa734b"
        ],
        [
            "apply Z2R_le; auto.",
            "VernacExtend",
            "7b1971a0b9305d2b635a8415b3ab7992a22fe4ab"
        ],
        [
            "red in prec_gt_0_; omega.",
            "VernacExtend",
            "d5dab93f8056283198d3a561eaaa85ddc796bdea"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma int_round_odd_shifts: forall x p, 0 <= p -> int_round_odd x p = Z.shiftl (if Z.eqb (x mod 2^p) 0 then Z.shiftr x p else Z.lor (Z.shiftr x p) 1) p.",
            "VernacStartTheoremProof",
            "0653e17f7f3ff7d12a3f4bdd7ae7ffbaf60aa87f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold int_round_odd.",
            "VernacExtend",
            "cc940eff27d7a062ba92390d436863bb8c08c79d"
        ],
        [
            "rewrite Z.shiftl_mul_pow2 by auto.",
            "VernacExtend",
            "b07b6ef434f5734030ad438c0ad430801ed65279"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite Z.shiftr_div_pow2 by auto.",
            "VernacExtend",
            "abb006d653429c2b72080a2e9785787e4cfe52df"
        ],
        [
            "destruct (x mod 2^p =? 0) eqn:E.",
            "VernacExtend",
            "7dea8750fe5a3fcac85d76d39c5217b7b5c1644f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (forall n, (if Z.odd n then n else n + 1) = Z.lor n 1).",
            "VernacExtend",
            "8c0c75562b80fe67bfb6ad0ddd771d918eba5e24"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct n; simpl; auto.",
            "VernacExtend",
            "1e3544c1db38cf9d3b82500db7d90f24bce9aeea"
        ],
        [
            "destruct p0; auto.",
            "VernacExtend",
            "d55d19bef25e930a9bcb9be13428d3613e1987d7"
        ],
        [
            "destruct p0; auto.",
            "VernacExtend",
            "d55d19bef25e930a9bcb9be13428d3613e1987d7"
        ],
        [
            "induction p0; auto.",
            "VernacExtend",
            "3bee550e40bce21e0c971a67cce3572089de2183"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma int_round_odd_bits: forall x y p, 0 <= p -> (forall i, 0 <= i < p -> Z.testbit y i = false) -> Z.testbit y p = (if Z.eqb (x mod 2^p) 0 then Z.testbit x p else true) -> (forall i, p < i -> Z.testbit y i = Z.testbit x i) -> int_round_odd x p = y.",
            "VernacStartTheoremProof",
            "ce0afa33c667f1d5c3d3ece491b985f213e9784a"
        ],
        [
            "intros until p; intros PPOS BELOW AT ABOVE.",
            "VernacExtend",
            "e9102c3fdf154fd871ed5f4babc011461d917608"
        ],
        [
            "rewrite int_round_odd_shifts by auto.",
            "VernacExtend",
            "101d4d72505fef6644592ae5f5a8600e36f522a4"
        ],
        [
            "apply Z.bits_inj'.",
            "VernacExtend",
            "eb4ca034bf0b17ebc50c7646a890b25ededaa693"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (Zcompare_spec n p); intros SPEC; inversion SPEC.",
            "VernacExtend",
            "20d9f20f402f65cb5d28f281bcf5aabf096666cb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite BELOW by auto.",
            "VernacExtend",
            "a1c12f6cd7f0c719fd7c30f78d3bd81c309a98c2"
        ],
        [
            "apply Z.shiftl_spec_low; auto.",
            "VernacExtend",
            "81c5a96a9ed9c91ddca549a288fa5912b9b87be9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst n.",
            "VernacExtend",
            "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
        ],
        [
            "rewrite AT.",
            "VernacExtend",
            "6f9c8bad46240bc1145ec678ee3335fe5566d221"
        ],
        [
            "rewrite Z.shiftl_spec_high by omega.",
            "VernacExtend",
            "5180b2f9d177b3bbd1982c13d6679987b35ed3e6"
        ],
        [
            "replace (p - p) with 0 by omega.",
            "VernacExtend",
            "1a026ef838903e90173384d5d0bf9a565d69d6fd"
        ],
        [
            "destruct (x mod 2^p =? 0).",
            "VernacExtend",
            "4c8d7840047e9cda2c11f5a506758b8cd50037c5"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite Z.shiftr_spec by omega.",
            "VernacExtend",
            "da85a618ea6dd62f78d448f4a7e1cfe84fdd237e"
        ],
        [
            "f_equal; omega.",
            "VernacExtend",
            "3b812353131f9b9bebbd6410b3fa7c9d2e597ec3"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite Z.lor_spec.",
            "VernacExtend",
            "75a6643c937d8dc0641f7afdbd97c3ffc0537068"
        ],
        [
            "apply orb_true_r.",
            "VernacExtend",
            "f6c982e3797841078d730c93c95d18e257302343"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite ABOVE by auto.",
            "VernacExtend",
            "9c9808448156fa2e059ee10e03461581fa33b490"
        ],
        [
            "rewrite Z.shiftl_spec_high by omega.",
            "VernacExtend",
            "5180b2f9d177b3bbd1982c13d6679987b35ed3e6"
        ],
        [
            "destruct (x mod 2^p =? 0).",
            "VernacExtend",
            "4c8d7840047e9cda2c11f5a506758b8cd50037c5"
        ],
        [
            "rewrite Z.shiftr_spec by omega.",
            "VernacExtend",
            "da85a618ea6dd62f78d448f4a7e1cfe84fdd237e"
        ],
        [
            "f_equal; omega.",
            "VernacExtend",
            "3b812353131f9b9bebbd6410b3fa7c9d2e597ec3"
        ],
        [
            "rewrite Z.lor_spec, Z.shiftr_spec by omega.",
            "VernacExtend",
            "dbe052ec7b8239c96064c97615098df8cc12d3f4"
        ],
        [
            "change 1 with (Z.ones 1).",
            "VernacExtend",
            "1454a02332ad65d4a6c02fd825eab681fdc5992a"
        ],
        [
            "rewrite Z.ones_spec_high by omega.",
            "VernacExtend",
            "7664085c8ba229471283c57fe174e09f8aa5350d"
        ],
        [
            "rewrite orb_false_r.",
            "VernacExtend",
            "1f347086f7a141d5c22c1549eee172fd8a72e833"
        ],
        [
            "f_equal; omega.",
            "VernacExtend",
            "3b812353131f9b9bebbd6410b3fa7c9d2e597ec3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ZofB (f: binary_float): option Z := match f with | B754_finite _ _ s m (Zpos e) _ => Some (cond_Zopp s (Zpos m) * Z.pow_pos radix2 e)%Z | B754_finite _ _ s m 0 _ => Some (cond_Zopp s (Zpos m)) | B754_finite _ _ s m (Zneg e) _ => Some (cond_Zopp s (Zpos m / Z.pow_pos radix2 e))%Z | B754_zero _ _ _ => Some 0%Z | _ => None end.",
            "VernacDefinition",
            "b3f678ad5cd5b435a50e5ca83bdef92725946254"
        ],
        [
            "Theorem ZofB_correct: forall f, ZofB f = if is_finite _ _ f then Some (Ztrunc (B2R _ _ f)) else None.",
            "VernacStartTheoremProof",
            "8c4770eda83fb33bcf4ea74c97a71cfd49133c72"
        ],
        [
            "destruct f; simpl; auto.",
            "VernacExtend",
            "b4245a91e7febf580658d25d08484d577ee31148"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply (Ztrunc_Z2R 0).",
            "VernacExtend",
            "f2dca00f6438321da92a0cb199732aa8776ab401"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct e; f_equal.",
            "VernacExtend",
            "4db9c489a52d1f787290650ac5b621332e4951e1"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold F2R; simpl.",
            "VernacExtend",
            "a8b73d273d1c692e5deb932d4bd557029927ed13"
        ],
        [
            "rewrite Rmult_1_r.",
            "VernacExtend",
            "d41d18f77f80ae8595148d0386b68549f3d406cf"
        ],
        [
            "rewrite Ztrunc_Z2R.",
            "VernacExtend",
            "5d88ff3ba444a5e6845eb9bf9b6605e2ebc143e5"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold F2R; simpl.",
            "VernacExtend",
            "a8b73d273d1c692e5deb932d4bd557029927ed13"
        ],
        [
            "rewrite <- Z2R_mult.",
            "VernacExtend",
            "4bfcef9c6d8659a267de59ca9647b2d107af9b2a"
        ],
        [
            "rewrite Ztrunc_Z2R.",
            "VernacExtend",
            "5d88ff3ba444a5e6845eb9bf9b6605e2ebc143e5"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold F2R; simpl.",
            "VernacExtend",
            "a8b73d273d1c692e5deb932d4bd557029927ed13"
        ],
        [
            "rewrite Z2R_cond_Zopp.",
            "VernacExtend",
            "110412e03683db51cd48013c77eb85bc791a33a4"
        ],
        [
            "rewrite <- cond_Ropp_mult_l.",
            "VernacExtend",
            "6cd8ac705a65c5574c9971c51de4f4b58ae0aadb"
        ],
        [
            "assert (EQ: forall x, Ztrunc (cond_Ropp b x) = cond_Zopp b (Ztrunc x)).",
            "VernacExtend",
            "ab859f27751b520758431c57ab7aca7e911e1044"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct b; simpl; auto.",
            "VernacExtend",
            "1e97a3a68faccf3ab7e0dc204d798c19287fa21f"
        ],
        [
            "apply Ztrunc_opp.",
            "VernacExtend",
            "0eee5d462e4962d393a76ffed66f6ea3b29ef486"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite EQ.",
            "VernacExtend",
            "359c5e196f83a6afbd9ede635bddbf545fd1eb82"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "generalize (Zpower_pos_gt_0 2 p (eq_refl _)); intros.",
            "VernacExtend",
            "611680fbd9047493cbb191c45846163f9a7383f6"
        ],
        [
            "rewrite Ztrunc_floor.",
            "VernacExtend",
            "eacc44db66d8d93dfd78f0c8e448580e58066cdb"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Zfloor_div.",
            "VernacExtend",
            "2211ba557e395d0540b64fdefc231bc4c46fa6c3"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply Rmult_le_pos.",
            "VernacExtend",
            "e03207c3cef85471384dc0906485b056bc83a80a"
        ],
        [
            "apply (Z2R_le 0).",
            "VernacExtend",
            "792cf72fd89e326cb413fb5d3012c5ce541d5b09"
        ],
        [
            "compute; congruence.",
            "VernacExtend",
            "1a58589b5617513e16966c72a14aa8b5277b9c28"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "apply Rinv_0_lt_compat.",
            "VernacExtend",
            "d7abdc8c3031a09ca2712c9563d7ecf89b4d477e"
        ],
        [
            "apply (Z2R_lt 0).",
            "VernacExtend",
            "5d86f7673f53b2461aeeacbee1ca5bf7e694182e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark Ztrunc_range_pos: forall x, 0 < Ztrunc x -> (Z2R (Ztrunc x) <= x < Z2R (Ztrunc x + 1)%Z)%R.",
            "VernacStartTheoremProof",
            "b569e81b80c27586ae398f935990c3594a8891ad"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite Ztrunc_floor.",
            "VernacExtend",
            "eacc44db66d8d93dfd78f0c8e448580e58066cdb"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Zfloor_lb.",
            "VernacExtend",
            "d4214e2694c0df6f781b41a07d34ed64a1ccfe1d"
        ],
        [
            "rewrite Z2R_plus.",
            "VernacExtend",
            "acce6601b0322c726f9b248c200708805f7120a8"
        ],
        [
            "apply Zfloor_ub.",
            "VernacExtend",
            "b2acdd0c25ad7134d5a21e6d1e218ec0ac87b671"
        ],
        [
            "generalize (Rle_bool_spec 0%R x).",
            "VernacExtend",
            "f7e22f9f4500e1c779d8c723fcd0692ecf3299d7"
        ],
        [
            "intros RLE; inversion RLE; subst; clear RLE.",
            "VernacExtend",
            "5d790272b588ce79afed7e8a466e392839700710"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite Ztrunc_ceil in H by lra.",
            "VernacExtend",
            "c83479ef650ce4bc897df5e3bec0664eae5c596b"
        ],
        [
            "unfold Zceil in H.",
            "VernacExtend",
            "e56935e47395f1cf771f5b116b94ce993fa4285e"
        ],
        [
            "assert (-x < 0)%R.",
            "VernacExtend",
            "e4f94183443e66996b0020d308dc53c0ca515597"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply Rlt_le_trans with (Z2R (Zfloor (-x)) + 1)%R.",
            "VernacExtend",
            "2fb7323976b7575eabf88f0f84b2294e3adfacda"
        ],
        [
            "apply Zfloor_ub.",
            "VernacExtend",
            "b2acdd0c25ad7134d5a21e6d1e218ec0ac87b671"
        ],
        [
            "change 0%R with (Z2R 0).",
            "VernacExtend",
            "0aca30e4eaa8ab73d6cf1051499c94fbbfc180f6"
        ],
        [
            "change 1%R with (Z2R 1).",
            "VernacExtend",
            "70dd8f0fc2009fb1b2dbc2766a6144484b011676"
        ],
        [
            "rewrite <- Z2R_plus.",
            "VernacExtend",
            "34b18f1df9cc7268c70f355324b3f0e0fcc9644f"
        ],
        [
            "apply Z2R_le.",
            "VernacExtend",
            "b1047db1ca8ec0d49de6b93d8ab59e7c07265bfb"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark Ztrunc_range_zero: forall x, Ztrunc x = 0 -> (-1 < x < 1)%R.",
            "VernacStartTheoremProof",
            "ff5a21b49634234b6d6178cecf24454f7638f25b"
        ],
        [
            "intros; generalize (Rle_bool_spec 0%R x).",
            "VernacExtend",
            "d065dc6262ff095d650af6cd2b806436d43bb621"
        ],
        [
            "intros RLE; inversion RLE; subst; clear RLE.",
            "VernacExtend",
            "5d790272b588ce79afed7e8a466e392839700710"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Ztrunc_floor in H by auto.",
            "VernacExtend",
            "cb093f999aad77b718a1615c20d01565fc64f1da"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply Rlt_le_trans with 0%R; auto.",
            "VernacExtend",
            "73f5142f8adeec1254804f8db2c1e6f4864e9191"
        ],
        [
            "rewrite <- Ropp_0.",
            "VernacExtend",
            "9b57276282263b89d6671472ad672c5763b57b55"
        ],
        [
            "apply Ropp_lt_contravar.",
            "VernacExtend",
            "d8e11ebac93d435105a924a8c0c7fe0b21db4797"
        ],
        [
            "apply Rlt_0_1.",
            "VernacExtend",
            "c3f675388bf844e0740197fd71afa66e5eef091d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "replace 1%R with (Z2R (Zfloor x) + 1)%R.",
            "VernacExtend",
            "48c2cf5fe9769e54cb57ac9cf96e4758e8b1d7cd"
        ],
        [
            "apply Zfloor_ub.",
            "VernacExtend",
            "b2acdd0c25ad7134d5a21e6d1e218ec0ac87b671"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Rplus_0_l.",
            "VernacExtend",
            "cf8d4ade30d9c7c3114ecbd301b9ca2ddc4870b1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Ztrunc_ceil in H by (apply Rlt_le; auto).",
            "VernacExtend",
            "bf5c35b03cc0243e24252f742e0b3e33ebdc59a4"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply (Ropp_lt_cancel (-(1))).",
            "VernacExtend",
            "3d861f72dfca8c9b79d53b2fa43d123ef53ca477"
        ],
        [
            "rewrite Ropp_involutive.",
            "VernacExtend",
            "ba0ab440a50f656f08837503f0228b68c9acdf87"
        ],
        [
            "replace 1%R with (Z2R (Zfloor (-x)) + 1)%R.",
            "VernacExtend",
            "dbf6600b28dd917a535bd6d7b1969a61623758a0"
        ],
        [
            "apply Zfloor_ub.",
            "VernacExtend",
            "b2acdd0c25ad7134d5a21e6d1e218ec0ac87b671"
        ],
        [
            "unfold Zceil in H.",
            "VernacExtend",
            "e56935e47395f1cf771f5b116b94ce993fa4285e"
        ],
        [
            "replace (Zfloor (-x)) with 0 by omega.",
            "VernacExtend",
            "2333540af28ad00cd406103275f71e8838bca283"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Rplus_0_l.",
            "VernacExtend",
            "cf8d4ade30d9c7c3114ecbd301b9ca2ddc4870b1"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply Rlt_le_trans with 0%R; auto.",
            "VernacExtend",
            "73f5142f8adeec1254804f8db2c1e6f4864e9191"
        ],
        [
            "apply Rle_0_1.",
            "VernacExtend",
            "996937b485ab0b0ab64abfd08ec0786445ae12e3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ZofB_range_pos: forall f n, ZofB f = Some n -> 0 < n -> (Z2R n <= B2R _ _ f < Z2R (n + 1)%Z)%R.",
            "VernacStartTheoremProof",
            "df12797ea43ec357cbce436cbee88d4e9b9990c1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite ZofB_correct in H.",
            "VernacExtend",
            "d351f9ccea61974a9dfe55bb8c1432c40ffaa8cc"
        ],
        [
            "destruct (is_finite prec emax f) eqn:FIN; inversion H.",
            "VernacExtend",
            "52e4cf9b71158b4766f6e6bf575378525fba5c4a"
        ],
        [
            "apply Ztrunc_range_pos.",
            "VernacExtend",
            "2bd8ae7ae8563bbe060af6dc42bcc4321890dce4"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ZofB_range_neg: forall f n, ZofB f = Some n -> n < 0 -> (Z2R (n - 1)%Z < B2R _ _ f <= Z2R n)%R.",
            "VernacStartTheoremProof",
            "074f593aef8dd351dd9240a7c2963f9ef1d62d07"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite ZofB_correct in H.",
            "VernacExtend",
            "d351f9ccea61974a9dfe55bb8c1432c40ffaa8cc"
        ],
        [
            "destruct (is_finite prec emax f) eqn:FIN; inversion H.",
            "VernacExtend",
            "52e4cf9b71158b4766f6e6bf575378525fba5c4a"
        ],
        [
            "set (x := B2R prec emax f) in *.",
            "VernacExtend",
            "b2833a353a76860aeab9cba4c85fdbe84ab5bfe5"
        ],
        [
            "set (y := (-x)%R).",
            "VernacExtend",
            "17d1c3fc6fd18aca3ea76ac140f4f81fee885e24"
        ],
        [
            "assert (A: (Z2R (Ztrunc y) <= y < Z2R (Ztrunc y + 1)%Z)%R).",
            "VernacExtend",
            "5234b234ad962bc48d1f85e77c6fcfd9448f6b83"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply Ztrunc_range_pos.",
            "VernacExtend",
            "2bd8ae7ae8563bbe060af6dc42bcc4321890dce4"
        ],
        [
            "unfold y.",
            "VernacExtend",
            "29a8f7868cdd745151dd20abb7f3c232bfc6cb70"
        ],
        [
            "rewrite Ztrunc_opp.",
            "VernacExtend",
            "29f2d2fa89b52b72b65faf9ac8af6455bda883a2"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct A as [B C].",
            "VernacExtend",
            "63a875cd5b8768e69a1c3a849909b1ae3485f2a7"
        ],
        [
            "unfold y in B, C.",
            "VernacExtend",
            "f12d9b928ba74d0e59a4a8b8dc989d3b1dada0f6"
        ],
        [
            "rewrite Ztrunc_opp in B, C.",
            "VernacExtend",
            "81c1aadc014fcb9ea1ffa5e71c50ffc9491d0f11"
        ],
        [
            "replace (- Ztrunc x + 1) with (- (Ztrunc x - 1)) in C by omega.",
            "VernacExtend",
            "d842aa640bc1d3a7a63e598a15cdbe1bbcb60159"
        ],
        [
            "rewrite Z2R_opp in B, C.",
            "VernacExtend",
            "5e223084756a7b183788a0b10ce5d94688a8df61"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ZofB_range_zero: forall f, ZofB f = Some 0 -> (-1 < B2R _ _ f < 1)%R.",
            "VernacStartTheoremProof",
            "dadfcced1a88dfc1f055514407b5135e80d094ab"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite ZofB_correct in H.",
            "VernacExtend",
            "d351f9ccea61974a9dfe55bb8c1432c40ffaa8cc"
        ],
        [
            "destruct (is_finite prec emax f) eqn:FIN; inversion H.",
            "VernacExtend",
            "52e4cf9b71158b4766f6e6bf575378525fba5c4a"
        ],
        [
            "apply Ztrunc_range_zero.",
            "VernacExtend",
            "1252cfa9ece2cd4362c2899544d69361845d8c9f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ZofB_range_nonneg: forall f n, ZofB f = Some n -> 0 <= n -> (-1 < B2R _ _ f < Z2R (n + 1)%Z)%R.",
            "VernacStartTheoremProof",
            "b706507a50f68b369cac934499ff5baf3e988516"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (Z.eq_dec n 0).",
            "VernacExtend",
            "87624070a35063114ba6b457e8395250ac53671b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst n.",
            "VernacExtend",
            "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
        ],
        [
            "apply ZofB_range_zero.",
            "VernacExtend",
            "cbf2a222a1f07285e46a8bf2b54ccfbe94dbefe1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (ZofB_range_pos f n) as (A & B).",
            "VernacExtend",
            "f8e6035b6109e0ffc3e98382cacf6ba4c8c88407"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply Rlt_le_trans with (Z2R 0).",
            "VernacExtend",
            "8b60f158d63073c14652b0d7c059de51458311ee"
        ],
        [
            "simpl; lra.",
            "VernacExtend",
            "b22406fbb998570d453f079c9a4bac1d9345f3ae"
        ],
        [
            "apply Rle_trans with (Z2R n); auto.",
            "VernacExtend",
            "608074d99347e840b08900d1c7173fbee937f148"
        ],
        [
            "apply Z2R_le; auto.",
            "VernacExtend",
            "7b1971a0b9305d2b635a8415b3ab7992a22fe4ab"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ZofBofZ_exact: forall n, integer_representable n -> ZofB (BofZ n) = Some n.",
            "VernacStartTheoremProof",
            "9c960d4c44cd81314955ff3c261641dfdd00a9fa"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (BofZ_representable n H) as (A & B & C).",
            "VernacExtend",
            "2687aa4c8462403bef8f0be6305a4487c1af0333"
        ],
        [
            "rewrite ZofB_correct.",
            "VernacExtend",
            "f235447f3132d1595b6733ad61da470b6a5cec01"
        ],
        [
            "rewrite A, B.",
            "VernacExtend",
            "ed436c0161d05825459279a9a09c231e66e7c5a2"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply Ztrunc_Z2R.",
            "VernacExtend",
            "72f94e4e634180fe6d572f9481360b75ad36203f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark Zfloor_minus: forall x n, Zfloor (x - Z2R n) = Zfloor x - n.",
            "VernacStartTheoremProof",
            "28fe8563880e87b7a697015748b1184b8cda040f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Zfloor_imp.",
            "VernacExtend",
            "9278ce7c32c530a2f8be72314e979fc619d4a028"
        ],
        [
            "replace (Zfloor x - n + 1) with ((Zfloor x + 1) - n) by omega.",
            "VernacExtend",
            "a7fe6aa6893769f23d5a52eaba18dab12ececd03"
        ],
        [
            "rewrite ! Z2R_minus.",
            "VernacExtend",
            "5b324c2fa3f0269d410db160bac27ec81c42adef"
        ],
        [
            "unfold Rminus.",
            "VernacExtend",
            "be913ef3bb9103a3081d46d811769f83edb6f7a5"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rplus_le_compat_r.",
            "VernacExtend",
            "5ca7acb5e67c7d7a5b6143fd11bc1e75c3e361e4"
        ],
        [
            "apply Zfloor_lb.",
            "VernacExtend",
            "d4214e2694c0df6f781b41a07d34ed64a1ccfe1d"
        ],
        [
            "apply Rplus_lt_compat_r.",
            "VernacExtend",
            "8ca3e9c0f7e7327fd8e0145cec0673e72652d996"
        ],
        [
            "rewrite Z2R_plus.",
            "VernacExtend",
            "acce6601b0322c726f9b248c200708805f7120a8"
        ],
        [
            "apply Zfloor_ub.",
            "VernacExtend",
            "b2acdd0c25ad7134d5a21e6d1e218ec0ac87b671"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ZofB_minus: forall minus_nan m f p q, ZofB f = Some p -> 0 <= p < 2*q -> q <= 2^prec -> (Z2R q <= B2R _ _ f)%R -> ZofB (Bminus _ _ _ Hmax minus_nan m f (BofZ q)) = Some (p - q).",
            "VernacStartTheoremProof",
            "12b5aaafa600448354a3972e42a3ff97426af817"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Q: -2^prec <= q <= 2^prec).",
            "VernacExtend",
            "b710040264440245347491814cb0713f4bd005d5"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "generalize (Zpower_ge_0 radix2 prec); simpl; omega.",
            "VernacExtend",
            "10826ececbc6c4e432625eba2fee800793086fdd"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (RANGE: (-1 < B2R _ _ f < Z2R (p + 1)%Z)%R) by (apply ZofB_range_nonneg; auto; omega).",
            "VernacExtend",
            "9fc1b9b843f42ba65ce805213f4ca9b15c3a04cd"
        ],
        [
            "rewrite ZofB_correct in H.",
            "VernacExtend",
            "d351f9ccea61974a9dfe55bb8c1432c40ffaa8cc"
        ],
        [
            "destruct (is_finite prec emax f) eqn:FIN; try discriminate.",
            "VernacExtend",
            "fb2806e931d14a9c1e0da4ec9ffff1dc49983e98"
        ],
        [
            "assert (PQ2: (Z2R (p + 1) <= Z2R q * 2)%R).",
            "VernacExtend",
            "0811e42bcffb29f8fc8bfd0bf1b504c94bdbd84c"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "change 2%R with (Z2R 2).",
            "VernacExtend",
            "1130fc71e1344d754b49116cb28f5a8ef0e6e9ae"
        ],
        [
            "rewrite <- Z2R_mult.",
            "VernacExtend",
            "4bfcef9c6d8659a267de59ca9647b2d107af9b2a"
        ],
        [
            "apply Z2R_le.",
            "VernacExtend",
            "b1047db1ca8ec0d49de6b93d8ab59e7c07265bfb"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (EXACT: round radix2 fexp (round_mode m) (B2R _ _ f - Z2R q)%R = (B2R _ _ f - Z2R q)%R).",
            "VernacExtend",
            "c96089bb20878efcc1454f984665001320bf6fb6"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply round_generic.",
            "VernacExtend",
            "329c42b8a825480836d8d91cbeb7ff485a68ba31"
        ],
        [
            "apply valid_rnd_round_mode.",
            "VernacExtend",
            "20b08e148269eae05657e863e427e37c03e032b6"
        ],
        [
            "apply sterbenz_aux.",
            "VernacExtend",
            "8539d2854a1f8d416d6e56d2407d0281c1a38b54"
        ],
        [
            "apply FLT_exp_monotone.",
            "VernacExtend",
            "2420742b3927671bc64f99c4eb789cac20eadf6b"
        ],
        [
            "apply generic_format_B2R.",
            "VernacExtend",
            "17746e2c3cda8dfb94931be74eb7b5e284b2058f"
        ],
        [
            "apply integer_representable_n.",
            "VernacExtend",
            "82606dabf765e6367de334ded4cc7646db4df04e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (BofZ_exact q Q) as (A & B & C).",
            "VernacExtend",
            "c5ca19099b14b862d2fcbbb146a212a6d587b574"
        ],
        [
            "generalize (Bminus_correct _ _ _ Hmax minus_nan m f (BofZ q) FIN B).",
            "VernacExtend",
            "8f83e99f6afd015b1f2e1a9d590edb30add0b64e"
        ],
        [
            "rewrite Rlt_bool_true.",
            "VernacExtend",
            "31cd82492c96b4dc35f8c36f967bc8802a2bc6ba"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "fold emin; fold fexp.",
            "VernacExtend",
            "e902875dc03cf15abcd21a62d61e38945c341d5f"
        ],
        [
            "intros (D & E & F).",
            "VernacExtend",
            "d230d9ba37af16bdf8f2cedfe239d8f00ccf2f59"
        ],
        [
            "rewrite ZofB_correct.",
            "VernacExtend",
            "f235447f3132d1595b6733ad61da470b6a5cec01"
        ],
        [
            "rewrite E.",
            "VernacExtend",
            "304079e57d3d6c0912193a26e70d779c9e1768b9"
        ],
        [
            "rewrite D.",
            "VernacExtend",
            "c8b2ecfe60096f3f4842362d970cc94fbb2c0ef5"
        ],
        [
            "rewrite A.",
            "VernacExtend",
            "66a3aec75a717b72a3c9a20459f4dabe8d0df2c1"
        ],
        [
            "rewrite EXACT.",
            "VernacExtend",
            "ad0eba26fa3e861bb69e40f58424b51d92265a26"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite ! Ztrunc_floor.",
            "VernacExtend",
            "605fe9a7ac91bcc60084c75e58936129414779c5"
        ],
        [
            "apply Zfloor_minus.",
            "VernacExtend",
            "f3e34b7c8e5b22a286a79c7de1f090c9bb2edd62"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite A.",
            "VernacExtend",
            "66a3aec75a717b72a3c9a20459f4dabe8d0df2c1"
        ],
        [
            "fold emin; fold fexp.",
            "VernacExtend",
            "e902875dc03cf15abcd21a62d61e38945c341d5f"
        ],
        [
            "rewrite EXACT.",
            "VernacExtend",
            "ad0eba26fa3e861bb69e40f58424b51d92265a26"
        ],
        [
            "apply Rle_lt_trans with (bpow radix2 prec).",
            "VernacExtend",
            "595367338c13fdb3c867cf7a260de689af6a9384"
        ],
        [
            "apply Rle_trans with (Z2R q).",
            "VernacExtend",
            "9af95b4d855379d556e801f2f883e0e3f0c617c4"
        ],
        [
            "apply Rabs_le.",
            "VernacExtend",
            "56e5fa0041a92960aae82921a26cdcceba103730"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "rewrite <- Z2R_Zpower.",
            "VernacExtend",
            "6a737b45852133a11ffa7a0af2881be74773d2b4"
        ],
        [
            "apply Z2R_le; auto.",
            "VernacExtend",
            "7b1971a0b9305d2b635a8415b3ab7992a22fe4ab"
        ],
        [
            "red in prec_gt_0_; omega.",
            "VernacExtend",
            "d5dab93f8056283198d3a561eaaa85ddc796bdea"
        ],
        [
            "apply bpow_lt.",
            "VernacExtend",
            "45b51ee535829682305d615af418ef00162d772b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ZofB_range (f: binary_float) (zmin zmax: Z): option Z := match ZofB f with | None => None | Some z => if Z.leb zmin z && Z.leb z zmax then Some z else None end.",
            "VernacDefinition",
            "5283f42ccdcefa356a5e0bff66d54630008d3a7e"
        ],
        [
            "Theorem ZofB_range_correct: forall f min max, let n := Ztrunc (B2R _ _ f) in ZofB_range f min max = if is_finite _ _ f && Z.leb min n && Z.leb n max then Some n else None.",
            "VernacStartTheoremProof",
            "ee5e3e83ce7c09ebdb7a3385da825b9a2702a835"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold ZofB_range.",
            "VernacExtend",
            "2b1055af8514c60dfc2cef737166e86540a1b2d0"
        ],
        [
            "rewrite ZofB_correct.",
            "VernacExtend",
            "f235447f3132d1595b6733ad61da470b6a5cec01"
        ],
        [
            "fold n.",
            "VernacExtend",
            "05e31e9ea51726fb4913849b5a85b4f7c49fb25b"
        ],
        [
            "destruct (is_finite prec emax f); auto.",
            "VernacExtend",
            "7bde57d80b34f22ed5925657849ea42d01c05232"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ZofB_range_inversion: forall f min max n, ZofB_range f min max = Some n -> min <= n /\\ n <= max /\\ ZofB f = Some n.",
            "VernacStartTheoremProof",
            "e4f395cafde45bd5d056eea3a4103c7313f75c91"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite ZofB_range_correct in H.",
            "VernacExtend",
            "14a9cbb904d834c559552e427efc464e97b3c8b3"
        ],
        [
            "rewrite ZofB_correct.",
            "VernacExtend",
            "f235447f3132d1595b6733ad61da470b6a5cec01"
        ],
        [
            "destruct (is_finite prec emax f); try discriminate.",
            "VernacExtend",
            "a216cd46fec413d42862f93720bffd194ebe6e24"
        ],
        [
            "set (n1 := Ztrunc (B2R _ _ f)) in *.",
            "VernacExtend",
            "378491abd79ef5fadfc93fc4e7c843c517492efb"
        ],
        [
            "destruct (min <=? n1) eqn:MIN; try discriminate.",
            "VernacExtend",
            "26ee26c82c48946b3fd638c8b38a192b45966b80"
        ],
        [
            "destruct (n1 <=? max) eqn:MAX; try discriminate.",
            "VernacExtend",
            "8a780da462112313a67b0ec4662b89424ee1d1eb"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "subst n.",
            "VernacExtend",
            "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Zle_bool_imp_le; auto.",
            "VernacExtend",
            "ebefbe884682f722066267039a628c5ef30c3000"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Zle_bool_imp_le; auto.",
            "VernacExtend",
            "ebefbe884682f722066267039a628c5ef30c3000"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ZofB_range_minus: forall minus_nan m f p q, ZofB_range f 0 (2 * q - 1) = Some p -> q <= 2^prec -> (Z2R q <= B2R _ _ f)%R -> ZofB_range (Bminus _ _ _ Hmax minus_nan m f (BofZ q)) (-q) (q - 1) = Some (p - q).",
            "VernacStartTheoremProof",
            "3eb24a215ab19e1a03588b70bfffa04ad62e999d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (ZofB_range_inversion _ _ _ _ H) as (A & B & C).",
            "VernacExtend",
            "cc6e908e29f28ad32bd98e52c4c93233a9aa3277"
        ],
        [
            "set (f' := Bminus prec emax prec_gt_0_ Hmax minus_nan m f (BofZ q)).",
            "VernacExtend",
            "36ad55f87ebb91aecb5acbb42311c1c7ce7005f0"
        ],
        [
            "assert (D: ZofB f' = Some (p - q)).",
            "VernacExtend",
            "4d794c5268ae4a108ecb5cb3008cf072aabb8e64"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply ZofB_minus.",
            "VernacExtend",
            "4d2b7cb40e3c85c6c87a5ea1b8f7f5c3e429ef8c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "unfold ZofB_range.",
            "VernacExtend",
            "2b1055af8514c60dfc2cef737166e86540a1b2d0"
        ],
        [
            "rewrite D.",
            "VernacExtend",
            "c8b2ecfe60096f3f4842362d970cc94fbb2c0ef5"
        ],
        [
            "rewrite Zle_bool_true by omega.",
            "VernacExtend",
            "7e7ca507a6f03643dd10575bba3ce145cdf123cf"
        ],
        [
            "rewrite Zle_bool_true by omega.",
            "VernacExtend",
            "7e7ca507a6f03643dd10575bba3ce145cdf123cf"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Bplus_commut: forall plus_nan mode (x y: binary_float), plus_nan x y = plus_nan y x -> Bplus _ _ _ Hmax plus_nan mode x y = Bplus _ _ _ Hmax plus_nan mode y x.",
            "VernacStartTheoremProof",
            "e438d1ad0b89ea47ece379b45b24995bf95a28b3"
        ],
        [
            "intros until y; intros NAN.",
            "VernacExtend",
            "2c4132b75063cd1804d5aa960c4e73f23d2abf82"
        ],
        [
            "pose proof (Bplus_correct _ _ _ Hmax plus_nan mode x y).",
            "VernacExtend",
            "dee8a6d2e5a9862e253cfba10365b57a7d6fac65"
        ],
        [
            "pose proof (Bplus_correct _ _ _ Hmax plus_nan mode y x).",
            "VernacExtend",
            "7e5d6d54cf750b43c209f5987bc8a2115b95fc92"
        ],
        [
            "unfold Bplus in *; destruct x; destruct y; auto.",
            "VernacExtend",
            "7b8ffb296dc8ced0590e79c974801daad8fa13bc"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite (eqb_sym b0 b).",
            "VernacExtend",
            "865a7b57f50c7d66de630dfc5ee4aec94454eead"
        ],
        [
            "destruct (eqb b b0) eqn:EQB; auto.",
            "VernacExtend",
            "5bb04cb6cee57b75930c3408edc60219450f6284"
        ],
        [
            "f_equal; apply eqb_prop; auto.",
            "VernacExtend",
            "9a553c0c4e01d59edf4b6d7c97984ffdc2976763"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite NAN; auto.",
            "VernacExtend",
            "e0f67b44b7e188b3da08afbd997d077e59e5e606"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite (eqb_sym b0 b).",
            "VernacExtend",
            "865a7b57f50c7d66de630dfc5ee4aec94454eead"
        ],
        [
            "destruct (eqb b b0) eqn:EQB.",
            "VernacExtend",
            "cb32b2dfe428a376007ea71fccfead55c10d1d81"
        ],
        [
            "f_equal; apply eqb_prop; auto.",
            "VernacExtend",
            "9a553c0c4e01d59edf4b6d7c97984ffdc2976763"
        ],
        [
            "rewrite NAN; auto.",
            "VernacExtend",
            "e0f67b44b7e188b3da08afbd997d077e59e5e606"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite NAN; auto.",
            "VernacExtend",
            "e0f67b44b7e188b3da08afbd997d077e59e5e606"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite NAN; auto.",
            "VernacExtend",
            "e0f67b44b7e188b3da08afbd997d077e59e5e606"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite NAN; auto.",
            "VernacExtend",
            "e0f67b44b7e188b3da08afbd997d077e59e5e606"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite NAN; auto.",
            "VernacExtend",
            "e0f67b44b7e188b3da08afbd997d077e59e5e606"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite NAN; auto.",
            "VernacExtend",
            "e0f67b44b7e188b3da08afbd997d077e59e5e606"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite NAN; auto.",
            "VernacExtend",
            "e0f67b44b7e188b3da08afbd997d077e59e5e606"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "generalize (H (eq_refl _) (eq_refl _)); clear H.",
            "VernacExtend",
            "60def151cfd42d1ea2636c4d1602f18bcf87c061"
        ],
        [
            "generalize (H0 (eq_refl _) (eq_refl _)); clear H0.",
            "VernacExtend",
            "f22f4ec5c31397ac6a7e1b9340e154ae0f04bb14"
        ],
        [
            "fold emin.",
            "VernacExtend",
            "94549234de4174a672fa30174ed7986508293ed8"
        ],
        [
            "fold fexp.",
            "VernacExtend",
            "e9f391a0c2e1b071ddb032b3338a36259e46f252"
        ],
        [
            "set (x := B754_finite prec emax b0 m0 e1 e2).",
            "VernacExtend",
            "69952a456db410748a3e85066a5e6d2d1998b4fb"
        ],
        [
            "set (rx := B2R _ _ x).",
            "VernacExtend",
            "b6ec610792f8ec999b9df85f11e4b9cee3fa7ec3"
        ],
        [
            "set (y := B754_finite prec emax b m e e0).",
            "VernacExtend",
            "a307bfe5e793618e4e73ebae9d8519f94a5de4bb"
        ],
        [
            "set (ry := B2R _ _ y).",
            "VernacExtend",
            "b853bc28a50b159f2d504e6f4e9c0c2b979a6826"
        ],
        [
            "rewrite (Rplus_comm ry rx).",
            "VernacExtend",
            "9cb2e9aa04021cadd06aaec82d714815ccc7064c"
        ],
        [
            "destruct Rlt_bool.",
            "VernacExtend",
            "1d271c5b254ab8ba15735ed683f2dbe76a7cc342"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros (A1 & A2 & A3) (B1 & B2 & B3).",
            "VernacExtend",
            "9f5aceae9c0f2b152f6f4e1e4277ecd7ab8f8bee"
        ],
        [
            "apply B2R_Bsign_inj; auto.",
            "VernacExtend",
            "f9c8ab320eaf2edac30031b5e20f8559397978a4"
        ],
        [
            "rewrite <- B1 in A1.",
            "VernacExtend",
            "433b7a3bdf6b759459e4e2bad21b80748ffeaf1e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite Z.add_comm.",
            "VernacExtend",
            "cb1af9408ed4e4ab13bf29109365368cad89a879"
        ],
        [
            "rewrite Z.min_comm.",
            "VernacExtend",
            "d430f850bb2a9fe1f8bd249640b46e3290487319"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros (A1 & A2) (B1 & B2).",
            "VernacExtend",
            "4cd8ed882748b58166adab1efacf8203d365b30a"
        ],
        [
            "apply B2FF_inj.",
            "VernacExtend",
            "34eff57b1d6cecac8da247658345ae15e779c4fb"
        ],
        [
            "rewrite B2 in B1.",
            "VernacExtend",
            "b61dd8927a9c7b83e905b1eb6353e541015eb6a8"
        ],
        [
            "rewrite <- B1 in A1.",
            "VernacExtend",
            "433b7a3bdf6b759459e4e2bad21b80748ffeaf1e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Bmult_commut: forall mult_nan mode (x y: binary_float), mult_nan x y = mult_nan y x -> Bmult _ _ _ Hmax mult_nan mode x y = Bmult _ _ _ Hmax mult_nan mode y x.",
            "VernacStartTheoremProof",
            "5f88d9b66a03283c801a495f9a04a65009404b5c"
        ],
        [
            "intros until y; intros NAN.",
            "VernacExtend",
            "2c4132b75063cd1804d5aa960c4e73f23d2abf82"
        ],
        [
            "pose proof (Bmult_correct _ _ _ Hmax mult_nan mode x y).",
            "VernacExtend",
            "3c9a8de9c85a4896b0012135bc0207e24bece797"
        ],
        [
            "pose proof (Bmult_correct _ _ _ Hmax mult_nan mode y x).",
            "VernacExtend",
            "94a8a2bfe90493849599a78b309e50a4bf0b1cc2"
        ],
        [
            "unfold Bmult in *; destruct x; destruct y; auto.",
            "VernacExtend",
            "fc672ad68e682c690d11aa5a39d975936504f7fd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite (xorb_comm b0 b); auto.",
            "VernacExtend",
            "da45332808e69cd27f370f337c1a8011d1a9eada"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite NAN; auto.",
            "VernacExtend",
            "e0f67b44b7e188b3da08afbd997d077e59e5e606"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite NAN; auto.",
            "VernacExtend",
            "e0f67b44b7e188b3da08afbd997d077e59e5e606"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite (xorb_comm b0 b); auto.",
            "VernacExtend",
            "da45332808e69cd27f370f337c1a8011d1a9eada"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite NAN; auto.",
            "VernacExtend",
            "e0f67b44b7e188b3da08afbd997d077e59e5e606"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite (xorb_comm b0 b); auto.",
            "VernacExtend",
            "da45332808e69cd27f370f337c1a8011d1a9eada"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite NAN; auto.",
            "VernacExtend",
            "e0f67b44b7e188b3da08afbd997d077e59e5e606"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite (xorb_comm b0 b); auto.",
            "VernacExtend",
            "da45332808e69cd27f370f337c1a8011d1a9eada"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite NAN; auto.",
            "VernacExtend",
            "e0f67b44b7e188b3da08afbd997d077e59e5e606"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite NAN; auto.",
            "VernacExtend",
            "e0f67b44b7e188b3da08afbd997d077e59e5e606"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite NAN; auto.",
            "VernacExtend",
            "e0f67b44b7e188b3da08afbd997d077e59e5e606"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite NAN; auto.",
            "VernacExtend",
            "e0f67b44b7e188b3da08afbd997d077e59e5e606"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite (xorb_comm b0 b); auto.",
            "VernacExtend",
            "da45332808e69cd27f370f337c1a8011d1a9eada"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite (xorb_comm b0 b); auto.",
            "VernacExtend",
            "da45332808e69cd27f370f337c1a8011d1a9eada"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite NAN; auto.",
            "VernacExtend",
            "e0f67b44b7e188b3da08afbd997d077e59e5e606"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "revert H H0.",
            "VernacExtend",
            "bc1428a10f8151bad356eb00dac4806691ed77d8"
        ],
        [
            "fold emin.",
            "VernacExtend",
            "94549234de4174a672fa30174ed7986508293ed8"
        ],
        [
            "fold fexp.",
            "VernacExtend",
            "e9f391a0c2e1b071ddb032b3338a36259e46f252"
        ],
        [
            "set (x := B754_finite prec emax b0 m0 e1 e2).",
            "VernacExtend",
            "69952a456db410748a3e85066a5e6d2d1998b4fb"
        ],
        [
            "set (rx := B2R _ _ x).",
            "VernacExtend",
            "b6ec610792f8ec999b9df85f11e4b9cee3fa7ec3"
        ],
        [
            "set (y := B754_finite prec emax b m e e0).",
            "VernacExtend",
            "a307bfe5e793618e4e73ebae9d8519f94a5de4bb"
        ],
        [
            "set (ry := B2R _ _ y).",
            "VernacExtend",
            "b853bc28a50b159f2d504e6f4e9c0c2b979a6826"
        ],
        [
            "rewrite (Rmult_comm ry rx).",
            "VernacExtend",
            "3a6968a373b50d5888441b7d6597d627bb9b2685"
        ],
        [
            "destruct (Rlt_bool (Rabs (round radix2 fexp (round_mode mode) (rx * ry))) (bpow radix2 emax)).",
            "VernacExtend",
            "7c723d93220789a13a9317d8c2416885dd60a13a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros (A1 & A2 & A3) (B1 & B2 & B3).",
            "VernacExtend",
            "9f5aceae9c0f2b152f6f4e1e4277ecd7ab8f8bee"
        ],
        [
            "apply B2R_Bsign_inj; auto.",
            "VernacExtend",
            "f9c8ab320eaf2edac30031b5e20f8559397978a4"
        ],
        [
            "rewrite <- B1 in A1.",
            "VernacExtend",
            "433b7a3bdf6b759459e4e2bad21b80748ffeaf1e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite ! Bsign_FF2B.",
            "VernacExtend",
            "bbf23db9aa515becf8353a3e44ef62aeaefb62fa"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply xorb_comm.",
            "VernacExtend",
            "95a70ded1b93af11da2e8cf472e0b53a66157824"
        ],
        [
            "apply Pos.mul_comm.",
            "VernacExtend",
            "3c51d8dea80f67d1a559b341a178b8471e066f62"
        ],
        [
            "apply Z.add_comm.",
            "VernacExtend",
            "596d0afbf82a32e5187bc26cdfe75a3f79703ef7"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros A B.",
            "VernacExtend",
            "f0fdd14fe43c412ab9e9cf2b93b27330098322c4"
        ],
        [
            "apply B2FF_inj.",
            "VernacExtend",
            "34eff57b1d6cecac8da247658345ae15e779c4fb"
        ],
        [
            "etransitivity.",
            "VernacExtend",
            "be6e37ea1161f59d4c906a2d8011256577b6109b"
        ],
        [
            "eapply A.",
            "VernacExtend",
            "2792abf9161233c6a286abf8a9e83180093fc54e"
        ],
        [
            "rewrite xorb_comm.",
            "VernacExtend",
            "de55a37cefffdcc614b30bc63194735dfa56b7b3"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Bmult2_Bplus: forall plus_nan mult_nan mode (f: binary_float), (forall (x y: binary_float), is_nan _ _ x = true -> is_finite _ _ y = true -> plus_nan x x = mult_nan x y) -> Bplus _ _ _ Hmax plus_nan mode f f = Bmult _ _ _ Hmax mult_nan mode f (BofZ 2%Z).",
            "VernacStartTheoremProof",
            "3bb4d7d47936ea0b950a904c572b5cc6c41d54fa"
        ],
        [
            "intros until f; intros NAN.",
            "VernacExtend",
            "20668547c67fd0631c87e5374dce324fe74c5400"
        ],
        [
            "destruct (BofZ_representable 2) as (A & B & C).",
            "VernacExtend",
            "c13b1b657dcfa840243850114e93fbd850b8e673"
        ],
        [
            "apply (integer_representable_2p 1).",
            "VernacExtend",
            "c11fedd1c09a85e5c044920d465a552d4c2653b6"
        ],
        [
            "red in prec_gt_0_; omega.",
            "VernacExtend",
            "d5dab93f8056283198d3a561eaaa85ddc796bdea"
        ],
        [
            "pose proof (Bmult_correct _ _ _ Hmax mult_nan mode f (BofZ 2%Z)).",
            "VernacExtend",
            "322f8660d43e26234df90f794c4ed500cc40f9c0"
        ],
        [
            "fold emin in H.",
            "VernacExtend",
            "1be21612b9f651dd894897bf7dfa04fd0346dacb"
        ],
        [
            "rewrite A, B, C in H.",
            "VernacExtend",
            "1f5a07a175f732ed57d7abe35ea96a4773fd3b18"
        ],
        [
            "rewrite xorb_false_r in H.",
            "VernacExtend",
            "04305f7e8e01c08496e6712f303e02318522c407"
        ],
        [
            "destruct (is_finite _ _ f) eqn:FIN.",
            "VernacExtend",
            "ab7f83294c0f0dae6a7db6f19fbd94a0e603a212"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "pose proof (Bplus_correct _ _ _ Hmax plus_nan mode f f FIN FIN).",
            "VernacExtend",
            "59aa553bf50e2a94c6e35ba3c0bdee243b616bf8"
        ],
        [
            "fold emin in H0.",
            "VernacExtend",
            "563253a04c0fbc8cfbbc465ee9ef8623c93aba07"
        ],
        [
            "assert (EQ: (B2R prec emax f * Z2R 2%Z = B2R prec emax f + B2R prec emax f)%R).",
            "VernacExtend",
            "797e385eff48d865e0e251d211eecb0deded9e9a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "change (Z2R 2%Z) with 2%R.",
            "VernacExtend",
            "831525bfb105e2b3bfdaf785a6d861daefc61137"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite <- EQ in H0.",
            "VernacExtend",
            "a11551c7f8e5c168f855e6696253f6191ea50193"
        ],
        [
            "destruct Rlt_bool.",
            "VernacExtend",
            "1d271c5b254ab8ba15735ed683f2dbe76a7cc342"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct H0 as (P & Q & R).",
            "VernacExtend",
            "97ecf85883fc8c99457d604bcab2617a16542f73"
        ],
        [
            "destruct H as (S & T & U).",
            "VernacExtend",
            "5def0525cc4e887e8d7ca8f72f474113a6418a25"
        ],
        [
            "apply B2R_Bsign_inj; auto.",
            "VernacExtend",
            "f9c8ab320eaf2edac30031b5e20f8559397978a4"
        ],
        [
            "rewrite P, S.",
            "VernacExtend",
            "b4f9f07855579adb5eedf0ea87506d005bd31b74"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite R, U.",
            "VernacExtend",
            "cabb4cea8b54a69b23c40f32ad94104aceeec8ae"
        ],
        [
            "replace 0%R with (0 * Z2R 2%Z)%R by ring.",
            "VernacExtend",
            "f4f2d5d17470331071b636f2abc1c7aee43475ab"
        ],
        [
            "rewrite Rcompare_mult_r.",
            "VernacExtend",
            "ad92c76d40608075a4b054e215dcc7183a886eaa"
        ],
        [
            "rewrite andb_diag, orb_diag.",
            "VernacExtend",
            "f6585fef51aff665d47d8f3c3d283ef858a248a5"
        ],
        [
            "destruct f; try discriminate; simpl.",
            "VernacExtend",
            "a001ee4076eadb2762c273e1dcd9c5a6e655df63"
        ],
        [
            "rewrite Rcompare_Eq by auto.",
            "VernacExtend",
            "7da14f7518dec39676f446f852f5a70f514603cd"
        ],
        [
            "destruct mode; auto.",
            "VernacExtend",
            "58b736fd39bedc66941f85415f7cba1f902f791d"
        ],
        [
            "replace 0%R with (@F2R radix2 {| Fnum := 0%Z; Fexp := e |}).",
            "VernacExtend",
            "572f106b97ecd47219bd8a3432485e7362b740ce"
        ],
        [
            "rewrite Rcompare_F2R.",
            "VernacExtend",
            "0ffbfa136e0f8e9ea0d59ecc5fd3d4c38275e260"
        ],
        [
            "destruct b; auto.",
            "VernacExtend",
            "95533d5a0da46eaf4c778d77a0f89adc7cad4aff"
        ],
        [
            "unfold F2R.",
            "VernacExtend",
            "01074792470ba071b62f8438b8d9b8c922ca2998"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "change 0%R with (Z2R 0%Z).",
            "VernacExtend",
            "a885862529d2a2422ea2d337729146d7d3815064"
        ],
        [
            "apply Z2R_lt.",
            "VernacExtend",
            "20648688afbdacefe3b6070755cbe6f263ce5093"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "destruct (Bmult prec emax prec_gt_0_ Hmax mult_nan mode f (BofZ 2)); reflexivity || discriminate.",
            "VernacExtend",
            "cce0a8c6fdb7341428b9f1f3950e2ef6a2d3d059"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct H0 as (P & Q).",
            "VernacExtend",
            "27a895b84d0b01d055aa51f800e6d4fc10d8bc80"
        ],
        [
            "apply B2FF_inj.",
            "VernacExtend",
            "34eff57b1d6cecac8da247658345ae15e779c4fb"
        ],
        [
            "rewrite P, H.",
            "VernacExtend",
            "a4359bc110b65805f1d69b6e767e04abcf6ed9b8"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct f; try discriminate.",
            "VernacExtend",
            "1151ab2aae8cfde3885227a3a988e2538687c313"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl Bplus.",
            "VernacExtend",
            "de7383351a27f4a62c627d0eeef6c4ff8bc826e6"
        ],
        [
            "rewrite eqb_true.",
            "VernacExtend",
            "2dd65209dc0abe3c274f4cd6d5befd5ea3d586aa"
        ],
        [
            "destruct (BofZ 2) eqn:B2; try discriminate; simpl in *.",
            "VernacExtend",
            "0bd4cff413abf8b91283f169fa4f8fe81fa40cbc"
        ],
        [
            "assert ((0 = 2)%Z) by (apply eq_Z2R; auto).",
            "VernacExtend",
            "d531f67f9e9d99a64780e6670565c779e4b985f3"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "subst b0.",
            "VernacExtend",
            "478b7c325e8a76ce9bafb9db976206add8bd3245"
        ],
        [
            "rewrite xorb_false_r.",
            "VernacExtend",
            "00beb0fefc34a81ad64fed3fdb46c8bfb939e88e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold Bplus, Bmult.",
            "VernacExtend",
            "742efa7ae621a221c2797894cb09ec1f8d4007e2"
        ],
        [
            "rewrite <- NAN by auto.",
            "VernacExtend",
            "1ed5466c367fc2e3e280512ebb98c33447eefff7"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Bexact_inverse_mantissa := Z.iter (prec - 1) xO xH.",
            "VernacDefinition",
            "a05ed36e5e3d4e17a20e398cfd7c87fc2a838c36"
        ],
        [
            "Remark Bexact_inverse_mantissa_value: Zpos Bexact_inverse_mantissa = 2 ^ (prec - 1).",
            "VernacStartTheoremProof",
            "4bedc9415c520bc5ef008f0f38914e96f01e127f"
        ],
        [
            "assert (REC: forall n, Z.pos (nat_rect _ xH (fun _ => xO) n) = 2 ^ (Z.of_nat n)).",
            "VernacExtend",
            "163ec9438e4b3e7b397c7b832d6912148f622b73"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "induction n.",
            "VernacExtend",
            "7f3faa2a3277e3553406d09101130efcb1764494"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl nat_rect.",
            "VernacExtend",
            "9f3ce8606f343323228f3161b5a8860c7c71778d"
        ],
        [
            "transitivity (2 * Z.pos (nat_rect _ xH (fun _ => xO) n)).",
            "VernacExtend",
            "da45a780252f8b0933acb73ca60c068884c7728a"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite Nat2Z.inj_succ.",
            "VernacExtend",
            "1fc791f52357dc9e0a22fac0a6d82e87969a1699"
        ],
        [
            "rewrite IHn.",
            "VernacExtend",
            "ec9472e508d0ba82a8f6be939d2e4d39f35c3667"
        ],
        [
            "unfold Z.succ.",
            "VernacExtend",
            "d3292e8337e33f78eeb3f491cfdb2987c4452e05"
        ],
        [
            "rewrite Zpower_plus by omega.",
            "VernacExtend",
            "94b9737f1be1e44aadb9e69a4a950fa3c173e8c7"
        ],
        [
            "change (2 ^ 1) with 2.",
            "VernacExtend",
            "f728c06bd0035fb1bdd06c0065fdac6a2579d4a1"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "red in prec_gt_0_.",
            "VernacExtend",
            "4b29078a2865ccd92928eaceffc91659787acb4b"
        ],
        [
            "unfold Bexact_inverse_mantissa.",
            "VernacExtend",
            "4006639faa17642cb111c6ef20a4f90b2758f68b"
        ],
        [
            "rewrite iter_nat_of_Z by omega.",
            "VernacExtend",
            "38795a64a73a96ab867d593d16a474c2d12e4c3c"
        ],
        [
            "rewrite REC.",
            "VernacExtend",
            "144aa4f8424f20a39c5c5ae73911504bac835e41"
        ],
        [
            "rewrite Zabs2Nat.id_abs.",
            "VernacExtend",
            "305488cfe810a81742661e6979e4b238f6223400"
        ],
        [
            "rewrite Z.abs_eq by omega.",
            "VernacExtend",
            "86ace47fc3390d94e3a19d347b9f9d949ecc1de7"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark Bexact_inverse_mantissa_digits2_pos: Z.pos (digits2_pos Bexact_inverse_mantissa) = prec.",
            "VernacStartTheoremProof",
            "58fc97a7efbd337ab4bd95785a9fdce9b2a953d2"
        ],
        [
            "assert (DIGITS: forall n, digits2_pos (nat_rect _ xH (fun _ => xO) n) = Pos.of_nat (n+1)).",
            "VernacExtend",
            "499bd5e0132468c168fe170ec506c367e0767f3a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "induction n; simpl.",
            "VernacExtend",
            "1f285429454cbe9bad08c3e1d2fa969e99890bea"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite IHn.",
            "VernacExtend",
            "ec9472e508d0ba82a8f6be939d2e4d39f35c3667"
        ],
        [
            "destruct n; auto.",
            "VernacExtend",
            "ac1a46c3d4b557b3710fa36973beb6e353d40fb6"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "red in prec_gt_0_.",
            "VernacExtend",
            "4b29078a2865ccd92928eaceffc91659787acb4b"
        ],
        [
            "unfold Bexact_inverse_mantissa.",
            "VernacExtend",
            "4006639faa17642cb111c6ef20a4f90b2758f68b"
        ],
        [
            "rewrite iter_nat_of_Z by omega.",
            "VernacExtend",
            "38795a64a73a96ab867d593d16a474c2d12e4c3c"
        ],
        [
            "rewrite DIGITS.",
            "VernacExtend",
            "1ca51830b40a0dba3190cb2f68cee31c412583c0"
        ],
        [
            "rewrite Zabs2Nat.abs_nat_nonneg, Z2Nat.inj_sub by omega.",
            "VernacExtend",
            "54245f35a5851dc333d79fcb8fd676b9b0f967b9"
        ],
        [
            "destruct prec; try discriminate.",
            "VernacExtend",
            "d8f6a07319c5a7713432ba2491c72fc2c52d0ca9"
        ],
        [
            "rewrite Nat.sub_add.",
            "VernacExtend",
            "74e4808854be470d7012e526f28575e394f9c40a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Pos2Nat.id.",
            "VernacExtend",
            "02e7ca3e5fec589c86389c2f088b3c9ddfe7655b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "zify; omega.",
            "VernacExtend",
            "5fb0df05710c307ca01829a575fcf81498a16c8a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark bounded_Bexact_inverse: forall e, emin <= e <= emax - prec <-> bounded prec emax Bexact_inverse_mantissa e = true.",
            "VernacStartTheoremProof",
            "350d1f58623b8f3588ec1cc85158bdd3702f05c3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold bounded, canonic_mantissa.",
            "VernacExtend",
            "bc10c22dd4eb4d139b5380d2ea910d8599a37cc5"
        ],
        [
            "rewrite andb_true_iff.",
            "VernacExtend",
            "2e0a0ffca5d243f404153bc36ad3db5c01c2e4b5"
        ],
        [
            "rewrite <- Zeq_is_eq_bool.",
            "VernacExtend",
            "91b851943f9472d2a297969d8a9edaee598c880b"
        ],
        [
            "rewrite <- Zle_is_le_bool.",
            "VernacExtend",
            "f66cec67346c76114cb3eccb7ea537ca35c4ceda"
        ],
        [
            "rewrite Bexact_inverse_mantissa_digits2_pos.",
            "VernacExtend",
            "5d29b03bee80322ca5b44490a81d4c1ca3bd7c58"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros; split.",
            "VernacExtend",
            "786909835bea92a2bb1ac0d0634a6eb379d5f275"
        ],
        [
            "unfold FLT_exp.",
            "VernacExtend",
            "d4f3b9f7d52d234d511b90934a943354be18194a"
        ],
        [
            "unfold emin in H.",
            "VernacExtend",
            "ee2e9fae3a03c63ef674c24f861ac1aabc7ce9d2"
        ],
        [
            "zify; omega.",
            "VernacExtend",
            "5fb0df05710c307ca01829a575fcf81498a16c8a"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros [A B].",
            "VernacExtend",
            "269ecc1b12a78cad85161d58003fb0ebdea8ebc3"
        ],
        [
            "unfold FLT_exp in A.",
            "VernacExtend",
            "57d1210cf03d2e0090c7028f6ed0747b8f6f7fb0"
        ],
        [
            "unfold emin.",
            "VernacExtend",
            "3fff444b9eede7682b5d216fb49ade0df5718e8c"
        ],
        [
            "zify; omega.",
            "VernacExtend",
            "5fb0df05710c307ca01829a575fcf81498a16c8a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Definition Bexact_inverse (f: binary_float) : option binary_float := match f with | B754_finite _ _ s m e B => if Pos.eq_dec m Bexact_inverse_mantissa then let e' := -e - (prec - 1) * 2 in if Z_le_dec emin e' then if Z_le_dec e' emax then Some(B754_finite _ _ s m e' _) else None else None else None | _ => None end.",
            "VernacDefinition",
            "05d2221d958db277682cf8a7c0c93dfd37707084"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "rewrite <- bounded_Bexact_inverse in B.",
            "VernacExtend",
            "f640d09a040ede80e137875fc4917238a4a7b0df"
        ],
        [
            "rewrite <- bounded_Bexact_inverse.",
            "VernacExtend",
            "ee2cf778f645522b43002695cc4af0100e9f9a69"
        ],
        [
            "unfold emin in *.",
            "VernacExtend",
            "64388bf197bb69dcd10a58562de85448eaedcb7e"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Bexact_inverse_correct: forall f f', Bexact_inverse f = Some f' -> is_finite_strict _ _ f = true /\\ is_finite_strict _ _ f' = true /\\ B2R _ _ f' = (/ B2R _ _ f)%R /\\ B2R _ _ f <> 0%R /\\ Bsign _ _ f' = Bsign _ _ f.",
            "VernacStartTheoremProof",
            "0da1fb620e5342406d5d686ff39c1677ebcfafb3"
        ],
        [
            "Proof with (try discriminate).",
            "VernacProof",
            "3d32ec508666ffadd4f3b32abd3c0b531dc537b6"
        ],
        [
            "intros f f' EI.",
            "VernacExtend",
            "e56ca0abdd7e113c7fb9d642a0674fde3fe9b501"
        ],
        [
            "unfold Bexact_inverse in EI.",
            "VernacExtend",
            "deb04579e0a4cfa34f554194a72e456cb898f5c6"
        ],
        [
            "destruct f...",
            "VernacExtend",
            "b7c7e5da9e9750dfb1753b8940ad6b1e1c0aca7a"
        ],
        [
            "destruct (Pos.eq_dec m Bexact_inverse_mantissa)...",
            "VernacExtend",
            "feaef09f67a5adfd8cfb4febfef3c5a5c137c0bb"
        ],
        [
            "set (e' := -e - (prec - 1) * 2) in *.",
            "VernacExtend",
            "c23fc063b8185308beca85d2efa051f0be6340a1"
        ],
        [
            "destruct (Z_le_dec emin e')...",
            "VernacExtend",
            "ec3cf52b6d41c5225d8b7548719b179f870ef199"
        ],
        [
            "destruct (Z_le_dec e' emax)...",
            "VernacExtend",
            "f373db119bacca2090a7bc273fddb442724bde8b"
        ],
        [
            "inversion EI; clear EI; subst f' m.",
            "VernacExtend",
            "5140b24350fbdbc374a4e9694a7769b4650ba975"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold B2R.",
            "VernacExtend",
            "5d3d529cc731415851c354dc0d6a0bb7030786ca"
        ],
        [
            "rewrite Bexact_inverse_mantissa_value.",
            "VernacExtend",
            "b2ae94730c2f4f8f66d6170881b4408c09864647"
        ],
        [
            "unfold F2R; simpl.",
            "VernacExtend",
            "a8b73d273d1c692e5deb932d4bd557029927ed13"
        ],
        [
            "rewrite Z2R_cond_Zopp.",
            "VernacExtend",
            "110412e03683db51cd48013c77eb85bc791a33a4"
        ],
        [
            "rewrite <- ! cond_Ropp_mult_l.",
            "VernacExtend",
            "1b76aefa1d8b760b4c445889cbe0c59b648a95f5"
        ],
        [
            "red in prec_gt_0_.",
            "VernacExtend",
            "4b29078a2865ccd92928eaceffc91659787acb4b"
        ],
        [
            "replace (Z2R (2 ^ (prec - 1))) with (bpow radix2 (prec - 1)) by (symmetry; apply (Z2R_Zpower radix2); omega).",
            "VernacExtend",
            "bfe68376eb27b7480dc95a2dfabae672e802f585"
        ],
        [
            "rewrite <- ! bpow_plus.",
            "VernacExtend",
            "50af13f28e9a75f58f7bb1a6eb6c798973bdef2a"
        ],
        [
            "replace (prec - 1 + e') with (- (prec - 1 + e)) by (unfold e'; omega).",
            "VernacExtend",
            "7786d3cb8785d5364090712415f8d6c3f5dbd02b"
        ],
        [
            "rewrite bpow_opp.",
            "VernacExtend",
            "3024d5fb06fda2c4f53c69e840b4e7c952a719e1"
        ],
        [
            "unfold cond_Ropp; destruct b; auto.",
            "VernacExtend",
            "903af011e5662e5d0cdc68f8614dddcdf244ff8b"
        ],
        [
            "rewrite Ropp_inv_permute.",
            "VernacExtend",
            "601389bd17d2090a27da7b4ea7f3ff509c2692b7"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply Rgt_not_eq.",
            "VernacExtend",
            "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "apply F2R_eq_0_reg in H.",
            "VernacExtend",
            "49de21c0c8481b255ff4679d4aa937f49e158a8b"
        ],
        [
            "destruct b; simpl in H; discriminate.",
            "VernacExtend",
            "9145f828ea4cffb9c21be726a2bad894fb3bf980"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Bdiv_mult_inverse: forall div_nan mult_nan mode x y z, (forall (x y z: binary_float), is_nan _ _ x = true -> is_finite _ _ y = true -> is_finite _ _ z = true -> div_nan x y = mult_nan x z) -> Bexact_inverse y = Some z -> Bdiv _ _ _ Hmax div_nan mode x y = Bmult _ _ _ Hmax mult_nan mode x z.",
            "VernacStartTheoremProof",
            "9987321ec9f565493d476c0159031ab431bb0a77"
        ],
        [
            "intros until z; intros NAN; intros.",
            "VernacExtend",
            "e1cf17d311bd9c69d6f23fd56740f84ba4ee3623"
        ],
        [
            "destruct (Bexact_inverse_correct _ _ H) as (A & B & C & D & E).",
            "VernacExtend",
            "2ed22f27c29a47046fed200d790e6c9f49bd0632"
        ],
        [
            "pose proof (Bmult_correct _ _ _ Hmax mult_nan mode x z).",
            "VernacExtend",
            "4fae66dfbe0b3033a3d0d07fd013aedf2657c42a"
        ],
        [
            "fold emin in H0.",
            "VernacExtend",
            "563253a04c0fbc8cfbbc465ee9ef8623c93aba07"
        ],
        [
            "fold fexp in H0.",
            "VernacExtend",
            "fdfcb5c8bcd06c7241a1620edd52ba6aa566b12d"
        ],
        [
            "pose proof (Bdiv_correct _ _ _ Hmax div_nan mode x y D).",
            "VernacExtend",
            "d387a517732045106d4754305f809120b8eb3866"
        ],
        [
            "fold emin in H1.",
            "VernacExtend",
            "b093245eed88ed134644aff5af44d700dd49418f"
        ],
        [
            "fold fexp in H1.",
            "VernacExtend",
            "215d1bfe72b1e6928c2ab148e66d3d26e891998c"
        ],
        [
            "unfold Rdiv in H1.",
            "VernacExtend",
            "64fdac7b62d920e3395b8931a0d2dacb8ab40468"
        ],
        [
            "rewrite <- C in H1.",
            "VernacExtend",
            "d5f869c3250a3bf03306a9d063db64b2fc62bd63"
        ],
        [
            "destruct (is_finite _ _ x) eqn:FINX.",
            "VernacExtend",
            "bc7cc2dd06eaee7d0f57b912da2e1ae0956bd433"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct Rlt_bool.",
            "VernacExtend",
            "1d271c5b254ab8ba15735ed683f2dbe76a7cc342"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct H0 as (P & Q & R).",
            "VernacExtend",
            "97ecf85883fc8c99457d604bcab2617a16542f73"
        ],
        [
            "destruct H1 as (S & T & U).",
            "VernacExtend",
            "74041b6fda5be03f4e96703eafcabaaac20a844c"
        ],
        [
            "apply B2R_Bsign_inj; auto.",
            "VernacExtend",
            "f9c8ab320eaf2edac30031b5e20f8559397978a4"
        ],
        [
            "rewrite Q.",
            "VernacExtend",
            "57be6514ee62d229cd4f20fa2e393850b2fc4579"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply is_finite_strict_finite; auto.",
            "VernacExtend",
            "3d3fa55a44fbc5f759628761f49ef26a35281e96"
        ],
        [
            "rewrite P, S.",
            "VernacExtend",
            "b4f9f07855579adb5eedf0ea87506d005bd31b74"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite R, U, E.",
            "VernacExtend",
            "3d3be1e4c5dc18ba56820ea5a637445248143e6c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply is_finite_not_is_nan; auto.",
            "VernacExtend",
            "487671d35c84c1ea435363958aed8bd554dcff77"
        ],
        [
            "apply is_finite_not_is_nan.",
            "VernacExtend",
            "1a4036ae5c607a279dd66171282957ceaeb42247"
        ],
        [
            "rewrite Q.",
            "VernacExtend",
            "57be6514ee62d229cd4f20fa2e393850b2fc4579"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply is_finite_strict_finite; auto.",
            "VernacExtend",
            "3d3fa55a44fbc5f759628761f49ef26a35281e96"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply B2FF_inj.",
            "VernacExtend",
            "34eff57b1d6cecac8da247658345ae15e779c4fb"
        ],
        [
            "rewrite H0, H1.",
            "VernacExtend",
            "9b9dcdf1e4ddc69a8207e12d5be14eb0c18c4f05"
        ],
        [
            "rewrite E.",
            "VernacExtend",
            "304079e57d3d6c0912193a26e70d779c9e1768b9"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct y; try discriminate.",
            "VernacExtend",
            "a324cb7636e524c8e6f18f49a6e76dddb1842bab"
        ],
        [
            "destruct z; try discriminate.",
            "VernacExtend",
            "734184597e33bf1a8c2a4842e10c5ffd1d090678"
        ],
        [
            "destruct x; try discriminate; simpl.",
            "VernacExtend",
            "ca00555cb4882634ec166a170fc1fa0890764aaa"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl in E; congruence.",
            "VernacExtend",
            "5895b7472381c2ee893e738018270bbd0e94a8e4"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "erewrite NAN; eauto.",
            "VernacExtend",
            "d5f79aafcb5326873d8209862139fe057fe1be53"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint pos_pow (x y: positive) : positive := match y with | xH => x | xO y => Pos.square (pos_pow x y) | xI y => Pos.mul x (Pos.square (pos_pow x y)) end.",
            "VernacFixpoint",
            "4469350b8b628a3e90c9dceaa6f46bb9ada2c783"
        ],
        [
            "Lemma pos_pow_spec: forall x y, Z.pos (pos_pow x y) = Z.pos x ^ Z.pos y.",
            "VernacStartTheoremProof",
            "b0d9d803f28557fe5c47dd3f49c85910aff5d57e"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "assert (REC: forall y a, Pos.iter (Pos.mul x) a y = Pos.mul (pos_pow x y) a).",
            "VernacExtend",
            "c36386e0e26f9b822e2879ffc531d7a20810aae1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "induction y; simpl; intros.",
            "VernacExtend",
            "7a2c95c7e79e2d1aa59c3e7f488e3033a97d85ae"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite ! IHy, Pos.square_spec, ! Pos.mul_assoc.",
            "VernacExtend",
            "e244d8a34dc90bdfb9a32a52c357f71fae6865c6"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite ! IHy, Pos.square_spec, ! Pos.mul_assoc.",
            "VernacExtend",
            "e244d8a34dc90bdfb9a32a52c357f71fae6865c6"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- Pos2Z.inj_pow_pos.",
            "VernacExtend",
            "08ff02379f914335bd5556acd221e262f068c0b2"
        ],
        [
            "unfold Pos.pow.",
            "VernacExtend",
            "a732bc173d4a1a989ec89450e83156199f8d6ae3"
        ],
        [
            "rewrite REC.",
            "VernacExtend",
            "144aa4f8424f20a39c5c5ae73911504bac835e41"
        ],
        [
            "rewrite Pos.mul_1_r.",
            "VernacExtend",
            "1d590876d11cb41c2a3072b5af646a4537df390a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Bparse (base: positive) (m: positive) (e: Z): binary_float := match e with | Z0 => BofZ (Zpos m) | Zpos p => if e * Z.log2 (Zpos base) <? emax then BofZ (Zpos m * Zpos (pos_pow base p)) else B754_infinity _ _ false | Zneg p => if e * Z.log2 (Zpos base) + Z.log2_up (Zpos m) <? emin then B754_zero _ _ false else FF2B prec emax _ (proj1 (Bdiv_correct_aux prec emax prec_gt_0_ Hmax mode_NE false m Z0 false (pos_pow base p) Z0)) end.",
            "VernacDefinition",
            "0ddcb1efc1d5ae9a645c6053ad2c1cc3fc789c91"
        ],
        [
            "Lemma Zpower_log: forall (base: radix) n, 0 < n -> 2 ^ (n * Z.log2 base) <= base ^ n <= 2 ^ (n * Z.log2_up base).",
            "VernacStartTheoremProof",
            "66594b8bfb0aaa29b821a1d047d1cad50d502da1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (A: 0 < base) by apply radix_gt_0.",
            "VernacExtend",
            "637cb999410b8055adee0b5487e1ec92002b52cd"
        ],
        [
            "assert (B: 0 <= Z.log2 base) by apply Z.log2_nonneg.",
            "VernacExtend",
            "f3060ccfa1d6b2c1fdfd27d87ed80d1fb17fe460"
        ],
        [
            "assert (C: 0 <= Z.log2_up base) by apply Z.log2_up_nonneg.",
            "VernacExtend",
            "6d20db2d70e2c27a08a790fa9f361b26ba9e2348"
        ],
        [
            "destruct (Z.log2_spec base) as [D E]; auto.",
            "VernacExtend",
            "3141b1084ffb9d95f91ad7c9ac1063fd512f8ca1"
        ],
        [
            "destruct (Z.log2_up_spec base) as [F G].",
            "VernacExtend",
            "35296c52b7553fa4fef488ab583c63c84609b080"
        ],
        [
            "apply radix_gt_1.",
            "VernacExtend",
            "1fe0c373a207ebec517ee162a6c1eb5c3bbfa7c5"
        ],
        [
            "assert (K: 0 <= 2 ^ Z.log2 base) by (apply Z.pow_nonneg; omega).",
            "VernacExtend",
            "6b3a13bbed875a8075dac5764ab20f891ba877b1"
        ],
        [
            "rewrite ! (Z.mul_comm n).",
            "VernacExtend",
            "435bd5ce116d3bc9da8ac52d038325123d915c64"
        ],
        [
            "rewrite ! Z.pow_mul_r by omega.",
            "VernacExtend",
            "14a43b434d187b4b10e297b8ca259f498e9a6b93"
        ],
        [
            "split; apply Z.pow_le_mono_l; omega.",
            "VernacExtend",
            "bb4e1ba3203789a46f5f018d0772ec5e58e5d04c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bpow_log_pos: forall (base: radix) n, 0 < n -> (bpow radix2 (n * Z.log2 base)%Z <= bpow base n)%R.",
            "VernacStartTheoremProof",
            "d09b8e99024754d9cbad0d95687ec1919d9ea331"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- ! Z2R_Zpower.",
            "VernacExtend",
            "9e90ec9ba87e7633cb608f57e91c7d2820762967"
        ],
        [
            "apply Z2R_le; apply Zpower_log; auto.",
            "VernacExtend",
            "ea5e4e64b1d6633abce3eb6b4d52ce8803e94a0c"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite Z.mul_comm; apply Zmult_gt_0_le_0_compat.",
            "VernacExtend",
            "19dad0f466c7a279b54d7671682f0b27aaac9604"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply Z.log2_nonneg.",
            "VernacExtend",
            "448905e631eb4e9ce3a8d3a36eba6bc98c94b1ed"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bpow_log_neg: forall (base: radix) n, n < 0 -> (bpow base n <= bpow radix2 (n * Z.log2 base)%Z)%R.",
            "VernacStartTheoremProof",
            "b056f3f43657676ae42c07741ef0092e168610e4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "set (m := -n).",
            "VernacExtend",
            "f0df1a0bf6ca1fb2879bb8bead4b174630001ab9"
        ],
        [
            "replace n with (-m) by (unfold m; omega).",
            "VernacExtend",
            "dba80cf8b4bf9bbcc609fac608d486f9d7e06d68"
        ],
        [
            "rewrite ! Z.mul_opp_l, ! bpow_opp.",
            "VernacExtend",
            "f07b4d19ea2d9b7bc36c73fc3bfd961d8e058e06"
        ],
        [
            "apply Rinv_le.",
            "VernacExtend",
            "df9ed9c0ff0a06fae52364d762a5f467e1897f8b"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "apply bpow_log_pos.",
            "VernacExtend",
            "fe7eb815677bcc273c2e8d23349f2730785ba1f1"
        ],
        [
            "unfold m; omega.",
            "VernacExtend",
            "813d3f79f44106e2f53b88da412279e43f091a75"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma round_integer_overflow: forall (base: radix) e m, 0 < e -> emax <= e * Z.log2 base -> (bpow radix2 emax <= round radix2 fexp (round_mode mode_NE) (Z2R (Zpos m) * bpow base e))%R.",
            "VernacStartTheoremProof",
            "9e9d0a70d9add7250a4559c944c6502d6b608219"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- (round_generic radix2 fexp (round_mode mode_NE) (bpow radix2 emax)); auto.",
            "VernacExtend",
            "744eab88d54a0993f278a2523402a0c7834d3565"
        ],
        [
            "apply round_le; auto.",
            "VernacExtend",
            "9ea97fa0ce0ef76b00f0537f1db3fe45140d4ab1"
        ],
        [
            "apply fexp_correct; auto.",
            "VernacExtend",
            "4ec56761cdd451c636b20d54a8737ee529ef53b5"
        ],
        [
            "apply valid_rnd_round_mode.",
            "VernacExtend",
            "20b08e148269eae05657e863e427e37c03e032b6"
        ],
        [
            "rewrite <- (Rmult_1_l (bpow radix2 emax)).",
            "VernacExtend",
            "39138724d2b33f66356dd08ddf1f63601f525f19"
        ],
        [
            "apply Rmult_le_compat.",
            "VernacExtend",
            "99a65cd1efb8e35313415d4b052731e2b0746daf"
        ],
        [
            "apply Rle_0_1.",
            "VernacExtend",
            "996937b485ab0b0ab64abfd08ec0786445ae12e3"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "apply (Z2R_le 1).",
            "VernacExtend",
            "0ed9eea66069dc85aaa897c5385949fe4a67943b"
        ],
        [
            "zify; omega.",
            "VernacExtend",
            "5fb0df05710c307ca01829a575fcf81498a16c8a"
        ],
        [
            "eapply Rle_trans.",
            "VernacExtend",
            "ec6f33953112c5bac5bfe07c5c0b34597dc6eaba"
        ],
        [
            "eapply bpow_le.",
            "VernacExtend",
            "2ba4c38c32454d60c4e41be0cd240cc33f819b02"
        ],
        [
            "eassumption.",
            "VernacExtend",
            "909bfe8655bf95c07560744f733991163ce6cf7e"
        ],
        [
            "apply bpow_log_pos; auto.",
            "VernacExtend",
            "d25ff9c27f4c248d3994cacd0e3af98a6146a872"
        ],
        [
            "apply generic_format_FLT.",
            "VernacExtend",
            "555f10b505d8f1b986407a7320ce6fa79605c566"
        ],
        [
            "exists (Float radix2 1 emax).",
            "VernacExtend",
            "9a71e21fac2a94caf93df513500d840097d321e9"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold F2R; simpl.",
            "VernacExtend",
            "a8b73d273d1c692e5deb932d4bd557029927ed13"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply (Zpower_gt_1 radix2); auto.",
            "VernacExtend",
            "daa07176c25b15f86307603975bbe6344a1e406c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold emin; red in prec_gt_0_; omega.",
            "VernacExtend",
            "3847582fdeb81ed3e60d00df49bf24629555a475"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma round_NE_underflows: forall x, (0 <= x <= bpow radix2 (emin - 1))%R -> round radix2 fexp (round_mode mode_NE) x = 0%R.",
            "VernacStartTheoremProof",
            "3e13aee67adba615a75229b481f2a5c85abd29f4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "set (eps := bpow radix2 (emin - 1)) in *.",
            "VernacExtend",
            "0b3c7b12aae38b6efb2de34dde4db97d9f09cdcd"
        ],
        [
            "assert (A: round radix2 fexp (round_mode mode_NE) eps = 0%R).",
            "VernacExtend",
            "63ad5be93d8f7e9484d5a57932b21fb687606225"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold round.",
            "VernacExtend",
            "f3d1b03811d5ac6ab6c3f71cfc7300bcd9d60887"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "assert (E: canonic_exp radix2 fexp eps = emin).",
            "VernacExtend",
            "57fb846522b7c0e2ec5e52de787148164fd2045d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold canonic_exp, eps.",
            "VernacExtend",
            "6ebd56cd2e594ef29760adb93e9473e116d3ac8b"
        ],
        [
            "rewrite ln_beta_bpow.",
            "VernacExtend",
            "562ed7a7f197615f8fb2cc276e6bc8e10357a919"
        ],
        [
            "unfold fexp, FLT_exp.",
            "VernacExtend",
            "d790a7e5d03d5c9606c08f62c52b1a3604ada64e"
        ],
        [
            "zify; red in prec_gt_0_; omega.",
            "VernacExtend",
            "e6280dac08648fff533fb77d6a48d5748269cf4b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "unfold scaled_mantissa; rewrite E.",
            "VernacExtend",
            "06e8cd8f9a29077fd74408817a412c083caf60c0"
        ],
        [
            "assert (P: (eps * bpow radix2 (-emin) = / 2)%R).",
            "VernacExtend",
            "9d32b45ddae8fd1424c9976fc975af2b97453693"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold eps.",
            "VernacExtend",
            "5e0a0206e5bdf1a86f0ef9d2b4bef10bd6d8f58b"
        ],
        [
            "rewrite <- bpow_plus.",
            "VernacExtend",
            "9ebeb3f5611fe78274a1e2e0131c7f7ed66e1cfc"
        ],
        [
            "replace (emin - 1 + -emin) with (-1) by omega.",
            "VernacExtend",
            "3e3d489f943fd7d1b616ce3304f0c54dcad8d604"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite P.",
            "VernacExtend",
            "a68444f3ff5a99dd68a5269da7bfb78567ba4ea2"
        ],
        [
            "unfold Znearest.",
            "VernacExtend",
            "c6481393d02b9e0a0e8669a35ef29881ad118b89"
        ],
        [
            "assert (F: Zfloor (/ 2)%R = 0).",
            "VernacExtend",
            "9817179ca77c6cb023da9e165dce2d6d24737cda"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply Zfloor_imp.",
            "VernacExtend",
            "9278ce7c32c530a2f8be72314e979fc619d4a028"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite F.",
            "VernacExtend",
            "6df8c10c25971db82981aba92c1e0c52d940c7f9"
        ],
        [
            "change (Z2R 0) with 0%R.",
            "VernacExtend",
            "6e961300020d3343dcf18d05af4d6eb841a441c1"
        ],
        [
            "rewrite Rminus_0_r.",
            "VernacExtend",
            "f41d2c9a1ab0030a599c576fc397975a2d0d5b33"
        ],
        [
            "rewrite Rcompare_Eq by auto.",
            "VernacExtend",
            "7da14f7518dec39676f446f852f5a70f514603cd"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold F2R; simpl.",
            "VernacExtend",
            "a8b73d273d1c692e5deb932d4bd557029927ed13"
        ],
        [
            "apply Rmult_0_l.",
            "VernacExtend",
            "9d2fdd56dbced8968cf28714ab54a4daf5852a4b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply Rle_antisym.",
            "VernacExtend",
            "8e9431fb6db6f151160007e68131f4f5cb1c7968"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <- A.",
            "VernacExtend",
            "ae4f7c34b9745c58374bff661e3bf44cf209be15"
        ],
        [
            "apply round_le.",
            "VernacExtend",
            "ba0bf8a89aed461d3504ea81d3518460a53758f7"
        ],
        [
            "apply fexp_correct; auto.",
            "VernacExtend",
            "4ec56761cdd451c636b20d54a8737ee529ef53b5"
        ],
        [
            "apply valid_rnd_round_mode.",
            "VernacExtend",
            "20b08e148269eae05657e863e427e37c03e032b6"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <- (round_0 radix2 fexp (round_mode mode_NE)).",
            "VernacExtend",
            "858770ef1fcbe56373443255e5f310ea2d98620e"
        ],
        [
            "apply round_le.",
            "VernacExtend",
            "ba0bf8a89aed461d3504ea81d3518460a53758f7"
        ],
        [
            "apply fexp_correct; auto.",
            "VernacExtend",
            "4ec56761cdd451c636b20d54a8737ee529ef53b5"
        ],
        [
            "apply valid_rnd_round_mode.",
            "VernacExtend",
            "20b08e148269eae05657e863e427e37c03e032b6"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma round_integer_underflow: forall (base: radix) e m, e < 0 -> e * Z.log2 base + Z.log2_up (Zpos m) < emin -> round radix2 fexp (round_mode mode_NE) (Z2R (Zpos m) * bpow base e) = 0%R.",
            "VernacStartTheoremProof",
            "b7449d09aa691ebe114e8b105b4c0285f8039120"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply round_NE_underflows.",
            "VernacExtend",
            "70d0be7e9472f968f7c42c5879b8c617d4230d51"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply Rmult_le_pos.",
            "VernacExtend",
            "e03207c3cef85471384dc0906485b056bc83a80a"
        ],
        [
            "apply (Z2R_le 0).",
            "VernacExtend",
            "792cf72fd89e326cb413fb5d3012c5ce541d5b09"
        ],
        [
            "zify; omega.",
            "VernacExtend",
            "5fb0df05710c307ca01829a575fcf81498a16c8a"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply Rle_trans with (bpow radix2 (Z.log2_up (Z.pos m) + e * Z.log2 base)).",
            "VernacExtend",
            "be11978c2cd4cb47a350351d55219520fc6aad96"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite bpow_plus.",
            "VernacExtend",
            "a66bde7144b19ede4a139295758f63aab8dcbea6"
        ],
        [
            "apply Rmult_le_compat.",
            "VernacExtend",
            "99a65cd1efb8e35313415d4b052731e2b0746daf"
        ],
        [
            "apply (Z2R_le 0); zify; omega.",
            "VernacExtend",
            "938e33c0de4c751f7efa60f2d978bc74c0d81b0d"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "rewrite <- Z2R_Zpower.",
            "VernacExtend",
            "6a737b45852133a11ffa7a0af2881be74773d2b4"
        ],
        [
            "apply Z2R_le.",
            "VernacExtend",
            "b1047db1ca8ec0d49de6b93d8ab59e7c07265bfb"
        ],
        [
            "destruct (Z.eq_dec (Z.pos m) 1).",
            "VernacExtend",
            "135d28a5ded4de5b07688814cd218a11853fd8d2"
        ],
        [
            "rewrite e0.",
            "VernacExtend",
            "9b24dbdfbb5c2f52e38c8dc95989d55c0cc61e17"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply Z.log2_up_spec.",
            "VernacExtend",
            "19d721d76a43090bb530c5644c40bca02f309c96"
        ],
        [
            "zify; omega.",
            "VernacExtend",
            "5fb0df05710c307ca01829a575fcf81498a16c8a"
        ],
        [
            "apply Z.log2_up_nonneg.",
            "VernacExtend",
            "f4298631fa4ce10db8eb4e885f1cbb4819527caa"
        ],
        [
            "apply bpow_log_neg.",
            "VernacExtend",
            "b487b53dc84bfb15e7911a55cfb200136ead72d8"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply bpow_le.",
            "VernacExtend",
            "9264f19c0062a0a711efc832825406a995342e90"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Bparse_correct: forall b m e (BASE: 2 <= Zpos b), let base := {| radix_val := Zpos b; radix_prop := Zle_imp_le_bool _ _ BASE |} in let r := round radix2 fexp (round_mode mode_NE) (Z2R (Zpos m) * bpow base e) in if Rlt_bool (Rabs r) (bpow radix2 emax) then B2R _ _ (Bparse b m e) = r /\\ is_finite _ _ (Bparse b m e) = true /\\ Bsign _ _ (Bparse b m e) = false else B2FF _ _ (Bparse b m e) = F754_infinity false.",
            "VernacStartTheoremProof",
            "ba4da3e34ed679eff507abc5c3a666d9ecf750ca"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (A: forall x, @F2R radix2 {| Fnum := x; Fexp := 0 |} = Z2R x).",
            "VernacExtend",
            "97a416f272e2afcef434a7fa89efda50de1cb42f"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold F2R, Fnum; simpl.",
            "VernacExtend",
            "5d16105c93f7a11dc1c0c81f935651732ff8439d"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "unfold Bparse, r.",
            "VernacExtend",
            "0ca08d2fe64d68796df009a2f97cfda2958a6afa"
        ],
        [
            "destruct e as [ | e | e].",
            "VernacExtend",
            "b8a02fd6657172e01ae36ec04360f06fcd4af62d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "change (bpow base 0) with 1%R.",
            "VernacExtend",
            "e5f20d20071a115b3ff8234d77c5554502f647c5"
        ],
        [
            "rewrite Rmult_1_r.",
            "VernacExtend",
            "d41d18f77f80ae8595148d0386b68549f3d406cf"
        ],
        [
            "exact (BofZ_correct (Z.pos m)).",
            "VernacExtend",
            "9a8e7214704f6c09bebdaa674f056ce62d1d8f69"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (Z.ltb_spec (Z.pos e * Z.log2 (Z.pos b)) emax).",
            "VernacExtend",
            "b34abd66918ec59ec9f5680266ce70abb0cc0e89"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite pos_pow_spec.",
            "VernacExtend",
            "3f05dce2ba9a1e3b731dd5efd96f8f869fb6cb27"
        ],
        [
            "rewrite <- Z2R_Zpower by (zify; omega).",
            "VernacExtend",
            "80125772d46031d0193469f80bed4b5388e66f22"
        ],
        [
            "rewrite <- Z2R_mult.",
            "VernacExtend",
            "4bfcef9c6d8659a267de59ca9647b2d107af9b2a"
        ],
        [
            "replace false with (Z.pos m * Z.pos b ^ Z.pos e <? 0).",
            "VernacExtend",
            "ca6ecf7129318f9c615847d9698b809309407cde"
        ],
        [
            "exact (BofZ_correct (Z.pos m * Z.pos b ^ Z.pos e)).",
            "VernacExtend",
            "668eed2acca81a65b8d0a088f01c602a569df15b"
        ],
        [
            "rewrite Z.ltb_ge.",
            "VernacExtend",
            "89c7fae0d3550ce8b592bab4b11ec9145888cab5"
        ],
        [
            "rewrite Z.mul_comm.",
            "VernacExtend",
            "088699fe7f894ededd3c93ab3a27f9d105f1ab84"
        ],
        [
            "apply Zmult_gt_0_le_0_compat.",
            "VernacExtend",
            "7aa31f70b3a830ca88650011af80865486b313df"
        ],
        [
            "zify; omega.",
            "VernacExtend",
            "5fb0df05710c307ca01829a575fcf81498a16c8a"
        ],
        [
            "apply (Zpower_ge_0 base).",
            "VernacExtend",
            "11bd4e41cacd046a92eef7aea33eccd8163a7a46"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite Rlt_bool_false.",
            "VernacExtend",
            "4727213e40ddfbec66b0f056e1c646ac9eb48972"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "eapply Rle_trans; [idtac|apply Rle_abs].",
            "VernacExtend",
            "1ebb710125b5b9d1c67c5161dbcbe454eff68c19"
        ],
        [
            "apply (round_integer_overflow base).",
            "VernacExtend",
            "fb6da6d3f506c5d519191ac9eda787ea5967f233"
        ],
        [
            "zify; omega.",
            "VernacExtend",
            "5fb0df05710c307ca01829a575fcf81498a16c8a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (Z.ltb_spec (Z.neg e * Z.log2 (Z.pos b) + Z.log2_up (Z.pos m)) emin).",
            "VernacExtend",
            "aa2b1febd20047e955e3e5ce63528c5bd2966957"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite round_integer_underflow; auto.",
            "VernacExtend",
            "f3b3872511d3df1b95be91084a19b84f867c3883"
        ],
        [
            "rewrite Rlt_bool_true.",
            "VernacExtend",
            "31cd82492c96b4dc35f8c36f967bc8802a2bc6ba"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "replace (Rabs 0)%R with 0%R.",
            "VernacExtend",
            "0583fcd61dd26c3a93a9afb5d03b0ad6b43017a2"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "apply (Z2R_abs 0).",
            "VernacExtend",
            "cdd87d2f0167f712fb329f31333706f451b38863"
        ],
        [
            "zify; omega.",
            "VernacExtend",
            "5fb0df05710c307ca01829a575fcf81498a16c8a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "generalize (Bdiv_correct_aux prec emax prec_gt_0_ Hmax mode_NE false m 0 false (pos_pow b e) 0).",
            "VernacExtend",
            "7239bbeb8687806329999cd4699fb6b2d6704418"
        ],
        [
            "set (f := match Fdiv_core_binary prec (Z.pos m) 0 (Z.pos (pos_pow b e)) 0 with | (0, _, _) => F754_nan false 1 | (Z.pos mz0, ez, lz) => binary_round_aux prec emax mode_NE (xorb false false) mz0 ez lz | (Z.neg _, _, _) => F754_nan false 1 end).",
            "VernacExtend",
            "682f7461df775f1b607aeba12abf839556a12c48"
        ],
        [
            "fold emin; fold fexp.",
            "VernacExtend",
            "e902875dc03cf15abcd21a62d61e38945c341d5f"
        ],
        [
            "rewrite ! A.",
            "VernacExtend",
            "9e3f1030fb10fcbf4f4498021e21183b896ab5f4"
        ],
        [
            "unfold cond_Zopp.",
            "VernacExtend",
            "b59e6cdb06063b22340d6f1ce56adce0401b8ced"
        ],
        [
            "rewrite pos_pow_spec.",
            "VernacExtend",
            "3f05dce2ba9a1e3b731dd5efd96f8f869fb6cb27"
        ],
        [
            "assert (B: (Z2R (Z.pos m) / Z2R (Z.pos b ^ Z.pos e) = Z2R (Z.pos m) * bpow base (Z.neg e))%R).",
            "VernacExtend",
            "aa49d51510a6dfc9b1778a2ca59b3faa74491eff"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "change (Z.neg e) with (- (Z.pos e)).",
            "VernacExtend",
            "f55ca0d3a766a8cb2605912c0acac3de082e5515"
        ],
        [
            "rewrite bpow_opp.",
            "VernacExtend",
            "3024d5fb06fda2c4f53c69e840b4e7c952a719e1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite B.",
            "VernacExtend",
            "6bc7e557f9b9a2c4deba8e6f4ced1bbbccc735f9"
        ],
        [
            "intros [P Q].",
            "VernacExtend",
            "663dc907ccc489647d55e233d550455f27ce8429"
        ],
        [
            "destruct (Rlt_bool (Rabs (round radix2 fexp (round_mode mode_NE) (Z2R (Z.pos m) * bpow base (Z.neg e)))) (bpow radix2 emax)).",
            "VernacExtend",
            "508d85627e8235e0e5bfeee984b942745baa5b3c"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct Q as (Q1 & Q2 & Q3).",
            "VernacExtend",
            "31a4ea70ec921070abe1414e8f8db1cd5a2d6768"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "rewrite B2R_FF2B, Q1.",
            "VernacExtend",
            "9efe16eff452b10ae9f929959b80d90d471a9b96"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "rewrite is_finite_FF2B.",
            "VernacExtend",
            "adb6f9d6a3c1b4b9f25b5570faeb55449840992f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite Bsign_FF2B.",
            "VernacExtend",
            "76a51b8aae4f12f644ab280018318f288b7848d3"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite B2FF_FF2B.",
            "VernacExtend",
            "8851e97c5b98b133f839ce0c9c9b55327c7d5e4f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Extra_ops.",
            "VernacEndSegment",
            "0952b9b95aeeac0a9a714658205eed782f8fc901"
        ],
        [
            "Section Conversions.",
            "VernacBeginSection",
            "f1025f103f14d1bad1e417b6b83eb62d587d5976"
        ],
        [
            "Variable prec1 emax1 prec2 emax2 : Z.",
            "VernacAssumption",
            "0dc22f930c4bd53a8578d4f84adbd38b3052cc0a"
        ],
        [
            "Context (prec1_gt_0_ : Prec_gt_0 prec1) (prec2_gt_0_ : Prec_gt_0 prec2).",
            "VernacContext",
            "f1888a4a71e97b12aa2456316de788625547ad97"
        ],
        [
            "Let emin1 := (3 - emax1 - prec1)%Z.",
            "VernacDefinition",
            "f0df8ee7718f02b990c048f2230f8804b281a32d"
        ],
        [
            "Let fexp1 := FLT_exp emin1 prec1.",
            "VernacDefinition",
            "a31a3e034312469cc26168c4923760ee51d37464"
        ],
        [
            "Let emin2 := (3 - emax2 - prec2)%Z.",
            "VernacDefinition",
            "8600d85c25432c063e8ffa7ef62fafbf51259962"
        ],
        [
            "Let fexp2 := FLT_exp emin2 prec2.",
            "VernacDefinition",
            "8f1d5bb4fe4e0deaadde067f4b5f033235bf8398"
        ],
        [
            "Hypothesis Hmax1 : (prec1 < emax1)%Z.",
            "VernacAssumption",
            "33eda51bf1df2583cd6a1d8ec489ce4e44470da6"
        ],
        [
            "Hypothesis Hmax2 : (prec2 < emax2)%Z.",
            "VernacAssumption",
            "139d602ff5d275413ce4949221a6e1fca251d42e"
        ],
        [
            "Let binary_float1 := binary_float prec1 emax1.",
            "VernacDefinition",
            "d74418722071d98686e413dbf2c8140d483fdc3a"
        ],
        [
            "Let binary_float2 := binary_float prec2 emax2.",
            "VernacDefinition",
            "6fd6d4c88a4259f96c3e0260d85f930952d68b39"
        ],
        [
            "Definition Bconv (conv_nan: bool -> nan_pl prec1 -> bool * nan_pl prec2) (md: mode) (f: binary_float1) : binary_float2 := match f with | B754_nan _ _ s pl => let '(s, pl) := conv_nan s pl in B754_nan _ _ s pl | B754_infinity _ _ s => B754_infinity _ _ s | B754_zero _ _ s => B754_zero _ _ s | B754_finite _ _ s m e _ => binary_normalize _ _ _ Hmax2 md (cond_Zopp s (Zpos m)) e s end.",
            "VernacDefinition",
            "def1de096fccd51180c8ebfddc1f5cbc36d97ff3"
        ],
        [
            "Theorem Bconv_correct: forall conv_nan m f, is_finite _ _ f = true -> if Rlt_bool (Rabs (round radix2 fexp2 (round_mode m) (B2R _ _ f))) (bpow radix2 emax2) then B2R _ _ (Bconv conv_nan m f) = round radix2 fexp2 (round_mode m) (B2R _ _ f) /\\ is_finite _ _ (Bconv conv_nan m f) = true /\\ Bsign _ _ (Bconv conv_nan m f) = Bsign _ _ f else B2FF _ _ (Bconv conv_nan m f) = binary_overflow prec2 emax2 m (Bsign _ _ f).",
            "VernacStartTheoremProof",
            "90a7f54e41f25332de823a38e1c5c68876f1dbde"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct f; try discriminate.",
            "VernacExtend",
            "1151ab2aae8cfde3885227a3a988e2538687c313"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite round_0.",
            "VernacExtend",
            "625125ccb3011c651c29b92e3197f630d3c9a749"
        ],
        [
            "rewrite Rabs_R0.",
            "VernacExtend",
            "4d6634083a68d86e15f3870da962b3fc61d79ebb"
        ],
        [
            "rewrite Rlt_bool_true.",
            "VernacExtend",
            "31cd82492c96b4dc35f8c36f967bc8802a2bc6ba"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "apply valid_rnd_round_mode.",
            "VernacExtend",
            "20b08e148269eae05657e863e427e37c03e032b6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "generalize (binary_normalize_correct _ _ _ Hmax2 m (cond_Zopp b (Zpos m0)) e b).",
            "VernacExtend",
            "447b66ede847545b4973bac4d62af60b09fef7f8"
        ],
        [
            "fold emin2; fold fexp2.",
            "VernacExtend",
            "f0cb36352745b1c37c96c1358e5b4fc5dd8bad92"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct Rlt_bool.",
            "VernacExtend",
            "1d271c5b254ab8ba15735ed683f2dbe76a7cc342"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros (A & B & C).",
            "VernacExtend",
            "600bc83b778b82e4f76af4dba65aea6d61e17221"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite C.",
            "VernacExtend",
            "6522c35db68091b070ccdd4e87749a3d6da8e69d"
        ],
        [
            "destruct b; simpl.",
            "VernacExtend",
            "bc673f83b7fadb69a2678507bb22b8ff82ac3809"
        ],
        [
            "rewrite Rcompare_Lt.",
            "VernacExtend",
            "1ed9ee0362e725864989e8a5e0bf1041f0280dbf"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply F2R_lt_0_compat.",
            "VernacExtend",
            "02c29d2c58d3045145b3025cc8495a632d8bc4b0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "compute; auto.",
            "VernacExtend",
            "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
        ],
        [
            "rewrite Rcompare_Gt.",
            "VernacExtend",
            "6af5b764e76966598fea1215f8858ea8132ad3dd"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply F2R_gt_0_compat.",
            "VernacExtend",
            "d0292eafc6940cb31b6d7ab8595f82dcefd46a6e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "compute; auto.",
            "VernacExtend",
            "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros A.",
            "VernacExtend",
            "1e674201f6164f095fcb9efa159981a648ffff11"
        ],
        [
            "rewrite A.",
            "VernacExtend",
            "66a3aec75a717b72a3c9a20459f4dabe8d0df2c1"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "destruct b.",
            "VernacExtend",
            "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
        ],
        [
            "apply Rlt_bool_true.",
            "VernacExtend",
            "2dd8acd5318209d40288e95b2cc6a1cd92d8d107"
        ],
        [
            "apply F2R_lt_0_compat.",
            "VernacExtend",
            "02c29d2c58d3045145b3025cc8495a632d8bc4b0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "compute; auto.",
            "VernacExtend",
            "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
        ],
        [
            "apply Rlt_bool_false.",
            "VernacExtend",
            "115f3bf88cb7153f51757af6b09533b60d89f56b"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "apply Rgt_lt.",
            "VernacExtend",
            "9a26c3ea98ad1397e4a20df0b0490f9aec8914bc"
        ],
        [
            "apply F2R_gt_0_compat.",
            "VernacExtend",
            "d0292eafc6940cb31b6d7ab8595f82dcefd46a6e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "compute; auto.",
            "VernacExtend",
            "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Bconv_widen_exact: (prec2 >= prec1)%Z -> (emax2 >= emax1)%Z -> forall conv_nan m f, is_finite _ _ f = true -> B2R _ _ (Bconv conv_nan m f) = B2R _ _ f /\\ is_finite _ _ (Bconv conv_nan m f) = true /\\ Bsign _ _ (Bconv conv_nan m f) = Bsign _ _ f.",
            "VernacStartTheoremProof",
            "03714f770ec6628754bd55b706983d32e48b208e"
        ],
        [
            "intros PREC EMAX; intros.",
            "VernacExtend",
            "84bc50124b5fd416deda228baad81164fb654f56"
        ],
        [
            "generalize (Bconv_correct conv_nan m f H).",
            "VernacExtend",
            "f186c6f48d46f8235b1612352c52c83ec61baa60"
        ],
        [
            "assert (LT: (Rabs (B2R _ _ f) < bpow radix2 emax2)%R).",
            "VernacExtend",
            "36a10a7e0a7d82333d00f6911424f5ec74425721"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct f; try discriminate; simpl.",
            "VernacExtend",
            "a001ee4076eadb2762c273e1dcd9c5a6e655df63"
        ],
        [
            "rewrite Rabs_R0.",
            "VernacExtend",
            "4d6634083a68d86e15f3870da962b3fc61d79ebb"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "apply Rlt_le_trans with (bpow radix2 emax1).",
            "VernacExtend",
            "6bac579739aa96230c3923d72777bd6d070eee4a"
        ],
        [
            "rewrite F2R_cond_Zopp.",
            "VernacExtend",
            "5bcd4a300d182d010607782583450ad1b168bcf5"
        ],
        [
            "rewrite abs_cond_Ropp.",
            "VernacExtend",
            "c6fcafbdfdaab77f4ebc74c1b8dbc81e805c4b11"
        ],
        [
            "rewrite <- F2R_Zabs.",
            "VernacExtend",
            "301e349e7bd7d3dddc956a5691145eb2e8b49880"
        ],
        [
            "simpl Z.abs.",
            "VernacExtend",
            "cc63697155eda649eb28e35f6efa0e7759cf6b89"
        ],
        [
            "eapply bounded_lt_emax; eauto.",
            "VernacExtend",
            "40583405cb9f1a34606f559937e2cd71596e53d3"
        ],
        [
            "apply bpow_le.",
            "VernacExtend",
            "9264f19c0062a0a711efc832825406a995342e90"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (EQ: round radix2 fexp2 (round_mode m) (B2R prec1 emax1 f) = B2R prec1 emax1 f).",
            "VernacExtend",
            "c19f6feb52c282bb85daf135f9f278ceea9b4f00"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply round_generic.",
            "VernacExtend",
            "329c42b8a825480836d8d91cbeb7ff485a68ba31"
        ],
        [
            "apply valid_rnd_round_mode.",
            "VernacExtend",
            "20b08e148269eae05657e863e427e37c03e032b6"
        ],
        [
            "eapply generic_inclusion_le.",
            "VernacExtend",
            "2b0b73782bdc2129ce70640e87930c9e312e26a6"
        ],
        [
            "5: apply generic_format_B2R.",
            "VernacExtend",
            "92816adddba95ba2389f4c41e64f42397ff7f1a3"
        ],
        [
            "apply fexp_correct; auto.",
            "VernacExtend",
            "4ec56761cdd451c636b20d54a8737ee529ef53b5"
        ],
        [
            "apply fexp_correct; auto.",
            "VernacExtend",
            "4ec56761cdd451c636b20d54a8737ee529ef53b5"
        ],
        [
            "instantiate (1 := emax2).",
            "VernacExtend",
            "cdb5d6c39d6949eeb066e886fe2e647c6ef0bd59"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold fexp2, FLT_exp.",
            "VernacExtend",
            "cc4d8e67f6e700a286a3c9c8cbf8b10ec9d0ae43"
        ],
        [
            "unfold emin2.",
            "VernacExtend",
            "597a1993d28120da3d6e72a1d157404e97733ea0"
        ],
        [
            "zify; omega.",
            "VernacExtend",
            "5fb0df05710c307ca01829a575fcf81498a16c8a"
        ],
        [
            "apply Rlt_le; auto.",
            "VernacExtend",
            "4003e3e1c449ee89cad9e953d0a562db8235648c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite EQ.",
            "VernacExtend",
            "359c5e196f83a6afbd9ede635bddbf545fd1eb82"
        ],
        [
            "rewrite Rlt_bool_true by auto.",
            "VernacExtend",
            "00cf13b37c73e725364f5d68b1658e74e3326e64"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Bconv_BofZ: forall conv_nan n, integer_representable prec1 emax1 n -> Bconv conv_nan mode_NE (BofZ prec1 emax1 _ Hmax1 n) = BofZ prec2 emax2 _ Hmax2 n.",
            "VernacStartTheoremProof",
            "66f60ed287157c0c92c6b4c3d0d5f18a81564684"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (BofZ_representable _ _ _ Hmax1 n H) as (A & B & C).",
            "VernacExtend",
            "9f6954eeb0b8057fffab024e68761b0f76e885b2"
        ],
        [
            "set (f := BofZ prec1 emax1 prec1_gt_0_ Hmax1 n) in *.",
            "VernacExtend",
            "66abeb7811a04104c7fb4cb74ac85f7a8c806bc3"
        ],
        [
            "generalize (Bconv_correct conv_nan mode_NE f B).",
            "VernacExtend",
            "8861e41503a28b3dc2e1027b0165251c2592ce07"
        ],
        [
            "unfold BofZ.",
            "VernacExtend",
            "d61d417854efb46824fd580f400b6badd7b21860"
        ],
        [
            "generalize (binary_normalize_correct _ _ _ Hmax2 mode_NE n 0 false).",
            "VernacExtend",
            "90acb07d35225a4471fff01d6d6f158cb4e1eb3b"
        ],
        [
            "fold emin2; fold fexp2.",
            "VernacExtend",
            "f0cb36352745b1c37c96c1358e5b4fc5dd8bad92"
        ],
        [
            "rewrite A.",
            "VernacExtend",
            "66a3aec75a717b72a3c9a20459f4dabe8d0df2c1"
        ],
        [
            "replace (F2R {| Fnum := n; Fexp := 0 |}) with (Z2R n).",
            "VernacExtend",
            "b241113b31ddc3688af41606eab6b958e0868bb4"
        ],
        [
            "destruct Rlt_bool.",
            "VernacExtend",
            "1d271c5b254ab8ba15735ed683f2dbe76a7cc342"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros (P & Q & R) (D & E & F).",
            "VernacExtend",
            "38b32318ff9d6e3940f65929960d3541c282e702"
        ],
        [
            "apply B2R_Bsign_inj; auto.",
            "VernacExtend",
            "f9c8ab320eaf2edac30031b5e20f8559397978a4"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "rewrite F, C, R.",
            "VernacExtend",
            "4ef973af7fda55d0303c19a271229e5c4a18c7e0"
        ],
        [
            "change 0%R with (Z2R 0).",
            "VernacExtend",
            "0aca30e4eaa8ab73d6cf1051499c94fbbfc180f6"
        ],
        [
            "rewrite Rcompare_Z2R.",
            "VernacExtend",
            "99850ffef35692f481a718b264a52d18cbb5d4fc"
        ],
        [
            "unfold Z.ltb.",
            "VernacExtend",
            "72fdcf336c71c80107e336606b5ff3c0dc08ef62"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros P Q.",
            "VernacExtend",
            "7751791de3f7d3a51bb606370c6c0e8f8866edb8"
        ],
        [
            "apply B2FF_inj.",
            "VernacExtend",
            "34eff57b1d6cecac8da247658345ae15e779c4fb"
        ],
        [
            "rewrite P, Q.",
            "VernacExtend",
            "3b6c54c6a061c1fcf846ce33a4d2a6fb79b0de7c"
        ],
        [
            "rewrite C.",
            "VernacExtend",
            "6522c35db68091b070ccdd4e87749a3d6da8e69d"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "change 0%R with (Z2R 0).",
            "VernacExtend",
            "0aca30e4eaa8ab73d6cf1051499c94fbbfc180f6"
        ],
        [
            "generalize (Zlt_bool_spec n 0); intros LT; inversion LT.",
            "VernacExtend",
            "7a7912c6829c7ec5a5e5da6e94b711a6dbf56240"
        ],
        [
            "rewrite Rlt_bool_true; auto.",
            "VernacExtend",
            "fe04b463b609fa38fc3470be5bb720d87b124c14"
        ],
        [
            "apply Z2R_lt; auto.",
            "VernacExtend",
            "30a60cd0d86481f9afcb45fde054acfe581aadd5"
        ],
        [
            "rewrite Rlt_bool_false; auto.",
            "VernacExtend",
            "4671d90f31432cb0b1450065eae26ac9452df6ab"
        ],
        [
            "apply Z2R_le; auto.",
            "VernacExtend",
            "7b1971a0b9305d2b635a8415b3ab7992a22fe4ab"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold F2R; simpl.",
            "VernacExtend",
            "a8b73d273d1c692e5deb932d4bd557029927ed13"
        ],
        [
            "rewrite Rmult_1_r.",
            "VernacExtend",
            "d41d18f77f80ae8595148d0386b68549f3d406cf"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ZofB_Bconv: prec2 >= prec1 -> emax2 >= emax1 -> forall conv_nan m f n, ZofB _ _ f = Some n -> ZofB _ _ (Bconv conv_nan m f) = Some n.",
            "VernacStartTheoremProof",
            "86eda13b53e1a0f43414da00d927df330cccaea6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite ZofB_correct in H1.",
            "VernacExtend",
            "c074068e1ab3946fe6fa2662419305a0f7a81376"
        ],
        [
            "destruct (is_finite _ _ f) eqn:FIN; inversion H1.",
            "VernacExtend",
            "57b6452b25024801ca39d01793a604b05ccaf3b2"
        ],
        [
            "destruct (Bconv_widen_exact H H0 conv_nan m f) as (A & B & C).",
            "VernacExtend",
            "d8e4b16a0801056eac0c2659a2f02d306957b69c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite ZofB_correct.",
            "VernacExtend",
            "f235447f3132d1595b6733ad61da470b6a5cec01"
        ],
        [
            "rewrite B.",
            "VernacExtend",
            "6bc7e557f9b9a2c4deba8e6f4ced1bbbccc735f9"
        ],
        [
            "rewrite A.",
            "VernacExtend",
            "66a3aec75a717b72a3c9a20459f4dabe8d0df2c1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ZofB_range_Bconv: forall min1 max1 min2 max2, prec2 >= prec1 -> emax2 >= emax1 -> min2 <= min1 -> max1 <= max2 -> forall conv_nan m f n, ZofB_range _ _ f min1 max1 = Some n -> ZofB_range _ _ (Bconv conv_nan m f) min2 max2 = Some n.",
            "VernacStartTheoremProof",
            "92e270841c7e18e060029d57acf21683eea2e795"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (ZofB_range_inversion _ _ _ _ _ _ H3) as (A & B & C).",
            "VernacExtend",
            "176d99caa3be80025773606575d4ba78ef1b4443"
        ],
        [
            "unfold ZofB_range.",
            "VernacExtend",
            "2b1055af8514c60dfc2cef737166e86540a1b2d0"
        ],
        [
            "erewrite ZofB_Bconv by eauto.",
            "VernacExtend",
            "e33d99df052a3882ef5e73fcd04fd9d32eb7fc45"
        ],
        [
            "rewrite ! Zle_bool_true by omega.",
            "VernacExtend",
            "744b8a359d97bbde2bafac9f1cb817a7e6dfc574"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Bcompare_Bconv_widen: prec2 >= prec1 -> emax2 >= emax1 -> forall conv_nan m x y, Bcompare _ _ (Bconv conv_nan m x) (Bconv conv_nan m y) = Bcompare _ _ x y.",
            "VernacStartTheoremProof",
            "e4f8a70cc070e09378940ee63055fb1332472921"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (is_finite _ _ x && is_finite _ _ y) eqn:FIN.",
            "VernacExtend",
            "1fd8234178753fcc8d6a694405c7532c17f33858"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply andb_true_iff in FIN.",
            "VernacExtend",
            "f9447fe32a9297001f07fcc32d52e40f7cb63f84"
        ],
        [
            "destruct FIN.",
            "VernacExtend",
            "739dcd7c34c6cb903b9ee09e04914eabdfa4f866"
        ],
        [
            "destruct (Bconv_widen_exact H H0 conv_nan m x H1) as (A & B & C).",
            "VernacExtend",
            "7e9b4d74bef6f42dcafedf2e7d599337682ab4b1"
        ],
        [
            "destruct (Bconv_widen_exact H H0 conv_nan m y H2) as (D & E & F).",
            "VernacExtend",
            "4ee7bce85dad7fec2eb048f10bdfd8272d146d9f"
        ],
        [
            "rewrite ! Bcompare_correct by auto.",
            "VernacExtend",
            "1d17922d64890c80b661fd00c2e782c5d02386f1"
        ],
        [
            "rewrite A, D.",
            "VernacExtend",
            "106c0ceb005bf157e18997508c889c163cbc4c36"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "generalize (Bconv_widen_exact H H0 conv_nan m x) (Bconv_widen_exact H H0 conv_nan m y); intros P Q.",
            "VernacExtend",
            "719644c150f27318ca3512a0f94409ffc254173c"
        ],
        [
            "destruct x, y; try discriminate; simpl in P, Q; simpl; repeat (match goal with |- context [conv_nan ?b ?pl] => destruct (conv_nan b pl) end); auto.",
            "VernacExtend",
            "0f2523a777dabec489de58998f23a784b7b2d87e"
        ],
        [
            "destruct Q as (D & E & F); auto.",
            "VernacExtend",
            "be8f225a6b3fef642086c42126577392ad252cb3"
        ],
        [
            "destruct (binary_normalize prec2 emax2 prec2_gt_0_ Hmax2 m (cond_Zopp b0 (Z.pos m0)) e b0); discriminate || reflexivity.",
            "VernacExtend",
            "2bba0c57b5e4e0e69429671cf19bf7c238782176"
        ],
        [
            "destruct P as (A & B & C); auto.",
            "VernacExtend",
            "3015bb1930abdf73592fb32c9b90088ab70da928"
        ],
        [
            "destruct (binary_normalize prec2 emax2 prec2_gt_0_ Hmax2 m (cond_Zopp b (Z.pos m0)) e b); try discriminate; simpl.",
            "VernacExtend",
            "566c9f4e28bf0595f9c221d952fa9781b9ece388"
        ],
        [
            "destruct b; auto.",
            "VernacExtend",
            "95533d5a0da46eaf4c778d77a0f89adc7cad4aff"
        ],
        [
            "destruct b, b1; auto.",
            "VernacExtend",
            "577839e5c452a155a825252f69a4b8c957cc334c"
        ],
        [
            "destruct P as (A & B & C); auto.",
            "VernacExtend",
            "3015bb1930abdf73592fb32c9b90088ab70da928"
        ],
        [
            "destruct (binary_normalize prec2 emax2 prec2_gt_0_ Hmax2 m (cond_Zopp b (Z.pos m0)) e b); try discriminate; simpl.",
            "VernacExtend",
            "566c9f4e28bf0595f9c221d952fa9781b9ece388"
        ],
        [
            "destruct b; auto.",
            "VernacExtend",
            "95533d5a0da46eaf4c778d77a0f89adc7cad4aff"
        ],
        [
            "destruct b, b2; auto.",
            "VernacExtend",
            "b8a7f2a91a687fcec49a57028156fbd833f2df68"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Conversions.",
            "VernacEndSegment",
            "4691b7d04fe7b17dc3f07dfe92615ba08dd41604"
        ],
        [
            "Section Compose_Conversions.",
            "VernacBeginSection",
            "5e35e528b5536b44487fc152d783cfbffcd2c01f"
        ],
        [
            "Variable prec1 emax1 prec2 emax2 : Z.",
            "VernacAssumption",
            "0dc22f930c4bd53a8578d4f84adbd38b3052cc0a"
        ],
        [
            "Context (prec1_gt_0_ : Prec_gt_0 prec1) (prec2_gt_0_ : Prec_gt_0 prec2).",
            "VernacContext",
            "f1888a4a71e97b12aa2456316de788625547ad97"
        ],
        [
            "Let emin1 := (3 - emax1 - prec1)%Z.",
            "VernacDefinition",
            "f0df8ee7718f02b990c048f2230f8804b281a32d"
        ],
        [
            "Let fexp1 := FLT_exp emin1 prec1.",
            "VernacDefinition",
            "a31a3e034312469cc26168c4923760ee51d37464"
        ],
        [
            "Let emin2 := (3 - emax2 - prec2)%Z.",
            "VernacDefinition",
            "8600d85c25432c063e8ffa7ef62fafbf51259962"
        ],
        [
            "Let fexp2 := FLT_exp emin2 prec2.",
            "VernacDefinition",
            "8f1d5bb4fe4e0deaadde067f4b5f033235bf8398"
        ],
        [
            "Hypothesis Hmax1 : (prec1 < emax1)%Z.",
            "VernacAssumption",
            "33eda51bf1df2583cd6a1d8ec489ce4e44470da6"
        ],
        [
            "Hypothesis Hmax2 : (prec2 < emax2)%Z.",
            "VernacAssumption",
            "139d602ff5d275413ce4949221a6e1fca251d42e"
        ],
        [
            "Let binary_float1 := binary_float prec1 emax1.",
            "VernacDefinition",
            "d74418722071d98686e413dbf2c8140d483fdc3a"
        ],
        [
            "Let binary_float2 := binary_float prec2 emax2.",
            "VernacDefinition",
            "6fd6d4c88a4259f96c3e0260d85f930952d68b39"
        ],
        [
            "Theorem Bconv_narrow_widen: prec2 >= prec1 -> emax2 >= emax1 -> forall narrow_nan widen_nan m f, is_nan _ _ f = false -> Bconv prec2 emax2 prec1 emax1 _ Hmax1 narrow_nan m (Bconv prec1 emax1 prec2 emax2 _ Hmax2 widen_nan m f) = f.",
            "VernacStartTheoremProof",
            "b9bd7cc5d9d72ae8616bc5f394c4b09d000e5b2c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (is_finite _ _ f) eqn:FIN.",
            "VernacExtend",
            "ab7f83294c0f0dae6a7db6f19fbd94a0e603a212"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (EQ: round radix2 fexp1 (round_mode m) (B2R prec1 emax1 f) = B2R prec1 emax1 f).",
            "VernacExtend",
            "8c054c311e81eace3ab44a6bee9c1a9f5a66d3d8"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply round_generic.",
            "VernacExtend",
            "329c42b8a825480836d8d91cbeb7ff485a68ba31"
        ],
        [
            "apply valid_rnd_round_mode.",
            "VernacExtend",
            "20b08e148269eae05657e863e427e37c03e032b6"
        ],
        [
            "apply generic_format_B2R.",
            "VernacExtend",
            "17746e2c3cda8dfb94931be74eb7b5e284b2058f"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "generalize (Bconv_widen_exact _ _ _ _ _ _ Hmax2 H H0 widen_nan m f FIN).",
            "VernacExtend",
            "f5912655f2c095a471772da8583596201c623240"
        ],
        [
            "set (f' := Bconv prec1 emax1 prec2 emax2 _ Hmax2 widen_nan m f).",
            "VernacExtend",
            "4724c2634090ad5992627852beeaafb6241fc5e8"
        ],
        [
            "intros (A & B & C).",
            "VernacExtend",
            "600bc83b778b82e4f76af4dba65aea6d61e17221"
        ],
        [
            "generalize (Bconv_correct _ _ _ _ _ Hmax1 narrow_nan m f' B).",
            "VernacExtend",
            "286b0c10c7eb15d4e328281b7970bfecbde35292"
        ],
        [
            "fold emin1.",
            "VernacExtend",
            "f29ca53a5ca5b3bf8fd700b90551175561f8d4bd"
        ],
        [
            "fold fexp1.",
            "VernacExtend",
            "2c95e755f05db77ef3dfc61d960513156150d783"
        ],
        [
            "rewrite A, C, EQ.",
            "VernacExtend",
            "2b82e9ca61001be3cf5781c08eee17125b4d2649"
        ],
        [
            "rewrite Rlt_bool_true.",
            "VernacExtend",
            "31cd82492c96b4dc35f8c36f967bc8802a2bc6ba"
        ],
        [
            "intros (D & E & F).",
            "VernacExtend",
            "d230d9ba37af16bdf8f2cedfe239d8f00ccf2f59"
        ],
        [
            "apply B2R_Bsign_inj; auto.",
            "VernacExtend",
            "f9c8ab320eaf2edac30031b5e20f8559397978a4"
        ],
        [
            "destruct f; try discriminate; simpl.",
            "VernacExtend",
            "a001ee4076eadb2762c273e1dcd9c5a6e655df63"
        ],
        [
            "rewrite Rabs_R0.",
            "VernacExtend",
            "4d6634083a68d86e15f3870da962b3fc61d79ebb"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "rewrite F2R_cond_Zopp.",
            "VernacExtend",
            "5bcd4a300d182d010607782583450ad1b168bcf5"
        ],
        [
            "rewrite abs_cond_Ropp.",
            "VernacExtend",
            "c6fcafbdfdaab77f4ebc74c1b8dbc81e805c4b11"
        ],
        [
            "rewrite <- F2R_Zabs.",
            "VernacExtend",
            "301e349e7bd7d3dddc956a5691145eb2e8b49880"
        ],
        [
            "simpl Z.abs.",
            "VernacExtend",
            "cc63697155eda649eb28e35f6efa0e7759cf6b89"
        ],
        [
            "eapply bounded_lt_emax; eauto.",
            "VernacExtend",
            "40583405cb9f1a34606f559937e2cd71596e53d3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct f; try discriminate.",
            "VernacExtend",
            "1151ab2aae8cfde3885227a3a988e2538687c313"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Compose_Conversions.",
            "VernacEndSegment",
            "24213ace2cf76270f9059e4be42925aadfacb67b"
        ]
    ],
    "proofs": [
        {
            "name": "is_finite_not_is_nan",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "destruct f; reflexivity || discriminate.",
                        "VernacExtend",
                        "d57f55e679677d71edc2452439c1f574f515b6b9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_finite_strict_finite",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "destruct f; reflexivity || discriminate.",
                        "VernacExtend",
                        "d57f55e679677d71edc2452439c1f574f515b6b9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Bsign_pos0",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct x as [ [] | | | [] ex mx Bx ]; try discriminate; simpl.",
                        "VernacExtend",
                        "646b9b00c16e8762ce955e7629476c4632d35a8d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Rlt_bool_false; auto.",
                        "VernacExtend",
                        "4671d90f31432cb0b1450065eae26ac9452df6ab"
                    ]
                },
                {
                    "command": [
                        "lra.",
                        "VernacExtend",
                        "c37bca18aec699b6843eab75e25df2491e3b9848"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Rlt_bool_true; auto.",
                        "VernacExtend",
                        "fe04b463b609fa38fc3470be5bb720d87b124c14"
                    ]
                },
                {
                    "command": [
                        "apply F2R_lt_0_compat.",
                        "VernacExtend",
                        "02c29d2c58d3045145b3025cc8495a632d8bc4b0"
                    ]
                },
                {
                    "command": [
                        "compute; auto.",
                        "VernacExtend",
                        "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Rlt_bool_false; auto.",
                        "VernacExtend",
                        "4671d90f31432cb0b1450065eae26ac9452df6ab"
                    ]
                },
                {
                    "command": [
                        "assert ((F2R (Float radix2 (Z.pos ex) mx) > 0)%R) by ( apply F2R_gt_0_compat; compute; auto ).",
                        "VernacExtend",
                        "a96ec5a6b74e14ee24e07ec9d9484dd306cb7847"
                    ]
                },
                {
                    "command": [
                        "lra.",
                        "VernacExtend",
                        "c37bca18aec699b6843eab75e25df2491e3b9848"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "B2R_inj_pos0",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply B2R_Bsign_inj.",
                        "VernacExtend",
                        "a09b0f96f6caf1961d0b32c66eb42a20ba11b5e5"
                    ]
                },
                {
                    "command": [
                        "destruct x; reflexivity||discriminate.",
                        "VernacExtend",
                        "b003f37149feb5784fb53b00b404b4299163f04e"
                    ]
                },
                {
                    "command": [
                        "destruct y; reflexivity||discriminate.",
                        "VernacExtend",
                        "d46066a6acf6223ca66ba3a7de8f5f8111c1d079"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite ! Bsign_pos0 by auto.",
                        "VernacExtend",
                        "bd3d9c02c4d8795f2984cc9c768cf7db75730ca5"
                    ]
                },
                {
                    "command": [
                        "rewrite H1; auto.",
                        "VernacExtend",
                        "1413124b63144a92c2b8c7e916995d6cd3746a77"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Beq_dec",
            "line_nb": 51,
            "steps": [
                {
                    "command": [
                        "assert (UIP_bool: forall (b1 b2: bool) (e e': b1 = b2), e = e').",
                        "VernacExtend",
                        "3a4098ad9b150b6e26ea8171db41317eeacf9d59"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply UIP_dec.",
                        "VernacExtend",
                        "5360b093d60d28a440197464b45f370aca4a3133"
                    ]
                },
                {
                    "command": [
                        "decide equality.",
                        "VernacExtend",
                        "10aba07d521545accbb51a4c2e0695a9ddce3199"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Ltac try_not_eq := try solve [right; congruence].",
                        "VernacExtend",
                        "3cc3e3ed80de98ff5d1e132f99a4c60690838675"
                    ]
                },
                {
                    "command": [
                        "destruct f1 as [| |? []|], f2 as [| |? []|]; try destruct b; try destruct b0; try solve [left; auto]; try_not_eq.",
                        "VernacExtend",
                        "00cd168ee6fa10f996fcf0df9453ab5bb2b7168b"
                    ]
                },
                {
                    "command": [
                        "destruct (Pos.eq_dec x x0); try_not_eq; subst; left; f_equal; f_equal; apply UIP_bool.",
                        "VernacExtend",
                        "baf19db8bb4e3547d1d03b9145a8ca4a034ba325"
                    ]
                },
                {
                    "command": [
                        "destruct (Pos.eq_dec x x0); try_not_eq; subst; left; f_equal; f_equal; apply UIP_bool.",
                        "VernacExtend",
                        "baf19db8bb4e3547d1d03b9145a8ca4a034ba325"
                    ]
                },
                {
                    "command": [
                        "destruct (Pos.eq_dec m m0); try_not_eq; destruct (Z.eq_dec e e1); try solve [right; intro H; inversion H; congruence]; subst; left; f_equal; apply UIP_bool.",
                        "VernacExtend",
                        "003039c51d954722a9f0e7e187e3a2935a26f6c2"
                    ]
                },
                {
                    "command": [
                        "destruct (Pos.eq_dec m m0); try_not_eq; destruct (Z.eq_dec e e1); try solve [right; intro H; inversion H; congruence]; subst; left; f_equal; apply UIP_bool.",
                        "VernacExtend",
                        "003039c51d954722a9f0e7e187e3a2935a26f6c2"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "int_upper_bound_eq",
            "line_nb": 66,
            "steps": [
                {
                    "command": [
                        "red in prec_gt_0_.",
                        "VernacExtend",
                        "4b29078a2865ccd92928eaceffc91659787acb4b"
                    ]
                },
                {
                    "command": [
                        "ring_simplify.",
                        "VernacExtend",
                        "31578f61427562191ce5389abf97dbf9985ea04c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Zpower_plus radix2) by omega.",
                        "VernacExtend",
                        "05151a82acdcd0296850844d2ad40b2e48f1c68d"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "integer_representable_n2p",
            "line_nb": 74,
            "steps": [
                {
                    "command": [
                        "intros; split.",
                        "VernacExtend",
                        "786909835bea92a2bb1ac0d0634a6eb379d5f275"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "red in prec_gt_0_.",
                        "VernacExtend",
                        "4b29078a2865ccd92928eaceffc91659787acb4b"
                    ]
                },
                {
                    "command": [
                        "replace (Z.abs (n * 2^p)) with (Z.abs n * 2^p).",
                        "VernacExtend",
                        "40be955dd27df2ddce9e2adaadbfed3c99987dbc"
                    ]
                },
                {
                    "command": [
                        "rewrite int_upper_bound_eq.",
                        "VernacExtend",
                        "fc2b91ec9bf534b31e54e931ec9b08e741ae176d"
                    ]
                },
                {
                    "command": [
                        "apply Zmult_le_compat.",
                        "VernacExtend",
                        "b33eefd4019e95e2e889681f6e56c30da0c59a1c"
                    ]
                },
                {
                    "command": [
                        "zify; omega.",
                        "VernacExtend",
                        "5fb0df05710c307ca01829a575fcf81498a16c8a"
                    ]
                },
                {
                    "command": [
                        "apply (Zpower_le radix2); omega.",
                        "VernacExtend",
                        "f523d69e53f1c84a2277fc55a5cc33cffb17932b"
                    ]
                },
                {
                    "command": [
                        "zify; omega.",
                        "VernacExtend",
                        "5fb0df05710c307ca01829a575fcf81498a16c8a"
                    ]
                },
                {
                    "command": [
                        "apply (Zpower_ge_0 radix2).",
                        "VernacExtend",
                        "b534f4756c8a1ce37579c7b345b6d68fbc8eb757"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.abs_mul.",
                        "VernacExtend",
                        "dfb9f0d76126b7e944ccf206eb99068d32732573"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.abs_eq.",
                        "VernacExtend",
                        "4d74d669a671e59eb9a86ae3d0d908e33e8120a7"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply (Zpower_ge_0 radix2).",
                        "VernacExtend",
                        "b534f4756c8a1ce37579c7b345b6d68fbc8eb757"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_FLT.",
                        "VernacExtend",
                        "555f10b505d8f1b986407a7320ce6fa79605c566"
                    ]
                },
                {
                    "command": [
                        "exists (Float radix2 n p).",
                        "VernacExtend",
                        "386f2fa785ef160d4ddd5e59f16018b98f926855"
                    ]
                },
                {
                    "command": [
                        "unfold F2R; simpl.",
                        "VernacExtend",
                        "a8b73d273d1c692e5deb932d4bd557029927ed13"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_Zpower by auto.",
                        "VernacExtend",
                        "d4e249139aa26c4ea44e3fa178e0d75fc43f429d"
                    ]
                },
                {
                    "command": [
                        "apply Z2R_mult.",
                        "VernacExtend",
                        "d48fa9ef79dedde1f7a047d74613b32be9dd85dd"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "zify; omega.",
                        "VernacExtend",
                        "5fb0df05710c307ca01829a575fcf81498a16c8a"
                    ]
                },
                {
                    "command": [
                        "unfold emin; red in prec_gt_0_; omega.",
                        "VernacExtend",
                        "3847582fdeb81ed3e60d00df49bf24629555a475"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "integer_representable_2p",
            "line_nb": 101,
            "steps": [
                {
                    "command": [
                        "intros; split.",
                        "VernacExtend",
                        "786909835bea92a2bb1ac0d0634a6eb379d5f275"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "red in prec_gt_0_.",
                        "VernacExtend",
                        "4b29078a2865ccd92928eaceffc91659787acb4b"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.abs_eq by (apply (Zpower_ge_0 radix2)).",
                        "VernacExtend",
                        "234de1bff11d56f17346a668ec2d91b7512a74e8"
                    ]
                },
                {
                    "command": [
                        "apply Z.le_trans with (2^(emax-1)).",
                        "VernacExtend",
                        "340a3065fcb8b1edccf904e6d17d75906b35b29e"
                    ]
                },
                {
                    "command": [
                        "apply (Zpower_le radix2); omega.",
                        "VernacExtend",
                        "f523d69e53f1c84a2277fc55a5cc33cffb17932b"
                    ]
                },
                {
                    "command": [
                        "assert (2^emax = 2^(emax-1)*2).",
                        "VernacExtend",
                        "9837178668726a0f526405d367da14b4bd8ccdd9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "change 2 with (2^1) at 3.",
                        "VernacExtend",
                        "79cc17ad75b19c834926763b1dfc3c9c896cf346"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Zpower_plus radix2) by omega.",
                        "VernacExtend",
                        "05151a82acdcd0296850844d2ad40b2e48f1c68d"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (2^(emax - prec) <= 2^(emax - 1)).",
                        "VernacExtend",
                        "3ab603a07b0aebcad5af416bc41fe2d2cd469bfe"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply (Zpower_le radix2).",
                        "VernacExtend",
                        "e887cb624ab91c9d6bbeedf2995671499458cafe"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "red in prec_gt_0_.",
                        "VernacExtend",
                        "4b29078a2865ccd92928eaceffc91659787acb4b"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_FLT.",
                        "VernacExtend",
                        "555f10b505d8f1b986407a7320ce6fa79605c566"
                    ]
                },
                {
                    "command": [
                        "exists (Float radix2 1 p).",
                        "VernacExtend",
                        "ffce3908140b32d5cd8bdcad2210724a8945339e"
                    ]
                },
                {
                    "command": [
                        "unfold F2R; simpl.",
                        "VernacExtend",
                        "a8b73d273d1c692e5deb932d4bd557029927ed13"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_l.",
                        "VernacExtend",
                        "1ba58092cf1ca2fa8155dfa9c64894290b0f39df"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_Zpower.",
                        "VernacExtend",
                        "6a737b45852133a11ffa7a0af2881be74773d2b4"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "change 1 with (2^0).",
                        "VernacExtend",
                        "73d4e5661c01108af99ff7c06a8170c1b2277923"
                    ]
                },
                {
                    "command": [
                        "apply (Zpower_lt radix2).",
                        "VernacExtend",
                        "ded278edfe3e290020d0c15346dbbb25baa79b42"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "unfold emin; omega.",
                        "VernacExtend",
                        "d26aa6b8f56948c9f9dd486fdd2c59a9fc725537"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "integer_representable_opp",
            "line_nb": 138,
            "steps": [
                {
                    "command": [
                        "intros n (A & B); split.",
                        "VernacExtend",
                        "ae0f2c5a05e1b8cf78664d2c2ba9ba5cf1b65d07"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.abs_opp.",
                        "VernacExtend",
                        "ec9b85953ca6dd541dab910eb2da13f42d984671"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_opp.",
                        "VernacExtend",
                        "f3d51769485a2c167744d3d3fd4fffa672e5e611"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_opp; auto.",
                        "VernacExtend",
                        "a6f777cf74fb998313d6740812b53dcea28bb7c7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "integer_representable_n2p_wide",
            "line_nb": 145,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "red in prec_gt_0_.",
                        "VernacExtend",
                        "4b29078a2865ccd92928eaceffc91659787acb4b"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.eq_dec n (2^prec)); [idtac | destruct (Z.eq_dec n (-2^prec))].",
                        "VernacExtend",
                        "6e19b9ccccfa2ab4fe55c6e3f6d70b16f0623cf5"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite e.",
                        "VernacExtend",
                        "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Zpower_plus radix2) by omega.",
                        "VernacExtend",
                        "05151a82acdcd0296850844d2ad40b2e48f1c68d"
                    ]
                },
                {
                    "command": [
                        "apply integer_representable_2p.",
                        "VernacExtend",
                        "fabf3fa99b434cab5c8f978705fd18b8f2291184"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite e.",
                        "VernacExtend",
                        "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Zopp_mult_distr_l.",
                        "VernacExtend",
                        "793267bc17cdca79103d81fb3367e80db2d1a5d0"
                    ]
                },
                {
                    "command": [
                        "apply integer_representable_opp.",
                        "VernacExtend",
                        "aa27e5f3c704b39f376efd2351818d0b92dbb511"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Zpower_plus radix2) by omega.",
                        "VernacExtend",
                        "05151a82acdcd0296850844d2ad40b2e48f1c68d"
                    ]
                },
                {
                    "command": [
                        "apply integer_representable_2p.",
                        "VernacExtend",
                        "fabf3fa99b434cab5c8f978705fd18b8f2291184"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply integer_representable_n2p; omega.",
                        "VernacExtend",
                        "b340df19dd38a48420532765a51e9cdaeab596e5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "integer_representable_n",
            "line_nb": 164,
            "steps": [
                {
                    "command": [
                        "red in prec_gt_0_.",
                        "VernacExtend",
                        "4b29078a2865ccd92928eaceffc91659787acb4b"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace n with (n * 2^0) by (change (2^0) with 1; ring).",
                        "VernacExtend",
                        "d9dc6b46644e97bb5977df3a7ee0c9f6654d8d92"
                    ]
                },
                {
                    "command": [
                        "apply integer_representable_n2p_wide.",
                        "VernacExtend",
                        "23e726d7b459f89f7dc0564e7bcfcc0d15b422e4"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_int_no_overflow",
            "line_nb": 173,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "red in prec_gt_0_.",
                        "VernacExtend",
                        "4b29078a2865ccd92928eaceffc91659787acb4b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- round_NE_abs.",
                        "VernacExtend",
                        "14904ff5d35ba3556a9bbd77db3a4654a17b5f3b"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (Z2R (2^emax - 2^(emax-prec))).",
                        "VernacExtend",
                        "eca6f5ee0b8868b493e9941eb70ac0fab9700678"
                    ]
                },
                {
                    "command": [
                        "apply round_le_generic.",
                        "VernacExtend",
                        "04cb9c8decee91f3dd7c1ed48f010d87c1bbe053"
                    ]
                },
                {
                    "command": [
                        "apply fexp_correct; auto.",
                        "VernacExtend",
                        "4ec56761cdd451c636b20d54a8737ee529ef53b5"
                    ]
                },
                {
                    "command": [
                        "apply valid_rnd_N.",
                        "VernacExtend",
                        "f4ab421000309491d6dc83c8b908849b63ff85b0"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_FLT.",
                        "VernacExtend",
                        "555f10b505d8f1b986407a7320ce6fa79605c566"
                    ]
                },
                {
                    "command": [
                        "exists (Float radix2 (2^prec-1) (emax-prec)).",
                        "VernacExtend",
                        "0cd62740017bd39c5a9b560f832720d14f9998a8"
                    ]
                },
                {
                    "command": [
                        "rewrite int_upper_bound_eq.",
                        "VernacExtend",
                        "fc2b91ec9bf534b31e54e931ec9b08e741ae176d"
                    ]
                },
                {
                    "command": [
                        "unfold F2R; simpl.",
                        "VernacExtend",
                        "a8b73d273d1c692e5deb932d4bd557029927ed13"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_Zpower by omega.",
                        "VernacExtend",
                        "bc3388d59814ca4d9994fae141ed9a4d348c5e2f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_mult.",
                        "VernacExtend",
                        "4bfcef9c6d8659a267de59ca9647b2d107af9b2a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assert (0 < 2^prec) by (apply (Zpower_gt_0 radix2); omega).",
                        "VernacExtend",
                        "34b54f7c2991de3eb2b2ce345672090938f01a87"
                    ]
                },
                {
                    "command": [
                        "zify; omega.",
                        "VernacExtend",
                        "5fb0df05710c307ca01829a575fcf81498a16c8a"
                    ]
                },
                {
                    "command": [
                        "unfold emin; omega.",
                        "VernacExtend",
                        "d26aa6b8f56948c9f9dd486fdd2c59a9fc725537"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_abs.",
                        "VernacExtend",
                        "77629e87057563edf3f2c544c80c7822cbaa734b"
                    ]
                },
                {
                    "command": [
                        "apply Z2R_le.",
                        "VernacExtend",
                        "b1047db1ca8ec0d49de6b93d8ab59e7c07265bfb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_Zpower by omega.",
                        "VernacExtend",
                        "bc3388d59814ca4d9994fae141ed9a4d348c5e2f"
                    ]
                },
                {
                    "command": [
                        "apply Z2R_lt.",
                        "VernacExtend",
                        "20648688afbdacefe3b6070755cbe6f263ce5093"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "assert (0 < 2^(emax-prec)) by (apply (Zpower_gt_0 radix2); omega).",
                        "VernacExtend",
                        "84fd658c1ba452f32c4e0bc0e75b60da8e86f588"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply fexp_correct.",
                        "VernacExtend",
                        "85498cdb4b6cb0deee6b9206d6250d0397d5aa89"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BofZ_correct",
            "line_nb": 205,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (binary_normalize_correct prec emax prec_gt_0_ Hmax mode_NE n 0 false).",
                        "VernacExtend",
                        "2658cef91fa1bcb6d2f6156ce27b882a9d40bfda"
                    ]
                },
                {
                    "command": [
                        "fold emin; fold fexp; fold (BofZ n).",
                        "VernacExtend",
                        "2cc327cb102612bf1dd2ca11641302596501c819"
                    ]
                },
                {
                    "command": [
                        "replace (F2R {| Fnum := n; Fexp := 0 |}) with (Z2R n).",
                        "VernacExtend",
                        "b241113b31ddc3688af41606eab6b958e0868bb4"
                    ]
                },
                {
                    "command": [
                        "destruct Rlt_bool.",
                        "VernacExtend",
                        "1d271c5b254ab8ba15735ed683f2dbe76a7cc342"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros (A & B & C).",
                        "VernacExtend",
                        "600bc83b778b82e4f76af4dba65aea6d61e17221"
                    ]
                },
                {
                    "command": [
                        "split; [|split].",
                        "VernacExtend",
                        "d2f933e98f73ab8a5c6be2969adff348cdfe06d5"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite C.",
                        "VernacExtend",
                        "6522c35db68091b070ccdd4e87749a3d6da8e69d"
                    ]
                },
                {
                    "command": [
                        "change 0%R with (Z2R 0).",
                        "VernacExtend",
                        "0aca30e4eaa8ab73d6cf1051499c94fbbfc180f6"
                    ]
                },
                {
                    "command": [
                        "rewrite Rcompare_Z2R.",
                        "VernacExtend",
                        "99850ffef35692f481a718b264a52d18cbb5d4fc"
                    ]
                },
                {
                    "command": [
                        "unfold Z.ltb.",
                        "VernacExtend",
                        "72fdcf336c71c80107e336606b5ff3c0dc08ef62"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros A; rewrite A.",
                        "VernacExtend",
                        "488f25ccb6b2d65b11068deeda1117696a0e02ec"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "change 0%R with (Z2R 0).",
                        "VernacExtend",
                        "0aca30e4eaa8ab73d6cf1051499c94fbbfc180f6"
                    ]
                },
                {
                    "command": [
                        "generalize (Z.ltb_spec n 0); intros SPEC; inversion SPEC.",
                        "VernacExtend",
                        "46301cb94557e418446b8b9371c99debe96458f5"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_bool_true; apply Z2R_lt; auto.",
                        "VernacExtend",
                        "5fbfb90fd8a13706d744fa4ef56bf9d84d45e479"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_bool_false; apply Z2R_le; auto.",
                        "VernacExtend",
                        "2919797a5b9fb64707699bf407582ad900852956"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold F2R; simpl.",
                        "VernacExtend",
                        "a8b73d273d1c692e5deb932d4bd557029927ed13"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BofZ_finite",
            "line_nb": 235,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (BofZ_correct n).",
                        "VernacExtend",
                        "2540b0727a7381540ffd1ac61144d855e02c7048"
                    ]
                },
                {
                    "command": [
                        "rewrite Rlt_bool_true.",
                        "VernacExtend",
                        "31cd82492c96b4dc35f8c36f967bc8802a2bc6ba"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply round_int_no_overflow; auto.",
                        "VernacExtend",
                        "95b6882cda02319d762fa0ec12a5a308c8fc1b11"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BofZ_representable",
            "line_nb": 242,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H as (P & Q).",
                        "VernacExtend",
                        "52c3475ab9b2dd345051d0ee4bd07c4093d505c6"
                    ]
                },
                {
                    "command": [
                        "destruct (BofZ_finite n) as (A & B & C).",
                        "VernacExtend",
                        "856ef115359fc4430c68f55017a9a515c3f5c6cb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "rewrite A.",
                        "VernacExtend",
                        "66a3aec75a717b72a3c9a20459f4dabe8d0df2c1"
                    ]
                },
                {
                    "command": [
                        "apply round_generic.",
                        "VernacExtend",
                        "329c42b8a825480836d8d91cbeb7ff485a68ba31"
                    ]
                },
                {
                    "command": [
                        "apply valid_rnd_round_mode.",
                        "VernacExtend",
                        "20b08e148269eae05657e863e427e37c03e032b6"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BofZ_exact",
            "line_nb": 253,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply BofZ_representable.",
                        "VernacExtend",
                        "0c0dbd7150e34bb97b8cb1ebc86e3eec11e0530c"
                    ]
                },
                {
                    "command": [
                        "apply integer_representable_n; auto.",
                        "VernacExtend",
                        "e7579ea4ba88dc0bc6d77a0170cabe01629de62f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BofZ_finite_pos0",
            "line_nb": 258,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (binary_normalize_correct prec emax prec_gt_0_ Hmax mode_NE n 0 false).",
                        "VernacExtend",
                        "2658cef91fa1bcb6d2f6156ce27b882a9d40bfda"
                    ]
                },
                {
                    "command": [
                        "fold emin; fold fexp; fold (BofZ n).",
                        "VernacExtend",
                        "2cc327cb102612bf1dd2ca11641302596501c819"
                    ]
                },
                {
                    "command": [
                        "replace (F2R {| Fnum := n; Fexp := 0 |}) with (Z2R n) by (unfold F2R; simpl; ring).",
                        "VernacExtend",
                        "3be0e3d39c2d083577e1fa3aa67d42412d006d89"
                    ]
                },
                {
                    "command": [
                        "rewrite Rlt_bool_true by (apply round_int_no_overflow; auto).",
                        "VernacExtend",
                        "f9ad39eeeff591a068380642cff5f21558568b52"
                    ]
                },
                {
                    "command": [
                        "intros (A & B & C).",
                        "VernacExtend",
                        "600bc83b778b82e4f76af4dba65aea6d61e17221"
                    ]
                },
                {
                    "command": [
                        "destruct (BofZ n); auto; try discriminate.",
                        "VernacExtend",
                        "79de1f17f96b7d2afefd18fad122ae6b306fcd84"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "rewrite C.",
                        "VernacExtend",
                        "6522c35db68091b070ccdd4e87749a3d6da8e69d"
                    ]
                },
                {
                    "command": [
                        "change 0%R with (Z2R 0).",
                        "VernacExtend",
                        "0aca30e4eaa8ab73d6cf1051499c94fbbfc180f6"
                    ]
                },
                {
                    "command": [
                        "rewrite Rcompare_Z2R.",
                        "VernacExtend",
                        "99850ffef35692f481a718b264a52d18cbb5d4fc"
                    ]
                },
                {
                    "command": [
                        "generalize (Zcompare_spec n 0); intros SPEC; inversion SPEC; auto.",
                        "VernacExtend",
                        "6557908ddff451d4ab15da5731ab4f1cb2a24694"
                    ]
                },
                {
                    "command": [
                        "assert ((round radix2 fexp ZnearestE (Z2R n) <= -1)%R).",
                        "VernacExtend",
                        "de301b088681526d88f2e54750c0567545cf335f"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "change (-1)%R with (Z2R (-1)).",
                        "VernacExtend",
                        "ade50b6cb0cfcbaab7fe8e0bcb822154125bb75d"
                    ]
                },
                {
                    "command": [
                        "apply round_le_generic.",
                        "VernacExtend",
                        "04cb9c8decee91f3dd7c1ed48f010d87c1bbe053"
                    ]
                },
                {
                    "command": [
                        "apply fexp_correct.",
                        "VernacExtend",
                        "85498cdb4b6cb0deee6b9206d6250d0397d5aa89"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply valid_rnd_N.",
                        "VernacExtend",
                        "f4ab421000309491d6dc83c8b908849b63ff85b0"
                    ]
                },
                {
                    "command": [
                        "apply (integer_representable_opp 1).",
                        "VernacExtend",
                        "c960ae58f60411a94afd2cb7d6739c92954bd5fa"
                    ]
                },
                {
                    "command": [
                        "apply (integer_representable_2p 0).",
                        "VernacExtend",
                        "dc0a9fde79b34bf322ec3782dddc5ebedbacdef8"
                    ]
                },
                {
                    "command": [
                        "red in prec_gt_0_; omega.",
                        "VernacExtend",
                        "d5dab93f8056283198d3a561eaaa85ddc796bdea"
                    ]
                },
                {
                    "command": [
                        "apply Z2R_le; omega.",
                        "VernacExtend",
                        "48e544720b256ddb4a7e9f49475d76732a118d7b"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "lra.",
                        "VernacExtend",
                        "c37bca18aec699b6843eab75e25df2491e3b9848"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BofZ_finite_equal",
            "line_nb": 285,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply B2R_inj_pos0; auto; apply BofZ_finite_pos0; auto.",
                        "VernacExtend",
                        "236ec9735dbd30a2822484d84febb35754928b7e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BofZ_plus",
            "line_nb": 289,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (BofZ_representable p) as (A & B & C); auto.",
                        "VernacExtend",
                        "b54734d80b08d361b42d0600762969c9f04fbed9"
                    ]
                },
                {
                    "command": [
                        "destruct (BofZ_representable q) as (D & E & F); auto.",
                        "VernacExtend",
                        "b08284554bc05fc090c6425c474bd0148baaf3c4"
                    ]
                },
                {
                    "command": [
                        "generalize (Bplus_correct _ _ _ Hmax nan mode_NE (BofZ p) (BofZ q) B E).",
                        "VernacExtend",
                        "c94051c6e55a838eb8532f2309a968561ed0902b"
                    ]
                },
                {
                    "command": [
                        "fold emin; fold fexp.",
                        "VernacExtend",
                        "e902875dc03cf15abcd21a62d61e38945c341d5f"
                    ]
                },
                {
                    "command": [
                        "rewrite A, D.",
                        "VernacExtend",
                        "106c0ceb005bf157e18997508c889c163cbc4c36"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_plus.",
                        "VernacExtend",
                        "34b18f1df9cc7268c70f355324b3f0e0fcc9644f"
                    ]
                },
                {
                    "command": [
                        "generalize (BofZ_correct (p + q)).",
                        "VernacExtend",
                        "f7ec8508ed54f39c5e7c53bfa3793683db07368e"
                    ]
                },
                {
                    "command": [
                        "destruct Rlt_bool.",
                        "VernacExtend",
                        "1d271c5b254ab8ba15735ed683f2dbe76a7cc342"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros (P & Q & R) (U & V & W).",
                        "VernacExtend",
                        "4b33fd81102583a86e95213bfedddf5592a3ff16"
                    ]
                },
                {
                    "command": [
                        "apply B2R_Bsign_inj; auto.",
                        "VernacExtend",
                        "f9c8ab320eaf2edac30031b5e20f8559397978a4"
                    ]
                },
                {
                    "command": [
                        "rewrite P, U; auto.",
                        "VernacExtend",
                        "cefa74d6b31cb8010f9a91cec2c860fa53d4db95"
                    ]
                },
                {
                    "command": [
                        "rewrite R, W, C, F.",
                        "VernacExtend",
                        "283e4a1d7129ac2cbf3f57de39cdaf17edb400ff"
                    ]
                },
                {
                    "command": [
                        "change 0%R with (Z2R 0).",
                        "VernacExtend",
                        "0aca30e4eaa8ab73d6cf1051499c94fbbfc180f6"
                    ]
                },
                {
                    "command": [
                        "rewrite Rcompare_Z2R.",
                        "VernacExtend",
                        "99850ffef35692f481a718b264a52d18cbb5d4fc"
                    ]
                },
                {
                    "command": [
                        "unfold Z.ltb at 3.",
                        "VernacExtend",
                        "b277f47f13d77c426ed5e54b8afd48ae7a8e63ca"
                    ]
                },
                {
                    "command": [
                        "generalize (Zcompare_spec (p + q) 0); intros SPEC; inversion SPEC; auto.",
                        "VernacExtend",
                        "ce3d372166532320a94f5bbc6812fb3eeb12d106"
                    ]
                },
                {
                    "command": [
                        "assert (EITHER: 0 <= p \\/ 0 <= q) by omega.",
                        "VernacExtend",
                        "9ce92807c46cd4bc03fffeb77289ee73cd3145d6"
                    ]
                },
                {
                    "command": [
                        "destruct EITHER; [apply andb_false_intro1 | apply andb_false_intro2]; apply Zlt_bool_false; auto.",
                        "VernacExtend",
                        "f9609cc8b402b1ec1e0ea1e314e7efc2420cb283"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros P (U & V).",
                        "VernacExtend",
                        "3e60601dbb8423a43eeb8e91e2e299ec21447a59"
                    ]
                },
                {
                    "command": [
                        "apply B2FF_inj.",
                        "VernacExtend",
                        "34eff57b1d6cecac8da247658345ae15e779c4fb"
                    ]
                },
                {
                    "command": [
                        "rewrite P, U, C.",
                        "VernacExtend",
                        "dd60bfd95cf9ca5133f127cbf10186d1911e03aa"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite C, F in V.",
                        "VernacExtend",
                        "1cb6805fae76bfe79e1eee5619fec104e584e921"
                    ]
                },
                {
                    "command": [
                        "generalize (Zlt_bool_spec p 0) (Zlt_bool_spec q 0).",
                        "VernacExtend",
                        "9442b0a96dd66ba782d3c7012aeec8c2bc214040"
                    ]
                },
                {
                    "command": [
                        "rewrite <- V.",
                        "VernacExtend",
                        "2d88f5df5bfc3c63fa944c0af670fa4abe612bb2"
                    ]
                },
                {
                    "command": [
                        "intros SPEC1 SPEC2; inversion SPEC1; inversion SPEC2; try congruence; symmetry.",
                        "VernacExtend",
                        "a9d8b00a2ea14b10c058bd4a24896ce236b9274e"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_bool_true; omega.",
                        "VernacExtend",
                        "b9d4118dd908a461f3b62bb2b756586ab889339a"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_bool_false; omega.",
                        "VernacExtend",
                        "b62332062b2c1aeda2447e5c5aeddee6f1af38a6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BofZ_minus",
            "line_nb": 322,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (BofZ_representable p) as (A & B & C); auto.",
                        "VernacExtend",
                        "b54734d80b08d361b42d0600762969c9f04fbed9"
                    ]
                },
                {
                    "command": [
                        "destruct (BofZ_representable q) as (D & E & F); auto.",
                        "VernacExtend",
                        "b08284554bc05fc090c6425c474bd0148baaf3c4"
                    ]
                },
                {
                    "command": [
                        "generalize (Bminus_correct _ _ _ Hmax nan mode_NE (BofZ p) (BofZ q) B E).",
                        "VernacExtend",
                        "27f6d17682c18c12b58f94e5fa81c558b653dcaa"
                    ]
                },
                {
                    "command": [
                        "fold emin; fold fexp.",
                        "VernacExtend",
                        "e902875dc03cf15abcd21a62d61e38945c341d5f"
                    ]
                },
                {
                    "command": [
                        "rewrite A, D.",
                        "VernacExtend",
                        "106c0ceb005bf157e18997508c889c163cbc4c36"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_minus.",
                        "VernacExtend",
                        "7d4fecf8931f8ca938d25720366e724d7310a2f3"
                    ]
                },
                {
                    "command": [
                        "generalize (BofZ_correct (p - q)).",
                        "VernacExtend",
                        "fde282817c4cf2da9597eaad17efa3cc8b1deaf7"
                    ]
                },
                {
                    "command": [
                        "destruct Rlt_bool.",
                        "VernacExtend",
                        "1d271c5b254ab8ba15735ed683f2dbe76a7cc342"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros (P & Q & R) (U & V & W).",
                        "VernacExtend",
                        "4b33fd81102583a86e95213bfedddf5592a3ff16"
                    ]
                },
                {
                    "command": [
                        "apply B2R_Bsign_inj; auto.",
                        "VernacExtend",
                        "f9c8ab320eaf2edac30031b5e20f8559397978a4"
                    ]
                },
                {
                    "command": [
                        "rewrite P, U; auto.",
                        "VernacExtend",
                        "cefa74d6b31cb8010f9a91cec2c860fa53d4db95"
                    ]
                },
                {
                    "command": [
                        "rewrite R, W, C, F.",
                        "VernacExtend",
                        "283e4a1d7129ac2cbf3f57de39cdaf17edb400ff"
                    ]
                },
                {
                    "command": [
                        "change 0%R with (Z2R 0).",
                        "VernacExtend",
                        "0aca30e4eaa8ab73d6cf1051499c94fbbfc180f6"
                    ]
                },
                {
                    "command": [
                        "rewrite Rcompare_Z2R.",
                        "VernacExtend",
                        "99850ffef35692f481a718b264a52d18cbb5d4fc"
                    ]
                },
                {
                    "command": [
                        "unfold Z.ltb at 3.",
                        "VernacExtend",
                        "b277f47f13d77c426ed5e54b8afd48ae7a8e63ca"
                    ]
                },
                {
                    "command": [
                        "generalize (Zcompare_spec (p - q) 0); intros SPEC; inversion SPEC; auto.",
                        "VernacExtend",
                        "a605723bb4538607c5056bb4b4971473113af05c"
                    ]
                },
                {
                    "command": [
                        "assert (EITHER: 0 <= p \\/ q < 0) by omega.",
                        "VernacExtend",
                        "b9342befeb41cf888c98525bf8e8538be6bbddd9"
                    ]
                },
                {
                    "command": [
                        "destruct EITHER; [apply andb_false_intro1 | apply andb_false_intro2].",
                        "VernacExtend",
                        "338192da5c0c779cee66c2eb6941cdea20d066c4"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlt_bool_false; auto.",
                        "VernacExtend",
                        "887ea065e6952f87247db504ce4d68c5c6ab423e"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlt_bool_true; auto.",
                        "VernacExtend",
                        "5e6e6b24e46c058a827c45b537241f946ab7b787"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros P (U & V).",
                        "VernacExtend",
                        "3e60601dbb8423a43eeb8e91e2e299ec21447a59"
                    ]
                },
                {
                    "command": [
                        "apply B2FF_inj.",
                        "VernacExtend",
                        "34eff57b1d6cecac8da247658345ae15e779c4fb"
                    ]
                },
                {
                    "command": [
                        "rewrite P, U, C.",
                        "VernacExtend",
                        "dd60bfd95cf9ca5133f127cbf10186d1911e03aa"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite C, F in V.",
                        "VernacExtend",
                        "1cb6805fae76bfe79e1eee5619fec104e584e921"
                    ]
                },
                {
                    "command": [
                        "generalize (Zlt_bool_spec p 0) (Zlt_bool_spec q 0).",
                        "VernacExtend",
                        "9442b0a96dd66ba782d3c7012aeec8c2bc214040"
                    ]
                },
                {
                    "command": [
                        "rewrite V.",
                        "VernacExtend",
                        "22d30038d8005a7fbe2e5a5c28c65e4e9dc9d597"
                    ]
                },
                {
                    "command": [
                        "intros SPEC1 SPEC2; inversion SPEC1; inversion SPEC2; symmetry.",
                        "VernacExtend",
                        "9c446f13547f569db0a07a192d8881a928ae5269"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H3 in H1; discriminate.",
                        "VernacExtend",
                        "b07257fdc6c2d0c126fa87dcd14f59083b4a07d8"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_bool_true; omega.",
                        "VernacExtend",
                        "b9d4118dd908a461f3b62bb2b756586ab889339a"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_bool_false; omega.",
                        "VernacExtend",
                        "b62332062b2c1aeda2447e5c5aeddee6f1af38a6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H3 in H1; discriminate.",
                        "VernacExtend",
                        "b07257fdc6c2d0c126fa87dcd14f59083b4a07d8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BofZ_mult",
            "line_nb": 359,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (SIGN: xorb (p <? 0) (q <? 0) = (p * q <? 0)).",
                        "VernacExtend",
                        "ec9e386bdc79aeeac185a66d9a550d38e90de2db"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite (Zlt_bool_false q) by omega.",
                        "VernacExtend",
                        "c70892f0d42007673216389d8c95169dc2a2abfb"
                    ]
                },
                {
                    "command": [
                        "generalize (Zlt_bool_spec p 0); intros SPEC; inversion SPEC; simpl; symmetry.",
                        "VernacExtend",
                        "e072334f621ef63271b883f8968526a9fcbb28a7"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_bool_true.",
                        "VernacExtend",
                        "bebe147ff91dd7ce791fff229d45a54236180415"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.mul_comm.",
                        "VernacExtend",
                        "088699fe7f894ededd3c93ab3a27f9d105f1ab84"
                    ]
                },
                {
                    "command": [
                        "apply Z.mul_pos_neg; omega.",
                        "VernacExtend",
                        "99380cdc2947afa7ed83335089e74bddc1f9d7e9"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_bool_false.",
                        "VernacExtend",
                        "727bcedc45dab1285379e344de04340c612a0572"
                    ]
                },
                {
                    "command": [
                        "apply Zsame_sign_imp; omega.",
                        "VernacExtend",
                        "c8a8f3f3c564db3fbcd03bdfcb9c74069a57788e"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (BofZ_representable p) as (A & B & C); auto.",
                        "VernacExtend",
                        "b54734d80b08d361b42d0600762969c9f04fbed9"
                    ]
                },
                {
                    "command": [
                        "destruct (BofZ_representable q) as (D & E & F); auto.",
                        "VernacExtend",
                        "b08284554bc05fc090c6425c474bd0148baaf3c4"
                    ]
                },
                {
                    "command": [
                        "generalize (Bmult_correct _ _ _ Hmax nan mode_NE (BofZ p) (BofZ q)).",
                        "VernacExtend",
                        "0c13229beabb2f823390e1b180bc099842876773"
                    ]
                },
                {
                    "command": [
                        "fold emin; fold fexp.",
                        "VernacExtend",
                        "e902875dc03cf15abcd21a62d61e38945c341d5f"
                    ]
                },
                {
                    "command": [
                        "rewrite A, B, C, D, E, F.",
                        "VernacExtend",
                        "cf38619ab8de5cc2836b9de21b88bd30e3ee872f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_mult.",
                        "VernacExtend",
                        "4bfcef9c6d8659a267de59ca9647b2d107af9b2a"
                    ]
                },
                {
                    "command": [
                        "generalize (BofZ_correct (p * q)).",
                        "VernacExtend",
                        "03490df230aaf7ea08557e90c7f54fe37250a709"
                    ]
                },
                {
                    "command": [
                        "destruct Rlt_bool.",
                        "VernacExtend",
                        "1d271c5b254ab8ba15735ed683f2dbe76a7cc342"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros (P & Q & R) (U & V & W).",
                        "VernacExtend",
                        "4b33fd81102583a86e95213bfedddf5592a3ff16"
                    ]
                },
                {
                    "command": [
                        "apply B2R_Bsign_inj; auto.",
                        "VernacExtend",
                        "f9c8ab320eaf2edac30031b5e20f8559397978a4"
                    ]
                },
                {
                    "command": [
                        "rewrite P, U; auto.",
                        "VernacExtend",
                        "cefa74d6b31cb8010f9a91cec2c860fa53d4db95"
                    ]
                },
                {
                    "command": [
                        "rewrite R, W; auto.",
                        "VernacExtend",
                        "fd5ca52e97bcd8598bbeceb8013c74f70f074002"
                    ]
                },
                {
                    "command": [
                        "apply is_finite_not_is_nan; auto.",
                        "VernacExtend",
                        "487671d35c84c1ea435363958aed8bd554dcff77"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros P U.",
                        "VernacExtend",
                        "6b5e9555da24c6690353f151f5f7cdf4cd5e3041"
                    ]
                },
                {
                    "command": [
                        "apply B2FF_inj.",
                        "VernacExtend",
                        "34eff57b1d6cecac8da247658345ae15e779c4fb"
                    ]
                },
                {
                    "command": [
                        "rewrite P, U.",
                        "VernacExtend",
                        "07e2aa2299a6aed35d03a8231a660adca32c9dde"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BofZ_mult_2p",
            "line_nb": 392,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.eq_dec x 0).",
                        "VernacExtend",
                        "3e4b2c03e3f45aea4864931b44a14efbc37ec9a9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "subst x.",
                        "VernacExtend",
                        "76c28b0a6a4a7c1568fa30e26ee411c5e5d54968"
                    ]
                },
                {
                    "command": [
                        "apply BofZ_mult.",
                        "VernacExtend",
                        "3d80deabc65722f133189383049386d67c59b253"
                    ]
                },
                {
                    "command": [
                        "apply integer_representable_n.",
                        "VernacExtend",
                        "82606dabf765e6367de334ded4cc7646db4df04e"
                    ]
                },
                {
                    "command": [
                        "generalize (Zpower_ge_0 radix2 prec).",
                        "VernacExtend",
                        "ba2ecba78fe33c82005dad67f8f91dca70c004bd"
                    ]
                },
                {
                    "command": [
                        "simpl; omega.",
                        "VernacExtend",
                        "e39ee197bcf8e665eb70095a296ce867a0e4d7ae"
                    ]
                },
                {
                    "command": [
                        "apply integer_representable_2p.",
                        "VernacExtend",
                        "fabf3fa99b434cab5c8f978705fd18b8f2291184"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply (Zpower_gt_0 radix2).",
                        "VernacExtend",
                        "c39b903ed0c1c3b7f29fbae7d368f98e5b82a93d"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assert (Z2R x <> 0%R) by (apply (Z2R_neq _ _ n)).",
                        "VernacExtend",
                        "e9c792633676690ef7040a80eaa8f55b1184a101"
                    ]
                },
                {
                    "command": [
                        "destruct (BofZ_finite x H) as (A & B & C).",
                        "VernacExtend",
                        "506d3d3f19cf9ffd121df512f6b0e339bf630752"
                    ]
                },
                {
                    "command": [
                        "destruct (BofZ_representable (2^p)) as (D & E & F).",
                        "VernacExtend",
                        "d1ef2a1212c412a8431a169b5151791ecd1f5a27"
                    ]
                },
                {
                    "command": [
                        "apply integer_representable_2p.",
                        "VernacExtend",
                        "fabf3fa99b434cab5c8f978705fd18b8f2291184"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "assert (canonic_exp radix2 fexp (Z2R (x * 2^p)) = canonic_exp radix2 fexp (Z2R x) + p).",
                        "VernacExtend",
                        "c937b823eb768ac0c6448b586252a13301a0a639"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold canonic_exp, fexp.",
                        "VernacExtend",
                        "ddcc2e1851d3623449281de0370e666df5c0aa04"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_mult.",
                        "VernacExtend",
                        "9df3e88fb03a8e1b32ba077432430323142e8b66"
                    ]
                },
                {
                    "command": [
                        "change (2^p) with (radix2^p).",
                        "VernacExtend",
                        "0fe06c59c33bb5c98b5da95b258afb10ddafd921"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_Zpower by omega.",
                        "VernacExtend",
                        "3538edfbdcbfd9c66a75a10b3d798d1152734c39"
                    ]
                },
                {
                    "command": [
                        "rewrite ln_beta_mult_bpow by auto.",
                        "VernacExtend",
                        "7861c5e7789b4d024cf82ad5281d89523233baf6"
                    ]
                },
                {
                    "command": [
                        "assert (prec + 1 <= ln_beta radix2 (Z2R x)).",
                        "VernacExtend",
                        "5c58d970247b2bc11aa049a79f7fc0ac0db1505b"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (ln_beta_abs radix2 (Z2R x)).",
                        "VernacExtend",
                        "b9ec5f954fbd864ca25761f7be0a19e1e1148e8b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (ln_beta_bpow radix2 prec).",
                        "VernacExtend",
                        "6596beed33b138fbc88de78adb3211c50f791f88"
                    ]
                },
                {
                    "command": [
                        "apply ln_beta_le.",
                        "VernacExtend",
                        "e43580b7286582594a33da026f0809ba6159bbe8"
                    ]
                },
                {
                    "command": [
                        "apply bpow_gt_0.",
                        "VernacExtend",
                        "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_Zpower by (red in prec_gt_0_;omega).",
                        "VernacExtend",
                        "a4404cb6fcf461e503a7142147806d029e5e2e34"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_abs.",
                        "VernacExtend",
                        "77629e87057563edf3f2c544c80c7822cbaa734b"
                    ]
                },
                {
                    "command": [
                        "apply Z2R_le; auto.",
                        "VernacExtend",
                        "7b1971a0b9305d2b635a8415b3ab7992a22fe4ab"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "unfold FLT_exp.",
                        "VernacExtend",
                        "d4f3b9f7d52d234d511b90934a943354be18194a"
                    ]
                },
                {
                    "command": [
                        "unfold emin; red in prec_gt_0_; zify; omega.",
                        "VernacExtend",
                        "0332812e99f2e55e1e98bf56945ee13bbcfb27de"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (forall m, round radix2 fexp m (Z2R x) * Z2R (2^p) = round radix2 fexp m (Z2R (x * 2^p)))%R.",
                        "VernacExtend",
                        "67c7aee2a68c0a2e728b45e5ade13f63d1846c27"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold round, scaled_mantissa.",
                        "VernacExtend",
                        "7469ad7d3b9aede0c8a3252000b6eff5c30abc4e"
                    ]
                },
                {
                    "command": [
                        "rewrite H3.",
                        "VernacExtend",
                        "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_mult.",
                        "VernacExtend",
                        "9df3e88fb03a8e1b32ba077432430323142e8b66"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.opp_add_distr.",
                        "VernacExtend",
                        "a50b3a64716ba6ce04fc27a04864e3cc89e69412"
                    ]
                },
                {
                    "command": [
                        "rewrite bpow_plus.",
                        "VernacExtend",
                        "a66bde7144b19ede4a139295758f63aab8dcbea6"
                    ]
                },
                {
                    "command": [
                        "set (a := Z2R x); set (b := bpow radix2 (- canonic_exp radix2 fexp a)).",
                        "VernacExtend",
                        "38aed569883f75af879c7d096c5c95f5cf8b8903"
                    ]
                },
                {
                    "command": [
                        "replace (a * Z2R (2^p) * (b * bpow radix2 (-p)))%R with (a * b)%R.",
                        "VernacExtend",
                        "441975abd2c7e5cc0162d524cbe9223351632cd2"
                    ]
                },
                {
                    "command": [
                        "unfold F2R; simpl.",
                        "VernacExtend",
                        "a8b73d273d1c692e5deb932d4bd557029927ed13"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_assoc.",
                        "VernacExtend",
                        "323caa1eefcb937c18a66a7144c1e29b2c1a3e40"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite bpow_plus.",
                        "VernacExtend",
                        "a66bde7144b19ede4a139295758f63aab8dcbea6"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply (Z2R_Zpower radix2).",
                        "VernacExtend",
                        "b895142347aa0259b23f3f4bed44cbe1109dbf57"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "transitivity ((a * b) * (Z2R (2^p) * bpow radix2 (-p)))%R.",
                        "VernacExtend",
                        "ccbd989880ba74278317bd68cd7880e6fe47844f"
                    ]
                },
                {
                    "command": [
                        "rewrite (Z2R_Zpower radix2).",
                        "VernacExtend",
                        "d615a0e40daaafd58ece2fd14238ded3d350378b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- bpow_plus.",
                        "VernacExtend",
                        "9ebeb3f5611fe78274a1e2e0131c7f7ed66e1cfc"
                    ]
                },
                {
                    "command": [
                        "replace (p + -p) with 0 by omega.",
                        "VernacExtend",
                        "16d6951625efc65bbcc05cd80fae502466603ff7"
                    ]
                },
                {
                    "command": [
                        "change (bpow radix2 0) with 1%R.",
                        "VernacExtend",
                        "25085e5330d9e08c809fb47e2ab007d6c9f297f2"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (forall m x, round radix2 fexp (round_mode m) (round radix2 fexp (round_mode m) x) = round radix2 fexp (round_mode m) x).",
                        "VernacExtend",
                        "70db339f640743c19780572de15b7bd601ba5441"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply round_generic.",
                        "VernacExtend",
                        "329c42b8a825480836d8d91cbeb7ff485a68ba31"
                    ]
                },
                {
                    "command": [
                        "apply valid_rnd_round_mode.",
                        "VernacExtend",
                        "20b08e148269eae05657e863e427e37c03e032b6"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_round.",
                        "VernacExtend",
                        "48e3baa889a9f7b98c000fe5360f9f01bc0057b2"
                    ]
                },
                {
                    "command": [
                        "apply fexp_correct; auto.",
                        "VernacExtend",
                        "4ec56761cdd451c636b20d54a8737ee529ef53b5"
                    ]
                },
                {
                    "command": [
                        "apply valid_rnd_round_mode.",
                        "VernacExtend",
                        "20b08e148269eae05657e863e427e37c03e032b6"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (xorb (x <? 0) (2^p <? 0) = (x * 2^p <? 0)).",
                        "VernacExtend",
                        "40ea8eea4f48150fa9b2d5027d5f25f7aa6139c0"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (0 < 2^p) by (apply (Zpower_gt_0 radix2); omega).",
                        "VernacExtend",
                        "aa74b3625dbe4a424ebc7bd8ff07ecd2cf19a0f1"
                    ]
                },
                {
                    "command": [
                        "rewrite (Zlt_bool_false (2^p)) by omega.",
                        "VernacExtend",
                        "093bc1d56f00d6d0b302b13461d1adcf65664a1b"
                    ]
                },
                {
                    "command": [
                        "rewrite xorb_false_r.",
                        "VernacExtend",
                        "00beb0fefc34a81ad64fed3fdb46c8bfb939e88e"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "generalize (Zlt_bool_spec x 0); intros SPEC; inversion SPEC.",
                        "VernacExtend",
                        "f1f79e9d12d5f71ea005f67fcd9384e7d30f4b1a"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_bool_true.",
                        "VernacExtend",
                        "bebe147ff91dd7ce791fff229d45a54236180415"
                    ]
                },
                {
                    "command": [
                        "apply Z.mul_neg_pos; auto.",
                        "VernacExtend",
                        "d16fb8e36852aac7238e720e45d5daa28456bf99"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_bool_false.",
                        "VernacExtend",
                        "727bcedc45dab1285379e344de04340c612a0572"
                    ]
                },
                {
                    "command": [
                        "apply Z.mul_nonneg_nonneg; omega.",
                        "VernacExtend",
                        "9cbfb46050eab35892b2e9f56e931a737701d0d2"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "generalize (Bmult_correct _ _ _ Hmax nan mode_NE (BofZ x) (BofZ (2^p))) (BofZ_correct (x * 2^p)).",
                        "VernacExtend",
                        "88856c87c8801d1ca4ec3040760f175e8ce70dd0"
                    ]
                },
                {
                    "command": [
                        "fold emin; fold fexp.",
                        "VernacExtend",
                        "e902875dc03cf15abcd21a62d61e38945c341d5f"
                    ]
                },
                {
                    "command": [
                        "rewrite A, B, C, D, E, F, H4, H5.",
                        "VernacExtend",
                        "71f2bf2b84ed6f2033885b9dbe3763c48aa7d548"
                    ]
                },
                {
                    "command": [
                        "destruct Rlt_bool.",
                        "VernacExtend",
                        "1d271c5b254ab8ba15735ed683f2dbe76a7cc342"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros (P & Q & R) (U & V & W).",
                        "VernacExtend",
                        "4b33fd81102583a86e95213bfedddf5592a3ff16"
                    ]
                },
                {
                    "command": [
                        "apply B2R_Bsign_inj; auto.",
                        "VernacExtend",
                        "f9c8ab320eaf2edac30031b5e20f8559397978a4"
                    ]
                },
                {
                    "command": [
                        "rewrite P, U.",
                        "VernacExtend",
                        "07e2aa2299a6aed35d03a8231a660adca32c9dde"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite R, W.",
                        "VernacExtend",
                        "c6629e67054290a14a5da69f1c77102068887656"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply is_finite_not_is_nan; auto.",
                        "VernacExtend",
                        "487671d35c84c1ea435363958aed8bd554dcff77"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros P U.",
                        "VernacExtend",
                        "6b5e9555da24c6690353f151f5f7cdf4cd5e3041"
                    ]
                },
                {
                    "command": [
                        "apply B2FF_inj.",
                        "VernacExtend",
                        "34eff57b1d6cecac8da247658345ae15e779c4fb"
                    ]
                },
                {
                    "command": [
                        "rewrite P, U.",
                        "VernacExtend",
                        "07e2aa2299a6aed35d03a8231a660adca32c9dde"
                    ]
                },
                {
                    "command": [
                        "f_equal; auto.",
                        "VernacExtend",
                        "8016959cfe83d1ba3fdad91954454045f7af1d22"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_odd_flt",
            "line_nb": 496,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply round_odd_prop.",
                        "VernacExtend",
                        "10da6226373dd5d0a54ad10ebcf7c895ef575c4b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply fexp_correct; auto.",
                        "VernacExtend",
                        "4ec56761cdd451c636b20d54a8737ee529ef53b5"
                    ]
                },
                {
                    "command": [
                        "apply exists_NE_FLT.",
                        "VernacExtend",
                        "50b6cb13fc95b8990e7d8482ceb70db198f544c6"
                    ]
                },
                {
                    "command": [
                        "right; omega.",
                        "VernacExtend",
                        "12a62aeea1a26870d19a3f39cd3d9d63bfc5e22b"
                    ]
                },
                {
                    "command": [
                        "apply FLT_exp_valid.",
                        "VernacExtend",
                        "1bd5dea00fd78a9577ca3879840aa9940e260233"
                    ]
                },
                {
                    "command": [
                        "red; omega.",
                        "VernacExtend",
                        "ae85dd91496b88667e743b35b47cde1293a54706"
                    ]
                },
                {
                    "command": [
                        "apply exists_NE_FLT.",
                        "VernacExtend",
                        "50b6cb13fc95b8990e7d8482ceb70db198f544c6"
                    ]
                },
                {
                    "command": [
                        "right; omega.",
                        "VernacExtend",
                        "12a62aeea1a26870d19a3f39cd3d9d63bfc5e22b"
                    ]
                },
                {
                    "command": [
                        "unfold fexp, FLT_exp; intros.",
                        "VernacExtend",
                        "513d62f3d39deca2638d0e2058ad1d239567236e"
                    ]
                },
                {
                    "command": [
                        "zify; omega.",
                        "VernacExtend",
                        "5fb0df05710c307ca01829a575fcf81498a16c8a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_odd_fix",
            "line_nb": 510,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (Req_EM_T x 0%R).",
                        "VernacExtend",
                        "6fa9d48578b4bdef6f56c0f8c690334bb3a9bf59"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "subst x.",
                        "VernacExtend",
                        "76c28b0a6a4a7c1568fa30e26ee411c5e5d54968"
                    ]
                },
                {
                    "command": [
                        "rewrite round_0.",
                        "VernacExtend",
                        "625125ccb3011c651c29b92e3197f630d3c9a749"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply valid_rnd_odd.",
                        "VernacExtend",
                        "72466a70c924d9ac3bf4b4828b23dc0210738c32"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "set (prec' := ln_beta radix2 x - p).",
                        "VernacExtend",
                        "3d66eb82b7af52c420c947bba19613334be50999"
                    ]
                },
                {
                    "command": [
                        "set (emin' := emin - 2).",
                        "VernacExtend",
                        "f2d839b76460ea1731aecd6d701932803523df49"
                    ]
                },
                {
                    "command": [
                        "assert (PREC: ln_beta radix2 (bpow radix2 (prec + p + 1)) <= ln_beta radix2 x).",
                        "VernacExtend",
                        "b004c88e2cc744f9726b52a48f4defdd78cc7f8d"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (ln_beta_abs radix2 x).",
                        "VernacExtend",
                        "41f2ecef489d0641459a3dcf1a6f62ec444317e3"
                    ]
                },
                {
                    "command": [
                        "apply ln_beta_le; auto.",
                        "VernacExtend",
                        "6f2fa41ed00be8320dcbf7c9455a32fd1b426fde"
                    ]
                },
                {
                    "command": [
                        "apply bpow_gt_0.",
                        "VernacExtend",
                        "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite ln_beta_bpow in PREC.",
                        "VernacExtend",
                        "073560254d455c16006c903a9e956506b502065d"
                    ]
                },
                {
                    "command": [
                        "assert (CANON: canonic_exp radix2 (FLT_exp emin' prec') x = canonic_exp radix2 (FIX_exp p) x).",
                        "VernacExtend",
                        "45c61815f21c838daaa415d48bf39d68b9d9d2c7"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold canonic_exp, FLT_exp, FIX_exp.",
                        "VernacExtend",
                        "0ae2e9f16f522efe0487d515b255f60e4c08bde2"
                    ]
                },
                {
                    "command": [
                        "replace (ln_beta radix2 x - prec') with p by (unfold prec'; omega).",
                        "VernacExtend",
                        "fc0a0ef006ec0eb1257d0c8c8d8c7b7aff9579bb"
                    ]
                },
                {
                    "command": [
                        "apply Z.max_l.",
                        "VernacExtend",
                        "397548bdbbbf16dcf812c7c6271d50f8519ff7bc"
                    ]
                },
                {
                    "command": [
                        "unfold emin', emin.",
                        "VernacExtend",
                        "63684d054d9da28047df8b504f8ea0fb5c64b98d"
                    ]
                },
                {
                    "command": [
                        "red in prec_gt_0_; omega.",
                        "VernacExtend",
                        "d5dab93f8056283198d3a561eaaa85ddc796bdea"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (RND: round radix2 (FIX_exp p) Zrnd_odd x = round radix2 (FLT_exp emin' prec') Zrnd_odd x).",
                        "VernacExtend",
                        "695ac69ecfb119d353ce8086d58a54d590064c9e"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold round, scaled_mantissa.",
                        "VernacExtend",
                        "7469ad7d3b9aede0c8a3252000b6eff5c30abc4e"
                    ]
                },
                {
                    "command": [
                        "rewrite CANON.",
                        "VernacExtend",
                        "923fa6ee7d48473b971a16e398536f9025c37d61"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite RND.",
                        "VernacExtend",
                        "e2e41ae418d374ef518fcb74a5652b3b50c2954a"
                    ]
                },
                {
                    "command": [
                        "apply round_odd_flt.",
                        "VernacExtend",
                        "1ae56a93d9ef273ab702fe55a56ddc67d37aca1c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "unfold prec'.",
                        "VernacExtend",
                        "43f496a05ff99d41a414418b63ad8d3f663c6e32"
                    ]
                },
                {
                    "command": [
                        "red in prec_gt_0_; omega.",
                        "VernacExtend",
                        "d5dab93f8056283198d3a561eaaa85ddc796bdea"
                    ]
                },
                {
                    "command": [
                        "unfold prec'.",
                        "VernacExtend",
                        "43f496a05ff99d41a414418b63ad8d3f663c6e32"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "unfold emin'.",
                        "VernacExtend",
                        "1ad493c044ed50a41d5abfd39e3ee726a61feb4d"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zrnd_odd_int",
            "line_nb": 553,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (0 < 2^p) by (apply (Zpower_gt_0 radix2); omega).",
                        "VernacExtend",
                        "aa74b3625dbe4a424ebc7bd8ff07ecd2cf19a0f1"
                    ]
                },
                {
                    "command": [
                        "assert (n = (n / 2^p) * 2^p + n mod 2^p) by (rewrite Z.mul_comm; apply Z.div_mod; omega).",
                        "VernacExtend",
                        "20e5eaa111642e5b0a2e1bb33686bd3cbd67b032"
                    ]
                },
                {
                    "command": [
                        "assert (0 <= n mod 2^p < 2^p) by (apply Z_mod_lt; omega).",
                        "VernacExtend",
                        "c9bd8287e3aec8151e243e1149b3e9e4bdb1d69c"
                    ]
                },
                {
                    "command": [
                        "unfold int_round_odd.",
                        "VernacExtend",
                        "cc940eff27d7a062ba92390d436863bb8c08c79d"
                    ]
                },
                {
                    "command": [
                        "set (q := n / 2^p) in *; set (r := n mod 2^p) in *.",
                        "VernacExtend",
                        "ad2fed4fada1ce8da80b9c89e4d1d9423daa54a0"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "pose proof (bpow_gt_0 radix2 (-p)).",
                        "VernacExtend",
                        "775d23ede20b8ec99ecd8a06a9db53aa2a5ab4b1"
                    ]
                },
                {
                    "command": [
                        "assert (bpow radix2 p * bpow radix2 (-p) = 1)%R.",
                        "VernacExtend",
                        "19d9ea981fe2764b6368f7972ea5b649ece2d238"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite <- bpow_plus.",
                        "VernacExtend",
                        "9ebeb3f5611fe78274a1e2e0131c7f7ed66e1cfc"
                    ]
                },
                {
                    "command": [
                        "replace (p + -p) with 0 by omega.",
                        "VernacExtend",
                        "16d6951625efc65bbcc05cd80fae502466603ff7"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Z2R n * bpow radix2 (-p) = Z2R q + Z2R r * bpow radix2 (-p))%R.",
                        "VernacExtend",
                        "233d6e7f416075a919a70ad986fb7681eeac0498"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_plus, Z2R_mult.",
                        "VernacExtend",
                        "5ef8f14c94661888c05bdbeb6e8e22c8381a319e"
                    ]
                },
                {
                    "command": [
                        "change (Z2R (2^p)) with (Z2R (radix2^p)).",
                        "VernacExtend",
                        "6856dd1b85021f93eed0c81778815f2376474100"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_Zpower by omega.",
                        "VernacExtend",
                        "3538edfbdcbfd9c66a75a10b3d798d1152734c39"
                    ]
                },
                {
                    "command": [
                        "ring_simplify.",
                        "VernacExtend",
                        "31578f61427562191ce5389abf97dbf9985ea04c"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_assoc.",
                        "VernacExtend",
                        "323caa1eefcb937c18a66a7144c1e29b2c1a3e40"
                    ]
                },
                {
                    "command": [
                        "rewrite H4.",
                        "VernacExtend",
                        "fc5d011df68f7160e4669d129d2975825ac089bb"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (0 <= Z2R r < bpow radix2 p)%R.",
                        "VernacExtend",
                        "d7bb3e77793908a6e4b00c62aa22145edea24b48"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "change 0%R with (Z2R 0).",
                        "VernacExtend",
                        "0aca30e4eaa8ab73d6cf1051499c94fbbfc180f6"
                    ]
                },
                {
                    "command": [
                        "apply Z2R_le; omega.",
                        "VernacExtend",
                        "48e544720b256ddb4a7e9f49475d76732a118d7b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_Zpower by omega.",
                        "VernacExtend",
                        "bc3388d59814ca4d9994fae141ed9a4d348c5e2f"
                    ]
                },
                {
                    "command": [
                        "apply Z2R_lt; tauto.",
                        "VernacExtend",
                        "25ed43e0da9817f692f424524ae5379110fa51be"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (0 <= Z2R r * bpow radix2 (-p) < 1)%R.",
                        "VernacExtend",
                        "af8707c66cae12847c59a80e3e0da89987d62a65"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "generalize (bpow_gt_0 radix2 (-p)).",
                        "VernacExtend",
                        "2e834df8b1198219df05e63ed388449e4755bf34"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_pos; lra.",
                        "VernacExtend",
                        "2443e77eaa3899fcc0dc3f297814b024361367ac"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H4.",
                        "VernacExtend",
                        "15801069338f53d2cf64b6951fc88c5758e631f8"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_compat_r.",
                        "VernacExtend",
                        "e041593c57ec6470673cc705c01d215d230e0676"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Zfloor (Z2R n * bpow radix2 (-p)) = q).",
                        "VernacExtend",
                        "d133cd5f944f841ac0df928f555c5c2b517bb9ac"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_imp.",
                        "VernacExtend",
                        "9278ce7c32c530a2f8be72314e979fc619d4a028"
                    ]
                },
                {
                    "command": [
                        "rewrite H5.",
                        "VernacExtend",
                        "d39eba0f5559f57239c887c68680638084d28197"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_plus.",
                        "VernacExtend",
                        "acce6601b0322c726f9b248c200708805f7120a8"
                    ]
                },
                {
                    "command": [
                        "change (Z2R 1) with 1%R.",
                        "VernacExtend",
                        "fe2cec7f231fc26dcae52d022907075eceed9326"
                    ]
                },
                {
                    "command": [
                        "lra.",
                        "VernacExtend",
                        "c37bca18aec699b6843eab75e25df2491e3b9848"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "unfold Zrnd_odd.",
                        "VernacExtend",
                        "f9b93684d423c7233c8d7582ba65c171d9fe1bc9"
                    ]
                },
                {
                    "command": [
                        "destruct Req_EM_T.",
                        "VernacExtend",
                        "51073d142b141058b2650aac3c9b30961b4d84a5"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assert (Z2R r * bpow radix2 (-p) = 0)%R.",
                        "VernacExtend",
                        "3cb7f9ef8f987073cb66a4f75fd6711162824915"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite H8 in e.",
                        "VernacExtend",
                        "70dbe2f19e0b24c13dd5023c683167e4eb55e8f0"
                    ]
                },
                {
                    "command": [
                        "rewrite e in H5.",
                        "VernacExtend",
                        "67329c5424077a6a253b706840a0fde433ad760b"
                    ]
                },
                {
                    "command": [
                        "lra.",
                        "VernacExtend",
                        "c37bca18aec699b6843eab75e25df2491e3b9848"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_integral in H9.",
                        "VernacExtend",
                        "4bc182d115cc72eb042e97be01ca0a421dc501ba"
                    ]
                },
                {
                    "command": [
                        "destruct H9; [ | lra ].",
                        "VernacExtend",
                        "df45bd19040f7393536601f78d74ba9edf337f2f"
                    ]
                },
                {
                    "command": [
                        "apply (eq_Z2R r 0) in H9.",
                        "VernacExtend",
                        "cf0358ab388123a5d7be00715040a36e830f60ca"
                    ]
                },
                {
                    "command": [
                        "apply <- Z.eqb_eq in H9.",
                        "VernacExtend",
                        "946ca4b75e0c7b5e6b4a84b13955a355df6a58d5"
                    ]
                },
                {
                    "command": [
                        "rewrite H9.",
                        "VernacExtend",
                        "7e513e390abfc88b77648f4c54df1434c5ffa9d3"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assert (Z2R r * bpow radix2 (-p) <> 0)%R.",
                        "VernacExtend",
                        "8d36818dd034d146680d801325dbca31f46ea27b"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite H8 in n0.",
                        "VernacExtend",
                        "b8eb338a332354e72c21d0e2d96edc857b543d89"
                    ]
                },
                {
                    "command": [
                        "lra.",
                        "VernacExtend",
                        "c37bca18aec699b6843eab75e25df2491e3b9848"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.eqb r 0) eqn:RZ.",
                        "VernacExtend",
                        "7e71e02630b7171f99aacf530503b41bcc03d388"
                    ]
                },
                {
                    "command": [
                        "apply Z.eqb_eq in RZ.",
                        "VernacExtend",
                        "a4098bb7dfea69c8758836f55738ab74ec328d06"
                    ]
                },
                {
                    "command": [
                        "rewrite RZ in H9.",
                        "VernacExtend",
                        "6d07cad44d08651253af26a4c309f5aef1062799"
                    ]
                },
                {
                    "command": [
                        "change (Z2R 0) with 0%R in H9.",
                        "VernacExtend",
                        "dc61437bffd52841b9d10ebaa7ac6298f887143f"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_0_l in H9.",
                        "VernacExtend",
                        "19f3c93c85f9b87b7cf32ad34a9af5cb1401f6c7"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "rewrite Zceil_floor_neq by lra.",
                        "VernacExtend",
                        "770a2d9f956841f31e72c9b712559dfaefa6e759"
                    ]
                },
                {
                    "command": [
                        "rewrite H8.",
                        "VernacExtend",
                        "ef335154f8a1120928ddce71bc7a2456078d36bc"
                    ]
                },
                {
                    "command": [
                        "change Zeven with Z.even.",
                        "VernacExtend",
                        "33df79dbbd6f223e9b3e8dfb0a4c0df6e7954912"
                    ]
                },
                {
                    "command": [
                        "rewrite Zodd_even_bool.",
                        "VernacExtend",
                        "6a44fec092c4465c16b76c1a832a7dd7f82a2006"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.even q); auto.",
                        "VernacExtend",
                        "fdc9ef2d947061567da169abed7eb7cb655f0ef3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "int_round_odd_le",
            "line_nb": 639,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Zrnd_odd (Z2R x * bpow radix2 (-p)) <= Zrnd_odd (Z2R y * bpow radix2 (-p))).",
                        "VernacExtend",
                        "9de1f3d0c3ffaaff010ba78abb340fbc996ac95f"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply Zrnd_le.",
                        "VernacExtend",
                        "40a015e9273d06e9e9e1204712ee76e014c94f7e"
                    ]
                },
                {
                    "command": [
                        "apply valid_rnd_odd.",
                        "VernacExtend",
                        "72466a70c924d9ac3bf4b4828b23dc0210738c32"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_r.",
                        "VernacExtend",
                        "6c4c5a82dab802842919dd673f1978a3cb8cff73"
                    ]
                },
                {
                    "command": [
                        "apply bpow_ge_0.",
                        "VernacExtend",
                        "21ebde0be0a631dfd60f8ca27e963cec55b52605"
                    ]
                },
                {
                    "command": [
                        "apply Z2R_le; auto.",
                        "VernacExtend",
                        "7b1971a0b9305d2b635a8415b3ab7992a22fe4ab"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite <- ! Zrnd_odd_int by auto.",
                        "VernacExtend",
                        "4a03c5b2f410310d62efe1eda40368661ac45c82"
                    ]
                },
                {
                    "command": [
                        "apply Zmult_le_compat_r.",
                        "VernacExtend",
                        "f58b7ccb589950a24b866c403e0c7e458695106a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply (Zpower_ge_0 radix2).",
                        "VernacExtend",
                        "b534f4756c8a1ce37579c7b345b6d68fbc8eb757"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "int_round_odd_exact",
            "line_nb": 654,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold int_round_odd.",
                        "VernacExtend",
                        "cc940eff27d7a062ba92390d436863bb8c08c79d"
                    ]
                },
                {
                    "command": [
                        "apply Znumtheory.Zdivide_mod in H0.",
                        "VernacExtend",
                        "d62c8d57a9b1e00b41d3346d19b290bf1dc26fe4"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.mul_comm.",
                        "VernacExtend",
                        "088699fe7f894ededd3c93ab3a27f9d105f1ab84"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply Z_div_exact_2.",
                        "VernacExtend",
                        "688cd9bdf348f1fcc5d93341eae5ac276fc2bdd1"
                    ]
                },
                {
                    "command": [
                        "apply Z.lt_gt.",
                        "VernacExtend",
                        "dc71d367ecfba7881ab9241fc30fdd62fa24e40e"
                    ]
                },
                {
                    "command": [
                        "apply (Zpower_gt_0 radix2).",
                        "VernacExtend",
                        "c39b903ed0c1c3b7f29fbae7d368f98e5b82a93d"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BofZ_round_odd",
            "line_nb": 668,
            "steps": [
                {
                    "command": [
                        "intros x p PREC XRANGE PRANGE XGE.",
                        "VernacExtend",
                        "6907b2c198f8e51196441d70f65d2e9bca5ef162"
                    ]
                },
                {
                    "command": [
                        "assert (DIV: (2^p | 2^emax - 2^(emax - prec))).",
                        "VernacExtend",
                        "f8f4b728ba9f61a3dbe97779002069ff23aecaac"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite int_upper_bound_eq.",
                        "VernacExtend",
                        "fc2b91ec9bf534b31e54e931ec9b08e741ae176d"
                    ]
                },
                {
                    "command": [
                        "apply Z.divide_mul_r.",
                        "VernacExtend",
                        "3e751d33f4d825fcea96680f8d4908e2e2b353dd"
                    ]
                },
                {
                    "command": [
                        "exists (2^(emax - prec - p)).",
                        "VernacExtend",
                        "4b8cd5052d44289310ae1c6070c5c7484304dfa2"
                    ]
                },
                {
                    "command": [
                        "red in prec_gt_0_.",
                        "VernacExtend",
                        "4b29078a2865ccd92928eaceffc91659787acb4b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Zpower_plus radix2) by omega.",
                        "VernacExtend",
                        "05151a82acdcd0296850844d2ad40b2e48f1c68d"
                    ]
                },
                {
                    "command": [
                        "f_equal; omega.",
                        "VernacExtend",
                        "3b812353131f9b9bebbd6410b3fa7c9d2e597ec3"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (YRANGE: Z.abs (int_round_odd x p) <= 2^emax - 2^(emax-prec)).",
                        "VernacExtend",
                        "446bef967dcc5514c88f5d5dcdab26092b9bff7b"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply Z.abs_le.",
                        "VernacExtend",
                        "33dbfaa369722f1767f92e2774ecb2dd0d1c2398"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "replace (-(2^emax - 2^(emax-prec))) with (int_round_odd (-(2^emax - 2^(emax-prec))) p).",
                        "VernacExtend",
                        "66eb0ded4ab86762f92fdef466e78253a4d10391"
                    ]
                },
                {
                    "command": [
                        "apply int_round_odd_le; zify; omega.",
                        "VernacExtend",
                        "332414c21610dc758fc931edbcc9a72d08a0aeb6"
                    ]
                },
                {
                    "command": [
                        "apply int_round_odd_exact.",
                        "VernacExtend",
                        "8930311d7c3227777563b5e72dde1dcfbf4887d0"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply Z.divide_opp_r.",
                        "VernacExtend",
                        "0bb36874f41874b6bed41c63daec1512530f7555"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "replace (2^emax - 2^(emax-prec)) with (int_round_odd (2^emax - 2^(emax-prec)) p).",
                        "VernacExtend",
                        "91f561b99784042575ea2be333e95bf2888b0190"
                    ]
                },
                {
                    "command": [
                        "apply int_round_odd_le; zify; omega.",
                        "VernacExtend",
                        "332414c21610dc758fc931edbcc9a72d08a0aeb6"
                    ]
                },
                {
                    "command": [
                        "apply int_round_odd_exact.",
                        "VernacExtend",
                        "8930311d7c3227777563b5e72dde1dcfbf4887d0"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (BofZ_finite x XRANGE) as (X1 & X2 & X3).",
                        "VernacExtend",
                        "776555a9601668b6b4110c4821019233b3d31650"
                    ]
                },
                {
                    "command": [
                        "destruct (BofZ_finite (int_round_odd x p) YRANGE) as (Y1 & Y2 & Y3).",
                        "VernacExtend",
                        "7dcf80fe35b6df85fbf3ac367a3ae4d07332b43e"
                    ]
                },
                {
                    "command": [
                        "apply BofZ_finite_equal; auto.",
                        "VernacExtend",
                        "6148f4c3af46eca3aa705d2f960319a4052e2c2e"
                    ]
                },
                {
                    "command": [
                        "rewrite X1, Y1.",
                        "VernacExtend",
                        "82faf6fd489d4b33f3de6693a2c3033da612b687"
                    ]
                },
                {
                    "command": [
                        "assert (Z2R (int_round_odd x p) = round radix2 (FIX_exp p) Zrnd_odd (Z2R x)).",
                        "VernacExtend",
                        "5511eddd506c889dc0253e5258c9055a65eaabd5"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold round, scaled_mantissa, canonic_exp, FIX_exp.",
                        "VernacExtend",
                        "1cd5ea622ce4d762b4752d78e7d11e8bbd751bc2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Zrnd_odd_int by omega.",
                        "VernacExtend",
                        "593a0e6c44eb30e781e8a39f526984f06c73132f"
                    ]
                },
                {
                    "command": [
                        "unfold F2R; simpl.",
                        "VernacExtend",
                        "a8b73d273d1c692e5deb932d4bd557029927ed13"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_mult.",
                        "VernacExtend",
                        "9df3e88fb03a8e1b32ba077432430323142e8b66"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply (Z2R_Zpower radix2).",
                        "VernacExtend",
                        "b895142347aa0259b23f3f4bed44cbe1109dbf57"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply round_odd_fix.",
                        "VernacExtend",
                        "df95a37f28cae98fa4b5df286eeecb98c9e9a8e2"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_Zpower.",
                        "VernacExtend",
                        "6a737b45852133a11ffa7a0af2881be74773d2b4"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_abs.",
                        "VernacExtend",
                        "77629e87057563edf3f2c544c80c7822cbaa734b"
                    ]
                },
                {
                    "command": [
                        "apply Z2R_le; auto.",
                        "VernacExtend",
                        "7b1971a0b9305d2b635a8415b3ab7992a22fe4ab"
                    ]
                },
                {
                    "command": [
                        "red in prec_gt_0_; omega.",
                        "VernacExtend",
                        "d5dab93f8056283198d3a561eaaa85ddc796bdea"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "int_round_odd_shifts",
            "line_nb": 719,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold int_round_odd.",
                        "VernacExtend",
                        "cc940eff27d7a062ba92390d436863bb8c08c79d"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.shiftl_mul_pow2 by auto.",
                        "VernacExtend",
                        "b07b6ef434f5734030ad438c0ad430801ed65279"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.shiftr_div_pow2 by auto.",
                        "VernacExtend",
                        "abb006d653429c2b72080a2e9785787e4cfe52df"
                    ]
                },
                {
                    "command": [
                        "destruct (x mod 2^p =? 0) eqn:E.",
                        "VernacExtend",
                        "7dea8750fe5a3fcac85d76d39c5217b7b5c1644f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "assert (forall n, (if Z.odd n then n else n + 1) = Z.lor n 1).",
                        "VernacExtend",
                        "8c0c75562b80fe67bfb6ad0ddd771d918eba5e24"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct n; simpl; auto.",
                        "VernacExtend",
                        "1e3544c1db38cf9d3b82500db7d90f24bce9aeea"
                    ]
                },
                {
                    "command": [
                        "destruct p0; auto.",
                        "VernacExtend",
                        "d55d19bef25e930a9bcb9be13428d3613e1987d7"
                    ]
                },
                {
                    "command": [
                        "destruct p0; auto.",
                        "VernacExtend",
                        "d55d19bef25e930a9bcb9be13428d3613e1987d7"
                    ]
                },
                {
                    "command": [
                        "induction p0; auto.",
                        "VernacExtend",
                        "3bee550e40bce21e0c971a67cce3572089de2183"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "int_round_odd_bits",
            "line_nb": 737,
            "steps": [
                {
                    "command": [
                        "intros until p; intros PPOS BELOW AT ABOVE.",
                        "VernacExtend",
                        "e9102c3fdf154fd871ed5f4babc011461d917608"
                    ]
                },
                {
                    "command": [
                        "rewrite int_round_odd_shifts by auto.",
                        "VernacExtend",
                        "101d4d72505fef6644592ae5f5a8600e36f522a4"
                    ]
                },
                {
                    "command": [
                        "apply Z.bits_inj'.",
                        "VernacExtend",
                        "eb4ca034bf0b17ebc50c7646a890b25ededaa693"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (Zcompare_spec n p); intros SPEC; inversion SPEC.",
                        "VernacExtend",
                        "20d9f20f402f65cb5d28f281bcf5aabf096666cb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite BELOW by auto.",
                        "VernacExtend",
                        "a1c12f6cd7f0c719fd7c30f78d3bd81c309a98c2"
                    ]
                },
                {
                    "command": [
                        "apply Z.shiftl_spec_low; auto.",
                        "VernacExtend",
                        "81c5a96a9ed9c91ddca549a288fa5912b9b87be9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "subst n.",
                        "VernacExtend",
                        "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
                    ]
                },
                {
                    "command": [
                        "rewrite AT.",
                        "VernacExtend",
                        "6f9c8bad46240bc1145ec678ee3335fe5566d221"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.shiftl_spec_high by omega.",
                        "VernacExtend",
                        "5180b2f9d177b3bbd1982c13d6679987b35ed3e6"
                    ]
                },
                {
                    "command": [
                        "replace (p - p) with 0 by omega.",
                        "VernacExtend",
                        "1a026ef838903e90173384d5d0bf9a565d69d6fd"
                    ]
                },
                {
                    "command": [
                        "destruct (x mod 2^p =? 0).",
                        "VernacExtend",
                        "4c8d7840047e9cda2c11f5a506758b8cd50037c5"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.shiftr_spec by omega.",
                        "VernacExtend",
                        "da85a618ea6dd62f78d448f4a7e1cfe84fdd237e"
                    ]
                },
                {
                    "command": [
                        "f_equal; omega.",
                        "VernacExtend",
                        "3b812353131f9b9bebbd6410b3fa7c9d2e597ec3"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.lor_spec.",
                        "VernacExtend",
                        "75a6643c937d8dc0641f7afdbd97c3ffc0537068"
                    ]
                },
                {
                    "command": [
                        "apply orb_true_r.",
                        "VernacExtend",
                        "f6c982e3797841078d730c93c95d18e257302343"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite ABOVE by auto.",
                        "VernacExtend",
                        "9c9808448156fa2e059ee10e03461581fa33b490"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.shiftl_spec_high by omega.",
                        "VernacExtend",
                        "5180b2f9d177b3bbd1982c13d6679987b35ed3e6"
                    ]
                },
                {
                    "command": [
                        "destruct (x mod 2^p =? 0).",
                        "VernacExtend",
                        "4c8d7840047e9cda2c11f5a506758b8cd50037c5"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.shiftr_spec by omega.",
                        "VernacExtend",
                        "da85a618ea6dd62f78d448f4a7e1cfe84fdd237e"
                    ]
                },
                {
                    "command": [
                        "f_equal; omega.",
                        "VernacExtend",
                        "3b812353131f9b9bebbd6410b3fa7c9d2e597ec3"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.lor_spec, Z.shiftr_spec by omega.",
                        "VernacExtend",
                        "dbe052ec7b8239c96064c97615098df8cc12d3f4"
                    ]
                },
                {
                    "command": [
                        "change 1 with (Z.ones 1).",
                        "VernacExtend",
                        "1454a02332ad65d4a6c02fd825eab681fdc5992a"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.ones_spec_high by omega.",
                        "VernacExtend",
                        "7664085c8ba229471283c57fe174e09f8aa5350d"
                    ]
                },
                {
                    "command": [
                        "rewrite orb_false_r.",
                        "VernacExtend",
                        "1f347086f7a141d5c22c1549eee172fd8a72e833"
                    ]
                },
                {
                    "command": [
                        "f_equal; omega.",
                        "VernacExtend",
                        "3b812353131f9b9bebbd6410b3fa7c9d2e597ec3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZofB_correct",
            "line_nb": 771,
            "steps": [
                {
                    "command": [
                        "destruct f; simpl; auto.",
                        "VernacExtend",
                        "b4245a91e7febf580658d25d08484d577ee31148"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply (Ztrunc_Z2R 0).",
                        "VernacExtend",
                        "f2dca00f6438321da92a0cb199732aa8776ab401"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct e; f_equal.",
                        "VernacExtend",
                        "4db9c489a52d1f787290650ac5b621332e4951e1"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "unfold F2R; simpl.",
                        "VernacExtend",
                        "a8b73d273d1c692e5deb932d4bd557029927ed13"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r.",
                        "VernacExtend",
                        "d41d18f77f80ae8595148d0386b68549f3d406cf"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztrunc_Z2R.",
                        "VernacExtend",
                        "5d88ff3ba444a5e6845eb9bf9b6605e2ebc143e5"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "unfold F2R; simpl.",
                        "VernacExtend",
                        "a8b73d273d1c692e5deb932d4bd557029927ed13"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_mult.",
                        "VernacExtend",
                        "4bfcef9c6d8659a267de59ca9647b2d107af9b2a"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztrunc_Z2R.",
                        "VernacExtend",
                        "5d88ff3ba444a5e6845eb9bf9b6605e2ebc143e5"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "unfold F2R; simpl.",
                        "VernacExtend",
                        "a8b73d273d1c692e5deb932d4bd557029927ed13"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_cond_Zopp.",
                        "VernacExtend",
                        "110412e03683db51cd48013c77eb85bc791a33a4"
                    ]
                },
                {
                    "command": [
                        "rewrite <- cond_Ropp_mult_l.",
                        "VernacExtend",
                        "6cd8ac705a65c5574c9971c51de4f4b58ae0aadb"
                    ]
                },
                {
                    "command": [
                        "assert (EQ: forall x, Ztrunc (cond_Ropp b x) = cond_Zopp b (Ztrunc x)).",
                        "VernacExtend",
                        "ab859f27751b520758431c57ab7aca7e911e1044"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct b; simpl; auto.",
                        "VernacExtend",
                        "1e97a3a68faccf3ab7e0dc204d798c19287fa21f"
                    ]
                },
                {
                    "command": [
                        "apply Ztrunc_opp.",
                        "VernacExtend",
                        "0eee5d462e4962d393a76ffed66f6ea3b29ef486"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite EQ.",
                        "VernacExtend",
                        "359c5e196f83a6afbd9ede635bddbf545fd1eb82"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "generalize (Zpower_pos_gt_0 2 p (eq_refl _)); intros.",
                        "VernacExtend",
                        "611680fbd9047493cbb191c45846163f9a7383f6"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztrunc_floor.",
                        "VernacExtend",
                        "eacc44db66d8d93dfd78f0c8e448580e58066cdb"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_div.",
                        "VernacExtend",
                        "2211ba557e395d0540b64fdefc231bc4c46fa6c3"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_pos.",
                        "VernacExtend",
                        "e03207c3cef85471384dc0906485b056bc83a80a"
                    ]
                },
                {
                    "command": [
                        "apply (Z2R_le 0).",
                        "VernacExtend",
                        "792cf72fd89e326cb413fb5d3012c5ce541d5b09"
                    ]
                },
                {
                    "command": [
                        "compute; congruence.",
                        "VernacExtend",
                        "1a58589b5617513e16966c72a14aa8b5277b9c28"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le.",
                        "VernacExtend",
                        "cdc4280500779f23bae235b94c24a4b2ea2921fe"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat.",
                        "VernacExtend",
                        "d7abdc8c3031a09ca2712c9563d7ecf89b4d477e"
                    ]
                },
                {
                    "command": [
                        "apply (Z2R_lt 0).",
                        "VernacExtend",
                        "5d86f7673f53b2461aeeacbee1ca5bf7e694182e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ztrunc_range_pos",
            "line_nb": 814,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztrunc_floor.",
                        "VernacExtend",
                        "eacc44db66d8d93dfd78f0c8e448580e58066cdb"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_lb.",
                        "VernacExtend",
                        "d4214e2694c0df6f781b41a07d34ed64a1ccfe1d"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_plus.",
                        "VernacExtend",
                        "acce6601b0322c726f9b248c200708805f7120a8"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_ub.",
                        "VernacExtend",
                        "b2acdd0c25ad7134d5a21e6d1e218ec0ac87b671"
                    ]
                },
                {
                    "command": [
                        "generalize (Rle_bool_spec 0%R x).",
                        "VernacExtend",
                        "f7e22f9f4500e1c779d8c723fcd0692ecf3299d7"
                    ]
                },
                {
                    "command": [
                        "intros RLE; inversion RLE; subst; clear RLE.",
                        "VernacExtend",
                        "5d790272b588ce79afed7e8a466e392839700710"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztrunc_ceil in H by lra.",
                        "VernacExtend",
                        "c83479ef650ce4bc897df5e3bec0664eae5c596b"
                    ]
                },
                {
                    "command": [
                        "unfold Zceil in H.",
                        "VernacExtend",
                        "e56935e47395f1cf771f5b116b94ce993fa4285e"
                    ]
                },
                {
                    "command": [
                        "assert (-x < 0)%R.",
                        "VernacExtend",
                        "e4f94183443e66996b0020d308dc53c0ca515597"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (Z2R (Zfloor (-x)) + 1)%R.",
                        "VernacExtend",
                        "2fb7323976b7575eabf88f0f84b2294e3adfacda"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_ub.",
                        "VernacExtend",
                        "b2acdd0c25ad7134d5a21e6d1e218ec0ac87b671"
                    ]
                },
                {
                    "command": [
                        "change 0%R with (Z2R 0).",
                        "VernacExtend",
                        "0aca30e4eaa8ab73d6cf1051499c94fbbfc180f6"
                    ]
                },
                {
                    "command": [
                        "change 1%R with (Z2R 1).",
                        "VernacExtend",
                        "70dd8f0fc2009fb1b2dbc2766a6144484b011676"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_plus.",
                        "VernacExtend",
                        "34b18f1df9cc7268c70f355324b3f0e0fcc9644f"
                    ]
                },
                {
                    "command": [
                        "apply Z2R_le.",
                        "VernacExtend",
                        "b1047db1ca8ec0d49de6b93d8ab59e7c07265bfb"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "lra.",
                        "VernacExtend",
                        "c37bca18aec699b6843eab75e25df2491e3b9848"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ztrunc_range_zero",
            "line_nb": 838,
            "steps": [
                {
                    "command": [
                        "intros; generalize (Rle_bool_spec 0%R x).",
                        "VernacExtend",
                        "d065dc6262ff095d650af6cd2b806436d43bb621"
                    ]
                },
                {
                    "command": [
                        "intros RLE; inversion RLE; subst; clear RLE.",
                        "VernacExtend",
                        "5d790272b588ce79afed7e8a466e392839700710"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztrunc_floor in H by auto.",
                        "VernacExtend",
                        "cb093f999aad77b718a1615c20d01565fc64f1da"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with 0%R; auto.",
                        "VernacExtend",
                        "73f5142f8adeec1254804f8db2c1e6f4864e9191"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Ropp_0.",
                        "VernacExtend",
                        "9b57276282263b89d6671472ad672c5763b57b55"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_lt_contravar.",
                        "VernacExtend",
                        "d8e11ebac93d435105a924a8c0c7fe0b21db4797"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_0_1.",
                        "VernacExtend",
                        "c3f675388bf844e0740197fd71afa66e5eef091d"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "replace 1%R with (Z2R (Zfloor x) + 1)%R.",
                        "VernacExtend",
                        "48c2cf5fe9769e54cb57ac9cf96e4758e8b1d7cd"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_ub.",
                        "VernacExtend",
                        "b2acdd0c25ad7134d5a21e6d1e218ec0ac87b671"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_0_l.",
                        "VernacExtend",
                        "cf8d4ade30d9c7c3114ecbd301b9ca2ddc4870b1"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztrunc_ceil in H by (apply Rlt_le; auto).",
                        "VernacExtend",
                        "bf5c35b03cc0243e24252f742e0b3e33ebdc59a4"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply (Ropp_lt_cancel (-(1))).",
                        "VernacExtend",
                        "3d861f72dfca8c9b79d53b2fa43d123ef53ca477"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_involutive.",
                        "VernacExtend",
                        "ba0ab440a50f656f08837503f0228b68c9acdf87"
                    ]
                },
                {
                    "command": [
                        "replace 1%R with (Z2R (Zfloor (-x)) + 1)%R.",
                        "VernacExtend",
                        "dbf6600b28dd917a535bd6d7b1969a61623758a0"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_ub.",
                        "VernacExtend",
                        "b2acdd0c25ad7134d5a21e6d1e218ec0ac87b671"
                    ]
                },
                {
                    "command": [
                        "unfold Zceil in H.",
                        "VernacExtend",
                        "e56935e47395f1cf771f5b116b94ce993fa4285e"
                    ]
                },
                {
                    "command": [
                        "replace (Zfloor (-x)) with 0 by omega.",
                        "VernacExtend",
                        "2333540af28ad00cd406103275f71e8838bca283"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_0_l.",
                        "VernacExtend",
                        "cf8d4ade30d9c7c3114ecbd301b9ca2ddc4870b1"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with 0%R; auto.",
                        "VernacExtend",
                        "73f5142f8adeec1254804f8db2c1e6f4864e9191"
                    ]
                },
                {
                    "command": [
                        "apply Rle_0_1.",
                        "VernacExtend",
                        "996937b485ab0b0ab64abfd08ec0786445ae12e3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZofB_range_pos",
            "line_nb": 871,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite ZofB_correct in H.",
                        "VernacExtend",
                        "d351f9ccea61974a9dfe55bb8c1432c40ffaa8cc"
                    ]
                },
                {
                    "command": [
                        "destruct (is_finite prec emax f) eqn:FIN; inversion H.",
                        "VernacExtend",
                        "52e4cf9b71158b4766f6e6bf575378525fba5c4a"
                    ]
                },
                {
                    "command": [
                        "apply Ztrunc_range_pos.",
                        "VernacExtend",
                        "2bd8ae7ae8563bbe060af6dc42bcc4321890dce4"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZofB_range_neg",
            "line_nb": 878,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite ZofB_correct in H.",
                        "VernacExtend",
                        "d351f9ccea61974a9dfe55bb8c1432c40ffaa8cc"
                    ]
                },
                {
                    "command": [
                        "destruct (is_finite prec emax f) eqn:FIN; inversion H.",
                        "VernacExtend",
                        "52e4cf9b71158b4766f6e6bf575378525fba5c4a"
                    ]
                },
                {
                    "command": [
                        "set (x := B2R prec emax f) in *.",
                        "VernacExtend",
                        "b2833a353a76860aeab9cba4c85fdbe84ab5bfe5"
                    ]
                },
                {
                    "command": [
                        "set (y := (-x)%R).",
                        "VernacExtend",
                        "17d1c3fc6fd18aca3ea76ac140f4f81fee885e24"
                    ]
                },
                {
                    "command": [
                        "assert (A: (Z2R (Ztrunc y) <= y < Z2R (Ztrunc y + 1)%Z)%R).",
                        "VernacExtend",
                        "5234b234ad962bc48d1f85e77c6fcfd9448f6b83"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply Ztrunc_range_pos.",
                        "VernacExtend",
                        "2bd8ae7ae8563bbe060af6dc42bcc4321890dce4"
                    ]
                },
                {
                    "command": [
                        "unfold y.",
                        "VernacExtend",
                        "29a8f7868cdd745151dd20abb7f3c232bfc6cb70"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztrunc_opp.",
                        "VernacExtend",
                        "29f2d2fa89b52b72b65faf9ac8af6455bda883a2"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct A as [B C].",
                        "VernacExtend",
                        "63a875cd5b8768e69a1c3a849909b1ae3485f2a7"
                    ]
                },
                {
                    "command": [
                        "unfold y in B, C.",
                        "VernacExtend",
                        "f12d9b928ba74d0e59a4a8b8dc989d3b1dada0f6"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztrunc_opp in B, C.",
                        "VernacExtend",
                        "81c1aadc014fcb9ea1ffa5e71c50ffc9491d0f11"
                    ]
                },
                {
                    "command": [
                        "replace (- Ztrunc x + 1) with (- (Ztrunc x - 1)) in C by omega.",
                        "VernacExtend",
                        "d842aa640bc1d3a7a63e598a15cdbe1bbcb60159"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_opp in B, C.",
                        "VernacExtend",
                        "5e223084756a7b183788a0b10ce5d94688a8df61"
                    ]
                },
                {
                    "command": [
                        "lra.",
                        "VernacExtend",
                        "c37bca18aec699b6843eab75e25df2491e3b9848"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZofB_range_zero",
            "line_nb": 898,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite ZofB_correct in H.",
                        "VernacExtend",
                        "d351f9ccea61974a9dfe55bb8c1432c40ffaa8cc"
                    ]
                },
                {
                    "command": [
                        "destruct (is_finite prec emax f) eqn:FIN; inversion H.",
                        "VernacExtend",
                        "52e4cf9b71158b4766f6e6bf575378525fba5c4a"
                    ]
                },
                {
                    "command": [
                        "apply Ztrunc_range_zero.",
                        "VernacExtend",
                        "1252cfa9ece2cd4362c2899544d69361845d8c9f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZofB_range_nonneg",
            "line_nb": 905,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.eq_dec n 0).",
                        "VernacExtend",
                        "87624070a35063114ba6b457e8395250ac53671b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "subst n.",
                        "VernacExtend",
                        "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
                    ]
                },
                {
                    "command": [
                        "apply ZofB_range_zero.",
                        "VernacExtend",
                        "cbf2a222a1f07285e46a8bf2b54ccfbe94dbefe1"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (ZofB_range_pos f n) as (A & B).",
                        "VernacExtend",
                        "f8e6035b6109e0ffc3e98382cacf6ba4c8c88407"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (Z2R 0).",
                        "VernacExtend",
                        "8b60f158d63073c14652b0d7c059de51458311ee"
                    ]
                },
                {
                    "command": [
                        "simpl; lra.",
                        "VernacExtend",
                        "b22406fbb998570d453f079c9a4bac1d9345f3ae"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (Z2R n); auto.",
                        "VernacExtend",
                        "608074d99347e840b08900d1c7173fbee937f148"
                    ]
                },
                {
                    "command": [
                        "apply Z2R_le; auto.",
                        "VernacExtend",
                        "7b1971a0b9305d2b635a8415b3ab7992a22fe4ab"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZofBofZ_exact",
            "line_nb": 922,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (BofZ_representable n H) as (A & B & C).",
                        "VernacExtend",
                        "2687aa4c8462403bef8f0be6305a4487c1af0333"
                    ]
                },
                {
                    "command": [
                        "rewrite ZofB_correct.",
                        "VernacExtend",
                        "f235447f3132d1595b6733ad61da470b6a5cec01"
                    ]
                },
                {
                    "command": [
                        "rewrite A, B.",
                        "VernacExtend",
                        "ed436c0161d05825459279a9a09c231e66e7c5a2"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply Ztrunc_Z2R.",
                        "VernacExtend",
                        "72f94e4e634180fe6d572f9481360b75ad36203f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zfloor_minus",
            "line_nb": 930,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_imp.",
                        "VernacExtend",
                        "9278ce7c32c530a2f8be72314e979fc619d4a028"
                    ]
                },
                {
                    "command": [
                        "replace (Zfloor x - n + 1) with ((Zfloor x + 1) - n) by omega.",
                        "VernacExtend",
                        "a7fe6aa6893769f23d5a52eaba18dab12ececd03"
                    ]
                },
                {
                    "command": [
                        "rewrite ! Z2R_minus.",
                        "VernacExtend",
                        "5b324c2fa3f0269d410db160bac27ec81c42adef"
                    ]
                },
                {
                    "command": [
                        "unfold Rminus.",
                        "VernacExtend",
                        "be913ef3bb9103a3081d46d811769f83edb6f7a5"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat_r.",
                        "VernacExtend",
                        "5ca7acb5e67c7d7a5b6143fd11bc1e75c3e361e4"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_lb.",
                        "VernacExtend",
                        "d4214e2694c0df6f781b41a07d34ed64a1ccfe1d"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat_r.",
                        "VernacExtend",
                        "8ca3e9c0f7e7327fd8e0145cec0673e72652d996"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_plus.",
                        "VernacExtend",
                        "acce6601b0322c726f9b248c200708805f7120a8"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_ub.",
                        "VernacExtend",
                        "b2acdd0c25ad7134d5a21e6d1e218ec0ac87b671"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZofB_minus",
            "line_nb": 943,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Q: -2^prec <= q <= 2^prec).",
                        "VernacExtend",
                        "b710040264440245347491814cb0713f4bd005d5"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "generalize (Zpower_ge_0 radix2 prec); simpl; omega.",
                        "VernacExtend",
                        "10826ececbc6c4e432625eba2fee800793086fdd"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (RANGE: (-1 < B2R _ _ f < Z2R (p + 1)%Z)%R) by (apply ZofB_range_nonneg; auto; omega).",
                        "VernacExtend",
                        "9fc1b9b843f42ba65ce805213f4ca9b15c3a04cd"
                    ]
                },
                {
                    "command": [
                        "rewrite ZofB_correct in H.",
                        "VernacExtend",
                        "d351f9ccea61974a9dfe55bb8c1432c40ffaa8cc"
                    ]
                },
                {
                    "command": [
                        "destruct (is_finite prec emax f) eqn:FIN; try discriminate.",
                        "VernacExtend",
                        "fb2806e931d14a9c1e0da4ec9ffff1dc49983e98"
                    ]
                },
                {
                    "command": [
                        "assert (PQ2: (Z2R (p + 1) <= Z2R q * 2)%R).",
                        "VernacExtend",
                        "0811e42bcffb29f8fc8bfd0bf1b504c94bdbd84c"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "change 2%R with (Z2R 2).",
                        "VernacExtend",
                        "1130fc71e1344d754b49116cb28f5a8ef0e6e9ae"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_mult.",
                        "VernacExtend",
                        "4bfcef9c6d8659a267de59ca9647b2d107af9b2a"
                    ]
                },
                {
                    "command": [
                        "apply Z2R_le.",
                        "VernacExtend",
                        "b1047db1ca8ec0d49de6b93d8ab59e7c07265bfb"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (EXACT: round radix2 fexp (round_mode m) (B2R _ _ f - Z2R q)%R = (B2R _ _ f - Z2R q)%R).",
                        "VernacExtend",
                        "c96089bb20878efcc1454f984665001320bf6fb6"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply round_generic.",
                        "VernacExtend",
                        "329c42b8a825480836d8d91cbeb7ff485a68ba31"
                    ]
                },
                {
                    "command": [
                        "apply valid_rnd_round_mode.",
                        "VernacExtend",
                        "20b08e148269eae05657e863e427e37c03e032b6"
                    ]
                },
                {
                    "command": [
                        "apply sterbenz_aux.",
                        "VernacExtend",
                        "8539d2854a1f8d416d6e56d2407d0281c1a38b54"
                    ]
                },
                {
                    "command": [
                        "apply FLT_exp_monotone.",
                        "VernacExtend",
                        "2420742b3927671bc64f99c4eb789cac20eadf6b"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_B2R.",
                        "VernacExtend",
                        "17746e2c3cda8dfb94931be74eb7b5e284b2058f"
                    ]
                },
                {
                    "command": [
                        "apply integer_representable_n.",
                        "VernacExtend",
                        "82606dabf765e6367de334ded4cc7646db4df04e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "lra.",
                        "VernacExtend",
                        "c37bca18aec699b6843eab75e25df2491e3b9848"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (BofZ_exact q Q) as (A & B & C).",
                        "VernacExtend",
                        "c5ca19099b14b862d2fcbbb146a212a6d587b574"
                    ]
                },
                {
                    "command": [
                        "generalize (Bminus_correct _ _ _ Hmax minus_nan m f (BofZ q) FIN B).",
                        "VernacExtend",
                        "8f83e99f6afd015b1f2e1a9d590edb30add0b64e"
                    ]
                },
                {
                    "command": [
                        "rewrite Rlt_bool_true.",
                        "VernacExtend",
                        "31cd82492c96b4dc35f8c36f967bc8802a2bc6ba"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "fold emin; fold fexp.",
                        "VernacExtend",
                        "e902875dc03cf15abcd21a62d61e38945c341d5f"
                    ]
                },
                {
                    "command": [
                        "intros (D & E & F).",
                        "VernacExtend",
                        "d230d9ba37af16bdf8f2cedfe239d8f00ccf2f59"
                    ]
                },
                {
                    "command": [
                        "rewrite ZofB_correct.",
                        "VernacExtend",
                        "f235447f3132d1595b6733ad61da470b6a5cec01"
                    ]
                },
                {
                    "command": [
                        "rewrite E.",
                        "VernacExtend",
                        "304079e57d3d6c0912193a26e70d779c9e1768b9"
                    ]
                },
                {
                    "command": [
                        "rewrite D.",
                        "VernacExtend",
                        "c8b2ecfe60096f3f4842362d970cc94fbb2c0ef5"
                    ]
                },
                {
                    "command": [
                        "rewrite A.",
                        "VernacExtend",
                        "66a3aec75a717b72a3c9a20459f4dabe8d0df2c1"
                    ]
                },
                {
                    "command": [
                        "rewrite EXACT.",
                        "VernacExtend",
                        "ad0eba26fa3e861bb69e40f58424b51d92265a26"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite ! Ztrunc_floor.",
                        "VernacExtend",
                        "605fe9a7ac91bcc60084c75e58936129414779c5"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_minus.",
                        "VernacExtend",
                        "f3e34b7c8e5b22a286a79c7de1f090c9bb2edd62"
                    ]
                },
                {
                    "command": [
                        "lra.",
                        "VernacExtend",
                        "c37bca18aec699b6843eab75e25df2491e3b9848"
                    ]
                },
                {
                    "command": [
                        "lra.",
                        "VernacExtend",
                        "c37bca18aec699b6843eab75e25df2491e3b9848"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite A.",
                        "VernacExtend",
                        "66a3aec75a717b72a3c9a20459f4dabe8d0df2c1"
                    ]
                },
                {
                    "command": [
                        "fold emin; fold fexp.",
                        "VernacExtend",
                        "e902875dc03cf15abcd21a62d61e38945c341d5f"
                    ]
                },
                {
                    "command": [
                        "rewrite EXACT.",
                        "VernacExtend",
                        "ad0eba26fa3e861bb69e40f58424b51d92265a26"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (bpow radix2 prec).",
                        "VernacExtend",
                        "595367338c13fdb3c867cf7a260de689af6a9384"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (Z2R q).",
                        "VernacExtend",
                        "9af95b4d855379d556e801f2f883e0e3f0c617c4"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_le.",
                        "VernacExtend",
                        "56e5fa0041a92960aae82921a26cdcceba103730"
                    ]
                },
                {
                    "command": [
                        "lra.",
                        "VernacExtend",
                        "c37bca18aec699b6843eab75e25df2491e3b9848"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_Zpower.",
                        "VernacExtend",
                        "6a737b45852133a11ffa7a0af2881be74773d2b4"
                    ]
                },
                {
                    "command": [
                        "apply Z2R_le; auto.",
                        "VernacExtend",
                        "7b1971a0b9305d2b635a8415b3ab7992a22fe4ab"
                    ]
                },
                {
                    "command": [
                        "red in prec_gt_0_; omega.",
                        "VernacExtend",
                        "d5dab93f8056283198d3a561eaaa85ddc796bdea"
                    ]
                },
                {
                    "command": [
                        "apply bpow_lt.",
                        "VernacExtend",
                        "45b51ee535829682305d615af418ef00162d772b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZofB_range_correct",
            "line_nb": 1003,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold ZofB_range.",
                        "VernacExtend",
                        "2b1055af8514c60dfc2cef737166e86540a1b2d0"
                    ]
                },
                {
                    "command": [
                        "rewrite ZofB_correct.",
                        "VernacExtend",
                        "f235447f3132d1595b6733ad61da470b6a5cec01"
                    ]
                },
                {
                    "command": [
                        "fold n.",
                        "VernacExtend",
                        "05e31e9ea51726fb4913849b5a85b4f7c49fb25b"
                    ]
                },
                {
                    "command": [
                        "destruct (is_finite prec emax f); auto.",
                        "VernacExtend",
                        "7bde57d80b34f22ed5925657849ea42d01c05232"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZofB_range_inversion",
            "line_nb": 1010,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite ZofB_range_correct in H.",
                        "VernacExtend",
                        "14a9cbb904d834c559552e427efc464e97b3c8b3"
                    ]
                },
                {
                    "command": [
                        "rewrite ZofB_correct.",
                        "VernacExtend",
                        "f235447f3132d1595b6733ad61da470b6a5cec01"
                    ]
                },
                {
                    "command": [
                        "destruct (is_finite prec emax f); try discriminate.",
                        "VernacExtend",
                        "a216cd46fec413d42862f93720bffd194ebe6e24"
                    ]
                },
                {
                    "command": [
                        "set (n1 := Ztrunc (B2R _ _ f)) in *.",
                        "VernacExtend",
                        "378491abd79ef5fadfc93fc4e7c843c517492efb"
                    ]
                },
                {
                    "command": [
                        "destruct (min <=? n1) eqn:MIN; try discriminate.",
                        "VernacExtend",
                        "26ee26c82c48946b3fd638c8b38a192b45966b80"
                    ]
                },
                {
                    "command": [
                        "destruct (n1 <=? max) eqn:MAX; try discriminate.",
                        "VernacExtend",
                        "8a780da462112313a67b0ec4662b89424ee1d1eb"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "subst n.",
                        "VernacExtend",
                        "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Zle_bool_imp_le; auto.",
                        "VernacExtend",
                        "ebefbe884682f722066267039a628c5ef30c3000"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Zle_bool_imp_le; auto.",
                        "VernacExtend",
                        "ebefbe884682f722066267039a628c5ef30c3000"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZofB_range_minus",
            "line_nb": 1027,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (ZofB_range_inversion _ _ _ _ H) as (A & B & C).",
                        "VernacExtend",
                        "cc6e908e29f28ad32bd98e52c4c93233a9aa3277"
                    ]
                },
                {
                    "command": [
                        "set (f' := Bminus prec emax prec_gt_0_ Hmax minus_nan m f (BofZ q)).",
                        "VernacExtend",
                        "36ad55f87ebb91aecb5acbb42311c1c7ce7005f0"
                    ]
                },
                {
                    "command": [
                        "assert (D: ZofB f' = Some (p - q)).",
                        "VernacExtend",
                        "4d794c5268ae4a108ecb5cb3008cf072aabb8e64"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply ZofB_minus.",
                        "VernacExtend",
                        "4d2b7cb40e3c85c6c87a5ea1b8f7f5c3e429ef8c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "unfold ZofB_range.",
                        "VernacExtend",
                        "2b1055af8514c60dfc2cef737166e86540a1b2d0"
                    ]
                },
                {
                    "command": [
                        "rewrite D.",
                        "VernacExtend",
                        "c8b2ecfe60096f3f4842362d970cc94fbb2c0ef5"
                    ]
                },
                {
                    "command": [
                        "rewrite Zle_bool_true by omega.",
                        "VernacExtend",
                        "7e7ca507a6f03643dd10575bba3ce145cdf123cf"
                    ]
                },
                {
                    "command": [
                        "rewrite Zle_bool_true by omega.",
                        "VernacExtend",
                        "7e7ca507a6f03643dd10575bba3ce145cdf123cf"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Bplus_commut",
            "line_nb": 1045,
            "steps": [
                {
                    "command": [
                        "intros until y; intros NAN.",
                        "VernacExtend",
                        "2c4132b75063cd1804d5aa960c4e73f23d2abf82"
                    ]
                },
                {
                    "command": [
                        "pose proof (Bplus_correct _ _ _ Hmax plus_nan mode x y).",
                        "VernacExtend",
                        "dee8a6d2e5a9862e253cfba10365b57a7d6fac65"
                    ]
                },
                {
                    "command": [
                        "pose proof (Bplus_correct _ _ _ Hmax plus_nan mode y x).",
                        "VernacExtend",
                        "7e5d6d54cf750b43c209f5987bc8a2115b95fc92"
                    ]
                },
                {
                    "command": [
                        "unfold Bplus in *; destruct x; destruct y; auto.",
                        "VernacExtend",
                        "7b8ffb296dc8ced0590e79c974801daad8fa13bc"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite (eqb_sym b0 b).",
                        "VernacExtend",
                        "865a7b57f50c7d66de630dfc5ee4aec94454eead"
                    ]
                },
                {
                    "command": [
                        "destruct (eqb b b0) eqn:EQB; auto.",
                        "VernacExtend",
                        "5bb04cb6cee57b75930c3408edc60219450f6284"
                    ]
                },
                {
                    "command": [
                        "f_equal; apply eqb_prop; auto.",
                        "VernacExtend",
                        "9a553c0c4e01d59edf4b6d7c97984ffdc2976763"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite NAN; auto.",
                        "VernacExtend",
                        "e0f67b44b7e188b3da08afbd997d077e59e5e606"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite (eqb_sym b0 b).",
                        "VernacExtend",
                        "865a7b57f50c7d66de630dfc5ee4aec94454eead"
                    ]
                },
                {
                    "command": [
                        "destruct (eqb b b0) eqn:EQB.",
                        "VernacExtend",
                        "cb32b2dfe428a376007ea71fccfead55c10d1d81"
                    ]
                },
                {
                    "command": [
                        "f_equal; apply eqb_prop; auto.",
                        "VernacExtend",
                        "9a553c0c4e01d59edf4b6d7c97984ffdc2976763"
                    ]
                },
                {
                    "command": [
                        "rewrite NAN; auto.",
                        "VernacExtend",
                        "e0f67b44b7e188b3da08afbd997d077e59e5e606"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite NAN; auto.",
                        "VernacExtend",
                        "e0f67b44b7e188b3da08afbd997d077e59e5e606"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite NAN; auto.",
                        "VernacExtend",
                        "e0f67b44b7e188b3da08afbd997d077e59e5e606"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite NAN; auto.",
                        "VernacExtend",
                        "e0f67b44b7e188b3da08afbd997d077e59e5e606"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite NAN; auto.",
                        "VernacExtend",
                        "e0f67b44b7e188b3da08afbd997d077e59e5e606"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite NAN; auto.",
                        "VernacExtend",
                        "e0f67b44b7e188b3da08afbd997d077e59e5e606"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite NAN; auto.",
                        "VernacExtend",
                        "e0f67b44b7e188b3da08afbd997d077e59e5e606"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "generalize (H (eq_refl _) (eq_refl _)); clear H.",
                        "VernacExtend",
                        "60def151cfd42d1ea2636c4d1602f18bcf87c061"
                    ]
                },
                {
                    "command": [
                        "generalize (H0 (eq_refl _) (eq_refl _)); clear H0.",
                        "VernacExtend",
                        "f22f4ec5c31397ac6a7e1b9340e154ae0f04bb14"
                    ]
                },
                {
                    "command": [
                        "fold emin.",
                        "VernacExtend",
                        "94549234de4174a672fa30174ed7986508293ed8"
                    ]
                },
                {
                    "command": [
                        "fold fexp.",
                        "VernacExtend",
                        "e9f391a0c2e1b071ddb032b3338a36259e46f252"
                    ]
                },
                {
                    "command": [
                        "set (x := B754_finite prec emax b0 m0 e1 e2).",
                        "VernacExtend",
                        "69952a456db410748a3e85066a5e6d2d1998b4fb"
                    ]
                },
                {
                    "command": [
                        "set (rx := B2R _ _ x).",
                        "VernacExtend",
                        "b6ec610792f8ec999b9df85f11e4b9cee3fa7ec3"
                    ]
                },
                {
                    "command": [
                        "set (y := B754_finite prec emax b m e e0).",
                        "VernacExtend",
                        "a307bfe5e793618e4e73ebae9d8519f94a5de4bb"
                    ]
                },
                {
                    "command": [
                        "set (ry := B2R _ _ y).",
                        "VernacExtend",
                        "b853bc28a50b159f2d504e6f4e9c0c2b979a6826"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rplus_comm ry rx).",
                        "VernacExtend",
                        "9cb2e9aa04021cadd06aaec82d714815ccc7064c"
                    ]
                },
                {
                    "command": [
                        "destruct Rlt_bool.",
                        "VernacExtend",
                        "1d271c5b254ab8ba15735ed683f2dbe76a7cc342"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros (A1 & A2 & A3) (B1 & B2 & B3).",
                        "VernacExtend",
                        "9f5aceae9c0f2b152f6f4e1e4277ecd7ab8f8bee"
                    ]
                },
                {
                    "command": [
                        "apply B2R_Bsign_inj; auto.",
                        "VernacExtend",
                        "f9c8ab320eaf2edac30031b5e20f8559397978a4"
                    ]
                },
                {
                    "command": [
                        "rewrite <- B1 in A1.",
                        "VernacExtend",
                        "433b7a3bdf6b759459e4e2bad21b80748ffeaf1e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.add_comm.",
                        "VernacExtend",
                        "cb1af9408ed4e4ab13bf29109365368cad89a879"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.min_comm.",
                        "VernacExtend",
                        "d430f850bb2a9fe1f8bd249640b46e3290487319"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros (A1 & A2) (B1 & B2).",
                        "VernacExtend",
                        "4cd8ed882748b58166adab1efacf8203d365b30a"
                    ]
                },
                {
                    "command": [
                        "apply B2FF_inj.",
                        "VernacExtend",
                        "34eff57b1d6cecac8da247658345ae15e779c4fb"
                    ]
                },
                {
                    "command": [
                        "rewrite B2 in B1.",
                        "VernacExtend",
                        "b61dd8927a9c7b83e905b1eb6353e541015eb6a8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- B1 in A1.",
                        "VernacExtend",
                        "433b7a3bdf6b759459e4e2bad21b80748ffeaf1e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Bmult2_Bplus",
            "line_nb": 1163,
            "steps": [
                {
                    "command": [
                        "intros until f; intros NAN.",
                        "VernacExtend",
                        "20668547c67fd0631c87e5374dce324fe74c5400"
                    ]
                },
                {
                    "command": [
                        "destruct (BofZ_representable 2) as (A & B & C).",
                        "VernacExtend",
                        "c13b1b657dcfa840243850114e93fbd850b8e673"
                    ]
                },
                {
                    "command": [
                        "apply (integer_representable_2p 1).",
                        "VernacExtend",
                        "c11fedd1c09a85e5c044920d465a552d4c2653b6"
                    ]
                },
                {
                    "command": [
                        "red in prec_gt_0_; omega.",
                        "VernacExtend",
                        "d5dab93f8056283198d3a561eaaa85ddc796bdea"
                    ]
                },
                {
                    "command": [
                        "pose proof (Bmult_correct _ _ _ Hmax mult_nan mode f (BofZ 2%Z)).",
                        "VernacExtend",
                        "322f8660d43e26234df90f794c4ed500cc40f9c0"
                    ]
                },
                {
                    "command": [
                        "fold emin in H.",
                        "VernacExtend",
                        "1be21612b9f651dd894897bf7dfa04fd0346dacb"
                    ]
                },
                {
                    "command": [
                        "rewrite A, B, C in H.",
                        "VernacExtend",
                        "1f5a07a175f732ed57d7abe35ea96a4773fd3b18"
                    ]
                },
                {
                    "command": [
                        "rewrite xorb_false_r in H.",
                        "VernacExtend",
                        "04305f7e8e01c08496e6712f303e02318522c407"
                    ]
                },
                {
                    "command": [
                        "destruct (is_finite _ _ f) eqn:FIN.",
                        "VernacExtend",
                        "ab7f83294c0f0dae6a7db6f19fbd94a0e603a212"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "pose proof (Bplus_correct _ _ _ Hmax plus_nan mode f f FIN FIN).",
                        "VernacExtend",
                        "59aa553bf50e2a94c6e35ba3c0bdee243b616bf8"
                    ]
                },
                {
                    "command": [
                        "fold emin in H0.",
                        "VernacExtend",
                        "563253a04c0fbc8cfbbc465ee9ef8623c93aba07"
                    ]
                },
                {
                    "command": [
                        "assert (EQ: (B2R prec emax f * Z2R 2%Z = B2R prec emax f + B2R prec emax f)%R).",
                        "VernacExtend",
                        "797e385eff48d865e0e251d211eecb0deded9e9a"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "change (Z2R 2%Z) with 2%R.",
                        "VernacExtend",
                        "831525bfb105e2b3bfdaf785a6d861daefc61137"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite <- EQ in H0.",
                        "VernacExtend",
                        "a11551c7f8e5c168f855e6696253f6191ea50193"
                    ]
                },
                {
                    "command": [
                        "destruct Rlt_bool.",
                        "VernacExtend",
                        "1d271c5b254ab8ba15735ed683f2dbe76a7cc342"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as (P & Q & R).",
                        "VernacExtend",
                        "97ecf85883fc8c99457d604bcab2617a16542f73"
                    ]
                },
                {
                    "command": [
                        "destruct H as (S & T & U).",
                        "VernacExtend",
                        "5def0525cc4e887e8d7ca8f72f474113a6418a25"
                    ]
                },
                {
                    "command": [
                        "apply B2R_Bsign_inj; auto.",
                        "VernacExtend",
                        "f9c8ab320eaf2edac30031b5e20f8559397978a4"
                    ]
                },
                {
                    "command": [
                        "rewrite P, S.",
                        "VernacExtend",
                        "b4f9f07855579adb5eedf0ea87506d005bd31b74"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite R, U.",
                        "VernacExtend",
                        "cabb4cea8b54a69b23c40f32ad94104aceeec8ae"
                    ]
                },
                {
                    "command": [
                        "replace 0%R with (0 * Z2R 2%Z)%R by ring.",
                        "VernacExtend",
                        "f4f2d5d17470331071b636f2abc1c7aee43475ab"
                    ]
                },
                {
                    "command": [
                        "rewrite Rcompare_mult_r.",
                        "VernacExtend",
                        "ad92c76d40608075a4b054e215dcc7183a886eaa"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_diag, orb_diag.",
                        "VernacExtend",
                        "f6585fef51aff665d47d8f3c3d283ef858a248a5"
                    ]
                },
                {
                    "command": [
                        "destruct f; try discriminate; simpl.",
                        "VernacExtend",
                        "a001ee4076eadb2762c273e1dcd9c5a6e655df63"
                    ]
                },
                {
                    "command": [
                        "rewrite Rcompare_Eq by auto.",
                        "VernacExtend",
                        "7da14f7518dec39676f446f852f5a70f514603cd"
                    ]
                },
                {
                    "command": [
                        "destruct mode; auto.",
                        "VernacExtend",
                        "58b736fd39bedc66941f85415f7cba1f902f791d"
                    ]
                },
                {
                    "command": [
                        "replace 0%R with (@F2R radix2 {| Fnum := 0%Z; Fexp := e |}).",
                        "VernacExtend",
                        "572f106b97ecd47219bd8a3432485e7362b740ce"
                    ]
                },
                {
                    "command": [
                        "rewrite Rcompare_F2R.",
                        "VernacExtend",
                        "0ffbfa136e0f8e9ea0d59ecc5fd3d4c38275e260"
                    ]
                },
                {
                    "command": [
                        "destruct b; auto.",
                        "VernacExtend",
                        "95533d5a0da46eaf4c778d77a0f89adc7cad4aff"
                    ]
                },
                {
                    "command": [
                        "unfold F2R.",
                        "VernacExtend",
                        "01074792470ba071b62f8438b8d9b8c922ca2998"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "change 0%R with (Z2R 0%Z).",
                        "VernacExtend",
                        "a885862529d2a2422ea2d337729146d7d3815064"
                    ]
                },
                {
                    "command": [
                        "apply Z2R_lt.",
                        "VernacExtend",
                        "20648688afbdacefe3b6070755cbe6f263ce5093"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "destruct (Bmult prec emax prec_gt_0_ Hmax mult_nan mode f (BofZ 2)); reflexivity || discriminate.",
                        "VernacExtend",
                        "cce0a8c6fdb7341428b9f1f3950e2ef6a2d3d059"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as (P & Q).",
                        "VernacExtend",
                        "27a895b84d0b01d055aa51f800e6d4fc10d8bc80"
                    ]
                },
                {
                    "command": [
                        "apply B2FF_inj.",
                        "VernacExtend",
                        "34eff57b1d6cecac8da247658345ae15e779c4fb"
                    ]
                },
                {
                    "command": [
                        "rewrite P, H.",
                        "VernacExtend",
                        "a4359bc110b65805f1d69b6e767e04abcf6ed9b8"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct f; try discriminate.",
                        "VernacExtend",
                        "1151ab2aae8cfde3885227a3a988e2538687c313"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl Bplus.",
                        "VernacExtend",
                        "de7383351a27f4a62c627d0eeef6c4ff8bc826e6"
                    ]
                },
                {
                    "command": [
                        "rewrite eqb_true.",
                        "VernacExtend",
                        "2dd65209dc0abe3c274f4cd6d5befd5ea3d586aa"
                    ]
                },
                {
                    "command": [
                        "destruct (BofZ 2) eqn:B2; try discriminate; simpl in *.",
                        "VernacExtend",
                        "0bd4cff413abf8b91283f169fa4f8fe81fa40cbc"
                    ]
                },
                {
                    "command": [
                        "assert ((0 = 2)%Z) by (apply eq_Z2R; auto).",
                        "VernacExtend",
                        "d531f67f9e9d99a64780e6670565c779e4b985f3"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "subst b0.",
                        "VernacExtend",
                        "478b7c325e8a76ce9bafb9db976206add8bd3245"
                    ]
                },
                {
                    "command": [
                        "rewrite xorb_false_r.",
                        "VernacExtend",
                        "00beb0fefc34a81ad64fed3fdb46c8bfb939e88e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "unfold Bplus, Bmult.",
                        "VernacExtend",
                        "742efa7ae621a221c2797894cb09ec1f8d4007e2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- NAN by auto.",
                        "VernacExtend",
                        "1ed5466c367fc2e3e280512ebb98c33447eefff7"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Bexact_inverse_mantissa_value",
            "line_nb": 1229,
            "steps": [
                {
                    "command": [
                        "assert (REC: forall n, Z.pos (nat_rect _ xH (fun _ => xO) n) = 2 ^ (Z.of_nat n)).",
                        "VernacExtend",
                        "163ec9438e4b3e7b397c7b832d6912148f622b73"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "induction n.",
                        "VernacExtend",
                        "7f3faa2a3277e3553406d09101130efcb1764494"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl nat_rect.",
                        "VernacExtend",
                        "9f3ce8606f343323228f3161b5a8860c7c71778d"
                    ]
                },
                {
                    "command": [
                        "transitivity (2 * Z.pos (nat_rect _ xH (fun _ => xO) n)).",
                        "VernacExtend",
                        "da45a780252f8b0933acb73ca60c068884c7728a"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat2Z.inj_succ.",
                        "VernacExtend",
                        "1fc791f52357dc9e0a22fac0a6d82e87969a1699"
                    ]
                },
                {
                    "command": [
                        "rewrite IHn.",
                        "VernacExtend",
                        "ec9472e508d0ba82a8f6be939d2e4d39f35c3667"
                    ]
                },
                {
                    "command": [
                        "unfold Z.succ.",
                        "VernacExtend",
                        "d3292e8337e33f78eeb3f491cfdb2987c4452e05"
                    ]
                },
                {
                    "command": [
                        "rewrite Zpower_plus by omega.",
                        "VernacExtend",
                        "94b9737f1be1e44aadb9e69a4a950fa3c173e8c7"
                    ]
                },
                {
                    "command": [
                        "change (2 ^ 1) with 2.",
                        "VernacExtend",
                        "f728c06bd0035fb1bdd06c0065fdac6a2579d4a1"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "red in prec_gt_0_.",
                        "VernacExtend",
                        "4b29078a2865ccd92928eaceffc91659787acb4b"
                    ]
                },
                {
                    "command": [
                        "unfold Bexact_inverse_mantissa.",
                        "VernacExtend",
                        "4006639faa17642cb111c6ef20a4f90b2758f68b"
                    ]
                },
                {
                    "command": [
                        "rewrite iter_nat_of_Z by omega.",
                        "VernacExtend",
                        "38795a64a73a96ab867d593d16a474c2d12e4c3c"
                    ]
                },
                {
                    "command": [
                        "rewrite REC.",
                        "VernacExtend",
                        "144aa4f8424f20a39c5c5ae73911504bac835e41"
                    ]
                },
                {
                    "command": [
                        "rewrite Zabs2Nat.id_abs.",
                        "VernacExtend",
                        "305488cfe810a81742661e6979e4b238f6223400"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.abs_eq by omega.",
                        "VernacExtend",
                        "86ace47fc3390d94e3a19d347b9f9d949ecc1de7"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Bexact_inverse_mantissa_digits2_pos",
            "line_nb": 1252,
            "steps": [
                {
                    "command": [
                        "assert (DIGITS: forall n, digits2_pos (nat_rect _ xH (fun _ => xO) n) = Pos.of_nat (n+1)).",
                        "VernacExtend",
                        "499bd5e0132468c168fe170ec506c367e0767f3a"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "induction n; simpl.",
                        "VernacExtend",
                        "1f285429454cbe9bad08c3e1d2fa969e99890bea"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite IHn.",
                        "VernacExtend",
                        "ec9472e508d0ba82a8f6be939d2e4d39f35c3667"
                    ]
                },
                {
                    "command": [
                        "destruct n; auto.",
                        "VernacExtend",
                        "ac1a46c3d4b557b3710fa36973beb6e353d40fb6"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "red in prec_gt_0_.",
                        "VernacExtend",
                        "4b29078a2865ccd92928eaceffc91659787acb4b"
                    ]
                },
                {
                    "command": [
                        "unfold Bexact_inverse_mantissa.",
                        "VernacExtend",
                        "4006639faa17642cb111c6ef20a4f90b2758f68b"
                    ]
                },
                {
                    "command": [
                        "rewrite iter_nat_of_Z by omega.",
                        "VernacExtend",
                        "38795a64a73a96ab867d593d16a474c2d12e4c3c"
                    ]
                },
                {
                    "command": [
                        "rewrite DIGITS.",
                        "VernacExtend",
                        "1ca51830b40a0dba3190cb2f68cee31c412583c0"
                    ]
                },
                {
                    "command": [
                        "rewrite Zabs2Nat.abs_nat_nonneg, Z2Nat.inj_sub by omega.",
                        "VernacExtend",
                        "54245f35a5851dc333d79fcb8fd676b9b0f967b9"
                    ]
                },
                {
                    "command": [
                        "destruct prec; try discriminate.",
                        "VernacExtend",
                        "d8f6a07319c5a7713432ba2491c72fc2c52d0ca9"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.sub_add.",
                        "VernacExtend",
                        "74e4808854be470d7012e526f28575e394f9c40a"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Pos2Nat.id.",
                        "VernacExtend",
                        "02e7ca3e5fec589c86389c2f088b3c9ddfe7655b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "zify; omega.",
                        "VernacExtend",
                        "5fb0df05710c307ca01829a575fcf81498a16c8a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bounded_Bexact_inverse",
            "line_nb": 1273,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold bounded, canonic_mantissa.",
                        "VernacExtend",
                        "bc10c22dd4eb4d139b5380d2ea910d8599a37cc5"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_true_iff.",
                        "VernacExtend",
                        "2e0a0ffca5d243f404153bc36ad3db5c01c2e4b5"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Zeq_is_eq_bool.",
                        "VernacExtend",
                        "91b851943f9472d2a297969d8a9edaee598c880b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Zle_is_le_bool.",
                        "VernacExtend",
                        "f66cec67346c76114cb3eccb7ea537ca35c4ceda"
                    ]
                },
                {
                    "command": [
                        "rewrite Bexact_inverse_mantissa_digits2_pos.",
                        "VernacExtend",
                        "5d29b03bee80322ca5b44490a81d4c1ca3bd7c58"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros; split.",
                        "VernacExtend",
                        "786909835bea92a2bb1ac0d0634a6eb379d5f275"
                    ]
                },
                {
                    "command": [
                        "unfold FLT_exp.",
                        "VernacExtend",
                        "d4f3b9f7d52d234d511b90934a943354be18194a"
                    ]
                },
                {
                    "command": [
                        "unfold emin in H.",
                        "VernacExtend",
                        "ee2e9fae3a03c63ef674c24f861ac1aabc7ce9d2"
                    ]
                },
                {
                    "command": [
                        "zify; omega.",
                        "VernacExtend",
                        "5fb0df05710c307ca01829a575fcf81498a16c8a"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros [A B].",
                        "VernacExtend",
                        "269ecc1b12a78cad85161d58003fb0ebdea8ebc3"
                    ]
                },
                {
                    "command": [
                        "unfold FLT_exp in A.",
                        "VernacExtend",
                        "57d1210cf03d2e0090c7028f6ed0747b8f6f7fb0"
                    ]
                },
                {
                    "command": [
                        "unfold emin.",
                        "VernacExtend",
                        "3fff444b9eede7682b5d216fb49ade0df5718e8c"
                    ]
                },
                {
                    "command": [
                        "zify; omega.",
                        "VernacExtend",
                        "5fb0df05710c307ca01829a575fcf81498a16c8a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Bexact_inverse_obligation_1",
            "line_nb": 1294,
            "steps": [
                {
                    "command": [
                        "rewrite <- bounded_Bexact_inverse in B.",
                        "VernacExtend",
                        "f640d09a040ede80e137875fc4917238a4a7b0df"
                    ]
                },
                {
                    "command": [
                        "rewrite <- bounded_Bexact_inverse.",
                        "VernacExtend",
                        "ee2cf778f645522b43002695cc4af0100e9f9a69"
                    ]
                },
                {
                    "command": [
                        "unfold emin in *.",
                        "VernacExtend",
                        "64388bf197bb69dcd10a58562de85448eaedcb7e"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Bdiv_mult_inverse",
            "line_nb": 1337,
            "steps": [
                {
                    "command": [
                        "intros until z; intros NAN; intros.",
                        "VernacExtend",
                        "e1cf17d311bd9c69d6f23fd56740f84ba4ee3623"
                    ]
                },
                {
                    "command": [
                        "destruct (Bexact_inverse_correct _ _ H) as (A & B & C & D & E).",
                        "VernacExtend",
                        "2ed22f27c29a47046fed200d790e6c9f49bd0632"
                    ]
                },
                {
                    "command": [
                        "pose proof (Bmult_correct _ _ _ Hmax mult_nan mode x z).",
                        "VernacExtend",
                        "4fae66dfbe0b3033a3d0d07fd013aedf2657c42a"
                    ]
                },
                {
                    "command": [
                        "fold emin in H0.",
                        "VernacExtend",
                        "563253a04c0fbc8cfbbc465ee9ef8623c93aba07"
                    ]
                },
                {
                    "command": [
                        "fold fexp in H0.",
                        "VernacExtend",
                        "fdfcb5c8bcd06c7241a1620edd52ba6aa566b12d"
                    ]
                },
                {
                    "command": [
                        "pose proof (Bdiv_correct _ _ _ Hmax div_nan mode x y D).",
                        "VernacExtend",
                        "d387a517732045106d4754305f809120b8eb3866"
                    ]
                },
                {
                    "command": [
                        "fold emin in H1.",
                        "VernacExtend",
                        "b093245eed88ed134644aff5af44d700dd49418f"
                    ]
                },
                {
                    "command": [
                        "fold fexp in H1.",
                        "VernacExtend",
                        "215d1bfe72b1e6928c2ab148e66d3d26e891998c"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv in H1.",
                        "VernacExtend",
                        "64fdac7b62d920e3395b8931a0d2dacb8ab40468"
                    ]
                },
                {
                    "command": [
                        "rewrite <- C in H1.",
                        "VernacExtend",
                        "d5f869c3250a3bf03306a9d063db64b2fc62bd63"
                    ]
                },
                {
                    "command": [
                        "destruct (is_finite _ _ x) eqn:FINX.",
                        "VernacExtend",
                        "bc7cc2dd06eaee7d0f57b912da2e1ae0956bd433"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct Rlt_bool.",
                        "VernacExtend",
                        "1d271c5b254ab8ba15735ed683f2dbe76a7cc342"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as (P & Q & R).",
                        "VernacExtend",
                        "97ecf85883fc8c99457d604bcab2617a16542f73"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as (S & T & U).",
                        "VernacExtend",
                        "74041b6fda5be03f4e96703eafcabaaac20a844c"
                    ]
                },
                {
                    "command": [
                        "apply B2R_Bsign_inj; auto.",
                        "VernacExtend",
                        "f9c8ab320eaf2edac30031b5e20f8559397978a4"
                    ]
                },
                {
                    "command": [
                        "rewrite Q.",
                        "VernacExtend",
                        "57be6514ee62d229cd4f20fa2e393850b2fc4579"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply is_finite_strict_finite; auto.",
                        "VernacExtend",
                        "3d3fa55a44fbc5f759628761f49ef26a35281e96"
                    ]
                },
                {
                    "command": [
                        "rewrite P, S.",
                        "VernacExtend",
                        "b4f9f07855579adb5eedf0ea87506d005bd31b74"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite R, U, E.",
                        "VernacExtend",
                        "3d3be1e4c5dc18ba56820ea5a637445248143e6c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply is_finite_not_is_nan; auto.",
                        "VernacExtend",
                        "487671d35c84c1ea435363958aed8bd554dcff77"
                    ]
                },
                {
                    "command": [
                        "apply is_finite_not_is_nan.",
                        "VernacExtend",
                        "1a4036ae5c607a279dd66171282957ceaeb42247"
                    ]
                },
                {
                    "command": [
                        "rewrite Q.",
                        "VernacExtend",
                        "57be6514ee62d229cd4f20fa2e393850b2fc4579"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply is_finite_strict_finite; auto.",
                        "VernacExtend",
                        "3d3fa55a44fbc5f759628761f49ef26a35281e96"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply B2FF_inj.",
                        "VernacExtend",
                        "34eff57b1d6cecac8da247658345ae15e779c4fb"
                    ]
                },
                {
                    "command": [
                        "rewrite H0, H1.",
                        "VernacExtend",
                        "9b9dcdf1e4ddc69a8207e12d5be14eb0c18c4f05"
                    ]
                },
                {
                    "command": [
                        "rewrite E.",
                        "VernacExtend",
                        "304079e57d3d6c0912193a26e70d779c9e1768b9"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct y; try discriminate.",
                        "VernacExtend",
                        "a324cb7636e524c8e6f18f49a6e76dddb1842bab"
                    ]
                },
                {
                    "command": [
                        "destruct z; try discriminate.",
                        "VernacExtend",
                        "734184597e33bf1a8c2a4842e10c5ffd1d090678"
                    ]
                },
                {
                    "command": [
                        "destruct x; try discriminate; simpl.",
                        "VernacExtend",
                        "ca00555cb4882634ec166a170fc1fa0890764aaa"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl in E; congruence.",
                        "VernacExtend",
                        "5895b7472381c2ee893e738018270bbd0e94a8e4"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "erewrite NAN; eauto.",
                        "VernacExtend",
                        "d5f79aafcb5326873d8209862139fe057fe1be53"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pos_pow_spec",
            "line_nb": 1382,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "assert (REC: forall y a, Pos.iter (Pos.mul x) a y = Pos.mul (pos_pow x y) a).",
                        "VernacExtend",
                        "c36386e0e26f9b822e2879ffc531d7a20810aae1"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "induction y; simpl; intros.",
                        "VernacExtend",
                        "7a2c95c7e79e2d1aa59c3e7f488e3033a97d85ae"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite ! IHy, Pos.square_spec, ! Pos.mul_assoc.",
                        "VernacExtend",
                        "e244d8a34dc90bdfb9a32a52c357f71fae6865c6"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite ! IHy, Pos.square_spec, ! Pos.mul_assoc.",
                        "VernacExtend",
                        "e244d8a34dc90bdfb9a32a52c357f71fae6865c6"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Pos2Z.inj_pow_pos.",
                        "VernacExtend",
                        "08ff02379f914335bd5556acd221e262f068c0b2"
                    ]
                },
                {
                    "command": [
                        "unfold Pos.pow.",
                        "VernacExtend",
                        "a732bc173d4a1a989ec89450e83156199f8d6ae3"
                    ]
                },
                {
                    "command": [
                        "rewrite REC.",
                        "VernacExtend",
                        "144aa4f8424f20a39c5c5ae73911504bac835e41"
                    ]
                },
                {
                    "command": [
                        "rewrite Pos.mul_1_r.",
                        "VernacExtend",
                        "1d590876d11cb41c2a3072b5af646a4537df390a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zpower_log",
            "line_nb": 1405,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (A: 0 < base) by apply radix_gt_0.",
                        "VernacExtend",
                        "637cb999410b8055adee0b5487e1ec92002b52cd"
                    ]
                },
                {
                    "command": [
                        "assert (B: 0 <= Z.log2 base) by apply Z.log2_nonneg.",
                        "VernacExtend",
                        "f3060ccfa1d6b2c1fdfd27d87ed80d1fb17fe460"
                    ]
                },
                {
                    "command": [
                        "assert (C: 0 <= Z.log2_up base) by apply Z.log2_up_nonneg.",
                        "VernacExtend",
                        "6d20db2d70e2c27a08a790fa9f361b26ba9e2348"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.log2_spec base) as [D E]; auto.",
                        "VernacExtend",
                        "3141b1084ffb9d95f91ad7c9ac1063fd512f8ca1"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.log2_up_spec base) as [F G].",
                        "VernacExtend",
                        "35296c52b7553fa4fef488ab583c63c84609b080"
                    ]
                },
                {
                    "command": [
                        "apply radix_gt_1.",
                        "VernacExtend",
                        "1fe0c373a207ebec517ee162a6c1eb5c3bbfa7c5"
                    ]
                },
                {
                    "command": [
                        "assert (K: 0 <= 2 ^ Z.log2 base) by (apply Z.pow_nonneg; omega).",
                        "VernacExtend",
                        "6b3a13bbed875a8075dac5764ab20f891ba877b1"
                    ]
                },
                {
                    "command": [
                        "rewrite ! (Z.mul_comm n).",
                        "VernacExtend",
                        "435bd5ce116d3bc9da8ac52d038325123d915c64"
                    ]
                },
                {
                    "command": [
                        "rewrite ! Z.pow_mul_r by omega.",
                        "VernacExtend",
                        "14a43b434d187b4b10e297b8ca259f498e9a6b93"
                    ]
                },
                {
                    "command": [
                        "split; apply Z.pow_le_mono_l; omega.",
                        "VernacExtend",
                        "bb4e1ba3203789a46f5f018d0772ec5e58e5d04c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bpow_log_pos",
            "line_nb": 1418,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- ! Z2R_Zpower.",
                        "VernacExtend",
                        "9e90ec9ba87e7633cb608f57e91c7d2820762967"
                    ]
                },
                {
                    "command": [
                        "apply Z2R_le; apply Zpower_log; auto.",
                        "VernacExtend",
                        "ea5e4e64b1d6633abce3eb6b4d52ce8803e94a0c"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.mul_comm; apply Zmult_gt_0_le_0_compat.",
                        "VernacExtend",
                        "19dad0f466c7a279b54d7671682f0b27aaac9604"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply Z.log2_nonneg.",
                        "VernacExtend",
                        "448905e631eb4e9ce3a8d3a36eba6bc98c94b1ed"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bpow_log_neg",
            "line_nb": 1427,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "set (m := -n).",
                        "VernacExtend",
                        "f0df1a0bf6ca1fb2879bb8bead4b174630001ab9"
                    ]
                },
                {
                    "command": [
                        "replace n with (-m) by (unfold m; omega).",
                        "VernacExtend",
                        "dba80cf8b4bf9bbcc609fac608d486f9d7e06d68"
                    ]
                },
                {
                    "command": [
                        "rewrite ! Z.mul_opp_l, ! bpow_opp.",
                        "VernacExtend",
                        "f07b4d19ea2d9b7bc36c73fc3bfd961d8e058e06"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_le.",
                        "VernacExtend",
                        "df9ed9c0ff0a06fae52364d762a5f467e1897f8b"
                    ]
                },
                {
                    "command": [
                        "apply bpow_gt_0.",
                        "VernacExtend",
                        "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
                    ]
                },
                {
                    "command": [
                        "apply bpow_log_pos.",
                        "VernacExtend",
                        "fe7eb815677bcc273c2e8d23349f2730785ba1f1"
                    ]
                },
                {
                    "command": [
                        "unfold m; omega.",
                        "VernacExtend",
                        "813d3f79f44106e2f53b88da412279e43f091a75"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_NE_underflows",
            "line_nb": 1464,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "set (eps := bpow radix2 (emin - 1)) in *.",
                        "VernacExtend",
                        "0b3c7b12aae38b6efb2de34dde4db97d9f09cdcd"
                    ]
                },
                {
                    "command": [
                        "assert (A: round radix2 fexp (round_mode mode_NE) eps = 0%R).",
                        "VernacExtend",
                        "63ad5be93d8f7e9484d5a57932b21fb687606225"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold round.",
                        "VernacExtend",
                        "f3d1b03811d5ac6ab6c3f71cfc7300bcd9d60887"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "assert (E: canonic_exp radix2 fexp eps = emin).",
                        "VernacExtend",
                        "57fb846522b7c0e2ec5e52de787148164fd2045d"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold canonic_exp, eps.",
                        "VernacExtend",
                        "6ebd56cd2e594ef29760adb93e9473e116d3ac8b"
                    ]
                },
                {
                    "command": [
                        "rewrite ln_beta_bpow.",
                        "VernacExtend",
                        "562ed7a7f197615f8fb2cc276e6bc8e10357a919"
                    ]
                },
                {
                    "command": [
                        "unfold fexp, FLT_exp.",
                        "VernacExtend",
                        "d790a7e5d03d5c9606c08f62c52b1a3604ada64e"
                    ]
                },
                {
                    "command": [
                        "zify; red in prec_gt_0_; omega.",
                        "VernacExtend",
                        "e6280dac08648fff533fb77d6a48d5748269cf4b"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "unfold scaled_mantissa; rewrite E.",
                        "VernacExtend",
                        "06e8cd8f9a29077fd74408817a412c083caf60c0"
                    ]
                },
                {
                    "command": [
                        "assert (P: (eps * bpow radix2 (-emin) = / 2)%R).",
                        "VernacExtend",
                        "9d32b45ddae8fd1424c9976fc975af2b97453693"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold eps.",
                        "VernacExtend",
                        "5e0a0206e5bdf1a86f0ef9d2b4bef10bd6d8f58b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- bpow_plus.",
                        "VernacExtend",
                        "9ebeb3f5611fe78274a1e2e0131c7f7ed66e1cfc"
                    ]
                },
                {
                    "command": [
                        "replace (emin - 1 + -emin) with (-1) by omega.",
                        "VernacExtend",
                        "3e3d489f943fd7d1b616ce3304f0c54dcad8d604"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite P.",
                        "VernacExtend",
                        "a68444f3ff5a99dd68a5269da7bfb78567ba4ea2"
                    ]
                },
                {
                    "command": [
                        "unfold Znearest.",
                        "VernacExtend",
                        "c6481393d02b9e0a0e8669a35ef29881ad118b89"
                    ]
                },
                {
                    "command": [
                        "assert (F: Zfloor (/ 2)%R = 0).",
                        "VernacExtend",
                        "9817179ca77c6cb023da9e165dce2d6d24737cda"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_imp.",
                        "VernacExtend",
                        "9278ce7c32c530a2f8be72314e979fc619d4a028"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "lra.",
                        "VernacExtend",
                        "c37bca18aec699b6843eab75e25df2491e3b9848"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite F.",
                        "VernacExtend",
                        "6df8c10c25971db82981aba92c1e0c52d940c7f9"
                    ]
                },
                {
                    "command": [
                        "change (Z2R 0) with 0%R.",
                        "VernacExtend",
                        "6e961300020d3343dcf18d05af4d6eb841a441c1"
                    ]
                },
                {
                    "command": [
                        "rewrite Rminus_0_r.",
                        "VernacExtend",
                        "f41d2c9a1ab0030a599c576fc397975a2d0d5b33"
                    ]
                },
                {
                    "command": [
                        "rewrite Rcompare_Eq by auto.",
                        "VernacExtend",
                        "7da14f7518dec39676f446f852f5a70f514603cd"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold F2R; simpl.",
                        "VernacExtend",
                        "a8b73d273d1c692e5deb932d4bd557029927ed13"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_0_l.",
                        "VernacExtend",
                        "9d2fdd56dbced8968cf28714ab54a4daf5852a4b"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply Rle_antisym.",
                        "VernacExtend",
                        "8e9431fb6db6f151160007e68131f4f5cb1c7968"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- A.",
                        "VernacExtend",
                        "ae4f7c34b9745c58374bff661e3bf44cf209be15"
                    ]
                },
                {
                    "command": [
                        "apply round_le.",
                        "VernacExtend",
                        "ba0bf8a89aed461d3504ea81d3518460a53758f7"
                    ]
                },
                {
                    "command": [
                        "apply fexp_correct; auto.",
                        "VernacExtend",
                        "4ec56761cdd451c636b20d54a8737ee529ef53b5"
                    ]
                },
                {
                    "command": [
                        "apply valid_rnd_round_mode.",
                        "VernacExtend",
                        "20b08e148269eae05657e863e427e37c03e032b6"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (round_0 radix2 fexp (round_mode mode_NE)).",
                        "VernacExtend",
                        "858770ef1fcbe56373443255e5f310ea2d98620e"
                    ]
                },
                {
                    "command": [
                        "apply round_le.",
                        "VernacExtend",
                        "ba0bf8a89aed461d3504ea81d3518460a53758f7"
                    ]
                },
                {
                    "command": [
                        "apply fexp_correct; auto.",
                        "VernacExtend",
                        "4ec56761cdd451c636b20d54a8737ee529ef53b5"
                    ]
                },
                {
                    "command": [
                        "apply valid_rnd_round_mode.",
                        "VernacExtend",
                        "20b08e148269eae05657e863e427e37c03e032b6"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_integer_underflow",
            "line_nb": 1516,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply round_NE_underflows.",
                        "VernacExtend",
                        "70d0be7e9472f968f7c42c5879b8c617d4230d51"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_pos.",
                        "VernacExtend",
                        "e03207c3cef85471384dc0906485b056bc83a80a"
                    ]
                },
                {
                    "command": [
                        "apply (Z2R_le 0).",
                        "VernacExtend",
                        "792cf72fd89e326cb413fb5d3012c5ce541d5b09"
                    ]
                },
                {
                    "command": [
                        "zify; omega.",
                        "VernacExtend",
                        "5fb0df05710c307ca01829a575fcf81498a16c8a"
                    ]
                },
                {
                    "command": [
                        "apply bpow_ge_0.",
                        "VernacExtend",
                        "21ebde0be0a631dfd60f8ca27e963cec55b52605"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (bpow radix2 (Z.log2_up (Z.pos m) + e * Z.log2 base)).",
                        "VernacExtend",
                        "be11978c2cd4cb47a350351d55219520fc6aad96"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite bpow_plus.",
                        "VernacExtend",
                        "a66bde7144b19ede4a139295758f63aab8dcbea6"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat.",
                        "VernacExtend",
                        "99a65cd1efb8e35313415d4b052731e2b0746daf"
                    ]
                },
                {
                    "command": [
                        "apply (Z2R_le 0); zify; omega.",
                        "VernacExtend",
                        "938e33c0de4c751f7efa60f2d978bc74c0d81b0d"
                    ]
                },
                {
                    "command": [
                        "apply bpow_ge_0.",
                        "VernacExtend",
                        "21ebde0be0a631dfd60f8ca27e963cec55b52605"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_Zpower.",
                        "VernacExtend",
                        "6a737b45852133a11ffa7a0af2881be74773d2b4"
                    ]
                },
                {
                    "command": [
                        "apply Z2R_le.",
                        "VernacExtend",
                        "b1047db1ca8ec0d49de6b93d8ab59e7c07265bfb"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.eq_dec (Z.pos m) 1).",
                        "VernacExtend",
                        "135d28a5ded4de5b07688814cd218a11853fd8d2"
                    ]
                },
                {
                    "command": [
                        "rewrite e0.",
                        "VernacExtend",
                        "9b24dbdfbb5c2f52e38c8dc95989d55c0cc61e17"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply Z.log2_up_spec.",
                        "VernacExtend",
                        "19d721d76a43090bb530c5644c40bca02f309c96"
                    ]
                },
                {
                    "command": [
                        "zify; omega.",
                        "VernacExtend",
                        "5fb0df05710c307ca01829a575fcf81498a16c8a"
                    ]
                },
                {
                    "command": [
                        "apply Z.log2_up_nonneg.",
                        "VernacExtend",
                        "f4298631fa4ce10db8eb4e885f1cbb4819527caa"
                    ]
                },
                {
                    "command": [
                        "apply bpow_log_neg.",
                        "VernacExtend",
                        "b487b53dc84bfb15e7911a55cfb200136ead72d8"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply bpow_le.",
                        "VernacExtend",
                        "9264f19c0062a0a711efc832825406a995342e90"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Bparse_correct",
            "line_nb": 1547,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (A: forall x, @F2R radix2 {| Fnum := x; Fexp := 0 |} = Z2R x).",
                        "VernacExtend",
                        "97a416f272e2afcef434a7fa89efda50de1cb42f"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold F2R, Fnum; simpl.",
                        "VernacExtend",
                        "5d16105c93f7a11dc1c0c81f935651732ff8439d"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "unfold Bparse, r.",
                        "VernacExtend",
                        "0ca08d2fe64d68796df009a2f97cfda2958a6afa"
                    ]
                },
                {
                    "command": [
                        "destruct e as [ | e | e].",
                        "VernacExtend",
                        "b8a02fd6657172e01ae36ec04360f06fcd4af62d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "change (bpow base 0) with 1%R.",
                        "VernacExtend",
                        "e5f20d20071a115b3ff8234d77c5554502f647c5"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r.",
                        "VernacExtend",
                        "d41d18f77f80ae8595148d0386b68549f3d406cf"
                    ]
                },
                {
                    "command": [
                        "exact (BofZ_correct (Z.pos m)).",
                        "VernacExtend",
                        "9a8e7214704f6c09bebdaa674f056ce62d1d8f69"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.ltb_spec (Z.pos e * Z.log2 (Z.pos b)) emax).",
                        "VernacExtend",
                        "b34abd66918ec59ec9f5680266ce70abb0cc0e89"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite pos_pow_spec.",
                        "VernacExtend",
                        "3f05dce2ba9a1e3b731dd5efd96f8f869fb6cb27"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_Zpower by (zify; omega).",
                        "VernacExtend",
                        "80125772d46031d0193469f80bed4b5388e66f22"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_mult.",
                        "VernacExtend",
                        "4bfcef9c6d8659a267de59ca9647b2d107af9b2a"
                    ]
                },
                {
                    "command": [
                        "replace false with (Z.pos m * Z.pos b ^ Z.pos e <? 0).",
                        "VernacExtend",
                        "ca6ecf7129318f9c615847d9698b809309407cde"
                    ]
                },
                {
                    "command": [
                        "exact (BofZ_correct (Z.pos m * Z.pos b ^ Z.pos e)).",
                        "VernacExtend",
                        "668eed2acca81a65b8d0a088f01c602a569df15b"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.ltb_ge.",
                        "VernacExtend",
                        "89c7fae0d3550ce8b592bab4b11ec9145888cab5"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.mul_comm.",
                        "VernacExtend",
                        "088699fe7f894ededd3c93ab3a27f9d105f1ab84"
                    ]
                },
                {
                    "command": [
                        "apply Zmult_gt_0_le_0_compat.",
                        "VernacExtend",
                        "7aa31f70b3a830ca88650011af80865486b313df"
                    ]
                },
                {
                    "command": [
                        "zify; omega.",
                        "VernacExtend",
                        "5fb0df05710c307ca01829a575fcf81498a16c8a"
                    ]
                },
                {
                    "command": [
                        "apply (Zpower_ge_0 base).",
                        "VernacExtend",
                        "11bd4e41cacd046a92eef7aea33eccd8163a7a46"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite Rlt_bool_false.",
                        "VernacExtend",
                        "4727213e40ddfbec66b0f056e1c646ac9eb48972"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "eapply Rle_trans; [idtac|apply Rle_abs].",
                        "VernacExtend",
                        "1ebb710125b5b9d1c67c5161dbcbe454eff68c19"
                    ]
                },
                {
                    "command": [
                        "apply (round_integer_overflow base).",
                        "VernacExtend",
                        "fb6da6d3f506c5d519191ac9eda787ea5967f233"
                    ]
                },
                {
                    "command": [
                        "zify; omega.",
                        "VernacExtend",
                        "5fb0df05710c307ca01829a575fcf81498a16c8a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.ltb_spec (Z.neg e * Z.log2 (Z.pos b) + Z.log2_up (Z.pos m)) emin).",
                        "VernacExtend",
                        "aa2b1febd20047e955e3e5ce63528c5bd2966957"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite round_integer_underflow; auto.",
                        "VernacExtend",
                        "f3b3872511d3df1b95be91084a19b84f867c3883"
                    ]
                },
                {
                    "command": [
                        "rewrite Rlt_bool_true.",
                        "VernacExtend",
                        "31cd82492c96b4dc35f8c36f967bc8802a2bc6ba"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "replace (Rabs 0)%R with 0%R.",
                        "VernacExtend",
                        "0583fcd61dd26c3a93a9afb5d03b0ad6b43017a2"
                    ]
                },
                {
                    "command": [
                        "apply bpow_gt_0.",
                        "VernacExtend",
                        "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
                    ]
                },
                {
                    "command": [
                        "apply (Z2R_abs 0).",
                        "VernacExtend",
                        "cdd87d2f0167f712fb329f31333706f451b38863"
                    ]
                },
                {
                    "command": [
                        "zify; omega.",
                        "VernacExtend",
                        "5fb0df05710c307ca01829a575fcf81498a16c8a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "generalize (Bdiv_correct_aux prec emax prec_gt_0_ Hmax mode_NE false m 0 false (pos_pow b e) 0).",
                        "VernacExtend",
                        "7239bbeb8687806329999cd4699fb6b2d6704418"
                    ]
                },
                {
                    "command": [
                        "set (f := match Fdiv_core_binary prec (Z.pos m) 0 (Z.pos (pos_pow b e)) 0 with | (0, _, _) => F754_nan false 1 | (Z.pos mz0, ez, lz) => binary_round_aux prec emax mode_NE (xorb false false) mz0 ez lz | (Z.neg _, _, _) => F754_nan false 1 end).",
                        "VernacExtend",
                        "682f7461df775f1b607aeba12abf839556a12c48"
                    ]
                },
                {
                    "command": [
                        "fold emin; fold fexp.",
                        "VernacExtend",
                        "e902875dc03cf15abcd21a62d61e38945c341d5f"
                    ]
                },
                {
                    "command": [
                        "rewrite ! A.",
                        "VernacExtend",
                        "9e3f1030fb10fcbf4f4498021e21183b896ab5f4"
                    ]
                },
                {
                    "command": [
                        "unfold cond_Zopp.",
                        "VernacExtend",
                        "b59e6cdb06063b22340d6f1ce56adce0401b8ced"
                    ]
                },
                {
                    "command": [
                        "rewrite pos_pow_spec.",
                        "VernacExtend",
                        "3f05dce2ba9a1e3b731dd5efd96f8f869fb6cb27"
                    ]
                },
                {
                    "command": [
                        "assert (B: (Z2R (Z.pos m) / Z2R (Z.pos b ^ Z.pos e) = Z2R (Z.pos m) * bpow base (Z.neg e))%R).",
                        "VernacExtend",
                        "aa49d51510a6dfc9b1778a2ca59b3faa74491eff"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "change (Z.neg e) with (- (Z.pos e)).",
                        "VernacExtend",
                        "f55ca0d3a766a8cb2605912c0acac3de082e5515"
                    ]
                },
                {
                    "command": [
                        "rewrite bpow_opp.",
                        "VernacExtend",
                        "3024d5fb06fda2c4f53c69e840b4e7c952a719e1"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite B.",
                        "VernacExtend",
                        "6bc7e557f9b9a2c4deba8e6f4ced1bbbccc735f9"
                    ]
                },
                {
                    "command": [
                        "intros [P Q].",
                        "VernacExtend",
                        "663dc907ccc489647d55e233d550455f27ce8429"
                    ]
                },
                {
                    "command": [
                        "destruct (Rlt_bool (Rabs (round radix2 fexp (round_mode mode_NE) (Z2R (Z.pos m) * bpow base (Z.neg e)))) (bpow radix2 emax)).",
                        "VernacExtend",
                        "508d85627e8235e0e5bfeee984b942745baa5b3c"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "destruct Q as (Q1 & Q2 & Q3).",
                        "VernacExtend",
                        "31a4ea70ec921070abe1414e8f8db1cd5a2d6768"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "rewrite B2R_FF2B, Q1.",
                        "VernacExtend",
                        "9efe16eff452b10ae9f929959b80d90d471a9b96"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "rewrite is_finite_FF2B.",
                        "VernacExtend",
                        "adb6f9d6a3c1b4b9f25b5570faeb55449840992f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite Bsign_FF2B.",
                        "VernacExtend",
                        "76a51b8aae4f12f644ab280018318f288b7848d3"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite B2FF_FF2B.",
                        "VernacExtend",
                        "8851e97c5b98b133f839ce0c9c9b55327c7d5e4f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Bconv_correct",
            "line_nb": 1634,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct f; try discriminate.",
                        "VernacExtend",
                        "1151ab2aae8cfde3885227a3a988e2538687c313"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite round_0.",
                        "VernacExtend",
                        "625125ccb3011c651c29b92e3197f630d3c9a749"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_R0.",
                        "VernacExtend",
                        "4d6634083a68d86e15f3870da962b3fc61d79ebb"
                    ]
                },
                {
                    "command": [
                        "rewrite Rlt_bool_true.",
                        "VernacExtend",
                        "31cd82492c96b4dc35f8c36f967bc8802a2bc6ba"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply bpow_gt_0.",
                        "VernacExtend",
                        "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
                    ]
                },
                {
                    "command": [
                        "apply valid_rnd_round_mode.",
                        "VernacExtend",
                        "20b08e148269eae05657e863e427e37c03e032b6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "generalize (binary_normalize_correct _ _ _ Hmax2 m (cond_Zopp b (Zpos m0)) e b).",
                        "VernacExtend",
                        "447b66ede847545b4973bac4d62af60b09fef7f8"
                    ]
                },
                {
                    "command": [
                        "fold emin2; fold fexp2.",
                        "VernacExtend",
                        "f0cb36352745b1c37c96c1358e5b4fc5dd8bad92"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct Rlt_bool.",
                        "VernacExtend",
                        "1d271c5b254ab8ba15735ed683f2dbe76a7cc342"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros (A & B & C).",
                        "VernacExtend",
                        "600bc83b778b82e4f76af4dba65aea6d61e17221"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite C.",
                        "VernacExtend",
                        "6522c35db68091b070ccdd4e87749a3d6da8e69d"
                    ]
                },
                {
                    "command": [
                        "destruct b; simpl.",
                        "VernacExtend",
                        "bc673f83b7fadb69a2678507bb22b8ff82ac3809"
                    ]
                },
                {
                    "command": [
                        "rewrite Rcompare_Lt.",
                        "VernacExtend",
                        "1ed9ee0362e725864989e8a5e0bf1041f0280dbf"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply F2R_lt_0_compat.",
                        "VernacExtend",
                        "02c29d2c58d3045145b3025cc8495a632d8bc4b0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "compute; auto.",
                        "VernacExtend",
                        "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
                    ]
                },
                {
                    "command": [
                        "rewrite Rcompare_Gt.",
                        "VernacExtend",
                        "6af5b764e76966598fea1215f8858ea8132ad3dd"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply F2R_gt_0_compat.",
                        "VernacExtend",
                        "d0292eafc6940cb31b6d7ab8595f82dcefd46a6e"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "compute; auto.",
                        "VernacExtend",
                        "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros A.",
                        "VernacExtend",
                        "1e674201f6164f095fcb9efa159981a648ffff11"
                    ]
                },
                {
                    "command": [
                        "rewrite A.",
                        "VernacExtend",
                        "66a3aec75a717b72a3c9a20459f4dabe8d0df2c1"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "destruct b.",
                        "VernacExtend",
                        "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_bool_true.",
                        "VernacExtend",
                        "2dd8acd5318209d40288e95b2cc6a1cd92d8d107"
                    ]
                },
                {
                    "command": [
                        "apply F2R_lt_0_compat.",
                        "VernacExtend",
                        "02c29d2c58d3045145b3025cc8495a632d8bc4b0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "compute; auto.",
                        "VernacExtend",
                        "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_bool_false.",
                        "VernacExtend",
                        "115f3bf88cb7153f51757af6b09533b60d89f56b"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le.",
                        "VernacExtend",
                        "cdc4280500779f23bae235b94c24a4b2ea2921fe"
                    ]
                },
                {
                    "command": [
                        "apply Rgt_lt.",
                        "VernacExtend",
                        "9a26c3ea98ad1397e4a20df0b0490f9aec8914bc"
                    ]
                },
                {
                    "command": [
                        "apply F2R_gt_0_compat.",
                        "VernacExtend",
                        "d0292eafc6940cb31b6d7ab8595f82dcefd46a6e"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "compute; auto.",
                        "VernacExtend",
                        "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Bconv_BofZ",
            "line_nb": 1720,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (BofZ_representable _ _ _ Hmax1 n H) as (A & B & C).",
                        "VernacExtend",
                        "9f6954eeb0b8057fffab024e68761b0f76e885b2"
                    ]
                },
                {
                    "command": [
                        "set (f := BofZ prec1 emax1 prec1_gt_0_ Hmax1 n) in *.",
                        "VernacExtend",
                        "66abeb7811a04104c7fb4cb74ac85f7a8c806bc3"
                    ]
                },
                {
                    "command": [
                        "generalize (Bconv_correct conv_nan mode_NE f B).",
                        "VernacExtend",
                        "8861e41503a28b3dc2e1027b0165251c2592ce07"
                    ]
                },
                {
                    "command": [
                        "unfold BofZ.",
                        "VernacExtend",
                        "d61d417854efb46824fd580f400b6badd7b21860"
                    ]
                },
                {
                    "command": [
                        "generalize (binary_normalize_correct _ _ _ Hmax2 mode_NE n 0 false).",
                        "VernacExtend",
                        "90acb07d35225a4471fff01d6d6f158cb4e1eb3b"
                    ]
                },
                {
                    "command": [
                        "fold emin2; fold fexp2.",
                        "VernacExtend",
                        "f0cb36352745b1c37c96c1358e5b4fc5dd8bad92"
                    ]
                },
                {
                    "command": [
                        "rewrite A.",
                        "VernacExtend",
                        "66a3aec75a717b72a3c9a20459f4dabe8d0df2c1"
                    ]
                },
                {
                    "command": [
                        "replace (F2R {| Fnum := n; Fexp := 0 |}) with (Z2R n).",
                        "VernacExtend",
                        "b241113b31ddc3688af41606eab6b958e0868bb4"
                    ]
                },
                {
                    "command": [
                        "destruct Rlt_bool.",
                        "VernacExtend",
                        "1d271c5b254ab8ba15735ed683f2dbe76a7cc342"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros (P & Q & R) (D & E & F).",
                        "VernacExtend",
                        "38b32318ff9d6e3940f65929960d3541c282e702"
                    ]
                },
                {
                    "command": [
                        "apply B2R_Bsign_inj; auto.",
                        "VernacExtend",
                        "f9c8ab320eaf2edac30031b5e20f8559397978a4"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "rewrite F, C, R.",
                        "VernacExtend",
                        "4ef973af7fda55d0303c19a271229e5c4a18c7e0"
                    ]
                },
                {
                    "command": [
                        "change 0%R with (Z2R 0).",
                        "VernacExtend",
                        "0aca30e4eaa8ab73d6cf1051499c94fbbfc180f6"
                    ]
                },
                {
                    "command": [
                        "rewrite Rcompare_Z2R.",
                        "VernacExtend",
                        "99850ffef35692f481a718b264a52d18cbb5d4fc"
                    ]
                },
                {
                    "command": [
                        "unfold Z.ltb.",
                        "VernacExtend",
                        "72fdcf336c71c80107e336606b5ff3c0dc08ef62"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros P Q.",
                        "VernacExtend",
                        "7751791de3f7d3a51bb606370c6c0e8f8866edb8"
                    ]
                },
                {
                    "command": [
                        "apply B2FF_inj.",
                        "VernacExtend",
                        "34eff57b1d6cecac8da247658345ae15e779c4fb"
                    ]
                },
                {
                    "command": [
                        "rewrite P, Q.",
                        "VernacExtend",
                        "3b6c54c6a061c1fcf846ce33a4d2a6fb79b0de7c"
                    ]
                },
                {
                    "command": [
                        "rewrite C.",
                        "VernacExtend",
                        "6522c35db68091b070ccdd4e87749a3d6da8e69d"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "change 0%R with (Z2R 0).",
                        "VernacExtend",
                        "0aca30e4eaa8ab73d6cf1051499c94fbbfc180f6"
                    ]
                },
                {
                    "command": [
                        "generalize (Zlt_bool_spec n 0); intros LT; inversion LT.",
                        "VernacExtend",
                        "7a7912c6829c7ec5a5e5da6e94b711a6dbf56240"
                    ]
                },
                {
                    "command": [
                        "rewrite Rlt_bool_true; auto.",
                        "VernacExtend",
                        "fe04b463b609fa38fc3470be5bb720d87b124c14"
                    ]
                },
                {
                    "command": [
                        "apply Z2R_lt; auto.",
                        "VernacExtend",
                        "30a60cd0d86481f9afcb45fde054acfe581aadd5"
                    ]
                },
                {
                    "command": [
                        "rewrite Rlt_bool_false; auto.",
                        "VernacExtend",
                        "4671d90f31432cb0b1450065eae26ac9452df6ab"
                    ]
                },
                {
                    "command": [
                        "apply Z2R_le; auto.",
                        "VernacExtend",
                        "7b1971a0b9305d2b635a8415b3ab7992a22fe4ab"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold F2R; simpl.",
                        "VernacExtend",
                        "a8b73d273d1c692e5deb932d4bd557029927ed13"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r.",
                        "VernacExtend",
                        "d41d18f77f80ae8595148d0386b68549f3d406cf"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZofB_Bconv",
            "line_nb": 1757,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite ZofB_correct in H1.",
                        "VernacExtend",
                        "c074068e1ab3946fe6fa2662419305a0f7a81376"
                    ]
                },
                {
                    "command": [
                        "destruct (is_finite _ _ f) eqn:FIN; inversion H1.",
                        "VernacExtend",
                        "57b6452b25024801ca39d01793a604b05ccaf3b2"
                    ]
                },
                {
                    "command": [
                        "destruct (Bconv_widen_exact H H0 conv_nan m f) as (A & B & C).",
                        "VernacExtend",
                        "d8e4b16a0801056eac0c2659a2f02d306957b69c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite ZofB_correct.",
                        "VernacExtend",
                        "f235447f3132d1595b6733ad61da470b6a5cec01"
                    ]
                },
                {
                    "command": [
                        "rewrite B.",
                        "VernacExtend",
                        "6bc7e557f9b9a2c4deba8e6f4ced1bbbccc735f9"
                    ]
                },
                {
                    "command": [
                        "rewrite A.",
                        "VernacExtend",
                        "66a3aec75a717b72a3c9a20459f4dabe8d0df2c1"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZofB_range_Bconv",
            "line_nb": 1768,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (ZofB_range_inversion _ _ _ _ _ _ H3) as (A & B & C).",
                        "VernacExtend",
                        "176d99caa3be80025773606575d4ba78ef1b4443"
                    ]
                },
                {
                    "command": [
                        "unfold ZofB_range.",
                        "VernacExtend",
                        "2b1055af8514c60dfc2cef737166e86540a1b2d0"
                    ]
                },
                {
                    "command": [
                        "erewrite ZofB_Bconv by eauto.",
                        "VernacExtend",
                        "e33d99df052a3882ef5e73fcd04fd9d32eb7fc45"
                    ]
                },
                {
                    "command": [
                        "rewrite ! Zle_bool_true by omega.",
                        "VernacExtend",
                        "744b8a359d97bbde2bafac9f1cb817a7e6dfc574"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Bcompare_Bconv_widen",
            "line_nb": 1776,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (is_finite _ _ x && is_finite _ _ y) eqn:FIN.",
                        "VernacExtend",
                        "1fd8234178753fcc8d6a694405c7532c17f33858"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply andb_true_iff in FIN.",
                        "VernacExtend",
                        "f9447fe32a9297001f07fcc32d52e40f7cb63f84"
                    ]
                },
                {
                    "command": [
                        "destruct FIN.",
                        "VernacExtend",
                        "739dcd7c34c6cb903b9ee09e04914eabdfa4f866"
                    ]
                },
                {
                    "command": [
                        "destruct (Bconv_widen_exact H H0 conv_nan m x H1) as (A & B & C).",
                        "VernacExtend",
                        "7e9b4d74bef6f42dcafedf2e7d599337682ab4b1"
                    ]
                },
                {
                    "command": [
                        "destruct (Bconv_widen_exact H H0 conv_nan m y H2) as (D & E & F).",
                        "VernacExtend",
                        "4ee7bce85dad7fec2eb048f10bdfd8272d146d9f"
                    ]
                },
                {
                    "command": [
                        "rewrite ! Bcompare_correct by auto.",
                        "VernacExtend",
                        "1d17922d64890c80b661fd00c2e782c5d02386f1"
                    ]
                },
                {
                    "command": [
                        "rewrite A, D.",
                        "VernacExtend",
                        "106c0ceb005bf157e18997508c889c163cbc4c36"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "generalize (Bconv_widen_exact H H0 conv_nan m x) (Bconv_widen_exact H H0 conv_nan m y); intros P Q.",
                        "VernacExtend",
                        "719644c150f27318ca3512a0f94409ffc254173c"
                    ]
                },
                {
                    "command": [
                        "destruct x, y; try discriminate; simpl in P, Q; simpl; repeat (match goal with |- context [conv_nan ?b ?pl] => destruct (conv_nan b pl) end); auto.",
                        "VernacExtend",
                        "0f2523a777dabec489de58998f23a784b7b2d87e"
                    ]
                },
                {
                    "command": [
                        "destruct Q as (D & E & F); auto.",
                        "VernacExtend",
                        "be8f225a6b3fef642086c42126577392ad252cb3"
                    ]
                },
                {
                    "command": [
                        "destruct (binary_normalize prec2 emax2 prec2_gt_0_ Hmax2 m (cond_Zopp b0 (Z.pos m0)) e b0); discriminate || reflexivity.",
                        "VernacExtend",
                        "2bba0c57b5e4e0e69429671cf19bf7c238782176"
                    ]
                },
                {
                    "command": [
                        "destruct P as (A & B & C); auto.",
                        "VernacExtend",
                        "3015bb1930abdf73592fb32c9b90088ab70da928"
                    ]
                },
                {
                    "command": [
                        "destruct (binary_normalize prec2 emax2 prec2_gt_0_ Hmax2 m (cond_Zopp b (Z.pos m0)) e b); try discriminate; simpl.",
                        "VernacExtend",
                        "566c9f4e28bf0595f9c221d952fa9781b9ece388"
                    ]
                },
                {
                    "command": [
                        "destruct b; auto.",
                        "VernacExtend",
                        "95533d5a0da46eaf4c778d77a0f89adc7cad4aff"
                    ]
                },
                {
                    "command": [
                        "destruct b, b1; auto.",
                        "VernacExtend",
                        "577839e5c452a155a825252f69a4b8c957cc334c"
                    ]
                },
                {
                    "command": [
                        "destruct P as (A & B & C); auto.",
                        "VernacExtend",
                        "3015bb1930abdf73592fb32c9b90088ab70da928"
                    ]
                },
                {
                    "command": [
                        "destruct (binary_normalize prec2 emax2 prec2_gt_0_ Hmax2 m (cond_Zopp b (Z.pos m0)) e b); try discriminate; simpl.",
                        "VernacExtend",
                        "566c9f4e28bf0595f9c221d952fa9781b9ece388"
                    ]
                },
                {
                    "command": [
                        "destruct b; auto.",
                        "VernacExtend",
                        "95533d5a0da46eaf4c778d77a0f89adc7cad4aff"
                    ]
                },
                {
                    "command": [
                        "destruct b, b2; auto.",
                        "VernacExtend",
                        "b8a7f2a91a687fcec49a57028156fbd833f2df68"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Bconv_narrow_widen",
            "line_nb": 1813,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (is_finite _ _ f) eqn:FIN.",
                        "VernacExtend",
                        "ab7f83294c0f0dae6a7db6f19fbd94a0e603a212"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assert (EQ: round radix2 fexp1 (round_mode m) (B2R prec1 emax1 f) = B2R prec1 emax1 f).",
                        "VernacExtend",
                        "8c054c311e81eace3ab44a6bee9c1a9f5a66d3d8"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply round_generic.",
                        "VernacExtend",
                        "329c42b8a825480836d8d91cbeb7ff485a68ba31"
                    ]
                },
                {
                    "command": [
                        "apply valid_rnd_round_mode.",
                        "VernacExtend",
                        "20b08e148269eae05657e863e427e37c03e032b6"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_B2R.",
                        "VernacExtend",
                        "17746e2c3cda8dfb94931be74eb7b5e284b2058f"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "generalize (Bconv_widen_exact _ _ _ _ _ _ Hmax2 H H0 widen_nan m f FIN).",
                        "VernacExtend",
                        "f5912655f2c095a471772da8583596201c623240"
                    ]
                },
                {
                    "command": [
                        "set (f' := Bconv prec1 emax1 prec2 emax2 _ Hmax2 widen_nan m f).",
                        "VernacExtend",
                        "4724c2634090ad5992627852beeaafb6241fc5e8"
                    ]
                },
                {
                    "command": [
                        "intros (A & B & C).",
                        "VernacExtend",
                        "600bc83b778b82e4f76af4dba65aea6d61e17221"
                    ]
                },
                {
                    "command": [
                        "generalize (Bconv_correct _ _ _ _ _ Hmax1 narrow_nan m f' B).",
                        "VernacExtend",
                        "286b0c10c7eb15d4e328281b7970bfecbde35292"
                    ]
                },
                {
                    "command": [
                        "fold emin1.",
                        "VernacExtend",
                        "f29ca53a5ca5b3bf8fd700b90551175561f8d4bd"
                    ]
                },
                {
                    "command": [
                        "fold fexp1.",
                        "VernacExtend",
                        "2c95e755f05db77ef3dfc61d960513156150d783"
                    ]
                },
                {
                    "command": [
                        "rewrite A, C, EQ.",
                        "VernacExtend",
                        "2b82e9ca61001be3cf5781c08eee17125b4d2649"
                    ]
                },
                {
                    "command": [
                        "rewrite Rlt_bool_true.",
                        "VernacExtend",
                        "31cd82492c96b4dc35f8c36f967bc8802a2bc6ba"
                    ]
                },
                {
                    "command": [
                        "intros (D & E & F).",
                        "VernacExtend",
                        "d230d9ba37af16bdf8f2cedfe239d8f00ccf2f59"
                    ]
                },
                {
                    "command": [
                        "apply B2R_Bsign_inj; auto.",
                        "VernacExtend",
                        "f9c8ab320eaf2edac30031b5e20f8559397978a4"
                    ]
                },
                {
                    "command": [
                        "destruct f; try discriminate; simpl.",
                        "VernacExtend",
                        "a001ee4076eadb2762c273e1dcd9c5a6e655df63"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_R0.",
                        "VernacExtend",
                        "4d6634083a68d86e15f3870da962b3fc61d79ebb"
                    ]
                },
                {
                    "command": [
                        "apply bpow_gt_0.",
                        "VernacExtend",
                        "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
                    ]
                },
                {
                    "command": [
                        "rewrite F2R_cond_Zopp.",
                        "VernacExtend",
                        "5bcd4a300d182d010607782583450ad1b168bcf5"
                    ]
                },
                {
                    "command": [
                        "rewrite abs_cond_Ropp.",
                        "VernacExtend",
                        "c6fcafbdfdaab77f4ebc74c1b8dbc81e805c4b11"
                    ]
                },
                {
                    "command": [
                        "rewrite <- F2R_Zabs.",
                        "VernacExtend",
                        "301e349e7bd7d3dddc956a5691145eb2e8b49880"
                    ]
                },
                {
                    "command": [
                        "simpl Z.abs.",
                        "VernacExtend",
                        "cc63697155eda649eb28e35f6efa0e7759cf6b89"
                    ]
                },
                {
                    "command": [
                        "eapply bounded_lt_emax; eauto.",
                        "VernacExtend",
                        "40583405cb9f1a34606f559937e2cd71596e53d3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct f; try discriminate.",
                        "VernacExtend",
                        "1151ab2aae8cfde3885227a3a988e2538687c313"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}