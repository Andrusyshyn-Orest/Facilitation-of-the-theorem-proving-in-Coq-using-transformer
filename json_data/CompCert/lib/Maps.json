{
    "filename": "lib/Maps.v",
    "coq_project": "CompCert",
    "vernac_cmds": [
        [
            "Require Import Equivalence EquivDec.",
            "VernacRequire",
            "f9d5488d10da2a2474504499e87e55d562792c01"
        ],
        [
            "Require Import Coqlib.",
            "VernacRequire",
            "bbbe15041aca3a03300067f7acd445b462d537cc"
        ],
        [
            "Local Unset Elimination Schemes.",
            "VernacUnsetOption",
            "2fc2e4d2065c5e8b5b407b11414df6bebc03d0a8"
        ],
        [
            "Local Unset Case Analysis Schemes.",
            "VernacUnsetOption",
            "caf88bd166e725fa13309b094f896ccd6484855c"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Module Type TREE.",
            "VernacDeclareModuleType",
            "3428f789561dd5b1d09cf261f21cdf1a58c61ab6"
        ],
        [
            "Parameter elt: Type.",
            "VernacAssumption",
            "7e2683fd30a95e71ad26edfcb10f9d77ede63e91"
        ],
        [
            "Parameter elt_eq: forall (a b: elt), {a = b} + {a <> b}.",
            "VernacAssumption",
            "1b0e79c966101df2e1927fafd38fd39618d45a26"
        ],
        [
            "Parameter t: Type -> Type.",
            "VernacAssumption",
            "1d846409099b63634901392e9a4a7085143e1525"
        ],
        [
            "Parameter empty: forall (A: Type), t A.",
            "VernacAssumption",
            "088a03ae0c7f2b88b70f5ce7a9d817f93fd0ba3e"
        ],
        [
            "Parameter get: forall (A: Type), elt -> t A -> option A.",
            "VernacAssumption",
            "711a709bababc87b884f054d53272a4ff33f8244"
        ],
        [
            "Parameter set: forall (A: Type), elt -> A -> t A -> t A.",
            "VernacAssumption",
            "46024eeb5d599941ad2dd7a5d316446b2381045a"
        ],
        [
            "Parameter remove: forall (A: Type), elt -> t A -> t A.",
            "VernacAssumption",
            "a74ef6465b73f7162d3cb0f2121672b7c54f8f58"
        ],
        [
            "Axiom gempty: forall (A: Type) (i: elt), get i (empty A) = None.",
            "VernacAssumption",
            "2a528e0806b0a541e50447ae3cc16e46ea98aaf6"
        ],
        [
            "Axiom gss: forall (A: Type) (i: elt) (x: A) (m: t A), get i (set i x m) = Some x.",
            "VernacAssumption",
            "8de0bc342ba3bf478b556630a4184b03136a217e"
        ],
        [
            "Axiom gso: forall (A: Type) (i j: elt) (x: A) (m: t A), i <> j -> get i (set j x m) = get i m.",
            "VernacAssumption",
            "5334f3e389b2fd472fc92cc70b34dd03659bf163"
        ],
        [
            "Axiom gsspec: forall (A: Type) (i j: elt) (x: A) (m: t A), get i (set j x m) = if elt_eq i j then Some x else get i m.",
            "VernacAssumption",
            "53c71343c2f539aa30f7251cd43038ca616c0b91"
        ],
        [
            "Axiom grs: forall (A: Type) (i: elt) (m: t A), get i (remove i m) = None.",
            "VernacAssumption",
            "356d7040c2c163eb281e59c3a0e3af45fa84f1cb"
        ],
        [
            "Axiom gro: forall (A: Type) (i j: elt) (m: t A), i <> j -> get i (remove j m) = get i m.",
            "VernacAssumption",
            "b073f349292edbc6cbe6ac4a49ad694b96d24db5"
        ],
        [
            "Axiom grspec: forall (A: Type) (i j: elt) (m: t A), get i (remove j m) = if elt_eq i j then None else get i m.",
            "VernacAssumption",
            "73be449921df4afb5888aa599f20a707c414d0a3"
        ],
        [
            "Parameter beq: forall (A: Type), (A -> A -> bool) -> t A -> t A -> bool.",
            "VernacAssumption",
            "d4fd045d4725ff47ce0d2b351af3997060b7ddba"
        ],
        [
            "Axiom beq_correct: forall (A: Type) (eqA: A -> A -> bool) (t1 t2: t A), beq eqA t1 t2 = true <-> (forall (x: elt), match get x t1, get x t2 with | None, None => True | Some y1, Some y2 => eqA y1 y2 = true | _, _ => False end).",
            "VernacAssumption",
            "b77470e06d0280174f171ee26e252a7a4d1bfdbf"
        ],
        [
            "Parameter map: forall (A B: Type), (elt -> A -> B) -> t A -> t B.",
            "VernacAssumption",
            "e7ec00f55b0ca257ab3f07f683f9241be3cd5d72"
        ],
        [
            "Axiom gmap: forall (A B: Type) (f: elt -> A -> B) (i: elt) (m: t A), get i (map f m) = option_map (f i) (get i m).",
            "VernacAssumption",
            "a06af905bc1bfccbc634f0160ab27ef662fe046c"
        ],
        [
            "Parameter map1: forall (A B: Type), (A -> B) -> t A -> t B.",
            "VernacAssumption",
            "beb3f41c063c506dea8f52168bfa665fcd2bbdcb"
        ],
        [
            "Axiom gmap1: forall (A B: Type) (f: A -> B) (i: elt) (m: t A), get i (map1 f m) = option_map f (get i m).",
            "VernacAssumption",
            "dadf7468ff163ac9b555a0c5e42e6820801764c1"
        ],
        [
            "Parameter combine: forall (A B C: Type), (option A -> option B -> option C) -> t A -> t B -> t C.",
            "VernacAssumption",
            "9b6029e862cbf7d17475f7ee8da01762cf3c23c3"
        ],
        [
            "Axiom gcombine: forall (A B C: Type) (f: option A -> option B -> option C), f None None = None -> forall (m1: t A) (m2: t B) (i: elt), get i (combine f m1 m2) = f (get i m1) (get i m2).",
            "VernacAssumption",
            "687cdef81891fe1328789d58d01843fd7a847e67"
        ],
        [
            "Parameter elements: forall (A: Type), t A -> list (elt * A).",
            "VernacAssumption",
            "f79dd578fc3b8235b8aa0d4deaaaffeb5e3b0b08"
        ],
        [
            "Axiom elements_correct: forall (A: Type) (m: t A) (i: elt) (v: A), get i m = Some v -> In (i, v) (elements m).",
            "VernacAssumption",
            "1d0fab13c7a7a79149ab4a2ebb7f30c7a5522df0"
        ],
        [
            "Axiom elements_complete: forall (A: Type) (m: t A) (i: elt) (v: A), In (i, v) (elements m) -> get i m = Some v.",
            "VernacAssumption",
            "6c8e9e39d0362f0e840b721ca9a890904b2e7d8b"
        ],
        [
            "Axiom elements_keys_norepet: forall (A: Type) (m: t A), list_norepet (List.map (@fst elt A) (elements m)).",
            "VernacAssumption",
            "6a97cb0946a3a3b80e5dbd1f34f3d2dd87e3d0ec"
        ],
        [
            "Axiom elements_extensional: forall (A: Type) (m n: t A), (forall i, get i m = get i n) -> elements m = elements n.",
            "VernacAssumption",
            "766613d0c02a814ca62f59e2db190f43e973048f"
        ],
        [
            "Axiom elements_remove: forall (A: Type) i v (m: t A), get i m = Some v -> exists l1 l2, elements m = l1 ++ (i,v) :: l2 /\\ elements (remove i m) = l1 ++ l2.",
            "VernacAssumption",
            "8b66e370d4af294b6b3b24512f441c0791536f0e"
        ],
        [
            "Parameter fold: forall (A B: Type), (B -> elt -> A -> B) -> t A -> B -> B.",
            "VernacAssumption",
            "6de24f49dfa77ba991186be753aafe12e51ed78c"
        ],
        [
            "Axiom fold_spec: forall (A B: Type) (f: B -> elt -> A -> B) (v: B) (m: t A), fold f m v = List.fold_left (fun a p => f a (fst p) (snd p)) (elements m) v.",
            "VernacAssumption",
            "a8b4b8915246eb432c5c36cbda44c87538a30a28"
        ],
        [
            "Parameter fold1: forall (A B: Type), (B -> A -> B) -> t A -> B -> B.",
            "VernacAssumption",
            "b670935d548c313f44dcfa2fa4b87bfcbb0f1b6c"
        ],
        [
            "Axiom fold1_spec: forall (A B: Type) (f: B -> A -> B) (v: B) (m: t A), fold1 f m v = List.fold_left (fun a p => f a (snd p)) (elements m) v.",
            "VernacAssumption",
            "cd1fee908cbde52778574142c8b92737879c0fbd"
        ],
        [
            "End TREE.",
            "VernacEndSegment",
            "e6b0e02a21486f4bc5272f8db5019a4ab3eb41d5"
        ],
        [
            "Module Type MAP.",
            "VernacDeclareModuleType",
            "db75eb9a7deb79a77b782bb6d2ff0b7e8fd13560"
        ],
        [
            "Parameter elt: Type.",
            "VernacAssumption",
            "7e2683fd30a95e71ad26edfcb10f9d77ede63e91"
        ],
        [
            "Parameter elt_eq: forall (a b: elt), {a = b} + {a <> b}.",
            "VernacAssumption",
            "1b0e79c966101df2e1927fafd38fd39618d45a26"
        ],
        [
            "Parameter t: Type -> Type.",
            "VernacAssumption",
            "1d846409099b63634901392e9a4a7085143e1525"
        ],
        [
            "Parameter init: forall (A: Type), A -> t A.",
            "VernacAssumption",
            "d18e044b6b16e3f7a54179bde07f5acc6c2ad916"
        ],
        [
            "Parameter get: forall (A: Type), elt -> t A -> A.",
            "VernacAssumption",
            "859798c28538c152c54f11a893a0a45a8d4421b3"
        ],
        [
            "Parameter set: forall (A: Type), elt -> A -> t A -> t A.",
            "VernacAssumption",
            "46024eeb5d599941ad2dd7a5d316446b2381045a"
        ],
        [
            "Axiom gi: forall (A: Type) (i: elt) (x: A), get i (init x) = x.",
            "VernacAssumption",
            "7f6275ea14b510e84a9385cda796e9bdfcc1653c"
        ],
        [
            "Axiom gss: forall (A: Type) (i: elt) (x: A) (m: t A), get i (set i x m) = x.",
            "VernacAssumption",
            "bd62a2ea13c771a34513709a650207f62a23d9e3"
        ],
        [
            "Axiom gso: forall (A: Type) (i j: elt) (x: A) (m: t A), i <> j -> get i (set j x m) = get i m.",
            "VernacAssumption",
            "5334f3e389b2fd472fc92cc70b34dd03659bf163"
        ],
        [
            "Axiom gsspec: forall (A: Type) (i j: elt) (x: A) (m: t A), get i (set j x m) = if elt_eq i j then x else get i m.",
            "VernacAssumption",
            "3bea52eb7b77aecf2c33752f826b178e5bd5097c"
        ],
        [
            "Axiom gsident: forall (A: Type) (i j: elt) (m: t A), get j (set i (get i m) m) = get j m.",
            "VernacAssumption",
            "02b6a345ecb8b0c3ff8668a84da3d080b695b53f"
        ],
        [
            "Parameter map: forall (A B: Type), (A -> B) -> t A -> t B.",
            "VernacAssumption",
            "f994fa1df36617611947a7eb0aa8220d35ac77a3"
        ],
        [
            "Axiom gmap: forall (A B: Type) (f: A -> B) (i: elt) (m: t A), get i (map f m) = f(get i m).",
            "VernacAssumption",
            "b70fffbaa72fb24063d702ea078c6ac7e73cb2f3"
        ],
        [
            "End MAP.",
            "VernacEndSegment",
            "257a28e674af65ac0c7ba0024fd87153aa30b189"
        ],
        [
            "Module PTree <: TREE.",
            "VernacDefineModule",
            "ca1def6cfd24210dbed9b21c53eb9e361a9f46e8"
        ],
        [
            "Definition elt := positive.",
            "VernacDefinition",
            "9a179450215c1ed04c68e5b6b0910d2bd476acbe"
        ],
        [
            "Definition elt_eq := peq.",
            "VernacDefinition",
            "c99e4660a005e8e81bf7408907c44302592b228a"
        ],
        [
            "Inductive tree (A : Type) : Type := | Leaf : tree A | Node : tree A -> option A -> tree A -> tree A.",
            "VernacInductive",
            "67f157d6fadd3374851e7c9aa4fb0eceb3399b1c"
        ],
        [
            "Arguments Leaf [A].",
            "VernacArguments",
            "ae63cc277e63c62a4e1c68e1f5b4c639e01a7bc0"
        ],
        [
            "Arguments Node [A].",
            "VernacArguments",
            "158ddfbf3c9e5c1f7663da21968724ada557b376"
        ],
        [
            "Scheme tree_ind := Induction for tree Sort Prop.",
            "VernacScheme",
            "d1ef39704fae617edc12788ab0b840e1f1ca4bd8"
        ],
        [
            "Definition t := tree.",
            "VernacDefinition",
            "d4f6fdb67cffecb671b497fc85e7d235bf5cc5e7"
        ],
        [
            "Definition empty (A : Type) := (Leaf : t A).",
            "VernacDefinition",
            "f09eaca481bf270f357634a47d354089434bdb31"
        ],
        [
            "Fixpoint get (A : Type) (i : positive) (m : t A) {struct i} : option A := match m with | Leaf => None | Node l o r => match i with | xH => o | xO ii => get ii l | xI ii => get ii r end end.",
            "VernacFixpoint",
            "f2f18f3e76ddda9950774f2170aff5086118fdcb"
        ],
        [
            "Fixpoint set (A : Type) (i : positive) (v : A) (m : t A) {struct i} : t A := match m with | Leaf => match i with | xH => Node Leaf (Some v) Leaf | xO ii => Node (set ii v Leaf) None Leaf | xI ii => Node Leaf None (set ii v Leaf) end | Node l o r => match i with | xH => Node l (Some v) r | xO ii => Node (set ii v l) o r | xI ii => Node l o (set ii v r) end end.",
            "VernacFixpoint",
            "e12413ab48a91b8ee2b36cea1547a1eae336af83"
        ],
        [
            "Fixpoint remove (A : Type) (i : positive) (m : t A) {struct i} : t A := match i with | xH => match m with | Leaf => Leaf | Node Leaf o Leaf => Leaf | Node l o r => Node l None r end | xO ii => match m with | Leaf => Leaf | Node l None Leaf => match remove ii l with | Leaf => Leaf | mm => Node mm None Leaf end | Node l o r => Node (remove ii l) o r end | xI ii => match m with | Leaf => Leaf | Node Leaf None r => match remove ii r with | Leaf => Leaf | mm => Node Leaf None mm end | Node l o r => Node l o (remove ii r) end end.",
            "VernacFixpoint",
            "93dfadb78adea5a8e19991ed4d586cba5cb09696"
        ],
        [
            "Theorem gempty: forall (A: Type) (i: positive), get i (empty A) = None.",
            "VernacStartTheoremProof",
            "49c3d75c0d75863becf7ed9e598ab528ee44d9fa"
        ],
        [
            "induction i; simpl; auto.",
            "VernacExtend",
            "366f1f85db4267caa195570da4c177395f827ad8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem gss: forall (A: Type) (i: positive) (x: A) (m: t A), get i (set i x m) = Some x.",
            "VernacStartTheoremProof",
            "07a491501e91b3236ec60e2ceac96170d65f47e2"
        ],
        [
            "induction i; destruct m; simpl; auto.",
            "VernacExtend",
            "bbfee31955a1dd8e41105e0dbfa067ef740b0b91"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gleaf : forall (A : Type) (i : positive), get i (Leaf : t A) = None.",
            "VernacStartTheoremProof",
            "7ab6aeef67e8eb7c1613876e6cf93dd1c2651cc7"
        ],
        [
            "exact gempty.",
            "VernacExtend",
            "2982b0da893a5cbe933bf6f9fa1770cb65764c66"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem gso: forall (A: Type) (i j: positive) (x: A) (m: t A), i <> j -> get i (set j x m) = get i m.",
            "VernacStartTheoremProof",
            "c9bdb5cb426e233b00a408758f30cd3ec85cc02d"
        ],
        [
            "induction i; intros; destruct j; destruct m; simpl; try rewrite <- (gleaf A i); auto; try apply IHi; congruence.",
            "VernacExtend",
            "362b7cd05b8aece5c3ec0220b47b0d104605a273"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem gsspec: forall (A: Type) (i j: positive) (x: A) (m: t A), get i (set j x m) = if peq i j then Some x else get i m.",
            "VernacStartTheoremProof",
            "d11445210f4d071e4baee748e6bc4858303fb603"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (peq i j); [ rewrite e; apply gss | apply gso; auto ].",
            "VernacExtend",
            "53c7afe6e17a70ea8f2f1ee8f1f67329b589bebb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem gsident: forall (A: Type) (i: positive) (m: t A) (v: A), get i m = Some v -> set i v m = m.",
            "VernacStartTheoremProof",
            "8d7de200c262042fc0f8b7da5c9a37a57e7fe223"
        ],
        [
            "induction i; intros; destruct m; simpl; simpl in H; try congruence.",
            "VernacExtend",
            "40b69593932bdd0e2421cc311cab60765333f9f2"
        ],
        [
            "rewrite (IHi m2 v H); congruence.",
            "VernacExtend",
            "1b116983dd6f14385de0b86e5d5a3ad0827058d6"
        ],
        [
            "rewrite (IHi m1 v H); congruence.",
            "VernacExtend",
            "9d2451bb1bed4f2b5e2b9525deb42850198f219b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem set2: forall (A: Type) (i: elt) (m: t A) (v1 v2: A), set i v2 (set i v1 m) = set i v2 m.",
            "VernacStartTheoremProof",
            "effdf24bf6dcaf4e710fb45d853b4d80d88c40c6"
        ],
        [
            "induction i; intros; destruct m; simpl; try (rewrite IHi); auto.",
            "VernacExtend",
            "b976e52fc95169356c0aec85f9d0a54f71e41efb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rleaf : forall (A : Type) (i : positive), remove i (Leaf : t A) = Leaf.",
            "VernacStartTheoremProof",
            "701ce3e813f161d2e07bc82771d5fcb0034ba636"
        ],
        [
            "destruct i; simpl; auto.",
            "VernacExtend",
            "68f1ada8e7ae3853d0bcf6c9ce8dfcaf8bef3fc3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem grs: forall (A: Type) (i: positive) (m: t A), get i (remove i m) = None.",
            "VernacStartTheoremProof",
            "11db044f1154756b728c0ef3907833e78ce53978"
        ],
        [
            "induction i; destruct m.",
            "VernacExtend",
            "ac3734855481e2e369ecf1e1081a56e78ee6d72d"
        ],
        [
            "simpl; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "destruct m1; destruct o; destruct m2 as [ | ll oo rr]; simpl; auto.",
            "VernacExtend",
            "4651cb97cc8dc0443d985c4334c2aef81d563fec"
        ],
        [
            "rewrite (rleaf A i); auto.",
            "VernacExtend",
            "61e0ff20a47cb07201b925381445d00020f7edd6"
        ],
        [
            "cut (get i (remove i (Node ll oo rr)) = None).",
            "VernacExtend",
            "d17b80b0f869df7b12c04868e45ebf6fab5d7e2e"
        ],
        [
            "destruct (remove i (Node ll oo rr)); auto; apply IHi.",
            "VernacExtend",
            "1647fad62ac2fd365a4a1caf2321195920e1ca07"
        ],
        [
            "apply IHi.",
            "VernacExtend",
            "6d0640aefb702ff5a66a35d1980233055f0d9211"
        ],
        [
            "simpl; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "destruct m1 as [ | ll oo rr]; destruct o; destruct m2; simpl; auto.",
            "VernacExtend",
            "834eb3d11cfec5971d41e0804ff5f602a90e4691"
        ],
        [
            "rewrite (rleaf A i); auto.",
            "VernacExtend",
            "61e0ff20a47cb07201b925381445d00020f7edd6"
        ],
        [
            "cut (get i (remove i (Node ll oo rr)) = None).",
            "VernacExtend",
            "d17b80b0f869df7b12c04868e45ebf6fab5d7e2e"
        ],
        [
            "destruct (remove i (Node ll oo rr)); auto; apply IHi.",
            "VernacExtend",
            "1647fad62ac2fd365a4a1caf2321195920e1ca07"
        ],
        [
            "apply IHi.",
            "VernacExtend",
            "6d0640aefb702ff5a66a35d1980233055f0d9211"
        ],
        [
            "simpl; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "destruct m1; destruct m2; simpl; auto.",
            "VernacExtend",
            "b89f662cde710a4651097c8ede9b2abeee20239e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem gro: forall (A: Type) (i j: positive) (m: t A), i <> j -> get i (remove j m) = get i m.",
            "VernacStartTheoremProof",
            "8f454f018dde369ce74d02646ee9b34394b9c429"
        ],
        [
            "induction i; intros; destruct j; destruct m; try rewrite (rleaf A (xI j)); try rewrite (rleaf A (xO j)); try rewrite (rleaf A 1); auto; destruct m1; destruct o; destruct m2; simpl; try apply IHi; try congruence; try rewrite (rleaf A j); auto; try rewrite (gleaf A i); auto.",
            "VernacExtend",
            "89d2d4f99134e89eee81a9adde3e18655c3dd1dc"
        ],
        [
            "cut (get i (remove j (Node m2_1 o m2_2)) = get i (Node m2_1 o m2_2)); [ destruct (remove j (Node m2_1 o m2_2)); try rewrite (gleaf A i); auto | apply IHi; congruence ].",
            "VernacExtend",
            "54d5cb00c98238cb5af28381f5b4f5e59ced163e"
        ],
        [
            "destruct (remove j (Node m1_1 o0 m1_2)); simpl; try rewrite (gleaf A i); auto.",
            "VernacExtend",
            "04ec648973d24c869a6bce59d55a04018c4e65f4"
        ],
        [
            "destruct (remove j (Node m2_1 o m2_2)); simpl; try rewrite (gleaf A i); auto.",
            "VernacExtend",
            "21df0cd369a5834bff49ef34e349e7f74ac2de0a"
        ],
        [
            "cut (get i (remove j (Node m1_1 o0 m1_2)) = get i (Node m1_1 o0 m1_2)); [ destruct (remove j (Node m1_1 o0 m1_2)); try rewrite (gleaf A i); auto | apply IHi; congruence ].",
            "VernacExtend",
            "cbf1825b44d43cb1f9662d5e474501b75d97dcbe"
        ],
        [
            "destruct (remove j (Node m2_1 o m2_2)); simpl; try rewrite (gleaf A i); auto.",
            "VernacExtend",
            "21df0cd369a5834bff49ef34e349e7f74ac2de0a"
        ],
        [
            "destruct (remove j (Node m1_1 o0 m1_2)); simpl; try rewrite (gleaf A i); auto.",
            "VernacExtend",
            "04ec648973d24c869a6bce59d55a04018c4e65f4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem grspec: forall (A: Type) (i j: elt) (m: t A), get i (remove j m) = if elt_eq i j then None else get i m.",
            "VernacStartTheoremProof",
            "b6e386cb97b81f9966ec74051ae3b72550264beb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (elt_eq i j).",
            "VernacExtend",
            "3eac535c041cf182fd8a403809d6d05dfc2251d6"
        ],
        [
            "subst j.",
            "VernacExtend",
            "4959fd5cfffa27452c2d688b999587736fe34624"
        ],
        [
            "apply grs.",
            "VernacExtend",
            "0b6c0b5bd4c5756219ed19dbd77f2b0bac8543da"
        ],
        [
            "apply gro; auto.",
            "VernacExtend",
            "3110d5e20083580b3a60a271785ca0b7c3b2b59f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section BOOLEAN_EQUALITY.",
            "VernacBeginSection",
            "4e208269fa90d164ea3fc345cd644e61a0671fbb"
        ],
        [
            "Variable A: Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Variable beqA: A -> A -> bool.",
            "VernacAssumption",
            "65a846f2df9ce53c9815ea88a0fe13c961d11903"
        ],
        [
            "Fixpoint bempty (m: t A) : bool := match m with | Leaf => true | Node l None r => bempty l && bempty r | Node l (Some _) r => false end.",
            "VernacFixpoint",
            "f9d1bdf11d583cd1e3ebddb80a35ef6df98df94f"
        ],
        [
            "Fixpoint beq (m1 m2: t A) {struct m1} : bool := match m1, m2 with | Leaf, _ => bempty m2 | _, Leaf => bempty m1 | Node l1 o1 r1, Node l2 o2 r2 => match o1, o2 with | None, None => true | Some y1, Some y2 => beqA y1 y2 | _, _ => false end && beq l1 l2 && beq r1 r2 end.",
            "VernacFixpoint",
            "c18674716576f2e49e1f358f79ce8d8116bbe700"
        ],
        [
            "Lemma bempty_correct: forall m, bempty m = true <-> (forall x, get x m = None).",
            "VernacStartTheoremProof",
            "13d1189037eba97a90d4742f4a356947bda63a09"
        ],
        [
            "induction m; simpl.",
            "VernacExtend",
            "8eeca9e02ca7b585e952baf1eea0278de04f5480"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "apply gleaf.",
            "VernacExtend",
            "20dbe8e22842f11163223cbdd653cbbef85e51c3"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct o; split; intros.",
            "VernacExtend",
            "321a71f40d666ec69a4ff83e3aa6b36794c2f8a1"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "generalize (H xH); simpl; congruence.",
            "VernacExtend",
            "9765827b96906c12c2aee417b39f540e16f5faa7"
        ],
        [
            "destruct (andb_prop _ _ H).",
            "VernacExtend",
            "ae63e31404e6cab2c204a5b7e41f9ee5f3df240a"
        ],
        [
            "rewrite IHm1 in H0.",
            "VernacExtend",
            "bdc57f41c7e19deafebaf43d0bc014883a54bb22"
        ],
        [
            "rewrite IHm2 in H1.",
            "VernacExtend",
            "da40ce0aeb1ed3047c2cdbb396bd20af1ef926d5"
        ],
        [
            "destruct x; simpl; auto.",
            "VernacExtend",
            "6333e7c7dbfdf0572110d1909ab0948c7e960947"
        ],
        [
            "apply andb_true_intro; split.",
            "VernacExtend",
            "5f6db070ea238a8793b50319e6f4900c2a6b5332"
        ],
        [
            "apply IHm1.",
            "VernacExtend",
            "bdc0cfe8c8aaad61d155f8c31e1f49ee7a8145ee"
        ],
        [
            "intros; apply (H (xO x)).",
            "VernacExtend",
            "6db29055492bec5c173f4c4114389d6a6cf35656"
        ],
        [
            "apply IHm2.",
            "VernacExtend",
            "c46c2ebfe13825de42a4b83c6b894febeba208a7"
        ],
        [
            "intros; apply (H (xI x)).",
            "VernacExtend",
            "b728bd193f5076b5b1bec6f5dbe7d61f276c1a80"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma beq_correct: forall m1 m2, beq m1 m2 = true <-> (forall (x: elt), match get x m1, get x m2 with | None, None => True | Some y1, Some y2 => beqA y1 y2 = true | _, _ => False end).",
            "VernacStartTheoremProof",
            "a5c2035bf778e8b2e3351e7773fed80ba7a5ac3e"
        ],
        [
            "induction m1; intros.",
            "VernacExtend",
            "3bf3e65a34038ed68f7c4172476fb7aecfb1edb7"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite bempty_correct.",
            "VernacExtend",
            "0d899f157b0255188caacebb5ef74a78ff78937b"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "rewrite gleaf.",
            "VernacExtend",
            "9784dbc2748a1c6d53a8c7c8c77c7e1278b2870a"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "generalize (H x).",
            "VernacExtend",
            "843b06d01bb5b75d1b3332a7cda55cfef30c3395"
        ],
        [
            "rewrite gleaf.",
            "VernacExtend",
            "9784dbc2748a1c6d53a8c7c8c77c7e1278b2870a"
        ],
        [
            "destruct (get x m2); tauto.",
            "VernacExtend",
            "7e0237615916263e275ffceca01fa052d935c520"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct m2.",
            "VernacExtend",
            "f86fe3f568de72006bd26815ccc3ccd235156bb1"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold beq.",
            "VernacExtend",
            "a3ae872afe803b474911f2a0f54e54a56394111e"
        ],
        [
            "rewrite bempty_correct.",
            "VernacExtend",
            "0d899f157b0255188caacebb5ef74a78ff78937b"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "rewrite gleaf.",
            "VernacExtend",
            "9784dbc2748a1c6d53a8c7c8c77c7e1278b2870a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "generalize (H x).",
            "VernacExtend",
            "843b06d01bb5b75d1b3332a7cda55cfef30c3395"
        ],
        [
            "rewrite gleaf.",
            "VernacExtend",
            "9784dbc2748a1c6d53a8c7c8c77c7e1278b2870a"
        ],
        [
            "destruct (get x (Node m1_1 o m1_2)); tauto.",
            "VernacExtend",
            "e45d8654b56354c9004c1065862be6a49c49576d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct (andb_prop _ _ H).",
            "VernacExtend",
            "ae63e31404e6cab2c204a5b7e41f9ee5f3df240a"
        ],
        [
            "destruct (andb_prop _ _ H0).",
            "VernacExtend",
            "d3b9d36e26dde7f08b091c0685b37e6991ff940d"
        ],
        [
            "rewrite IHm1_1 in H3.",
            "VernacExtend",
            "286c9815a63506160da6db172c3b57d0222e1adf"
        ],
        [
            "rewrite IHm1_2 in H1.",
            "VernacExtend",
            "faa599e43d9b82c9191a3d627f9106527e95fcf9"
        ],
        [
            "destruct x; simpl.",
            "VernacExtend",
            "b0c3c03e2d0a8fa13c533c8a79c2c6b3067d60db"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "destruct o; destruct o0; auto || congruence.",
            "VernacExtend",
            "9faf271a8d1811248a21f61f5048fd9906f09308"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply andb_true_intro.",
            "VernacExtend",
            "568074f8ecdece0f16c49f5bea6e2c18016f95d3"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply andb_true_intro.",
            "VernacExtend",
            "568074f8ecdece0f16c49f5bea6e2c18016f95d3"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "generalize (H xH); simpl.",
            "VernacExtend",
            "6adac628a893005b7351549cbbf03c7a0c77fef6"
        ],
        [
            "destruct o; destruct o0; tauto.",
            "VernacExtend",
            "af01c4197d074272c14bbfe6c651412a59bb95bd"
        ],
        [
            "apply IHm1_1.",
            "VernacExtend",
            "fd242b2a68dab9162745afd8053506344b4b7b37"
        ],
        [
            "intros; apply (H (xO x)).",
            "VernacExtend",
            "6db29055492bec5c173f4c4114389d6a6cf35656"
        ],
        [
            "apply IHm1_2.",
            "VernacExtend",
            "df55ac744967f77db83283bab2416abad1eb0500"
        ],
        [
            "intros; apply (H (xI x)).",
            "VernacExtend",
            "b728bd193f5076b5b1bec6f5dbe7d61f276c1a80"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End BOOLEAN_EQUALITY.",
            "VernacEndSegment",
            "d54df8dcdf0127fe7128c634d5d6d028c35be04b"
        ],
        [
            "Fixpoint prev_append (i j: positive) {struct i} : positive := match i with | xH => j | xI i' => prev_append i' (xI j) | xO i' => prev_append i' (xO j) end.",
            "VernacFixpoint",
            "2de0d55c0c3870a410750a457ae778d59bc95177"
        ],
        [
            "Definition prev (i: positive) : positive := prev_append i xH.",
            "VernacDefinition",
            "9cb4d838e085176d04175b181e68f334f079d245"
        ],
        [
            "Lemma prev_append_prev i j: prev (prev_append i j) = prev_append j i.",
            "VernacStartTheoremProof",
            "d7135f7e7c7acbe804238a9aaaafc22e918bc24f"
        ],
        [
            "revert j.",
            "VernacExtend",
            "e4200ba0fa67e54f2de0949d1bc195aa87418206"
        ],
        [
            "unfold prev.",
            "VernacExtend",
            "4590934eaa6ce1997f2f5ebaf4c9efcf37ec2918"
        ],
        [
            "induction i as [i IH|i IH|].",
            "VernacExtend",
            "c68b46a8ae2a7ff2a67f3bf0ddc8bc01a84618b6"
        ],
        [
            "3: reflexivity.",
            "VernacExtend",
            "3ea83be95442a071340229bbd57ed442cdcfef70"
        ],
        [
            "intros j.",
            "VernacExtend",
            "e0beb174e0dfa01671485f5d481c71f3f1896fce"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite IH.",
            "VernacExtend",
            "dbf4f765dab656705bc8df8600fa3b3017a20858"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros j.",
            "VernacExtend",
            "e0beb174e0dfa01671485f5d481c71f3f1896fce"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite IH.",
            "VernacExtend",
            "dbf4f765dab656705bc8df8600fa3b3017a20858"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prev_involutive i : prev (prev i) = i.",
            "VernacStartTheoremProof",
            "3ff02367b6e7202e68617b0201769afc618a6921"
        ],
        [
            "Proof (prev_append_prev i xH).",
            "VernacExactProof",
            "cb0a09e3c5f43f9fc8beeb726e534871c971f070"
        ],
        [
            "Lemma prev_append_inj i j j' : prev_append i j = prev_append i j' -> j = j'.",
            "VernacStartTheoremProof",
            "4e5070300312be0905bdfdd8451f5a19205b6b06"
        ],
        [
            "revert j j'.",
            "VernacExtend",
            "e05859b961c8711e318e89c743c2c6ead7f66e78"
        ],
        [
            "induction i as [i Hi|i Hi|]; intros j j' H; auto; specialize (Hi _ _ H); congruence.",
            "VernacExtend",
            "01a9d333a8daa72d121588857d6091fbd1185bc8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint xmap (A B : Type) (f : positive -> A -> B) (m : t A) (i : positive) {struct m} : t B := match m with | Leaf => Leaf | Node l o r => Node (xmap f l (xO i)) (match o with None => None | Some x => Some (f (prev i) x) end) (xmap f r (xI i)) end.",
            "VernacFixpoint",
            "2f5d30da06b61a9172c30523e0b00eb7faa37275"
        ],
        [
            "Definition map (A B : Type) (f : positive -> A -> B) m := xmap f m xH.",
            "VernacDefinition",
            "bc84255322b7f4ed4124e93eb56f82836b298d1b"
        ],
        [
            "Lemma xgmap: forall (A B: Type) (f: positive -> A -> B) (i j : positive) (m: t A), get i (xmap f m j) = option_map (f (prev (prev_append i j))) (get i m).",
            "VernacStartTheoremProof",
            "9e1ec91b9e85ca09a70c90974457efcaff048341"
        ],
        [
            "induction i; intros; destruct m; simpl; auto.",
            "VernacExtend",
            "a999cfe51fecf3fbfc72dcd2ad70e3dc90423cca"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem gmap: forall (A B: Type) (f: positive -> A -> B) (i: positive) (m: t A), get i (map f m) = option_map (f i) (get i m).",
            "VernacStartTheoremProof",
            "3f5d04b51155302cb90df213f75e9c7db93e5b1f"
        ],
        [
            "intros A B f i m.",
            "VernacExtend",
            "80ec7f08a28d5ca4af105f4646a03dff87ea58c2"
        ],
        [
            "unfold map.",
            "VernacExtend",
            "d6f3bc771467f8d4970eb68d25db08fab4a0a015"
        ],
        [
            "rewrite xgmap.",
            "VernacExtend",
            "8f54448ac210049cb1279f819a968da64fbc1001"
        ],
        [
            "repeat f_equal.",
            "VernacExtend",
            "ef52a498e8dfd0e6e312a5f55aa7a117295c3b16"
        ],
        [
            "exact (prev_involutive i).",
            "VernacExtend",
            "34bd2cfe2d73e1362909cef6c687b5bfbbab0023"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint map1 (A B: Type) (f: A -> B) (m: t A) {struct m} : t B := match m with | Leaf => Leaf | Node l o r => Node (map1 f l) (option_map f o) (map1 f r) end.",
            "VernacFixpoint",
            "728c9c7d62c72d6cb910e982b337d9454e356ac9"
        ],
        [
            "Theorem gmap1: forall (A B: Type) (f: A -> B) (i: elt) (m: t A), get i (map1 f m) = option_map f (get i m).",
            "VernacStartTheoremProof",
            "e25b4fe9f1b6dcdeec147a1a457a8e17e8b35db2"
        ],
        [
            "induction i; intros; destruct m; simpl; auto.",
            "VernacExtend",
            "a999cfe51fecf3fbfc72dcd2ad70e3dc90423cca"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Node' (A: Type) (l: t A) (x: option A) (r: t A): t A := match l, x, r with | Leaf, None, Leaf => Leaf | _, _, _ => Node l x r end.",
            "VernacDefinition",
            "dc69fc8cba30a83bedece0504f53c7acb8267f1d"
        ],
        [
            "Lemma gnode': forall (A: Type) (l r: t A) (x: option A) (i: positive), get i (Node' l x r) = get i (Node l x r).",
            "VernacStartTheoremProof",
            "10898bb693783f66818aa75f21615d9dbc67a7ba"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Node'.",
            "VernacExtend",
            "1795d7ca68b08fe85e1efb13d4cfbd166fe9cbbe"
        ],
        [
            "destruct l; destruct x; destruct r; auto.",
            "VernacExtend",
            "b3a6ba10c3b0a58cb136140b7d40b3eecb1863ef"
        ],
        [
            "destruct i; simpl; auto; rewrite gleaf; auto.",
            "VernacExtend",
            "9f313e6f889b4e0efc8a27b7c895c8b93ecd8bab"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint filter1 (A: Type) (pred: A -> bool) (m: t A) {struct m} : t A := match m with | Leaf => Leaf | Node l o r => let o' := match o with None => None | Some x => if pred x then o else None end in Node' (filter1 pred l) o' (filter1 pred r) end.",
            "VernacFixpoint",
            "f1d8de769dc2c75e148b3f40a72633096bc7d482"
        ],
        [
            "Theorem gfilter1: forall (A: Type) (pred: A -> bool) (i: elt) (m: t A), get i (filter1 pred m) = match get i m with None => None | Some x => if pred x then Some x else None end.",
            "VernacStartTheoremProof",
            "1e8783c65d2c5ebe76e09be90a057d6f2ec1b844"
        ],
        [
            "intros until m.",
            "VernacExtend",
            "2300f96ca7e85976c805b4d0d06b3983c4f22278"
        ],
        [
            "revert m i.",
            "VernacExtend",
            "1916d81bfe3f13bd4fc4912bc2dd202fda2ee461"
        ],
        [
            "induction m; simpl; intros.",
            "VernacExtend",
            "738c751c4edf16c228e9dc66b9592aea22d1738c"
        ],
        [
            "rewrite gleaf; auto.",
            "VernacExtend",
            "8a356ae9d9f7cf07e1151fa209a9c2bd3642f0ab"
        ],
        [
            "rewrite gnode'.",
            "VernacExtend",
            "5a3b05a0918e5491c4ade99ee7ff9744b502ef09"
        ],
        [
            "destruct i; simpl; auto.",
            "VernacExtend",
            "68f1ada8e7ae3853d0bcf6c9ce8dfcaf8bef3fc3"
        ],
        [
            "destruct o; auto.",
            "VernacExtend",
            "55c229e4810cab7dd26065c611ca2e0257d813c3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section COMBINE.",
            "VernacBeginSection",
            "39f27b4d83fd34adc15e46f99339eab5620a6b59"
        ],
        [
            "Variables A B C: Type.",
            "VernacAssumption",
            "b984fd511dd9c74615ca3bfe47bac591ca7927d3"
        ],
        [
            "Variable f: option A -> option B -> option C.",
            "VernacAssumption",
            "d84255d1cd4501cab5bc5fda5cbb48f4f46f0cdd"
        ],
        [
            "Hypothesis f_none_none: f None None = None.",
            "VernacAssumption",
            "524528d2f8d4a6dac2e8d72a8068059aad37bf8c"
        ],
        [
            "Fixpoint xcombine_l (m : t A) {struct m} : t C := match m with | Leaf => Leaf | Node l o r => Node' (xcombine_l l) (f o None) (xcombine_l r) end.",
            "VernacFixpoint",
            "47c325bd5b5b784637ec91756d53b5a8f1142ab4"
        ],
        [
            "Lemma xgcombine_l : forall (m: t A) (i : positive), get i (xcombine_l m) = f (get i m) None.",
            "VernacStartTheoremProof",
            "5c2f6b42cdd6bd4ac620010d2458d90c7a637a64"
        ],
        [
            "induction m; intros; simpl.",
            "VernacExtend",
            "c48a5aee8f6edbabc34ccf3b4db1325f9c3d1dad"
        ],
        [
            "repeat rewrite gleaf.",
            "VernacExtend",
            "3f7e08edbd7112926d3efc7d30fe1fd2b2149db0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite gnode'.",
            "VernacExtend",
            "5a3b05a0918e5491c4ade99ee7ff9744b502ef09"
        ],
        [
            "destruct i; simpl; auto.",
            "VernacExtend",
            "68f1ada8e7ae3853d0bcf6c9ce8dfcaf8bef3fc3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint xcombine_r (m : t B) {struct m} : t C := match m with | Leaf => Leaf | Node l o r => Node' (xcombine_r l) (f None o) (xcombine_r r) end.",
            "VernacFixpoint",
            "3b8c8bc3265002c20acf3beb4179d16ba1a74b8d"
        ],
        [
            "Lemma xgcombine_r : forall (m: t B) (i : positive), get i (xcombine_r m) = f None (get i m).",
            "VernacStartTheoremProof",
            "2703c47aa9a893ce306cb80a91dbdfc6bd501d20"
        ],
        [
            "induction m; intros; simpl.",
            "VernacExtend",
            "c48a5aee8f6edbabc34ccf3b4db1325f9c3d1dad"
        ],
        [
            "repeat rewrite gleaf.",
            "VernacExtend",
            "3f7e08edbd7112926d3efc7d30fe1fd2b2149db0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite gnode'.",
            "VernacExtend",
            "5a3b05a0918e5491c4ade99ee7ff9744b502ef09"
        ],
        [
            "destruct i; simpl; auto.",
            "VernacExtend",
            "68f1ada8e7ae3853d0bcf6c9ce8dfcaf8bef3fc3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint combine (m1: t A) (m2: t B) {struct m1} : t C := match m1 with | Leaf => xcombine_r m2 | Node l1 o1 r1 => match m2 with | Leaf => xcombine_l m1 | Node l2 o2 r2 => Node' (combine l1 l2) (f o1 o2) (combine r1 r2) end end.",
            "VernacFixpoint",
            "aae61c21e4a6a1c8e5791002a75ebda176e7721c"
        ],
        [
            "Theorem gcombine: forall (m1: t A) (m2: t B) (i: positive), get i (combine m1 m2) = f (get i m1) (get i m2).",
            "VernacStartTheoremProof",
            "9d68e3689844c0a56a0c200192876c5f7270275e"
        ],
        [
            "induction m1; intros; simpl.",
            "VernacExtend",
            "14815a859237b61b32419a80ad599e9f24ac287e"
        ],
        [
            "rewrite gleaf.",
            "VernacExtend",
            "9784dbc2748a1c6d53a8c7c8c77c7e1278b2870a"
        ],
        [
            "apply xgcombine_r.",
            "VernacExtend",
            "f29dcb0d6c1e9a82cabe86ccc91519a1dce63f7f"
        ],
        [
            "destruct m2; simpl.",
            "VernacExtend",
            "b2365bd96a1c03d622d2d30dfeb3c5bb06eeb822"
        ],
        [
            "rewrite gleaf.",
            "VernacExtend",
            "9784dbc2748a1c6d53a8c7c8c77c7e1278b2870a"
        ],
        [
            "rewrite <- xgcombine_l.",
            "VernacExtend",
            "50fee159c1da489c22a9271fca87a4a3a198aeae"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "repeat rewrite gnode'.",
            "VernacExtend",
            "39fb4e5f39176c8dff3f97f53f3e59b5de5e3ddc"
        ],
        [
            "destruct i; simpl; auto.",
            "VernacExtend",
            "68f1ada8e7ae3853d0bcf6c9ce8dfcaf8bef3fc3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End COMBINE.",
            "VernacEndSegment",
            "c4d8f37ab2bd9a9215529aa67febc8bc882d9ad3"
        ],
        [
            "Lemma xcombine_lr : forall (A B: Type) (f g : option A -> option A -> option B) (m : t A), (forall (i j : option A), f i j = g j i) -> xcombine_l f m = xcombine_r g m.",
            "VernacStartTheoremProof",
            "e727c01e1bfa4e4f98dde99c637005d3c084641a"
        ],
        [
            "induction m; intros; simpl; auto.",
            "VernacExtend",
            "9049714a3de5145a21ac2fa8df6877da187ebc24"
        ],
        [
            "rewrite IHm1; auto.",
            "VernacExtend",
            "bc7cec85ee35184829be5d8c1d0a955454f9b907"
        ],
        [
            "rewrite IHm2; auto.",
            "VernacExtend",
            "7cfd9b25dbc39a72b4a2eb5edfc9dbb40a6be224"
        ],
        [
            "rewrite H; auto.",
            "VernacExtend",
            "3e25713af8eaa76cddf9287af10d66733da2ee16"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem combine_commut: forall (A B: Type) (f g: option A -> option A -> option B), (forall (i j: option A), f i j = g j i) -> forall (m1 m2: t A), combine f m1 m2 = combine g m2 m1.",
            "VernacStartTheoremProof",
            "ad99ab687b25eb9de69ec1fb021e80a7618b8543"
        ],
        [
            "intros A B f g EQ1.",
            "VernacExtend",
            "668c22aa214846aaf9fe654bb2dfbc32d3a6a9b7"
        ],
        [
            "assert (EQ2: forall (i j: option A), g i j = f j i).",
            "VernacExtend",
            "64bb41750521033cb1dc436cf54528fcc2672c22"
        ],
        [
            "intros; auto.",
            "VernacExtend",
            "d08fa6a6cf0cffe77a1b06ed19eb1fcfb0b64546"
        ],
        [
            "induction m1; intros; destruct m2; simpl; try rewrite EQ1; repeat rewrite (xcombine_lr f g); repeat rewrite (xcombine_lr g f); auto.",
            "VernacExtend",
            "eda20ba595cf18c5c9c993cb0f7f70a39c263796"
        ],
        [
            "rewrite IHm1_1.",
            "VernacExtend",
            "601aa2a4b285f14487caaf0108196f813fbeb8f3"
        ],
        [
            "rewrite IHm1_2.",
            "VernacExtend",
            "46a9d635cd3cf685fab62094154ecc98248c2be9"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint xelements (A : Type) (m : t A) (i : positive) (k: list (positive * A)) {struct m} : list (positive * A) := match m with | Leaf => k | Node l None r => xelements l (xO i) (xelements r (xI i) k) | Node l (Some x) r => xelements l (xO i) ((prev i, x) :: xelements r (xI i) k) end.",
            "VernacFixpoint",
            "e2dfacf5fb5fbc058ef7ae79b7108ba26d1026c8"
        ],
        [
            "Definition elements (A: Type) (m : t A) := xelements m xH nil.",
            "VernacDefinition",
            "3e27c335f4baf7a78c6a26b9389dbb5731d55f2c"
        ],
        [
            "Remark xelements_append: forall A (m: t A) i k1 k2, xelements m i (k1 ++ k2) = xelements m i k1 ++ k2.",
            "VernacStartTheoremProof",
            "ba2ac040ea7d56bd0588183fa932e4bd9fe64d99"
        ],
        [
            "induction m; intros; simpl.",
            "VernacExtend",
            "c48a5aee8f6edbabc34ccf3b4db1325f9c3d1dad"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct o; rewrite IHm2; rewrite <- IHm1; auto.",
            "VernacExtend",
            "63b7aece283b982707f3392d47568c6baf3b69f6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark xelements_leaf: forall A i, xelements (@Leaf A) i nil = nil.",
            "VernacStartTheoremProof",
            "96bb47547bdefeb45143e0a842369ef84620dcba"
        ],
        [
            "intros; reflexivity.",
            "VernacExtend",
            "c20cfa06d7b692e82c145d2df3bde4c2fe4eb461"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark xelements_node: forall A (m1: t A) o (m2: t A) i, xelements (Node m1 o m2) i nil = xelements m1 (xO i) nil ++ match o with None => nil | Some v => (prev i, v) :: nil end ++ xelements m2 (xI i) nil.",
            "VernacStartTheoremProof",
            "98297b63f9569476944ea3441f92e329547d5067"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct o; simpl; rewrite <- xelements_append; auto.",
            "VernacExtend",
            "b677b693b6644e04afc291b9003f9971f5d642a0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma xelements_incl: forall (A: Type) (m: t A) (i : positive) k x, In x k -> In x (xelements m i k).",
            "VernacStartTheoremProof",
            "8933851e6c73bf33e6651781ed903bf26e631a83"
        ],
        [
            "induction m; intros; simpl.",
            "VernacExtend",
            "c48a5aee8f6edbabc34ccf3b4db1325f9c3d1dad"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct o.",
            "VernacExtend",
            "7e45d273082b90e03f5f97cde65b5f989324a175"
        ],
        [
            "apply IHm1.",
            "VernacExtend",
            "bdc0cfe8c8aaad61d155f8c31e1f49ee7a8145ee"
        ],
        [
            "simpl; right; auto.",
            "VernacExtend",
            "8af0594cca1560160c609b422321fcddae8bf899"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma xelements_correct: forall (A: Type) (m: t A) (i j : positive) (v: A) k, get i m = Some v -> In (prev (prev_append i j), v) (xelements m j k).",
            "VernacStartTheoremProof",
            "dbb4a7f969fe44e9bd796115da9e9dfbcf713b07"
        ],
        [
            "induction m; intros.",
            "VernacExtend",
            "ad78c67d3a9216bd0cba3419d43201d461ab0fe9"
        ],
        [
            "rewrite (gleaf A i) in H; congruence.",
            "VernacExtend",
            "60cd71f282100d7878cf5ee1a6ca0b0ec0f944a3"
        ],
        [
            "destruct o; destruct i; simpl; simpl in H.",
            "VernacExtend",
            "5f8af772d1024bfe9880aad1e041536d2631776a"
        ],
        [
            "apply xelements_incl.",
            "VernacExtend",
            "5b7a353efa3dc8fe9f7b568247f55db85052c9c4"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "apply xelements_incl.",
            "VernacExtend",
            "5b7a353efa3dc8fe9f7b568247f55db85052c9c4"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply xelements_incl.",
            "VernacExtend",
            "5b7a353efa3dc8fe9f7b568247f55db85052c9c4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem elements_correct: forall (A: Type) (m: t A) (i: positive) (v: A), get i m = Some v -> In (i, v) (elements m).",
            "VernacStartTheoremProof",
            "9ba4e67bc67a67ea8421d8c69e0793a1c005d473"
        ],
        [
            "intros A m i v H.",
            "VernacExtend",
            "5ff5d584bd97473db1d952c448c8df956af641d1"
        ],
        [
            "generalize (xelements_correct m i xH nil H).",
            "VernacExtend",
            "89c772a96001654d7402e46b4609fa8ff33f560d"
        ],
        [
            "rewrite prev_append_prev.",
            "VernacExtend",
            "b5353e71c1a8cfac3a3254ad19977c4f64aee47c"
        ],
        [
            "exact id.",
            "VernacExtend",
            "101c8af8a00f770310bfd9eb077822ca77c9a274"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_xelements: forall (A: Type) (m: t A) (i k: positive) (v: A) , In (k, v) (xelements m i nil) -> exists j, k = prev (prev_append j i) /\\ get j m = Some v.",
            "VernacStartTheoremProof",
            "aec957caa9d2360163ce10d53bc53640d0d6d296"
        ],
        [
            "induction m; intros.",
            "VernacExtend",
            "ad78c67d3a9216bd0cba3419d43201d461ab0fe9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite xelements_leaf in H.",
            "VernacExtend",
            "22234f9f9070480f8950e39fc29b66eca2b1d7cc"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite xelements_node in H.",
            "VernacExtend",
            "69c0bac596a221d5457c49a8d6bda681f07922b1"
        ],
        [
            "rewrite ! in_app_iff in H.",
            "VernacExtend",
            "ff5a367fca7a66db5deeecca676c8db1b932de55"
        ],
        [
            "destruct H as [P | [P | P]].",
            "VernacExtend",
            "8bb64a921bb2fe4444149d90e65e4fc03120442e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exploit IHm1; eauto.",
            "VernacExtend",
            "2932ddb199ac67eb4b1308cd5b972229b5a87756"
        ],
        [
            "intros (j & Q & R).",
            "VernacExtend",
            "84be36f0d3e10b62f5af51309f1bd16316c26f54"
        ],
        [
            "exists (xO j); auto.",
            "VernacExtend",
            "92453381adb97bbac1130f03a8a81c7206ab520c"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct o; simpl in P; intuition auto.",
            "VernacExtend",
            "1396ab070f77d3f6b88de297d74a949d6eee475b"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "exists xH; auto.",
            "VernacExtend",
            "31829c650f77a5ed35c59a15d2aae7ad9bfae63f"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exploit IHm2; eauto.",
            "VernacExtend",
            "5ff1a9632dd634beeba95d3f3902b041cc902a4b"
        ],
        [
            "intros (j & Q & R).",
            "VernacExtend",
            "84be36f0d3e10b62f5af51309f1bd16316c26f54"
        ],
        [
            "exists (xI j); auto.",
            "VernacExtend",
            "1cef838e6df7ace99b805c5206c08fdffe576056"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem elements_complete: forall (A: Type) (m: t A) (i: positive) (v: A), In (i, v) (elements m) -> get i m = Some v.",
            "VernacStartTheoremProof",
            "3a48e50af2cf3f66bf77d3cd184d61d13feb9792"
        ],
        [
            "unfold elements.",
            "VernacExtend",
            "093b6a2c5ab0f35c698ece9baa542c2b9b260d09"
        ],
        [
            "intros A m i v H.",
            "VernacExtend",
            "5ff5d584bd97473db1d952c448c8df956af641d1"
        ],
        [
            "exploit in_xelements; eauto.",
            "VernacExtend",
            "202c213de81872e717e66f96aaadec4014c9d44d"
        ],
        [
            "intros (j & P & Q).",
            "VernacExtend",
            "224a64226152e52ace0e542dde6a768c7ce313b1"
        ],
        [
            "rewrite prev_append_prev in P.",
            "VernacExtend",
            "c9dcf41b660697f2cd39f56f70944335ac7f915e"
        ],
        [
            "change i with (prev_append 1 i) in P.",
            "VernacExtend",
            "1bed6a8ded60dd11a36a3bfc0cbdf38a1f59ecde"
        ],
        [
            "exploit prev_append_inj; eauto.",
            "VernacExtend",
            "de86654142b9b253dcae930c67bfeca4bf77f292"
        ],
        [
            "intros; congruence.",
            "VernacExtend",
            "61515a2954e6a6334e3eba40c730dca8f75d28b2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition xkeys (A: Type) (m: t A) (i: positive) := List.map (@fst positive A) (xelements m i nil).",
            "VernacDefinition",
            "96a8589499d208ff399b7f8c7110738997fd3688"
        ],
        [
            "Remark xkeys_leaf: forall A i, xkeys (@Leaf A) i = nil.",
            "VernacStartTheoremProof",
            "d072a5cfc8c7b572fa11d2f9c73aebc69092b9e1"
        ],
        [
            "intros; reflexivity.",
            "VernacExtend",
            "c20cfa06d7b692e82c145d2df3bde4c2fe4eb461"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark xkeys_node: forall A (m1: t A) o (m2: t A) i, xkeys (Node m1 o m2) i = xkeys m1 (xO i) ++ match o with None => nil | Some v => prev i :: nil end ++ xkeys m2 (xI i).",
            "VernacStartTheoremProof",
            "fd6a7881b204a5b08d7ef09153683c336627039b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold xkeys.",
            "VernacExtend",
            "4112ef6fde1da1cdace1e7f2fe8347f0d0bd88a8"
        ],
        [
            "rewrite xelements_node.",
            "VernacExtend",
            "1f506ae7cd53ea99c49d732fa09b200d1d648f9a"
        ],
        [
            "rewrite ! map_app.",
            "VernacExtend",
            "cdf9d045443ccf2d5a04af5f0756f7dc99aca1ef"
        ],
        [
            "destruct o; auto.",
            "VernacExtend",
            "55c229e4810cab7dd26065c611ca2e0257d813c3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_xkeys: forall (A: Type) (m: t A) (i k: positive), In k (xkeys m i) -> (exists j, k = prev (prev_append j i)).",
            "VernacStartTheoremProof",
            "1cb30f205b8bf9de4c452485924463a0692d4313"
        ],
        [
            "unfold xkeys; intros.",
            "VernacExtend",
            "563e416c29655600efd699412d5b8abe5a6254e5"
        ],
        [
            "apply (list_in_map_inv) in H.",
            "VernacExtend",
            "ca70c474fe9a3bdba1c5baa122cbca6557f746a1"
        ],
        [
            "destruct H as ((j, v) & -> & H).",
            "VernacExtend",
            "222c6160dc4f61432c28f9d7bfc6d823ee6e8624"
        ],
        [
            "exploit in_xelements; eauto.",
            "VernacExtend",
            "202c213de81872e717e66f96aaadec4014c9d44d"
        ],
        [
            "intros (k & P & Q).",
            "VernacExtend",
            "8f759bf09461bd34d04c50fff8424c386438049b"
        ],
        [
            "exists k; auto.",
            "VernacExtend",
            "930bbe24c94723a9e2f5da004090011e877c06d9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma xelements_keys_norepet: forall (A: Type) (m: t A) (i: positive), list_norepet (xkeys m i).",
            "VernacStartTheoremProof",
            "7f58046bdd1d87f3a1826abfde8497541825f970"
        ],
        [
            "induction m; intros.",
            "VernacExtend",
            "ad78c67d3a9216bd0cba3419d43201d461ab0fe9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite xkeys_leaf; constructor.",
            "VernacExtend",
            "b932702a6786e31f0bc844bcd6323e10865675ee"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (NOTIN1: ~ In (prev i) (xkeys m1 (xO i))).",
            "VernacExtend",
            "72ceba03632361aa59989153303ae251fac30951"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "exploit in_xkeys; eauto.",
            "VernacExtend",
            "98f9a9ca3b594b521796076c4d0e8684964189f3"
        ],
        [
            "intros (j & EQ).",
            "VernacExtend",
            "045c76553e3d2801e84b1d90ddcb8233192efcda"
        ],
        [
            "rewrite prev_append_prev in EQ.",
            "VernacExtend",
            "283c6b9908273c1cf890bdaecc879f1ee761857d"
        ],
        [
            "simpl in EQ.",
            "VernacExtend",
            "795544ebb7593e7a8e851a546497b7bfca26abc7"
        ],
        [
            "apply prev_append_inj in EQ.",
            "VernacExtend",
            "057510c1fb2d1d979249c07b271f146ec03ee959"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (NOTIN2: ~ In (prev i) (xkeys m2 (xI i))).",
            "VernacExtend",
            "6c51c179d2c52706f266018ef32ac99fc83cb690"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "exploit in_xkeys; eauto.",
            "VernacExtend",
            "98f9a9ca3b594b521796076c4d0e8684964189f3"
        ],
        [
            "intros (j & EQ).",
            "VernacExtend",
            "045c76553e3d2801e84b1d90ddcb8233192efcda"
        ],
        [
            "rewrite prev_append_prev in EQ.",
            "VernacExtend",
            "283c6b9908273c1cf890bdaecc879f1ee761857d"
        ],
        [
            "simpl in EQ.",
            "VernacExtend",
            "795544ebb7593e7a8e851a546497b7bfca26abc7"
        ],
        [
            "apply prev_append_inj in EQ.",
            "VernacExtend",
            "057510c1fb2d1d979249c07b271f146ec03ee959"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (DISJ: forall x, In x (xkeys m1 (xO i)) -> In x (xkeys m2 (xI i)) -> False).",
            "VernacExtend",
            "eb24b8e37f6c626a9df155dfd6e9dd5f82343083"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exploit in_xkeys.",
            "VernacExtend",
            "3b894385c0ffb44355fb1f26270ee07e03701d9c"
        ],
        [
            "eexact H.",
            "VernacExtend",
            "c5b6c47c093b83147394b6464b63583df0ea333c"
        ],
        [
            "intros (j1 & EQ1).",
            "VernacExtend",
            "19ce6329109ab4a0e22066d318303ddb04322de9"
        ],
        [
            "exploit in_xkeys.",
            "VernacExtend",
            "3b894385c0ffb44355fb1f26270ee07e03701d9c"
        ],
        [
            "eexact H0.",
            "VernacExtend",
            "632a02d5415fef4910c04bb35ff9c3b9aa997efb"
        ],
        [
            "intros (j2 & EQ2).",
            "VernacExtend",
            "7aeb53040038b53950488b33410c6f8ad0840d16"
        ],
        [
            "rewrite prev_append_prev in *.",
            "VernacExtend",
            "3c559cc93b78e80d6ac2db0074f1d3d2f2d4834e"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "rewrite EQ2 in EQ1.",
            "VernacExtend",
            "14ba0503abf0f84294b86ec330c6701be6f7b7f3"
        ],
        [
            "apply prev_append_inj in EQ1.",
            "VernacExtend",
            "79583d4962d0370f0a18dd9d4491237aa12afad2"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite xkeys_node.",
            "VernacExtend",
            "0328e9e030cb1e0b612a6c9e2f748967658dda84"
        ],
        [
            "apply list_norepet_append.",
            "VernacExtend",
            "b0f6b8756aaf13ecf1260b97f0920c9b14cb6f56"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct o; simpl; auto.",
            "VernacExtend",
            "91ec74c7f08b46456520b092a87e41034b649b97"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "red; intros; subst y.",
            "VernacExtend",
            "3aec290d9ce0917ea5ceaf04484c91af1df795fb"
        ],
        [
            "destruct o; simpl in H0.",
            "VernacExtend",
            "22e2d933486caa7e151224dc1ce3ff350c3a827a"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "subst x.",
            "VernacExtend",
            "76c28b0a6a4a7c1568fa30e26ee411c5e5d54968"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem elements_keys_norepet: forall (A: Type) (m: t A), list_norepet (List.map (@fst elt A) (elements m)).",
            "VernacStartTheoremProof",
            "1d89b733b6da2d4395f74d390b423e827e888565"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (xelements_keys_norepet m xH).",
            "VernacExtend",
            "42e9ad92e399d3f63536b4d65e8cc2437fa6aaaf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark xelements_empty: forall (A: Type) (m: t A) i, (forall i, get i m = None) -> xelements m i nil = nil.",
            "VernacStartTheoremProof",
            "c5ece104a2488e371154187002ed20a0ac3ff2cd"
        ],
        [
            "induction m; intros.",
            "VernacExtend",
            "ad78c67d3a9216bd0cba3419d43201d461ab0fe9"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite xelements_node.",
            "VernacExtend",
            "1f506ae7cd53ea99c49d732fa09b200d1d648f9a"
        ],
        [
            "rewrite IHm1, IHm2.",
            "VernacExtend",
            "8e43821e7f9ecedc4782add94bc82b812515d24f"
        ],
        [
            "destruct o; auto.",
            "VernacExtend",
            "55c229e4810cab7dd26065c611ca2e0257d813c3"
        ],
        [
            "generalize (H xH); simpl; congruence.",
            "VernacExtend",
            "9765827b96906c12c2aee417b39f540e16f5faa7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (H (xI i0)).",
            "VernacExtend",
            "c4814f8acecfbd9263ffff31fb5d6d532bad2ca6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (H (xO i0)).",
            "VernacExtend",
            "0cde20c314667cd58da4b8acbca7b280f5a13fad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem elements_canonical_order': forall (A B: Type) (R: A -> B -> Prop) (m: t A) (n: t B), (forall i, option_rel R (get i m) (get i n)) -> list_forall2 (fun i_x i_y => fst i_x = fst i_y /\\ R (snd i_x) (snd i_y)) (elements m) (elements n).",
            "VernacStartTheoremProof",
            "f3692b9818e9ae930e6c1c8f0735a33e13fcc413"
        ],
        [
            "intros until n.",
            "VernacExtend",
            "519446f80e1db29c96b7020a8f52ae408def330d"
        ],
        [
            "unfold elements.",
            "VernacExtend",
            "093b6a2c5ab0f35c698ece9baa542c2b9b260d09"
        ],
        [
            "generalize 1%positive.",
            "VernacExtend",
            "d849ffe135199fd64613ae676a8b0f1df0e78daa"
        ],
        [
            "revert m n.",
            "VernacExtend",
            "154d21b953252de5fba60383975374ead7bae98c"
        ],
        [
            "induction m; intros.",
            "VernacExtend",
            "ad78c67d3a9216bd0cba3419d43201d461ab0fe9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite xelements_empty.",
            "VernacExtend",
            "7d3d7b570949b3e7426e6bcce302115e83ef5ffd"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "specialize (H i).",
            "VernacExtend",
            "127e405bbb638c9528691e836c73b4d438c7a336"
        ],
        [
            "rewrite gempty in H.",
            "VernacExtend",
            "ce30f5360347ac5b601b2d79e7cbf63ef7f31c1a"
        ],
        [
            "inv H; auto.",
            "VernacExtend",
            "64b5b263c28e9ead2d374e2c075c79c61f085ebe"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct n as [ | n1 o' n2 ].",
            "VernacExtend",
            "654142aaf835ab23bc09754b6592f80b93b1562d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite (xelements_empty (Node m1 o m2)).",
            "VernacExtend",
            "4d14928f7d8bfd378d7154021790d013b5be939e"
        ],
        [
            "simpl; constructor.",
            "VernacExtend",
            "ac61261ad3f03698bb630fde3118b8936863f48a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "specialize (H i).",
            "VernacExtend",
            "127e405bbb638c9528691e836c73b4d438c7a336"
        ],
        [
            "rewrite gempty in H.",
            "VernacExtend",
            "ce30f5360347ac5b601b2d79e7cbf63ef7f31c1a"
        ],
        [
            "inv H; auto.",
            "VernacExtend",
            "64b5b263c28e9ead2d374e2c075c79c61f085ebe"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite ! xelements_node.",
            "VernacExtend",
            "c784dca3a3f7b44094b66a0997fe1603696d689b"
        ],
        [
            "repeat apply list_forall2_app.",
            "VernacExtend",
            "7575bd71155a63bc99193dedcf1bc56cbe3b1f17"
        ],
        [
            "apply IHm1.",
            "VernacExtend",
            "bdc0cfe8c8aaad61d155f8c31e1f49ee7a8145ee"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (H (xO i)).",
            "VernacExtend",
            "d8bc2eb366441825ff7a318db9ab9fac4133ea29"
        ],
        [
            "generalize (H xH); simpl; intros OR; inv OR.",
            "VernacExtend",
            "ce1eacde564d17071cc891691c3888056358d5eb"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply IHm2.",
            "VernacExtend",
            "c46c2ebfe13825de42a4b83c6b894febeba208a7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (H (xI i)).",
            "VernacExtend",
            "2bcc49be37333ee1b310824f4e3c4ea2ea760eb0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem elements_canonical_order: forall (A B: Type) (R: A -> B -> Prop) (m: t A) (n: t B), (forall i x, get i m = Some x -> exists y, get i n = Some y /\\ R x y) -> (forall i y, get i n = Some y -> exists x, get i m = Some x /\\ R x y) -> list_forall2 (fun i_x i_y => fst i_x = fst i_y /\\ R (snd i_x) (snd i_y)) (elements m) (elements n).",
            "VernacStartTheoremProof",
            "5e1e86083bd922add3b61335c3073539238e409f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply elements_canonical_order'.",
            "VernacExtend",
            "72577e336a236dda7078b85c31bffe87010f5548"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (get i m) as [x|] eqn:GM.",
            "VernacExtend",
            "aa122745b97a9ee4bfa064cfb0eb79be63b21120"
        ],
        [
            "exploit H; eauto.",
            "VernacExtend",
            "e4042976bceeb1e0a2b61f377ada9badc4c146f3"
        ],
        [
            "intros (y & P & Q).",
            "VernacExtend",
            "48f72f04ef2ff004ffe7302e24c56fc09e575bde"
        ],
        [
            "rewrite P; constructor; auto.",
            "VernacExtend",
            "6f083861b1189d9bf6384c5f3b42cf4c6fd83129"
        ],
        [
            "destruct (get i n) as [y|] eqn:GN.",
            "VernacExtend",
            "7fe0489127b005d33caea1f5d3f3aa6414c265e8"
        ],
        [
            "exploit H0; eauto.",
            "VernacExtend",
            "e2bb62237be4af6f3df33a06be0bda055849b007"
        ],
        [
            "intros (x & P & Q).",
            "VernacExtend",
            "c4c5f1f152ed517a08ea37718b88397194f10463"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem elements_extensional: forall (A: Type) (m n: t A), (forall i, get i m = get i n) -> elements m = elements n.",
            "VernacStartTheoremProof",
            "82edb1c13f0cffbd46373974b89ee7fdba08ea59"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exploit (@elements_canonical_order' _ _ (fun (x y: A) => x = y) m n).",
            "VernacExtend",
            "c1bd815c2a81c47e71cbf2d97afccddb142e3bb8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "destruct (get i n); constructor; auto.",
            "VernacExtend",
            "91b8d463000b6c61b25070968e2e9816d2a686e2"
        ],
        [
            "induction 1.",
            "VernacExtend",
            "dfe896305621800fcbb03b32d51d497edbdf1dc5"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct a1 as [a2 a3]; destruct b1 as [b2 b3]; simpl in *.",
            "VernacExtend",
            "f4f446d82aae2ad199f5a40072cd6c4b12df2eb9"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma xelements_remove: forall (A: Type) v (m: t A) i j, get i m = Some v -> exists l1 l2, xelements m j nil = l1 ++ (prev (prev_append i j), v) :: l2 /\\ xelements (remove i m) j nil = l1 ++ l2.",
            "VernacStartTheoremProof",
            "d6500ab538db5b62f1ef9442b60c3c5393506e4b"
        ],
        [
            "induction m; intros.",
            "VernacExtend",
            "ad78c67d3a9216bd0cba3419d43201d461ab0fe9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite gleaf in H; discriminate.",
            "VernacExtend",
            "239474799d2c4a3c58b694c96164565c5bf35b0d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (REMOVE: xelements (remove i (Node m1 o m2)) j nil = xelements (match i with | xH => Node m1 None m2 | xO ii => Node (remove ii m1) o m2 | xI ii => Node m1 o (remove ii m2) end) j nil).",
            "VernacExtend",
            "3250451095c26b73da6ab4dbfc2ec0f6b8576da4"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct i; simpl remove.",
            "VernacExtend",
            "b722b4604ffc586e281de339b10604e54ea3e2c0"
        ],
        [
            "destruct m1; auto.",
            "VernacExtend",
            "804812ccaf09b058a1881d7ff1872ed099dad855"
        ],
        [
            "destruct o; auto.",
            "VernacExtend",
            "55c229e4810cab7dd26065c611ca2e0257d813c3"
        ],
        [
            "destruct (remove i m2); auto.",
            "VernacExtend",
            "ff9b67f0fcc6b0caffa14315f0dc15a7f9664dcf"
        ],
        [
            "destruct o; auto.",
            "VernacExtend",
            "55c229e4810cab7dd26065c611ca2e0257d813c3"
        ],
        [
            "destruct m2; auto.",
            "VernacExtend",
            "13992080051e0c86e8a110863ecb459f2af8484b"
        ],
        [
            "destruct (remove i m1); auto.",
            "VernacExtend",
            "3b44b0c50713057b6af40faeab3fc65f9bc21715"
        ],
        [
            "destruct m1; auto.",
            "VernacExtend",
            "804812ccaf09b058a1881d7ff1872ed099dad855"
        ],
        [
            "destruct m2; auto.",
            "VernacExtend",
            "13992080051e0c86e8a110863ecb459f2af8484b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite REMOVE.",
            "VernacExtend",
            "108c815327a7651909f7205aca470c7f7adfa938"
        ],
        [
            "destruct i; simpl in H.",
            "VernacExtend",
            "681d60c713ff1d9eef3e7293395b54fbf717d00e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct (IHm2 i (xI j) H) as (l1 & l2 & EQ & EQ').",
            "VernacExtend",
            "f152fbd82af6aaae499c404ad63ee1b2f00d3a5b"
        ],
        [
            "exists (xelements m1 (xO j) nil ++ match o with None => nil | Some x => (prev j, x) :: nil end ++ l1); exists l2; split.",
            "VernacExtend",
            "82af2c5d1741184cc142c8e9fbff95171215283a"
        ],
        [
            "rewrite xelements_node, EQ, ! app_ass.",
            "VernacExtend",
            "f436f4d2cf49cd6f9fbea956eedba8c70f391020"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite xelements_node, EQ', ! app_ass.",
            "VernacExtend",
            "85031df98da3e1cf74cffd95cdfc59761288b35b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct (IHm1 i (xO j) H) as (l1 & l2 & EQ & EQ').",
            "VernacExtend",
            "5455647e1778254d282eef4b5dec659d42a05a97"
        ],
        [
            "exists l1; exists (l2 ++ match o with None => nil | Some x => (prev j, x) :: nil end ++ xelements m2 (xI j) nil); split.",
            "VernacExtend",
            "ceba50218bf8a1bf69674c41893d9af88017f0d3"
        ],
        [
            "rewrite xelements_node, EQ, ! app_ass.",
            "VernacExtend",
            "f436f4d2cf49cd6f9fbea956eedba8c70f391020"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite xelements_node, EQ', ! app_ass.",
            "VernacExtend",
            "85031df98da3e1cf74cffd95cdfc59761288b35b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "subst o.",
            "VernacExtend",
            "88b05cc64b4af64cd21a6a9daf2a3700d92a1668"
        ],
        [
            "exists (xelements m1 (xO j) nil); exists (xelements m2 (xI j) nil); split.",
            "VernacExtend",
            "0e1ef4796af78316c5cc311290d47f10a623c427"
        ],
        [
            "rewrite xelements_node.",
            "VernacExtend",
            "1f506ae7cd53ea99c49d732fa09b200d1d648f9a"
        ],
        [
            "rewrite prev_append_prev.",
            "VernacExtend",
            "b5353e71c1a8cfac3a3254ad19977c4f64aee47c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite xelements_node; auto.",
            "VernacExtend",
            "f7e5a05dc3ccba9c2c311b505b3f72cc0bacd814"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem elements_remove: forall (A: Type) i v (m: t A), get i m = Some v -> exists l1 l2, elements m = l1 ++ (i,v) :: l2 /\\ elements (remove i m) = l1 ++ l2.",
            "VernacStartTheoremProof",
            "d39a19507f8f5d91e422ec9923e4c0f92baab907"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exploit xelements_remove.",
            "VernacExtend",
            "3926bc5c2f47a293c2c0e243f426bd0e8283f5c2"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "instantiate (1 := xH).",
            "VernacExtend",
            "e143f3d4f0535309067d424253f0679f4bea6789"
        ],
        [
            "rewrite prev_append_prev.",
            "VernacExtend",
            "b5353e71c1a8cfac3a3254ad19977c4f64aee47c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint xfold (A B: Type) (f: B -> positive -> A -> B) (i: positive) (m: t A) (v: B) {struct m} : B := match m with | Leaf => v | Node l None r => let v1 := xfold f (xO i) l v in xfold f (xI i) r v1 | Node l (Some x) r => let v1 := xfold f (xO i) l v in let v2 := f v1 (prev i) x in xfold f (xI i) r v2 end.",
            "VernacFixpoint",
            "eefa1a0600ce28c7f78fe0b6b46da08576d966ef"
        ],
        [
            "Definition fold (A B : Type) (f: B -> positive -> A -> B) (m: t A) (v: B) := xfold f xH m v.",
            "VernacDefinition",
            "b1afc6ad3625b43744dfb456cfc4d562c2935b0d"
        ],
        [
            "Lemma xfold_xelements: forall (A B: Type) (f: B -> positive -> A -> B) m i v l, List.fold_left (fun a p => f a (fst p) (snd p)) l (xfold f i m v) = List.fold_left (fun a p => f a (fst p) (snd p)) (xelements m i l) v.",
            "VernacStartTheoremProof",
            "99a5caf4cfef40d174081db691529efe3e84b6a5"
        ],
        [
            "induction m; intros.",
            "VernacExtend",
            "ad78c67d3a9216bd0cba3419d43201d461ab0fe9"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct o; simpl.",
            "VernacExtend",
            "5e12d65f9cbafc203768a6171193726ba08e4925"
        ],
        [
            "rewrite <- IHm1.",
            "VernacExtend",
            "06de1462de790f0e0a8171358b751fedb984e50c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- IHm2.",
            "VernacExtend",
            "a45124d6fdfb7920a74c3a0ea95f4c4c38897470"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite <- IHm1.",
            "VernacExtend",
            "06de1462de790f0e0a8171358b751fedb984e50c"
        ],
        [
            "rewrite <- IHm2.",
            "VernacExtend",
            "a45124d6fdfb7920a74c3a0ea95f4c4c38897470"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem fold_spec: forall (A B: Type) (f: B -> positive -> A -> B) (v: B) (m: t A), fold f m v = List.fold_left (fun a p => f a (fst p) (snd p)) (elements m) v.",
            "VernacStartTheoremProof",
            "754f07d8e740437037124b4ea6797c72a6469c78"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold fold, elements.",
            "VernacExtend",
            "ab806622a3c6255e7f455fe4eb4e92fa85ea22cc"
        ],
        [
            "rewrite <- xfold_xelements.",
            "VernacExtend",
            "3ffd8d8c62477447ec3ff17b90c6904d82818dee"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint fold1 (A B: Type) (f: B -> A -> B) (m: t A) (v: B) {struct m} : B := match m with | Leaf => v | Node l None r => let v1 := fold1 f l v in fold1 f r v1 | Node l (Some x) r => let v1 := fold1 f l v in let v2 := f v1 x in fold1 f r v2 end.",
            "VernacFixpoint",
            "5405b6b23420c7aef013a50904b8b5d6a22cdf6d"
        ],
        [
            "Lemma fold1_xelements: forall (A B: Type) (f: B -> A -> B) m i v l, List.fold_left (fun a p => f a (snd p)) l (fold1 f m v) = List.fold_left (fun a p => f a (snd p)) (xelements m i l) v.",
            "VernacStartTheoremProof",
            "e12f7ffe35158c5dcf9111f86e9c3a3c8a9d61ad"
        ],
        [
            "induction m; intros.",
            "VernacExtend",
            "ad78c67d3a9216bd0cba3419d43201d461ab0fe9"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct o; simpl.",
            "VernacExtend",
            "5e12d65f9cbafc203768a6171193726ba08e4925"
        ],
        [
            "rewrite <- IHm1.",
            "VernacExtend",
            "06de1462de790f0e0a8171358b751fedb984e50c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- IHm2.",
            "VernacExtend",
            "a45124d6fdfb7920a74c3a0ea95f4c4c38897470"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite <- IHm1.",
            "VernacExtend",
            "06de1462de790f0e0a8171358b751fedb984e50c"
        ],
        [
            "rewrite <- IHm2.",
            "VernacExtend",
            "a45124d6fdfb7920a74c3a0ea95f4c4c38897470"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem fold1_spec: forall (A B: Type) (f: B -> A -> B) (v: B) (m: t A), fold1 f m v = List.fold_left (fun a p => f a (snd p)) (elements m) v.",
            "VernacStartTheoremProof",
            "41674e396a89e81d560b033226deebfdebc8b7a4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply fold1_xelements with (l := @nil (positive * A)).",
            "VernacExtend",
            "432c062e42b8c7ce5310d86ccad07266c36f60cb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End PTree.",
            "VernacEndSegment",
            "754b8106d779d23042cb4a70df25743f525e7c42"
        ],
        [
            "Module PMap <: MAP.",
            "VernacDefineModule",
            "f67b70c76fc4214167af80869619afb7d4f65662"
        ],
        [
            "Definition elt := positive.",
            "VernacDefinition",
            "9a179450215c1ed04c68e5b6b0910d2bd476acbe"
        ],
        [
            "Definition elt_eq := peq.",
            "VernacDefinition",
            "c99e4660a005e8e81bf7408907c44302592b228a"
        ],
        [
            "Definition t (A : Type) : Type := (A * PTree.t A)%type.",
            "VernacDefinition",
            "5e07d5d7fdecc9bf3308726ae60f7007d64d0ffd"
        ],
        [
            "Definition init (A : Type) (x : A) := (x, PTree.empty A).",
            "VernacDefinition",
            "c2c64514735b2639b6bdbbf101533de8a61639d4"
        ],
        [
            "Definition get (A : Type) (i : positive) (m : t A) := match PTree.get i (snd m) with | Some x => x | None => fst m end.",
            "VernacDefinition",
            "eb65005259b936a48a8104fe2d27181045c2ffbb"
        ],
        [
            "Definition set (A : Type) (i : positive) (x : A) (m : t A) := (fst m, PTree.set i x (snd m)).",
            "VernacDefinition",
            "12129631487e26c3747f3835a1f68286220808c2"
        ],
        [
            "Theorem gi: forall (A: Type) (i: positive) (x: A), get i (init x) = x.",
            "VernacStartTheoremProof",
            "8adc377dd386cedd28039c005a23ebb42c88035c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold init.",
            "VernacExtend",
            "e5993703fde9f0b650f8cd410c2cd795bfa0c371"
        ],
        [
            "unfold get.",
            "VernacExtend",
            "0ee15cb7f500427115d62c79c71ab50bde1d2bb9"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite PTree.gempty.",
            "VernacExtend",
            "02ad4f08527ee6f058bb5b2fc6b52855b65cf49f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem gss: forall (A: Type) (i: positive) (x: A) (m: t A), get i (set i x m) = x.",
            "VernacStartTheoremProof",
            "a517beba0eac1d25a35f20a038c53596b286c47a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold get.",
            "VernacExtend",
            "0ee15cb7f500427115d62c79c71ab50bde1d2bb9"
        ],
        [
            "unfold set.",
            "VernacExtend",
            "9b0835dc2ca0800df83e9b8ff42518230137531b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite PTree.gss.",
            "VernacExtend",
            "1862d23de1a24ed5e53618dc05bc2c5f9f530523"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem gso: forall (A: Type) (i j: positive) (x: A) (m: t A), i <> j -> get i (set j x m) = get i m.",
            "VernacStartTheoremProof",
            "c9bdb5cb426e233b00a408758f30cd3ec85cc02d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold get.",
            "VernacExtend",
            "0ee15cb7f500427115d62c79c71ab50bde1d2bb9"
        ],
        [
            "unfold set.",
            "VernacExtend",
            "9b0835dc2ca0800df83e9b8ff42518230137531b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite PTree.gso; auto.",
            "VernacExtend",
            "63a9bc52270c656dbc7d2efe43bb711a7ed93e4e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem gsspec: forall (A: Type) (i j: positive) (x: A) (m: t A), get i (set j x m) = if peq i j then x else get i m.",
            "VernacStartTheoremProof",
            "26f20a960b5f017b24a8d5cc70aa49fb8235df0f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (peq i j).",
            "VernacExtend",
            "08c887008197729a5138c58e5602225ee4591130"
        ],
        [
            "rewrite e.",
            "VernacExtend",
            "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
        ],
        [
            "apply gss.",
            "VernacExtend",
            "fd90d98af9f7214539f8695656abb834424b2095"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply gso.",
            "VernacExtend",
            "7d295e340a44275391526c1c1a1a50f6ab969170"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem gsident: forall (A: Type) (i j: positive) (m: t A), get j (set i (get i m) m) = get j m.",
            "VernacStartTheoremProof",
            "493fdb271b3665e695b369b8267355efb02dadd8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (peq i j).",
            "VernacExtend",
            "08c887008197729a5138c58e5602225ee4591130"
        ],
        [
            "rewrite e.",
            "VernacExtend",
            "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
        ],
        [
            "rewrite gss.",
            "VernacExtend",
            "a631ab66ed1e2067f403ed319b48cc5ef23efbe7"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite gso; auto.",
            "VernacExtend",
            "060eb015a4eb7d12d355f800905cc62aa74d2689"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition map (A B : Type) (f : A -> B) (m : t A) : t B := (f (fst m), PTree.map1 f (snd m)).",
            "VernacDefinition",
            "90de27d8b892c56a90cfc8f901a73d0e98c1215e"
        ],
        [
            "Theorem gmap: forall (A B: Type) (f: A -> B) (i: positive) (m: t A), get i (map f m) = f(get i m).",
            "VernacStartTheoremProof",
            "e669af4d28bbd59c937855321b0be257f2d77e71"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold map.",
            "VernacExtend",
            "d6f3bc771467f8d4970eb68d25db08fab4a0a015"
        ],
        [
            "unfold get.",
            "VernacExtend",
            "0ee15cb7f500427115d62c79c71ab50bde1d2bb9"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite PTree.gmap1.",
            "VernacExtend",
            "a38e218b020eaf1dc7e33fd69b878e010b2c49d4"
        ],
        [
            "unfold option_map.",
            "VernacExtend",
            "b2e3310998eef69e17cbb804bddc936d965a5f6b"
        ],
        [
            "destruct (PTree.get i (snd m)); auto.",
            "VernacExtend",
            "74c2b5bcae181941e4ac2749e5e42f141bf0a791"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem set2: forall (A: Type) (i: elt) (x y: A) (m: t A), set i y (set i x m) = set i y m.",
            "VernacStartTheoremProof",
            "5f639792bd3a050ed7f4b71f2f756b3d0c1ced65"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold set.",
            "VernacExtend",
            "9b0835dc2ca0800df83e9b8ff42518230137531b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "decEq.",
            "VernacExtend",
            "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
        ],
        [
            "apply PTree.set2.",
            "VernacExtend",
            "8b18a3fdf55f161506ca7831f02b8c2b83fffaf5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End PMap.",
            "VernacEndSegment",
            "5fe0df0208458b0cf34d8d1b7946b640a9707737"
        ],
        [
            "Module Type INDEXED_TYPE.",
            "VernacDeclareModuleType",
            "cc10b05f8f2c7c80af8109f5826f588fbf625a5d"
        ],
        [
            "Parameter t: Type.",
            "VernacAssumption",
            "504795567cd4c81b969bd65cb901c9b8a73ae96f"
        ],
        [
            "Parameter index: t -> positive.",
            "VernacAssumption",
            "6d48463e8dc9c4cf633c8b5b2e68a0f52c3c8002"
        ],
        [
            "Axiom index_inj: forall (x y: t), index x = index y -> x = y.",
            "VernacAssumption",
            "d973c3057b5b4183e437da6418d011bfef30c60f"
        ],
        [
            "Parameter eq: forall (x y: t), {x = y} + {x <> y}.",
            "VernacAssumption",
            "36485c32d5d151843f7e2f2d9ec5b7f7c0c26149"
        ],
        [
            "End INDEXED_TYPE.",
            "VernacEndSegment",
            "f3e328b7d310a6b94dba8e2b2a5275cb51d3f286"
        ],
        [
            "Module IMap(X: INDEXED_TYPE).",
            "VernacDefineModule",
            "9109356c298ebf6890fd6544cc2b32e06a26a7ec"
        ],
        [
            "Definition elt := X.t.",
            "VernacDefinition",
            "1e5220371e2feaf15d74e257297a89cf424636f8"
        ],
        [
            "Definition elt_eq := X.eq.",
            "VernacDefinition",
            "0dd47b06d07d692baf504dfecbec72f10986464e"
        ],
        [
            "Definition t : Type -> Type := PMap.t.",
            "VernacDefinition",
            "e756c77fe1beacd6bbaf3d1954c6a8f052d68486"
        ],
        [
            "Definition init (A: Type) (x: A) := PMap.init x.",
            "VernacDefinition",
            "43da3cbd6d73f3f4432ed0d7a1d6a78c7c86c036"
        ],
        [
            "Definition get (A: Type) (i: X.t) (m: t A) := PMap.get (X.index i) m.",
            "VernacDefinition",
            "43f566e94747f3b39df807be24418874d5afb260"
        ],
        [
            "Definition set (A: Type) (i: X.t) (v: A) (m: t A) := PMap.set (X.index i) v m.",
            "VernacDefinition",
            "747ce4b818576dc7cce61246186854adbea0019b"
        ],
        [
            "Definition map (A B: Type) (f: A -> B) (m: t A) : t B := PMap.map f m.",
            "VernacDefinition",
            "2f100d053f72ae22aec2ba0e51eac6baab06582f"
        ],
        [
            "Lemma gi: forall (A: Type) (x: A) (i: X.t), get i (init x) = x.",
            "VernacStartTheoremProof",
            "4aff582729cf0bc701d6a86bb61d4336f756dd11"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold get, init.",
            "VernacExtend",
            "0c81d9d59d7c819c4da009e0bcd36a7a9b0f5a68"
        ],
        [
            "apply PMap.gi.",
            "VernacExtend",
            "aa82ccbe8ae260bd9bc5882c4567d0c2a3f0d464"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gss: forall (A: Type) (i: X.t) (x: A) (m: t A), get i (set i x m) = x.",
            "VernacStartTheoremProof",
            "555ec672501c8c43c504eb386f724bf48fcc13c8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold get, set.",
            "VernacExtend",
            "6a69c808495aa7fac584944a65c51dd7910615b2"
        ],
        [
            "apply PMap.gss.",
            "VernacExtend",
            "2cd00cf9dd894d933b696f0e8bf970748d485efc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gso: forall (A: Type) (i j: X.t) (x: A) (m: t A), i <> j -> get i (set j x m) = get i m.",
            "VernacStartTheoremProof",
            "f48f6c733a6dc876f41e15c6da5f8d2b5e67ff27"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold get, set.",
            "VernacExtend",
            "6a69c808495aa7fac584944a65c51dd7910615b2"
        ],
        [
            "apply PMap.gso.",
            "VernacExtend",
            "2fe3b184b6e2b79b3e919af63e32901f66725261"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply X.index_inj; auto.",
            "VernacExtend",
            "668ddace3fe091661042a177ca5ca49183814d4a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gsspec: forall (A: Type) (i j: X.t) (x: A) (m: t A), get i (set j x m) = if X.eq i j then x else get i m.",
            "VernacStartTheoremProof",
            "728bcf1537b120fe38e9b1f60993821423abbb90"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold get, set.",
            "VernacExtend",
            "6a69c808495aa7fac584944a65c51dd7910615b2"
        ],
        [
            "rewrite PMap.gsspec.",
            "VernacExtend",
            "208df7f9699f271a00c45eb42e79661332f7bd43"
        ],
        [
            "case (X.eq i j); intro.",
            "VernacExtend",
            "61743a54917ea6c1ca7b010bfc198b0d96fd89a5"
        ],
        [
            "subst j.",
            "VernacExtend",
            "4959fd5cfffa27452c2d688b999587736fe34624"
        ],
        [
            "rewrite peq_true.",
            "VernacExtend",
            "5160039b46d81f20d5b10f33aa6abf2c1cfa2120"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite peq_false.",
            "VernacExtend",
            "ec4070de72d3ea3ffcb15269f99c641f4ac625c5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "red; intro.",
            "VernacExtend",
            "12e00b6ab6f8834b6f81959ca42843abaa311f37"
        ],
        [
            "elim n.",
            "VernacExtend",
            "c68f766a88bb5402d72ee6adaca953661a5d18b2"
        ],
        [
            "apply X.index_inj; auto.",
            "VernacExtend",
            "668ddace3fe091661042a177ca5ca49183814d4a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gmap: forall (A B: Type) (f: A -> B) (i: X.t) (m: t A), get i (map f m) = f(get i m).",
            "VernacStartTheoremProof",
            "011b4a2218cad6ffa2a6792b3aaa9afa739b8dc8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold map, get.",
            "VernacExtend",
            "ccba754009e41845c802be4ba0f4d6a830d72041"
        ],
        [
            "apply PMap.gmap.",
            "VernacExtend",
            "b919837772c3c8105f95701880b83516f1e73bd6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma set2: forall (A: Type) (i: elt) (x y: A) (m: t A), set i y (set i x m) = set i y m.",
            "VernacStartTheoremProof",
            "97c30dd449dd656152c97669a0bb7fe2ff4ecec2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold set.",
            "VernacExtend",
            "9b0835dc2ca0800df83e9b8ff42518230137531b"
        ],
        [
            "apply PMap.set2.",
            "VernacExtend",
            "42ae4155126c50b6d4abbf291b9736ab6383d100"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End IMap.",
            "VernacEndSegment",
            "c8982103393a9f7e73fb6c22696866a3edaee98c"
        ],
        [
            "Module ZIndexed.",
            "VernacDefineModule",
            "e93f45ecedb16147103c64f379ea18696c4a67bc"
        ],
        [
            "Definition t := Z.",
            "VernacDefinition",
            "5dfdc482bb70d7c3bc7339c3ad45a8a268cb7633"
        ],
        [
            "Definition index (z: Z): positive := match z with | Z0 => xH | Zpos p => xO p | Zneg p => xI p end.",
            "VernacDefinition",
            "b2571ffbac696ccba7d2c758d817a12451f93214"
        ],
        [
            "Lemma index_inj: forall (x y: Z), index x = index y -> x = y.",
            "VernacStartTheoremProof",
            "f4fc27f860faba27a91ad2a5bf752832e2b56771"
        ],
        [
            "unfold index; destruct x; destruct y; intros; try discriminate; try reflexivity.",
            "VernacExtend",
            "6150c60adcf7107ff2a9a3841af4e62e842c217f"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition eq := zeq.",
            "VernacDefinition",
            "b8b6ad97b88cf381f8c85c817c83b51afd3bafa7"
        ],
        [
            "End ZIndexed.",
            "VernacEndSegment",
            "c2b142a3cac510bc2d63a275cc6e9f51d94be126"
        ],
        [
            "Module ZMap := IMap(ZIndexed).",
            "VernacDefineModule",
            "9a861dadfd59a968dd232a0a09dcaa8ba47fee11"
        ],
        [
            "Module NIndexed.",
            "VernacDefineModule",
            "83b6668414b620bfc179ff0e6bedb5aebaf03fb4"
        ],
        [
            "Definition t := N.",
            "VernacDefinition",
            "8e6945373886f9ad19d1187a813ea24649bac9e7"
        ],
        [
            "Definition index (n: N): positive := match n with | N0 => xH | Npos p => xO p end.",
            "VernacDefinition",
            "74d4b900fe493f544f35f00873adc544d59c3c2f"
        ],
        [
            "Lemma index_inj: forall (x y: N), index x = index y -> x = y.",
            "VernacStartTheoremProof",
            "f7890c5c81031c0732e8bb0ddc0addb9138d9330"
        ],
        [
            "unfold index; destruct x; destruct y; intros; try discriminate; try reflexivity.",
            "VernacExtend",
            "6150c60adcf7107ff2a9a3841af4e62e842c217f"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq: forall (x y: N), {x = y} + {x <> y}.",
            "VernacStartTheoremProof",
            "8751e2cf64d014a7f3b822940fe9fa7a03c14274"
        ],
        [
            "decide equality.",
            "VernacExtend",
            "10aba07d521545accbb51a4c2e0695a9ddce3199"
        ],
        [
            "apply peq.",
            "VernacExtend",
            "5e99d9ae8e5eadf6309ec1189544d29135be0996"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End NIndexed.",
            "VernacEndSegment",
            "ffb1490bab5b4ed4ddd8a9d2279fc99cacbb54c9"
        ],
        [
            "Module NMap := IMap(NIndexed).",
            "VernacDefineModule",
            "5a3e47643bd9ff7cd39f85010d37aa1f14d12c39"
        ],
        [
            "Module Type EQUALITY_TYPE.",
            "VernacDeclareModuleType",
            "403bcc74bd024c2d9f42548e375bf193bd9567fe"
        ],
        [
            "Parameter t: Type.",
            "VernacAssumption",
            "504795567cd4c81b969bd65cb901c9b8a73ae96f"
        ],
        [
            "Parameter eq: forall (x y: t), {x = y} + {x <> y}.",
            "VernacAssumption",
            "36485c32d5d151843f7e2f2d9ec5b7f7c0c26149"
        ],
        [
            "End EQUALITY_TYPE.",
            "VernacEndSegment",
            "19177bbe9b8878c4d4a834e5550a42dc56ccb74e"
        ],
        [
            "Module EMap(X: EQUALITY_TYPE) <: MAP.",
            "VernacDefineModule",
            "6912168f89e746542c3be14e79fe7fe4993c5af5"
        ],
        [
            "Definition elt := X.t.",
            "VernacDefinition",
            "1e5220371e2feaf15d74e257297a89cf424636f8"
        ],
        [
            "Definition elt_eq := X.eq.",
            "VernacDefinition",
            "0dd47b06d07d692baf504dfecbec72f10986464e"
        ],
        [
            "Definition t (A: Type) := X.t -> A.",
            "VernacDefinition",
            "51e34be5ab9d602f106b1f1e406bd13c239a4708"
        ],
        [
            "Definition init (A: Type) (v: A) := fun (_: X.t) => v.",
            "VernacDefinition",
            "202a5ea89f265428c74232b06a26da3528f1554f"
        ],
        [
            "Definition get (A: Type) (x: X.t) (m: t A) := m x.",
            "VernacDefinition",
            "85dd4aedaf2e69ad09925c5ecdc8896b1f8794bf"
        ],
        [
            "Definition set (A: Type) (x: X.t) (v: A) (m: t A) := fun (y: X.t) => if X.eq y x then v else m y.",
            "VernacDefinition",
            "343912c77693ab918f75777eb5ec8e2fc3b95a96"
        ],
        [
            "Lemma gi: forall (A: Type) (i: elt) (x: A), init x i = x.",
            "VernacStartTheoremProof",
            "17b7ffc5dbdaaf98c26953ad6543b4ed1af22f8e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gss: forall (A: Type) (i: elt) (x: A) (m: t A), (set i x m) i = x.",
            "VernacStartTheoremProof",
            "8e2388a7dfd9728b12cdfaea7ca699501a5f32dc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold set.",
            "VernacExtend",
            "9b0835dc2ca0800df83e9b8ff42518230137531b"
        ],
        [
            "case (X.eq i i); intro.",
            "VernacExtend",
            "7769b78c02d9a1f8b3987de783e930f9395fba07"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gso: forall (A: Type) (i j: elt) (x: A) (m: t A), i <> j -> (set j x m) i = m i.",
            "VernacStartTheoremProof",
            "af596e97e9a83f0145ac7c113f296e1f8c0d643f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold set.",
            "VernacExtend",
            "9b0835dc2ca0800df83e9b8ff42518230137531b"
        ],
        [
            "case (X.eq i j); intro.",
            "VernacExtend",
            "61743a54917ea6c1ca7b010bfc198b0d96fd89a5"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gsspec: forall (A: Type) (i j: elt) (x: A) (m: t A), get i (set j x m) = if elt_eq i j then x else get i m.",
            "VernacStartTheoremProof",
            "ef539b32e96f44baa4520519dbb9a6bfa6d341c7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold get, set, elt_eq.",
            "VernacExtend",
            "2b83c5c4006b95cb119222d1b51eb38c8eccbbe6"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gsident: forall (A: Type) (i j: elt) (m: t A), get j (set i (get i m) m) = get j m.",
            "VernacStartTheoremProof",
            "f64463a516516667460480e1bc40d5ef35b8b259"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold get, set.",
            "VernacExtend",
            "6a69c808495aa7fac584944a65c51dd7910615b2"
        ],
        [
            "case (X.eq j i); intro.",
            "VernacExtend",
            "b593d1ea4c3a90145cb83cf45f999d1e14e5dc44"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition map (A B: Type) (f: A -> B) (m: t A) := fun (x: X.t) => f(m x).",
            "VernacDefinition",
            "5000ac6aa4949db4bb33e7cd80d91f434b24567a"
        ],
        [
            "Lemma gmap: forall (A B: Type) (f: A -> B) (i: elt) (m: t A), get i (map f m) = f(get i m).",
            "VernacStartTheoremProof",
            "51e1846f7b86d9ae9651ab2fe6fe937db7db6c8d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold get, map.",
            "VernacExtend",
            "d3831c470f70d0305573b57dcf569dd7c3f5226d"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End EMap.",
            "VernacEndSegment",
            "a9ccfdf4f87f590b742f6f57c616890121075826"
        ],
        [
            "Module ITree(X: INDEXED_TYPE).",
            "VernacDefineModule",
            "fd6b51e438b0d002bfe5563fdceecbf5143a71d6"
        ],
        [
            "Definition elt := X.t.",
            "VernacDefinition",
            "1e5220371e2feaf15d74e257297a89cf424636f8"
        ],
        [
            "Definition elt_eq := X.eq.",
            "VernacDefinition",
            "0dd47b06d07d692baf504dfecbec72f10986464e"
        ],
        [
            "Definition t : Type -> Type := PTree.t.",
            "VernacDefinition",
            "23669dd5469012ae9b8dff5b0611734df41a16c0"
        ],
        [
            "Definition empty (A: Type): t A := PTree.empty A.",
            "VernacDefinition",
            "3401a6cc081e0e32819520639ad285de51ebf4c1"
        ],
        [
            "Definition get (A: Type) (k: elt) (m: t A): option A := PTree.get (X.index k) m.",
            "VernacDefinition",
            "8e41f836e8d68d622cc6e125ca7f864ae4be3701"
        ],
        [
            "Definition set (A: Type) (k: elt) (v: A) (m: t A): t A := PTree.set (X.index k) v m.",
            "VernacDefinition",
            "d826d68acf08ff709a8d98f2102aa1d6f55354b4"
        ],
        [
            "Definition remove (A: Type) (k: elt) (m: t A): t A := PTree.remove (X.index k) m.",
            "VernacDefinition",
            "5d7c0abf6234e6d537c21718e7c4b576bb6ee5da"
        ],
        [
            "Theorem gempty: forall (A: Type) (i: elt), get i (empty A) = None.",
            "VernacStartTheoremProof",
            "d3f6b79cf613ff33ea86377a8bedf91bff3a0345"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply PTree.gempty.",
            "VernacExtend",
            "dbe505a41ab4e1d466fbd0ed0206761a607d13e5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem gss: forall (A: Type) (i: elt) (x: A) (m: t A), get i (set i x m) = Some x.",
            "VernacStartTheoremProof",
            "b7b73a8e239819f0a05b6534277b1d3fcba723a3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply PTree.gss.",
            "VernacExtend",
            "e0e0d9b5775ce92f174c46a867531d5ac346bd39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem gso: forall (A: Type) (i j: elt) (x: A) (m: t A), i <> j -> get i (set j x m) = get i m.",
            "VernacStartTheoremProof",
            "002d77aed002711a6aa290e19cd4ed41832e2a81"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply PTree.gso.",
            "VernacExtend",
            "8453b3a6cf7c39a2cffffdf54273e404e39b8faf"
        ],
        [
            "red; intros; elim H; apply X.index_inj; auto.",
            "VernacExtend",
            "692e30290feba6fea0c55822ac9984bd5d8ac064"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem gsspec: forall (A: Type) (i j: elt) (x: A) (m: t A), get i (set j x m) = if elt_eq i j then Some x else get i m.",
            "VernacStartTheoremProof",
            "fb8287c446eb33e235ab11c80a8910857e108d25"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (elt_eq i j).",
            "VernacExtend",
            "3eac535c041cf182fd8a403809d6d05dfc2251d6"
        ],
        [
            "subst j; apply gss.",
            "VernacExtend",
            "83750ce0466b6915bb7600e94740d7a509f30e60"
        ],
        [
            "apply gso; auto.",
            "VernacExtend",
            "24904f6376ee35f197337d143bc52f4c2ef60a6d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem grs: forall (A: Type) (i: elt) (m: t A), get i (remove i m) = None.",
            "VernacStartTheoremProof",
            "3956d69efa5d16904c13294a8c57fec189524ed6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply PTree.grs.",
            "VernacExtend",
            "8130040c7b8af6a4a2d271abaa2ae80c7b16ccd2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem gro: forall (A: Type) (i j: elt) (m: t A), i <> j -> get i (remove j m) = get i m.",
            "VernacStartTheoremProof",
            "14dfeb25e7b09b7a602e58a6b1c0928b666284c2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply PTree.gro.",
            "VernacExtend",
            "fc26e1ad8242b3f2e93db1f8d35b981258178f4b"
        ],
        [
            "red; intros; elim H; apply X.index_inj; auto.",
            "VernacExtend",
            "692e30290feba6fea0c55822ac9984bd5d8ac064"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem grspec: forall (A: Type) (i j: elt) (m: t A), get i (remove j m) = if elt_eq i j then None else get i m.",
            "VernacStartTheoremProof",
            "b6e386cb97b81f9966ec74051ae3b72550264beb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (elt_eq i j).",
            "VernacExtend",
            "3eac535c041cf182fd8a403809d6d05dfc2251d6"
        ],
        [
            "subst j; apply grs.",
            "VernacExtend",
            "816597447c116e53614b4ec731ad86dc78896fbc"
        ],
        [
            "apply gro; auto.",
            "VernacExtend",
            "3110d5e20083580b3a60a271785ca0b7c3b2b59f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition beq: forall (A: Type), (A -> A -> bool) -> t A -> t A -> bool := PTree.beq.",
            "VernacDefinition",
            "9cd017f81001a0d838f4a3d5f320b175cd32eb1f"
        ],
        [
            "Theorem beq_sound: forall (A: Type) (eqA: A -> A -> bool) (t1 t2: t A), beq eqA t1 t2 = true -> forall (x: elt), match get x t1, get x t2 with | None, None => True | Some y1, Some y2 => eqA y1 y2 = true | _, _ => False end.",
            "VernacStartTheoremProof",
            "5edd56a30e2da693fb26747273527875213d6b78"
        ],
        [
            "unfold beq, get.",
            "VernacExtend",
            "e1b1c644dec61c9b1d5d31ab0da0b9a2374beb9a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite PTree.beq_correct in H.",
            "VernacExtend",
            "f265780090e3c6144c1cae3fae75f35fa2067e7e"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition combine: forall (A B C: Type), (option A -> option B -> option C) -> t A -> t B -> t C := PTree.combine.",
            "VernacDefinition",
            "dbdbbca132b217aea1ed5936d962c7d2b0f0839d"
        ],
        [
            "Theorem gcombine: forall (A B C: Type) (f: option A -> option B -> option C), f None None = None -> forall (m1: t A) (m2: t B) (i: elt), get i (combine f m1 m2) = f (get i m1) (get i m2).",
            "VernacStartTheoremProof",
            "0cd31f2e3b2a4989d49b44e25a368a544a10cace"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply PTree.gcombine.",
            "VernacExtend",
            "faab0ad5b73395b7d0a311613c86816798a94294"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ITree.",
            "VernacEndSegment",
            "95daa5bce50b74b7d1156f97cf48224a62818538"
        ],
        [
            "Module ZTree := ITree(ZIndexed).",
            "VernacDefineModule",
            "f31bb64fee93c236755721027f1e191313eb1b23"
        ],
        [
            "Module Tree_Properties(T: TREE).",
            "VernacDefineModule",
            "34692f5802fac66f0ab6a653fb47f76bd0c0533e"
        ],
        [
            "Section TREE_FOLD_IND.",
            "VernacBeginSection",
            "ae13f5902c7bd0f8396c4712a45e3493e77bc351"
        ],
        [
            "Variables V A: Type.",
            "VernacAssumption",
            "0a4e197cdd223694fac6a83dd218aa1f2e25c5de"
        ],
        [
            "Variable f: A -> T.elt -> V -> A.",
            "VernacAssumption",
            "be87ff3979645f159957f5281589724c16ea82c6"
        ],
        [
            "Variable P: T.t V -> A -> Prop.",
            "VernacAssumption",
            "92ca98436326bbac4d02ee0db434b8b9595cdc02"
        ],
        [
            "Variable init: A.",
            "VernacAssumption",
            "eaa0f19b3194b643ed2e294be260c8db4a7cebc7"
        ],
        [
            "Variable m_final: T.t V.",
            "VernacAssumption",
            "0c9c498d9077e57192ee494a5f5e762e5df4547b"
        ],
        [
            "Hypothesis P_compat: forall m m' a, (forall x, T.get x m = T.get x m') -> P m a -> P m' a.",
            "VernacAssumption",
            "d30d0168abab775cd635f4ce22e775e90e82221f"
        ],
        [
            "Hypothesis H_base: P (T.empty _) init.",
            "VernacAssumption",
            "9e5a996481b3a9b4e5c7c5ac9378b9f17da6e835"
        ],
        [
            "Hypothesis H_rec: forall m a k v, T.get k m = None -> T.get k m_final = Some v -> P m a -> P (T.set k v m) (f a k v).",
            "VernacAssumption",
            "77d526125114ff2c256e6c7d3c6f879c33683466"
        ],
        [
            "Let f' (a: A) (p : T.elt * V) := f a (fst p) (snd p).",
            "VernacDefinition",
            "3fd9f710ba147189b1497b590f3f7c7f2f9049a3"
        ],
        [
            "Let P' (l: list (T.elt * V)) (a: A) : Prop := forall m, list_equiv l (T.elements m) -> P m a.",
            "VernacDefinition",
            "56c8cd5344b17497fb869400e3712982d328a8c3"
        ],
        [
            "Remark H_base': P' nil init.",
            "VernacStartTheoremProof",
            "0a34cf1ef5eed0f9aa6776332e9b248e2816f855"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "apply P_compat with (T.empty _); auto.",
            "VernacExtend",
            "db28a2fd8bcb4283692a135057941efbbe11255f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite T.gempty.",
            "VernacExtend",
            "84afd58357e8618c8dbd64a2553cee7bb09890a1"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "case_eq (T.get x m); intros; auto.",
            "VernacExtend",
            "c03d9ad8695ccf0d660d2d1007b7a17f747b451b"
        ],
        [
            "assert (In (x, v) nil).",
            "VernacExtend",
            "2b44ad16a12ee131b2506afa7a2084e70b327962"
        ],
        [
            "rewrite (H (x, v)).",
            "VernacExtend",
            "288561d1193ce5da31aff0ff341cb02285e82be3"
        ],
        [
            "apply T.elements_correct.",
            "VernacExtend",
            "a1522a1fb8cbdfbfcee91ae42360b7285956a54c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark H_rec': forall k v l a, ~In k (List.map (@fst T.elt V) l) -> In (k, v) (T.elements m_final) -> P' l a -> P' (l ++ (k, v) :: nil) (f a k v).",
            "VernacStartTheoremProof",
            "4239929b0f2f0f83f24f53e97483eb8ee58d04a5"
        ],
        [
            "unfold P'; intros.",
            "VernacExtend",
            "1f5586583d5b3e9b92adbea388a3efa2b94731a3"
        ],
        [
            "set (m0 := T.remove k m).",
            "VernacExtend",
            "445304bc2f4b81fc5ba9108ac6ebb6f779a1cd02"
        ],
        [
            "apply P_compat with (T.set k v m0).",
            "VernacExtend",
            "7f8553e71d61400de19242569a23be10fff94f5b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold m0.",
            "VernacExtend",
            "01de0fc1fed10ca9d99ae62c9ab828cfa8e8855c"
        ],
        [
            "rewrite T.gsspec.",
            "VernacExtend",
            "355bbadaf138523764bd13e7cdd5c126020974b4"
        ],
        [
            "destruct (T.elt_eq x k).",
            "VernacExtend",
            "0c7d825de862449ebc1a157fc18eec52da092923"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply T.elements_complete.",
            "VernacExtend",
            "0a086e6672e80522af916d091cc6723cf4c1645f"
        ],
        [
            "rewrite <- (H2 (x, v)).",
            "VernacExtend",
            "4b8a4faf66af7702c9773f18212c2ecf6e0d4865"
        ],
        [
            "apply in_or_app.",
            "VernacExtend",
            "5d96e3be59ed2c78adfe02ab12e779d3ca3f43c0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intuition congruence.",
            "VernacExtend",
            "2cba3542847e3f4ea52f3f62375adc6e8f8f04bc"
        ],
        [
            "apply T.gro.",
            "VernacExtend",
            "a36bb138ffb6598fb3945fd04c889e25ba23f4fa"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply H_rec.",
            "VernacExtend",
            "ca446a9ca8550ca966cd22856c3f3f4ad7c05eae"
        ],
        [
            "unfold m0.",
            "VernacExtend",
            "01de0fc1fed10ca9d99ae62c9ab828cfa8e8855c"
        ],
        [
            "apply T.grs.",
            "VernacExtend",
            "447e257cfa896306cbe8ff40c1c5fff0c39ffc12"
        ],
        [
            "apply T.elements_complete.",
            "VernacExtend",
            "0a086e6672e80522af916d091cc6723cf4c1645f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "intros [k' v'].",
            "VernacExtend",
            "3399c239bf7d48566fbf66d68e520b940ba21e76"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "apply T.elements_correct.",
            "VernacExtend",
            "a1522a1fb8cbdfbfcee91ae42360b7285956a54c"
        ],
        [
            "unfold m0.",
            "VernacExtend",
            "01de0fc1fed10ca9d99ae62c9ab828cfa8e8855c"
        ],
        [
            "rewrite T.gro.",
            "VernacExtend",
            "ef561c6ae044bdfb617d325626900206633cd038"
        ],
        [
            "apply T.elements_complete.",
            "VernacExtend",
            "0a086e6672e80522af916d091cc6723cf4c1645f"
        ],
        [
            "rewrite <- (H2 (k', v')).",
            "VernacExtend",
            "7fc65dbd98193fb351262b19f0d32117bd68b701"
        ],
        [
            "apply in_or_app.",
            "VernacExtend",
            "5d96e3be59ed2c78adfe02ab12e779d3ca3f43c0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "red; intro; subst k'.",
            "VernacExtend",
            "db7b06887b4e67405464ed91e3a2b32825d01faf"
        ],
        [
            "elim H.",
            "VernacExtend",
            "853aa440c3a3810be05f0f87d0e688c05b92253d"
        ],
        [
            "change k with (fst (k, v')).",
            "VernacExtend",
            "fa15b7e2c210356975e51c3fbec0ef1da9362b81"
        ],
        [
            "apply in_map.",
            "VernacExtend",
            "8b1d6650eff402b483dc29bd25bb3e04ea7f525b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (T.get k' m0 = Some v').",
            "VernacExtend",
            "7068928d949b4ec8ae9db3ceefec9a54f071ce49"
        ],
        [
            "apply T.elements_complete.",
            "VernacExtend",
            "0a086e6672e80522af916d091cc6723cf4c1645f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold m0 in H4.",
            "VernacExtend",
            "6804388d4cc07fad1afc7bbad6e49ec4f726861a"
        ],
        [
            "rewrite T.grspec in H4.",
            "VernacExtend",
            "318f761c559805eb78b74ef33e1050bd64509550"
        ],
        [
            "destruct (T.elt_eq k' k).",
            "VernacExtend",
            "8abbbb35fba43ba1f71f390038ea1620631cc4eb"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "assert (In (k', v') (T.elements m)).",
            "VernacExtend",
            "45e54315923ed775905989b926b2a9be00ec8d31"
        ],
        [
            "apply T.elements_correct; auto.",
            "VernacExtend",
            "ac99914a9c83c67ec6a0f00797e3e38b83a26a61"
        ],
        [
            "rewrite <- (H2 (k', v')) in H5.",
            "VernacExtend",
            "6161446d804fbf177b976c7b377933dc564b295c"
        ],
        [
            "destruct (in_app_or _ _ _ H5).",
            "VernacExtend",
            "2906bcd3d17ab28ba80237bacf20c1ae73f57dd3"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simpl in H6.",
            "VernacExtend",
            "a1cfe6bf72a31f34bf109464b9fb8288a8f3124d"
        ],
        [
            "intuition congruence.",
            "VernacExtend",
            "2cba3542847e3f4ea52f3f62375adc6e8f8f04bc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fold_rec_aux: forall l1 l2 a, list_equiv (l2 ++ l1) (T.elements m_final) -> list_disjoint (List.map (@fst T.elt V) l1) (List.map (@fst T.elt V) l2) -> list_norepet (List.map (@fst T.elt V) l1) -> P' l2 a -> P' (l2 ++ l1) (List.fold_left f' l1 a).",
            "VernacStartTheoremProof",
            "5ec43d7b2c070d91bd7d3d40dca8b94ce966b082"
        ],
        [
            "induction l1; intros; simpl.",
            "VernacExtend",
            "3cc7258cfa99016b23abf5920b91a50a6985ec3e"
        ],
        [
            "rewrite <- List.app_nil_end.",
            "VernacExtend",
            "cff525cdcbb8f186fba24e919dc77cd691496e4b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct a as [k v]; simpl in *.",
            "VernacExtend",
            "98ac02c6e3d29677e23f8f976f58eaa331188387"
        ],
        [
            "inv H1.",
            "VernacExtend",
            "2c43d1971eb5aa98166f6ec686cc2a4f1886b0a4"
        ],
        [
            "change ((k, v) :: l1) with (((k, v) :: nil) ++ l1).",
            "VernacExtend",
            "991c760e6d5a82170bc23f3306c9ab402515ba9f"
        ],
        [
            "rewrite <- List.app_ass.",
            "VernacExtend",
            "20558f65db6ef8555c8c795212344b2b7a8be751"
        ],
        [
            "apply IHl1.",
            "VernacExtend",
            "f345159dea97d8876c7b461fb67e1c8421ab70a7"
        ],
        [
            "rewrite app_ass.",
            "VernacExtend",
            "1e8737a155ba47802e4df29a56a47a094af2082d"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "rewrite map_app in H3.",
            "VernacExtend",
            "2f868b95e82aa4b540ffffdf68688424f8e3d625"
        ],
        [
            "destruct (in_app_or _ _ _ H3).",
            "VernacExtend",
            "b345eac1736ac25cc077937b8398fb49ffa76196"
        ],
        [
            "apply H0; auto with coqlib.",
            "VernacExtend",
            "6874c0da8e60076c04b7b224cd826764ec6f808d"
        ],
        [
            "simpl in H4.",
            "VernacExtend",
            "31358c428a532f17f4c3cd16100d65b9f5ba8243"
        ],
        [
            "intuition congruence.",
            "VernacExtend",
            "2cba3542847e3f4ea52f3f62375adc6e8f8f04bc"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold f'.",
            "VernacExtend",
            "d5030c9006a9df78825d4b9238ed86129ec6a957"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply H_rec'; auto.",
            "VernacExtend",
            "6d8600feae4f42eaad5e8e8385945babb597b643"
        ],
        [
            "eapply list_disjoint_notin; eauto with coqlib.",
            "VernacExtend",
            "9a1caa9197c21515fae0f55e51a3b395a1853834"
        ],
        [
            "rewrite <- (H (k, v)).",
            "VernacExtend",
            "0f02e3c29db80a03f36d9f8da1104d580246766b"
        ],
        [
            "apply in_or_app.",
            "VernacExtend",
            "5d96e3be59ed2c78adfe02ab12e779d3ca3f43c0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem fold_rec: P m_final (T.fold f m_final init).",
            "VernacStartTheoremProof",
            "c785537b43ae081d8313ce4fb3845d9d5549f2b4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite T.fold_spec.",
            "VernacExtend",
            "1a77cdf675262ca1bb72728df173b02123643888"
        ],
        [
            "fold f'.",
            "VernacExtend",
            "b5572973bc13c2cd7865de7383cd835ae7c5dfea"
        ],
        [
            "assert (P' (nil ++ T.elements m_final) (List.fold_left f' (T.elements m_final) init)).",
            "VernacExtend",
            "28589f82e2706993a49d3bc17b68eacbdc94d6d0"
        ],
        [
            "apply fold_rec_aux.",
            "VernacExtend",
            "dcc911cfaa1fe3a693d769951ac30410e8ac65df"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "red; intros; tauto.",
            "VernacExtend",
            "355018df7632f1141f4e1b00261b28c1f4508309"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "elim H0.",
            "VernacExtend",
            "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
        ],
        [
            "apply T.elements_keys_norepet.",
            "VernacExtend",
            "d3ae6c0fb5b09836ee8d2df3ef670e385b6ddca1"
        ],
        [
            "apply H_base'.",
            "VernacExtend",
            "1ffcfe6e11452ebe7ddb93e338ff2b61c5a5f008"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "red in H.",
            "VernacExtend",
            "a4b4bf9e03eb87c8fa06c84cfda5cac7b43f2be8"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End TREE_FOLD_IND.",
            "VernacEndSegment",
            "dbc153b12a6c0210bd146cefb63ce031d2b5c16b"
        ],
        [
            "Section MEASURE.",
            "VernacBeginSection",
            "404798f8c118fc8d230a9ef946e789c0207c80ba"
        ],
        [
            "Variable V: Type.",
            "VernacAssumption",
            "7916504f668edb1889a5aca5d730ced22b8d98ed"
        ],
        [
            "Definition cardinal (x: T.t V) : nat := List.length (T.elements x).",
            "VernacDefinition",
            "1837bee8dbc71087301d95e37af9e61ab87e1065"
        ],
        [
            "Theorem cardinal_remove: forall x m y, T.get x m = Some y -> (cardinal (T.remove x m) < cardinal m)%nat.",
            "VernacStartTheoremProof",
            "e54e364d6f1a151da7cc3db5654e8e3e611beef7"
        ],
        [
            "unfold cardinal; intros.",
            "VernacExtend",
            "64cc1664ce6f0c0a40f76871a1e43488df8be977"
        ],
        [
            "exploit T.elements_remove; eauto.",
            "VernacExtend",
            "432f24cb3aab53b30997e79237af7ad3fcf54725"
        ],
        [
            "intros (l1 & l2 & P & Q).",
            "VernacExtend",
            "529b7565d976fa42f6da58e6b3b6edd63e5fbe92"
        ],
        [
            "rewrite P, Q.",
            "VernacExtend",
            "3b6c54c6a061c1fcf846ce33a4d2a6fb79b0de7c"
        ],
        [
            "rewrite ! app_length.",
            "VernacExtend",
            "1039b12e4d262380189e8c5c3c3559a59611196c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cardinal_set: forall x m y, T.get x m = None -> (cardinal m < cardinal (T.set x y m))%nat.",
            "VernacStartTheoremProof",
            "9b7898a6b9527a3242fe421417a011aff7e18a09"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "set (m' := T.set x y m).",
            "VernacExtend",
            "f707011653c4bdced5f39d175a8d32ee486a42a7"
        ],
        [
            "replace (cardinal m) with (cardinal (T.remove x m')).",
            "VernacExtend",
            "595650257e7ed8f1ecb46644097826c111cf0271"
        ],
        [
            "apply cardinal_remove with y.",
            "VernacExtend",
            "8b83738ab71a9a0b11ae838537be5ef535725a81"
        ],
        [
            "unfold m'; apply T.gss.",
            "VernacExtend",
            "2a1b27e671380d1dfcd8e3a32a3d3afc43e98a56"
        ],
        [
            "unfold cardinal.",
            "VernacExtend",
            "bc68d98c5d76cd12bc39bbbc7814d3b1a3923282"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply T.elements_extensional.",
            "VernacExtend",
            "1e9cf71fd1a7c0955047022d4bdc034dd42a328c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold m'.",
            "VernacExtend",
            "7a4740a7c8abda7b43e06f248b79706eef83dd0a"
        ],
        [
            "rewrite T.grspec, T.gsspec.",
            "VernacExtend",
            "35ce4b87ff1a74cf29e085abab6f2b01c4847b48"
        ],
        [
            "destruct (T.elt_eq i x); auto.",
            "VernacExtend",
            "d00199a350636f7b665d06a4957880532df7f339"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MEASURE.",
            "VernacEndSegment",
            "cf8969e9c41ea8267ef6e3284e52967cdbc990c6"
        ],
        [
            "Section FORALL_EXISTS.",
            "VernacBeginSection",
            "de24ecda6aee359ccdabb710932b834136c0c639"
        ],
        [
            "Variable A: Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Definition for_all (m: T.t A) (f: T.elt -> A -> bool) : bool := T.fold (fun b x a => b && f x a) m true.",
            "VernacDefinition",
            "e1cbc4ea0d256769cd18d079712752aec70cbc58"
        ],
        [
            "Lemma for_all_correct: forall m f, for_all m f = true <-> (forall x a, T.get x m = Some a -> f x a = true).",
            "VernacStartTheoremProof",
            "e7842577ce0966a1a5b322b136cb3237865a6bcc"
        ],
        [
            "intros m0 f.",
            "VernacExtend",
            "b84b467076dd96dadc5396c684dd9021ad55076d"
        ],
        [
            "unfold for_all.",
            "VernacExtend",
            "0bb39ab1b91f3808b48f6bca5ad1d718c7138eb1"
        ],
        [
            "apply fold_rec; intros.",
            "VernacExtend",
            "f80b5d85c7849302c3492854d947016a2d74d821"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "rewrite <- H in H2; auto.",
            "VernacExtend",
            "ef74c9420d6af5cd857a3821b8d6d24f03ac8102"
        ],
        [
            "rewrite H in H2; auto.",
            "VernacExtend",
            "321b0849ccde7fed8f8406b850f148923bbbd9d7"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "rewrite T.gempty in H0; congruence.",
            "VernacExtend",
            "ced2356b3a9d8f6e1512a53a4519a2d692512bd9"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "destruct (andb_prop _ _ H2).",
            "VernacExtend",
            "2a0c7d368df83e5735377f8a31180fe5a2270c11"
        ],
        [
            "rewrite T.gsspec in H3.",
            "VernacExtend",
            "0bd68fe9d29ca7406f0b93a53c02f615119d22a9"
        ],
        [
            "destruct (T.elt_eq x k).",
            "VernacExtend",
            "0c7d825de862449ebc1a157fc18eec52da092923"
        ],
        [
            "inv H3.",
            "VernacExtend",
            "bf389b6bd23f97715c74ed9eca5a780ee9e91e3c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply H1; auto.",
            "VernacExtend",
            "57fc44af14fcaf3758941b68060efcbab0060c55"
        ],
        [
            "apply andb_true_intro.",
            "VernacExtend",
            "568074f8ecdece0f16c49f5bea6e2c18016f95d3"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "rewrite T.gso; auto.",
            "VernacExtend",
            "eb6bef6de6b4e3df32a9cc6307b4ff143d3d7a98"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "apply T.gss.",
            "VernacExtend",
            "cea188cee4cada5fe79bb24fdeafea1167915915"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition exists_ (m: T.t A) (f: T.elt -> A -> bool) : bool := T.fold (fun b x a => b || f x a) m false.",
            "VernacDefinition",
            "88e08467963c42558c89b16f1122641ed3546181"
        ],
        [
            "Lemma exists_correct: forall m f, exists_ m f = true <-> (exists x a, T.get x m = Some a /\\ f x a = true).",
            "VernacStartTheoremProof",
            "59d404a312a31a9b15a77c391e964db3a4e5af25"
        ],
        [
            "intros m0 f.",
            "VernacExtend",
            "b84b467076dd96dadc5396c684dd9021ad55076d"
        ],
        [
            "unfold exists_.",
            "VernacExtend",
            "d2f748821143b5dc214f1dee23c213aab50935e0"
        ],
        [
            "apply fold_rec; intros.",
            "VernacExtend",
            "f80b5d85c7849302c3492854d947016a2d74d821"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "split; intros (x0 & a0 & P & Q); exists x0; exists a0; split; auto; congruence.",
            "VernacExtend",
            "d303be96d1675decb3ea8a1c6a23d2a5361e35c1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "destruct H as (x & a & P & Q).",
            "VernacExtend",
            "ddfcaa6409f7f8b69edecc9ba28bf6a717b22e1b"
        ],
        [
            "rewrite T.gempty in P; congruence.",
            "VernacExtend",
            "a71c1961911411d7994357f4c6944015521a9122"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "destruct (orb_true_elim _ _ H2).",
            "VernacExtend",
            "cf432ea944e3e8fcd309430aed104a0c70f44313"
        ],
        [
            "rewrite H1 in e.",
            "VernacExtend",
            "e2583ae3e179b9a8ce4203c026fcb9a41463c3bd"
        ],
        [
            "destruct e as (x1 & a1 & P & Q).",
            "VernacExtend",
            "bbd14bed1fbcf90f35dca3b1aa730e81238a9bec"
        ],
        [
            "exists x1; exists a1; split; auto.",
            "VernacExtend",
            "d6ce88e1a00f024b752c581570983a307b4a4d77"
        ],
        [
            "rewrite T.gso; auto.",
            "VernacExtend",
            "eb6bef6de6b4e3df32a9cc6307b4ff143d3d7a98"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "exists k; exists v; split; auto.",
            "VernacExtend",
            "17725ad66e1897c988093904a52e514c17de61a4"
        ],
        [
            "apply T.gss.",
            "VernacExtend",
            "cea188cee4cada5fe79bb24fdeafea1167915915"
        ],
        [
            "destruct H2 as (x1 & a1 & P & Q).",
            "VernacExtend",
            "a232b9731f6a42cb30953ec8d7d38e1e943eddcb"
        ],
        [
            "apply orb_true_intro.",
            "VernacExtend",
            "ac8aefcb6c0b29fc84a3bad60ec2908212680360"
        ],
        [
            "rewrite T.gsspec in P.",
            "VernacExtend",
            "7b85e9cfb0bd9a5da466ed79a688a9a982698400"
        ],
        [
            "destruct (T.elt_eq x1 k).",
            "VernacExtend",
            "053ed1d4f0447d46b95e3644478a3a2eb5043b4f"
        ],
        [
            "inv P.",
            "VernacExtend",
            "9db9e551d407fb52f890fa8275c215698a67094e"
        ],
        [
            "right; auto.",
            "VernacExtend",
            "1f0a695ab06b3950e6a7adf329d300b1f859fe9d"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "exists x1; exists a1; auto.",
            "VernacExtend",
            "d2b0b07bc50b4358fe7887b4feda2f4a274659b1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark exists_for_all: forall m f, exists_ m f = negb (for_all m (fun x a => negb (f x a))).",
            "VernacStartTheoremProof",
            "80d5a731393d89f440f1c52e601db93f0fc7c48a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold exists_, for_all.",
            "VernacExtend",
            "50b80ca1bf54ac69909b78aa09e5c46523e26310"
        ],
        [
            "rewrite ! T.fold_spec.",
            "VernacExtend",
            "67a10b7f6ffc7bd661b35e92bb87854026126bce"
        ],
        [
            "change false with (negb true).",
            "VernacExtend",
            "128901f4d1b729c33466cbb38fb88eda3471bf6b"
        ],
        [
            "generalize (T.elements m) true.",
            "VernacExtend",
            "1aa66482369ed11c8954f7349b79c52236111d13"
        ],
        [
            "induction l; simpl; intros.",
            "VernacExtend",
            "34e9ea5965da389dfe8faf53c8ea4965d4fdcc22"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite <- IHl.",
            "VernacExtend",
            "d08c434fe9e4c4b4cc3e1701a922431b2b99a42a"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "destruct b; destruct (f (fst a) (snd a)); reflexivity.",
            "VernacExtend",
            "dfcd23640452f109bc6b5dca55719276c38d9d8d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark for_all_exists: forall m f, for_all m f = negb (exists_ m (fun x a => negb (f x a))).",
            "VernacStartTheoremProof",
            "808f630236e6a50c1e72fe5e3e73ed75af59ca59"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold exists_, for_all.",
            "VernacExtend",
            "50b80ca1bf54ac69909b78aa09e5c46523e26310"
        ],
        [
            "rewrite ! T.fold_spec.",
            "VernacExtend",
            "67a10b7f6ffc7bd661b35e92bb87854026126bce"
        ],
        [
            "change true with (negb false).",
            "VernacExtend",
            "18a942df4a07dbf18345ef51141f1527de63e701"
        ],
        [
            "generalize (T.elements m) false.",
            "VernacExtend",
            "a824b7258b21b61da5b0b1be09389faa463471b7"
        ],
        [
            "induction l; simpl; intros.",
            "VernacExtend",
            "34e9ea5965da389dfe8faf53c8ea4965d4fdcc22"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite <- IHl.",
            "VernacExtend",
            "d08c434fe9e4c4b4cc3e1701a922431b2b99a42a"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "destruct b; destruct (f (fst a) (snd a)); reflexivity.",
            "VernacExtend",
            "dfcd23640452f109bc6b5dca55719276c38d9d8d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma for_all_false: forall m f, for_all m f = false <-> (exists x a, T.get x m = Some a /\\ f x a = false).",
            "VernacStartTheoremProof",
            "4ef817c770b1cc963e03aaaff29d76651a4589ed"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite for_all_exists.",
            "VernacExtend",
            "f7bf9a61228d11b83df9b36bdde00b8cad1d0ce9"
        ],
        [
            "rewrite negb_false_iff.",
            "VernacExtend",
            "b6c9bcef13f76c689a8d91e22fc8f796fde932b6"
        ],
        [
            "rewrite exists_correct.",
            "VernacExtend",
            "666ae37950736a53f76fc18fc795cfd2cc0970d3"
        ],
        [
            "split; intros (x & a & P & Q); exists x; exists a; split; auto.",
            "VernacExtend",
            "7d331f54c05adab65e8b15991e999b6482a44e22"
        ],
        [
            "rewrite negb_true_iff in Q.",
            "VernacExtend",
            "b473ad288bf1c5bc351887eb02c73ba8571d2bdc"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite Q; auto.",
            "VernacExtend",
            "4e72a38431e485ccf0626d554797544fceb80c6e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exists_false: forall m f, exists_ m f = false <-> (forall x a, T.get x m = Some a -> f x a = false).",
            "VernacStartTheoremProof",
            "3449860274b9a2be473262154c49ecc171584cc0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite exists_for_all.",
            "VernacExtend",
            "4cc327b8c0b77bf9510a497048a9e51ca64a2c13"
        ],
        [
            "rewrite negb_false_iff.",
            "VernacExtend",
            "b6c9bcef13f76c689a8d91e22fc8f796fde932b6"
        ],
        [
            "rewrite for_all_correct.",
            "VernacExtend",
            "1e24fb86d3dac0cf27df1ba8b0bfa82340488f86"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "apply H in H0.",
            "VernacExtend",
            "3b12de80516a2aa60cdde675feacb2e18e944fd4"
        ],
        [
            "rewrite negb_true_iff in H0.",
            "VernacExtend",
            "a89ba6968f0d98ea575d8bff3ae45f6756eec2c9"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite H; auto.",
            "VernacExtend",
            "3e25713af8eaa76cddf9287af10d66733da2ee16"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End FORALL_EXISTS.",
            "VernacEndSegment",
            "69745d908b4d0cfcad22020400e6da44c0ff53f8"
        ],
        [
            "Section BOOLEAN_EQUALITY.",
            "VernacBeginSection",
            "4e208269fa90d164ea3fc345cd644e61a0671fbb"
        ],
        [
            "Variable A: Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Variable beqA: A -> A -> bool.",
            "VernacAssumption",
            "65a846f2df9ce53c9815ea88a0fe13c961d11903"
        ],
        [
            "Theorem beq_false: forall m1 m2, T.beq beqA m1 m2 = false <-> exists x, match T.get x m1, T.get x m2 with | None, None => False | Some a1, Some a2 => beqA a1 a2 = false | _, _ => True end.",
            "VernacStartTheoremProof",
            "e164eb267d5a182360385ec86b377b10c5419291"
        ],
        [
            "intros; split; intros.",
            "VernacExtend",
            "c2ba330b9c2c5e22fd554cd9ccb5c9ade0d6123e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "set (p1 := fun x a1 => match T.get x m2 with None => false | Some a2 => beqA a1 a2 end).",
            "VernacExtend",
            "c20987396185a369ed89895218c97ebffc0619b3"
        ],
        [
            "set (p2 := fun x a2 => match T.get x m1 with None => false | Some a1 => beqA a1 a2 end).",
            "VernacExtend",
            "122ad9af040d2ba2e1249c84e7a6d54ea2b139c9"
        ],
        [
            "destruct (for_all m1 p1) eqn:F1; [destruct (for_all m2 p2) eqn:F2 | idtac].",
            "VernacExtend",
            "417c74cdc617f4d639088806a6cd4cebc0caf947"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "cut (T.beq beqA m1 m2 = true).",
            "VernacExtend",
            "3d5687650a2f27f45844b8826d3515922da680e4"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "rewrite for_all_correct in *.",
            "VernacExtend",
            "34849da9ee8c704aa508de3a492b9794fb8db0b0"
        ],
        [
            "rewrite T.beq_correct; intros.",
            "VernacExtend",
            "8308a5d8d606d5351d76e87d8e50dd4512084d91"
        ],
        [
            "destruct (T.get x m1) as [a1|] eqn:X1.",
            "VernacExtend",
            "b110e67fb6afd9330522eb157c2e8f57c3396795"
        ],
        [
            "generalize (F1 _ _ X1).",
            "VernacExtend",
            "ab58c63e55ff61ddfacbf78466af8b418196b4de"
        ],
        [
            "unfold p1.",
            "VernacExtend",
            "84fa98e49a7ef63190d6249246c56b352c8f22f4"
        ],
        [
            "destruct (T.get x m2); congruence.",
            "VernacExtend",
            "5d8cdf8ec8224c4bd44567a0fd25ad2e05f29b13"
        ],
        [
            "destruct (T.get x m2) as [a2|] eqn:X2; auto.",
            "VernacExtend",
            "131e17a909f20d7b700bbcad733a681a9ad0e915"
        ],
        [
            "generalize (F2 _ _ X2).",
            "VernacExtend",
            "f44b777f2e2b34f2714786773a3ef9d7fd21ca45"
        ],
        [
            "unfold p2.",
            "VernacExtend",
            "8bf838445dbc62e28128e0ac9de47960f238826a"
        ],
        [
            "rewrite X1.",
            "VernacExtend",
            "13ca7b87e20d3729a2fe77aa4906bf4a9c0a9366"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite for_all_false in F2.",
            "VernacExtend",
            "1cb522aa9748860c77f2b6bd16313b5fa1d7abda"
        ],
        [
            "destruct F2 as (x & a & P & Q).",
            "VernacExtend",
            "bb5cdd6f206de349e9e75d4867a2179ff927c10a"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "rewrite P.",
            "VernacExtend",
            "a68444f3ff5a99dd68a5269da7bfb78567ba4ea2"
        ],
        [
            "unfold p2 in Q.",
            "VernacExtend",
            "5467cf392b5bcdefe923e99c3afb343c68a1dccd"
        ],
        [
            "destruct (T.get x m1); auto.",
            "VernacExtend",
            "f4d4c8df286a256f948977f2f93421347dccc2e0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite for_all_false in F1.",
            "VernacExtend",
            "7203b9a3ee29f8b7ebb815679a6572fd21c8b6aa"
        ],
        [
            "destruct F1 as (x & a & P & Q).",
            "VernacExtend",
            "c53cebc160918b1b88cd75f8c95af7188ad711a2"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "rewrite P.",
            "VernacExtend",
            "a68444f3ff5a99dd68a5269da7bfb78567ba4ea2"
        ],
        [
            "unfold p1 in Q.",
            "VernacExtend",
            "3b666026eb689722f150286844d4fa347ef9d704"
        ],
        [
            "destruct (T.get x m2); auto.",
            "VernacExtend",
            "c11fdf99351959897aeea621ff645b67d4d34d4e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct H as [x P].",
            "VernacExtend",
            "e6dd9e9149c7d80075027950c4fb7449d5a68f00"
        ],
        [
            "destruct (T.beq beqA m1 m2) eqn:E; auto.",
            "VernacExtend",
            "4582e6e4bc82eb470bc7a92652e388833a553ff4"
        ],
        [
            "rewrite T.beq_correct in E.",
            "VernacExtend",
            "72b967f5595ef62368af09c8b59b3d375da31afa"
        ],
        [
            "generalize (E x).",
            "VernacExtend",
            "673a1c4222d77198c60425887d397b39bd5336d2"
        ],
        [
            "destruct (T.get x m1); destruct (T.get x m2); tauto || congruence.",
            "VernacExtend",
            "116a1642ebc0270417fd530205c009fa66caf62f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End BOOLEAN_EQUALITY.",
            "VernacEndSegment",
            "d54df8dcdf0127fe7128c634d5d6d028c35be04b"
        ],
        [
            "Section EXTENSIONAL_EQUALITY.",
            "VernacBeginSection",
            "02c76c78801f123dea33c6881f68228eec929209"
        ],
        [
            "Variable A: Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Variable eqA: A -> A -> Prop.",
            "VernacAssumption",
            "5e2d6c51249ce5c5fd2be5d6cc2c2d20b58b84e4"
        ],
        [
            "Hypothesis eqAeq: Equivalence eqA.",
            "VernacAssumption",
            "8943ddf434602ffb911c0248119363e6c14bd5d3"
        ],
        [
            "Definition Equal (m1 m2: T.t A) : Prop := forall x, match T.get x m1, T.get x m2 with | None, None => True | Some a1, Some a2 => a1 === a2 | _, _ => False end.",
            "VernacDefinition",
            "a3022d2fd202b12ffc1da5b9bba719f8c1e4891a"
        ],
        [
            "Lemma Equal_refl: forall m, Equal m m.",
            "VernacStartTheoremProof",
            "eae0d10fa143f737da566f0cf2131e8ce1f425c6"
        ],
        [
            "intros; red; intros.",
            "VernacExtend",
            "51aeefe3bf0889d494d662b4f3305dd8bbc97324"
        ],
        [
            "destruct (T.get x m); auto.",
            "VernacExtend",
            "91736642c9f03202b7e6f14c1a7f960f929f49db"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Equal_sym: forall m1 m2, Equal m1 m2 -> Equal m2 m1.",
            "VernacStartTheoremProof",
            "1041c64bcebaf23414ab0bced0d1bc68cf68f36b"
        ],
        [
            "intros; red; intros.",
            "VernacExtend",
            "51aeefe3bf0889d494d662b4f3305dd8bbc97324"
        ],
        [
            "generalize (H x).",
            "VernacExtend",
            "843b06d01bb5b75d1b3332a7cda55cfef30c3395"
        ],
        [
            "destruct (T.get x m1); destruct (T.get x m2); auto.",
            "VernacExtend",
            "10602140feb999072f82bbfd6c43ca7183c35964"
        ],
        [
            "intros; symmetry; auto.",
            "VernacExtend",
            "ffbc23a481940670a0a1c39e89e6f238f4827842"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Equal_trans: forall m1 m2 m3, Equal m1 m2 -> Equal m2 m3 -> Equal m1 m3.",
            "VernacStartTheoremProof",
            "f1c33d108c5e1f605268812e8eb01ad8bb626549"
        ],
        [
            "intros; red; intros.",
            "VernacExtend",
            "51aeefe3bf0889d494d662b4f3305dd8bbc97324"
        ],
        [
            "generalize (H x) (H0 x).",
            "VernacExtend",
            "5b7016ac555dcfca78fa433ca89ce81321fb3c64"
        ],
        [
            "destruct (T.get x m1); destruct (T.get x m2); try tauto; destruct (T.get x m3); try tauto.",
            "VernacExtend",
            "8398c0009d99ad71bc843961f88794e25666d05c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "transitivity a0; auto.",
            "VernacExtend",
            "18f8aa4ea7ca97e1437d55899c2cc13c7faa64b9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance Equal_Equivalence : Equivalence Equal := { Equivalence_Reflexive := Equal_refl; Equivalence_Symmetric := Equal_sym; Equivalence_Transitive := Equal_trans }.",
            "VernacInstance",
            "8ec456c880ab1bd91eed945293f5a7365fac0f49"
        ],
        [
            "Hypothesis eqAdec: EqDec A eqA.",
            "VernacAssumption",
            "383fa8715f123b22aef2327f113e8b42d85a1acb"
        ],
        [
            "Program Definition Equal_dec (m1 m2: T.t A) : { m1 === m2 } + { m1 =/= m2 } := match T.beq (fun a1 a2 => proj_sumbool (a1 == a2)) m1 m2 with | true => left _ | false => right _ end.",
            "VernacDefinition",
            "e575eacbe5d20161299b582a3f14234026214aeb"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "rename Heq_anonymous into B.",
            "VernacExtend",
            "8eb51706b5848f1108e580d31b3b1f60e1123fe5"
        ],
        [
            "symmetry in B.",
            "VernacExtend",
            "d9dab82b41a467f9241773d6f7820feac7da1223"
        ],
        [
            "rewrite T.beq_correct in B.",
            "VernacExtend",
            "7328a443c008f2902034c42ab1feb15121d52be2"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "generalize (B x).",
            "VernacExtend",
            "81fb0b40a5b73b1ccf33453b43d3304e9371abfe"
        ],
        [
            "destruct (T.get x m1); destruct (T.get x m2); auto.",
            "VernacExtend",
            "10602140feb999072f82bbfd6c43ca7183c35964"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply proj_sumbool_true; eauto.",
            "VernacExtend",
            "a33be217d620004d8efbcff5e8cceb9b2bbf4498"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "assert (T.beq (fun a1 a2 => proj_sumbool (a1 == a2)) m1 m2 = true).",
            "VernacExtend",
            "89fd3f941a720b7efa847e38348952cb65b306a8"
        ],
        [
            "apply T.beq_correct; intros.",
            "VernacExtend",
            "5908c91e1c0a3babbeaab4281223057bb3493b7e"
        ],
        [
            "generalize (H x).",
            "VernacExtend",
            "843b06d01bb5b75d1b3332a7cda55cfef30c3395"
        ],
        [
            "destruct (T.get x m1); destruct (T.get x m2); try tauto.",
            "VernacExtend",
            "6f65841e819fe0c9c7c3db6a2723e6598c71f1cb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply proj_sumbool_is_true; auto.",
            "VernacExtend",
            "2f8991f36c089628b74263bf757af6d782a8a661"
        ],
        [
            "unfold equiv, complement in H0.",
            "VernacExtend",
            "368652671ee9ba500087252555442629a3d5a819"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance Equal_EqDec : EqDec (T.t A) Equal := Equal_dec.",
            "VernacInstance",
            "5d9d820082db83f820630b59b9c4810ea6332754"
        ],
        [
            "End EXTENSIONAL_EQUALITY.",
            "VernacEndSegment",
            "7e213fe6015c53e41449da60f5b2436942c83de7"
        ],
        [
            "Section OF_LIST.",
            "VernacBeginSection",
            "fec65b2d89ddba2ba70a3990104888d3b80987ab"
        ],
        [
            "Variable A: Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Let f := fun (m: T.t A) (k_v: T.elt * A) => T.set (fst k_v) (snd k_v) m.",
            "VernacDefinition",
            "915b3b0ace841e1f23a207e68ffd9f662f86c552"
        ],
        [
            "Definition of_list (l: list (T.elt * A)) : T.t A := List.fold_left f l (T.empty _).",
            "VernacDefinition",
            "f99fdcf46cd224f09de02864da676ca51704e887"
        ],
        [
            "Lemma in_of_list: forall l k v, T.get k (of_list l) = Some v -> In (k, v) l.",
            "VernacStartTheoremProof",
            "d6749213f601418ee44bbd32d7d63da53aa648e7"
        ],
        [
            "assert (REC: forall k v l m, T.get k (fold_left f l m) = Some v -> In (k, v) l \\/ T.get k m = Some v).",
            "VernacExtend",
            "adcccae517c3858ecba1748f77edb8caea2319d8"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "induction l as [ | [k1 v1] l]; simpl; intros.",
            "VernacExtend",
            "957f5945bd4be6c3fadd1f96e1e81059cb75472e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply IHl in H.",
            "VernacExtend",
            "026ffd1ae8feb4aa22a4c7244c1588d60257424f"
        ],
        [
            "unfold f in H.",
            "VernacExtend",
            "1956e51b8801fd48b7fa2b75c14ded009e410f7f"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "rewrite T.gsspec in H.",
            "VernacExtend",
            "969d719b42a74446db65e0b6966a4ab0bc4c0e47"
        ],
        [
            "destruct H; auto.",
            "VernacExtend",
            "95ae427bd4e09a5f31c59184b718811a23ecb36f"
        ],
        [
            "destruct (T.elt_eq k k1).",
            "VernacExtend",
            "a8f680bedaee857e3e279f2f32f95e0809d4cc27"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply REC in H.",
            "VernacExtend",
            "2fce8b23c49588dd4336f6612538dc4ff18a6698"
        ],
        [
            "rewrite T.gempty in H.",
            "VernacExtend",
            "ec17eef1fbeca4a6558730a164edd9483b2eb34b"
        ],
        [
            "intuition congruence.",
            "VernacExtend",
            "2cba3542847e3f4ea52f3f62375adc6e8f8f04bc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma of_list_dom: forall l k, In k (map fst l) -> exists v, T.get k (of_list l) = Some v.",
            "VernacStartTheoremProof",
            "9d570a30b9b5c55cb2b67d51d573e4a2b1d69de7"
        ],
        [
            "assert (REC: forall k l m, In k (map fst l) \\/ (exists v, T.get k m = Some v) -> exists v, T.get k (fold_left f l m) = Some v).",
            "VernacExtend",
            "dda1e97554389a7d04578d7d08650ee24066ca56"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "induction l as [ | [k1 v1] l]; simpl; intros.",
            "VernacExtend",
            "957f5945bd4be6c3fadd1f96e1e81059cb75472e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply IHl.",
            "VernacExtend",
            "af412c6009bba78f939aa53ab07dcd1baaf5888b"
        ],
        [
            "unfold f; rewrite T.gsspec.",
            "VernacExtend",
            "4501addba3f66165b814b84cc19d770160ab155f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (T.elt_eq k k1).",
            "VernacExtend",
            "a8f680bedaee857e3e279f2f32f95e0809d4cc27"
        ],
        [
            "right; econstructor; eauto.",
            "VernacExtend",
            "d3e21c6b3c5c8a3711dd6fbf700dc69b4a8bdcc8"
        ],
        [
            "intuition congruence.",
            "VernacExtend",
            "2cba3542847e3f4ea52f3f62375adc6e8f8f04bc"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply REC.",
            "VernacExtend",
            "e733722808ad45bfc33c10352d0508158cb70b5f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark of_list_unchanged: forall k l m, ~In k (map fst l) -> T.get k (List.fold_left f l m) = T.get k m.",
            "VernacStartTheoremProof",
            "11ae6dd81cd4546724f72b77306686c4eb271805"
        ],
        [
            "induction l as [ | [k1 v1] l]; simpl; intros.",
            "VernacExtend",
            "957f5945bd4be6c3fadd1f96e1e81059cb75472e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite IHl by tauto.",
            "VernacExtend",
            "57520e04f83de6746b1a4b62c9b6bf09a568588c"
        ],
        [
            "unfold f; apply T.gso; intuition auto.",
            "VernacExtend",
            "dff0a632877140c5963900c2ca9e8d58d73614c2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma of_list_unique: forall k v l1 l2, ~In k (map fst l2) -> T.get k (of_list (l1 ++ (k, v) :: l2)) = Some v.",
            "VernacStartTheoremProof",
            "951571fc72df8c7e985f93eb9384523c5c643c22"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold of_list.",
            "VernacExtend",
            "823e2939e746d11b037fa582e82041510555b05e"
        ],
        [
            "rewrite fold_left_app.",
            "VernacExtend",
            "94bd7866d849f1a79f70458c9064c0a7877defe5"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite of_list_unchanged by auto.",
            "VernacExtend",
            "1d17de4ab1328564fdeb8bff921e4010d39ca77e"
        ],
        [
            "unfold f; apply T.gss.",
            "VernacExtend",
            "d0c090688322401534fc6487b14397d744d22c70"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma of_list_norepet: forall l k v, list_norepet (map fst l) -> In (k, v) l -> T.get k (of_list l) = Some v.",
            "VernacStartTheoremProof",
            "c44fd7cf95fefdf80d6afe9591b91a99cc3d657e"
        ],
        [
            "assert (REC: forall k v l m, list_norepet (map fst l) -> In (k, v) l -> T.get k (fold_left f l m) = Some v).",
            "VernacExtend",
            "d1b2a6f625e21c027cb12c6dc29909210148cbd7"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "induction l as [ | [k1 v1] l]; simpl; intros.",
            "VernacExtend",
            "957f5945bd4be6c3fadd1f96e1e81059cb75472e"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "rewrite of_list_unchanged by auto.",
            "VernacExtend",
            "1d17de4ab1328564fdeb8bff921e4010d39ca77e"
        ],
        [
            "apply T.gss.",
            "VernacExtend",
            "cea188cee4cada5fe79bb24fdeafea1167915915"
        ],
        [
            "apply IHl; auto.",
            "VernacExtend",
            "e138dde1a62d902d35fbbfcb71bf2b52acaced18"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intros; apply REC; auto.",
            "VernacExtend",
            "2cf6b89f65286f391fa687ed5286247ba49d57d0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma of_list_elements: forall m k, T.get k (of_list (T.elements m)) = T.get k m.",
            "VernacStartTheoremProof",
            "3347e26a40ea3c21e833b7f893cb3c0cb8fdb7ee"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (T.get k m) as [v|] eqn:M.",
            "VernacExtend",
            "3c5920a9141beb49c6ae9f0525abdf7ac77c9b30"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply of_list_norepet.",
            "VernacExtend",
            "ccde4f933d71a070e9fc76d15952eb687338b197"
        ],
        [
            "apply T.elements_keys_norepet.",
            "VernacExtend",
            "d3ae6c0fb5b09836ee8d2df3ef670e385b6ddca1"
        ],
        [
            "apply T.elements_correct; auto.",
            "VernacExtend",
            "ac99914a9c83c67ec6a0f00797e3e38b83a26a61"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (T.get k (of_list (T.elements m))) as [v|] eqn:M'; auto.",
            "VernacExtend",
            "9bc703e28b1a2cca9af3c25e7c8568850cfda9cc"
        ],
        [
            "apply in_of_list in M'.",
            "VernacExtend",
            "45cd8147438e6fe9715167841e420b172e377df7"
        ],
        [
            "apply T.elements_complete in M'.",
            "VernacExtend",
            "3ca445ffd185eeeee6b5a692d578629f4fe3840f"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End OF_LIST.",
            "VernacEndSegment",
            "2fa0afd1e3ebb61adba109cddb7d239fb2917df5"
        ],
        [
            "Lemma of_list_related: forall (A B: Type) (R: A -> B -> Prop) k l1 l2, list_forall2 (fun ka kb => fst ka = fst kb /\\ R (snd ka) (snd kb)) l1 l2 -> option_rel R (T.get k (of_list l1)) (T.get k (of_list l2)).",
            "VernacStartTheoremProof",
            "178db3508d9730af2248d1f0c8adc406906f4481"
        ],
        [
            "intros until k.",
            "VernacExtend",
            "6564a1db6a1ad429865a24b3c51af94e97f807b5"
        ],
        [
            "unfold of_list.",
            "VernacExtend",
            "823e2939e746d11b037fa582e82041510555b05e"
        ],
        [
            "set (R' := fun ka kb => fst ka = fst kb /\\ R (snd ka) (snd kb)).",
            "VernacExtend",
            "ecf484742072cd5cf66c4221b7aedfeae191d1c0"
        ],
        [
            "set (fa := fun (m : T.t A) (k_v : T.elt * A) => T.set (fst k_v) (snd k_v) m).",
            "VernacExtend",
            "5a65a039f8bd668a2c650cf55856c78479274922"
        ],
        [
            "set (fb := fun (m : T.t B) (k_v : T.elt * B) => T.set (fst k_v) (snd k_v) m).",
            "VernacExtend",
            "78714943fd19b55b4d37e5bf1215b87d94e506e3"
        ],
        [
            "assert (REC: forall l1 l2, list_forall2 R' l1 l2 -> forall m1 m2, option_rel R (T.get k m1) (T.get k m2) -> option_rel R (T.get k (fold_left fa l1 m1)) (T.get k (fold_left fb l2 m2))).",
            "VernacExtend",
            "ac94a09092aaa8faf43c7a0aa611e80702a206d6"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "induction 1; intros; simpl.",
            "VernacExtend",
            "70da583d23ed4dbe0b45fe3f9b4af75a02266538"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply IHlist_forall2.",
            "VernacExtend",
            "8e8cbe9a1265d03bc1d588f1cfa9661e7120a304"
        ],
        [
            "unfold fa, fb.",
            "VernacExtend",
            "a831814099a2a4c08e1eff37c7a351f32c7fbe21"
        ],
        [
            "rewrite ! T.gsspec.",
            "VernacExtend",
            "0573cdae5262637f8e0022553d3056d13dd437f6"
        ],
        [
            "destruct H as [E F].",
            "VernacExtend",
            "de7b25111cc1fbacc1cb076d8e48102c27e39b5e"
        ],
        [
            "rewrite E.",
            "VernacExtend",
            "304079e57d3d6c0912193a26e70d779c9e1768b9"
        ],
        [
            "destruct (T.elt_eq k (fst b1)).",
            "VernacExtend",
            "3b2778c7c4934abd79d831cb6dc3cb5212830bc0"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply REC; auto.",
            "VernacExtend",
            "67fffa8696e7d3397ac425b80c19f9f471b3f5a8"
        ],
        [
            "rewrite ! T.gempty.",
            "VernacExtend",
            "4334edce3460ebe8346ef0cfda859d77680dfb6e"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Tree_Properties.",
            "VernacEndSegment",
            "77d90ee7a3a89bf04d8daafb3163f1ead2faa66f"
        ],
        [
            "Module PTree_Properties := Tree_Properties(PTree).",
            "VernacDefineModule",
            "cc6b887f0fc048d037ed73ce7881317dafa14120"
        ],
        [
            "Notation \"a ! b\" := (PTree.get b a) (at level 1).",
            "VernacNotation",
            "d27f643bca60ef2d98d11e58055e67cef031ac6d"
        ],
        [
            "Notation \"a !! b\" := (PMap.get b a) (at level 1).",
            "VernacNotation",
            "ede0394044132a79e27eebf7ec698303f24e4587"
        ]
    ],
    "proofs": [
        {
            "name": "gempty",
            "line_nb": 66,
            "steps": [
                {
                    "command": [
                        "induction i; simpl; auto.",
                        "VernacExtend",
                        "366f1f85db4267caa195570da4c177395f827ad8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gss",
            "line_nb": 69,
            "steps": [
                {
                    "command": [
                        "induction i; destruct m; simpl; auto.",
                        "VernacExtend",
                        "bbfee31955a1dd8e41105e0dbfa067ef740b0b91"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gleaf",
            "line_nb": 72,
            "steps": [
                {
                    "command": [
                        "exact gempty.",
                        "VernacExtend",
                        "2982b0da893a5cbe933bf6f9fa1770cb65764c66"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gso",
            "line_nb": 75,
            "steps": [
                {
                    "command": [
                        "induction i; intros; destruct j; destruct m; simpl; try rewrite <- (gleaf A i); auto; try apply IHi; congruence.",
                        "VernacExtend",
                        "362b7cd05b8aece5c3ec0220b47b0d104605a273"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gsspec",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (peq i j); [ rewrite e; apply gss | apply gso; auto ].",
                        "VernacExtend",
                        "53c7afe6e17a70ea8f2f1ee8f1f67329b589bebb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gsident",
            "line_nb": 82,
            "steps": [
                {
                    "command": [
                        "induction i; intros; destruct m; simpl; simpl in H; try congruence.",
                        "VernacExtend",
                        "40b69593932bdd0e2421cc311cab60765333f9f2"
                    ]
                },
                {
                    "command": [
                        "rewrite (IHi m2 v H); congruence.",
                        "VernacExtend",
                        "1b116983dd6f14385de0b86e5d5a3ad0827058d6"
                    ]
                },
                {
                    "command": [
                        "rewrite (IHi m1 v H); congruence.",
                        "VernacExtend",
                        "9d2451bb1bed4f2b5e2b9525deb42850198f219b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "set2",
            "line_nb": 87,
            "steps": [
                {
                    "command": [
                        "induction i; intros; destruct m; simpl; try (rewrite IHi); auto.",
                        "VernacExtend",
                        "b976e52fc95169356c0aec85f9d0a54f71e41efb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rleaf",
            "line_nb": 90,
            "steps": [
                {
                    "command": [
                        "destruct i; simpl; auto.",
                        "VernacExtend",
                        "68f1ada8e7ae3853d0bcf6c9ce8dfcaf8bef3fc3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "grs",
            "line_nb": 93,
            "steps": [
                {
                    "command": [
                        "induction i; destruct m.",
                        "VernacExtend",
                        "ac3734855481e2e369ecf1e1081a56e78ee6d72d"
                    ]
                },
                {
                    "command": [
                        "simpl; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "destruct m1; destruct o; destruct m2 as [ | ll oo rr]; simpl; auto.",
                        "VernacExtend",
                        "4651cb97cc8dc0443d985c4334c2aef81d563fec"
                    ]
                },
                {
                    "command": [
                        "rewrite (rleaf A i); auto.",
                        "VernacExtend",
                        "61e0ff20a47cb07201b925381445d00020f7edd6"
                    ]
                },
                {
                    "command": [
                        "cut (get i (remove i (Node ll oo rr)) = None).",
                        "VernacExtend",
                        "d17b80b0f869df7b12c04868e45ebf6fab5d7e2e"
                    ]
                },
                {
                    "command": [
                        "destruct (remove i (Node ll oo rr)); auto; apply IHi.",
                        "VernacExtend",
                        "1647fad62ac2fd365a4a1caf2321195920e1ca07"
                    ]
                },
                {
                    "command": [
                        "apply IHi.",
                        "VernacExtend",
                        "6d0640aefb702ff5a66a35d1980233055f0d9211"
                    ]
                },
                {
                    "command": [
                        "simpl; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "destruct m1 as [ | ll oo rr]; destruct o; destruct m2; simpl; auto.",
                        "VernacExtend",
                        "834eb3d11cfec5971d41e0804ff5f602a90e4691"
                    ]
                },
                {
                    "command": [
                        "rewrite (rleaf A i); auto.",
                        "VernacExtend",
                        "61e0ff20a47cb07201b925381445d00020f7edd6"
                    ]
                },
                {
                    "command": [
                        "cut (get i (remove i (Node ll oo rr)) = None).",
                        "VernacExtend",
                        "d17b80b0f869df7b12c04868e45ebf6fab5d7e2e"
                    ]
                },
                {
                    "command": [
                        "destruct (remove i (Node ll oo rr)); auto; apply IHi.",
                        "VernacExtend",
                        "1647fad62ac2fd365a4a1caf2321195920e1ca07"
                    ]
                },
                {
                    "command": [
                        "apply IHi.",
                        "VernacExtend",
                        "6d0640aefb702ff5a66a35d1980233055f0d9211"
                    ]
                },
                {
                    "command": [
                        "simpl; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "destruct m1; destruct m2; simpl; auto.",
                        "VernacExtend",
                        "b89f662cde710a4651097c8ede9b2abeee20239e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gro",
            "line_nb": 110,
            "steps": [
                {
                    "command": [
                        "induction i; intros; destruct j; destruct m; try rewrite (rleaf A (xI j)); try rewrite (rleaf A (xO j)); try rewrite (rleaf A 1); auto; destruct m1; destruct o; destruct m2; simpl; try apply IHi; try congruence; try rewrite (rleaf A j); auto; try rewrite (gleaf A i); auto.",
                        "VernacExtend",
                        "89d2d4f99134e89eee81a9adde3e18655c3dd1dc"
                    ]
                },
                {
                    "command": [
                        "cut (get i (remove j (Node m2_1 o m2_2)) = get i (Node m2_1 o m2_2)); [ destruct (remove j (Node m2_1 o m2_2)); try rewrite (gleaf A i); auto | apply IHi; congruence ].",
                        "VernacExtend",
                        "54d5cb00c98238cb5af28381f5b4f5e59ced163e"
                    ]
                },
                {
                    "command": [
                        "destruct (remove j (Node m1_1 o0 m1_2)); simpl; try rewrite (gleaf A i); auto.",
                        "VernacExtend",
                        "04ec648973d24c869a6bce59d55a04018c4e65f4"
                    ]
                },
                {
                    "command": [
                        "destruct (remove j (Node m2_1 o m2_2)); simpl; try rewrite (gleaf A i); auto.",
                        "VernacExtend",
                        "21df0cd369a5834bff49ef34e349e7f74ac2de0a"
                    ]
                },
                {
                    "command": [
                        "cut (get i (remove j (Node m1_1 o0 m1_2)) = get i (Node m1_1 o0 m1_2)); [ destruct (remove j (Node m1_1 o0 m1_2)); try rewrite (gleaf A i); auto | apply IHi; congruence ].",
                        "VernacExtend",
                        "cbf1825b44d43cb1f9662d5e474501b75d97dcbe"
                    ]
                },
                {
                    "command": [
                        "destruct (remove j (Node m2_1 o m2_2)); simpl; try rewrite (gleaf A i); auto.",
                        "VernacExtend",
                        "21df0cd369a5834bff49ef34e349e7f74ac2de0a"
                    ]
                },
                {
                    "command": [
                        "destruct (remove j (Node m1_1 o0 m1_2)); simpl; try rewrite (gleaf A i); auto.",
                        "VernacExtend",
                        "04ec648973d24c869a6bce59d55a04018c4e65f4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "grspec",
            "line_nb": 119,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (elt_eq i j).",
                        "VernacExtend",
                        "3eac535c041cf182fd8a403809d6d05dfc2251d6"
                    ]
                },
                {
                    "command": [
                        "subst j.",
                        "VernacExtend",
                        "4959fd5cfffa27452c2d688b999587736fe34624"
                    ]
                },
                {
                    "command": [
                        "apply grs.",
                        "VernacExtend",
                        "0b6c0b5bd4c5756219ed19dbd77f2b0bac8543da"
                    ]
                },
                {
                    "command": [
                        "apply gro; auto.",
                        "VernacExtend",
                        "3110d5e20083580b3a60a271785ca0b7c3b2b59f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bempty_correct",
            "line_nb": 131,
            "steps": [
                {
                    "command": [
                        "induction m; simpl.",
                        "VernacExtend",
                        "8eeca9e02ca7b585e952baf1eea0278de04f5480"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "apply gleaf.",
                        "VernacExtend",
                        "20dbe8e22842f11163223cbdd653cbbef85e51c3"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "destruct o; split; intros.",
                        "VernacExtend",
                        "321a71f40d666ec69a4ff83e3aa6b36794c2f8a1"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "generalize (H xH); simpl; congruence.",
                        "VernacExtend",
                        "9765827b96906c12c2aee417b39f540e16f5faa7"
                    ]
                },
                {
                    "command": [
                        "destruct (andb_prop _ _ H).",
                        "VernacExtend",
                        "ae63e31404e6cab2c204a5b7e41f9ee5f3df240a"
                    ]
                },
                {
                    "command": [
                        "rewrite IHm1 in H0.",
                        "VernacExtend",
                        "bdc57f41c7e19deafebaf43d0bc014883a54bb22"
                    ]
                },
                {
                    "command": [
                        "rewrite IHm2 in H1.",
                        "VernacExtend",
                        "da40ce0aeb1ed3047c2cdbb396bd20af1ef926d5"
                    ]
                },
                {
                    "command": [
                        "destruct x; simpl; auto.",
                        "VernacExtend",
                        "6333e7c7dbfdf0572110d1909ab0948c7e960947"
                    ]
                },
                {
                    "command": [
                        "apply andb_true_intro; split.",
                        "VernacExtend",
                        "5f6db070ea238a8793b50319e6f4900c2a6b5332"
                    ]
                },
                {
                    "command": [
                        "apply IHm1.",
                        "VernacExtend",
                        "bdc0cfe8c8aaad61d155f8c31e1f49ee7a8145ee"
                    ]
                },
                {
                    "command": [
                        "intros; apply (H (xO x)).",
                        "VernacExtend",
                        "6db29055492bec5c173f4c4114389d6a6cf35656"
                    ]
                },
                {
                    "command": [
                        "apply IHm2.",
                        "VernacExtend",
                        "c46c2ebfe13825de42a4b83c6b894febeba208a7"
                    ]
                },
                {
                    "command": [
                        "intros; apply (H (xI x)).",
                        "VernacExtend",
                        "b728bd193f5076b5b1bec6f5dbe7d61f276c1a80"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "beq_correct",
            "line_nb": 149,
            "steps": [
                {
                    "command": [
                        "induction m1; intros.",
                        "VernacExtend",
                        "3bf3e65a34038ed68f7c4172476fb7aecfb1edb7"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite bempty_correct.",
                        "VernacExtend",
                        "0d899f157b0255188caacebb5ef74a78ff78937b"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "rewrite gleaf.",
                        "VernacExtend",
                        "9784dbc2748a1c6d53a8c7c8c77c7e1278b2870a"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "generalize (H x).",
                        "VernacExtend",
                        "843b06d01bb5b75d1b3332a7cda55cfef30c3395"
                    ]
                },
                {
                    "command": [
                        "rewrite gleaf.",
                        "VernacExtend",
                        "9784dbc2748a1c6d53a8c7c8c77c7e1278b2870a"
                    ]
                },
                {
                    "command": [
                        "destruct (get x m2); tauto.",
                        "VernacExtend",
                        "7e0237615916263e275ffceca01fa052d935c520"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct m2.",
                        "VernacExtend",
                        "f86fe3f568de72006bd26815ccc3ccd235156bb1"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "unfold beq.",
                        "VernacExtend",
                        "a3ae872afe803b474911f2a0f54e54a56394111e"
                    ]
                },
                {
                    "command": [
                        "rewrite bempty_correct.",
                        "VernacExtend",
                        "0d899f157b0255188caacebb5ef74a78ff78937b"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "rewrite gleaf.",
                        "VernacExtend",
                        "9784dbc2748a1c6d53a8c7c8c77c7e1278b2870a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "generalize (H x).",
                        "VernacExtend",
                        "843b06d01bb5b75d1b3332a7cda55cfef30c3395"
                    ]
                },
                {
                    "command": [
                        "rewrite gleaf.",
                        "VernacExtend",
                        "9784dbc2748a1c6d53a8c7c8c77c7e1278b2870a"
                    ]
                },
                {
                    "command": [
                        "destruct (get x (Node m1_1 o m1_2)); tauto.",
                        "VernacExtend",
                        "e45d8654b56354c9004c1065862be6a49c49576d"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "destruct (andb_prop _ _ H).",
                        "VernacExtend",
                        "ae63e31404e6cab2c204a5b7e41f9ee5f3df240a"
                    ]
                },
                {
                    "command": [
                        "destruct (andb_prop _ _ H0).",
                        "VernacExtend",
                        "d3b9d36e26dde7f08b091c0685b37e6991ff940d"
                    ]
                },
                {
                    "command": [
                        "rewrite IHm1_1 in H3.",
                        "VernacExtend",
                        "286c9815a63506160da6db172c3b57d0222e1adf"
                    ]
                },
                {
                    "command": [
                        "rewrite IHm1_2 in H1.",
                        "VernacExtend",
                        "faa599e43d9b82c9191a3d627f9106527e95fcf9"
                    ]
                },
                {
                    "command": [
                        "destruct x; simpl.",
                        "VernacExtend",
                        "b0c3c03e2d0a8fa13c533c8a79c2c6b3067d60db"
                    ]
                },
                {
                    "command": [
                        "apply H1.",
                        "VernacExtend",
                        "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
                    ]
                },
                {
                    "command": [
                        "apply H3.",
                        "VernacExtend",
                        "fa1602da0db2a348e9fad204067364eaad2a120f"
                    ]
                },
                {
                    "command": [
                        "destruct o; destruct o0; auto || congruence.",
                        "VernacExtend",
                        "9faf271a8d1811248a21f61f5048fd9906f09308"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply andb_true_intro.",
                        "VernacExtend",
                        "568074f8ecdece0f16c49f5bea6e2c18016f95d3"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply andb_true_intro.",
                        "VernacExtend",
                        "568074f8ecdece0f16c49f5bea6e2c18016f95d3"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "generalize (H xH); simpl.",
                        "VernacExtend",
                        "6adac628a893005b7351549cbbf03c7a0c77fef6"
                    ]
                },
                {
                    "command": [
                        "destruct o; destruct o0; tauto.",
                        "VernacExtend",
                        "af01c4197d074272c14bbfe6c651412a59bb95bd"
                    ]
                },
                {
                    "command": [
                        "apply IHm1_1.",
                        "VernacExtend",
                        "fd242b2a68dab9162745afd8053506344b4b7b37"
                    ]
                },
                {
                    "command": [
                        "intros; apply (H (xO x)).",
                        "VernacExtend",
                        "6db29055492bec5c173f4c4114389d6a6cf35656"
                    ]
                },
                {
                    "command": [
                        "apply IHm1_2.",
                        "VernacExtend",
                        "df55ac744967f77db83283bab2416abad1eb0500"
                    ]
                },
                {
                    "command": [
                        "intros; apply (H (xI x)).",
                        "VernacExtend",
                        "b728bd193f5076b5b1bec6f5dbe7d61f276c1a80"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prev_append_inj",
            "line_nb": 216,
            "steps": [
                {
                    "command": [
                        "revert j j'.",
                        "VernacExtend",
                        "e05859b961c8711e318e89c743c2c6ead7f66e78"
                    ]
                },
                {
                    "command": [
                        "induction i as [i Hi|i Hi|]; intros j j' H; auto; specialize (Hi _ _ H); congruence.",
                        "VernacExtend",
                        "01a9d333a8daa72d121588857d6091fbd1185bc8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xgmap",
            "line_nb": 222,
            "steps": [
                {
                    "command": [
                        "induction i; intros; destruct m; simpl; auto.",
                        "VernacExtend",
                        "a999cfe51fecf3fbfc72dcd2ad70e3dc90423cca"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gmap",
            "line_nb": 225,
            "steps": [
                {
                    "command": [
                        "intros A B f i m.",
                        "VernacExtend",
                        "80ec7f08a28d5ca4af105f4646a03dff87ea58c2"
                    ]
                },
                {
                    "command": [
                        "unfold map.",
                        "VernacExtend",
                        "d6f3bc771467f8d4970eb68d25db08fab4a0a015"
                    ]
                },
                {
                    "command": [
                        "rewrite xgmap.",
                        "VernacExtend",
                        "8f54448ac210049cb1279f819a968da64fbc1001"
                    ]
                },
                {
                    "command": [
                        "repeat f_equal.",
                        "VernacExtend",
                        "ef52a498e8dfd0e6e312a5f55aa7a117295c3b16"
                    ]
                },
                {
                    "command": [
                        "exact (prev_involutive i).",
                        "VernacExtend",
                        "34bd2cfe2d73e1362909cef6c687b5bfbbab0023"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gmap1",
            "line_nb": 233,
            "steps": [
                {
                    "command": [
                        "induction i; intros; destruct m; simpl; auto.",
                        "VernacExtend",
                        "a999cfe51fecf3fbfc72dcd2ad70e3dc90423cca"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gnode'",
            "line_nb": 237,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Node'.",
                        "VernacExtend",
                        "1795d7ca68b08fe85e1efb13d4cfbd166fe9cbbe"
                    ]
                },
                {
                    "command": [
                        "destruct l; destruct x; destruct r; auto.",
                        "VernacExtend",
                        "b3a6ba10c3b0a58cb136140b7d40b3eecb1863ef"
                    ]
                },
                {
                    "command": [
                        "destruct i; simpl; auto; rewrite gleaf; auto.",
                        "VernacExtend",
                        "9f313e6f889b4e0efc8a27b7c895c8b93ecd8bab"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gfilter1",
            "line_nb": 244,
            "steps": [
                {
                    "command": [
                        "intros until m.",
                        "VernacExtend",
                        "2300f96ca7e85976c805b4d0d06b3983c4f22278"
                    ]
                },
                {
                    "command": [
                        "revert m i.",
                        "VernacExtend",
                        "1916d81bfe3f13bd4fc4912bc2dd202fda2ee461"
                    ]
                },
                {
                    "command": [
                        "induction m; simpl; intros.",
                        "VernacExtend",
                        "738c751c4edf16c228e9dc66b9592aea22d1738c"
                    ]
                },
                {
                    "command": [
                        "rewrite gleaf; auto.",
                        "VernacExtend",
                        "8a356ae9d9f7cf07e1151fa209a9c2bd3642f0ab"
                    ]
                },
                {
                    "command": [
                        "rewrite gnode'.",
                        "VernacExtend",
                        "5a3b05a0918e5491c4ade99ee7ff9744b502ef09"
                    ]
                },
                {
                    "command": [
                        "destruct i; simpl; auto.",
                        "VernacExtend",
                        "68f1ada8e7ae3853d0bcf6c9ce8dfcaf8bef3fc3"
                    ]
                },
                {
                    "command": [
                        "destruct o; auto.",
                        "VernacExtend",
                        "55c229e4810cab7dd26065c611ca2e0257d813c3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xgcombine_l",
            "line_nb": 258,
            "steps": [
                {
                    "command": [
                        "induction m; intros; simpl.",
                        "VernacExtend",
                        "c48a5aee8f6edbabc34ccf3b4db1325f9c3d1dad"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite gleaf.",
                        "VernacExtend",
                        "3f7e08edbd7112926d3efc7d30fe1fd2b2149db0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite gnode'.",
                        "VernacExtend",
                        "5a3b05a0918e5491c4ade99ee7ff9744b502ef09"
                    ]
                },
                {
                    "command": [
                        "destruct i; simpl; auto.",
                        "VernacExtend",
                        "68f1ada8e7ae3853d0bcf6c9ce8dfcaf8bef3fc3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xgcombine_r",
            "line_nb": 266,
            "steps": [
                {
                    "command": [
                        "induction m; intros; simpl.",
                        "VernacExtend",
                        "c48a5aee8f6edbabc34ccf3b4db1325f9c3d1dad"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite gleaf.",
                        "VernacExtend",
                        "3f7e08edbd7112926d3efc7d30fe1fd2b2149db0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite gnode'.",
                        "VernacExtend",
                        "5a3b05a0918e5491c4ade99ee7ff9744b502ef09"
                    ]
                },
                {
                    "command": [
                        "destruct i; simpl; auto.",
                        "VernacExtend",
                        "68f1ada8e7ae3853d0bcf6c9ce8dfcaf8bef3fc3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcombine",
            "line_nb": 274,
            "steps": [
                {
                    "command": [
                        "induction m1; intros; simpl.",
                        "VernacExtend",
                        "14815a859237b61b32419a80ad599e9f24ac287e"
                    ]
                },
                {
                    "command": [
                        "rewrite gleaf.",
                        "VernacExtend",
                        "9784dbc2748a1c6d53a8c7c8c77c7e1278b2870a"
                    ]
                },
                {
                    "command": [
                        "apply xgcombine_r.",
                        "VernacExtend",
                        "f29dcb0d6c1e9a82cabe86ccc91519a1dce63f7f"
                    ]
                },
                {
                    "command": [
                        "destruct m2; simpl.",
                        "VernacExtend",
                        "b2365bd96a1c03d622d2d30dfeb3c5bb06eeb822"
                    ]
                },
                {
                    "command": [
                        "rewrite gleaf.",
                        "VernacExtend",
                        "9784dbc2748a1c6d53a8c7c8c77c7e1278b2870a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- xgcombine_l.",
                        "VernacExtend",
                        "50fee159c1da489c22a9271fca87a4a3a198aeae"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite gnode'.",
                        "VernacExtend",
                        "39fb4e5f39176c8dff3f97f53f3e59b5de5e3ddc"
                    ]
                },
                {
                    "command": [
                        "destruct i; simpl; auto.",
                        "VernacExtend",
                        "68f1ada8e7ae3853d0bcf6c9ce8dfcaf8bef3fc3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xcombine_lr",
            "line_nb": 286,
            "steps": [
                {
                    "command": [
                        "induction m; intros; simpl; auto.",
                        "VernacExtend",
                        "9049714a3de5145a21ac2fa8df6877da187ebc24"
                    ]
                },
                {
                    "command": [
                        "rewrite IHm1; auto.",
                        "VernacExtend",
                        "bc7cec85ee35184829be5d8c1d0a955454f9b907"
                    ]
                },
                {
                    "command": [
                        "rewrite IHm2; auto.",
                        "VernacExtend",
                        "7cfd9b25dbc39a72b4a2eb5edfc9dbb40a6be224"
                    ]
                },
                {
                    "command": [
                        "rewrite H; auto.",
                        "VernacExtend",
                        "3e25713af8eaa76cddf9287af10d66733da2ee16"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_commut",
            "line_nb": 292,
            "steps": [
                {
                    "command": [
                        "intros A B f g EQ1.",
                        "VernacExtend",
                        "668c22aa214846aaf9fe654bb2dfbc32d3a6a9b7"
                    ]
                },
                {
                    "command": [
                        "assert (EQ2: forall (i j: option A), g i j = f j i).",
                        "VernacExtend",
                        "64bb41750521033cb1dc436cf54528fcc2672c22"
                    ]
                },
                {
                    "command": [
                        "intros; auto.",
                        "VernacExtend",
                        "d08fa6a6cf0cffe77a1b06ed19eb1fcfb0b64546"
                    ]
                },
                {
                    "command": [
                        "induction m1; intros; destruct m2; simpl; try rewrite EQ1; repeat rewrite (xcombine_lr f g); repeat rewrite (xcombine_lr g f); auto.",
                        "VernacExtend",
                        "eda20ba595cf18c5c9c993cb0f7f70a39c263796"
                    ]
                },
                {
                    "command": [
                        "rewrite IHm1_1.",
                        "VernacExtend",
                        "601aa2a4b285f14487caaf0108196f813fbeb8f3"
                    ]
                },
                {
                    "command": [
                        "rewrite IHm1_2.",
                        "VernacExtend",
                        "46a9d635cd3cf685fab62094154ecc98248c2be9"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xelements_append",
            "line_nb": 303,
            "steps": [
                {
                    "command": [
                        "induction m; intros; simpl.",
                        "VernacExtend",
                        "c48a5aee8f6edbabc34ccf3b4db1325f9c3d1dad"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct o; rewrite IHm2; rewrite <- IHm1; auto.",
                        "VernacExtend",
                        "63b7aece283b982707f3392d47568c6baf3b69f6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xelements_leaf",
            "line_nb": 310,
            "steps": [
                {
                    "command": [
                        "intros; reflexivity.",
                        "VernacExtend",
                        "c20cfa06d7b692e82c145d2df3bde4c2fe4eb461"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xelements_node",
            "line_nb": 313,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct o; simpl; rewrite <- xelements_append; auto.",
                        "VernacExtend",
                        "b677b693b6644e04afc291b9003f9971f5d642a0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xelements_incl",
            "line_nb": 318,
            "steps": [
                {
                    "command": [
                        "induction m; intros; simpl.",
                        "VernacExtend",
                        "c48a5aee8f6edbabc34ccf3b4db1325f9c3d1dad"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "destruct o.",
                        "VernacExtend",
                        "7e45d273082b90e03f5f97cde65b5f989324a175"
                    ]
                },
                {
                    "command": [
                        "apply IHm1.",
                        "VernacExtend",
                        "bdc0cfe8c8aaad61d155f8c31e1f49ee7a8145ee"
                    ]
                },
                {
                    "command": [
                        "simpl; right; auto.",
                        "VernacExtend",
                        "8af0594cca1560160c609b422321fcddae8bf899"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xelements_correct",
            "line_nb": 326,
            "steps": [
                {
                    "command": [
                        "induction m; intros.",
                        "VernacExtend",
                        "ad78c67d3a9216bd0cba3419d43201d461ab0fe9"
                    ]
                },
                {
                    "command": [
                        "rewrite (gleaf A i) in H; congruence.",
                        "VernacExtend",
                        "60cd71f282100d7878cf5ee1a6ca0b0ec0f944a3"
                    ]
                },
                {
                    "command": [
                        "destruct o; destruct i; simpl; simpl in H.",
                        "VernacExtend",
                        "5f8af772d1024bfe9880aad1e041536d2631776a"
                    ]
                },
                {
                    "command": [
                        "apply xelements_incl.",
                        "VernacExtend",
                        "5b7a353efa3dc8fe9f7b568247f55db85052c9c4"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "apply xelements_incl.",
                        "VernacExtend",
                        "5b7a353efa3dc8fe9f7b568247f55db85052c9c4"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply xelements_incl.",
                        "VernacExtend",
                        "5b7a353efa3dc8fe9f7b568247f55db85052c9c4"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_correct",
            "line_nb": 343,
            "steps": [
                {
                    "command": [
                        "intros A m i v H.",
                        "VernacExtend",
                        "5ff5d584bd97473db1d952c448c8df956af641d1"
                    ]
                },
                {
                    "command": [
                        "generalize (xelements_correct m i xH nil H).",
                        "VernacExtend",
                        "89c772a96001654d7402e46b4609fa8ff33f560d"
                    ]
                },
                {
                    "command": [
                        "rewrite prev_append_prev.",
                        "VernacExtend",
                        "b5353e71c1a8cfac3a3254ad19977c4f64aee47c"
                    ]
                },
                {
                    "command": [
                        "exact id.",
                        "VernacExtend",
                        "101c8af8a00f770310bfd9eb077822ca77c9a274"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_xelements",
            "line_nb": 349,
            "steps": [
                {
                    "command": [
                        "induction m; intros.",
                        "VernacExtend",
                        "ad78c67d3a9216bd0cba3419d43201d461ab0fe9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite xelements_leaf in H.",
                        "VernacExtend",
                        "22234f9f9070480f8950e39fc29b66eca2b1d7cc"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite xelements_node in H.",
                        "VernacExtend",
                        "69c0bac596a221d5457c49a8d6bda681f07922b1"
                    ]
                },
                {
                    "command": [
                        "rewrite ! in_app_iff in H.",
                        "VernacExtend",
                        "ff5a367fca7a66db5deeecca676c8db1b932de55"
                    ]
                },
                {
                    "command": [
                        "destruct H as [P | [P | P]].",
                        "VernacExtend",
                        "8bb64a921bb2fe4444149d90e65e4fc03120442e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exploit IHm1; eauto.",
                        "VernacExtend",
                        "2932ddb199ac67eb4b1308cd5b972229b5a87756"
                    ]
                },
                {
                    "command": [
                        "intros (j & Q & R).",
                        "VernacExtend",
                        "84be36f0d3e10b62f5af51309f1bd16316c26f54"
                    ]
                },
                {
                    "command": [
                        "exists (xO j); auto.",
                        "VernacExtend",
                        "92453381adb97bbac1130f03a8a81c7206ab520c"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct o; simpl in P; intuition auto.",
                        "VernacExtend",
                        "1396ab070f77d3f6b88de297d74a949d6eee475b"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "exists xH; auto.",
                        "VernacExtend",
                        "31829c650f77a5ed35c59a15d2aae7ad9bfae63f"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exploit IHm2; eauto.",
                        "VernacExtend",
                        "5ff1a9632dd634beeba95d3f3902b041cc902a4b"
                    ]
                },
                {
                    "command": [
                        "intros (j & Q & R).",
                        "VernacExtend",
                        "84be36f0d3e10b62f5af51309f1bd16316c26f54"
                    ]
                },
                {
                    "command": [
                        "exists (xI j); auto.",
                        "VernacExtend",
                        "1cef838e6df7ace99b805c5206c08fdffe576056"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_complete",
            "line_nb": 371,
            "steps": [
                {
                    "command": [
                        "unfold elements.",
                        "VernacExtend",
                        "093b6a2c5ab0f35c698ece9baa542c2b9b260d09"
                    ]
                },
                {
                    "command": [
                        "intros A m i v H.",
                        "VernacExtend",
                        "5ff5d584bd97473db1d952c448c8df956af641d1"
                    ]
                },
                {
                    "command": [
                        "exploit in_xelements; eauto.",
                        "VernacExtend",
                        "202c213de81872e717e66f96aaadec4014c9d44d"
                    ]
                },
                {
                    "command": [
                        "intros (j & P & Q).",
                        "VernacExtend",
                        "224a64226152e52ace0e542dde6a768c7ce313b1"
                    ]
                },
                {
                    "command": [
                        "rewrite prev_append_prev in P.",
                        "VernacExtend",
                        "c9dcf41b660697f2cd39f56f70944335ac7f915e"
                    ]
                },
                {
                    "command": [
                        "change i with (prev_append 1 i) in P.",
                        "VernacExtend",
                        "1bed6a8ded60dd11a36a3bfc0cbdf38a1f59ecde"
                    ]
                },
                {
                    "command": [
                        "exploit prev_append_inj; eauto.",
                        "VernacExtend",
                        "de86654142b9b253dcae930c67bfeca4bf77f292"
                    ]
                },
                {
                    "command": [
                        "intros; congruence.",
                        "VernacExtend",
                        "61515a2954e6a6334e3eba40c730dca8f75d28b2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xkeys_leaf",
            "line_nb": 382,
            "steps": [
                {
                    "command": [
                        "intros; reflexivity.",
                        "VernacExtend",
                        "c20cfa06d7b692e82c145d2df3bde4c2fe4eb461"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xkeys_node",
            "line_nb": 385,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold xkeys.",
                        "VernacExtend",
                        "4112ef6fde1da1cdace1e7f2fe8347f0d0bd88a8"
                    ]
                },
                {
                    "command": [
                        "rewrite xelements_node.",
                        "VernacExtend",
                        "1f506ae7cd53ea99c49d732fa09b200d1d648f9a"
                    ]
                },
                {
                    "command": [
                        "rewrite ! map_app.",
                        "VernacExtend",
                        "cdf9d045443ccf2d5a04af5f0756f7dc99aca1ef"
                    ]
                },
                {
                    "command": [
                        "destruct o; auto.",
                        "VernacExtend",
                        "55c229e4810cab7dd26065c611ca2e0257d813c3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_xkeys",
            "line_nb": 392,
            "steps": [
                {
                    "command": [
                        "unfold xkeys; intros.",
                        "VernacExtend",
                        "563e416c29655600efd699412d5b8abe5a6254e5"
                    ]
                },
                {
                    "command": [
                        "apply (list_in_map_inv) in H.",
                        "VernacExtend",
                        "ca70c474fe9a3bdba1c5baa122cbca6557f746a1"
                    ]
                },
                {
                    "command": [
                        "destruct H as ((j, v) & -> & H).",
                        "VernacExtend",
                        "222c6160dc4f61432c28f9d7bfc6d823ee6e8624"
                    ]
                },
                {
                    "command": [
                        "exploit in_xelements; eauto.",
                        "VernacExtend",
                        "202c213de81872e717e66f96aaadec4014c9d44d"
                    ]
                },
                {
                    "command": [
                        "intros (k & P & Q).",
                        "VernacExtend",
                        "8f759bf09461bd34d04c50fff8424c386438049b"
                    ]
                },
                {
                    "command": [
                        "exists k; auto.",
                        "VernacExtend",
                        "930bbe24c94723a9e2f5da004090011e877c06d9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_keys_norepet",
            "line_nb": 454,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (xelements_keys_norepet m xH).",
                        "VernacExtend",
                        "42e9ad92e399d3f63536b4d65e8cc2437fa6aaaf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xelements_empty",
            "line_nb": 458,
            "steps": [
                {
                    "command": [
                        "induction m; intros.",
                        "VernacExtend",
                        "ad78c67d3a9216bd0cba3419d43201d461ab0fe9"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite xelements_node.",
                        "VernacExtend",
                        "1f506ae7cd53ea99c49d732fa09b200d1d648f9a"
                    ]
                },
                {
                    "command": [
                        "rewrite IHm1, IHm2.",
                        "VernacExtend",
                        "8e43821e7f9ecedc4782add94bc82b812515d24f"
                    ]
                },
                {
                    "command": [
                        "destruct o; auto.",
                        "VernacExtend",
                        "55c229e4810cab7dd26065c611ca2e0257d813c3"
                    ]
                },
                {
                    "command": [
                        "generalize (H xH); simpl; congruence.",
                        "VernacExtend",
                        "9765827b96906c12c2aee417b39f540e16f5faa7"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (H (xI i0)).",
                        "VernacExtend",
                        "c4814f8acecfbd9263ffff31fb5d6d532bad2ca6"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (H (xO i0)).",
                        "VernacExtend",
                        "0cde20c314667cd58da4b8acbca7b280f5a13fad"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_canonical_order'",
            "line_nb": 470,
            "steps": [
                {
                    "command": [
                        "intros until n.",
                        "VernacExtend",
                        "519446f80e1db29c96b7020a8f52ae408def330d"
                    ]
                },
                {
                    "command": [
                        "unfold elements.",
                        "VernacExtend",
                        "093b6a2c5ab0f35c698ece9baa542c2b9b260d09"
                    ]
                },
                {
                    "command": [
                        "generalize 1%positive.",
                        "VernacExtend",
                        "d849ffe135199fd64613ae676a8b0f1df0e78daa"
                    ]
                },
                {
                    "command": [
                        "revert m n.",
                        "VernacExtend",
                        "154d21b953252de5fba60383975374ead7bae98c"
                    ]
                },
                {
                    "command": [
                        "induction m; intros.",
                        "VernacExtend",
                        "ad78c67d3a9216bd0cba3419d43201d461ab0fe9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite xelements_empty.",
                        "VernacExtend",
                        "7d3d7b570949b3e7426e6bcce302115e83ef5ffd"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "specialize (H i).",
                        "VernacExtend",
                        "127e405bbb638c9528691e836c73b4d438c7a336"
                    ]
                },
                {
                    "command": [
                        "rewrite gempty in H.",
                        "VernacExtend",
                        "ce30f5360347ac5b601b2d79e7cbf63ef7f31c1a"
                    ]
                },
                {
                    "command": [
                        "inv H; auto.",
                        "VernacExtend",
                        "64b5b263c28e9ead2d374e2c075c79c61f085ebe"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct n as [ | n1 o' n2 ].",
                        "VernacExtend",
                        "654142aaf835ab23bc09754b6592f80b93b1562d"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite (xelements_empty (Node m1 o m2)).",
                        "VernacExtend",
                        "4d14928f7d8bfd378d7154021790d013b5be939e"
                    ]
                },
                {
                    "command": [
                        "simpl; constructor.",
                        "VernacExtend",
                        "ac61261ad3f03698bb630fde3118b8936863f48a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "specialize (H i).",
                        "VernacExtend",
                        "127e405bbb638c9528691e836c73b4d438c7a336"
                    ]
                },
                {
                    "command": [
                        "rewrite gempty in H.",
                        "VernacExtend",
                        "ce30f5360347ac5b601b2d79e7cbf63ef7f31c1a"
                    ]
                },
                {
                    "command": [
                        "inv H; auto.",
                        "VernacExtend",
                        "64b5b263c28e9ead2d374e2c075c79c61f085ebe"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite ! xelements_node.",
                        "VernacExtend",
                        "c784dca3a3f7b44094b66a0997fe1603696d689b"
                    ]
                },
                {
                    "command": [
                        "repeat apply list_forall2_app.",
                        "VernacExtend",
                        "7575bd71155a63bc99193dedcf1bc56cbe3b1f17"
                    ]
                },
                {
                    "command": [
                        "apply IHm1.",
                        "VernacExtend",
                        "bdc0cfe8c8aaad61d155f8c31e1f49ee7a8145ee"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (H (xO i)).",
                        "VernacExtend",
                        "d8bc2eb366441825ff7a318db9ab9fac4133ea29"
                    ]
                },
                {
                    "command": [
                        "generalize (H xH); simpl; intros OR; inv OR.",
                        "VernacExtend",
                        "ce1eacde564d17071cc891691c3888056358d5eb"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "apply IHm2.",
                        "VernacExtend",
                        "c46c2ebfe13825de42a4b83c6b894febeba208a7"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (H (xI i)).",
                        "VernacExtend",
                        "2bcc49be37333ee1b310824f4e3c4ea2ea760eb0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_canonical_order",
            "line_nb": 508,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply elements_canonical_order'.",
                        "VernacExtend",
                        "72577e336a236dda7078b85c31bffe87010f5548"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (get i m) as [x|] eqn:GM.",
                        "VernacExtend",
                        "aa122745b97a9ee4bfa064cfb0eb79be63b21120"
                    ]
                },
                {
                    "command": [
                        "exploit H; eauto.",
                        "VernacExtend",
                        "e4042976bceeb1e0a2b61f377ada9badc4c146f3"
                    ]
                },
                {
                    "command": [
                        "intros (y & P & Q).",
                        "VernacExtend",
                        "48f72f04ef2ff004ffe7302e24c56fc09e575bde"
                    ]
                },
                {
                    "command": [
                        "rewrite P; constructor; auto.",
                        "VernacExtend",
                        "6f083861b1189d9bf6384c5f3b42cf4c6fd83129"
                    ]
                },
                {
                    "command": [
                        "destruct (get i n) as [y|] eqn:GN.",
                        "VernacExtend",
                        "7fe0489127b005d33caea1f5d3f3aa6414c265e8"
                    ]
                },
                {
                    "command": [
                        "exploit H0; eauto.",
                        "VernacExtend",
                        "e2bb62237be4af6f3df33a06be0bda055849b007"
                    ]
                },
                {
                    "command": [
                        "intros (x & P & Q).",
                        "VernacExtend",
                        "c4c5f1f152ed517a08ea37718b88397194f10463"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_extensional",
            "line_nb": 522,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exploit (@elements_canonical_order' _ _ (fun (x y: A) => x = y) m n).",
                        "VernacExtend",
                        "c1bd815c2a81c47e71cbf2d97afccddb142e3bb8"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "destruct (get i n); constructor; auto.",
                        "VernacExtend",
                        "91b8d463000b6c61b25070968e2e9816d2a686e2"
                    ]
                },
                {
                    "command": [
                        "induction 1.",
                        "VernacExtend",
                        "dfe896305621800fcbb03b32d51d497edbdf1dc5"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "destruct a1 as [a2 a3]; destruct b1 as [b2 b3]; simpl in *.",
                        "VernacExtend",
                        "f4f446d82aae2ad199f5a40072cd6c4b12df2eb9"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xelements_remove",
            "line_nb": 534,
            "steps": [
                {
                    "command": [
                        "induction m; intros.",
                        "VernacExtend",
                        "ad78c67d3a9216bd0cba3419d43201d461ab0fe9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite gleaf in H; discriminate.",
                        "VernacExtend",
                        "239474799d2c4a3c58b694c96164565c5bf35b0d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assert (REMOVE: xelements (remove i (Node m1 o m2)) j nil = xelements (match i with | xH => Node m1 None m2 | xO ii => Node (remove ii m1) o m2 | xI ii => Node m1 o (remove ii m2) end) j nil).",
                        "VernacExtend",
                        "3250451095c26b73da6ab4dbfc2ec0f6b8576da4"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct i; simpl remove.",
                        "VernacExtend",
                        "b722b4604ffc586e281de339b10604e54ea3e2c0"
                    ]
                },
                {
                    "command": [
                        "destruct m1; auto.",
                        "VernacExtend",
                        "804812ccaf09b058a1881d7ff1872ed099dad855"
                    ]
                },
                {
                    "command": [
                        "destruct o; auto.",
                        "VernacExtend",
                        "55c229e4810cab7dd26065c611ca2e0257d813c3"
                    ]
                },
                {
                    "command": [
                        "destruct (remove i m2); auto.",
                        "VernacExtend",
                        "ff9b67f0fcc6b0caffa14315f0dc15a7f9664dcf"
                    ]
                },
                {
                    "command": [
                        "destruct o; auto.",
                        "VernacExtend",
                        "55c229e4810cab7dd26065c611ca2e0257d813c3"
                    ]
                },
                {
                    "command": [
                        "destruct m2; auto.",
                        "VernacExtend",
                        "13992080051e0c86e8a110863ecb459f2af8484b"
                    ]
                },
                {
                    "command": [
                        "destruct (remove i m1); auto.",
                        "VernacExtend",
                        "3b44b0c50713057b6af40faeab3fc65f9bc21715"
                    ]
                },
                {
                    "command": [
                        "destruct m1; auto.",
                        "VernacExtend",
                        "804812ccaf09b058a1881d7ff1872ed099dad855"
                    ]
                },
                {
                    "command": [
                        "destruct m2; auto.",
                        "VernacExtend",
                        "13992080051e0c86e8a110863ecb459f2af8484b"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite REMOVE.",
                        "VernacExtend",
                        "108c815327a7651909f7205aca470c7f7adfa938"
                    ]
                },
                {
                    "command": [
                        "destruct i; simpl in H.",
                        "VernacExtend",
                        "681d60c713ff1d9eef3e7293395b54fbf717d00e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct (IHm2 i (xI j) H) as (l1 & l2 & EQ & EQ').",
                        "VernacExtend",
                        "f152fbd82af6aaae499c404ad63ee1b2f00d3a5b"
                    ]
                },
                {
                    "command": [
                        "exists (xelements m1 (xO j) nil ++ match o with None => nil | Some x => (prev j, x) :: nil end ++ l1); exists l2; split.",
                        "VernacExtend",
                        "82af2c5d1741184cc142c8e9fbff95171215283a"
                    ]
                },
                {
                    "command": [
                        "rewrite xelements_node, EQ, ! app_ass.",
                        "VernacExtend",
                        "f436f4d2cf49cd6f9fbea956eedba8c70f391020"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite xelements_node, EQ', ! app_ass.",
                        "VernacExtend",
                        "85031df98da3e1cf74cffd95cdfc59761288b35b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct (IHm1 i (xO j) H) as (l1 & l2 & EQ & EQ').",
                        "VernacExtend",
                        "5455647e1778254d282eef4b5dec659d42a05a97"
                    ]
                },
                {
                    "command": [
                        "exists l1; exists (l2 ++ match o with None => nil | Some x => (prev j, x) :: nil end ++ xelements m2 (xI j) nil); split.",
                        "VernacExtend",
                        "ceba50218bf8a1bf69674c41893d9af88017f0d3"
                    ]
                },
                {
                    "command": [
                        "rewrite xelements_node, EQ, ! app_ass.",
                        "VernacExtend",
                        "f436f4d2cf49cd6f9fbea956eedba8c70f391020"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite xelements_node, EQ', ! app_ass.",
                        "VernacExtend",
                        "85031df98da3e1cf74cffd95cdfc59761288b35b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "subst o.",
                        "VernacExtend",
                        "88b05cc64b4af64cd21a6a9daf2a3700d92a1668"
                    ]
                },
                {
                    "command": [
                        "exists (xelements m1 (xO j) nil); exists (xelements m2 (xI j) nil); split.",
                        "VernacExtend",
                        "0e1ef4796af78316c5cc311290d47f10a623c427"
                    ]
                },
                {
                    "command": [
                        "rewrite xelements_node.",
                        "VernacExtend",
                        "1f506ae7cd53ea99c49d732fa09b200d1d648f9a"
                    ]
                },
                {
                    "command": [
                        "rewrite prev_append_prev.",
                        "VernacExtend",
                        "b5353e71c1a8cfac3a3254ad19977c4f64aee47c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite xelements_node; auto.",
                        "VernacExtend",
                        "f7e5a05dc3ccba9c2c311b505b3f72cc0bacd814"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xfold_xelements",
            "line_nb": 585,
            "steps": [
                {
                    "command": [
                        "induction m; intros.",
                        "VernacExtend",
                        "ad78c67d3a9216bd0cba3419d43201d461ab0fe9"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "destruct o; simpl.",
                        "VernacExtend",
                        "5e12d65f9cbafc203768a6171193726ba08e4925"
                    ]
                },
                {
                    "command": [
                        "rewrite <- IHm1.",
                        "VernacExtend",
                        "06de1462de790f0e0a8171358b751fedb984e50c"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite <- IHm2.",
                        "VernacExtend",
                        "a45124d6fdfb7920a74c3a0ea95f4c4c38897470"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite <- IHm1.",
                        "VernacExtend",
                        "06de1462de790f0e0a8171358b751fedb984e50c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- IHm2.",
                        "VernacExtend",
                        "a45124d6fdfb7920a74c3a0ea95f4c4c38897470"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_spec",
            "line_nb": 598,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold fold, elements.",
                        "VernacExtend",
                        "ab806622a3c6255e7f455fe4eb4e92fa85ea22cc"
                    ]
                },
                {
                    "command": [
                        "rewrite <- xfold_xelements.",
                        "VernacExtend",
                        "3ffd8d8c62477447ec3ff17b90c6904d82818dee"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold1_xelements",
            "line_nb": 605,
            "steps": [
                {
                    "command": [
                        "induction m; intros.",
                        "VernacExtend",
                        "ad78c67d3a9216bd0cba3419d43201d461ab0fe9"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "destruct o; simpl.",
                        "VernacExtend",
                        "5e12d65f9cbafc203768a6171193726ba08e4925"
                    ]
                },
                {
                    "command": [
                        "rewrite <- IHm1.",
                        "VernacExtend",
                        "06de1462de790f0e0a8171358b751fedb984e50c"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite <- IHm2.",
                        "VernacExtend",
                        "a45124d6fdfb7920a74c3a0ea95f4c4c38897470"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite <- IHm1.",
                        "VernacExtend",
                        "06de1462de790f0e0a8171358b751fedb984e50c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- IHm2.",
                        "VernacExtend",
                        "a45124d6fdfb7920a74c3a0ea95f4c4c38897470"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold1_spec",
            "line_nb": 618,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply fold1_xelements with (l := @nil (positive * A)).",
                        "VernacExtend",
                        "432c062e42b8c7ce5310d86ccad07266c36f60cb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gi",
            "line_nb": 630,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold init.",
                        "VernacExtend",
                        "e5993703fde9f0b650f8cd410c2cd795bfa0c371"
                    ]
                },
                {
                    "command": [
                        "unfold get.",
                        "VernacExtend",
                        "0ee15cb7f500427115d62c79c71ab50bde1d2bb9"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gempty.",
                        "VernacExtend",
                        "02ad4f08527ee6f058bb5b2fc6b52855b65cf49f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "index_inj",
            "line_nb": 749,
            "steps": [
                {
                    "command": [
                        "unfold index; destruct x; destruct y; intros; try discriminate; try reflexivity.",
                        "VernacExtend",
                        "6150c60adcf7107ff2a9a3841af4e62e842c217f"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq",
            "line_nb": 764,
            "steps": [
                {
                    "command": [
                        "decide equality.",
                        "VernacExtend",
                        "10aba07d521545accbb51a4c2e0695a9ddce3199"
                    ]
                },
                {
                    "command": [
                        "apply peq.",
                        "VernacExtend",
                        "5e99d9ae8e5eadf6309ec1189544d29135be0996"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "beq_sound",
            "line_nb": 861,
            "steps": [
                {
                    "command": [
                        "unfold beq, get.",
                        "VernacExtend",
                        "e1b1c644dec61c9b1d5d31ab0da0b9a2374beb9a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.beq_correct in H.",
                        "VernacExtend",
                        "f265780090e3c6144c1cae3fae75f35fa2067e7e"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "H_base'",
            "line_nb": 887,
            "steps": [
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "apply P_compat with (T.empty _); auto.",
                        "VernacExtend",
                        "db28a2fd8bcb4283692a135057941efbbe11255f"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite T.gempty.",
                        "VernacExtend",
                        "84afd58357e8618c8dbd64a2553cee7bb09890a1"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "case_eq (T.get x m); intros; auto.",
                        "VernacExtend",
                        "c03d9ad8695ccf0d660d2d1007b7a17f747b451b"
                    ]
                },
                {
                    "command": [
                        "assert (In (x, v) nil).",
                        "VernacExtend",
                        "2b44ad16a12ee131b2506afa7a2084e70b327962"
                    ]
                },
                {
                    "command": [
                        "rewrite (H (x, v)).",
                        "VernacExtend",
                        "288561d1193ce5da31aff0ff341cb02285e82be3"
                    ]
                },
                {
                    "command": [
                        "apply T.elements_correct.",
                        "VernacExtend",
                        "a1522a1fb8cbdfbfcee91ae42360b7285956a54c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "H_rec'",
            "line_nb": 900,
            "steps": [
                {
                    "command": [
                        "unfold P'; intros.",
                        "VernacExtend",
                        "1f5586583d5b3e9b92adbea388a3efa2b94731a3"
                    ]
                },
                {
                    "command": [
                        "set (m0 := T.remove k m).",
                        "VernacExtend",
                        "445304bc2f4b81fc5ba9108ac6ebb6f779a1cd02"
                    ]
                },
                {
                    "command": [
                        "apply P_compat with (T.set k v m0).",
                        "VernacExtend",
                        "7f8553e71d61400de19242569a23be10fff94f5b"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold m0.",
                        "VernacExtend",
                        "01de0fc1fed10ca9d99ae62c9ab828cfa8e8855c"
                    ]
                },
                {
                    "command": [
                        "rewrite T.gsspec.",
                        "VernacExtend",
                        "355bbadaf138523764bd13e7cdd5c126020974b4"
                    ]
                },
                {
                    "command": [
                        "destruct (T.elt_eq x k).",
                        "VernacExtend",
                        "0c7d825de862449ebc1a157fc18eec52da092923"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply T.elements_complete.",
                        "VernacExtend",
                        "0a086e6672e80522af916d091cc6723cf4c1645f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (H2 (x, v)).",
                        "VernacExtend",
                        "4b8a4faf66af7702c9773f18212c2ecf6e0d4865"
                    ]
                },
                {
                    "command": [
                        "apply in_or_app.",
                        "VernacExtend",
                        "5d96e3be59ed2c78adfe02ab12e779d3ca3f43c0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intuition congruence.",
                        "VernacExtend",
                        "2cba3542847e3f4ea52f3f62375adc6e8f8f04bc"
                    ]
                },
                {
                    "command": [
                        "apply T.gro.",
                        "VernacExtend",
                        "a36bb138ffb6598fb3945fd04c889e25ba23f4fa"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply H_rec.",
                        "VernacExtend",
                        "ca446a9ca8550ca966cd22856c3f3f4ad7c05eae"
                    ]
                },
                {
                    "command": [
                        "unfold m0.",
                        "VernacExtend",
                        "01de0fc1fed10ca9d99ae62c9ab828cfa8e8855c"
                    ]
                },
                {
                    "command": [
                        "apply T.grs.",
                        "VernacExtend",
                        "447e257cfa896306cbe8ff40c1c5fff0c39ffc12"
                    ]
                },
                {
                    "command": [
                        "apply T.elements_complete.",
                        "VernacExtend",
                        "0a086e6672e80522af916d091cc6723cf4c1645f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply H1.",
                        "VernacExtend",
                        "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
                    ]
                },
                {
                    "command": [
                        "red.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "intros [k' v'].",
                        "VernacExtend",
                        "3399c239bf7d48566fbf66d68e520b940ba21e76"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "apply T.elements_correct.",
                        "VernacExtend",
                        "a1522a1fb8cbdfbfcee91ae42360b7285956a54c"
                    ]
                },
                {
                    "command": [
                        "unfold m0.",
                        "VernacExtend",
                        "01de0fc1fed10ca9d99ae62c9ab828cfa8e8855c"
                    ]
                },
                {
                    "command": [
                        "rewrite T.gro.",
                        "VernacExtend",
                        "ef561c6ae044bdfb617d325626900206633cd038"
                    ]
                },
                {
                    "command": [
                        "apply T.elements_complete.",
                        "VernacExtend",
                        "0a086e6672e80522af916d091cc6723cf4c1645f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (H2 (k', v')).",
                        "VernacExtend",
                        "7fc65dbd98193fb351262b19f0d32117bd68b701"
                    ]
                },
                {
                    "command": [
                        "apply in_or_app.",
                        "VernacExtend",
                        "5d96e3be59ed2c78adfe02ab12e779d3ca3f43c0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "red; intro; subst k'.",
                        "VernacExtend",
                        "db7b06887b4e67405464ed91e3a2b32825d01faf"
                    ]
                },
                {
                    "command": [
                        "elim H.",
                        "VernacExtend",
                        "853aa440c3a3810be05f0f87d0e688c05b92253d"
                    ]
                },
                {
                    "command": [
                        "change k with (fst (k, v')).",
                        "VernacExtend",
                        "fa15b7e2c210356975e51c3fbec0ef1da9362b81"
                    ]
                },
                {
                    "command": [
                        "apply in_map.",
                        "VernacExtend",
                        "8b1d6650eff402b483dc29bd25bb3e04ea7f525b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "assert (T.get k' m0 = Some v').",
                        "VernacExtend",
                        "7068928d949b4ec8ae9db3ceefec9a54f071ce49"
                    ]
                },
                {
                    "command": [
                        "apply T.elements_complete.",
                        "VernacExtend",
                        "0a086e6672e80522af916d091cc6723cf4c1645f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "unfold m0 in H4.",
                        "VernacExtend",
                        "6804388d4cc07fad1afc7bbad6e49ec4f726861a"
                    ]
                },
                {
                    "command": [
                        "rewrite T.grspec in H4.",
                        "VernacExtend",
                        "318f761c559805eb78b74ef33e1050bd64509550"
                    ]
                },
                {
                    "command": [
                        "destruct (T.elt_eq k' k).",
                        "VernacExtend",
                        "8abbbb35fba43ba1f71f390038ea1620631cc4eb"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "assert (In (k', v') (T.elements m)).",
                        "VernacExtend",
                        "45e54315923ed775905989b926b2a9be00ec8d31"
                    ]
                },
                {
                    "command": [
                        "apply T.elements_correct; auto.",
                        "VernacExtend",
                        "ac99914a9c83c67ec6a0f00797e3e38b83a26a61"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (H2 (k', v')) in H5.",
                        "VernacExtend",
                        "6161446d804fbf177b976c7b377933dc564b295c"
                    ]
                },
                {
                    "command": [
                        "destruct (in_app_or _ _ _ H5).",
                        "VernacExtend",
                        "2906bcd3d17ab28ba80237bacf20c1ae73f57dd3"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "simpl in H6.",
                        "VernacExtend",
                        "a1cfe6bf72a31f34bf109464b9fb8288a8f3124d"
                    ]
                },
                {
                    "command": [
                        "intuition congruence.",
                        "VernacExtend",
                        "2cba3542847e3f4ea52f3f62375adc6e8f8f04bc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_rec_aux",
            "line_nb": 952,
            "steps": [
                {
                    "command": [
                        "induction l1; intros; simpl.",
                        "VernacExtend",
                        "3cc7258cfa99016b23abf5920b91a50a6985ec3e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- List.app_nil_end.",
                        "VernacExtend",
                        "cff525cdcbb8f186fba24e919dc77cd691496e4b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "destruct a as [k v]; simpl in *.",
                        "VernacExtend",
                        "98ac02c6e3d29677e23f8f976f58eaa331188387"
                    ]
                },
                {
                    "command": [
                        "inv H1.",
                        "VernacExtend",
                        "2c43d1971eb5aa98166f6ec686cc2a4f1886b0a4"
                    ]
                },
                {
                    "command": [
                        "change ((k, v) :: l1) with (((k, v) :: nil) ++ l1).",
                        "VernacExtend",
                        "991c760e6d5a82170bc23f3306c9ab402515ba9f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- List.app_ass.",
                        "VernacExtend",
                        "20558f65db6ef8555c8c795212344b2b7a8be751"
                    ]
                },
                {
                    "command": [
                        "apply IHl1.",
                        "VernacExtend",
                        "f345159dea97d8876c7b461fb67e1c8421ab70a7"
                    ]
                },
                {
                    "command": [
                        "rewrite app_ass.",
                        "VernacExtend",
                        "1e8737a155ba47802e4df29a56a47a094af2082d"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "rewrite map_app in H3.",
                        "VernacExtend",
                        "2f868b95e82aa4b540ffffdf68688424f8e3d625"
                    ]
                },
                {
                    "command": [
                        "destruct (in_app_or _ _ _ H3).",
                        "VernacExtend",
                        "b345eac1736ac25cc077937b8398fb49ffa76196"
                    ]
                },
                {
                    "command": [
                        "apply H0; auto with coqlib.",
                        "VernacExtend",
                        "6874c0da8e60076c04b7b224cd826764ec6f808d"
                    ]
                },
                {
                    "command": [
                        "simpl in H4.",
                        "VernacExtend",
                        "31358c428a532f17f4c3cd16100d65b9f5ba8243"
                    ]
                },
                {
                    "command": [
                        "intuition congruence.",
                        "VernacExtend",
                        "2cba3542847e3f4ea52f3f62375adc6e8f8f04bc"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "unfold f'.",
                        "VernacExtend",
                        "d5030c9006a9df78825d4b9238ed86129ec6a957"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply H_rec'; auto.",
                        "VernacExtend",
                        "6d8600feae4f42eaad5e8e8385945babb597b643"
                    ]
                },
                {
                    "command": [
                        "eapply list_disjoint_notin; eauto with coqlib.",
                        "VernacExtend",
                        "9a1caa9197c21515fae0f55e51a3b395a1853834"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (H (k, v)).",
                        "VernacExtend",
                        "0f02e3c29db80a03f36d9f8da1104d580246766b"
                    ]
                },
                {
                    "command": [
                        "apply in_or_app.",
                        "VernacExtend",
                        "5d96e3be59ed2c78adfe02ab12e779d3ca3f43c0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_rec",
            "line_nb": 979,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite T.fold_spec.",
                        "VernacExtend",
                        "1a77cdf675262ca1bb72728df173b02123643888"
                    ]
                },
                {
                    "command": [
                        "fold f'.",
                        "VernacExtend",
                        "b5572973bc13c2cd7865de7383cd835ae7c5dfea"
                    ]
                },
                {
                    "command": [
                        "assert (P' (nil ++ T.elements m_final) (List.fold_left f' (T.elements m_final) init)).",
                        "VernacExtend",
                        "28589f82e2706993a49d3bc17b68eacbdc94d6d0"
                    ]
                },
                {
                    "command": [
                        "apply fold_rec_aux.",
                        "VernacExtend",
                        "dcc911cfaa1fe3a693d769951ac30410e8ac65df"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "red; intros; tauto.",
                        "VernacExtend",
                        "355018df7632f1141f4e1b00261b28c1f4508309"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "elim H0.",
                        "VernacExtend",
                        "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
                    ]
                },
                {
                    "command": [
                        "apply T.elements_keys_norepet.",
                        "VernacExtend",
                        "d3ae6c0fb5b09836ee8d2df3ef670e385b6ddca1"
                    ]
                },
                {
                    "command": [
                        "apply H_base'.",
                        "VernacExtend",
                        "1ffcfe6e11452ebe7ddb93e338ff2b61c5a5f008"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "red in H.",
                        "VernacExtend",
                        "a4b4bf9e03eb87c8fa06c84cfda5cac7b43f2be8"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cardinal_remove",
            "line_nb": 1002,
            "steps": [
                {
                    "command": [
                        "unfold cardinal; intros.",
                        "VernacExtend",
                        "64cc1664ce6f0c0a40f76871a1e43488df8be977"
                    ]
                },
                {
                    "command": [
                        "exploit T.elements_remove; eauto.",
                        "VernacExtend",
                        "432f24cb3aab53b30997e79237af7ad3fcf54725"
                    ]
                },
                {
                    "command": [
                        "intros (l1 & l2 & P & Q).",
                        "VernacExtend",
                        "529b7565d976fa42f6da58e6b3b6edd63e5fbe92"
                    ]
                },
                {
                    "command": [
                        "rewrite P, Q.",
                        "VernacExtend",
                        "3b6c54c6a061c1fcf846ce33a4d2a6fb79b0de7c"
                    ]
                },
                {
                    "command": [
                        "rewrite ! app_length.",
                        "VernacExtend",
                        "1039b12e4d262380189e8c5c3c3559a59611196c"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cardinal_set",
            "line_nb": 1011,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "set (m' := T.set x y m).",
                        "VernacExtend",
                        "f707011653c4bdced5f39d175a8d32ee486a42a7"
                    ]
                },
                {
                    "command": [
                        "replace (cardinal m) with (cardinal (T.remove x m')).",
                        "VernacExtend",
                        "595650257e7ed8f1ecb46644097826c111cf0271"
                    ]
                },
                {
                    "command": [
                        "apply cardinal_remove with y.",
                        "VernacExtend",
                        "8b83738ab71a9a0b11ae838537be5ef535725a81"
                    ]
                },
                {
                    "command": [
                        "unfold m'; apply T.gss.",
                        "VernacExtend",
                        "2a1b27e671380d1dfcd8e3a32a3d3afc43e98a56"
                    ]
                },
                {
                    "command": [
                        "unfold cardinal.",
                        "VernacExtend",
                        "bc68d98c5d76cd12bc39bbbc7814d3b1a3923282"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply T.elements_extensional.",
                        "VernacExtend",
                        "1e9cf71fd1a7c0955047022d4bdc034dd42a328c"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold m'.",
                        "VernacExtend",
                        "7a4740a7c8abda7b43e06f248b79706eef83dd0a"
                    ]
                },
                {
                    "command": [
                        "rewrite T.grspec, T.gsspec.",
                        "VernacExtend",
                        "35ce4b87ff1a74cf29e085abab6f2b01c4847b48"
                    ]
                },
                {
                    "command": [
                        "destruct (T.elt_eq i x); auto.",
                        "VernacExtend",
                        "d00199a350636f7b665d06a4957880532df7f339"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "for_all_correct",
            "line_nb": 1030,
            "steps": [
                {
                    "command": [
                        "intros m0 f.",
                        "VernacExtend",
                        "b84b467076dd96dadc5396c684dd9021ad55076d"
                    ]
                },
                {
                    "command": [
                        "unfold for_all.",
                        "VernacExtend",
                        "0bb39ab1b91f3808b48f6bca5ad1d718c7138eb1"
                    ]
                },
                {
                    "command": [
                        "apply fold_rec; intros.",
                        "VernacExtend",
                        "f80b5d85c7849302c3492854d947016a2d74d821"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H in H2; auto.",
                        "VernacExtend",
                        "ef74c9420d6af5cd857a3821b8d6d24f03ac8102"
                    ]
                },
                {
                    "command": [
                        "rewrite H in H2; auto.",
                        "VernacExtend",
                        "321b0849ccde7fed8f8406b850f148923bbbd9d7"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "rewrite T.gempty in H0; congruence.",
                        "VernacExtend",
                        "ced2356b3a9d8f6e1512a53a4519a2d692512bd9"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "destruct (andb_prop _ _ H2).",
                        "VernacExtend",
                        "2a0c7d368df83e5735377f8a31180fe5a2270c11"
                    ]
                },
                {
                    "command": [
                        "rewrite T.gsspec in H3.",
                        "VernacExtend",
                        "0bd68fe9d29ca7406f0b93a53c02f615119d22a9"
                    ]
                },
                {
                    "command": [
                        "destruct (T.elt_eq x k).",
                        "VernacExtend",
                        "0c7d825de862449ebc1a157fc18eec52da092923"
                    ]
                },
                {
                    "command": [
                        "inv H3.",
                        "VernacExtend",
                        "bf389b6bd23f97715c74ed9eca5a780ee9e91e3c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply H1; auto.",
                        "VernacExtend",
                        "57fc44af14fcaf3758941b68060efcbab0060c55"
                    ]
                },
                {
                    "command": [
                        "apply andb_true_intro.",
                        "VernacExtend",
                        "568074f8ecdece0f16c49f5bea6e2c18016f95d3"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply H2.",
                        "VernacExtend",
                        "17101978526a14fb5ad41816224a2fc35cc3d256"
                    ]
                },
                {
                    "command": [
                        "rewrite T.gso; auto.",
                        "VernacExtend",
                        "eb6bef6de6b4e3df32a9cc6307b4ff143d3d7a98"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "apply H2.",
                        "VernacExtend",
                        "17101978526a14fb5ad41816224a2fc35cc3d256"
                    ]
                },
                {
                    "command": [
                        "apply T.gss.",
                        "VernacExtend",
                        "cea188cee4cada5fe79bb24fdeafea1167915915"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exists_correct",
            "line_nb": 1062,
            "steps": [
                {
                    "command": [
                        "intros m0 f.",
                        "VernacExtend",
                        "b84b467076dd96dadc5396c684dd9021ad55076d"
                    ]
                },
                {
                    "command": [
                        "unfold exists_.",
                        "VernacExtend",
                        "d2f748821143b5dc214f1dee23c213aab50935e0"
                    ]
                },
                {
                    "command": [
                        "apply fold_rec; intros.",
                        "VernacExtend",
                        "f80b5d85c7849302c3492854d947016a2d74d821"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "split; intros (x0 & a0 & P & Q); exists x0; exists a0; split; auto; congruence.",
                        "VernacExtend",
                        "d303be96d1675decb3ea8a1c6a23d2a5361e35c1"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "destruct H as (x & a & P & Q).",
                        "VernacExtend",
                        "ddfcaa6409f7f8b69edecc9ba28bf6a717b22e1b"
                    ]
                },
                {
                    "command": [
                        "rewrite T.gempty in P; congruence.",
                        "VernacExtend",
                        "a71c1961911411d7994357f4c6944015521a9122"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "destruct (orb_true_elim _ _ H2).",
                        "VernacExtend",
                        "cf432ea944e3e8fcd309430aed104a0c70f44313"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in e.",
                        "VernacExtend",
                        "e2583ae3e179b9a8ce4203c026fcb9a41463c3bd"
                    ]
                },
                {
                    "command": [
                        "destruct e as (x1 & a1 & P & Q).",
                        "VernacExtend",
                        "bbd14bed1fbcf90f35dca3b1aa730e81238a9bec"
                    ]
                },
                {
                    "command": [
                        "exists x1; exists a1; split; auto.",
                        "VernacExtend",
                        "d6ce88e1a00f024b752c581570983a307b4a4d77"
                    ]
                },
                {
                    "command": [
                        "rewrite T.gso; auto.",
                        "VernacExtend",
                        "eb6bef6de6b4e3df32a9cc6307b4ff143d3d7a98"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "exists k; exists v; split; auto.",
                        "VernacExtend",
                        "17725ad66e1897c988093904a52e514c17de61a4"
                    ]
                },
                {
                    "command": [
                        "apply T.gss.",
                        "VernacExtend",
                        "cea188cee4cada5fe79bb24fdeafea1167915915"
                    ]
                },
                {
                    "command": [
                        "destruct H2 as (x1 & a1 & P & Q).",
                        "VernacExtend",
                        "a232b9731f6a42cb30953ec8d7d38e1e943eddcb"
                    ]
                },
                {
                    "command": [
                        "apply orb_true_intro.",
                        "VernacExtend",
                        "ac8aefcb6c0b29fc84a3bad60ec2908212680360"
                    ]
                },
                {
                    "command": [
                        "rewrite T.gsspec in P.",
                        "VernacExtend",
                        "7b85e9cfb0bd9a5da466ed79a688a9a982698400"
                    ]
                },
                {
                    "command": [
                        "destruct (T.elt_eq x1 k).",
                        "VernacExtend",
                        "053ed1d4f0447d46b95e3644478a3a2eb5043b4f"
                    ]
                },
                {
                    "command": [
                        "inv P.",
                        "VernacExtend",
                        "9db9e551d407fb52f890fa8275c215698a67094e"
                    ]
                },
                {
                    "command": [
                        "right; auto.",
                        "VernacExtend",
                        "1f0a695ab06b3950e6a7adf329d300b1f859fe9d"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "apply H1.",
                        "VernacExtend",
                        "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
                    ]
                },
                {
                    "command": [
                        "exists x1; exists a1; auto.",
                        "VernacExtend",
                        "d2b0b07bc50b4358fe7887b4feda2f4a274659b1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exists_for_all",
            "line_nb": 1094,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold exists_, for_all.",
                        "VernacExtend",
                        "50b80ca1bf54ac69909b78aa09e5c46523e26310"
                    ]
                },
                {
                    "command": [
                        "rewrite ! T.fold_spec.",
                        "VernacExtend",
                        "67a10b7f6ffc7bd661b35e92bb87854026126bce"
                    ]
                },
                {
                    "command": [
                        "change false with (negb true).",
                        "VernacExtend",
                        "128901f4d1b729c33466cbb38fb88eda3471bf6b"
                    ]
                },
                {
                    "command": [
                        "generalize (T.elements m) true.",
                        "VernacExtend",
                        "1aa66482369ed11c8954f7349b79c52236111d13"
                    ]
                },
                {
                    "command": [
                        "induction l; simpl; intros.",
                        "VernacExtend",
                        "34e9ea5965da389dfe8faf53c8ea4965d4fdcc22"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite <- IHl.",
                        "VernacExtend",
                        "d08c434fe9e4c4b4cc3e1701a922431b2b99a42a"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "destruct b; destruct (f (fst a) (snd a)); reflexivity.",
                        "VernacExtend",
                        "dfcd23640452f109bc6b5dca55719276c38d9d8d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "for_all_exists",
            "line_nb": 1106,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold exists_, for_all.",
                        "VernacExtend",
                        "50b80ca1bf54ac69909b78aa09e5c46523e26310"
                    ]
                },
                {
                    "command": [
                        "rewrite ! T.fold_spec.",
                        "VernacExtend",
                        "67a10b7f6ffc7bd661b35e92bb87854026126bce"
                    ]
                },
                {
                    "command": [
                        "change true with (negb false).",
                        "VernacExtend",
                        "18a942df4a07dbf18345ef51141f1527de63e701"
                    ]
                },
                {
                    "command": [
                        "generalize (T.elements m) false.",
                        "VernacExtend",
                        "a824b7258b21b61da5b0b1be09389faa463471b7"
                    ]
                },
                {
                    "command": [
                        "induction l; simpl; intros.",
                        "VernacExtend",
                        "34e9ea5965da389dfe8faf53c8ea4965d4fdcc22"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite <- IHl.",
                        "VernacExtend",
                        "d08c434fe9e4c4b4cc3e1701a922431b2b99a42a"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "destruct b; destruct (f (fst a) (snd a)); reflexivity.",
                        "VernacExtend",
                        "dfcd23640452f109bc6b5dca55719276c38d9d8d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "for_all_false",
            "line_nb": 1118,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite for_all_exists.",
                        "VernacExtend",
                        "f7bf9a61228d11b83df9b36bdde00b8cad1d0ce9"
                    ]
                },
                {
                    "command": [
                        "rewrite negb_false_iff.",
                        "VernacExtend",
                        "b6c9bcef13f76c689a8d91e22fc8f796fde932b6"
                    ]
                },
                {
                    "command": [
                        "rewrite exists_correct.",
                        "VernacExtend",
                        "666ae37950736a53f76fc18fc795cfd2cc0970d3"
                    ]
                },
                {
                    "command": [
                        "split; intros (x & a & P & Q); exists x; exists a; split; auto.",
                        "VernacExtend",
                        "7d331f54c05adab65e8b15991e999b6482a44e22"
                    ]
                },
                {
                    "command": [
                        "rewrite negb_true_iff in Q.",
                        "VernacExtend",
                        "b473ad288bf1c5bc351887eb02c73ba8571d2bdc"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite Q; auto.",
                        "VernacExtend",
                        "4e72a38431e485ccf0626d554797544fceb80c6e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exists_false",
            "line_nb": 1128,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite exists_for_all.",
                        "VernacExtend",
                        "4cc327b8c0b77bf9510a497048a9e51ca64a2c13"
                    ]
                },
                {
                    "command": [
                        "rewrite negb_false_iff.",
                        "VernacExtend",
                        "b6c9bcef13f76c689a8d91e22fc8f796fde932b6"
                    ]
                },
                {
                    "command": [
                        "rewrite for_all_correct.",
                        "VernacExtend",
                        "1e24fb86d3dac0cf27df1ba8b0bfa82340488f86"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "apply H in H0.",
                        "VernacExtend",
                        "3b12de80516a2aa60cdde675feacb2e18e944fd4"
                    ]
                },
                {
                    "command": [
                        "rewrite negb_true_iff in H0.",
                        "VernacExtend",
                        "a89ba6968f0d98ea575d8bff3ae45f6756eec2c9"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite H; auto.",
                        "VernacExtend",
                        "3e25713af8eaa76cddf9287af10d66733da2ee16"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "beq_false",
            "line_nb": 1143,
            "steps": [
                {
                    "command": [
                        "intros; split; intros.",
                        "VernacExtend",
                        "c2ba330b9c2c5e22fd554cd9ccb5c9ade0d6123e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "set (p1 := fun x a1 => match T.get x m2 with None => false | Some a2 => beqA a1 a2 end).",
                        "VernacExtend",
                        "c20987396185a369ed89895218c97ebffc0619b3"
                    ]
                },
                {
                    "command": [
                        "set (p2 := fun x a2 => match T.get x m1 with None => false | Some a1 => beqA a1 a2 end).",
                        "VernacExtend",
                        "122ad9af040d2ba2e1249c84e7a6d54ea2b139c9"
                    ]
                },
                {
                    "command": [
                        "destruct (for_all m1 p1) eqn:F1; [destruct (for_all m2 p2) eqn:F2 | idtac].",
                        "VernacExtend",
                        "417c74cdc617f4d639088806a6cd4cebc0caf947"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "cut (T.beq beqA m1 m2 = true).",
                        "VernacExtend",
                        "3d5687650a2f27f45844b8826d3515922da680e4"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "rewrite for_all_correct in *.",
                        "VernacExtend",
                        "34849da9ee8c704aa508de3a492b9794fb8db0b0"
                    ]
                },
                {
                    "command": [
                        "rewrite T.beq_correct; intros.",
                        "VernacExtend",
                        "8308a5d8d606d5351d76e87d8e50dd4512084d91"
                    ]
                },
                {
                    "command": [
                        "destruct (T.get x m1) as [a1|] eqn:X1.",
                        "VernacExtend",
                        "b110e67fb6afd9330522eb157c2e8f57c3396795"
                    ]
                },
                {
                    "command": [
                        "generalize (F1 _ _ X1).",
                        "VernacExtend",
                        "ab58c63e55ff61ddfacbf78466af8b418196b4de"
                    ]
                },
                {
                    "command": [
                        "unfold p1.",
                        "VernacExtend",
                        "84fa98e49a7ef63190d6249246c56b352c8f22f4"
                    ]
                },
                {
                    "command": [
                        "destruct (T.get x m2); congruence.",
                        "VernacExtend",
                        "5d8cdf8ec8224c4bd44567a0fd25ad2e05f29b13"
                    ]
                },
                {
                    "command": [
                        "destruct (T.get x m2) as [a2|] eqn:X2; auto.",
                        "VernacExtend",
                        "131e17a909f20d7b700bbcad733a681a9ad0e915"
                    ]
                },
                {
                    "command": [
                        "generalize (F2 _ _ X2).",
                        "VernacExtend",
                        "f44b777f2e2b34f2714786773a3ef9d7fd21ca45"
                    ]
                },
                {
                    "command": [
                        "unfold p2.",
                        "VernacExtend",
                        "8bf838445dbc62e28128e0ac9de47960f238826a"
                    ]
                },
                {
                    "command": [
                        "rewrite X1.",
                        "VernacExtend",
                        "13ca7b87e20d3729a2fe77aa4906bf4a9c0a9366"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite for_all_false in F2.",
                        "VernacExtend",
                        "1cb522aa9748860c77f2b6bd16313b5fa1d7abda"
                    ]
                },
                {
                    "command": [
                        "destruct F2 as (x & a & P & Q).",
                        "VernacExtend",
                        "bb5cdd6f206de349e9e75d4867a2179ff927c10a"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "rewrite P.",
                        "VernacExtend",
                        "a68444f3ff5a99dd68a5269da7bfb78567ba4ea2"
                    ]
                },
                {
                    "command": [
                        "unfold p2 in Q.",
                        "VernacExtend",
                        "5467cf392b5bcdefe923e99c3afb343c68a1dccd"
                    ]
                },
                {
                    "command": [
                        "destruct (T.get x m1); auto.",
                        "VernacExtend",
                        "f4d4c8df286a256f948977f2f93421347dccc2e0"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite for_all_false in F1.",
                        "VernacExtend",
                        "7203b9a3ee29f8b7ebb815679a6572fd21c8b6aa"
                    ]
                },
                {
                    "command": [
                        "destruct F1 as (x & a & P & Q).",
                        "VernacExtend",
                        "c53cebc160918b1b88cd75f8c95af7188ad711a2"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "rewrite P.",
                        "VernacExtend",
                        "a68444f3ff5a99dd68a5269da7bfb78567ba4ea2"
                    ]
                },
                {
                    "command": [
                        "unfold p1 in Q.",
                        "VernacExtend",
                        "3b666026eb689722f150286844d4fa347ef9d704"
                    ]
                },
                {
                    "command": [
                        "destruct (T.get x m2); auto.",
                        "VernacExtend",
                        "c11fdf99351959897aeea621ff645b67d4d34d4e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct H as [x P].",
                        "VernacExtend",
                        "e6dd9e9149c7d80075027950c4fb7449d5a68f00"
                    ]
                },
                {
                    "command": [
                        "destruct (T.beq beqA m1 m2) eqn:E; auto.",
                        "VernacExtend",
                        "4582e6e4bc82eb470bc7a92652e388833a553ff4"
                    ]
                },
                {
                    "command": [
                        "rewrite T.beq_correct in E.",
                        "VernacExtend",
                        "72b967f5595ef62368af09c8b59b3d375da31afa"
                    ]
                },
                {
                    "command": [
                        "generalize (E x).",
                        "VernacExtend",
                        "673a1c4222d77198c60425887d397b39bd5336d2"
                    ]
                },
                {
                    "command": [
                        "destruct (T.get x m1); destruct (T.get x m2); tauto || congruence.",
                        "VernacExtend",
                        "116a1642ebc0270417fd530205c009fa66caf62f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Equal_refl",
            "line_nb": 1190,
            "steps": [
                {
                    "command": [
                        "intros; red; intros.",
                        "VernacExtend",
                        "51aeefe3bf0889d494d662b4f3305dd8bbc97324"
                    ]
                },
                {
                    "command": [
                        "destruct (T.get x m); auto.",
                        "VernacExtend",
                        "91736642c9f03202b7e6f14c1a7f960f929f49db"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Equal_sym",
            "line_nb": 1195,
            "steps": [
                {
                    "command": [
                        "intros; red; intros.",
                        "VernacExtend",
                        "51aeefe3bf0889d494d662b4f3305dd8bbc97324"
                    ]
                },
                {
                    "command": [
                        "generalize (H x).",
                        "VernacExtend",
                        "843b06d01bb5b75d1b3332a7cda55cfef30c3395"
                    ]
                },
                {
                    "command": [
                        "destruct (T.get x m1); destruct (T.get x m2); auto.",
                        "VernacExtend",
                        "10602140feb999072f82bbfd6c43ca7183c35964"
                    ]
                },
                {
                    "command": [
                        "intros; symmetry; auto.",
                        "VernacExtend",
                        "ffbc23a481940670a0a1c39e89e6f238f4827842"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Equal_trans",
            "line_nb": 1201,
            "steps": [
                {
                    "command": [
                        "intros; red; intros.",
                        "VernacExtend",
                        "51aeefe3bf0889d494d662b4f3305dd8bbc97324"
                    ]
                },
                {
                    "command": [
                        "generalize (H x) (H0 x).",
                        "VernacExtend",
                        "5b7016ac555dcfca78fa433ca89ce81321fb3c64"
                    ]
                },
                {
                    "command": [
                        "destruct (T.get x m1); destruct (T.get x m2); try tauto; destruct (T.get x m3); try tauto.",
                        "VernacExtend",
                        "8398c0009d99ad71bc843961f88794e25666d05c"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "transitivity a0; auto.",
                        "VernacExtend",
                        "18f8aa4ea7ca97e1437d55899c2cc13c7faa64b9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Equal_dec_obligation_1",
            "line_nb": 1211,
            "steps": [
                {
                    "command": [
                        "rename Heq_anonymous into B.",
                        "VernacExtend",
                        "8eb51706b5848f1108e580d31b3b1f60e1123fe5"
                    ]
                },
                {
                    "command": [
                        "symmetry in B.",
                        "VernacExtend",
                        "d9dab82b41a467f9241773d6f7820feac7da1223"
                    ]
                },
                {
                    "command": [
                        "rewrite T.beq_correct in B.",
                        "VernacExtend",
                        "7328a443c008f2902034c42ab1feb15121d52be2"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "generalize (B x).",
                        "VernacExtend",
                        "81fb0b40a5b73b1ccf33453b43d3304e9371abfe"
                    ]
                },
                {
                    "command": [
                        "destruct (T.get x m1); destruct (T.get x m2); auto.",
                        "VernacExtend",
                        "10602140feb999072f82bbfd6c43ca7183c35964"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eapply proj_sumbool_true; eauto.",
                        "VernacExtend",
                        "a33be217d620004d8efbcff5e8cceb9b2bbf4498"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Equal_dec_obligation_2",
            "line_nb": 1221,
            "steps": [
                {
                    "command": [
                        "assert (T.beq (fun a1 a2 => proj_sumbool (a1 == a2)) m1 m2 = true).",
                        "VernacExtend",
                        "89fd3f941a720b7efa847e38348952cb65b306a8"
                    ]
                },
                {
                    "command": [
                        "apply T.beq_correct; intros.",
                        "VernacExtend",
                        "5908c91e1c0a3babbeaab4281223057bb3493b7e"
                    ]
                },
                {
                    "command": [
                        "generalize (H x).",
                        "VernacExtend",
                        "843b06d01bb5b75d1b3332a7cda55cfef30c3395"
                    ]
                },
                {
                    "command": [
                        "destruct (T.get x m1); destruct (T.get x m2); try tauto.",
                        "VernacExtend",
                        "6f65841e819fe0c9c7c3db6a2723e6598c71f1cb"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply proj_sumbool_is_true; auto.",
                        "VernacExtend",
                        "2f8991f36c089628b74263bf757af6d782a8a661"
                    ]
                },
                {
                    "command": [
                        "unfold equiv, complement in H0.",
                        "VernacExtend",
                        "368652671ee9ba500087252555442629a3d5a819"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_of_list",
            "line_nb": 1237,
            "steps": [
                {
                    "command": [
                        "assert (REC: forall k v l m, T.get k (fold_left f l m) = Some v -> In (k, v) l \\/ T.get k m = Some v).",
                        "VernacExtend",
                        "adcccae517c3858ecba1748f77edb8caea2319d8"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "induction l as [ | [k1 v1] l]; simpl; intros.",
                        "VernacExtend",
                        "957f5945bd4be6c3fadd1f96e1e81059cb75472e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply IHl in H.",
                        "VernacExtend",
                        "026ffd1ae8feb4aa22a4c7244c1588d60257424f"
                    ]
                },
                {
                    "command": [
                        "unfold f in H.",
                        "VernacExtend",
                        "1956e51b8801fd48b7fa2b75c14ded009e410f7f"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "rewrite T.gsspec in H.",
                        "VernacExtend",
                        "969d719b42a74446db65e0b6966a4ab0bc4c0e47"
                    ]
                },
                {
                    "command": [
                        "destruct H; auto.",
                        "VernacExtend",
                        "95ae427bd4e09a5f31c59184b718811a23ecb36f"
                    ]
                },
                {
                    "command": [
                        "destruct (T.elt_eq k k1).",
                        "VernacExtend",
                        "a8f680bedaee857e3e279f2f32f95e0809d4cc27"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply REC in H.",
                        "VernacExtend",
                        "2fce8b23c49588dd4336f6612538dc4ff18a6698"
                    ]
                },
                {
                    "command": [
                        "rewrite T.gempty in H.",
                        "VernacExtend",
                        "ec17eef1fbeca4a6558730a164edd9483b2eb34b"
                    ]
                },
                {
                    "command": [
                        "intuition congruence.",
                        "VernacExtend",
                        "2cba3542847e3f4ea52f3f62375adc6e8f8f04bc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "of_list_dom",
            "line_nb": 1259,
            "steps": [
                {
                    "command": [
                        "assert (REC: forall k l m, In k (map fst l) \\/ (exists v, T.get k m = Some v) -> exists v, T.get k (fold_left f l m) = Some v).",
                        "VernacExtend",
                        "dda1e97554389a7d04578d7d08650ee24066ca56"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "induction l as [ | [k1 v1] l]; simpl; intros.",
                        "VernacExtend",
                        "957f5945bd4be6c3fadd1f96e1e81059cb75472e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply IHl.",
                        "VernacExtend",
                        "af412c6009bba78f939aa53ab07dcd1baaf5888b"
                    ]
                },
                {
                    "command": [
                        "unfold f; rewrite T.gsspec.",
                        "VernacExtend",
                        "4501addba3f66165b814b84cc19d770160ab155f"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct (T.elt_eq k k1).",
                        "VernacExtend",
                        "a8f680bedaee857e3e279f2f32f95e0809d4cc27"
                    ]
                },
                {
                    "command": [
                        "right; econstructor; eauto.",
                        "VernacExtend",
                        "d3e21c6b3c5c8a3711dd6fbf700dc69b4a8bdcc8"
                    ]
                },
                {
                    "command": [
                        "intuition congruence.",
                        "VernacExtend",
                        "2cba3542847e3f4ea52f3f62375adc6e8f8f04bc"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply REC.",
                        "VernacExtend",
                        "e733722808ad45bfc33c10352d0508158cb70b5f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "of_list_unchanged",
            "line_nb": 1277,
            "steps": [
                {
                    "command": [
                        "induction l as [ | [k1 v1] l]; simpl; intros.",
                        "VernacExtend",
                        "957f5945bd4be6c3fadd1f96e1e81059cb75472e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl by tauto.",
                        "VernacExtend",
                        "57520e04f83de6746b1a4b62c9b6bf09a568588c"
                    ]
                },
                {
                    "command": [
                        "unfold f; apply T.gso; intuition auto.",
                        "VernacExtend",
                        "dff0a632877140c5963900c2ca9e8d58d73614c2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "of_list_unique",
            "line_nb": 1285,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold of_list.",
                        "VernacExtend",
                        "823e2939e746d11b037fa582e82041510555b05e"
                    ]
                },
                {
                    "command": [
                        "rewrite fold_left_app.",
                        "VernacExtend",
                        "94bd7866d849f1a79f70458c9064c0a7877defe5"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite of_list_unchanged by auto.",
                        "VernacExtend",
                        "1d17de4ab1328564fdeb8bff921e4010d39ca77e"
                    ]
                },
                {
                    "command": [
                        "unfold f; apply T.gss.",
                        "VernacExtend",
                        "d0c090688322401534fc6487b14397d744d22c70"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "of_list_norepet",
            "line_nb": 1293,
            "steps": [
                {
                    "command": [
                        "assert (REC: forall k v l m, list_norepet (map fst l) -> In (k, v) l -> T.get k (fold_left f l m) = Some v).",
                        "VernacExtend",
                        "d1b2a6f625e21c027cb12c6dc29909210148cbd7"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "induction l as [ | [k1 v1] l]; simpl; intros.",
                        "VernacExtend",
                        "957f5945bd4be6c3fadd1f96e1e81059cb75472e"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "rewrite of_list_unchanged by auto.",
                        "VernacExtend",
                        "1d17de4ab1328564fdeb8bff921e4010d39ca77e"
                    ]
                },
                {
                    "command": [
                        "apply T.gss.",
                        "VernacExtend",
                        "cea188cee4cada5fe79bb24fdeafea1167915915"
                    ]
                },
                {
                    "command": [
                        "apply IHl; auto.",
                        "VernacExtend",
                        "e138dde1a62d902d35fbbfcb71bf2b52acaced18"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intros; apply REC; auto.",
                        "VernacExtend",
                        "2cf6b89f65286f391fa687ed5286247ba49d57d0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "of_list_elements",
            "line_nb": 1307,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (T.get k m) as [v|] eqn:M.",
                        "VernacExtend",
                        "3c5920a9141beb49c6ae9f0525abdf7ac77c9b30"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply of_list_norepet.",
                        "VernacExtend",
                        "ccde4f933d71a070e9fc76d15952eb687338b197"
                    ]
                },
                {
                    "command": [
                        "apply T.elements_keys_norepet.",
                        "VernacExtend",
                        "d3ae6c0fb5b09836ee8d2df3ef670e385b6ddca1"
                    ]
                },
                {
                    "command": [
                        "apply T.elements_correct; auto.",
                        "VernacExtend",
                        "ac99914a9c83c67ec6a0f00797e3e38b83a26a61"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (T.get k (of_list (T.elements m))) as [v|] eqn:M'; auto.",
                        "VernacExtend",
                        "9bc703e28b1a2cca9af3c25e7c8568850cfda9cc"
                    ]
                },
                {
                    "command": [
                        "apply in_of_list in M'.",
                        "VernacExtend",
                        "45cd8147438e6fe9715167841e420b172e377df7"
                    ]
                },
                {
                    "command": [
                        "apply T.elements_complete in M'.",
                        "VernacExtend",
                        "3ca445ffd185eeeee6b5a692d578629f4fe3840f"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "of_list_related",
            "line_nb": 1321,
            "steps": [
                {
                    "command": [
                        "intros until k.",
                        "VernacExtend",
                        "6564a1db6a1ad429865a24b3c51af94e97f807b5"
                    ]
                },
                {
                    "command": [
                        "unfold of_list.",
                        "VernacExtend",
                        "823e2939e746d11b037fa582e82041510555b05e"
                    ]
                },
                {
                    "command": [
                        "set (R' := fun ka kb => fst ka = fst kb /\\ R (snd ka) (snd kb)).",
                        "VernacExtend",
                        "ecf484742072cd5cf66c4221b7aedfeae191d1c0"
                    ]
                },
                {
                    "command": [
                        "set (fa := fun (m : T.t A) (k_v : T.elt * A) => T.set (fst k_v) (snd k_v) m).",
                        "VernacExtend",
                        "5a65a039f8bd668a2c650cf55856c78479274922"
                    ]
                },
                {
                    "command": [
                        "set (fb := fun (m : T.t B) (k_v : T.elt * B) => T.set (fst k_v) (snd k_v) m).",
                        "VernacExtend",
                        "78714943fd19b55b4d37e5bf1215b87d94e506e3"
                    ]
                },
                {
                    "command": [
                        "assert (REC: forall l1 l2, list_forall2 R' l1 l2 -> forall m1 m2, option_rel R (T.get k m1) (T.get k m2) -> option_rel R (T.get k (fold_left fa l1 m1)) (T.get k (fold_left fb l2 m2))).",
                        "VernacExtend",
                        "ac94a09092aaa8faf43c7a0aa611e80702a206d6"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "induction 1; intros; simpl.",
                        "VernacExtend",
                        "70da583d23ed4dbe0b45fe3f9b4af75a02266538"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply IHlist_forall2.",
                        "VernacExtend",
                        "8e8cbe9a1265d03bc1d588f1cfa9661e7120a304"
                    ]
                },
                {
                    "command": [
                        "unfold fa, fb.",
                        "VernacExtend",
                        "a831814099a2a4c08e1eff37c7a351f32c7fbe21"
                    ]
                },
                {
                    "command": [
                        "rewrite ! T.gsspec.",
                        "VernacExtend",
                        "0573cdae5262637f8e0022553d3056d13dd437f6"
                    ]
                },
                {
                    "command": [
                        "destruct H as [E F].",
                        "VernacExtend",
                        "de7b25111cc1fbacc1cb076d8e48102c27e39b5e"
                    ]
                },
                {
                    "command": [
                        "rewrite E.",
                        "VernacExtend",
                        "304079e57d3d6c0912193a26e70d779c9e1768b9"
                    ]
                },
                {
                    "command": [
                        "destruct (T.elt_eq k (fst b1)).",
                        "VernacExtend",
                        "3b2778c7c4934abd79d831cb6dc3cb5212830bc0"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply REC; auto.",
                        "VernacExtend",
                        "67fffa8696e7d3397ac425b80c19f9f471b3f5a8"
                    ]
                },
                {
                    "command": [
                        "rewrite ! T.gempty.",
                        "VernacExtend",
                        "4334edce3460ebe8346ef0cfda859d77680dfb6e"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}