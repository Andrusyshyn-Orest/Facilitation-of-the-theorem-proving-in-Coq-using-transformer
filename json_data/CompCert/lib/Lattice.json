{
    "filename": "lib/Lattice.v",
    "coq_project": "CompCert",
    "vernac_cmds": [
        [
            "Require Import Coqlib.",
            "VernacRequire",
            "bbbe15041aca3a03300067f7acd445b462d537cc"
        ],
        [
            "Require Import Maps.",
            "VernacRequire",
            "f9a27637102e60e06a3c1ceb5a01819e80b9f645"
        ],
        [
            "Require Import FSets.",
            "VernacRequire",
            "ee54c90a16e29ab2c57601b577cefda98f5b07f0"
        ],
        [
            "Local Unset Elimination Schemes.",
            "VernacUnsetOption",
            "2fc2e4d2065c5e8b5b407b11414df6bebc03d0a8"
        ],
        [
            "Local Unset Case Analysis Schemes.",
            "VernacUnsetOption",
            "caf88bd166e725fa13309b094f896ccd6484855c"
        ],
        [
            "Module Type SEMILATTICE.",
            "VernacDeclareModuleType",
            "6102b5638829be3e5f77da69ae5cb155b56125bb"
        ],
        [
            "Parameter t: Type.",
            "VernacAssumption",
            "504795567cd4c81b969bd65cb901c9b8a73ae96f"
        ],
        [
            "Parameter eq: t -> t -> Prop.",
            "VernacAssumption",
            "b9e8de2bceeec26972c451f37695221d2dea3b20"
        ],
        [
            "Axiom eq_refl: forall x, eq x x.",
            "VernacAssumption",
            "d8d9482eb5e85fd4ba62e962bc5b26cf7d24c79e"
        ],
        [
            "Axiom eq_sym: forall x y, eq x y -> eq y x.",
            "VernacAssumption",
            "71301e8ac482160f75176dbfcf2388fb0b58628e"
        ],
        [
            "Axiom eq_trans: forall x y z, eq x y -> eq y z -> eq x z.",
            "VernacAssumption",
            "554bb95e7b0f5812883350f008e16821f7c4b312"
        ],
        [
            "Parameter beq: t -> t -> bool.",
            "VernacAssumption",
            "3d1d4f49e22a7bbc10a92c0efd32ad6d3b7fa288"
        ],
        [
            "Axiom beq_correct: forall x y, beq x y = true -> eq x y.",
            "VernacAssumption",
            "d04d4fb9ded52bcc55f4be86cc32fc3b479c0316"
        ],
        [
            "Parameter ge: t -> t -> Prop.",
            "VernacAssumption",
            "daf4e7934f7f477f3d0da26f18d57f457c776965"
        ],
        [
            "Axiom ge_refl: forall x y, eq x y -> ge x y.",
            "VernacAssumption",
            "c95c5ee06d175bb8167ea0387109be0068779f4b"
        ],
        [
            "Axiom ge_trans: forall x y z, ge x y -> ge y z -> ge x z.",
            "VernacAssumption",
            "3182bc797fd013d4e14a41638a1a3c0ee7dc044f"
        ],
        [
            "Parameter bot: t.",
            "VernacAssumption",
            "9b89cf76d7e03977b5605fb3675e0e2bf730ddef"
        ],
        [
            "Axiom ge_bot: forall x, ge x bot.",
            "VernacAssumption",
            "1025d4fed953e889d80b0be10d07d848f51f61a9"
        ],
        [
            "Parameter lub: t -> t -> t.",
            "VernacAssumption",
            "a6ec43515816e57a731c0baeec2208c2e834620e"
        ],
        [
            "Axiom ge_lub_left: forall x y, ge (lub x y) x.",
            "VernacAssumption",
            "b181681be22d0b051b2c1f3f86a2f3726f93c20b"
        ],
        [
            "Axiom ge_lub_right: forall x y, ge (lub x y) y.",
            "VernacAssumption",
            "15b5bf7f5507ada1bb9e7b1f8a3e31d8c197b9a7"
        ],
        [
            "End SEMILATTICE.",
            "VernacEndSegment",
            "1698dbce8eaf1ffe7092387577a6cd97e1bdcb1e"
        ],
        [
            "Module Type SEMILATTICE_WITH_TOP.",
            "VernacDeclareModuleType",
            "ba214c449ec2feeba2e03530e048bce69768997e"
        ],
        [
            "Include SEMILATTICE.",
            "VernacInclude",
            "dff3e2a5936b5c26077b1411340490606bde5d84"
        ],
        [
            "Parameter top: t.",
            "VernacAssumption",
            "5584f146b397f4126f897320782074f669950c5b"
        ],
        [
            "Axiom ge_top: forall x, ge top x.",
            "VernacAssumption",
            "5844075da7ceeebeb6230330b9d039d4bac859e2"
        ],
        [
            "End SEMILATTICE_WITH_TOP.",
            "VernacEndSegment",
            "8cc3737b6f081d662430e2b573c23e39d66a0a2a"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Module LPMap1(L: SEMILATTICE) <: SEMILATTICE.",
            "VernacDefineModule",
            "c6d4d9934562603f58b616d17c4b5d01134da4a9"
        ],
        [
            "Definition t := PTree.t L.t.",
            "VernacDefinition",
            "2319a9fa38faec4ffdb6aca0cc91c7993bacda6c"
        ],
        [
            "Definition get (p: positive) (x: t) : L.t := match x!p with None => L.bot | Some x => x end.",
            "VernacDefinition",
            "9e8dbf78fc72efdde743d30fba75daebf9c7463f"
        ],
        [
            "Definition set (p: positive) (v: L.t) (x: t) : t := if L.beq v L.bot then PTree.remove p x else PTree.set p v x.",
            "VernacDefinition",
            "c8d0ca2a9b4db757396ffa8fa7e3679a463c74ba"
        ],
        [
            "Lemma gsspec: forall p v x q, L.eq (get q (set p v x)) (if peq q p then v else get q x).",
            "VernacStartTheoremProof",
            "d19e575475dc51e49492dabac710f5c97b13300c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold set, get.",
            "VernacExtend",
            "6e240f007bbe4d161745c51b9d4beb064fa53e86"
        ],
        [
            "destruct (L.beq v L.bot) eqn:EBOT.",
            "VernacExtend",
            "d390282332a19ecc204c2909544bd7e517c1462d"
        ],
        [
            "rewrite PTree.grspec.",
            "VernacExtend",
            "a95a2b49bc4988014f7a03242480236b4c95401b"
        ],
        [
            "unfold PTree.elt_eq.",
            "VernacExtend",
            "66676a1818789ebc909418e8bebc1477225aa5f4"
        ],
        [
            "destruct (peq q p).",
            "VernacExtend",
            "263e8c90cfab1e66a47420dc939edc5af00426bd"
        ],
        [
            "apply L.eq_sym.",
            "VernacExtend",
            "53ff9a697190904ce73664f58e24dad44bd69082"
        ],
        [
            "apply L.beq_correct; auto.",
            "VernacExtend",
            "024326bcff424abe8e8aced3454c18c7959e3830"
        ],
        [
            "apply L.eq_refl.",
            "VernacExtend",
            "d846126aaaca3a8a649a9602def5f9b2c262fc86"
        ],
        [
            "rewrite PTree.gsspec.",
            "VernacExtend",
            "88315e2b3b1f3e40fe18917f8425d57b50a31282"
        ],
        [
            "destruct (peq q p); apply L.eq_refl.",
            "VernacExtend",
            "158632dc5cedcc5ff28f2b69431e6bffb71ca405"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition eq (x y: t) : Prop := forall p, L.eq (get p x) (get p y).",
            "VernacDefinition",
            "bdb0a96fc681550f6c3d6c67ab4060df39489e72"
        ],
        [
            "Lemma eq_refl: forall x, eq x x.",
            "VernacStartTheoremProof",
            "c0741461ec3ebf95df4fc4ebbf1bebac9dd5ff59"
        ],
        [
            "unfold eq; intros.",
            "VernacExtend",
            "396210e0f0e83e774c52c6b6e5dffd3c5beae6a7"
        ],
        [
            "apply L.eq_refl.",
            "VernacExtend",
            "d846126aaaca3a8a649a9602def5f9b2c262fc86"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_sym: forall x y, eq x y -> eq y x.",
            "VernacStartTheoremProof",
            "692a5ac196f60f7b68e928594898f2c8812358af"
        ],
        [
            "unfold eq; intros.",
            "VernacExtend",
            "396210e0f0e83e774c52c6b6e5dffd3c5beae6a7"
        ],
        [
            "apply L.eq_sym; auto.",
            "VernacExtend",
            "69b4aae549a4fe8ad04d872456e6189e0602959e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_trans: forall x y z, eq x y -> eq y z -> eq x z.",
            "VernacStartTheoremProof",
            "1a7eef4592c61e17d255e85f4b2fb7dc005386f2"
        ],
        [
            "unfold eq; intros.",
            "VernacExtend",
            "396210e0f0e83e774c52c6b6e5dffd3c5beae6a7"
        ],
        [
            "eapply L.eq_trans; eauto.",
            "VernacExtend",
            "35f8c57a844ff6254c1f54ab1bda0bfbd0d803b9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition beq (x y: t) : bool := PTree.beq L.beq x y.",
            "VernacDefinition",
            "9c506493d843b4f4f134dd45981285f438492fe6"
        ],
        [
            "Lemma beq_correct: forall x y, beq x y = true -> eq x y.",
            "VernacStartTheoremProof",
            "e4990dea034db2b33ccf9496a563b02967ce258c"
        ],
        [
            "unfold beq; intros; red; intros.",
            "VernacExtend",
            "10bb4b6295dc03014304a991e776527e11cf9e6e"
        ],
        [
            "unfold get.",
            "VernacExtend",
            "0ee15cb7f500427115d62c79c71ab50bde1d2bb9"
        ],
        [
            "rewrite PTree.beq_correct in H.",
            "VernacExtend",
            "f265780090e3c6144c1cae3fae75f35fa2067e7e"
        ],
        [
            "specialize (H p).",
            "VernacExtend",
            "256d57c2b9d4e2181f9370a6b9c0cce07556955d"
        ],
        [
            "destruct (x!p); destruct (y!p); intuition.",
            "VernacExtend",
            "8b4179bb8b0176b7ea18133c2a42b06b71743db1"
        ],
        [
            "apply L.beq_correct; auto.",
            "VernacExtend",
            "024326bcff424abe8e8aced3454c18c7959e3830"
        ],
        [
            "apply L.eq_refl.",
            "VernacExtend",
            "d846126aaaca3a8a649a9602def5f9b2c262fc86"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ge (x y: t) : Prop := forall p, L.ge (get p x) (get p y).",
            "VernacDefinition",
            "1227f3f88c22c2c34fc5f05eeaa1ff5b24782415"
        ],
        [
            "Lemma ge_refl: forall x y, eq x y -> ge x y.",
            "VernacStartTheoremProof",
            "169d0ad676e0306653660955139f274c9b6d611b"
        ],
        [
            "unfold ge, eq; intros.",
            "VernacExtend",
            "49006252dbfd36f896b9c2b3d68b71af455c040b"
        ],
        [
            "apply L.ge_refl.",
            "VernacExtend",
            "789f21b0b00c9fa1973354dffd0311d4e4c5161b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ge_trans: forall x y z, ge x y -> ge y z -> ge x z.",
            "VernacStartTheoremProof",
            "101a2cb0ee8cac4bd53bfba9e8cb3ed2802183fd"
        ],
        [
            "unfold ge; intros.",
            "VernacExtend",
            "cb7947be1c76b9a9b5de47c1001bdf6cb3db6f88"
        ],
        [
            "apply L.ge_trans with (get p y); auto.",
            "VernacExtend",
            "abe6de7302f8a788954753eee962bded47ebe40c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition bot : t := PTree.empty _.",
            "VernacDefinition",
            "507da63aebda9e3a885aa5a2610b9dfae2b49ce6"
        ],
        [
            "Lemma get_bot: forall p, get p bot = L.bot.",
            "VernacStartTheoremProof",
            "3aa76d20bb2bb5ae19b46d3eefb069fd76807d08"
        ],
        [
            "unfold bot, get; intros; simpl.",
            "VernacExtend",
            "346c77eb15a6ee64a4ff33f886a1b8abad894db4"
        ],
        [
            "rewrite PTree.gempty.",
            "VernacExtend",
            "02ad4f08527ee6f058bb5b2fc6b52855b65cf49f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ge_bot: forall x, ge x bot.",
            "VernacStartTheoremProof",
            "e9384b19a3789e7495885ed8c4dd1e8b653f6e81"
        ],
        [
            "unfold ge; intros.",
            "VernacExtend",
            "cb7947be1c76b9a9b5de47c1001bdf6cb3db6f88"
        ],
        [
            "rewrite get_bot.",
            "VernacExtend",
            "a4e2faa41eb27a151bc55374895756a462e6393d"
        ],
        [
            "apply L.ge_bot.",
            "VernacExtend",
            "b26a635957b6673479ad7bf281de21d1bde0bcec"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section COMBINE.",
            "VernacBeginSection",
            "39f27b4d83fd34adc15e46f99339eab5620a6b59"
        ],
        [
            "Variable f: option L.t -> option L.t -> option L.t.",
            "VernacAssumption",
            "bc049aa597169e88706c6a050bdba33183b5f754"
        ],
        [
            "Hypothesis f_none_none: f None None = None.",
            "VernacAssumption",
            "524528d2f8d4a6dac2e8d72a8068059aad37bf8c"
        ],
        [
            "Definition opt_eq (ox oy: option L.t) : Prop := match ox, oy with | None, None => True | Some x, Some y => L.eq x y | _, _ => False end.",
            "VernacDefinition",
            "8635ab8412d01b7d1311a6990a8efcab11b00c4e"
        ],
        [
            "Lemma opt_eq_refl: forall ox, opt_eq ox ox.",
            "VernacStartTheoremProof",
            "fb4be2c9550ff3e6cc41cd38ca4bbe370f7152e9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold opt_eq.",
            "VernacExtend",
            "0d33cf3757e4e6e022e9a30d31db7f02d3d05527"
        ],
        [
            "destruct ox.",
            "VernacExtend",
            "01c62117cc48c1a4bd8eeefa2ea51cfb55be4fee"
        ],
        [
            "apply L.eq_refl.",
            "VernacExtend",
            "d846126aaaca3a8a649a9602def5f9b2c262fc86"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma opt_eq_sym: forall ox oy, opt_eq ox oy -> opt_eq oy ox.",
            "VernacStartTheoremProof",
            "7e5376e109d7828fd1b138b40c8be033740bc868"
        ],
        [
            "unfold opt_eq.",
            "VernacExtend",
            "0d33cf3757e4e6e022e9a30d31db7f02d3d05527"
        ],
        [
            "destruct ox; destruct oy; auto.",
            "VernacExtend",
            "22402499abf1031fda4523f3c657df8681b93bee"
        ],
        [
            "apply L.eq_sym.",
            "VernacExtend",
            "53ff9a697190904ce73664f58e24dad44bd69082"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma opt_eq_trans: forall ox oy oz, opt_eq ox oy -> opt_eq oy oz -> opt_eq ox oz.",
            "VernacStartTheoremProof",
            "d220c22bd1b4bd0d1ccf8e450273edd114a6f9be"
        ],
        [
            "unfold opt_eq.",
            "VernacExtend",
            "0d33cf3757e4e6e022e9a30d31db7f02d3d05527"
        ],
        [
            "destruct ox; destruct oy; destruct oz; intuition.",
            "VernacExtend",
            "45c10c4236fe28e6b8e5a4662a71d5eab519ce02"
        ],
        [
            "eapply L.eq_trans; eauto.",
            "VernacExtend",
            "35f8c57a844ff6254c1f54ab1bda0bfbd0d803b9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition opt_beq (ox oy: option L.t) : bool := match ox, oy with | None, None => true | Some x, Some y => L.beq x y | _, _ => false end.",
            "VernacDefinition",
            "aa632a18b0c314c2d3925311fe9ca31e801f4f69"
        ],
        [
            "Lemma opt_beq_correct: forall ox oy, opt_beq ox oy = true -> opt_eq ox oy.",
            "VernacStartTheoremProof",
            "06bd809eb8ead6497dc9e002df388383b48b1606"
        ],
        [
            "unfold opt_beq, opt_eq.",
            "VernacExtend",
            "30c4ab2151d5eff5f4dd9197b6829c06ad0a06f8"
        ],
        [
            "destruct ox; destruct oy; try congruence.",
            "VernacExtend",
            "1b6bd35205076f26a9b2a83534ab01ac0e7b9f38"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply L.beq_correct; auto.",
            "VernacExtend",
            "024326bcff424abe8e8aced3454c18c7959e3830"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition tree_eq (m1 m2: PTree.t L.t) : Prop := forall i, opt_eq (PTree.get i m1) (PTree.get i m2).",
            "VernacDefinition",
            "422a4f8db0d9e392eca8ed8565aae1163f282fcf"
        ],
        [
            "Lemma tree_eq_refl: forall m, tree_eq m m.",
            "VernacStartTheoremProof",
            "0a342a573dd0b8e715e9d19795a32b8ffee9039a"
        ],
        [
            "intros; red; intros; apply opt_eq_refl.",
            "VernacExtend",
            "026c01e44a23390eb33dee2b0c5a1018d012367a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tree_eq_sym: forall m1 m2, tree_eq m1 m2 -> tree_eq m2 m1.",
            "VernacStartTheoremProof",
            "b4ef1f6714f4354b62aa11162d72f5dec3941928"
        ],
        [
            "intros; red; intros; apply opt_eq_sym; auto.",
            "VernacExtend",
            "f932e2957941e691713ca33c9b43824ee7cb41fd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tree_eq_trans: forall m1 m2 m3, tree_eq m1 m2 -> tree_eq m2 m3 -> tree_eq m1 m3.",
            "VernacStartTheoremProof",
            "b3f5a9c6cc25135a80bf990f0024cc96ef58b975"
        ],
        [
            "intros; red; intros; apply opt_eq_trans with (PTree.get i m2); auto.",
            "VernacExtend",
            "a36643bbcb695d6ecd794b1567c93f356c48842d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tree_eq_node: forall l1 o1 r1 l2 o2 r2, tree_eq l1 l2 -> tree_eq r1 r2 -> opt_eq o1 o2 -> tree_eq (PTree.Node l1 o1 r1) (PTree.Node l2 o2 r2).",
            "VernacStartTheoremProof",
            "93b0757885d0344ba1348725e6eae9ce9011a88f"
        ],
        [
            "intros; red; intros.",
            "VernacExtend",
            "51aeefe3bf0889d494d662b4f3305dd8bbc97324"
        ],
        [
            "destruct i; simpl; auto.",
            "VernacExtend",
            "68f1ada8e7ae3853d0bcf6c9ce8dfcaf8bef3fc3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tree_eq_node': forall l1 o1 r1 l2 o2 r2, tree_eq l1 l2 -> tree_eq r1 r2 -> opt_eq o1 o2 -> tree_eq (PTree.Node l1 o1 r1) (PTree.Node' l2 o2 r2).",
            "VernacStartTheoremProof",
            "966b30d54e667f3eb583ed6e159782be7bceb282"
        ],
        [
            "intros; red; intros.",
            "VernacExtend",
            "51aeefe3bf0889d494d662b4f3305dd8bbc97324"
        ],
        [
            "rewrite PTree.gnode'.",
            "VernacExtend",
            "32cc9adf4e82d91e09381f9b1d2c4cc8b7f492e0"
        ],
        [
            "apply tree_eq_node; auto.",
            "VernacExtend",
            "30a59738e21090cd3a41b74d752983dac85fabce"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tree_eq_node'': forall l1 o1 r1 l2 o2 r2, tree_eq l1 l2 -> tree_eq r1 r2 -> opt_eq o1 o2 -> tree_eq (PTree.Node' l1 o1 r1) (PTree.Node' l2 o2 r2).",
            "VernacStartTheoremProof",
            "c41d1464941058a6ebefb7fc6554ddd8423c6bfd"
        ],
        [
            "intros; red; intros.",
            "VernacExtend",
            "51aeefe3bf0889d494d662b4f3305dd8bbc97324"
        ],
        [
            "repeat rewrite PTree.gnode'.",
            "VernacExtend",
            "5331e59b28a73486a59af25b62093be494620bb0"
        ],
        [
            "apply tree_eq_node; auto.",
            "VernacExtend",
            "30a59738e21090cd3a41b74d752983dac85fabce"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve opt_beq_correct opt_eq_refl opt_eq_sym tree_eq_refl tree_eq_sym tree_eq_node tree_eq_node' tree_eq_node'' : combine.",
            "VernacHints",
            "7bb204e4e5c044fac7a54c251a61134b03a462ad"
        ],
        [
            "Inductive changed: Type := Unchanged | Changed (m: PTree.t L.t).",
            "VernacInductive",
            "04bc87f511b3471a0982d0aa2f4bced85009667f"
        ],
        [
            "Fixpoint combine_l (m : PTree.t L.t) {struct m} : changed := match m with | PTree.Leaf => Unchanged | PTree.Node l o r => let o' := f o None in match combine_l l, combine_l r with | Unchanged, Unchanged => if opt_beq o' o then Unchanged else Changed (PTree.Node' l o' r) | Unchanged, Changed r' => Changed (PTree.Node' l o' r') | Changed l', Unchanged => Changed (PTree.Node' l' o' r) | Changed l', Changed r' => Changed (PTree.Node' l' o' r') end end.",
            "VernacFixpoint",
            "03d1be93c9aba7c4c8cc41b3713e3629d919d659"
        ],
        [
            "Lemma combine_l_eq: forall m, tree_eq (match combine_l m with Unchanged => m | Changed m' => m' end) (PTree.xcombine_l f m).",
            "VernacStartTheoremProof",
            "2a26b142bc23d4fa212e31dbac21e619e07d8d16"
        ],
        [
            "induction m; simpl.",
            "VernacExtend",
            "8eeca9e02ca7b585e952baf1eea0278de04f5480"
        ],
        [
            "auto with combine.",
            "VernacExtend",
            "33d0f0befa21ca7b66d82fb5a966f87fb7fda748"
        ],
        [
            "destruct (combine_l m1) as [ | l']; destruct (combine_l m2) as [ | r']; auto with combine.",
            "VernacExtend",
            "8d43b2206e50c6ad7fa6a944e1e5aeaf92c934d4"
        ],
        [
            "case_eq (opt_beq (f o None) o); auto with combine.",
            "VernacExtend",
            "1f14eec52d75b821bad6bb27b9d64afe8bfb3a46"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint combine_r (m : PTree.t L.t) {struct m} : changed := match m with | PTree.Leaf => Unchanged | PTree.Node l o r => let o' := f None o in match combine_r l, combine_r r with | Unchanged, Unchanged => if opt_beq o' o then Unchanged else Changed (PTree.Node' l o' r) | Unchanged, Changed r' => Changed (PTree.Node' l o' r') | Changed l', Unchanged => Changed (PTree.Node' l' o' r) | Changed l', Changed r' => Changed (PTree.Node' l' o' r') end end.",
            "VernacFixpoint",
            "f2fd2d49ef366a8a70083c5c0188595bc3113a53"
        ],
        [
            "Lemma combine_r_eq: forall m, tree_eq (match combine_r m with Unchanged => m | Changed m' => m' end) (PTree.xcombine_r f m).",
            "VernacStartTheoremProof",
            "34ca12f4219f329fa80f60b4bd465e154b69f953"
        ],
        [
            "induction m; simpl.",
            "VernacExtend",
            "8eeca9e02ca7b585e952baf1eea0278de04f5480"
        ],
        [
            "auto with combine.",
            "VernacExtend",
            "33d0f0befa21ca7b66d82fb5a966f87fb7fda748"
        ],
        [
            "destruct (combine_r m1) as [ | l']; destruct (combine_r m2) as [ | r']; auto with combine.",
            "VernacExtend",
            "e004a928eb31aea41af814c30e84bcd74a404a11"
        ],
        [
            "case_eq (opt_beq (f None o) o); auto with combine.",
            "VernacExtend",
            "dc79716463950fc58fb47c3c65b897aeb3bd874f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive changed2 : Type := | Same | Same1 | Same2 | CC(m: PTree.t L.t).",
            "VernacInductive",
            "9ab0a62a29aab65521ff4f083f476af859d371fb"
        ],
        [
            "Fixpoint xcombine (m1 m2 : PTree.t L.t) {struct m1} : changed2 := match m1, m2 with | PTree.Leaf, PTree.Leaf => Same | PTree.Leaf, _ => match combine_r m2 with | Unchanged => Same2 | Changed m => CC m end | _, PTree.Leaf => match combine_l m1 with | Unchanged => Same1 | Changed m => CC m end | PTree.Node l1 o1 r1, PTree.Node l2 o2 r2 => let o := f o1 o2 in match xcombine l1 l2, xcombine r1 r2 with | Same, Same => match opt_beq o o1, opt_beq o o2 with | true, true => Same | true, false => Same1 | false, true => Same2 | false, false => CC(PTree.Node' l1 o r1) end | Same1, Same | Same, Same1 | Same1, Same1 => if opt_beq o o1 then Same1 else CC(PTree.Node' l1 o r1) | Same2, Same | Same, Same2 | Same2, Same2 => if opt_beq o o2 then Same2 else CC(PTree.Node' l2 o r2) | Same1, Same2 => CC(PTree.Node' l1 o r2) | (Same|Same1), CC r => CC(PTree.Node' l1 o r) | Same2, Same1 => CC(PTree.Node' l2 o r1) | Same2, CC r => CC(PTree.Node' l2 o r) | CC l, (Same|Same1) => CC(PTree.Node' l o r1) | CC l, Same2 => CC(PTree.Node' l o r2) | CC l, CC r => CC(PTree.Node' l o r) end end.",
            "VernacFixpoint",
            "d4047d399f13f6978a2733980270f56e40fd5232"
        ],
        [
            "Lemma xcombine_eq: forall m1 m2, match xcombine m1 m2 with | Same => tree_eq m1 (PTree.combine f m1 m2) /\\ tree_eq m2 (PTree.combine f m1 m2) | Same1 => tree_eq m1 (PTree.combine f m1 m2) | Same2 => tree_eq m2 (PTree.combine f m1 m2) | CC m => tree_eq m (PTree.combine f m1 m2) end.",
            "VernacStartTheoremProof",
            "20da58e0ced628e1ada4c7269a1c49c54db226ec"
        ],
        [
            "Opaque combine_l combine_r PTree.xcombine_l PTree.xcombine_r.",
            "VernacSetOpacity",
            "aa02c317cc98086acce14f6360214a12f544aeb2"
        ],
        [
            "induction m1; destruct m2; simpl.",
            "VernacExtend",
            "edff95ff85cb85d01fb7e45b6c676292439e3550"
        ],
        [
            "split; apply tree_eq_refl.",
            "VernacExtend",
            "1cf09ec27b2e61e5c42e663e70474338cedeae12"
        ],
        [
            "generalize (combine_r_eq (PTree.Node m2_1 o m2_2)).",
            "VernacExtend",
            "8f45d385be2bce1099f796e0ca6e8121adce71ae"
        ],
        [
            "destruct (combine_r (PTree.Node m2_1 o m2_2)); auto.",
            "VernacExtend",
            "37b6c5e8a15a6206c0a34e15d35ffad6423c6e32"
        ],
        [
            "generalize (combine_l_eq (PTree.Node m1_1 o m1_2)).",
            "VernacExtend",
            "4bf98309b24473cb9b808b02cdaf24266305623c"
        ],
        [
            "destruct (combine_l (PTree.Node m1_1 o m1_2)); auto.",
            "VernacExtend",
            "1e9693abeb2371a1b58120c2815f6275af660aaa"
        ],
        [
            "generalize (IHm1_1 m2_1) (IHm1_2 m2_2).",
            "VernacExtend",
            "c2001338660fe643e0b43e6918a0bf7836f49b1e"
        ],
        [
            "destruct (xcombine m1_1 m2_1); destruct (xcombine m1_2 m2_2); auto with combine; intuition; case_eq (opt_beq (f o o0) o); case_eq (opt_beq (f o o0) o0); auto with combine.",
            "VernacExtend",
            "a6b79059bf2dc5ca1ee35239bb94d1ef1dc3e2d4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition combine (m1 m2: PTree.t L.t) : PTree.t L.t := match xcombine m1 m2 with | Same|Same1 => m1 | Same2 => m2 | CC m => m end.",
            "VernacDefinition",
            "fd5f699aa12ac91226e0be70ef9e0caf92fb0569"
        ],
        [
            "Lemma gcombine: forall m1 m2 i, opt_eq (PTree.get i (combine m1 m2)) (f (PTree.get i m1) (PTree.get i m2)).",
            "VernacStartTheoremProof",
            "1b284aae059fb14270ac874225ac5f2b52a283cc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (tree_eq (combine m1 m2) (PTree.combine f m1 m2)).",
            "VernacExtend",
            "6801ccf059cceaa28ca382f3739e745d42b5eacf"
        ],
        [
            "unfold combine.",
            "VernacExtend",
            "3edb9a802aa40130f600e158ebfb10551d172159"
        ],
        [
            "generalize (xcombine_eq m1 m2).",
            "VernacExtend",
            "3d195a2e4eb9f5f0c1afdeecd9ea4bd7a8571a2d"
        ],
        [
            "destruct (xcombine m1 m2); tauto.",
            "VernacExtend",
            "760a4e302ff33f63d5316cda87db5d50f28d065f"
        ],
        [
            "eapply opt_eq_trans.",
            "VernacExtend",
            "993947ff1fa89134ddbba8f3b4d3cc097f99a26f"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "rewrite PTree.gcombine; auto.",
            "VernacExtend",
            "68330cb8e00387b67508f3f821c9c05915c3d72f"
        ],
        [
            "apply opt_eq_refl.",
            "VernacExtend",
            "5de95288b94d5958f9737e5f279f482f8269ffd4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End COMBINE.",
            "VernacEndSegment",
            "c4d8f37ab2bd9a9215529aa67febc8bc882d9ad3"
        ],
        [
            "Definition lub (x y: t) : t := combine (fun a b => match a, b with | Some u, Some v => Some (L.lub u v) | None, _ => b | _, None => a end) x y.",
            "VernacDefinition",
            "de7b113e8b49039fac76fa5bbcbf7635cfd61e0b"
        ],
        [
            "Lemma gcombine_bot: forall f t1 t2 p, f None None = None -> L.eq (get p (combine f t1 t2)) (match f t1!p t2!p with Some x => x | None => L.bot end).",
            "VernacStartTheoremProof",
            "25e7e54a12309dc070a2c57d3c32aac6e68398d0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold get.",
            "VernacExtend",
            "0ee15cb7f500427115d62c79c71ab50bde1d2bb9"
        ],
        [
            "generalize (gcombine f H t1 t2 p).",
            "VernacExtend",
            "8dd767f059097962254e4b1a948e169e7fb5c20c"
        ],
        [
            "unfold opt_eq.",
            "VernacExtend",
            "0d33cf3757e4e6e022e9a30d31db7f02d3d05527"
        ],
        [
            "destruct ((combine f t1 t2)!p); destruct (f t1!p t2!p).",
            "VernacExtend",
            "29dc9abbaf7282bf7897777d277aa0192f1dd91f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "intros; apply L.eq_refl.",
            "VernacExtend",
            "2e3736cc19551bee2412503b05d56da5dc21b951"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ge_lub_left: forall x y, ge (lub x y) x.",
            "VernacStartTheoremProof",
            "61945699b1c91c090ff15db1d21ef47aaad3f6e3"
        ],
        [
            "unfold ge, lub; intros.",
            "VernacExtend",
            "9a2fd882e82a01b37648e3fcae8f0169fbaea26b"
        ],
        [
            "eapply L.ge_trans.",
            "VernacExtend",
            "e19f4d435e5e28d9c6fe8abbb8cf3b394612c9cb"
        ],
        [
            "apply L.ge_refl.",
            "VernacExtend",
            "789f21b0b00c9fa1973354dffd0311d4e4c5161b"
        ],
        [
            "apply gcombine_bot; auto.",
            "VernacExtend",
            "3cacfa1628cf726bee9d3deb286f02d0c47d18b9"
        ],
        [
            "unfold get.",
            "VernacExtend",
            "0ee15cb7f500427115d62c79c71ab50bde1d2bb9"
        ],
        [
            "destruct x!p.",
            "VernacExtend",
            "acc293ea77bc6008f379df5d2d416ee70425f991"
        ],
        [
            "destruct y!p.",
            "VernacExtend",
            "4ddb73aa38e6c8e54cf7232d183b74093a35ee37"
        ],
        [
            "apply L.ge_lub_left.",
            "VernacExtend",
            "20fc51124f6c68168b6af2536ec62ff851c13ad2"
        ],
        [
            "apply L.ge_refl.",
            "VernacExtend",
            "789f21b0b00c9fa1973354dffd0311d4e4c5161b"
        ],
        [
            "apply L.eq_refl.",
            "VernacExtend",
            "d846126aaaca3a8a649a9602def5f9b2c262fc86"
        ],
        [
            "apply L.ge_bot.",
            "VernacExtend",
            "b26a635957b6673479ad7bf281de21d1bde0bcec"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ge_lub_right: forall x y, ge (lub x y) y.",
            "VernacStartTheoremProof",
            "7b03928bdfadd1eea38d574f7921a5ca6022a341"
        ],
        [
            "unfold ge, lub; intros.",
            "VernacExtend",
            "9a2fd882e82a01b37648e3fcae8f0169fbaea26b"
        ],
        [
            "eapply L.ge_trans.",
            "VernacExtend",
            "e19f4d435e5e28d9c6fe8abbb8cf3b394612c9cb"
        ],
        [
            "apply L.ge_refl.",
            "VernacExtend",
            "789f21b0b00c9fa1973354dffd0311d4e4c5161b"
        ],
        [
            "apply gcombine_bot; auto.",
            "VernacExtend",
            "3cacfa1628cf726bee9d3deb286f02d0c47d18b9"
        ],
        [
            "unfold get.",
            "VernacExtend",
            "0ee15cb7f500427115d62c79c71ab50bde1d2bb9"
        ],
        [
            "destruct y!p.",
            "VernacExtend",
            "4ddb73aa38e6c8e54cf7232d183b74093a35ee37"
        ],
        [
            "destruct x!p.",
            "VernacExtend",
            "acc293ea77bc6008f379df5d2d416ee70425f991"
        ],
        [
            "apply L.ge_lub_right.",
            "VernacExtend",
            "3103bf62452f0c5d283a9b66b64310f67ea108d4"
        ],
        [
            "apply L.ge_refl.",
            "VernacExtend",
            "789f21b0b00c9fa1973354dffd0311d4e4c5161b"
        ],
        [
            "apply L.eq_refl.",
            "VernacExtend",
            "d846126aaaca3a8a649a9602def5f9b2c262fc86"
        ],
        [
            "apply L.ge_bot.",
            "VernacExtend",
            "b26a635957b6673479ad7bf281de21d1bde0bcec"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End LPMap1.",
            "VernacEndSegment",
            "ca63470bb1c0e2ff63fe908ed1a4cf96c2ea1e38"
        ],
        [
            "Module LPMap(L: SEMILATTICE_WITH_TOP) <: SEMILATTICE_WITH_TOP.",
            "VernacDefineModule",
            "3e72c641f05e6419f0028c41f2731c41ca2cbdd5"
        ],
        [
            "Inductive t' : Type := | Bot: t' | Top_except: PTree.t L.t -> t'.",
            "VernacInductive",
            "9c691cf6e668a899a3a7c4a63ba4238363cb9a8e"
        ],
        [
            "Definition t: Type := t'.",
            "VernacDefinition",
            "864ea4c9e068bda690d3c239f90c1a237d045c05"
        ],
        [
            "Definition get (p: positive) (x: t) : L.t := match x with | Bot => L.bot | Top_except m => match m!p with None => L.top | Some x => x end end.",
            "VernacDefinition",
            "e5a306db6a2443675681e50b4c660511d20ae594"
        ],
        [
            "Definition set (p: positive) (v: L.t) (x: t) : t := match x with | Bot => Bot | Top_except m => if L.beq v L.bot then Bot else Top_except (if L.beq v L.top then PTree.remove p m else PTree.set p v m) end.",
            "VernacDefinition",
            "dba860e69f512af92db74e9410a5215430389bb6"
        ],
        [
            "Lemma gsspec: forall p v x q, x <> Bot -> ~L.eq v L.bot -> L.eq (get q (set p v x)) (if peq q p then v else get q x).",
            "VernacStartTheoremProof",
            "d3fd59c7759a4b9a5f998bd3d3e20e29aacc547b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold set.",
            "VernacExtend",
            "9b0835dc2ca0800df83e9b8ff42518230137531b"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "destruct (L.beq v L.bot) eqn:EBOT.",
            "VernacExtend",
            "d390282332a19ecc204c2909544bd7e517c1462d"
        ],
        [
            "elim H0.",
            "VernacExtend",
            "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
        ],
        [
            "apply L.beq_correct; auto.",
            "VernacExtend",
            "024326bcff424abe8e8aced3454c18c7959e3830"
        ],
        [
            "destruct (L.beq v L.top) eqn:ETOP; simpl.",
            "VernacExtend",
            "0721042814d4b1d21c361a56cdbcb72f658f9260"
        ],
        [
            "rewrite PTree.grspec.",
            "VernacExtend",
            "a95a2b49bc4988014f7a03242480236b4c95401b"
        ],
        [
            "unfold PTree.elt_eq.",
            "VernacExtend",
            "66676a1818789ebc909418e8bebc1477225aa5f4"
        ],
        [
            "destruct (peq q p).",
            "VernacExtend",
            "263e8c90cfab1e66a47420dc939edc5af00426bd"
        ],
        [
            "apply L.eq_sym.",
            "VernacExtend",
            "53ff9a697190904ce73664f58e24dad44bd69082"
        ],
        [
            "apply L.beq_correct; auto.",
            "VernacExtend",
            "024326bcff424abe8e8aced3454c18c7959e3830"
        ],
        [
            "apply L.eq_refl.",
            "VernacExtend",
            "d846126aaaca3a8a649a9602def5f9b2c262fc86"
        ],
        [
            "rewrite PTree.gsspec.",
            "VernacExtend",
            "88315e2b3b1f3e40fe18917f8425d57b50a31282"
        ],
        [
            "destruct (peq q p); apply L.eq_refl.",
            "VernacExtend",
            "158632dc5cedcc5ff28f2b69431e6bffb71ca405"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition eq (x y: t) : Prop := forall p, L.eq (get p x) (get p y).",
            "VernacDefinition",
            "bdb0a96fc681550f6c3d6c67ab4060df39489e72"
        ],
        [
            "Lemma eq_refl: forall x, eq x x.",
            "VernacStartTheoremProof",
            "c0741461ec3ebf95df4fc4ebbf1bebac9dd5ff59"
        ],
        [
            "unfold eq; intros.",
            "VernacExtend",
            "396210e0f0e83e774c52c6b6e5dffd3c5beae6a7"
        ],
        [
            "apply L.eq_refl.",
            "VernacExtend",
            "d846126aaaca3a8a649a9602def5f9b2c262fc86"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_sym: forall x y, eq x y -> eq y x.",
            "VernacStartTheoremProof",
            "692a5ac196f60f7b68e928594898f2c8812358af"
        ],
        [
            "unfold eq; intros.",
            "VernacExtend",
            "396210e0f0e83e774c52c6b6e5dffd3c5beae6a7"
        ],
        [
            "apply L.eq_sym; auto.",
            "VernacExtend",
            "69b4aae549a4fe8ad04d872456e6189e0602959e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_trans: forall x y z, eq x y -> eq y z -> eq x z.",
            "VernacStartTheoremProof",
            "1a7eef4592c61e17d255e85f4b2fb7dc005386f2"
        ],
        [
            "unfold eq; intros.",
            "VernacExtend",
            "396210e0f0e83e774c52c6b6e5dffd3c5beae6a7"
        ],
        [
            "eapply L.eq_trans; eauto.",
            "VernacExtend",
            "35f8c57a844ff6254c1f54ab1bda0bfbd0d803b9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition beq (x y: t) : bool := match x, y with | Bot, Bot => true | Top_except m, Top_except n => PTree.beq L.beq m n | _, _ => false end.",
            "VernacDefinition",
            "410e949b53cb716a059f91854c5a872af92f1cf4"
        ],
        [
            "Lemma beq_correct: forall x y, beq x y = true -> eq x y.",
            "VernacStartTheoremProof",
            "e4990dea034db2b33ccf9496a563b02967ce258c"
        ],
        [
            "destruct x; destruct y; simpl; intro; try congruence.",
            "VernacExtend",
            "523b5786d57ea4cfbd904afe3c974f43037de2da"
        ],
        [
            "apply eq_refl.",
            "VernacExtend",
            "7c24386880b38fe6934d624f41ac1fd4ba47d797"
        ],
        [
            "red; intro; simpl.",
            "VernacExtend",
            "8ab8ca5b61859f272d3805533c991b9a07cc6c13"
        ],
        [
            "rewrite PTree.beq_correct in H.",
            "VernacExtend",
            "f265780090e3c6144c1cae3fae75f35fa2067e7e"
        ],
        [
            "generalize (H p).",
            "VernacExtend",
            "0734ee45c24f65c49cdc61b3550dc4b9f8aa13ba"
        ],
        [
            "destruct (t0!p); destruct (t1!p); intuition.",
            "VernacExtend",
            "496a5db0e0ab67aaddadd63626ba35013b955b35"
        ],
        [
            "apply L.beq_correct; auto.",
            "VernacExtend",
            "024326bcff424abe8e8aced3454c18c7959e3830"
        ],
        [
            "apply L.eq_refl.",
            "VernacExtend",
            "d846126aaaca3a8a649a9602def5f9b2c262fc86"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ge (x y: t) : Prop := forall p, L.ge (get p x) (get p y).",
            "VernacDefinition",
            "1227f3f88c22c2c34fc5f05eeaa1ff5b24782415"
        ],
        [
            "Lemma ge_refl: forall x y, eq x y -> ge x y.",
            "VernacStartTheoremProof",
            "169d0ad676e0306653660955139f274c9b6d611b"
        ],
        [
            "unfold ge, eq; intros.",
            "VernacExtend",
            "49006252dbfd36f896b9c2b3d68b71af455c040b"
        ],
        [
            "apply L.ge_refl.",
            "VernacExtend",
            "789f21b0b00c9fa1973354dffd0311d4e4c5161b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ge_trans: forall x y z, ge x y -> ge y z -> ge x z.",
            "VernacStartTheoremProof",
            "101a2cb0ee8cac4bd53bfba9e8cb3ed2802183fd"
        ],
        [
            "unfold ge; intros.",
            "VernacExtend",
            "cb7947be1c76b9a9b5de47c1001bdf6cb3db6f88"
        ],
        [
            "apply L.ge_trans with (get p y); auto.",
            "VernacExtend",
            "abe6de7302f8a788954753eee962bded47ebe40c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition bot := Bot.",
            "VernacDefinition",
            "42b3ef1464969e24fccd9552cab4adaba43d34ab"
        ],
        [
            "Lemma get_bot: forall p, get p bot = L.bot.",
            "VernacStartTheoremProof",
            "3aa76d20bb2bb5ae19b46d3eefb069fd76807d08"
        ],
        [
            "unfold bot; intros; simpl.",
            "VernacExtend",
            "b598299177f2cf56724b0fb00aaba72d24d53bc3"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ge_bot: forall x, ge x bot.",
            "VernacStartTheoremProof",
            "e9384b19a3789e7495885ed8c4dd1e8b653f6e81"
        ],
        [
            "unfold ge; intros.",
            "VernacExtend",
            "cb7947be1c76b9a9b5de47c1001bdf6cb3db6f88"
        ],
        [
            "rewrite get_bot.",
            "VernacExtend",
            "a4e2faa41eb27a151bc55374895756a462e6393d"
        ],
        [
            "apply L.ge_bot.",
            "VernacExtend",
            "b26a635957b6673479ad7bf281de21d1bde0bcec"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition top := Top_except (PTree.empty L.t).",
            "VernacDefinition",
            "ac78f75786ba51d7f96f43baa40f0c518b24b8ab"
        ],
        [
            "Lemma get_top: forall p, get p top = L.top.",
            "VernacStartTheoremProof",
            "cb7bf289aa76ef807714978bbd0c54d429d69546"
        ],
        [
            "unfold top; intros; simpl.",
            "VernacExtend",
            "cfd88a0ab4d56bffe3f5e2edfa42cc6fde3346f5"
        ],
        [
            "rewrite PTree.gempty.",
            "VernacExtend",
            "02ad4f08527ee6f058bb5b2fc6b52855b65cf49f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ge_top: forall x, ge top x.",
            "VernacStartTheoremProof",
            "e10a09153f559260c8bb575c087fdce69bcfb7ff"
        ],
        [
            "unfold ge; intros.",
            "VernacExtend",
            "cb7947be1c76b9a9b5de47c1001bdf6cb3db6f88"
        ],
        [
            "rewrite get_top.",
            "VernacExtend",
            "07dd9ca478d327fb4ba79100a3a8ce8fb8f78ae4"
        ],
        [
            "apply L.ge_top.",
            "VernacExtend",
            "1463531ace53b94e40abf587ebb8c87f1905e3d3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Module LM := LPMap1(L).",
            "VernacDefineModule",
            "e53f336cd65d88d525517b6765a29c35feec861c"
        ],
        [
            "Definition opt_lub (x y: L.t) : option L.t := let z := L.lub x y in if L.beq z L.top then None else Some z.",
            "VernacDefinition",
            "94bba7a06fb261fd872d14483ab2e7f3220440db"
        ],
        [
            "Definition lub (x y: t) : t := match x, y with | Bot, _ => y | _, Bot => x | Top_except m, Top_except n => Top_except (LM.combine (fun a b => match a, b with | Some u, Some v => opt_lub u v | _, _ => None end) m n) end.",
            "VernacDefinition",
            "98862fcd3453bb59f9558ef3c53bb1c55e722369"
        ],
        [
            "Lemma gcombine_top: forall f t1 t2 p, f None None = None -> L.eq (get p (Top_except (LM.combine f t1 t2))) (match f t1!p t2!p with Some x => x | None => L.top end).",
            "VernacStartTheoremProof",
            "371bd319662098db3a898a50dfa7a1a499dc4513"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "generalize (LM.gcombine f H t1 t2 p).",
            "VernacExtend",
            "e8856edde066e4a536c4b4e870f5b41ab7c82fc7"
        ],
        [
            "unfold LM.opt_eq.",
            "VernacExtend",
            "125c1cc31d3534cd7f9c79fe6a046e8b41c5460f"
        ],
        [
            "destruct ((LM.combine f t1 t2)!p); destruct (f t1!p t2!p).",
            "VernacExtend",
            "5ce7559727903879c8e83d13ad19bc9569300643"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "intros; apply L.eq_refl.",
            "VernacExtend",
            "2e3736cc19551bee2412503b05d56da5dc21b951"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ge_lub_left: forall x y, ge (lub x y) x.",
            "VernacStartTheoremProof",
            "61945699b1c91c090ff15db1d21ef47aaad3f6e3"
        ],
        [
            "unfold ge, lub; intros.",
            "VernacExtend",
            "9a2fd882e82a01b37648e3fcae8f0169fbaea26b"
        ],
        [
            "destruct x; destruct y.",
            "VernacExtend",
            "66b6bbed80f19a7ddf75313e3d1e4cc780d5f91f"
        ],
        [
            "rewrite get_bot.",
            "VernacExtend",
            "a4e2faa41eb27a151bc55374895756a462e6393d"
        ],
        [
            "apply L.ge_bot.",
            "VernacExtend",
            "b26a635957b6673479ad7bf281de21d1bde0bcec"
        ],
        [
            "rewrite get_bot.",
            "VernacExtend",
            "a4e2faa41eb27a151bc55374895756a462e6393d"
        ],
        [
            "apply L.ge_bot.",
            "VernacExtend",
            "b26a635957b6673479ad7bf281de21d1bde0bcec"
        ],
        [
            "apply L.ge_refl.",
            "VernacExtend",
            "789f21b0b00c9fa1973354dffd0311d4e4c5161b"
        ],
        [
            "apply L.eq_refl.",
            "VernacExtend",
            "d846126aaaca3a8a649a9602def5f9b2c262fc86"
        ],
        [
            "eapply L.ge_trans.",
            "VernacExtend",
            "e19f4d435e5e28d9c6fe8abbb8cf3b394612c9cb"
        ],
        [
            "apply L.ge_refl.",
            "VernacExtend",
            "789f21b0b00c9fa1973354dffd0311d4e4c5161b"
        ],
        [
            "apply gcombine_top; auto.",
            "VernacExtend",
            "8bdf1610c450b1c0ce07653271667adc4e87d184"
        ],
        [
            "unfold get.",
            "VernacExtend",
            "0ee15cb7f500427115d62c79c71ab50bde1d2bb9"
        ],
        [
            "destruct t0!p.",
            "VernacExtend",
            "1c7908eb47dcbb36ad6a0853e55bdacec378f148"
        ],
        [
            "destruct t1!p.",
            "VernacExtend",
            "702acc61047b9efa2bfbf1db39703ed9278a080a"
        ],
        [
            "unfold opt_lub.",
            "VernacExtend",
            "eebffdfb1467bb6e8a9f60bc784c826ea65f17db"
        ],
        [
            "destruct (L.beq (L.lub t2 t3) L.top) eqn:E.",
            "VernacExtend",
            "3729bc36532060b2cd4a6516e2becbbdbea7fafe"
        ],
        [
            "apply L.ge_top.",
            "VernacExtend",
            "1463531ace53b94e40abf587ebb8c87f1905e3d3"
        ],
        [
            "apply L.ge_lub_left.",
            "VernacExtend",
            "20fc51124f6c68168b6af2536ec62ff851c13ad2"
        ],
        [
            "apply L.ge_top.",
            "VernacExtend",
            "1463531ace53b94e40abf587ebb8c87f1905e3d3"
        ],
        [
            "apply L.ge_top.",
            "VernacExtend",
            "1463531ace53b94e40abf587ebb8c87f1905e3d3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ge_lub_right: forall x y, ge (lub x y) y.",
            "VernacStartTheoremProof",
            "7b03928bdfadd1eea38d574f7921a5ca6022a341"
        ],
        [
            "unfold ge, lub; intros.",
            "VernacExtend",
            "9a2fd882e82a01b37648e3fcae8f0169fbaea26b"
        ],
        [
            "destruct x; destruct y.",
            "VernacExtend",
            "66b6bbed80f19a7ddf75313e3d1e4cc780d5f91f"
        ],
        [
            "rewrite get_bot.",
            "VernacExtend",
            "a4e2faa41eb27a151bc55374895756a462e6393d"
        ],
        [
            "apply L.ge_bot.",
            "VernacExtend",
            "b26a635957b6673479ad7bf281de21d1bde0bcec"
        ],
        [
            "apply L.ge_refl.",
            "VernacExtend",
            "789f21b0b00c9fa1973354dffd0311d4e4c5161b"
        ],
        [
            "apply L.eq_refl.",
            "VernacExtend",
            "d846126aaaca3a8a649a9602def5f9b2c262fc86"
        ],
        [
            "rewrite get_bot.",
            "VernacExtend",
            "a4e2faa41eb27a151bc55374895756a462e6393d"
        ],
        [
            "apply L.ge_bot.",
            "VernacExtend",
            "b26a635957b6673479ad7bf281de21d1bde0bcec"
        ],
        [
            "eapply L.ge_trans.",
            "VernacExtend",
            "e19f4d435e5e28d9c6fe8abbb8cf3b394612c9cb"
        ],
        [
            "apply L.ge_refl.",
            "VernacExtend",
            "789f21b0b00c9fa1973354dffd0311d4e4c5161b"
        ],
        [
            "apply gcombine_top; auto.",
            "VernacExtend",
            "8bdf1610c450b1c0ce07653271667adc4e87d184"
        ],
        [
            "unfold get.",
            "VernacExtend",
            "0ee15cb7f500427115d62c79c71ab50bde1d2bb9"
        ],
        [
            "destruct t0!p; destruct t1!p.",
            "VernacExtend",
            "f9ada572bba1550380c574254ba8615d728328fa"
        ],
        [
            "unfold opt_lub.",
            "VernacExtend",
            "eebffdfb1467bb6e8a9f60bc784c826ea65f17db"
        ],
        [
            "destruct (L.beq (L.lub t2 t3) L.top) eqn:E.",
            "VernacExtend",
            "3729bc36532060b2cd4a6516e2becbbdbea7fafe"
        ],
        [
            "apply L.ge_top.",
            "VernacExtend",
            "1463531ace53b94e40abf587ebb8c87f1905e3d3"
        ],
        [
            "apply L.ge_lub_right.",
            "VernacExtend",
            "3103bf62452f0c5d283a9b66b64310f67ea108d4"
        ],
        [
            "apply L.ge_top.",
            "VernacExtend",
            "1463531ace53b94e40abf587ebb8c87f1905e3d3"
        ],
        [
            "apply L.ge_top.",
            "VernacExtend",
            "1463531ace53b94e40abf587ebb8c87f1905e3d3"
        ],
        [
            "apply L.ge_top.",
            "VernacExtend",
            "1463531ace53b94e40abf587ebb8c87f1905e3d3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End LPMap.",
            "VernacEndSegment",
            "b468f950a31d820c27864fe96f1727f8474e8658"
        ],
        [
            "Module LFSet (S: FSetInterface.WS) <: SEMILATTICE.",
            "VernacDefineModule",
            "19a0ba70264a4d438481b668515f81ba1a7e60b9"
        ],
        [
            "Definition t := S.t.",
            "VernacDefinition",
            "ea93acdbd622275c60f30cec09fe78e615477c9d"
        ],
        [
            "Definition eq (x y: t) := S.Equal x y.",
            "VernacDefinition",
            "8d2fe30c0f794cdf906183f3bd1f3e7def5e8939"
        ],
        [
            "Definition eq_refl: forall x, eq x x := S.eq_refl.",
            "VernacDefinition",
            "b6ea4302283e70b37016c99c37e5fa8154c845c8"
        ],
        [
            "Definition eq_sym: forall x y, eq x y -> eq y x := S.eq_sym.",
            "VernacDefinition",
            "77dfe2b4adfa95c35e4793dff14a74119c1ab06a"
        ],
        [
            "Definition eq_trans: forall x y z, eq x y -> eq y z -> eq x z := S.eq_trans.",
            "VernacDefinition",
            "feaec5e377de002019cdb71228d3faf538349226"
        ],
        [
            "Definition beq: t -> t -> bool := S.equal.",
            "VernacDefinition",
            "a531f5149307f14d4a4b2b3faa84cac02016435e"
        ],
        [
            "Definition beq_correct: forall x y, beq x y = true -> eq x y := S.equal_2.",
            "VernacDefinition",
            "864a332cb193013e08512324b89704626bfaf904"
        ],
        [
            "Definition ge (x y: t) := S.Subset y x.",
            "VernacDefinition",
            "ec77714c614e755fd8afe807cf4f504bbb5ad328"
        ],
        [
            "Lemma ge_refl: forall x y, eq x y -> ge x y.",
            "VernacStartTheoremProof",
            "169d0ad676e0306653660955139f274c9b6d611b"
        ],
        [
            "unfold eq, ge, S.Equal, S.Subset; intros.",
            "VernacExtend",
            "d6b33ae496c9b1eca536b06e4b24e4cb58079930"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ge_trans: forall x y z, ge x y -> ge y z -> ge x z.",
            "VernacStartTheoremProof",
            "101a2cb0ee8cac4bd53bfba9e8cb3ed2802183fd"
        ],
        [
            "unfold ge, S.Subset; intros.",
            "VernacExtend",
            "e90800a01bd1f4c30e2781f4de8d553d64dd42b2"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition bot: t := S.empty.",
            "VernacDefinition",
            "5753c4faeea259d333bf1d4977b999a0076c287f"
        ],
        [
            "Lemma ge_bot: forall x, ge x bot.",
            "VernacStartTheoremProof",
            "e9384b19a3789e7495885ed8c4dd1e8b653f6e81"
        ],
        [
            "unfold ge, bot, S.Subset; intros.",
            "VernacExtend",
            "d3c75018b9ba1bdd176a9336b2812a85f266062e"
        ],
        [
            "elim (S.empty_1 H).",
            "VernacExtend",
            "c608891775d9bb5515d8590bd044e4548730cf7e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lub: t -> t -> t := S.union.",
            "VernacDefinition",
            "1466791b8e6cbc33d550c16d4d55e2b19f3f6d9c"
        ],
        [
            "Lemma ge_lub_left: forall x y, ge (lub x y) x.",
            "VernacStartTheoremProof",
            "61945699b1c91c090ff15db1d21ef47aaad3f6e3"
        ],
        [
            "unfold lub, ge, S.Subset; intros.",
            "VernacExtend",
            "a4dde49201c6678e56411056952014beeae030dd"
        ],
        [
            "apply S.union_2; auto.",
            "VernacExtend",
            "6b1f079444e3aeecdf23c8c0c907d4dbeb6d67a0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ge_lub_right: forall x y, ge (lub x y) y.",
            "VernacStartTheoremProof",
            "7b03928bdfadd1eea38d574f7921a5ca6022a341"
        ],
        [
            "unfold lub, ge, S.Subset; intros.",
            "VernacExtend",
            "a4dde49201c6678e56411056952014beeae030dd"
        ],
        [
            "apply S.union_3; auto.",
            "VernacExtend",
            "e0563d22ee8bf3983c3385a43c1bf0e81c717b1e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End LFSet.",
            "VernacEndSegment",
            "9c51b7893295d56e3dd6499202295e20234a0df6"
        ],
        [
            "Module LFlat(X: EQUALITY_TYPE) <: SEMILATTICE_WITH_TOP.",
            "VernacDefineModule",
            "99f25ebe6e5f17a9f041440a7d61a4c13eeee1ba"
        ],
        [
            "Inductive t' : Type := | Bot: t' | Inj: X.t -> t' | Top: t'.",
            "VernacInductive",
            "1aac4d94c232a6f4c10ad8941c75a79f723f3f4f"
        ],
        [
            "Definition t : Type := t'.",
            "VernacDefinition",
            "864ea4c9e068bda690d3c239f90c1a237d045c05"
        ],
        [
            "Definition eq (x y: t) := (x = y).",
            "VernacDefinition",
            "0d67d24205809165e15f0efa2624cc856ce7cb0d"
        ],
        [
            "Definition eq_refl: forall x, eq x x := (@eq_refl t).",
            "VernacDefinition",
            "73ddddda3bf0818a33db16331b216f11904413bc"
        ],
        [
            "Definition eq_sym: forall x y, eq x y -> eq y x := (@eq_sym t).",
            "VernacDefinition",
            "0a4dc821cfec8b77e6e42914c8cf9ae274eeb3f7"
        ],
        [
            "Definition eq_trans: forall x y z, eq x y -> eq y z -> eq x z := (@eq_trans t).",
            "VernacDefinition",
            "cf47fab301220c3af1ea518cbf065a3f5bb94799"
        ],
        [
            "Definition beq (x y: t) : bool := match x, y with | Bot, Bot => true | Inj u, Inj v => if X.eq u v then true else false | Top, Top => true | _, _ => false end.",
            "VernacDefinition",
            "5c1a5b9aa7b5b8b6d441a4cb57b9c9ee4256873a"
        ],
        [
            "Lemma beq_correct: forall x y, beq x y = true -> eq x y.",
            "VernacStartTheoremProof",
            "e4990dea034db2b33ccf9496a563b02967ce258c"
        ],
        [
            "unfold eq; destruct x; destruct y; simpl; try congruence; intro.",
            "VernacExtend",
            "e1466ba4e39d82189ef116e8aad005daed8ac525"
        ],
        [
            "destruct (X.eq t0 t1); congruence.",
            "VernacExtend",
            "88fc195095b5521c6bc2d5e765fc5ab205f50373"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ge (x y: t) : Prop := match x, y with | Top, _ => True | _, Bot => True | Inj a, Inj b => a = b | _, _ => False end.",
            "VernacDefinition",
            "56821d4ed28935bfe3ed3bb42c50150080b19ecf"
        ],
        [
            "Lemma ge_refl: forall x y, eq x y -> ge x y.",
            "VernacStartTheoremProof",
            "169d0ad676e0306653660955139f274c9b6d611b"
        ],
        [
            "unfold eq, ge; intros; subst y; destruct x; auto.",
            "VernacExtend",
            "c16a5d349b169601647ee8c8166405844aca9844"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ge_trans: forall x y z, ge x y -> ge y z -> ge x z.",
            "VernacStartTheoremProof",
            "101a2cb0ee8cac4bd53bfba9e8cb3ed2802183fd"
        ],
        [
            "unfold ge; destruct x; destruct y; try destruct z; intuition.",
            "VernacExtend",
            "b3072f6804cd24b76d06e04028054a3db1f95e7a"
        ],
        [
            "transitivity t1; auto.",
            "VernacExtend",
            "fd0204a38f3b5ed36e98fcc8caf635be0253b2d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition bot: t := Bot.",
            "VernacDefinition",
            "3c00d3c97bf3f1342ca3a2f9659368776f8daad6"
        ],
        [
            "Lemma ge_bot: forall x, ge x bot.",
            "VernacStartTheoremProof",
            "e9384b19a3789e7495885ed8c4dd1e8b653f6e81"
        ],
        [
            "destruct x; simpl; auto.",
            "VernacExtend",
            "6333e7c7dbfdf0572110d1909ab0948c7e960947"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition top: t := Top.",
            "VernacDefinition",
            "9a28fec008ece5fbe00b28271d9d2693780c86a6"
        ],
        [
            "Lemma ge_top: forall x, ge top x.",
            "VernacStartTheoremProof",
            "e10a09153f559260c8bb575c087fdce69bcfb7ff"
        ],
        [
            "destruct x; simpl; auto.",
            "VernacExtend",
            "6333e7c7dbfdf0572110d1909ab0948c7e960947"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lub (x y: t) : t := match x, y with | Bot, _ => y | _, Bot => x | Top, _ => Top | _, Top => Top | Inj a, Inj b => if X.eq a b then Inj a else Top end.",
            "VernacDefinition",
            "aca9d1f7af6b6593edebfde3bcc3b85bad95a97a"
        ],
        [
            "Lemma ge_lub_left: forall x y, ge (lub x y) x.",
            "VernacStartTheoremProof",
            "61945699b1c91c090ff15db1d21ef47aaad3f6e3"
        ],
        [
            "destruct x; destruct y; simpl; auto.",
            "VernacExtend",
            "614cfef5ea21474c7ae778ecba30d154f3fcc9a7"
        ],
        [
            "case (X.eq t0 t1); simpl; auto.",
            "VernacExtend",
            "35da6ad628add1e09ec7b90d12ea0fbc276c70ba"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ge_lub_right: forall x y, ge (lub x y) y.",
            "VernacStartTheoremProof",
            "7b03928bdfadd1eea38d574f7921a5ca6022a341"
        ],
        [
            "destruct x; destruct y; simpl; auto.",
            "VernacExtend",
            "614cfef5ea21474c7ae778ecba30d154f3fcc9a7"
        ],
        [
            "case (X.eq t0 t1); simpl; auto.",
            "VernacExtend",
            "35da6ad628add1e09ec7b90d12ea0fbc276c70ba"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End LFlat.",
            "VernacEndSegment",
            "c324a7bee7a0acf23c9855649e28f2b227f043e5"
        ],
        [
            "Module LBoolean <: SEMILATTICE_WITH_TOP.",
            "VernacDefineModule",
            "e26df81cc9d575f22cf151a6a154308298897cf9"
        ],
        [
            "Definition t := bool.",
            "VernacDefinition",
            "b9f16635509d954330956ba75184af9b7e88c2c4"
        ],
        [
            "Definition eq (x y: t) := (x = y).",
            "VernacDefinition",
            "0d67d24205809165e15f0efa2624cc856ce7cb0d"
        ],
        [
            "Definition eq_refl: forall x, eq x x := (@eq_refl t).",
            "VernacDefinition",
            "73ddddda3bf0818a33db16331b216f11904413bc"
        ],
        [
            "Definition eq_sym: forall x y, eq x y -> eq y x := (@eq_sym t).",
            "VernacDefinition",
            "0a4dc821cfec8b77e6e42914c8cf9ae274eeb3f7"
        ],
        [
            "Definition eq_trans: forall x y z, eq x y -> eq y z -> eq x z := (@eq_trans t).",
            "VernacDefinition",
            "cf47fab301220c3af1ea518cbf065a3f5bb94799"
        ],
        [
            "Definition beq : t -> t -> bool := eqb.",
            "VernacDefinition",
            "20db95c5d11f46fc45048e839eed5106fd36fac1"
        ],
        [
            "Lemma beq_correct: forall x y, beq x y = true -> eq x y.",
            "VernacStartTheoremProof",
            "e4990dea034db2b33ccf9496a563b02967ce258c"
        ],
        [
            "Proof eqb_prop.",
            "VernacExactProof",
            "591e6bfb4c0e7d869ffee393170ed5bbe23505c1"
        ],
        [
            "Definition ge (x y: t) : Prop := x = y \\/ x = true.",
            "VernacDefinition",
            "3b8c51abdac30ffb99aec9a00f4db93635d436e1"
        ],
        [
            "Lemma ge_refl: forall x y, eq x y -> ge x y.",
            "VernacStartTheoremProof",
            "169d0ad676e0306653660955139f274c9b6d611b"
        ],
        [
            "unfold ge; tauto.",
            "VernacExtend",
            "db436910441ad025fa0acc41b5819a736ae117e2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ge_trans: forall x y z, ge x y -> ge y z -> ge x z.",
            "VernacStartTheoremProof",
            "101a2cb0ee8cac4bd53bfba9e8cb3ed2802183fd"
        ],
        [
            "unfold ge; intuition congruence.",
            "VernacExtend",
            "f60705021e55c11cb725052fccaadb40bcc18870"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition bot := false.",
            "VernacDefinition",
            "5d77e821c4c6cb103717793baea5cf1de52f8d85"
        ],
        [
            "Lemma ge_bot: forall x, ge x bot.",
            "VernacStartTheoremProof",
            "e9384b19a3789e7495885ed8c4dd1e8b653f6e81"
        ],
        [
            "destruct x; compute; tauto.",
            "VernacExtend",
            "688c67f6524957d34b61e33ba2009ed8aefd3559"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition top := true.",
            "VernacDefinition",
            "5499956061ce609b805660985171ffbda5e851cd"
        ],
        [
            "Lemma ge_top: forall x, ge top x.",
            "VernacStartTheoremProof",
            "e10a09153f559260c8bb575c087fdce69bcfb7ff"
        ],
        [
            "unfold ge, top; tauto.",
            "VernacExtend",
            "fa686180bec7c31960b990693a112447b8534406"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lub (x y: t) := x || y.",
            "VernacDefinition",
            "dd0740a59408ea75375d191fedefeec8d082be8f"
        ],
        [
            "Lemma ge_lub_left: forall x y, ge (lub x y) x.",
            "VernacStartTheoremProof",
            "61945699b1c91c090ff15db1d21ef47aaad3f6e3"
        ],
        [
            "destruct x; destruct y; compute; tauto.",
            "VernacExtend",
            "4e69e0a5d969554ca7b062250bd32143dd157bbf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ge_lub_right: forall x y, ge (lub x y) y.",
            "VernacStartTheoremProof",
            "7b03928bdfadd1eea38d574f7921a5ca6022a341"
        ],
        [
            "destruct x; destruct y; compute; tauto.",
            "VernacExtend",
            "4e69e0a5d969554ca7b062250bd32143dd157bbf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End LBoolean.",
            "VernacEndSegment",
            "531d6b35fea123702985f414d0a85df447fc37b3"
        ],
        [
            "Module LOption(L: SEMILATTICE) <: SEMILATTICE_WITH_TOP.",
            "VernacDefineModule",
            "21affa017c3fea2207cd7af099e002413044b07e"
        ],
        [
            "Definition t: Type := option L.t.",
            "VernacDefinition",
            "b4e124fe88988364281f0bc0056d8934c39a5632"
        ],
        [
            "Definition eq (x y: t) : Prop := match x, y with | None, None => True | Some x1, Some y1 => L.eq x1 y1 | _, _ => False end.",
            "VernacDefinition",
            "16004675913bb1fa4af42bc70ea018b0725ab0ac"
        ],
        [
            "Lemma eq_refl: forall x, eq x x.",
            "VernacStartTheoremProof",
            "c0741461ec3ebf95df4fc4ebbf1bebac9dd5ff59"
        ],
        [
            "unfold eq; intros; destruct x.",
            "VernacExtend",
            "9bbdd898ef5b26658dcfc66727a0ded6b697cfb9"
        ],
        [
            "apply L.eq_refl.",
            "VernacExtend",
            "d846126aaaca3a8a649a9602def5f9b2c262fc86"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_sym: forall x y, eq x y -> eq y x.",
            "VernacStartTheoremProof",
            "692a5ac196f60f7b68e928594898f2c8812358af"
        ],
        [
            "unfold eq; intros; destruct x; destruct y; auto.",
            "VernacExtend",
            "85dd0d4e76d1db369a52cb14a941eaae2679a815"
        ],
        [
            "apply L.eq_sym; auto.",
            "VernacExtend",
            "69b4aae549a4fe8ad04d872456e6189e0602959e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_trans: forall x y z, eq x y -> eq y z -> eq x z.",
            "VernacStartTheoremProof",
            "1a7eef4592c61e17d255e85f4b2fb7dc005386f2"
        ],
        [
            "unfold eq; intros; destruct x; destruct y; destruct z; auto.",
            "VernacExtend",
            "d0b96bbf89ffd176db2936e6bf3c92b49914924b"
        ],
        [
            "eapply L.eq_trans; eauto.",
            "VernacExtend",
            "35f8c57a844ff6254c1f54ab1bda0bfbd0d803b9"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition beq (x y: t) : bool := match x, y with | None, None => true | Some x1, Some y1 => L.beq x1 y1 | _, _ => false end.",
            "VernacDefinition",
            "1dc84e6bbee2476cb85883e66966bce7f25fc932"
        ],
        [
            "Lemma beq_correct: forall x y, beq x y = true -> eq x y.",
            "VernacStartTheoremProof",
            "e4990dea034db2b33ccf9496a563b02967ce258c"
        ],
        [
            "unfold beq, eq; intros; destruct x; destruct y.",
            "VernacExtend",
            "51b749ae5ca3241f127fa5e9f43fc1b066077d07"
        ],
        [
            "apply L.beq_correct; auto.",
            "VernacExtend",
            "024326bcff424abe8e8aced3454c18c7959e3830"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ge (x y: t) : Prop := match x, y with | None, _ => True | _, None => False | Some x1, Some y1 => L.ge x1 y1 end.",
            "VernacDefinition",
            "b78b0f938938f8290998e69c788af678dcdd8923"
        ],
        [
            "Lemma ge_refl: forall x y, eq x y -> ge x y.",
            "VernacStartTheoremProof",
            "169d0ad676e0306653660955139f274c9b6d611b"
        ],
        [
            "unfold eq, ge; intros; destruct x; destruct y.",
            "VernacExtend",
            "a61e027abbc6e1be511293d2ffe4611a3aad6f21"
        ],
        [
            "apply L.ge_refl; auto.",
            "VernacExtend",
            "86b7dd5794fb6f81308a5f1473ab223fc5e5e7ae"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "elim H.",
            "VernacExtend",
            "853aa440c3a3810be05f0f87d0e688c05b92253d"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ge_trans: forall x y z, ge x y -> ge y z -> ge x z.",
            "VernacStartTheoremProof",
            "101a2cb0ee8cac4bd53bfba9e8cb3ed2802183fd"
        ],
        [
            "unfold ge; intros; destruct x; destruct y; destruct z; auto.",
            "VernacExtend",
            "f1fa53036296200f9df195790eaf1112bffab99e"
        ],
        [
            "eapply L.ge_trans; eauto.",
            "VernacExtend",
            "e07fe9d44ae92b45da0d4d9a9d792a6eaa8183ac"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition bot : t := Some L.bot.",
            "VernacDefinition",
            "7be235ab326e63d8b189351d2c452cf9e91bda77"
        ],
        [
            "Lemma ge_bot: forall x, ge x bot.",
            "VernacStartTheoremProof",
            "e9384b19a3789e7495885ed8c4dd1e8b653f6e81"
        ],
        [
            "unfold ge, bot; intros.",
            "VernacExtend",
            "67c66c9460c9dbeda8c210b40d7bae779af9fd2f"
        ],
        [
            "destruct x; auto.",
            "VernacExtend",
            "e693b97b98b28f6f305ce1b2e3d77ebaa690911c"
        ],
        [
            "apply L.ge_bot.",
            "VernacExtend",
            "b26a635957b6673479ad7bf281de21d1bde0bcec"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lub (x y: t) : t := match x, y with | None, _ => None | _, None => None | Some x1, Some y1 => Some (L.lub x1 y1) end.",
            "VernacDefinition",
            "9791848534e95f7f41f75bafe6873bd3400c25f7"
        ],
        [
            "Lemma ge_lub_left: forall x y, ge (lub x y) x.",
            "VernacStartTheoremProof",
            "61945699b1c91c090ff15db1d21ef47aaad3f6e3"
        ],
        [
            "unfold ge, lub; intros; destruct x; destruct y; auto.",
            "VernacExtend",
            "54035beaefc222925c86f052d17dce8cd246d74a"
        ],
        [
            "apply L.ge_lub_left.",
            "VernacExtend",
            "20fc51124f6c68168b6af2536ec62ff851c13ad2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ge_lub_right: forall x y, ge (lub x y) y.",
            "VernacStartTheoremProof",
            "7b03928bdfadd1eea38d574f7921a5ca6022a341"
        ],
        [
            "unfold ge, lub; intros; destruct x; destruct y; auto.",
            "VernacExtend",
            "54035beaefc222925c86f052d17dce8cd246d74a"
        ],
        [
            "apply L.ge_lub_right.",
            "VernacExtend",
            "3103bf62452f0c5d283a9b66b64310f67ea108d4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition top : t := None.",
            "VernacDefinition",
            "903ced11410ca2e0afa51dd3989e9ecc7f49c526"
        ],
        [
            "Lemma ge_top: forall x, ge top x.",
            "VernacStartTheoremProof",
            "e10a09153f559260c8bb575c087fdce69bcfb7ff"
        ],
        [
            "unfold ge, top; intros.",
            "VernacExtend",
            "cf8780ab25f555c7367eaaf24e5a9256b4b3dfa2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End LOption.",
            "VernacEndSegment",
            "530dfa7ed8d5610428f31e26bff31c8b6c2ca587"
        ]
    ],
    "proofs": [
        {
            "name": "gsspec",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold set, get.",
                        "VernacExtend",
                        "6e240f007bbe4d161745c51b9d4beb064fa53e86"
                    ]
                },
                {
                    "command": [
                        "destruct (L.beq v L.bot) eqn:EBOT.",
                        "VernacExtend",
                        "d390282332a19ecc204c2909544bd7e517c1462d"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.grspec.",
                        "VernacExtend",
                        "a95a2b49bc4988014f7a03242480236b4c95401b"
                    ]
                },
                {
                    "command": [
                        "unfold PTree.elt_eq.",
                        "VernacExtend",
                        "66676a1818789ebc909418e8bebc1477225aa5f4"
                    ]
                },
                {
                    "command": [
                        "destruct (peq q p).",
                        "VernacExtend",
                        "263e8c90cfab1e66a47420dc939edc5af00426bd"
                    ]
                },
                {
                    "command": [
                        "apply L.eq_sym.",
                        "VernacExtend",
                        "53ff9a697190904ce73664f58e24dad44bd69082"
                    ]
                },
                {
                    "command": [
                        "apply L.beq_correct; auto.",
                        "VernacExtend",
                        "024326bcff424abe8e8aced3454c18c7959e3830"
                    ]
                },
                {
                    "command": [
                        "apply L.eq_refl.",
                        "VernacExtend",
                        "d846126aaaca3a8a649a9602def5f9b2c262fc86"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gsspec.",
                        "VernacExtend",
                        "88315e2b3b1f3e40fe18917f8425d57b50a31282"
                    ]
                },
                {
                    "command": [
                        "destruct (peq q p); apply L.eq_refl.",
                        "VernacExtend",
                        "158632dc5cedcc5ff28f2b69431e6bffb71ca405"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_refl",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "unfold eq; intros.",
                        "VernacExtend",
                        "396210e0f0e83e774c52c6b6e5dffd3c5beae6a7"
                    ]
                },
                {
                    "command": [
                        "apply L.eq_refl.",
                        "VernacExtend",
                        "d846126aaaca3a8a649a9602def5f9b2c262fc86"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_sym",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "unfold eq; intros.",
                        "VernacExtend",
                        "396210e0f0e83e774c52c6b6e5dffd3c5beae6a7"
                    ]
                },
                {
                    "command": [
                        "apply L.eq_sym; auto.",
                        "VernacExtend",
                        "69b4aae549a4fe8ad04d872456e6189e0602959e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_trans",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "unfold eq; intros.",
                        "VernacExtend",
                        "396210e0f0e83e774c52c6b6e5dffd3c5beae6a7"
                    ]
                },
                {
                    "command": [
                        "eapply L.eq_trans; eauto.",
                        "VernacExtend",
                        "35f8c57a844ff6254c1f54ab1bda0bfbd0d803b9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "beq_correct",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "unfold beq; intros; red; intros.",
                        "VernacExtend",
                        "10bb4b6295dc03014304a991e776527e11cf9e6e"
                    ]
                },
                {
                    "command": [
                        "unfold get.",
                        "VernacExtend",
                        "0ee15cb7f500427115d62c79c71ab50bde1d2bb9"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.beq_correct in H.",
                        "VernacExtend",
                        "f265780090e3c6144c1cae3fae75f35fa2067e7e"
                    ]
                },
                {
                    "command": [
                        "specialize (H p).",
                        "VernacExtend",
                        "256d57c2b9d4e2181f9370a6b9c0cce07556955d"
                    ]
                },
                {
                    "command": [
                        "destruct (x!p); destruct (y!p); intuition.",
                        "VernacExtend",
                        "8b4179bb8b0176b7ea18133c2a42b06b71743db1"
                    ]
                },
                {
                    "command": [
                        "apply L.beq_correct; auto.",
                        "VernacExtend",
                        "024326bcff424abe8e8aced3454c18c7959e3830"
                    ]
                },
                {
                    "command": [
                        "apply L.eq_refl.",
                        "VernacExtend",
                        "d846126aaaca3a8a649a9602def5f9b2c262fc86"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ge_refl",
            "line_nb": 69,
            "steps": [
                {
                    "command": [
                        "unfold ge, eq; intros.",
                        "VernacExtend",
                        "49006252dbfd36f896b9c2b3d68b71af455c040b"
                    ]
                },
                {
                    "command": [
                        "apply L.ge_refl.",
                        "VernacExtend",
                        "789f21b0b00c9fa1973354dffd0311d4e4c5161b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ge_trans",
            "line_nb": 74,
            "steps": [
                {
                    "command": [
                        "unfold ge; intros.",
                        "VernacExtend",
                        "cb7947be1c76b9a9b5de47c1001bdf6cb3db6f88"
                    ]
                },
                {
                    "command": [
                        "apply L.ge_trans with (get p y); auto.",
                        "VernacExtend",
                        "abe6de7302f8a788954753eee962bded47ebe40c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "get_bot",
            "line_nb": 79,
            "steps": [
                {
                    "command": [
                        "unfold bot, get; intros; simpl.",
                        "VernacExtend",
                        "346c77eb15a6ee64a4ff33f886a1b8abad894db4"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gempty.",
                        "VernacExtend",
                        "02ad4f08527ee6f058bb5b2fc6b52855b65cf49f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ge_bot",
            "line_nb": 84,
            "steps": [
                {
                    "command": [
                        "unfold ge; intros.",
                        "VernacExtend",
                        "cb7947be1c76b9a9b5de47c1001bdf6cb3db6f88"
                    ]
                },
                {
                    "command": [
                        "rewrite get_bot.",
                        "VernacExtend",
                        "a4e2faa41eb27a151bc55374895756a462e6393d"
                    ]
                },
                {
                    "command": [
                        "apply L.ge_bot.",
                        "VernacExtend",
                        "b26a635957b6673479ad7bf281de21d1bde0bcec"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "opt_eq_refl",
            "line_nb": 93,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold opt_eq.",
                        "VernacExtend",
                        "0d33cf3757e4e6e022e9a30d31db7f02d3d05527"
                    ]
                },
                {
                    "command": [
                        "destruct ox.",
                        "VernacExtend",
                        "01c62117cc48c1a4bd8eeefa2ea51cfb55be4fee"
                    ]
                },
                {
                    "command": [
                        "apply L.eq_refl.",
                        "VernacExtend",
                        "d846126aaaca3a8a649a9602def5f9b2c262fc86"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "opt_eq_sym",
            "line_nb": 100,
            "steps": [
                {
                    "command": [
                        "unfold opt_eq.",
                        "VernacExtend",
                        "0d33cf3757e4e6e022e9a30d31db7f02d3d05527"
                    ]
                },
                {
                    "command": [
                        "destruct ox; destruct oy; auto.",
                        "VernacExtend",
                        "22402499abf1031fda4523f3c657df8681b93bee"
                    ]
                },
                {
                    "command": [
                        "apply L.eq_sym.",
                        "VernacExtend",
                        "53ff9a697190904ce73664f58e24dad44bd69082"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "opt_eq_trans",
            "line_nb": 105,
            "steps": [
                {
                    "command": [
                        "unfold opt_eq.",
                        "VernacExtend",
                        "0d33cf3757e4e6e022e9a30d31db7f02d3d05527"
                    ]
                },
                {
                    "command": [
                        "destruct ox; destruct oy; destruct oz; intuition.",
                        "VernacExtend",
                        "45c10c4236fe28e6b8e5a4662a71d5eab519ce02"
                    ]
                },
                {
                    "command": [
                        "eapply L.eq_trans; eauto.",
                        "VernacExtend",
                        "35f8c57a844ff6254c1f54ab1bda0bfbd0d803b9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "opt_beq_correct",
            "line_nb": 111,
            "steps": [
                {
                    "command": [
                        "unfold opt_beq, opt_eq.",
                        "VernacExtend",
                        "30c4ab2151d5eff5f4dd9197b6829c06ad0a06f8"
                    ]
                },
                {
                    "command": [
                        "destruct ox; destruct oy; try congruence.",
                        "VernacExtend",
                        "1b6bd35205076f26a9b2a83534ab01ac0e7b9f38"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply L.beq_correct; auto.",
                        "VernacExtend",
                        "024326bcff424abe8e8aced3454c18c7959e3830"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tree_eq_refl",
            "line_nb": 119,
            "steps": [
                {
                    "command": [
                        "intros; red; intros; apply opt_eq_refl.",
                        "VernacExtend",
                        "026c01e44a23390eb33dee2b0c5a1018d012367a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tree_eq_sym",
            "line_nb": 122,
            "steps": [
                {
                    "command": [
                        "intros; red; intros; apply opt_eq_sym; auto.",
                        "VernacExtend",
                        "f932e2957941e691713ca33c9b43824ee7cb41fd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tree_eq_trans",
            "line_nb": 125,
            "steps": [
                {
                    "command": [
                        "intros; red; intros; apply opt_eq_trans with (PTree.get i m2); auto.",
                        "VernacExtend",
                        "a36643bbcb695d6ecd794b1567c93f356c48842d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tree_eq_node",
            "line_nb": 128,
            "steps": [
                {
                    "command": [
                        "intros; red; intros.",
                        "VernacExtend",
                        "51aeefe3bf0889d494d662b4f3305dd8bbc97324"
                    ]
                },
                {
                    "command": [
                        "destruct i; simpl; auto.",
                        "VernacExtend",
                        "68f1ada8e7ae3853d0bcf6c9ce8dfcaf8bef3fc3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tree_eq_node'",
            "line_nb": 132,
            "steps": [
                {
                    "command": [
                        "intros; red; intros.",
                        "VernacExtend",
                        "51aeefe3bf0889d494d662b4f3305dd8bbc97324"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gnode'.",
                        "VernacExtend",
                        "32cc9adf4e82d91e09381f9b1d2c4cc8b7f492e0"
                    ]
                },
                {
                    "command": [
                        "apply tree_eq_node; auto.",
                        "VernacExtend",
                        "30a59738e21090cd3a41b74d752983dac85fabce"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tree_eq_node''",
            "line_nb": 137,
            "steps": [
                {
                    "command": [
                        "intros; red; intros.",
                        "VernacExtend",
                        "51aeefe3bf0889d494d662b4f3305dd8bbc97324"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite PTree.gnode'.",
                        "VernacExtend",
                        "5331e59b28a73486a59af25b62093be494620bb0"
                    ]
                },
                {
                    "command": [
                        "apply tree_eq_node; auto.",
                        "VernacExtend",
                        "30a59738e21090cd3a41b74d752983dac85fabce"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_l_eq",
            "line_nb": 145,
            "steps": [
                {
                    "command": [
                        "induction m; simpl.",
                        "VernacExtend",
                        "8eeca9e02ca7b585e952baf1eea0278de04f5480"
                    ]
                },
                {
                    "command": [
                        "auto with combine.",
                        "VernacExtend",
                        "33d0f0befa21ca7b66d82fb5a966f87fb7fda748"
                    ]
                },
                {
                    "command": [
                        "destruct (combine_l m1) as [ | l']; destruct (combine_l m2) as [ | r']; auto with combine.",
                        "VernacExtend",
                        "8d43b2206e50c6ad7fa6a944e1e5aeaf92c934d4"
                    ]
                },
                {
                    "command": [
                        "case_eq (opt_beq (f o None) o); auto with combine.",
                        "VernacExtend",
                        "1f14eec52d75b821bad6bb27b9d64afe8bfb3a46"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_r_eq",
            "line_nb": 152,
            "steps": [
                {
                    "command": [
                        "induction m; simpl.",
                        "VernacExtend",
                        "8eeca9e02ca7b585e952baf1eea0278de04f5480"
                    ]
                },
                {
                    "command": [
                        "auto with combine.",
                        "VernacExtend",
                        "33d0f0befa21ca7b66d82fb5a966f87fb7fda748"
                    ]
                },
                {
                    "command": [
                        "destruct (combine_r m1) as [ | l']; destruct (combine_r m2) as [ | r']; auto with combine.",
                        "VernacExtend",
                        "e004a928eb31aea41af814c30e84bcd74a404a11"
                    ]
                },
                {
                    "command": [
                        "case_eq (opt_beq (f None o) o); auto with combine.",
                        "VernacExtend",
                        "dc79716463950fc58fb47c3c65b897aeb3bd874f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcombine_bot",
            "line_nb": 185,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold get.",
                        "VernacExtend",
                        "0ee15cb7f500427115d62c79c71ab50bde1d2bb9"
                    ]
                },
                {
                    "command": [
                        "generalize (gcombine f H t1 t2 p).",
                        "VernacExtend",
                        "8dd767f059097962254e4b1a948e169e7fb5c20c"
                    ]
                },
                {
                    "command": [
                        "unfold opt_eq.",
                        "VernacExtend",
                        "0d33cf3757e4e6e022e9a30d31db7f02d3d05527"
                    ]
                },
                {
                    "command": [
                        "destruct ((combine f t1 t2)!p); destruct (f t1!p t2!p).",
                        "VernacExtend",
                        "29dc9abbaf7282bf7897777d277aa0192f1dd91f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "intros; apply L.eq_refl.",
                        "VernacExtend",
                        "2e3736cc19551bee2412503b05d56da5dc21b951"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "get_top",
            "line_nb": 291,
            "steps": [
                {
                    "command": [
                        "unfold top; intros; simpl.",
                        "VernacExtend",
                        "cfd88a0ab4d56bffe3f5e2edfa42cc6fde3346f5"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gempty.",
                        "VernacExtend",
                        "02ad4f08527ee6f058bb5b2fc6b52855b65cf49f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ge_top",
            "line_nb": 296,
            "steps": [
                {
                    "command": [
                        "unfold ge; intros.",
                        "VernacExtend",
                        "cb7947be1c76b9a9b5de47c1001bdf6cb3db6f88"
                    ]
                },
                {
                    "command": [
                        "rewrite get_top.",
                        "VernacExtend",
                        "07dd9ca478d327fb4ba79100a3a8ce8fb8f78ae4"
                    ]
                },
                {
                    "command": [
                        "apply L.ge_top.",
                        "VernacExtend",
                        "1463531ace53b94e40abf587ebb8c87f1905e3d3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcombine_top",
            "line_nb": 304,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "generalize (LM.gcombine f H t1 t2 p).",
                        "VernacExtend",
                        "e8856edde066e4a536c4b4e870f5b41ab7c82fc7"
                    ]
                },
                {
                    "command": [
                        "unfold LM.opt_eq.",
                        "VernacExtend",
                        "125c1cc31d3534cd7f9c79fe6a046e8b41c5460f"
                    ]
                },
                {
                    "command": [
                        "destruct ((LM.combine f t1 t2)!p); destruct (f t1!p t2!p).",
                        "VernacExtend",
                        "5ce7559727903879c8e83d13ad19bc9569300643"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "intros; apply L.eq_refl.",
                        "VernacExtend",
                        "2e3736cc19551bee2412503b05d56da5dc21b951"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}