{
    "filename": "driver/Compiler.v",
    "coq_project": "CompCert",
    "vernac_cmds": [
        [
            "Require Import String.",
            "VernacRequire",
            "c8f60f008dd1a565dde55d26cee568a599a023b3"
        ],
        [
            "Require Import Coqlib Errors.",
            "VernacRequire",
            "6bf312bea21b6e720ce503a39e5d2c813e3e6a7a"
        ],
        [
            "Require Import AST Linking Smallstep.",
            "VernacRequire",
            "66c1882602bcb9fc80b9e403b283b9b2c726c925"
        ],
        [
            "Require Ctypes Csyntax Csem Cstrategy Cexec.",
            "VernacRequire",
            "47f3e03953fcbfaf89241c74fcb8909a7e835d4c"
        ],
        [
            "Require Clight.",
            "VernacRequire",
            "d8685a464f593c461d8e69586e5034ec1b667a02"
        ],
        [
            "Require Csharpminor.",
            "VernacRequire",
            "5b2a50a216ef33bf227c94ae44eaaccbfda870c2"
        ],
        [
            "Require Cminor.",
            "VernacRequire",
            "af09fc11b980342445690941268a1aa9b6be17ea"
        ],
        [
            "Require CminorSel.",
            "VernacRequire",
            "c2857361da556785b5d615f528909f231a9ee010"
        ],
        [
            "Require RTL.",
            "VernacRequire",
            "73796f39c00522aa6f570e03a6a77dec6c1e3ad9"
        ],
        [
            "Require LTL.",
            "VernacRequire",
            "b189fafedef23f44ee7620949fd9b1b4fa752745"
        ],
        [
            "Require Linear.",
            "VernacRequire",
            "f102ef418201d693a73f5639a7fdb35dbee203ee"
        ],
        [
            "Require Mach.",
            "VernacRequire",
            "0ab195e08a86d5dc100f60a451b949fc164b94c4"
        ],
        [
            "Require Asm.",
            "VernacRequire",
            "5907e0501afa0e5041cd1b8f48ff5b7f4d702929"
        ],
        [
            "Require Initializers.",
            "VernacRequire",
            "406a200397094ac03ae793b2f186e9bd7590f164"
        ],
        [
            "Require SimplExpr.",
            "VernacRequire",
            "3995fde5f876b8bbbb61c03ac6ce426ec764c9c5"
        ],
        [
            "Require SimplLocals.",
            "VernacRequire",
            "978f43b24e2ba4fd2c93b5b4ffa9dbc67b750cc1"
        ],
        [
            "Require Cshmgen.",
            "VernacRequire",
            "72d2d34438bd8fe2fe8c8822a2d48d13076ef0ea"
        ],
        [
            "Require Cminorgen.",
            "VernacRequire",
            "5c0acc8dddea7feafe3bb61000eb124bc72fd24e"
        ],
        [
            "Require Selection.",
            "VernacRequire",
            "f5a9d2b68e44546c95f1e85a01d6de6869500a9c"
        ],
        [
            "Require RTLgen.",
            "VernacRequire",
            "4d226ee20f1e62feca31d3b1c77d64aea3f0088c"
        ],
        [
            "Require Tailcall.",
            "VernacRequire",
            "7c157ae2cdaef2e274adfa38562a1e095b098c3a"
        ],
        [
            "Require Inlining.",
            "VernacRequire",
            "396c5099bc009684be3970d1a55858ae7cb3de40"
        ],
        [
            "Require Renumber.",
            "VernacRequire",
            "cf6abea76fbf05e26f0590e47b94f92138c6f2fa"
        ],
        [
            "Require Constprop.",
            "VernacRequire",
            "a500ba29b593d5456e478271e46397e55415cb95"
        ],
        [
            "Require CSE.",
            "VernacRequire",
            "f1dbaf54f71e1dd6e3f3e97dba9684247329cbad"
        ],
        [
            "Require Deadcode.",
            "VernacRequire",
            "381e9df77492d43150927b4dfa50c332d4c858a5"
        ],
        [
            "Require Unusedglob.",
            "VernacRequire",
            "4af2352f6c19d56d7171f93982325a8a638a22e2"
        ],
        [
            "Require Allocation.",
            "VernacRequire",
            "26446f99e3c9223c5ac36c182bdb3d6ee2087e61"
        ],
        [
            "Require Tunneling.",
            "VernacRequire",
            "44b30c23961bed7978377f75312ee04c30cf1ebb"
        ],
        [
            "Require Linearize.",
            "VernacRequire",
            "b08c4cfd9c580a49f682c8d29c0b1d4172692e08"
        ],
        [
            "Require CleanupLabels.",
            "VernacRequire",
            "a59c8ff8732beafc39cc172333be18b4ba02387b"
        ],
        [
            "Require Debugvar.",
            "VernacRequire",
            "e4985c7459fc50dbbac629b394db6044e864d2b8"
        ],
        [
            "Require Stacking.",
            "VernacRequire",
            "aee0ea63d85183875fe5fa5c2f432a5b95d54024"
        ],
        [
            "Require Asmgen.",
            "VernacRequire",
            "a8c65aa39697846400dee1b31a0d0beef9a99cef"
        ],
        [
            "Require SimplExprproof.",
            "VernacRequire",
            "ade8bf99e9057f4f77e9cbef83ad7f835d1734ed"
        ],
        [
            "Require SimplLocalsproof.",
            "VernacRequire",
            "77e4a15df523af20a23bcf9a4a3cd5a30e180bc8"
        ],
        [
            "Require Cshmgenproof.",
            "VernacRequire",
            "3fcda8086b395a192b25e5e31a87cce338f9639c"
        ],
        [
            "Require Cminorgenproof.",
            "VernacRequire",
            "ad4cca40012fa7f51e132599ee42d716844b6f81"
        ],
        [
            "Require Selectionproof.",
            "VernacRequire",
            "b55acfadad23764606cc010e7c4cf1e908efaa8c"
        ],
        [
            "Require RTLgenproof.",
            "VernacRequire",
            "6905ee86c0fd0e3bddb7068af0d5da3ca6ba764c"
        ],
        [
            "Require Tailcallproof.",
            "VernacRequire",
            "91cab405fd0371556b9f16d2aab9b50cdcf086d3"
        ],
        [
            "Require Inliningproof.",
            "VernacRequire",
            "f0977c075504a033f76e20de3d5c7bcb2c54f136"
        ],
        [
            "Require Renumberproof.",
            "VernacRequire",
            "bb00583238c7f277c77c3aa50210a9ef2e5554f1"
        ],
        [
            "Require Constpropproof.",
            "VernacRequire",
            "0308b46830096f7846cf328f304c76bfd39026e2"
        ],
        [
            "Require CSEproof.",
            "VernacRequire",
            "64692c5ddbc5443547be685ef962b60a95231ac8"
        ],
        [
            "Require Deadcodeproof.",
            "VernacRequire",
            "cddee9fffd673c1fba16c31fd91235e8cf730db2"
        ],
        [
            "Require Unusedglobproof.",
            "VernacRequire",
            "571bb42b080665ff8f23381338d29d5c72ae2415"
        ],
        [
            "Require Allocproof.",
            "VernacRequire",
            "107ce8c57dc2343315db09d3f1c0059b9eb1d02e"
        ],
        [
            "Require Tunnelingproof.",
            "VernacRequire",
            "57b6615bbd6914ef8be8341cf031384f87fb4a8f"
        ],
        [
            "Require Linearizeproof.",
            "VernacRequire",
            "c42ae8ce83031a1c3bbb857883a0cc4d7c82d970"
        ],
        [
            "Require CleanupLabelsproof.",
            "VernacRequire",
            "b675144f21eacd1058f2eff7d1fc29bca0641f51"
        ],
        [
            "Require Debugvarproof.",
            "VernacRequire",
            "4562f633ca401a08ce434fe95e8ebfeba20b0520"
        ],
        [
            "Require Stackingproof.",
            "VernacRequire",
            "28e459ea7855a5a5e71c861b101ea82702444bcb"
        ],
        [
            "Require Asmgenproof.",
            "VernacRequire",
            "0443346301206cdeff8ba2a83cd00df031cd1a22"
        ],
        [
            "Require Import Compopts.",
            "VernacRequire",
            "3104b2f6dec95077a03098f46da24b4e171dbc64"
        ],
        [
            "Parameter print_Clight: Clight.program -> unit.",
            "VernacAssumption",
            "de5a218a5d9c42af0fa6a7c334791ea8fd9248b7"
        ],
        [
            "Parameter print_Cminor: Cminor.program -> unit.",
            "VernacAssumption",
            "e54602f4ff36b7af7fbbfc41064927243c244c57"
        ],
        [
            "Parameter print_RTL: Z -> RTL.program -> unit.",
            "VernacAssumption",
            "38da13795e1bf25558a297453f59f660b6ad8213"
        ],
        [
            "Parameter print_LTL: LTL.program -> unit.",
            "VernacAssumption",
            "35fea3b2882f05c346b4dcf752eddbc54df32eca"
        ],
        [
            "Parameter print_Mach: Mach.program -> unit.",
            "VernacAssumption",
            "626f8b71ce6508d9f76bb5c55dbf18f3baf7ae97"
        ],
        [
            "Local Open Scope string_scope.",
            "VernacOpenCloseScope",
            "347f91aff322dccfab9c81382e495d8430d8e803"
        ],
        [
            "Definition apply_total (A B: Type) (x: res A) (f: A -> B) : res B := match x with Error msg => Error msg | OK x1 => OK (f x1) end.",
            "VernacDefinition",
            "57b0c88f8afbada0e3ab6a909476c965023720c0"
        ],
        [
            "Definition apply_partial (A B: Type) (x: res A) (f: A -> res B) : res B := match x with Error msg => Error msg | OK x1 => f x1 end.",
            "VernacDefinition",
            "4610b9d75372e32b46411fe68473d4d811fe99a2"
        ],
        [
            "Notation \"a @@@ b\" := (apply_partial _ _ a b) (at level 50, left associativity).",
            "VernacNotation",
            "7a80e5d3735dbc17df874d4f7a1d171819a0bd8a"
        ],
        [
            "Notation \"a @@ b\" := (apply_total _ _ a b) (at level 50, left associativity).",
            "VernacNotation",
            "849bacf399e5cf49e8dd07ac0ae01f95e8e39c73"
        ],
        [
            "Definition print {A: Type} (printer: A -> unit) (prog: A) : A := let unused := printer prog in prog.",
            "VernacDefinition",
            "ade8b641c457ade8322876704270506bb3d67209"
        ],
        [
            "Definition time {A B: Type} (name: string) (f: A -> B) : A -> B := f.",
            "VernacDefinition",
            "c3df5826b57128463dcf7eb7d094ee249682e365"
        ],
        [
            "Definition total_if {A: Type} (flag: unit -> bool) (f: A -> A) (prog: A) : A := if flag tt then f prog else prog.",
            "VernacDefinition",
            "d3fb56daf769b64127796521c9591795b4c2d9d7"
        ],
        [
            "Definition partial_if {A: Type} (flag: unit -> bool) (f: A -> res A) (prog: A) : res A := if flag tt then f prog else OK prog.",
            "VernacDefinition",
            "36384ebd283ef985fcc05fc327cd735b5bd5aca0"
        ],
        [
            "Definition transf_rtl_program (f: RTL.program) : res Asm.program := OK f @@ print (print_RTL 0) @@ total_if Compopts.optim_tailcalls (time \"Tail calls\" Tailcall.transf_program) @@ print (print_RTL 1) @@@ time \"Inlining\" Inlining.transf_program @@ print (print_RTL 2) @@ time \"Renumbering\" Renumber.transf_program @@ print (print_RTL 3) @@ total_if Compopts.optim_constprop (time \"Constant propagation\" Constprop.transf_program) @@ print (print_RTL 4) @@ total_if Compopts.optim_constprop (time \"Renumbering\" Renumber.transf_program) @@ print (print_RTL 5) @@@ partial_if Compopts.optim_CSE (time \"CSE\" CSE.transf_program) @@ print (print_RTL 6) @@@ partial_if Compopts.optim_redundancy (time \"Redundancy elimination\" Deadcode.transf_program) @@ print (print_RTL 7) @@@ time \"Unused globals\" Unusedglob.transform_program @@ print (print_RTL 8) @@@ time \"Register allocation\" Allocation.transf_program @@ print print_LTL @@ time \"Branch tunneling\" Tunneling.tunnel_program @@@ time \"CFG linearization\" Linearize.transf_program @@ time \"Label cleanup\" CleanupLabels.transf_program @@@ partial_if Compopts.debug (time \"Debugging info for local variables\" Debugvar.transf_program) @@@ time \"Mach generation\" Stacking.transf_program @@ print print_Mach @@@ time \"Asm generation\" Asmgen.transf_program.",
            "VernacDefinition",
            "24e56a5e4daca69593e5dd5553b4494cfc4f86e2"
        ],
        [
            "Definition transf_cminor_program (p: Cminor.program) : res Asm.program := OK p @@ print print_Cminor @@@ time \"Instruction selection\" Selection.sel_program @@@ time \"RTL generation\" RTLgen.transl_program @@@ transf_rtl_program.",
            "VernacDefinition",
            "d07be49d04f5bd2d28caa47393404cf68067393d"
        ],
        [
            "Definition transf_clight_program (p: Clight.program) : res Asm.program := OK p @@ print print_Clight @@@ time \"Simplification of locals\" SimplLocals.transf_program @@@ time \"C#minor generation\" Cshmgen.transl_program @@@ time \"Cminor generation\" Cminorgen.transl_program @@@ transf_cminor_program.",
            "VernacDefinition",
            "4c69e185c51518343513659ffc973335a30141aa"
        ],
        [
            "Definition transf_c_program (p: Csyntax.program) : res Asm.program := OK p @@@ time \"Clight generation\" SimplExpr.transl_program @@@ transf_clight_program.",
            "VernacDefinition",
            "8b9d7104583a70f7bac89569610bb5add9bc9255"
        ],
        [
            "Definition transl_init := Initializers.transl_init.",
            "VernacDefinition",
            "5c9e38523dd913764ffb8614ab2089b5dc05e0d6"
        ],
        [
            "Definition cexec_do_step := Cexec.do_step.",
            "VernacDefinition",
            "72ddaedd0ecf44928bc6eb6d24dc74b6c381cd95"
        ],
        [
            "Lemma print_identity: forall (A: Type) (printer: A -> unit) (prog: A), print printer prog = prog.",
            "VernacStartTheoremProof",
            "6cdd1efd683237480fbdffd04f96ef59cb90cd64"
        ],
        [
            "intros; unfold print.",
            "VernacExtend",
            "052839ba3abd28b76a47c65d9504c688a0b174c1"
        ],
        [
            "destruct (printer prog); auto.",
            "VernacExtend",
            "d495540a5ee265eca260456a72c52d95527e4b3f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compose_print_identity: forall (A: Type) (x: res A) (f: A -> unit), x @@ print f = x.",
            "VernacStartTheoremProof",
            "236c29b441c87c91d9794c457c27319207f07072"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct x; simpl.",
            "VernacExtend",
            "b0c3c03e2d0a8fa13c533c8a79c2c6b3067d60db"
        ],
        [
            "rewrite print_identity.",
            "VernacExtend",
            "dbe944c3703bb7932384f76131487ae9fea6f9fd"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition match_if {A: Type} (flag: unit -> bool) (R: A -> A -> Prop): A -> A -> Prop := if flag tt then R else eq.",
            "VernacDefinition",
            "635c5d740d0f4f8b5f5f0f896d608972acbc89c1"
        ],
        [
            "Lemma total_if_match: forall (A: Type) (flag: unit -> bool) (f: A -> A) (rel: A -> A -> Prop) (prog: A), (forall p, rel p (f p)) -> match_if flag rel prog (total_if flag f prog).",
            "VernacStartTheoremProof",
            "bdfc3b953ea914564d5ed88184650fa4ed3b9dd5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold match_if, total_if.",
            "VernacExtend",
            "bcb86e8bbe228e508ecfd75c5c4e085c34a6f72c"
        ],
        [
            "destruct (flag tt); auto.",
            "VernacExtend",
            "a29c9b30c3daf891336451f12ef56ab0aca22ab5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma partial_if_match: forall (A: Type) (flag: unit -> bool) (f: A -> res A) (rel: A -> A -> Prop) (prog tprog: A), (forall p tp, f p = OK tp -> rel p tp) -> partial_if flag f prog = OK tprog -> match_if flag rel prog tprog.",
            "VernacStartTheoremProof",
            "064afedaa219aa011a75d255ed6cad2ca8896ffe"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold match_if, partial_if in *.",
            "VernacExtend",
            "e32a1c449acf6c33097142a5947cc1b3db9abfc6"
        ],
        [
            "destruct (flag tt).",
            "VernacExtend",
            "1891b70235012a87cb4b88d190457b63eb723f69"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance TransfIfLink {A: Type} {LA: Linker A} (flag: unit -> bool) (transf: A -> A -> Prop) (TL: TransfLink transf) : TransfLink (match_if flag transf).",
            "VernacInstance",
            "b1a850ea5deb6233bae1731e810ab146d7b7a446"
        ],
        [
            "unfold match_if.",
            "VernacExtend",
            "ed5bb183d0ae7e1b391f867fe9953f5f25c3f421"
        ],
        [
            "destruct (flag tt).",
            "VernacExtend",
            "1891b70235012a87cb4b88d190457b63eb723f69"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "subst tp1 tp2.",
            "VernacExtend",
            "7d1427d8e548927a55c8eb20b1211771396f25c3"
        ],
        [
            "exists p; auto.",
            "VernacExtend",
            "ce43f93b5525ba4b412c7576bb2db79216326ab5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Open Scope linking_scope.",
            "VernacOpenCloseScope",
            "0035f51b8d9b35abcdb30e61c5e2bcc332086290"
        ],
        [
            "Definition CompCert's_passes := mkpass SimplExprproof.match_prog ::: mkpass SimplLocalsproof.match_prog ::: mkpass Cshmgenproof.match_prog ::: mkpass Cminorgenproof.match_prog ::: mkpass Selectionproof.match_prog ::: mkpass RTLgenproof.match_prog ::: mkpass (match_if Compopts.optim_tailcalls Tailcallproof.match_prog) ::: mkpass Inliningproof.match_prog ::: mkpass Renumberproof.match_prog ::: mkpass (match_if Compopts.optim_constprop Constpropproof.match_prog) ::: mkpass (match_if Compopts.optim_constprop Renumberproof.match_prog) ::: mkpass (match_if Compopts.optim_CSE CSEproof.match_prog) ::: mkpass (match_if Compopts.optim_redundancy Deadcodeproof.match_prog) ::: mkpass Unusedglobproof.match_prog ::: mkpass Allocproof.match_prog ::: mkpass Tunnelingproof.match_prog ::: mkpass Linearizeproof.match_prog ::: mkpass CleanupLabelsproof.match_prog ::: mkpass (match_if Compopts.debug Debugvarproof.match_prog) ::: mkpass Stackingproof.match_prog ::: mkpass Asmgenproof.match_prog ::: pass_nil _.",
            "VernacDefinition",
            "83a5d77f86a416e6f689c8d3561667c76c155beb"
        ],
        [
            "Definition match_prog: Csyntax.program -> Asm.program -> Prop := pass_match (compose_passes CompCert's_passes).",
            "VernacDefinition",
            "b673f11e0fe46c3066e92f124cca7f98a4886027"
        ],
        [
            "Theorem transf_c_program_match: forall p tp, transf_c_program p = OK tp -> match_prog p tp.",
            "VernacStartTheoremProof",
            "10e093e30544622d227f3a220836025ec0832159"
        ],
        [
            "intros p tp T.",
            "VernacExtend",
            "2203fb3232736a0f42df0843cb047e30e531ba7a"
        ],
        [
            "unfold transf_c_program, time in T.",
            "VernacExtend",
            "a1abbc2173e11f58ec4574f3a4dd5335a8024d86"
        ],
        [
            "simpl in T.",
            "VernacExtend",
            "48eadae58ea00ccbc5df79f2990244482ec764e2"
        ],
        [
            "destruct (SimplExpr.transl_program p) as [p1|e] eqn:P1; simpl in T; try discriminate.",
            "VernacExtend",
            "9ef95bfa51c1fe1ea6ce33cc30511a874e1de552"
        ],
        [
            "unfold transf_clight_program, time in T.",
            "VernacExtend",
            "f7828cd1611d0d56e0f351ab2b3704927d476952"
        ],
        [
            "rewrite ! compose_print_identity in T.",
            "VernacExtend",
            "1846a9866a46308ee76a726bfee1e9d8df75fbbd"
        ],
        [
            "simpl in T.",
            "VernacExtend",
            "48eadae58ea00ccbc5df79f2990244482ec764e2"
        ],
        [
            "destruct (SimplLocals.transf_program p1) as [p2|e] eqn:P2; simpl in T; try discriminate.",
            "VernacExtend",
            "77b357321593ba8f19b1ff8e6072d55ee2e5dbb0"
        ],
        [
            "destruct (Cshmgen.transl_program p2) as [p3|e] eqn:P3; simpl in T; try discriminate.",
            "VernacExtend",
            "be29d9e52cc8e3bc508df77aa5e97874fa72bef7"
        ],
        [
            "destruct (Cminorgen.transl_program p3) as [p4|e] eqn:P4; simpl in T; try discriminate.",
            "VernacExtend",
            "475c3f28d05974dd949839c6a48195239147969d"
        ],
        [
            "unfold transf_cminor_program, time in T.",
            "VernacExtend",
            "0b7f13d3d7e6fb51782c5ae71922e8a6fb623378"
        ],
        [
            "rewrite ! compose_print_identity in T.",
            "VernacExtend",
            "1846a9866a46308ee76a726bfee1e9d8df75fbbd"
        ],
        [
            "simpl in T.",
            "VernacExtend",
            "48eadae58ea00ccbc5df79f2990244482ec764e2"
        ],
        [
            "destruct (Selection.sel_program p4) as [p5|e] eqn:P5; simpl in T; try discriminate.",
            "VernacExtend",
            "5d6395508cbb3e310cb11e72615a94fdfcaedc4d"
        ],
        [
            "destruct (RTLgen.transl_program p5) as [p6|e] eqn:P6; simpl in T; try discriminate.",
            "VernacExtend",
            "7c564de520caec1347fd7623979ea1100d12c8d7"
        ],
        [
            "unfold transf_rtl_program, time in T.",
            "VernacExtend",
            "26314dc0250b9d946c3d6392509f7ba99a391712"
        ],
        [
            "rewrite ! compose_print_identity in T.",
            "VernacExtend",
            "1846a9866a46308ee76a726bfee1e9d8df75fbbd"
        ],
        [
            "simpl in T.",
            "VernacExtend",
            "48eadae58ea00ccbc5df79f2990244482ec764e2"
        ],
        [
            "set (p7 := total_if optim_tailcalls Tailcall.transf_program p6) in *.",
            "VernacExtend",
            "2b59bb0ddd58a8869dfa1bc72fc22ef36e047e05"
        ],
        [
            "destruct (Inlining.transf_program p7) as [p8|e] eqn:P8; simpl in T; try discriminate.",
            "VernacExtend",
            "11f0d708da410c005ae1a6073958eaca2fd6a8ae"
        ],
        [
            "set (p9 := Renumber.transf_program p8) in *.",
            "VernacExtend",
            "ab77b5d00a20b2bb19aa717ecbd22044c035b8db"
        ],
        [
            "set (p10 := total_if optim_constprop Constprop.transf_program p9) in *.",
            "VernacExtend",
            "1c9173f432c12b1ce6d85c1de3ff66d96e1c81af"
        ],
        [
            "set (p11 := total_if optim_constprop Renumber.transf_program p10) in *.",
            "VernacExtend",
            "ec896f5720f5fbeac88abc17e9bab043dbe3019a"
        ],
        [
            "destruct (partial_if optim_CSE CSE.transf_program p11) as [p12|e] eqn:P12; simpl in T; try discriminate.",
            "VernacExtend",
            "477e32b9c2c6f508cd3d43a321080b441462a635"
        ],
        [
            "destruct (partial_if optim_redundancy Deadcode.transf_program p12) as [p13|e] eqn:P13; simpl in T; try discriminate.",
            "VernacExtend",
            "b84a2d47e43fdabf78d9df5f28efe0ef01dde622"
        ],
        [
            "destruct (Unusedglob.transform_program p13) as [p14|e] eqn:P14; simpl in T; try discriminate.",
            "VernacExtend",
            "0fa37dd3d69082da60e759a1f65079bb19bd5a2a"
        ],
        [
            "destruct (Allocation.transf_program p14) as [p15|e] eqn:P15; simpl in T; try discriminate.",
            "VernacExtend",
            "a29fc325688fa0e1668720b13209fd6c2a03338a"
        ],
        [
            "set (p16 := Tunneling.tunnel_program p15) in *.",
            "VernacExtend",
            "945ce01d80f2d25555e2c91c0c81ac464a7be37b"
        ],
        [
            "destruct (Linearize.transf_program p16) as [p17|e] eqn:P17; simpl in T; try discriminate.",
            "VernacExtend",
            "c4a96a1f8bae00c2da771054e033e80342398ecf"
        ],
        [
            "set (p18 := CleanupLabels.transf_program p17) in *.",
            "VernacExtend",
            "c1cd9d2928747434d0b8cee82c533d155d5c89f5"
        ],
        [
            "destruct (partial_if debug Debugvar.transf_program p18) as [p19|e] eqn:P19; simpl in T; try discriminate.",
            "VernacExtend",
            "684dc02359b9a6567278d2876222cbb178195566"
        ],
        [
            "destruct (Stacking.transf_program p19) as [p20|e] eqn:P20; simpl in T; try discriminate.",
            "VernacExtend",
            "93edf625cb52a0639109cfeb7d57a8cce4cbb9f3"
        ],
        [
            "unfold match_prog; simpl.",
            "VernacExtend",
            "2bcb67ee9aff42f8cb5d9e99b17e5e52119b11c8"
        ],
        [
            "exists p1; split.",
            "VernacExtend",
            "27f1da8d7ffeb10b89af26e98cbfd3bf4bf0be34"
        ],
        [
            "apply SimplExprproof.transf_program_match; auto.",
            "VernacExtend",
            "238424676b0ce3c4d2b212f2fa7e051a1234f397"
        ],
        [
            "exists p2; split.",
            "VernacExtend",
            "971980dbf4de8553d53f81f929a283eb7ed088f2"
        ],
        [
            "apply SimplLocalsproof.match_transf_program; auto.",
            "VernacExtend",
            "91a6226fd6ba1a3b76f0871c42a49bb55f49922a"
        ],
        [
            "exists p3; split.",
            "VernacExtend",
            "7d215b1a46e46bc4d3e6b8582c4640c281e871cc"
        ],
        [
            "apply Cshmgenproof.transf_program_match; auto.",
            "VernacExtend",
            "e3e45052d30f243380cad7f6284afcc72a219a89"
        ],
        [
            "exists p4; split.",
            "VernacExtend",
            "bb3ca97a0c33299c99eb33c95eba5f588a51140f"
        ],
        [
            "apply Cminorgenproof.transf_program_match; auto.",
            "VernacExtend",
            "46b4f8f2be8ad556aa684537bbc8c9a609f96ed3"
        ],
        [
            "exists p5; split.",
            "VernacExtend",
            "ff2c3b117df9dffa3e3903b7690f1cb884dd2b22"
        ],
        [
            "apply Selectionproof.transf_program_match; auto.",
            "VernacExtend",
            "189a846922b83b7077fe0aab656461f6701e9e35"
        ],
        [
            "exists p6; split.",
            "VernacExtend",
            "40439fb2abebc09fa595b8e973b4fc1dce78ff8b"
        ],
        [
            "apply RTLgenproof.transf_program_match; auto.",
            "VernacExtend",
            "c4c88df2e950246fc0447cd9699d09bc97c9357a"
        ],
        [
            "exists p7; split.",
            "VernacExtend",
            "8a5340effd78685c6d060a3a68096a40251adbed"
        ],
        [
            "apply total_if_match.",
            "VernacExtend",
            "f0b36d9895d2fb7f297da723fb4ea012530d97d5"
        ],
        [
            "apply Tailcallproof.transf_program_match.",
            "VernacExtend",
            "c72673214767a6a3a8f967d6305ce5d05b278dae"
        ],
        [
            "exists p8; split.",
            "VernacExtend",
            "0f44e058e22099a44c25c0711f7f86cf88202ce9"
        ],
        [
            "apply Inliningproof.transf_program_match; auto.",
            "VernacExtend",
            "9585cca6b63cfc6576bb9dfb4b0b38068eea3656"
        ],
        [
            "exists p9; split.",
            "VernacExtend",
            "8ad6be738b33575430df2cb61e282601e4c8d0d7"
        ],
        [
            "apply Renumberproof.transf_program_match; auto.",
            "VernacExtend",
            "4a0aab17dec10a3b3e5286603be263dd3ef286e5"
        ],
        [
            "exists p10; split.",
            "VernacExtend",
            "d1e672733ac0143b55d648b327c6653852b30c57"
        ],
        [
            "apply total_if_match.",
            "VernacExtend",
            "f0b36d9895d2fb7f297da723fb4ea012530d97d5"
        ],
        [
            "apply Constpropproof.transf_program_match.",
            "VernacExtend",
            "8a1c995c24a59e3093b740e50f5ad12becca5c26"
        ],
        [
            "exists p11; split.",
            "VernacExtend",
            "685bf93b04c141840ebee67dd859757ea03f77b1"
        ],
        [
            "apply total_if_match.",
            "VernacExtend",
            "f0b36d9895d2fb7f297da723fb4ea012530d97d5"
        ],
        [
            "apply Renumberproof.transf_program_match.",
            "VernacExtend",
            "9de037ce5b2962bf4fe409ac734eb011f3a5a086"
        ],
        [
            "exists p12; split.",
            "VernacExtend",
            "efa8d77f57a0ca3eb8cb7b35ebe042bda45acf26"
        ],
        [
            "eapply partial_if_match; eauto.",
            "VernacExtend",
            "46f13d10b390828f4e764e6817eb68e0bf88bff3"
        ],
        [
            "apply CSEproof.transf_program_match.",
            "VernacExtend",
            "7958b72a68a6ed2024a22043349125f9aa0b7bb6"
        ],
        [
            "exists p13; split.",
            "VernacExtend",
            "d1206d2a0f0d51ae931cd60e4eef877c5d1aae13"
        ],
        [
            "eapply partial_if_match; eauto.",
            "VernacExtend",
            "46f13d10b390828f4e764e6817eb68e0bf88bff3"
        ],
        [
            "apply Deadcodeproof.transf_program_match.",
            "VernacExtend",
            "c8fa5ecabb6316dbd03ed1c84b8b7b295b07098d"
        ],
        [
            "exists p14; split.",
            "VernacExtend",
            "40a283b4eb729814c6f678394b3adf5fb482e15b"
        ],
        [
            "apply Unusedglobproof.transf_program_match; auto.",
            "VernacExtend",
            "3f5939842ffb7b4c2ffb77f448ef83457d799b24"
        ],
        [
            "exists p15; split.",
            "VernacExtend",
            "faa9e3ce31b7005674ab1266bf900bb99df8762d"
        ],
        [
            "apply Allocproof.transf_program_match; auto.",
            "VernacExtend",
            "58b9a40f55e4e0f4931bf0d51554a0b347193055"
        ],
        [
            "exists p16; split.",
            "VernacExtend",
            "77a971f960857a9615960f79ed4716ea1d631322"
        ],
        [
            "apply Tunnelingproof.transf_program_match.",
            "VernacExtend",
            "a4882e8a35e07c872ec36182c691596dffc6dc59"
        ],
        [
            "exists p17; split.",
            "VernacExtend",
            "87ff84fd75833590277a7d340fa6974f5a7a749e"
        ],
        [
            "apply Linearizeproof.transf_program_match; auto.",
            "VernacExtend",
            "90f71ec5cc8dd58cbaca2b29791de684d2b3f5d1"
        ],
        [
            "exists p18; split.",
            "VernacExtend",
            "d8e654bcb7271eebf42185c6257014cdd3df7736"
        ],
        [
            "apply CleanupLabelsproof.transf_program_match; auto.",
            "VernacExtend",
            "7462662e6d340b82d41c5f8d45d4f8b51107be73"
        ],
        [
            "exists p19; split.",
            "VernacExtend",
            "abfbcff8cd687aef1e87cb7c79e6f4d059ad2107"
        ],
        [
            "eapply partial_if_match; eauto.",
            "VernacExtend",
            "46f13d10b390828f4e764e6817eb68e0bf88bff3"
        ],
        [
            "apply Debugvarproof.transf_program_match.",
            "VernacExtend",
            "72496d355b276911a6fbe0ae0638d6c87ec9740b"
        ],
        [
            "exists p20; split.",
            "VernacExtend",
            "9cc6e532488e87a6b6bb595234e3ad2cfad97e6e"
        ],
        [
            "apply Stackingproof.transf_program_match; auto.",
            "VernacExtend",
            "6df66b328b5886aba67c274859f968a160517aa7"
        ],
        [
            "exists tp; split.",
            "VernacExtend",
            "fe4b9d3d9e7338db11e7aee4df6841c33cae1809"
        ],
        [
            "apply Asmgenproof.transf_program_match; auto.",
            "VernacExtend",
            "a47703a778a174072fdb66b5e279fe26e9989ddb"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark forward_simulation_identity: forall sem, forward_simulation sem sem.",
            "VernacStartTheoremProof",
            "ebbd85350b75f6237018ec6a91c3c1b94ee58d1b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply forward_simulation_step with (fun s1 s2 => s2 = s1); intros.",
            "VernacExtend",
            "05e67076be707ff9dcb1022be13b214371d205f1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists s1; auto.",
            "VernacExtend",
            "b635d662d92c9a6dd854d136739e1523825b06df"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst s2; auto.",
            "VernacExtend",
            "5ad96f8ec1db1d3025ea0347e1998da1365298ed"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst s2.",
            "VernacExtend",
            "a6e5922b7eaedb85c3b7105d5d5e7d370aa9f04c"
        ],
        [
            "exists s1'; auto.",
            "VernacExtend",
            "dafe3bcd5039e1be67b5351e364d2c47923237a2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma match_if_simulation: forall (A: Type) (sem: A -> semantics) (flag: unit -> bool) (transf: A -> A -> Prop) (prog tprog: A), match_if flag transf prog tprog -> (forall p tp, transf p tp -> forward_simulation (sem p) (sem tp)) -> forward_simulation (sem prog) (sem tprog).",
            "VernacStartTheoremProof",
            "4d25cd84a640e91570099d484b8f8c22c59f825a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold match_if in *.",
            "VernacExtend",
            "806c2e9ba2b4f838b5c844fc66e811db3e747054"
        ],
        [
            "destruct (flag tt).",
            "VernacExtend",
            "1891b70235012a87cb4b88d190457b63eb723f69"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "apply forward_simulation_identity.",
            "VernacExtend",
            "a22a27570ba17ae0ddae0ef6c69bd421b6c1585a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cstrategy_semantic_preservation: forall p tp, match_prog p tp -> forward_simulation (Cstrategy.semantics p) (Asm.semantics tp) /\\ backward_simulation (atomic (Cstrategy.semantics p)) (Asm.semantics tp).",
            "VernacStartTheoremProof",
            "d3d1d0dd37a9d7df48f7a7caa46b584632e462e1"
        ],
        [
            "intros p tp M.",
            "VernacExtend",
            "bc9236a285d09da0ca9218870338e093de953400"
        ],
        [
            "unfold match_prog, pass_match in M; simpl in M.",
            "VernacExtend",
            "fbe7b2bdd9c9205f9c89cfd2b3477c4fa82015e3"
        ],
        [
            "Ltac DestructM := match goal with [ H: exists p, _ /\\ _ |- _ ] => let p := fresh \"p\" in let M := fresh \"M\" in let MM := fresh \"MM\" in destruct H as (p & M & MM); clear H end.",
            "VernacExtend",
            "70022be0518b018d820cfe20cd2a83315bbd3658"
        ],
        [
            "repeat DestructM.",
            "VernacExtend",
            "b8a62863e48136e1eed1fede4b06f927530441fc"
        ],
        [
            "subst tp.",
            "VernacExtend",
            "2948dd29100fe585ce78067a5d96efc1a61729c5"
        ],
        [
            "assert (F: forward_simulation (Cstrategy.semantics p) (Asm.semantics p21)).",
            "VernacExtend",
            "7af678d64d069365cd02c3a8c24f5afdfcd9574d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "eapply compose_forward_simulations.",
            "VernacExtend",
            "6a2b45e1e13bd92ae4f1ffcd61d8dff2585e4f71"
        ],
        [
            "eapply SimplExprproof.transl_program_correct; eassumption.",
            "VernacExtend",
            "5ea83ac471d7d23ce7033de32c9b56c934d91a68"
        ],
        [
            "eapply compose_forward_simulations.",
            "VernacExtend",
            "6a2b45e1e13bd92ae4f1ffcd61d8dff2585e4f71"
        ],
        [
            "eapply SimplLocalsproof.transf_program_correct; eassumption.",
            "VernacExtend",
            "2241e2baeef537cae224835dd73e811f8991aef5"
        ],
        [
            "eapply compose_forward_simulations.",
            "VernacExtend",
            "6a2b45e1e13bd92ae4f1ffcd61d8dff2585e4f71"
        ],
        [
            "eapply Cshmgenproof.transl_program_correct; eassumption.",
            "VernacExtend",
            "bba26290bc277f78ff0cf9f9f6522a0acaabb7bc"
        ],
        [
            "eapply compose_forward_simulations.",
            "VernacExtend",
            "6a2b45e1e13bd92ae4f1ffcd61d8dff2585e4f71"
        ],
        [
            "eapply Cminorgenproof.transl_program_correct; eassumption.",
            "VernacExtend",
            "8d898cf3ceb8e420e97bc6f6e87f85c9e7f3052a"
        ],
        [
            "eapply compose_forward_simulations.",
            "VernacExtend",
            "6a2b45e1e13bd92ae4f1ffcd61d8dff2585e4f71"
        ],
        [
            "eapply Selectionproof.transf_program_correct; eassumption.",
            "VernacExtend",
            "6b18e7971c0e842a8fc39dde2ab49adec7a0a4f6"
        ],
        [
            "eapply compose_forward_simulations.",
            "VernacExtend",
            "6a2b45e1e13bd92ae4f1ffcd61d8dff2585e4f71"
        ],
        [
            "eapply RTLgenproof.transf_program_correct; eassumption.",
            "VernacExtend",
            "10855b92fc0aa7ed685405adad096879ecc3073e"
        ],
        [
            "eapply compose_forward_simulations.",
            "VernacExtend",
            "6a2b45e1e13bd92ae4f1ffcd61d8dff2585e4f71"
        ],
        [
            "eapply match_if_simulation.",
            "VernacExtend",
            "e3bfbfc1798e8da007a3e9e4c8ffdf8dcd452561"
        ],
        [
            "eassumption.",
            "VernacExtend",
            "909bfe8655bf95c07560744f733991163ce6cf7e"
        ],
        [
            "exact Tailcallproof.transf_program_correct.",
            "VernacExtend",
            "ca94a89944139b7a8ae1eeb7a57edfbdb6818c1a"
        ],
        [
            "eapply compose_forward_simulations.",
            "VernacExtend",
            "6a2b45e1e13bd92ae4f1ffcd61d8dff2585e4f71"
        ],
        [
            "eapply Inliningproof.transf_program_correct; eassumption.",
            "VernacExtend",
            "b46530c64a43ed0ea07aa882087f184e28ab9aa3"
        ],
        [
            "eapply compose_forward_simulations.",
            "VernacExtend",
            "6a2b45e1e13bd92ae4f1ffcd61d8dff2585e4f71"
        ],
        [
            "eapply Renumberproof.transf_program_correct; eassumption.",
            "VernacExtend",
            "a7c665dc12646e2d8677f20cbde783f4cdf9acbe"
        ],
        [
            "eapply compose_forward_simulations.",
            "VernacExtend",
            "6a2b45e1e13bd92ae4f1ffcd61d8dff2585e4f71"
        ],
        [
            "eapply match_if_simulation.",
            "VernacExtend",
            "e3bfbfc1798e8da007a3e9e4c8ffdf8dcd452561"
        ],
        [
            "eassumption.",
            "VernacExtend",
            "909bfe8655bf95c07560744f733991163ce6cf7e"
        ],
        [
            "exact Constpropproof.transf_program_correct.",
            "VernacExtend",
            "979c4548b3858b6f2d15e24daef4ca68b144de0e"
        ],
        [
            "eapply compose_forward_simulations.",
            "VernacExtend",
            "6a2b45e1e13bd92ae4f1ffcd61d8dff2585e4f71"
        ],
        [
            "eapply match_if_simulation.",
            "VernacExtend",
            "e3bfbfc1798e8da007a3e9e4c8ffdf8dcd452561"
        ],
        [
            "eassumption.",
            "VernacExtend",
            "909bfe8655bf95c07560744f733991163ce6cf7e"
        ],
        [
            "exact Renumberproof.transf_program_correct.",
            "VernacExtend",
            "953511ddb3796bcd69214bdaebd3a07d5f100b6b"
        ],
        [
            "eapply compose_forward_simulations.",
            "VernacExtend",
            "6a2b45e1e13bd92ae4f1ffcd61d8dff2585e4f71"
        ],
        [
            "eapply match_if_simulation.",
            "VernacExtend",
            "e3bfbfc1798e8da007a3e9e4c8ffdf8dcd452561"
        ],
        [
            "eassumption.",
            "VernacExtend",
            "909bfe8655bf95c07560744f733991163ce6cf7e"
        ],
        [
            "exact CSEproof.transf_program_correct.",
            "VernacExtend",
            "1ccfe91311128e19bb23e6bc98ad87b41da3cd4b"
        ],
        [
            "eapply compose_forward_simulations.",
            "VernacExtend",
            "6a2b45e1e13bd92ae4f1ffcd61d8dff2585e4f71"
        ],
        [
            "eapply match_if_simulation.",
            "VernacExtend",
            "e3bfbfc1798e8da007a3e9e4c8ffdf8dcd452561"
        ],
        [
            "eassumption.",
            "VernacExtend",
            "909bfe8655bf95c07560744f733991163ce6cf7e"
        ],
        [
            "exact Deadcodeproof.transf_program_correct; eassumption.",
            "VernacExtend",
            "6f245b6cbf915b308917f76d3fb070b594cab229"
        ],
        [
            "eapply compose_forward_simulations.",
            "VernacExtend",
            "6a2b45e1e13bd92ae4f1ffcd61d8dff2585e4f71"
        ],
        [
            "eapply Unusedglobproof.transf_program_correct; eassumption.",
            "VernacExtend",
            "89d9e555b7cd2a3704567ed9deeeb65d926d30f1"
        ],
        [
            "eapply compose_forward_simulations.",
            "VernacExtend",
            "6a2b45e1e13bd92ae4f1ffcd61d8dff2585e4f71"
        ],
        [
            "eapply Allocproof.transf_program_correct; eassumption.",
            "VernacExtend",
            "bfdb9d4873bb7c29aed02fb89d4b7b4d0c459960"
        ],
        [
            "eapply compose_forward_simulations.",
            "VernacExtend",
            "6a2b45e1e13bd92ae4f1ffcd61d8dff2585e4f71"
        ],
        [
            "eapply Tunnelingproof.transf_program_correct; eassumption.",
            "VernacExtend",
            "9630e1b436174accdd123f7a84385a701292e0ce"
        ],
        [
            "eapply compose_forward_simulations.",
            "VernacExtend",
            "6a2b45e1e13bd92ae4f1ffcd61d8dff2585e4f71"
        ],
        [
            "eapply Linearizeproof.transf_program_correct; eassumption.",
            "VernacExtend",
            "9e2249cebf91452c06225302862b67acddc2ca9f"
        ],
        [
            "eapply compose_forward_simulations.",
            "VernacExtend",
            "6a2b45e1e13bd92ae4f1ffcd61d8dff2585e4f71"
        ],
        [
            "eapply CleanupLabelsproof.transf_program_correct; eassumption.",
            "VernacExtend",
            "058af6c80e55fc8fe2edaf8069d8c99b2af863db"
        ],
        [
            "eapply compose_forward_simulations.",
            "VernacExtend",
            "6a2b45e1e13bd92ae4f1ffcd61d8dff2585e4f71"
        ],
        [
            "eapply match_if_simulation.",
            "VernacExtend",
            "e3bfbfc1798e8da007a3e9e4c8ffdf8dcd452561"
        ],
        [
            "eassumption.",
            "VernacExtend",
            "909bfe8655bf95c07560744f733991163ce6cf7e"
        ],
        [
            "exact Debugvarproof.transf_program_correct.",
            "VernacExtend",
            "051893141ce3c72de1f3ba82b104cad7d041e878"
        ],
        [
            "eapply compose_forward_simulations.",
            "VernacExtend",
            "6a2b45e1e13bd92ae4f1ffcd61d8dff2585e4f71"
        ],
        [
            "eapply Stackingproof.transf_program_correct with (return_address_offset := Asmgenproof0.return_address_offset).",
            "VernacExtend",
            "323b6ae9c5a2f2e7f67e8d947cd42b2232bdd381"
        ],
        [
            "exact Asmgenproof.return_address_exists.",
            "VernacExtend",
            "dc04f2fb575997e0f50f5c90e392f016ddf7834b"
        ],
        [
            "eassumption.",
            "VernacExtend",
            "909bfe8655bf95c07560744f733991163ce6cf7e"
        ],
        [
            "eapply Asmgenproof.transf_program_correct; eassumption.",
            "VernacExtend",
            "82003f9fa3e2c3a1105242ecd801b4490e323377"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply forward_to_backward_simulation.",
            "VernacExtend",
            "9442135dd54e14d7078aa3da09858ce0d802a8cc"
        ],
        [
            "apply factor_forward_simulation.",
            "VernacExtend",
            "56f9dc04f6f490951dc2ac419470b5c5ae749789"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "eapply sd_traces.",
            "VernacExtend",
            "05f2910b61a10d6f8f833017a6bdf1a45045196d"
        ],
        [
            "eapply Asm.semantics_determinate.",
            "VernacExtend",
            "6f94487c448a7536215f3a625771cd8dfb1fa1f3"
        ],
        [
            "apply atomic_receptive.",
            "VernacExtend",
            "4b5188553eaca62f85fcc8160d35818e4c969c14"
        ],
        [
            "apply Cstrategy.semantics_strongly_receptive.",
            "VernacExtend",
            "9679532a0dfef3e2730aa5bef33ac069dc28679e"
        ],
        [
            "apply Asm.semantics_determinate.",
            "VernacExtend",
            "c793a29cea58b862ab305aa94ce1c9b3ec546406"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem c_semantic_preservation: forall p tp, match_prog p tp -> backward_simulation (Csem.semantics p) (Asm.semantics tp).",
            "VernacStartTheoremProof",
            "13c390c56682ab3efbe809776b814b2bbc6c09a5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply compose_backward_simulation with (atomic (Cstrategy.semantics p)).",
            "VernacExtend",
            "66d345750c7d1555e9e45f56b3188c803ae21b9f"
        ],
        [
            "eapply sd_traces; eapply Asm.semantics_determinate.",
            "VernacExtend",
            "111861a5f2ba5068bd04755cdd9e23add2e8d032"
        ],
        [
            "apply factor_backward_simulation.",
            "VernacExtend",
            "cb8d965ff2686c8414cdefd1e9c8ab901737a705"
        ],
        [
            "apply Cstrategy.strategy_simulation.",
            "VernacExtend",
            "c7de9c0128061d236c494bac7a9555324042535e"
        ],
        [
            "apply Csem.semantics_single_events.",
            "VernacExtend",
            "0c40bdd2b356b86c7f75448de015f7ccf62b02f7"
        ],
        [
            "eapply ssr_well_behaved; eapply Cstrategy.semantics_strongly_receptive.",
            "VernacExtend",
            "a381486492b7478007e6e6cc3e63fd862fd442f1"
        ],
        [
            "exact (proj2 (cstrategy_semantic_preservation _ _ H)).",
            "VernacExtend",
            "b46cefda4c44530cc475be877f7b43dd2973daa2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem transf_c_program_correct: forall p tp, transf_c_program p = OK tp -> backward_simulation (Csem.semantics p) (Asm.semantics tp).",
            "VernacStartTheoremProof",
            "57e8e72db0564100a4e05cdc2be50ee6443b1024"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply c_semantic_preservation.",
            "VernacExtend",
            "a5fe02b8130b7baba4c7385654e61b70f9ac6544"
        ],
        [
            "apply transf_c_program_match; auto.",
            "VernacExtend",
            "4c1287ded282b1352f32c1fdac601bd94a0d7586"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem separate_transf_c_program_correct: forall c_units asm_units c_program, nlist_forall2 (fun cu tcu => transf_c_program cu = OK tcu) c_units asm_units -> link_list c_units = Some c_program -> exists asm_program, link_list asm_units = Some asm_program /\\ backward_simulation (Csem.semantics c_program) (Asm.semantics asm_program).",
            "VernacStartTheoremProof",
            "9b578342b5334827caab729ce587006b85b70c20"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (nlist_forall2 match_prog c_units asm_units).",
            "VernacExtend",
            "74103b92f012f622026a9f08c566b110434e2d5b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "eapply nlist_forall2_imply.",
            "VernacExtend",
            "ad499bcb5bb8a78e2198d355aa3afbc465bf5fb8"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "simpl; intros.",
            "VernacExtend",
            "429a59199da524088af55673600740ccc58db31e"
        ],
        [
            "apply transf_c_program_match; auto.",
            "VernacExtend",
            "4c1287ded282b1352f32c1fdac601bd94a0d7586"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (exists asm_program, link_list asm_units = Some asm_program /\\ match_prog c_program asm_program).",
            "VernacExtend",
            "7bad9025d0486e724c530c05faea1c15de32f15f"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "eapply link_list_compose_passes; eauto.",
            "VernacExtend",
            "4aedbe48791c39e578ddb6509b97d17881468a3b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct H2 as (asm_program & P & Q).",
            "VernacExtend",
            "11cd8e8fad8c9ecc0b7a93d81de2016ac56dc0d2"
        ],
        [
            "exists asm_program; split; auto.",
            "VernacExtend",
            "18d3618fd387cfbf742f627d206847a40ec27fc1"
        ],
        [
            "apply c_semantic_preservation; auto.",
            "VernacExtend",
            "96ec1b5425a658459ef9f2d6dacb8fe19c0f5a4d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "print_identity",
            "line_nb": 75,
            "steps": [
                {
                    "command": [
                        "intros; unfold print.",
                        "VernacExtend",
                        "052839ba3abd28b76a47c65d9504c688a0b174c1"
                    ]
                },
                {
                    "command": [
                        "destruct (printer prog); auto.",
                        "VernacExtend",
                        "d495540a5ee265eca260456a72c52d95527e4b3f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compose_print_identity",
            "line_nb": 79,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct x; simpl.",
                        "VernacExtend",
                        "b0c3c03e2d0a8fa13c533c8a79c2c6b3067d60db"
                    ]
                },
                {
                    "command": [
                        "rewrite print_identity.",
                        "VernacExtend",
                        "dbe944c3703bb7932384f76131487ae9fea6f9fd"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "total_if_match",
            "line_nb": 87,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold match_if, total_if.",
                        "VernacExtend",
                        "bcb86e8bbe228e508ecfd75c5c4e085c34a6f72c"
                    ]
                },
                {
                    "command": [
                        "destruct (flag tt); auto.",
                        "VernacExtend",
                        "a29c9b30c3daf891336451f12ef56ab0aca22ab5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partial_if_match",
            "line_nb": 92,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold match_if, partial_if in *.",
                        "VernacExtend",
                        "e32a1c449acf6c33097142a5947cc1b3db9abfc6"
                    ]
                },
                {
                    "command": [
                        "destruct (flag tt).",
                        "VernacExtend",
                        "1891b70235012a87cb4b88d190457b63eb723f69"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "TransfIfLink",
            "line_nb": 99,
            "steps": [
                {
                    "command": [
                        "unfold match_if.",
                        "VernacExtend",
                        "ed5bb183d0ae7e1b391f867fe9953f5f25c3f421"
                    ]
                },
                {
                    "command": [
                        "destruct (flag tt).",
                        "VernacExtend",
                        "1891b70235012a87cb4b88d190457b63eb723f69"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "subst tp1 tp2.",
                        "VernacExtend",
                        "7d1427d8e548927a55c8eb20b1211771396f25c3"
                    ]
                },
                {
                    "command": [
                        "exists p; auto.",
                        "VernacExtend",
                        "ce43f93b5525ba4b412c7576bb2db79216326ab5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "transf_c_program_match",
            "line_nb": 112,
            "steps": [
                {
                    "command": [
                        "intros p tp T.",
                        "VernacExtend",
                        "2203fb3232736a0f42df0843cb047e30e531ba7a"
                    ]
                },
                {
                    "command": [
                        "unfold transf_c_program, time in T.",
                        "VernacExtend",
                        "a1abbc2173e11f58ec4574f3a4dd5335a8024d86"
                    ]
                },
                {
                    "command": [
                        "simpl in T.",
                        "VernacExtend",
                        "48eadae58ea00ccbc5df79f2990244482ec764e2"
                    ]
                },
                {
                    "command": [
                        "destruct (SimplExpr.transl_program p) as [p1|e] eqn:P1; simpl in T; try discriminate.",
                        "VernacExtend",
                        "9ef95bfa51c1fe1ea6ce33cc30511a874e1de552"
                    ]
                },
                {
                    "command": [
                        "unfold transf_clight_program, time in T.",
                        "VernacExtend",
                        "f7828cd1611d0d56e0f351ab2b3704927d476952"
                    ]
                },
                {
                    "command": [
                        "rewrite ! compose_print_identity in T.",
                        "VernacExtend",
                        "1846a9866a46308ee76a726bfee1e9d8df75fbbd"
                    ]
                },
                {
                    "command": [
                        "simpl in T.",
                        "VernacExtend",
                        "48eadae58ea00ccbc5df79f2990244482ec764e2"
                    ]
                },
                {
                    "command": [
                        "destruct (SimplLocals.transf_program p1) as [p2|e] eqn:P2; simpl in T; try discriminate.",
                        "VernacExtend",
                        "77b357321593ba8f19b1ff8e6072d55ee2e5dbb0"
                    ]
                },
                {
                    "command": [
                        "destruct (Cshmgen.transl_program p2) as [p3|e] eqn:P3; simpl in T; try discriminate.",
                        "VernacExtend",
                        "be29d9e52cc8e3bc508df77aa5e97874fa72bef7"
                    ]
                },
                {
                    "command": [
                        "destruct (Cminorgen.transl_program p3) as [p4|e] eqn:P4; simpl in T; try discriminate.",
                        "VernacExtend",
                        "475c3f28d05974dd949839c6a48195239147969d"
                    ]
                },
                {
                    "command": [
                        "unfold transf_cminor_program, time in T.",
                        "VernacExtend",
                        "0b7f13d3d7e6fb51782c5ae71922e8a6fb623378"
                    ]
                },
                {
                    "command": [
                        "rewrite ! compose_print_identity in T.",
                        "VernacExtend",
                        "1846a9866a46308ee76a726bfee1e9d8df75fbbd"
                    ]
                },
                {
                    "command": [
                        "simpl in T.",
                        "VernacExtend",
                        "48eadae58ea00ccbc5df79f2990244482ec764e2"
                    ]
                },
                {
                    "command": [
                        "destruct (Selection.sel_program p4) as [p5|e] eqn:P5; simpl in T; try discriminate.",
                        "VernacExtend",
                        "5d6395508cbb3e310cb11e72615a94fdfcaedc4d"
                    ]
                },
                {
                    "command": [
                        "destruct (RTLgen.transl_program p5) as [p6|e] eqn:P6; simpl in T; try discriminate.",
                        "VernacExtend",
                        "7c564de520caec1347fd7623979ea1100d12c8d7"
                    ]
                },
                {
                    "command": [
                        "unfold transf_rtl_program, time in T.",
                        "VernacExtend",
                        "26314dc0250b9d946c3d6392509f7ba99a391712"
                    ]
                },
                {
                    "command": [
                        "rewrite ! compose_print_identity in T.",
                        "VernacExtend",
                        "1846a9866a46308ee76a726bfee1e9d8df75fbbd"
                    ]
                },
                {
                    "command": [
                        "simpl in T.",
                        "VernacExtend",
                        "48eadae58ea00ccbc5df79f2990244482ec764e2"
                    ]
                },
                {
                    "command": [
                        "set (p7 := total_if optim_tailcalls Tailcall.transf_program p6) in *.",
                        "VernacExtend",
                        "2b59bb0ddd58a8869dfa1bc72fc22ef36e047e05"
                    ]
                },
                {
                    "command": [
                        "destruct (Inlining.transf_program p7) as [p8|e] eqn:P8; simpl in T; try discriminate.",
                        "VernacExtend",
                        "11f0d708da410c005ae1a6073958eaca2fd6a8ae"
                    ]
                },
                {
                    "command": [
                        "set (p9 := Renumber.transf_program p8) in *.",
                        "VernacExtend",
                        "ab77b5d00a20b2bb19aa717ecbd22044c035b8db"
                    ]
                },
                {
                    "command": [
                        "set (p10 := total_if optim_constprop Constprop.transf_program p9) in *.",
                        "VernacExtend",
                        "1c9173f432c12b1ce6d85c1de3ff66d96e1c81af"
                    ]
                },
                {
                    "command": [
                        "set (p11 := total_if optim_constprop Renumber.transf_program p10) in *.",
                        "VernacExtend",
                        "ec896f5720f5fbeac88abc17e9bab043dbe3019a"
                    ]
                },
                {
                    "command": [
                        "destruct (partial_if optim_CSE CSE.transf_program p11) as [p12|e] eqn:P12; simpl in T; try discriminate.",
                        "VernacExtend",
                        "477e32b9c2c6f508cd3d43a321080b441462a635"
                    ]
                },
                {
                    "command": [
                        "destruct (partial_if optim_redundancy Deadcode.transf_program p12) as [p13|e] eqn:P13; simpl in T; try discriminate.",
                        "VernacExtend",
                        "b84a2d47e43fdabf78d9df5f28efe0ef01dde622"
                    ]
                },
                {
                    "command": [
                        "destruct (Unusedglob.transform_program p13) as [p14|e] eqn:P14; simpl in T; try discriminate.",
                        "VernacExtend",
                        "0fa37dd3d69082da60e759a1f65079bb19bd5a2a"
                    ]
                },
                {
                    "command": [
                        "destruct (Allocation.transf_program p14) as [p15|e] eqn:P15; simpl in T; try discriminate.",
                        "VernacExtend",
                        "a29fc325688fa0e1668720b13209fd6c2a03338a"
                    ]
                },
                {
                    "command": [
                        "set (p16 := Tunneling.tunnel_program p15) in *.",
                        "VernacExtend",
                        "945ce01d80f2d25555e2c91c0c81ac464a7be37b"
                    ]
                },
                {
                    "command": [
                        "destruct (Linearize.transf_program p16) as [p17|e] eqn:P17; simpl in T; try discriminate.",
                        "VernacExtend",
                        "c4a96a1f8bae00c2da771054e033e80342398ecf"
                    ]
                },
                {
                    "command": [
                        "set (p18 := CleanupLabels.transf_program p17) in *.",
                        "VernacExtend",
                        "c1cd9d2928747434d0b8cee82c533d155d5c89f5"
                    ]
                },
                {
                    "command": [
                        "destruct (partial_if debug Debugvar.transf_program p18) as [p19|e] eqn:P19; simpl in T; try discriminate.",
                        "VernacExtend",
                        "684dc02359b9a6567278d2876222cbb178195566"
                    ]
                },
                {
                    "command": [
                        "destruct (Stacking.transf_program p19) as [p20|e] eqn:P20; simpl in T; try discriminate.",
                        "VernacExtend",
                        "93edf625cb52a0639109cfeb7d57a8cce4cbb9f3"
                    ]
                },
                {
                    "command": [
                        "unfold match_prog; simpl.",
                        "VernacExtend",
                        "2bcb67ee9aff42f8cb5d9e99b17e5e52119b11c8"
                    ]
                },
                {
                    "command": [
                        "exists p1; split.",
                        "VernacExtend",
                        "27f1da8d7ffeb10b89af26e98cbfd3bf4bf0be34"
                    ]
                },
                {
                    "command": [
                        "apply SimplExprproof.transf_program_match; auto.",
                        "VernacExtend",
                        "238424676b0ce3c4d2b212f2fa7e051a1234f397"
                    ]
                },
                {
                    "command": [
                        "exists p2; split.",
                        "VernacExtend",
                        "971980dbf4de8553d53f81f929a283eb7ed088f2"
                    ]
                },
                {
                    "command": [
                        "apply SimplLocalsproof.match_transf_program; auto.",
                        "VernacExtend",
                        "91a6226fd6ba1a3b76f0871c42a49bb55f49922a"
                    ]
                },
                {
                    "command": [
                        "exists p3; split.",
                        "VernacExtend",
                        "7d215b1a46e46bc4d3e6b8582c4640c281e871cc"
                    ]
                },
                {
                    "command": [
                        "apply Cshmgenproof.transf_program_match; auto.",
                        "VernacExtend",
                        "e3e45052d30f243380cad7f6284afcc72a219a89"
                    ]
                },
                {
                    "command": [
                        "exists p4; split.",
                        "VernacExtend",
                        "bb3ca97a0c33299c99eb33c95eba5f588a51140f"
                    ]
                },
                {
                    "command": [
                        "apply Cminorgenproof.transf_program_match; auto.",
                        "VernacExtend",
                        "46b4f8f2be8ad556aa684537bbc8c9a609f96ed3"
                    ]
                },
                {
                    "command": [
                        "exists p5; split.",
                        "VernacExtend",
                        "ff2c3b117df9dffa3e3903b7690f1cb884dd2b22"
                    ]
                },
                {
                    "command": [
                        "apply Selectionproof.transf_program_match; auto.",
                        "VernacExtend",
                        "189a846922b83b7077fe0aab656461f6701e9e35"
                    ]
                },
                {
                    "command": [
                        "exists p6; split.",
                        "VernacExtend",
                        "40439fb2abebc09fa595b8e973b4fc1dce78ff8b"
                    ]
                },
                {
                    "command": [
                        "apply RTLgenproof.transf_program_match; auto.",
                        "VernacExtend",
                        "c4c88df2e950246fc0447cd9699d09bc97c9357a"
                    ]
                },
                {
                    "command": [
                        "exists p7; split.",
                        "VernacExtend",
                        "8a5340effd78685c6d060a3a68096a40251adbed"
                    ]
                },
                {
                    "command": [
                        "apply total_if_match.",
                        "VernacExtend",
                        "f0b36d9895d2fb7f297da723fb4ea012530d97d5"
                    ]
                },
                {
                    "command": [
                        "apply Tailcallproof.transf_program_match.",
                        "VernacExtend",
                        "c72673214767a6a3a8f967d6305ce5d05b278dae"
                    ]
                },
                {
                    "command": [
                        "exists p8; split.",
                        "VernacExtend",
                        "0f44e058e22099a44c25c0711f7f86cf88202ce9"
                    ]
                },
                {
                    "command": [
                        "apply Inliningproof.transf_program_match; auto.",
                        "VernacExtend",
                        "9585cca6b63cfc6576bb9dfb4b0b38068eea3656"
                    ]
                },
                {
                    "command": [
                        "exists p9; split.",
                        "VernacExtend",
                        "8ad6be738b33575430df2cb61e282601e4c8d0d7"
                    ]
                },
                {
                    "command": [
                        "apply Renumberproof.transf_program_match; auto.",
                        "VernacExtend",
                        "4a0aab17dec10a3b3e5286603be263dd3ef286e5"
                    ]
                },
                {
                    "command": [
                        "exists p10; split.",
                        "VernacExtend",
                        "d1e672733ac0143b55d648b327c6653852b30c57"
                    ]
                },
                {
                    "command": [
                        "apply total_if_match.",
                        "VernacExtend",
                        "f0b36d9895d2fb7f297da723fb4ea012530d97d5"
                    ]
                },
                {
                    "command": [
                        "apply Constpropproof.transf_program_match.",
                        "VernacExtend",
                        "8a1c995c24a59e3093b740e50f5ad12becca5c26"
                    ]
                },
                {
                    "command": [
                        "exists p11; split.",
                        "VernacExtend",
                        "685bf93b04c141840ebee67dd859757ea03f77b1"
                    ]
                },
                {
                    "command": [
                        "apply total_if_match.",
                        "VernacExtend",
                        "f0b36d9895d2fb7f297da723fb4ea012530d97d5"
                    ]
                },
                {
                    "command": [
                        "apply Renumberproof.transf_program_match.",
                        "VernacExtend",
                        "9de037ce5b2962bf4fe409ac734eb011f3a5a086"
                    ]
                },
                {
                    "command": [
                        "exists p12; split.",
                        "VernacExtend",
                        "efa8d77f57a0ca3eb8cb7b35ebe042bda45acf26"
                    ]
                },
                {
                    "command": [
                        "eapply partial_if_match; eauto.",
                        "VernacExtend",
                        "46f13d10b390828f4e764e6817eb68e0bf88bff3"
                    ]
                },
                {
                    "command": [
                        "apply CSEproof.transf_program_match.",
                        "VernacExtend",
                        "7958b72a68a6ed2024a22043349125f9aa0b7bb6"
                    ]
                },
                {
                    "command": [
                        "exists p13; split.",
                        "VernacExtend",
                        "d1206d2a0f0d51ae931cd60e4eef877c5d1aae13"
                    ]
                },
                {
                    "command": [
                        "eapply partial_if_match; eauto.",
                        "VernacExtend",
                        "46f13d10b390828f4e764e6817eb68e0bf88bff3"
                    ]
                },
                {
                    "command": [
                        "apply Deadcodeproof.transf_program_match.",
                        "VernacExtend",
                        "c8fa5ecabb6316dbd03ed1c84b8b7b295b07098d"
                    ]
                },
                {
                    "command": [
                        "exists p14; split.",
                        "VernacExtend",
                        "40a283b4eb729814c6f678394b3adf5fb482e15b"
                    ]
                },
                {
                    "command": [
                        "apply Unusedglobproof.transf_program_match; auto.",
                        "VernacExtend",
                        "3f5939842ffb7b4c2ffb77f448ef83457d799b24"
                    ]
                },
                {
                    "command": [
                        "exists p15; split.",
                        "VernacExtend",
                        "faa9e3ce31b7005674ab1266bf900bb99df8762d"
                    ]
                },
                {
                    "command": [
                        "apply Allocproof.transf_program_match; auto.",
                        "VernacExtend",
                        "58b9a40f55e4e0f4931bf0d51554a0b347193055"
                    ]
                },
                {
                    "command": [
                        "exists p16; split.",
                        "VernacExtend",
                        "77a971f960857a9615960f79ed4716ea1d631322"
                    ]
                },
                {
                    "command": [
                        "apply Tunnelingproof.transf_program_match.",
                        "VernacExtend",
                        "a4882e8a35e07c872ec36182c691596dffc6dc59"
                    ]
                },
                {
                    "command": [
                        "exists p17; split.",
                        "VernacExtend",
                        "87ff84fd75833590277a7d340fa6974f5a7a749e"
                    ]
                },
                {
                    "command": [
                        "apply Linearizeproof.transf_program_match; auto.",
                        "VernacExtend",
                        "90f71ec5cc8dd58cbaca2b29791de684d2b3f5d1"
                    ]
                },
                {
                    "command": [
                        "exists p18; split.",
                        "VernacExtend",
                        "d8e654bcb7271eebf42185c6257014cdd3df7736"
                    ]
                },
                {
                    "command": [
                        "apply CleanupLabelsproof.transf_program_match; auto.",
                        "VernacExtend",
                        "7462662e6d340b82d41c5f8d45d4f8b51107be73"
                    ]
                },
                {
                    "command": [
                        "exists p19; split.",
                        "VernacExtend",
                        "abfbcff8cd687aef1e87cb7c79e6f4d059ad2107"
                    ]
                },
                {
                    "command": [
                        "eapply partial_if_match; eauto.",
                        "VernacExtend",
                        "46f13d10b390828f4e764e6817eb68e0bf88bff3"
                    ]
                },
                {
                    "command": [
                        "apply Debugvarproof.transf_program_match.",
                        "VernacExtend",
                        "72496d355b276911a6fbe0ae0638d6c87ec9740b"
                    ]
                },
                {
                    "command": [
                        "exists p20; split.",
                        "VernacExtend",
                        "9cc6e532488e87a6b6bb595234e3ad2cfad97e6e"
                    ]
                },
                {
                    "command": [
                        "apply Stackingproof.transf_program_match; auto.",
                        "VernacExtend",
                        "6df66b328b5886aba67c274859f968a160517aa7"
                    ]
                },
                {
                    "command": [
                        "exists tp; split.",
                        "VernacExtend",
                        "fe4b9d3d9e7338db11e7aee4df6841c33cae1809"
                    ]
                },
                {
                    "command": [
                        "apply Asmgenproof.transf_program_match; auto.",
                        "VernacExtend",
                        "a47703a778a174072fdb66b5e279fe26e9989ddb"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "forward_simulation_identity",
            "line_nb": 196,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply forward_simulation_step with (fun s1 s2 => s2 = s1); intros.",
                        "VernacExtend",
                        "05e67076be707ff9dcb1022be13b214371d205f1"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exists s1; auto.",
                        "VernacExtend",
                        "b635d662d92c9a6dd854d136739e1523825b06df"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "subst s2; auto.",
                        "VernacExtend",
                        "5ad96f8ec1db1d3025ea0347e1998da1365298ed"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "subst s2.",
                        "VernacExtend",
                        "a6e5922b7eaedb85c3b7105d5d5e7d370aa9f04c"
                    ]
                },
                {
                    "command": [
                        "exists s1'; auto.",
                        "VernacExtend",
                        "dafe3bcd5039e1be67b5351e364d2c47923237a2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "match_if_simulation",
            "line_nb": 209,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold match_if in *.",
                        "VernacExtend",
                        "806c2e9ba2b4f838b5c844fc66e811db3e747054"
                    ]
                },
                {
                    "command": [
                        "destruct (flag tt).",
                        "VernacExtend",
                        "1891b70235012a87cb4b88d190457b63eb723f69"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "apply forward_simulation_identity.",
                        "VernacExtend",
                        "a22a27570ba17ae0ddae0ef6c69bd421b6c1585a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "c_semantic_preservation",
            "line_nb": 292,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply compose_backward_simulation with (atomic (Cstrategy.semantics p)).",
                        "VernacExtend",
                        "66d345750c7d1555e9e45f56b3188c803ae21b9f"
                    ]
                },
                {
                    "command": [
                        "eapply sd_traces; eapply Asm.semantics_determinate.",
                        "VernacExtend",
                        "111861a5f2ba5068bd04755cdd9e23add2e8d032"
                    ]
                },
                {
                    "command": [
                        "apply factor_backward_simulation.",
                        "VernacExtend",
                        "cb8d965ff2686c8414cdefd1e9c8ab901737a705"
                    ]
                },
                {
                    "command": [
                        "apply Cstrategy.strategy_simulation.",
                        "VernacExtend",
                        "c7de9c0128061d236c494bac7a9555324042535e"
                    ]
                },
                {
                    "command": [
                        "apply Csem.semantics_single_events.",
                        "VernacExtend",
                        "0c40bdd2b356b86c7f75448de015f7ccf62b02f7"
                    ]
                },
                {
                    "command": [
                        "eapply ssr_well_behaved; eapply Cstrategy.semantics_strongly_receptive.",
                        "VernacExtend",
                        "a381486492b7478007e6e6cc3e63fd862fd442f1"
                    ]
                },
                {
                    "command": [
                        "exact (proj2 (cstrategy_semantic_preservation _ _ H)).",
                        "VernacExtend",
                        "b46cefda4c44530cc475be877f7b43dd2973daa2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "transf_c_program_correct",
            "line_nb": 302,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply c_semantic_preservation.",
                        "VernacExtend",
                        "a5fe02b8130b7baba4c7385654e61b70f9ac6544"
                    ]
                },
                {
                    "command": [
                        "apply transf_c_program_match; auto.",
                        "VernacExtend",
                        "4c1287ded282b1352f32c1fdac601bd94a0d7586"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}