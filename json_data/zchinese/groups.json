{
    "filename": "groups.v",
    "coq_project": "zchinese",
    "vernac_cmds": [
        [
            "Require Export Lci.",
            "VernacRequire",
            "eb7507a237f196fb88ae818a186d576c6e8b9110"
        ],
        [
            "Require Export misc.",
            "VernacRequire",
            "c61f9258a5a7d418c12369fa470e92f8b401827a"
        ],
        [
            "Section groups.",
            "VernacBeginSection",
            "678c3e9252da6fc9286d3b5c3aac07b668690993"
        ],
        [
            "Variable S : Set.",
            "VernacAssumption",
            "2a0c7ebd77cf024747eefc8ea669e9e85a92c160"
        ],
        [
            "Variable G : S -> Prop.",
            "VernacAssumption",
            "09529122cf4b85864ed42453ee013b41fabbb27f"
        ],
        [
            "Variable Add : S -> S -> S.",
            "VernacAssumption",
            "7de290b45717e63dd496c32b4b0dd4408b1f5718"
        ],
        [
            "Variable O : S.",
            "VernacAssumption",
            "efd88aac476d695ed0680cde7bd2f81323be9a6c"
        ],
        [
            "Variable Opp : S -> S.",
            "VernacAssumption",
            "7d8e43918cbeee944df7e5f310be3f9730e5de44"
        ],
        [
            "Definition is_group := intern S G Add /\\ associativity S Add /\\ neutral S G Add O /\\ opposite S G Add O Opp.",
            "VernacDefinition",
            "6b22404bc87edb05b925b14f58bf3b030b5c0ef9"
        ],
        [
            "Lemma regular_l : is_group -> forall y z : S, G y -> G z -> forall x : S, G x -> Add x y = Add x z -> y = z.",
            "VernacStartTheoremProof",
            "cf6dfbf826d15e78e4b1c9345c650a1022f6fc95"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim H; intros; elim H5; intros; elim H7; intros; elim H8; intros.",
            "VernacExtend",
            "1723a5dfc88956a44f79e928cfdc1cfe84cc24ba"
        ],
        [
            "clear H4 H5 H7 H10.",
            "VernacExtend",
            "d3aadd44a7fb4a82637a85d2303f4b2b99417308"
        ],
        [
            "elim (H11 y H0); intros; elim H5; clear H4 H5.",
            "VernacExtend",
            "d4a236a3dbccf1db531618c99addc879c58d8c4e"
        ],
        [
            "elim (H11 z H1); intros; elim H5; clear H4 H5 H8 H11.",
            "VernacExtend",
            "6d07acbb3d974564847231c3e66ac505e7fbebc4"
        ],
        [
            "elim (H9 x H2); intros; elim H5; intros; elim H8; intros; elim H11.",
            "VernacExtend",
            "b5e8ceb22842f0efd3afc8c07de7fd242aee1ac2"
        ],
        [
            "clear H4 H5 H7 H8 H9 H10 H11.",
            "VernacExtend",
            "8cc0aa192530630931718c22cad31ddec06f5d0f"
        ],
        [
            "elim (H6 (Opp x) x y); elim (H6 (Opp x) x z).",
            "VernacExtend",
            "c40db271655743bbd8f915d90dbb872c7b80e6d4"
        ],
        [
            "elim H3; reflexivity.",
            "VernacExtend",
            "33917b18e71def20c486658900fbb41e17ea717a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_add : commutativity S Add -> associativity S Add -> forall x1 y1 x2 y2 : S, Add (Add x1 y1) (Add x2 y2) = Add (Add x1 x2) (Add y1 y2).",
            "VernacStartTheoremProof",
            "8635d94f14b4fe22d0514eda09c79b1e041465ad"
        ],
        [
            "intros com ass x1 y1 x2 y2.",
            "VernacExtend",
            "9b14467c0237ba25a1a486b65c531a100e1bc75f"
        ],
        [
            "rewrite (ass (Add x1 y1) x2 y2); elim (ass x1 y1 x2); elim (com x2 y1).",
            "VernacExtend",
            "a885d160444b01020d9c7c3428af89b658fb8909"
        ],
        [
            "rewrite (ass x1 x2 y1); elim (ass (Add x1 x2) y1 y2); reflexivity.",
            "VernacExtend",
            "2870423ad582a28d091098d00ae818b1a5467587"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma opp_unicity : is_group -> forall x y : S, is_opposite S G Add O x y -> y = Opp x.",
            "VernacStartTheoremProof",
            "005f35b719d526981dbadb5766d552d72c8aee2c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim H0; intros; elim H2; intros.",
            "VernacExtend",
            "2c9224054a820c992dd0c49f858d4a51925a1c85"
        ],
        [
            "elim H; intros; elim H6; intros; elim H8; intros; elim H9; intros.",
            "VernacExtend",
            "83701c8a862353752e67ff4379dc26ec81e2b1d2"
        ],
        [
            "elim (H12 y H3); intros; elim H14; clear H H2 H3 H5 H6 H8 H11 H12 H13 H14.",
            "VernacExtend",
            "b6b36bca6a6bb53ea475f50c780876eb6ac9568c"
        ],
        [
            "elim (H10 x H1); intros; elim H2; intros; elim H5; intros; elim H8.",
            "VernacExtend",
            "6dedfded5352f0e246f443998d547d9f1d9d795a"
        ],
        [
            "clear H H1 H2 H5 H6 H8 H10.",
            "VernacExtend",
            "fd0d10454a4411e7e3add3ef34940034784d81c1"
        ],
        [
            "elim (H7 (Opp x) x y).",
            "VernacExtend",
            "63440bb4b760b5a4adc08e5543a6b31f8c789aa8"
        ],
        [
            "elim H4; intros; rewrite H; clear H H0 H1 H4 H7.",
            "VernacExtend",
            "7421617ce1775638142cfa9a5b6fdd810ef814db"
        ],
        [
            "elim H9; intros; elim (H0 (Opp x) H3); intros.",
            "VernacExtend",
            "e2834f6f63c29e14f0ca5df0dcf80dfb8b1df02a"
        ],
        [
            "exact H1.",
            "VernacExtend",
            "c03ab82d1e411e1dcd211c59917a4946e039be00"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma opp_opp : is_group -> forall x : S, G x -> x = Opp (Opp x).",
            "VernacStartTheoremProof",
            "832bb1cd0055899843c885a99141cb05f02da5fe"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (opp_unicity H (Opp x) x).",
            "VernacExtend",
            "414d6e1873b3edac2a5d899109e14b5397941beb"
        ],
        [
            "unfold is_opposite in |- *; split.",
            "VernacExtend",
            "860c691ac1c57e875be8f1ba19a3d932671f5dc2"
        ],
        [
            "elim H; intros; elim H2; intros; elim H4; intros; elim (H6 x H0); intros.",
            "VernacExtend",
            "1d6fc0549b8632f1283af2d28e9631d5179f761a"
        ],
        [
            "elim H8; trivial.",
            "VernacExtend",
            "4cc3fbfaf30e2368b9e2aab0fb4fe50b596b4c97"
        ],
        [
            "elim H; intros; elim H2; intros; elim H4; intros; elim (H6 x H0); intros.",
            "VernacExtend",
            "1d6fc0549b8632f1283af2d28e9631d5179f761a"
        ],
        [
            "elim H8; intros; elim H10; auto.",
            "VernacExtend",
            "74e25428953516dca1745c8a64dfc72f008e4473"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma opp_add : is_group -> commutativity S Add -> forall x y : S, G x -> G y -> Opp (Add x y) = Add (Opp x) (Opp y).",
            "VernacStartTheoremProof",
            "5478aa5451a97f8dbe9a7363a7ea3f71e47ae992"
        ],
        [
            "intros; symmetry in |- *; apply (opp_unicity H (Add x y) (Add (Opp x) (Opp y))).",
            "VernacExtend",
            "7247d1fbdafa7656c7f656044de7c607f425c52f"
        ],
        [
            "unfold is_opposite in |- *; split.",
            "VernacExtend",
            "860c691ac1c57e875be8f1ba19a3d932671f5dc2"
        ],
        [
            "elim H; intros; apply (H3 x y H1 H2).",
            "VernacExtend",
            "3589941721cb3b211849e9ab37d773bbda3ea1a8"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "elim H; intros; elim H4; intros; elim H6; intros; clear H4 H5 H6 H7.",
            "VernacExtend",
            "28c6391e0eaacb4103b283b758a8ddefef077335"
        ],
        [
            "elim (H8 x H1); intros; elim H5; intros; clear H4 H5 H7.",
            "VernacExtend",
            "de8b04b283552949207612a33c53ceee253184bf"
        ],
        [
            "elim (H8 y H2); intros; elim H5; intros.",
            "VernacExtend",
            "e2aabe55517e5658a702e2c93f08a91478183d55"
        ],
        [
            "apply (H3 (Opp x) (Opp y) H6 H7).",
            "VernacExtend",
            "b221f08f6ea141c3d415ae9e7c4ad5171923219d"
        ],
        [
            "elim H; intros; elim H4; intros; clear H3 H4 H6.",
            "VernacExtend",
            "d20f0253822dff418086b8ec941227c0bfff5276"
        ],
        [
            "rewrite (add_add H0 H5 x y (Opp x) (Opp y)).",
            "VernacExtend",
            "a0a707e8f3d057780e8f11600c1a4a6ad7366dec"
        ],
        [
            "rewrite (add_add H0 H5 (Opp x) (Opp y) x y); clear H5.",
            "VernacExtend",
            "c8bae1103db870d8dd9e468de980742285573bb8"
        ],
        [
            "elim H; intros; elim H4; intros; elim H6; intros.",
            "VernacExtend",
            "3258694e89df0873e79ad11f65b70f270a760034"
        ],
        [
            "elim (H8 x H1); intros; elim H10; intros; elim H12; intros.",
            "VernacExtend",
            "3f1f430361e89569ffe628af3f389ed5aa272f4b"
        ],
        [
            "rewrite H13; rewrite H14.",
            "VernacExtend",
            "e0200730f055a6ef889a70b514b7c973037776af"
        ],
        [
            "clear H H0 H1 H3 H4 H5 H6 H9 H10 H11 H12 H13 H14.",
            "VernacExtend",
            "7e3b26681f78752f096f589e8a94621ceab59207"
        ],
        [
            "elim (H8 y H2); intros; elim H0; intros; elim H3; intros.",
            "VernacExtend",
            "37680f039e09dec872d68d02c89815e5bafc040c"
        ],
        [
            "rewrite H4; rewrite H5.",
            "VernacExtend",
            "0e98b8ff154a2563fe819ff2a23411a116468bcf"
        ],
        [
            "clear H H0 H1 H2 H3 H4 H5 H8.",
            "VernacExtend",
            "59e26b8adfbbe715ec95085b438185ec6177bb33"
        ],
        [
            "elim H7; intros; exact (H0 O H).",
            "VernacExtend",
            "33fb0ba02144406779a28c6aa46ab2cd4f6e4ef3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma opp_neutral : is_group -> Opp O = O.",
            "VernacStartTheoremProof",
            "fc6641dd1da29e5db90aebbefac6f694f4997877"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim (opp_unicity H O O).",
            "VernacExtend",
            "1f306122d7775ed61dbc160b450c18d4e580796e"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "unfold is_opposite in |- *.",
            "VernacExtend",
            "bb098060fffdcb3dccf6169343fa5a97e9c6dd04"
        ],
        [
            "elim H; intros; elim H1; intros; elim H3; intros; elim H4; intros.",
            "VernacExtend",
            "5b06d62beed1670f229b994c7b6f8f0e69b0cdd9"
        ],
        [
            "elim (H7 O H6); auto.",
            "VernacExtend",
            "f118dc02cdc35c9e7c98d710a6e76bf8856b9101"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End groups.",
            "VernacEndSegment",
            "d0981badd8ebdb58dd205318554fcc6f638adc50"
        ]
    ],
    "proofs": [
        {
            "name": "regular_l",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim H; intros; elim H5; intros; elim H7; intros; elim H8; intros.",
                        "VernacExtend",
                        "1723a5dfc88956a44f79e928cfdc1cfe84cc24ba"
                    ]
                },
                {
                    "command": [
                        "clear H4 H5 H7 H10.",
                        "VernacExtend",
                        "d3aadd44a7fb4a82637a85d2303f4b2b99417308"
                    ]
                },
                {
                    "command": [
                        "elim (H11 y H0); intros; elim H5; clear H4 H5.",
                        "VernacExtend",
                        "d4a236a3dbccf1db531618c99addc879c58d8c4e"
                    ]
                },
                {
                    "command": [
                        "elim (H11 z H1); intros; elim H5; clear H4 H5 H8 H11.",
                        "VernacExtend",
                        "6d07acbb3d974564847231c3e66ac505e7fbebc4"
                    ]
                },
                {
                    "command": [
                        "elim (H9 x H2); intros; elim H5; intros; elim H8; intros; elim H11.",
                        "VernacExtend",
                        "b5e8ceb22842f0efd3afc8c07de7fd242aee1ac2"
                    ]
                },
                {
                    "command": [
                        "clear H4 H5 H7 H8 H9 H10 H11.",
                        "VernacExtend",
                        "8cc0aa192530630931718c22cad31ddec06f5d0f"
                    ]
                },
                {
                    "command": [
                        "elim (H6 (Opp x) x y); elim (H6 (Opp x) x z).",
                        "VernacExtend",
                        "c40db271655743bbd8f915d90dbb872c7b80e6d4"
                    ]
                },
                {
                    "command": [
                        "elim H3; reflexivity.",
                        "VernacExtend",
                        "33917b18e71def20c486658900fbb41e17ea717a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_add",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "intros com ass x1 y1 x2 y2.",
                        "VernacExtend",
                        "9b14467c0237ba25a1a486b65c531a100e1bc75f"
                    ]
                },
                {
                    "command": [
                        "rewrite (ass (Add x1 y1) x2 y2); elim (ass x1 y1 x2); elim (com x2 y1).",
                        "VernacExtend",
                        "a885d160444b01020d9c7c3428af89b658fb8909"
                    ]
                },
                {
                    "command": [
                        "rewrite (ass x1 x2 y1); elim (ass (Add x1 x2) y1 y2); reflexivity.",
                        "VernacExtend",
                        "2870423ad582a28d091098d00ae818b1a5467587"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "opp_unicity",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim H0; intros; elim H2; intros.",
                        "VernacExtend",
                        "2c9224054a820c992dd0c49f858d4a51925a1c85"
                    ]
                },
                {
                    "command": [
                        "elim H; intros; elim H6; intros; elim H8; intros; elim H9; intros.",
                        "VernacExtend",
                        "83701c8a862353752e67ff4379dc26ec81e2b1d2"
                    ]
                },
                {
                    "command": [
                        "elim (H12 y H3); intros; elim H14; clear H H2 H3 H5 H6 H8 H11 H12 H13 H14.",
                        "VernacExtend",
                        "b6b36bca6a6bb53ea475f50c780876eb6ac9568c"
                    ]
                },
                {
                    "command": [
                        "elim (H10 x H1); intros; elim H2; intros; elim H5; intros; elim H8.",
                        "VernacExtend",
                        "6dedfded5352f0e246f443998d547d9f1d9d795a"
                    ]
                },
                {
                    "command": [
                        "clear H H1 H2 H5 H6 H8 H10.",
                        "VernacExtend",
                        "fd0d10454a4411e7e3add3ef34940034784d81c1"
                    ]
                },
                {
                    "command": [
                        "elim (H7 (Opp x) x y).",
                        "VernacExtend",
                        "63440bb4b760b5a4adc08e5543a6b31f8c789aa8"
                    ]
                },
                {
                    "command": [
                        "elim H4; intros; rewrite H; clear H H0 H1 H4 H7.",
                        "VernacExtend",
                        "7421617ce1775638142cfa9a5b6fdd810ef814db"
                    ]
                },
                {
                    "command": [
                        "elim H9; intros; elim (H0 (Opp x) H3); intros.",
                        "VernacExtend",
                        "e2834f6f63c29e14f0ca5df0dcf80dfb8b1df02a"
                    ]
                },
                {
                    "command": [
                        "exact H1.",
                        "VernacExtend",
                        "c03ab82d1e411e1dcd211c59917a4946e039be00"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "opp_opp",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (opp_unicity H (Opp x) x).",
                        "VernacExtend",
                        "414d6e1873b3edac2a5d899109e14b5397941beb"
                    ]
                },
                {
                    "command": [
                        "unfold is_opposite in |- *; split.",
                        "VernacExtend",
                        "860c691ac1c57e875be8f1ba19a3d932671f5dc2"
                    ]
                },
                {
                    "command": [
                        "elim H; intros; elim H2; intros; elim H4; intros; elim (H6 x H0); intros.",
                        "VernacExtend",
                        "1d6fc0549b8632f1283af2d28e9631d5179f761a"
                    ]
                },
                {
                    "command": [
                        "elim H8; trivial.",
                        "VernacExtend",
                        "4cc3fbfaf30e2368b9e2aab0fb4fe50b596b4c97"
                    ]
                },
                {
                    "command": [
                        "elim H; intros; elim H2; intros; elim H4; intros; elim (H6 x H0); intros.",
                        "VernacExtend",
                        "1d6fc0549b8632f1283af2d28e9631d5179f761a"
                    ]
                },
                {
                    "command": [
                        "elim H8; intros; elim H10; auto.",
                        "VernacExtend",
                        "74e25428953516dca1745c8a64dfc72f008e4473"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "opp_add",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "intros; symmetry in |- *; apply (opp_unicity H (Add x y) (Add (Opp x) (Opp y))).",
                        "VernacExtend",
                        "7247d1fbdafa7656c7f656044de7c607f425c52f"
                    ]
                },
                {
                    "command": [
                        "unfold is_opposite in |- *; split.",
                        "VernacExtend",
                        "860c691ac1c57e875be8f1ba19a3d932671f5dc2"
                    ]
                },
                {
                    "command": [
                        "elim H; intros; apply (H3 x y H1 H2).",
                        "VernacExtend",
                        "3589941721cb3b211849e9ab37d773bbda3ea1a8"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "elim H; intros; elim H4; intros; elim H6; intros; clear H4 H5 H6 H7.",
                        "VernacExtend",
                        "28c6391e0eaacb4103b283b758a8ddefef077335"
                    ]
                },
                {
                    "command": [
                        "elim (H8 x H1); intros; elim H5; intros; clear H4 H5 H7.",
                        "VernacExtend",
                        "de8b04b283552949207612a33c53ceee253184bf"
                    ]
                },
                {
                    "command": [
                        "elim (H8 y H2); intros; elim H5; intros.",
                        "VernacExtend",
                        "e2aabe55517e5658a702e2c93f08a91478183d55"
                    ]
                },
                {
                    "command": [
                        "apply (H3 (Opp x) (Opp y) H6 H7).",
                        "VernacExtend",
                        "b221f08f6ea141c3d415ae9e7c4ad5171923219d"
                    ]
                },
                {
                    "command": [
                        "elim H; intros; elim H4; intros; clear H3 H4 H6.",
                        "VernacExtend",
                        "d20f0253822dff418086b8ec941227c0bfff5276"
                    ]
                },
                {
                    "command": [
                        "rewrite (add_add H0 H5 x y (Opp x) (Opp y)).",
                        "VernacExtend",
                        "a0a707e8f3d057780e8f11600c1a4a6ad7366dec"
                    ]
                },
                {
                    "command": [
                        "rewrite (add_add H0 H5 (Opp x) (Opp y) x y); clear H5.",
                        "VernacExtend",
                        "c8bae1103db870d8dd9e468de980742285573bb8"
                    ]
                },
                {
                    "command": [
                        "elim H; intros; elim H4; intros; elim H6; intros.",
                        "VernacExtend",
                        "3258694e89df0873e79ad11f65b70f270a760034"
                    ]
                },
                {
                    "command": [
                        "elim (H8 x H1); intros; elim H10; intros; elim H12; intros.",
                        "VernacExtend",
                        "3f1f430361e89569ffe628af3f389ed5aa272f4b"
                    ]
                },
                {
                    "command": [
                        "rewrite H13; rewrite H14.",
                        "VernacExtend",
                        "e0200730f055a6ef889a70b514b7c973037776af"
                    ]
                },
                {
                    "command": [
                        "clear H H0 H1 H3 H4 H5 H6 H9 H10 H11 H12 H13 H14.",
                        "VernacExtend",
                        "7e3b26681f78752f096f589e8a94621ceab59207"
                    ]
                },
                {
                    "command": [
                        "elim (H8 y H2); intros; elim H0; intros; elim H3; intros.",
                        "VernacExtend",
                        "37680f039e09dec872d68d02c89815e5bafc040c"
                    ]
                },
                {
                    "command": [
                        "rewrite H4; rewrite H5.",
                        "VernacExtend",
                        "0e98b8ff154a2563fe819ff2a23411a116468bcf"
                    ]
                },
                {
                    "command": [
                        "clear H H0 H1 H2 H3 H4 H5 H8.",
                        "VernacExtend",
                        "59e26b8adfbbe715ec95085b438185ec6177bb33"
                    ]
                },
                {
                    "command": [
                        "elim H7; intros; exact (H0 O H).",
                        "VernacExtend",
                        "33fb0ba02144406779a28c6aa46ab2cd4f6e4ef3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "opp_neutral",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim (opp_unicity H O O).",
                        "VernacExtend",
                        "1f306122d7775ed61dbc160b450c18d4e580796e"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "unfold is_opposite in |- *.",
                        "VernacExtend",
                        "bb098060fffdcb3dccf6169343fa5a97e9c6dd04"
                    ]
                },
                {
                    "command": [
                        "elim H; intros; elim H1; intros; elim H3; intros; elim H4; intros.",
                        "VernacExtend",
                        "5b06d62beed1670f229b994c7b6f8f0e69b0cdd9"
                    ]
                },
                {
                    "command": [
                        "elim (H7 O H6); auto.",
                        "VernacExtend",
                        "f118dc02cdc35c9e7c98d710a6e76bf8856b9101"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}