{
    "filename": "part1.v",
    "coq_project": "constructive-geometry",
    "vernac_cmds": [
        [
            "Require Import basis.",
            "VernacRequire",
            "f2442ce68e5f87d75900cc79a1467e93cfa98c26"
        ],
        [
            "Theorem Uniqueness_of_constructed_lines : forall (x : Segment) (l : Line), Incident (origin x) l -> Incident (extremity x) l -> EqLn l (ln x).",
            "VernacStartTheoremProof",
            "cf71a04a1a479bc514bd8483a86c9fada6b50e0e"
        ],
        [
            "intros x l.",
            "VernacExtend",
            "bdf45995f6572604d7a825809ff41ac166fcfaf0"
        ],
        [
            "generalize (inc_ln2 x); generalize (inc_ln1 x).",
            "VernacExtend",
            "eb1ddc253b48e597c5f2842d9d4dcb970f21cfbc"
        ],
        [
            "unfold Incident, EqLn, Negation in |- *.",
            "VernacExtend",
            "6ba38f11c91eb937434589bdb871494c4c77445b"
        ],
        [
            "intros H' H'0 H'1 H'2; red in |- *; intro H'3.",
            "VernacExtend",
            "040606274d58acfa7b59d6137ffbeb30b7d2ff7d"
        ],
        [
            "lapply (el_ax x l (ln x)); trivial.",
            "VernacExtend",
            "3ae7ea1ecd63cf45bb8d3beb42bed0ed0070f205"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Convergent_imp_distinct : forall l m : Line, ConLn l m -> DiLn l m.",
            "VernacStartTheoremProof",
            "efc4453a1c19201be595211c5f568267173e58e8"
        ],
        [
            "intros l m H'.",
            "VernacExtend",
            "a64f18dbcc8a8ae1ad483c8d622c7eab1963d06e"
        ],
        [
            "lapply (cmp_con_diln l m l); trivial.",
            "VernacExtend",
            "e555357f508a88b435654e8764b65cee816680a3"
        ],
        [
            "intro H'0; elim H'0; auto.",
            "VernacExtend",
            "d2e9e24ec16730a3bf0075e8033be502475a8f99"
        ],
        [
            "intro H'1; elim apart_con.",
            "VernacExtend",
            "3e8d8b1badbfa15cc0dcbf519810d44ad6f33800"
        ],
        [
            "intro H'2; elim (H'2 l); trivial.",
            "VernacExtend",
            "ca3bda0d02f291af220a273323367c4b550d253a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Convergent_imp_distinct.",
            "VernacHints",
            "0aea729d14153a3933a9a3afe57a8811f8326d26"
        ],
        [
            "Theorem Uniqueness_of_constructed_points : forall (x : Twolines) (a : Point), Incident a (line1 x) -> Incident a (line2 x) -> EqPt a (pt x).",
            "VernacStartTheoremProof",
            "d90c117c948b9dafa34865d3ddca90b97ca7ae45"
        ],
        [
            "intro x.",
            "VernacExtend",
            "f7163633eedf12f483fa0d8c0c119dd59431ca1e"
        ],
        [
            "generalize (inc_pt2 x); generalize (inc_pt1 x).",
            "VernacExtend",
            "3de2d2d9409ea39712a9257af4bf442307035fa2"
        ],
        [
            "unfold Incident, EqPt, Negation in |- *.",
            "VernacExtend",
            "161425fc0a1537ac339b6df9386fbe1c7e8e1954"
        ],
        [
            "intros H' H'0 a H'1 H'2; red in |- *; intro H'3.",
            "VernacExtend",
            "1c792227fc5ee529bd027e0d4c3edc5ffcc07bd4"
        ],
        [
            "lapply (el_ax (Seg a (pt x) H'3) (line1 x) (line2 x)); simpl in |- *.",
            "VernacExtend",
            "8fb5bb62b73796f7cd37765a16e3371a7428cd84"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "elim x; auto.",
            "VernacExtend",
            "f8073f7b97248dc4e0d916beea11682a8266f564"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cong_eqpt_apt : forall (a b : Point) (l : Line), Apart a l -> EqPt a b -> Apart b l.",
            "VernacStartTheoremProof",
            "bc8dfcbe9fa38cf9c6f08ec83751f3ae211e2bec"
        ],
        [
            "intros a b l H' H'0.",
            "VernacExtend",
            "56e8ba312494dbeafbf5dd557a0719d53177e3d7"
        ],
        [
            "elim (cmp_apt_dipt a b l); auto.",
            "VernacExtend",
            "76461576cc45ae8ce320fd1259e96f290aa9dc91"
        ],
        [
            "intro H'1; elim H'0; trivial.",
            "VernacExtend",
            "77622701a3757ae62b0d4afaece317697965bdce"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cong_eqln_apt : forall (a : Point) (l m : Line), Apart a l -> EqLn l m -> Apart a m.",
            "VernacStartTheoremProof",
            "0228c75b1e031aa226f9b9420db648522adf8ac3"
        ],
        [
            "intros a l m H' H'0.",
            "VernacExtend",
            "83c913ce2b99cfb109b97dcd4d9b537e146b23fc"
        ],
        [
            "elim (cmp_apt_diln a l m); auto.",
            "VernacExtend",
            "a28c4cc6796b74701298ef4c035e3de10bead4aa"
        ],
        [
            "intro H'1; elim H'0; trivial.",
            "VernacExtend",
            "77622701a3757ae62b0d4afaece317697965bdce"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cong_eqpt_inc : forall (a b : Point) (l : Line), Incident a l -> EqPt a b -> Incident b l.",
            "VernacStartTheoremProof",
            "c4c98bbd8ceb5253ce4c7891274333153d631794"
        ],
        [
            "unfold Incident in |- *.",
            "VernacExtend",
            "c47b25f843c7f119224638282ff4035465344501"
        ],
        [
            "intros a b l H' H'0; red in |- *; intro H'1; apply H'.",
            "VernacExtend",
            "51eafad7b781a5386e97f45b205e8a634b919f8b"
        ],
        [
            "apply cong_eqpt_apt with (a := b); auto.",
            "VernacExtend",
            "79965c283843e890a40a05e0da52e99d6fcf79a6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cong_eqln_inc : forall (a : Point) (l m : Line), Incident a l -> EqLn l m -> Incident a m.",
            "VernacStartTheoremProof",
            "46cce11af87a09e5c0534c332eb7b186e460f1f9"
        ],
        [
            "unfold Incident in |- *.",
            "VernacExtend",
            "c47b25f843c7f119224638282ff4035465344501"
        ],
        [
            "intros a l m H' H'0; red in |- *; intro H'1; apply H'.",
            "VernacExtend",
            "2c75f6fae206eadb6bfffbda21ef207e72449b3c"
        ],
        [
            "apply cong_eqln_apt with (l := m); auto.",
            "VernacExtend",
            "c746eb3a9460f375c41c01a94eff31d664299b2f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cong_eqln_con : forall l m n : Line, ConLn l m -> EqLn m n -> ConLn l n.",
            "VernacStartTheoremProof",
            "d296e7152e915ba7de0d693b77af194b19177c96"
        ],
        [
            "intros l m n H' H'0.",
            "VernacExtend",
            "a9f612007d07068c781256f3eec101e6c70ea143"
        ],
        [
            "elim (cmp_con_diln l m n); auto.",
            "VernacExtend",
            "9687fa683985a8cb249835db48331340496b6d1d"
        ],
        [
            "intro H'1; elim H'0; trivial.",
            "VernacExtend",
            "77622701a3757ae62b0d4afaece317697965bdce"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cong_eqln_par : forall l m n : Line, Par l m -> EqLn m n -> Par l n.",
            "VernacStartTheoremProof",
            "c5d29dcb09e4983a645c3f3ef91e64631b525466"
        ],
        [
            "unfold Par, Negation in |- *.",
            "VernacExtend",
            "d4cef516bea75901cd95510482c522bbd024c5ee"
        ],
        [
            "intros l m n H' H'0; red in |- *; intro H'1; apply H'.",
            "VernacExtend",
            "00b5978b129e11e82385eb8f401f7b938aca74d6"
        ],
        [
            "apply cong_eqln_con with (m := n); auto.",
            "VernacExtend",
            "9a37123fb927fb5cbebf56a32eccbf2effe21d6f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cong_eqpt_dipt : forall a b c : Point, DiPt a b -> EqPt b c -> DiPt a c.",
            "VernacStartTheoremProof",
            "5f5423e86fddbe0a5c441c65ccb5066ca09e09a8"
        ],
        [
            "intros a b c H' H'0; elim apart_dipt.",
            "VernacExtend",
            "58b8d361f5fce27f9fe611af7dbd38dba2f83aa2"
        ],
        [
            "unfold Separating at 1 in |- *.",
            "VernacExtend",
            "2b1085ea203fd084d9d7f39bb62a692b40f24d19"
        ],
        [
            "intros H'1 H'2; elim (H'2 a b c); trivial.",
            "VernacExtend",
            "40c01a4bc89db25614cb2b55d17a83e962d9d05d"
        ],
        [
            "intro H'3; elim H'0; trivial.",
            "VernacExtend",
            "50cd265e061e328ce946d7df46c9e6769d3db866"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cong_eqln_diln : forall l m n : Line, DiLn l m -> EqLn m n -> DiLn l n.",
            "VernacStartTheoremProof",
            "4c99605fc9910fa724b0a3325474b5d6ea3d3111"
        ],
        [
            "intros l m n H' H'0; elim apart_diln.",
            "VernacExtend",
            "0f34768cc942a78744b13fbd1d4d1ae466771a2b"
        ],
        [
            "unfold Separating at 1 in |- *.",
            "VernacExtend",
            "2b1085ea203fd084d9d7f39bb62a692b40f24d19"
        ],
        [
            "intros H'1 H'2; elim (H'2 l m n); trivial.",
            "VernacExtend",
            "e75f82b367d9a8d269dd86fbcc9a4a6c3f291110"
        ],
        [
            "intro H'3; elim H'0; trivial.",
            "VernacExtend",
            "50cd265e061e328ce946d7df46c9e6769d3db866"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eqln_imp_par : forall l m : Line, EqLn l m -> Par l m.",
            "VernacStartTheoremProof",
            "09d4b49c4d23132b7b3fb7d3a31ef918e3e72321"
        ],
        [
            "unfold Par, EqLn, Negation in |- *; red in |- *; auto.",
            "VernacExtend",
            "7f33050a35635cea0487f63e5afb2ff4aaa4c746"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cong_par_con : forall l m n : Line, ConLn l m -> Par m n -> ConLn l n.",
            "VernacStartTheoremProof",
            "96439d2756319a3c297bdbadf4feb5822616ebb3"
        ],
        [
            "intros l m n H' H'0.",
            "VernacExtend",
            "a9f612007d07068c781256f3eec101e6c70ea143"
        ],
        [
            "elim apart_con.",
            "VernacExtend",
            "e4445bca2ae75d5eea6cda167b12a2de1dd78c95"
        ],
        [
            "unfold Separating at 1 in |- *.",
            "VernacExtend",
            "2b1085ea203fd084d9d7f39bb62a692b40f24d19"
        ],
        [
            "intros H'1 H'2; elim (H'2 l m n); trivial.",
            "VernacExtend",
            "e75f82b367d9a8d269dd86fbcc9a4a6c3f291110"
        ],
        [
            "intro H'3; elim H'0; trivial.",
            "VernacExtend",
            "50cd265e061e328ce946d7df46c9e6769d3db866"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem sym_SPar : forall x y : Line, SPar x y -> SPar y x.",
            "VernacStartTheoremProof",
            "143b17c7750a3fae70903b50722bf1152dd95d9d"
        ],
        [
            "unfold SPar in |- *.",
            "VernacExtend",
            "974422e97c4ee2db40331e49a0dcc7dd02b8dd70"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve sym_SPar.",
            "VernacHints",
            "b03148d1935eb8f1cc97566a6d4c49b1e1f1cc5e"
        ],
        [
            "Theorem cong_eqln_spar : forall l m n : Line, SPar l m -> EqLn m n -> SPar l n.",
            "VernacStartTheoremProof",
            "59b61120797306eafb9bc017a9bda61b514315ad"
        ],
        [
            "unfold SPar in |- *.",
            "VernacExtend",
            "974422e97c4ee2db40331e49a0dcc7dd02b8dd70"
        ],
        [
            "intros l m n H'; elim H'; intros H'0 H'1; try exact H'0; clear H'.",
            "VernacExtend",
            "4b91b98f308914281d80aa67d287e5ffd961374f"
        ],
        [
            "intro H'; split.",
            "VernacExtend",
            "32287a5d9286c2e54f9bfe3964b74262e86f1968"
        ],
        [
            "apply cong_eqln_par with (m := m); trivial.",
            "VernacExtend",
            "316aad5aae4f27acbf694a7bd3e59a6b011e9639"
        ],
        [
            "apply cong_eqln_diln with (m := m); trivial.",
            "VernacExtend",
            "2a93f23b4fdcf0e62aedd927017a30866113b6dd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition reverse : Segment -> Segment.",
            "VernacDefinition",
            "b130319b885d8448449ecc0160acaa91b0df512a"
        ],
        [
            "intro H'; elim H'.",
            "VernacExtend",
            "cc9a00ee29e57d1c5ca2d83d231c585dd027983d"
        ],
        [
            "intros a b H'0.",
            "VernacExtend",
            "5e03390f87c1933b876947c2ff11a079d3fcc332"
        ],
        [
            "apply (Seg b a); auto.",
            "VernacExtend",
            "a1004145a6b6007545b51ea364c2f2e0a7e0c194"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Theorem orig_rev : forall x : Segment, origin x = extremity (reverse x).",
            "VernacStartTheoremProof",
            "2b2c7a5957c00daaff88dd041803285a2706b735"
        ],
        [
            "intro x; elim x; simpl in |- *; auto.",
            "VernacExtend",
            "9db53bb7ab995e16f9de425e9a23d0d350fbc651"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ext_rev : forall x : Segment, extremity x = origin (reverse x).",
            "VernacStartTheoremProof",
            "4801a241f10053b6c6c4aed66c9dd09f2ba8e2ee"
        ],
        [
            "intro x; elim x; simpl in |- *; auto.",
            "VernacExtend",
            "9db53bb7ab995e16f9de425e9a23d0d350fbc651"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem rev_defines_sameln : forall x : Segment, EqLn (ln x) (ln (reverse x)).",
            "VernacStartTheoremProof",
            "5a55ac856b94e475ec7ef8529dc8f15f083b6563"
        ],
        [
            "intro x; apply Uniqueness_of_constructed_lines.",
            "VernacExtend",
            "96b6019d5b2c4f50cb5e129a1d3f28f170afbe8b"
        ],
        [
            "rewrite <- (ext_rev x); auto.",
            "VernacExtend",
            "23449a19f763ad74815384459e757575509bd80e"
        ],
        [
            "rewrite <- (orig_rev x); auto.",
            "VernacExtend",
            "05014ceb901cb31cd24a8722287ad1d85feb6c5f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve rev_defines_sameln.",
            "VernacHints",
            "b475572954a4dc2544afa29abeec775e72c4e095"
        ],
        [
            "Definition flip : Twolines -> Twolines.",
            "VernacDefinition",
            "cab704e9386065807703e89b16bd088565a7028c"
        ],
        [
            "intro H'; elim H'.",
            "VernacExtend",
            "cc9a00ee29e57d1c5ca2d83d231c585dd027983d"
        ],
        [
            "intros l m H'0.",
            "VernacExtend",
            "99a079df952f680d2a6644d67262d40d687c5e56"
        ],
        [
            "apply (Twol m l); auto.",
            "VernacExtend",
            "d4d69180edcff820d77a4dd3b42e34dfd214c8c4"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Theorem line1_flip : forall x : Twolines, line1 x = line2 (flip x).",
            "VernacStartTheoremProof",
            "19c6cdb62ec75608a37ed8924ce1ff187950c112"
        ],
        [
            "intro x; elim x; simpl in |- *; auto.",
            "VernacExtend",
            "9db53bb7ab995e16f9de425e9a23d0d350fbc651"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem line2_flip : forall x : Twolines, line2 x = line1 (flip x).",
            "VernacStartTheoremProof",
            "4cb7ea56b05f96bfdee066b4f670afcd888de00f"
        ],
        [
            "intro x; elim x; simpl in |- *; auto.",
            "VernacExtend",
            "9db53bb7ab995e16f9de425e9a23d0d350fbc651"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem flip_defines_samept : forall x : Twolines, EqPt (pt x) (pt (flip x)).",
            "VernacStartTheoremProof",
            "45977d2d94b9a3a301a69700d2219ff42a4626cc"
        ],
        [
            "intro x; apply Uniqueness_of_constructed_points.",
            "VernacExtend",
            "03d1afaf851ae16b5d6757d083326e1858f362c2"
        ],
        [
            "rewrite <- (line2_flip x); auto.",
            "VernacExtend",
            "0202ebc4e7eb5227a593b1609f7d5cafb0ebebbb"
        ],
        [
            "rewrite <- (line1_flip x); auto.",
            "VernacExtend",
            "1d16ddb3d8f9b6c7954ee1c36b2db9f6136c11d1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve rev_defines_sameln flip_defines_samept.",
            "VernacHints",
            "1582d4afe84bbaf095f05f96bb31cd2299c8789b"
        ],
        [
            "Definition colinear (x y : Segment) : Prop := EqLn (ln x) (ln y).",
            "VernacDefinition",
            "7e120671db568e1699a37c694b974a14da0205e4"
        ],
        [
            "Theorem Colinearity_is_equivalence : Equivalence Segment colinear.",
            "VernacStartTheoremProof",
            "2f4709e23b6b326b77571c11d36cd16570ab7582"
        ],
        [
            "cut (Equivalence Line EqLn); auto.",
            "VernacExtend",
            "4f71d4d9a4f34c8e7d1f0bddf6ffdbd08c50c9e4"
        ],
        [
            "intro H'; elim H'.",
            "VernacExtend",
            "cc9a00ee29e57d1c5ca2d83d231c585dd027983d"
        ],
        [
            "intros H'0 H'1 H'2; apply Definition_of_equivalence; unfold colinear in |- *; auto.",
            "VernacExtend",
            "ea5a898703fd925276e8073319b4f665e23b6772"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "intros x y z H'3 H'4.",
            "VernacExtend",
            "479d25be395c9f03833c939564c2391cc259ff20"
        ],
        [
            "red in H'2.",
            "VernacExtend",
            "5b18245265eab67c1b95b0566c66dc9d7cd3fa88"
        ],
        [
            "apply H'2 with (y := ln y); auto.",
            "VernacExtend",
            "ae6a14165c60bd76162414496b61a886d1f0d78b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "Uniqueness_of_constructed_lines",
            "line_nb": 1,
            "steps": [
                {
                    "command": [
                        "intros x l.",
                        "VernacExtend",
                        "bdf45995f6572604d7a825809ff41ac166fcfaf0"
                    ]
                },
                {
                    "command": [
                        "generalize (inc_ln2 x); generalize (inc_ln1 x).",
                        "VernacExtend",
                        "eb1ddc253b48e597c5f2842d9d4dcb970f21cfbc"
                    ]
                },
                {
                    "command": [
                        "unfold Incident, EqLn, Negation in |- *.",
                        "VernacExtend",
                        "6ba38f11c91eb937434589bdb871494c4c77445b"
                    ]
                },
                {
                    "command": [
                        "intros H' H'0 H'1 H'2; red in |- *; intro H'3.",
                        "VernacExtend",
                        "040606274d58acfa7b59d6137ffbeb30b7d2ff7d"
                    ]
                },
                {
                    "command": [
                        "lapply (el_ax x l (ln x)); trivial.",
                        "VernacExtend",
                        "3ae7ea1ecd63cf45bb8d3beb42bed0ed0070f205"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Convergent_imp_distinct",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "intros l m H'.",
                        "VernacExtend",
                        "a64f18dbcc8a8ae1ad483c8d622c7eab1963d06e"
                    ]
                },
                {
                    "command": [
                        "lapply (cmp_con_diln l m l); trivial.",
                        "VernacExtend",
                        "e555357f508a88b435654e8764b65cee816680a3"
                    ]
                },
                {
                    "command": [
                        "intro H'0; elim H'0; auto.",
                        "VernacExtend",
                        "d2e9e24ec16730a3bf0075e8033be502475a8f99"
                    ]
                },
                {
                    "command": [
                        "intro H'1; elim apart_con.",
                        "VernacExtend",
                        "3e8d8b1badbfa15cc0dcbf519810d44ad6f33800"
                    ]
                },
                {
                    "command": [
                        "intro H'2; elim (H'2 l); trivial.",
                        "VernacExtend",
                        "ca3bda0d02f291af220a273323367c4b550d253a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Uniqueness_of_constructed_points",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "intro x.",
                        "VernacExtend",
                        "f7163633eedf12f483fa0d8c0c119dd59431ca1e"
                    ]
                },
                {
                    "command": [
                        "generalize (inc_pt2 x); generalize (inc_pt1 x).",
                        "VernacExtend",
                        "3de2d2d9409ea39712a9257af4bf442307035fa2"
                    ]
                },
                {
                    "command": [
                        "unfold Incident, EqPt, Negation in |- *.",
                        "VernacExtend",
                        "161425fc0a1537ac339b6df9386fbe1c7e8e1954"
                    ]
                },
                {
                    "command": [
                        "intros H' H'0 a H'1 H'2; red in |- *; intro H'3.",
                        "VernacExtend",
                        "1c792227fc5ee529bd027e0d4c3edc5ffcc07bd4"
                    ]
                },
                {
                    "command": [
                        "lapply (el_ax (Seg a (pt x) H'3) (line1 x) (line2 x)); simpl in |- *.",
                        "VernacExtend",
                        "8fb5bb62b73796f7cd37765a16e3371a7428cd84"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "elim x; auto.",
                        "VernacExtend",
                        "f8073f7b97248dc4e0d916beea11682a8266f564"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_eqpt_apt",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "intros a b l H' H'0.",
                        "VernacExtend",
                        "56e8ba312494dbeafbf5dd557a0719d53177e3d7"
                    ]
                },
                {
                    "command": [
                        "elim (cmp_apt_dipt a b l); auto.",
                        "VernacExtend",
                        "76461576cc45ae8ce320fd1259e96f290aa9dc91"
                    ]
                },
                {
                    "command": [
                        "intro H'1; elim H'0; trivial.",
                        "VernacExtend",
                        "77622701a3757ae62b0d4afaece317697965bdce"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_eqln_apt",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "intros a l m H' H'0.",
                        "VernacExtend",
                        "83c913ce2b99cfb109b97dcd4d9b537e146b23fc"
                    ]
                },
                {
                    "command": [
                        "elim (cmp_apt_diln a l m); auto.",
                        "VernacExtend",
                        "a28c4cc6796b74701298ef4c035e3de10bead4aa"
                    ]
                },
                {
                    "command": [
                        "intro H'1; elim H'0; trivial.",
                        "VernacExtend",
                        "77622701a3757ae62b0d4afaece317697965bdce"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_eqpt_inc",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "unfold Incident in |- *.",
                        "VernacExtend",
                        "c47b25f843c7f119224638282ff4035465344501"
                    ]
                },
                {
                    "command": [
                        "intros a b l H' H'0; red in |- *; intro H'1; apply H'.",
                        "VernacExtend",
                        "51eafad7b781a5386e97f45b205e8a634b919f8b"
                    ]
                },
                {
                    "command": [
                        "apply cong_eqpt_apt with (a := b); auto.",
                        "VernacExtend",
                        "79965c283843e890a40a05e0da52e99d6fcf79a6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_eqln_inc",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "unfold Incident in |- *.",
                        "VernacExtend",
                        "c47b25f843c7f119224638282ff4035465344501"
                    ]
                },
                {
                    "command": [
                        "intros a l m H' H'0; red in |- *; intro H'1; apply H'.",
                        "VernacExtend",
                        "2c75f6fae206eadb6bfffbda21ef207e72449b3c"
                    ]
                },
                {
                    "command": [
                        "apply cong_eqln_apt with (l := m); auto.",
                        "VernacExtend",
                        "c746eb3a9460f375c41c01a94eff31d664299b2f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_eqln_con",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "intros l m n H' H'0.",
                        "VernacExtend",
                        "a9f612007d07068c781256f3eec101e6c70ea143"
                    ]
                },
                {
                    "command": [
                        "elim (cmp_con_diln l m n); auto.",
                        "VernacExtend",
                        "9687fa683985a8cb249835db48331340496b6d1d"
                    ]
                },
                {
                    "command": [
                        "intro H'1; elim H'0; trivial.",
                        "VernacExtend",
                        "77622701a3757ae62b0d4afaece317697965bdce"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_eqln_par",
            "line_nb": 51,
            "steps": [
                {
                    "command": [
                        "unfold Par, Negation in |- *.",
                        "VernacExtend",
                        "d4cef516bea75901cd95510482c522bbd024c5ee"
                    ]
                },
                {
                    "command": [
                        "intros l m n H' H'0; red in |- *; intro H'1; apply H'.",
                        "VernacExtend",
                        "00b5978b129e11e82385eb8f401f7b938aca74d6"
                    ]
                },
                {
                    "command": [
                        "apply cong_eqln_con with (m := n); auto.",
                        "VernacExtend",
                        "9a37123fb927fb5cbebf56a32eccbf2effe21d6f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_eqpt_dipt",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "intros a b c H' H'0; elim apart_dipt.",
                        "VernacExtend",
                        "58b8d361f5fce27f9fe611af7dbd38dba2f83aa2"
                    ]
                },
                {
                    "command": [
                        "unfold Separating at 1 in |- *.",
                        "VernacExtend",
                        "2b1085ea203fd084d9d7f39bb62a692b40f24d19"
                    ]
                },
                {
                    "command": [
                        "intros H'1 H'2; elim (H'2 a b c); trivial.",
                        "VernacExtend",
                        "40c01a4bc89db25614cb2b55d17a83e962d9d05d"
                    ]
                },
                {
                    "command": [
                        "intro H'3; elim H'0; trivial.",
                        "VernacExtend",
                        "50cd265e061e328ce946d7df46c9e6769d3db866"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_eqln_diln",
            "line_nb": 62,
            "steps": [
                {
                    "command": [
                        "intros l m n H' H'0; elim apart_diln.",
                        "VernacExtend",
                        "0f34768cc942a78744b13fbd1d4d1ae466771a2b"
                    ]
                },
                {
                    "command": [
                        "unfold Separating at 1 in |- *.",
                        "VernacExtend",
                        "2b1085ea203fd084d9d7f39bb62a692b40f24d19"
                    ]
                },
                {
                    "command": [
                        "intros H'1 H'2; elim (H'2 l m n); trivial.",
                        "VernacExtend",
                        "e75f82b367d9a8d269dd86fbcc9a4a6c3f291110"
                    ]
                },
                {
                    "command": [
                        "intro H'3; elim H'0; trivial.",
                        "VernacExtend",
                        "50cd265e061e328ce946d7df46c9e6769d3db866"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqln_imp_par",
            "line_nb": 68,
            "steps": [
                {
                    "command": [
                        "unfold Par, EqLn, Negation in |- *; red in |- *; auto.",
                        "VernacExtend",
                        "7f33050a35635cea0487f63e5afb2ff4aaa4c746"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_par_con",
            "line_nb": 71,
            "steps": [
                {
                    "command": [
                        "intros l m n H' H'0.",
                        "VernacExtend",
                        "a9f612007d07068c781256f3eec101e6c70ea143"
                    ]
                },
                {
                    "command": [
                        "elim apart_con.",
                        "VernacExtend",
                        "e4445bca2ae75d5eea6cda167b12a2de1dd78c95"
                    ]
                },
                {
                    "command": [
                        "unfold Separating at 1 in |- *.",
                        "VernacExtend",
                        "2b1085ea203fd084d9d7f39bb62a692b40f24d19"
                    ]
                },
                {
                    "command": [
                        "intros H'1 H'2; elim (H'2 l m n); trivial.",
                        "VernacExtend",
                        "e75f82b367d9a8d269dd86fbcc9a4a6c3f291110"
                    ]
                },
                {
                    "command": [
                        "intro H'3; elim H'0; trivial.",
                        "VernacExtend",
                        "50cd265e061e328ce946d7df46c9e6769d3db866"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sym_SPar",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "unfold SPar in |- *.",
                        "VernacExtend",
                        "974422e97c4ee2db40331e49a0dcc7dd02b8dd70"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_eqln_spar",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "unfold SPar in |- *.",
                        "VernacExtend",
                        "974422e97c4ee2db40331e49a0dcc7dd02b8dd70"
                    ]
                },
                {
                    "command": [
                        "intros l m n H'; elim H'; intros H'0 H'1; try exact H'0; clear H'.",
                        "VernacExtend",
                        "4b91b98f308914281d80aa67d287e5ffd961374f"
                    ]
                },
                {
                    "command": [
                        "intro H'; split.",
                        "VernacExtend",
                        "32287a5d9286c2e54f9bfe3964b74262e86f1968"
                    ]
                },
                {
                    "command": [
                        "apply cong_eqln_par with (m := m); trivial.",
                        "VernacExtend",
                        "316aad5aae4f27acbf694a7bd3e59a6b011e9639"
                    ]
                },
                {
                    "command": [
                        "apply cong_eqln_diln with (m := m); trivial.",
                        "VernacExtend",
                        "2a93f23b4fdcf0e62aedd927017a30866113b6dd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reverse",
            "line_nb": 90,
            "steps": [
                {
                    "command": [
                        "intro H'; elim H'.",
                        "VernacExtend",
                        "cc9a00ee29e57d1c5ca2d83d231c585dd027983d"
                    ]
                },
                {
                    "command": [
                        "intros a b H'0.",
                        "VernacExtend",
                        "5e03390f87c1933b876947c2ff11a079d3fcc332"
                    ]
                },
                {
                    "command": [
                        "apply (Seg b a); auto.",
                        "VernacExtend",
                        "a1004145a6b6007545b51ea364c2f2e0a7e0c194"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "orig_rev",
            "line_nb": 95,
            "steps": [
                {
                    "command": [
                        "intro x; elim x; simpl in |- *; auto.",
                        "VernacExtend",
                        "9db53bb7ab995e16f9de425e9a23d0d350fbc651"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ext_rev",
            "line_nb": 98,
            "steps": [
                {
                    "command": [
                        "intro x; elim x; simpl in |- *; auto.",
                        "VernacExtend",
                        "9db53bb7ab995e16f9de425e9a23d0d350fbc651"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rev_defines_sameln",
            "line_nb": 101,
            "steps": [
                {
                    "command": [
                        "intro x; apply Uniqueness_of_constructed_lines.",
                        "VernacExtend",
                        "96b6019d5b2c4f50cb5e129a1d3f28f170afbe8b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (ext_rev x); auto.",
                        "VernacExtend",
                        "23449a19f763ad74815384459e757575509bd80e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (orig_rev x); auto.",
                        "VernacExtend",
                        "05014ceb901cb31cd24a8722287ad1d85feb6c5f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "flip",
            "line_nb": 107,
            "steps": [
                {
                    "command": [
                        "intro H'; elim H'.",
                        "VernacExtend",
                        "cc9a00ee29e57d1c5ca2d83d231c585dd027983d"
                    ]
                },
                {
                    "command": [
                        "intros l m H'0.",
                        "VernacExtend",
                        "99a079df952f680d2a6644d67262d40d687c5e56"
                    ]
                },
                {
                    "command": [
                        "apply (Twol m l); auto.",
                        "VernacExtend",
                        "d4d69180edcff820d77a4dd3b42e34dfd214c8c4"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "line1_flip",
            "line_nb": 112,
            "steps": [
                {
                    "command": [
                        "intro x; elim x; simpl in |- *; auto.",
                        "VernacExtend",
                        "9db53bb7ab995e16f9de425e9a23d0d350fbc651"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "line2_flip",
            "line_nb": 115,
            "steps": [
                {
                    "command": [
                        "intro x; elim x; simpl in |- *; auto.",
                        "VernacExtend",
                        "9db53bb7ab995e16f9de425e9a23d0d350fbc651"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "flip_defines_samept",
            "line_nb": 118,
            "steps": [
                {
                    "command": [
                        "intro x; apply Uniqueness_of_constructed_points.",
                        "VernacExtend",
                        "03d1afaf851ae16b5d6757d083326e1858f362c2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (line2_flip x); auto.",
                        "VernacExtend",
                        "0202ebc4e7eb5227a593b1609f7d5cafb0ebebbb"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (line1_flip x); auto.",
                        "VernacExtend",
                        "1d16ddb3d8f9b6c7954ee1c36b2db9f6136c11d1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Colinearity_is_equivalence",
            "line_nb": 125,
            "steps": [
                {
                    "command": [
                        "cut (Equivalence Line EqLn); auto.",
                        "VernacExtend",
                        "4f71d4d9a4f34c8e7d1f0bddf6ffdbd08c50c9e4"
                    ]
                },
                {
                    "command": [
                        "intro H'; elim H'.",
                        "VernacExtend",
                        "cc9a00ee29e57d1c5ca2d83d231c585dd027983d"
                    ]
                },
                {
                    "command": [
                        "intros H'0 H'1 H'2; apply Definition_of_equivalence; unfold colinear in |- *; auto.",
                        "VernacExtend",
                        "ea5a898703fd925276e8073319b4f665e23b6772"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "intros x y z H'3 H'4.",
                        "VernacExtend",
                        "479d25be395c9f03833c939564c2391cc259ff20"
                    ]
                },
                {
                    "command": [
                        "red in H'2.",
                        "VernacExtend",
                        "5b18245265eab67c1b95b0566c66dc9d7cd3fa88"
                    ]
                },
                {
                    "command": [
                        "apply H'2 with (y := ln y); auto.",
                        "VernacExtend",
                        "ae6a14165c60bd76162414496b61a886d1f0d78b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}