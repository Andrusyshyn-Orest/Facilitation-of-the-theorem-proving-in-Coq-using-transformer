{
    "filename": "part3.v",
    "coq_project": "constructive-geometry",
    "vernac_cmds": [
        [
            "Require Import basis.",
            "VernacRequire",
            "f2442ce68e5f87d75900cc79a1467e93cfa98c26"
        ],
        [
            "Require Import part1.",
            "VernacRequire",
            "2bf008786df95fbeffc5050eb7abfba29bc61ec5"
        ],
        [
            "Require Import part2.",
            "VernacRequire",
            "f08d38bbc5161f3275d8aafc8a5daf13e141c00e"
        ],
        [
            "Theorem Triangle_axioms_i : forall t : Triangle, Apart (origin (base t)) (ln (Side2 t)).",
            "VernacStartTheoremProof",
            "0be97d899833dfcae81f6ffa209925d19068ffba"
        ],
        [
            "intro t.",
            "VernacExtend",
            "0f1e2ed40751c280bb4adb99a86b36c003f05ffd"
        ],
        [
            "generalize (thm4_3d t); intro H'.",
            "VernacExtend",
            "793b068bd926e82afc563e8bac24246858308fe5"
        ],
        [
            "lapply (el_ax (base t) (ln (base t)) (ln (Side2 t))); trivial.",
            "VernacExtend",
            "2de4499a88674821ddb4d83af1d5b155dd6f7309"
        ],
        [
            "intro H.",
            "VernacExtend",
            "a9535760040671e8853f25f0b4e9eda38ca392a6"
        ],
        [
            "elim H; intro H'0; clear H.",
            "VernacExtend",
            "925b742ad4fcb63dc0ba342fa56c5b0cfeea6ab3"
        ],
        [
            "generalize (inc_ln2 (base t)); generalize (inc_ln1 (base t)).",
            "VernacExtend",
            "10e1dbaf39df83c99ec0c12d40958d843d8c125b"
        ],
        [
            "unfold Incident in |- *; tauto.",
            "VernacExtend",
            "b75b308aaa2a1426489fa57c206238dedd03cbca"
        ],
        [
            "generalize H'0; clear H'0.",
            "VernacExtend",
            "e5e37be8e3d32608ca19dd27b3c11f13165012af"
        ],
        [
            "rewrite (auxs2 t).",
            "VernacExtend",
            "42701b0afb08fe043825e5f10ce4d2cf7cdd9edb"
        ],
        [
            "intro H'2.",
            "VernacExtend",
            "096a0f1a8cdc8a482c91da0273cced27d2e4e18f"
        ],
        [
            "elim H'2; [ trivial | intro H'0; clear H'2 ].",
            "VernacExtend",
            "0dfd888ed5e40bd8ce2dd16edd09832ab8cfd074"
        ],
        [
            "elim (inc_ln2 (Side2 t)); trivial.",
            "VernacExtend",
            "2bbef630c8937d0f2362811d15fff02b1a80866a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Triangle_axioms_ii : forall t : Triangle, Apart (extremity (base t)) (ln (reverse (Side1 t))).",
            "VernacStartTheoremProof",
            "966435dce69ba4b6ea3d6e5a4e5ebff5e78a4260"
        ],
        [
            "intro t.",
            "VernacExtend",
            "0f1e2ed40751c280bb4adb99a86b36c003f05ffd"
        ],
        [
            "generalize (thm4_3c t); intro H'.",
            "VernacExtend",
            "f75ba7eb32f3870d64c68e7597a1541c69aa96e6"
        ],
        [
            "lapply (el_ax (base t) (ln (base t)) (ln (reverse (Side1 t)))); trivial.",
            "VernacExtend",
            "98580f2e3007f5b1458e9182b92b983534f88aeb"
        ],
        [
            "intro H; elim H; (clear H; intro H'0).",
            "VernacExtend",
            "219638efd1c1fae28f2885175f7dc68036ce43a3"
        ],
        [
            "generalize (inc_ln2 (base t)); generalize (inc_ln1 (base t)).",
            "VernacExtend",
            "10e1dbaf39df83c99ec0c12d40958d843d8c125b"
        ],
        [
            "unfold Incident in |- *; tauto.",
            "VernacExtend",
            "b75b308aaa2a1426489fa57c206238dedd03cbca"
        ],
        [
            "elim H'0; [ intro H'1; clear H'0 | trivial ].",
            "VernacExtend",
            "22ed553de9686556e8a5a146741032ed829fad8e"
        ],
        [
            "generalize (inc_ln1 (reverse (Side1 t))).",
            "VernacExtend",
            "dc2032678d1ed05e6cf595017d5de001eec504cc"
        ],
        [
            "rewrite <- (ext_rev (Side1 t)).",
            "VernacExtend",
            "9d135a559d6d8f82c6322dcce35913b00a5e80f1"
        ],
        [
            "rewrite <- (auxs1 t).",
            "VernacExtend",
            "cb3cbad011d013b204ef38a228aa0b1e7b71bc18"
        ],
        [
            "intro H'3; elim H'3; auto.",
            "VernacExtend",
            "e4ca210c735f720a2daaf9acbb240063981ad496"
        ],
        [
            "apply cong_eqln_diln with (m := ln (Side1 t)); auto.",
            "VernacExtend",
            "a3315553e531ec14cf4d07bdcd39a88a46d69977"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Triangle_axioms_iii : forall t : Triangle, Apart (summit t) (ln (reverse (base t))).",
            "VernacStartTheoremProof",
            "5b33ed4079e66fba8b9889e0afa41e4859d7f1ed"
        ],
        [
            "intro t; elim t.",
            "VernacExtend",
            "24cf88f93119f655bb5602b809ec2837e3a1b8aa"
        ],
        [
            "intros summit base Tri_cond.",
            "VernacExtend",
            "6d40cfa7bc897b6aa74ecb1b40c65159f3b50885"
        ],
        [
            "apply cong_eqln_apt with (l := ln base); auto.",
            "VernacExtend",
            "0cb421127938b2937c873d502186ab82c0b9b4b6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Triangle_axioms_i Triangle_axioms_ii Triangle_axioms_iii.",
            "VernacHints",
            "ace9ba38b66d920a6b2db10e5fc7730490a19d3f"
        ],
        [
            "Theorem thm4_5ia : forall (x : Segment) (l : Line), EqLn l (ln x) -> Incident (origin x) l /\\ Incident (extremity x) l.",
            "VernacStartTheoremProof",
            "0aaf7a774446bf9ff3262dc61914aa26ff3745f4"
        ],
        [
            "unfold EqLn, Incident, Negation in |- *.",
            "VernacExtend",
            "d7c02aef8c4de0aa77168c37b354747423a215fe"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem thm4_5ib : forall (x : Segment) (l : Line), Incident (origin x) l /\\ Incident (extremity x) l -> EqLn l (ln x).",
            "VernacStartTheoremProof",
            "b0056673dbdb224c0b8bcec708b1a2b14ad233f6"
        ],
        [
            "generalize Uniqueness_of_constructed_lines; intuition.",
            "VernacExtend",
            "a23afb63b5aa5580a544c159f89bfc9a680f0ca5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve thm4_1c thm4_1d.",
            "VernacHints",
            "51de73ee5b33bdf303da2f85fb366537345af9e5"
        ],
        [
            "Theorem thm4_5iia : forall (x : Twolines) (a : Point), EqPt a (pt x) -> Incident a (line1 x) /\\ Incident a (line2 x).",
            "VernacStartTheoremProof",
            "9a744ad371d7f5cd84b2cc3adf25debad1fd1ccc"
        ],
        [
            "split; apply cong_eqpt_inc with (a := pt x); auto.",
            "VernacExtend",
            "8abce4d9b05b2d1c8590e6f86fe3274e78cf6490"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem thm4_5iib : forall (x : Twolines) (a : Point), Incident a (line1 x) /\\ Incident a (line2 x) -> EqPt a (pt x).",
            "VernacStartTheoremProof",
            "e28d4ae43fc14399f8a7a99151a2fd465abab311"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "apply Uniqueness_of_constructed_points; trivial.",
            "VernacExtend",
            "929b2540d8d6628b221fed779fd855af6815b6b4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem thm4_6 : forall x y : Segment, Incident (origin x) (ln y) /\\ Incident (extremity x) (ln y) -> Incident (origin y) (ln x) /\\ Incident (extremity y) (ln x).",
            "VernacStartTheoremProof",
            "815d16efee7cb29a9b9fec9d8c1c4c7e3d72b5ea"
        ],
        [
            "unfold Incident in |- *.",
            "VernacExtend",
            "c47b25f843c7f119224638282ff4035465344501"
        ],
        [
            "intros x y H'; generalize (Symmetry_of_Apart y x).",
            "VernacExtend",
            "de6bbf3eae3ccd16a276bb7111ddc917f4c5ce6a"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem thm4_7i : forall (a b c : Point) (H1 : DiPt a b) (H2 : DiPt b c), Incident c (ln (Seg a b H1)) -> Incident a (ln (reverse (Seg b c H2))).",
            "VernacStartTheoremProof",
            "eac264b8607f66e2a9335067ffbc9ecdc4c8d2ad"
        ],
        [
            "intros a b c H1 H2 H'.",
            "VernacExtend",
            "9399a2bba011de6ac9254f7f7071bff593a7b5d0"
        ],
        [
            "lapply (thm4_6 (reverse (Seg b c H2)) (Seg a b H1)); [ intro H'1; elim H'1; trivial | idtac ].",
            "VernacExtend",
            "f7f23b4f295b5d5be73e113c81319a62d175a1ce"
        ],
        [
            "generalize (inc_ln2 (Seg a b H1)); auto.",
            "VernacExtend",
            "f800cc29fe00e323b292ab9ef223e807b9026f14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem thm4_7ii : forall (a b c : Point) (H1 : DiPt a b) (H2 : DiPt a c), Incident c (ln (Seg a b H1)) -> Incident b (ln (Seg a c H2)).",
            "VernacStartTheoremProof",
            "861efbf68c5997f3e787035d4fae124ab182062e"
        ],
        [
            "intros a b c H1 H2 H'.",
            "VernacExtend",
            "9399a2bba011de6ac9254f7f7071bff593a7b5d0"
        ],
        [
            "lapply (thm4_6 (Seg a c H2) (Seg a b H1)); [ intro H'1; elim H'1; trivial | idtac ].",
            "VernacExtend",
            "2b680b954a12e7cb3a7b7503c6be18c9c941598b"
        ],
        [
            "generalize (inc_ln1 (Seg a b H1)); auto.",
            "VernacExtend",
            "74e6cc652092ffd903f4dde5716328139075f39d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem thm4_7iii : forall (x : Segment) (c : Point), Incident c (ln x) -> Incident c (ln (reverse x)).",
            "VernacStartTheoremProof",
            "a77f653eec682b4fbf7f3291b4786c41a36d5b09"
        ],
        [
            "intros x c H'.",
            "VernacExtend",
            "0f4e7af6969532e4f561159c708f578778e5f990"
        ],
        [
            "apply cong_eqln_inc with (l := ln x); auto.",
            "VernacExtend",
            "97363a4963be1d5264e874472e1fbab428077aa4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Symmetry_of_Apart' : forall x y : Twolines, Apart (pt y) (line1 x) \\/ Apart (pt y) (line2 x) -> Apart (pt x) (line1 y) \\/ Apart (pt x) (line2 y).",
            "VernacStartTheoremProof",
            "655a2cd8ed2fdf88f5acf6fd63412a0f0439f105"
        ],
        [
            "intros x y H'.",
            "VernacExtend",
            "88ac6800dbe81ee0042311fe3134d6c8111dc7cf"
        ],
        [
            "apply thm4_1c.",
            "VernacExtend",
            "eafbe4340ae27a4b507f367bd270bde6e2502af7"
        ],
        [
            "apply sym_DiPt; auto.",
            "VernacExtend",
            "d625f303958ff1b88ba5f62f2303d3039601f501"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem thm4_9a : forall (x : Twolines) (c : Line), Apart (pt x) c -> DiLn c (line1 x).",
            "VernacStartTheoremProof",
            "bf7f6884c683e36fc4c9a81c48e7018bef35884a"
        ],
        [
            "intros x c H'.",
            "VernacExtend",
            "0f4e7af6969532e4f561159c708f578778e5f990"
        ],
        [
            "lapply (cmp_apt_diln (pt x) c (line1 x)); [ intro H'3; elim H'3; [ trivial | intro H'4; clear H'3 ] | idtac ]; trivial.",
            "VernacExtend",
            "ca51e5420c66561386133c6adfc206c45fbe4b7e"
        ],
        [
            "elim (inc_pt1 x); trivial.",
            "VernacExtend",
            "b8fbcfd00e07faca81801cb6ffe5fc1bd9304d5a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem thm4_9b : forall (x : Twolines) (c : Line), Apart (pt x) c -> DiLn c (line2 x).",
            "VernacStartTheoremProof",
            "224e23d2d87e28bfca25f4e65216717021d9bedc"
        ],
        [
            "intros x c H'.",
            "VernacExtend",
            "0f4e7af6969532e4f561159c708f578778e5f990"
        ],
        [
            "lapply (cmp_apt_diln (pt x) c (line2 x)); [ intro H'3; elim H'3; [ trivial | intro H'4; clear H'3 ] | idtac ]; trivial.",
            "VernacExtend",
            "a23baf6cde157300b2a0155471a5ca3d9356f397"
        ],
        [
            "elim (inc_pt2 x); trivial.",
            "VernacExtend",
            "5d8bca331d6e91d908e8eff5503863cb1fd4a16f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem thm5_3 : forall (x y : Segment) (z : Twolines), origin x = origin y -> line1 z = ln x -> line2 z = ln y -> EqPt (pt z) (origin x).",
            "VernacStartTheoremProof",
            "c840119fd9f1d06908a8290ccba2680468ee6206"
        ],
        [
            "intros x y z; elim z; simpl in |- *.",
            "VernacExtend",
            "01ecfe3dcf4561fb6e946a908951c30ba335201b"
        ],
        [
            "intros line1 line2 Twol_cond H' H'0 H'1.",
            "VernacExtend",
            "bc52ac09bbe02a84f7e943029d5c191da9d0dc54"
        ],
        [
            "lapply (Convergent_imp_distinct line1 line2); trivial.",
            "VernacExtend",
            "d7fc1386607bd820aa47cb2acd4ffd1dde661dd1"
        ],
        [
            "intro H'2; red in |- *; red in |- *; red in |- *; intro H.",
            "VernacExtend",
            "f12763764385db916e66fc5332e970fecaa48a63"
        ],
        [
            "lapply (el_ax (Seg (pt (Twol line1 line2 Twol_cond)) (origin x) H) line1 line2); [ intro H'7 | trivial ].",
            "VernacExtend",
            "b432ad00d7a7f043da6caa9ee4998e4fb764ab8f"
        ],
        [
            "simpl in H'7.",
            "VernacExtend",
            "b0251778ec3773fd947dd3ee8e745742d8f38be9"
        ],
        [
            "elim H'7; clear H'7; (intro H'3; elim H'3; (clear H'3; intro H'4)).",
            "VernacExtend",
            "52aad25eab7cddf8f1491a2f6563d53b51586216"
        ],
        [
            "elim (inc_pt1 (Twol line1 line2 Twol_cond)); auto.",
            "VernacExtend",
            "397907778c55ad1d82a4a52621c8ebdf41643998"
        ],
        [
            "apply (inc_ln1 x); rewrite <- H'0; assumption.",
            "VernacExtend",
            "b601b63812c94fe7465540308c09062d9934968b"
        ],
        [
            "elim (inc_pt2 (Twol line1 line2 Twol_cond)); auto.",
            "VernacExtend",
            "9d5ccabd4e797b8a77342fc2d7a3f9d630ee4acf"
        ],
        [
            "apply (inc_ln1 y); rewrite <- H'1; rewrite <- H'; assumption.",
            "VernacExtend",
            "52634e5cb57d078caf02ed0c5d1604b147a9263a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem thm5_4 : forall (x y : Twolines) (z : Segment), line1 x = line1 y -> origin z = pt x -> extremity z = pt y -> EqLn (ln z) (line1 x).",
            "VernacStartTheoremProof",
            "49d3f57052edc163de1031b9b68d6dfbded160dd"
        ],
        [
            "intros x y z; elim z; simpl in |- *.",
            "VernacExtend",
            "01ecfe3dcf4561fb6e946a908951c30ba335201b"
        ],
        [
            "intros origin extremity Seg_cond H' H'0 H'1.",
            "VernacExtend",
            "6dc3fe8ab81d3c16fdd421ebc4c3db29da09e8ed"
        ],
        [
            "red in |- *; red in |- *; red in |- *; intro H'2.",
            "VernacExtend",
            "adef1dbcbb7f8ec3a67870bc1f7413ab780f81d6"
        ],
        [
            "lapply (el_ax (Seg origin extremity Seg_cond) (ln (Seg origin extremity Seg_cond)) (line1 x)); [ intro H'7 | trivial ].",
            "VernacExtend",
            "17c63558e8adfc0b466a78c8e2555418aaea0c0d"
        ],
        [
            "simpl in H'7.",
            "VernacExtend",
            "b0251778ec3773fd947dd3ee8e745742d8f38be9"
        ],
        [
            "elim H'7; clear H'7; (intro H'3; elim H'3; (clear H'3; intro H'4)).",
            "VernacExtend",
            "52aad25eab7cddf8f1491a2f6563d53b51586216"
        ],
        [
            "elim (inc_ln1 (Seg origin extremity Seg_cond)); auto.",
            "VernacExtend",
            "e5e4a4e5520aad5d0af83fadb554510137f2f5de"
        ],
        [
            "elim (inc_ln2 (Seg origin extremity Seg_cond)); auto.",
            "VernacExtend",
            "0a530de0f37f79815a2c5d9ae923509f460f8f08"
        ],
        [
            "apply (inc_pt1 x); rewrite <- H'0; assumption.",
            "VernacExtend",
            "5b4876f1e412a1fe8ede164035c50764073431da"
        ],
        [
            "apply (inc_pt1 y); rewrite <- H'1; rewrite <- H'; assumption.",
            "VernacExtend",
            "086a944739e9fdd3afea2d8ea5e98861da3b8232"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem thm5_5 : forall (a b c : Point) (H1 : DiPt a b) (H2 : EqPt b c), EqLn (ln (Seg a b H1)) (ln (Seg a c (cong_eqpt_dipt a b c H1 H2))).",
            "VernacStartTheoremProof",
            "9e9051b7e5c81457d0ba772ec110e7ea15822177"
        ],
        [
            "intros a b c H1 H2; apply Uniqueness_of_constructed_lines; simpl in |- *.",
            "VernacExtend",
            "353ca22b9220d5616535bfd3339c8379dc9be83c"
        ],
        [
            "exact (inc_ln1 (Seg a b H1)).",
            "VernacExtend",
            "58e08f3de61de25142f4279881ed0dc7e2f06329"
        ],
        [
            "generalize (inc_ln2 (Seg a b H1)); simpl in |- *; intro H'.",
            "VernacExtend",
            "3a183e181d08ec0979d32337c6c33843136e415a"
        ],
        [
            "apply cong_eqpt_inc with (a := b); trivial.",
            "VernacExtend",
            "b0f2f419a0c2824ae3d875ff9a365de69e5ea531"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem thm5_6 : forall (l m n : Line) (H1 : ConLn l m) (H2 : EqLn m n), EqPt (pt (Twol l m H1)) (pt (Twol l n (cong_eqln_con l m n H1 H2))).",
            "VernacStartTheoremProof",
            "a427c18a62de34b594c6398f514c94794abab91d"
        ],
        [
            "intros l m n H1 H2; apply Uniqueness_of_constructed_points; simpl in |- *.",
            "VernacExtend",
            "9a8b780eed80c56f8ba61b5d5b09ea6605a73be4"
        ],
        [
            "exact (inc_pt1 (Twol l m H1)).",
            "VernacExtend",
            "e2b9cc333e1d1cbe68a33e1de376c04c8b1354b5"
        ],
        [
            "generalize (inc_pt2 (Twol l m H1)); simpl in |- *; intro H'.",
            "VernacExtend",
            "1eb47d9b6835e4ee5368a0377b5f5fe82fa8dd82"
        ],
        [
            "apply cong_eqln_inc with (l := m); trivial.",
            "VernacExtend",
            "8f810f332e1375d2e1ff66e1ef80499f2259093a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "Triangle_axioms_i",
            "line_nb": 3,
            "steps": [
                {
                    "command": [
                        "intro t.",
                        "VernacExtend",
                        "0f1e2ed40751c280bb4adb99a86b36c003f05ffd"
                    ]
                },
                {
                    "command": [
                        "generalize (thm4_3d t); intro H'.",
                        "VernacExtend",
                        "793b068bd926e82afc563e8bac24246858308fe5"
                    ]
                },
                {
                    "command": [
                        "lapply (el_ax (base t) (ln (base t)) (ln (Side2 t))); trivial.",
                        "VernacExtend",
                        "2de4499a88674821ddb4d83af1d5b155dd6f7309"
                    ]
                },
                {
                    "command": [
                        "intro H.",
                        "VernacExtend",
                        "a9535760040671e8853f25f0b4e9eda38ca392a6"
                    ]
                },
                {
                    "command": [
                        "elim H; intro H'0; clear H.",
                        "VernacExtend",
                        "925b742ad4fcb63dc0ba342fa56c5b0cfeea6ab3"
                    ]
                },
                {
                    "command": [
                        "generalize (inc_ln2 (base t)); generalize (inc_ln1 (base t)).",
                        "VernacExtend",
                        "10e1dbaf39df83c99ec0c12d40958d843d8c125b"
                    ]
                },
                {
                    "command": [
                        "unfold Incident in |- *; tauto.",
                        "VernacExtend",
                        "b75b308aaa2a1426489fa57c206238dedd03cbca"
                    ]
                },
                {
                    "command": [
                        "generalize H'0; clear H'0.",
                        "VernacExtend",
                        "e5e37be8e3d32608ca19dd27b3c11f13165012af"
                    ]
                },
                {
                    "command": [
                        "rewrite (auxs2 t).",
                        "VernacExtend",
                        "42701b0afb08fe043825e5f10ce4d2cf7cdd9edb"
                    ]
                },
                {
                    "command": [
                        "intro H'2.",
                        "VernacExtend",
                        "096a0f1a8cdc8a482c91da0273cced27d2e4e18f"
                    ]
                },
                {
                    "command": [
                        "elim H'2; [ trivial | intro H'0; clear H'2 ].",
                        "VernacExtend",
                        "0dfd888ed5e40bd8ce2dd16edd09832ab8cfd074"
                    ]
                },
                {
                    "command": [
                        "elim (inc_ln2 (Side2 t)); trivial.",
                        "VernacExtend",
                        "2bbef630c8937d0f2362811d15fff02b1a80866a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Triangle_axioms_ii",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "intro t.",
                        "VernacExtend",
                        "0f1e2ed40751c280bb4adb99a86b36c003f05ffd"
                    ]
                },
                {
                    "command": [
                        "generalize (thm4_3c t); intro H'.",
                        "VernacExtend",
                        "f75ba7eb32f3870d64c68e7597a1541c69aa96e6"
                    ]
                },
                {
                    "command": [
                        "lapply (el_ax (base t) (ln (base t)) (ln (reverse (Side1 t)))); trivial.",
                        "VernacExtend",
                        "98580f2e3007f5b1458e9182b92b983534f88aeb"
                    ]
                },
                {
                    "command": [
                        "intro H; elim H; (clear H; intro H'0).",
                        "VernacExtend",
                        "219638efd1c1fae28f2885175f7dc68036ce43a3"
                    ]
                },
                {
                    "command": [
                        "generalize (inc_ln2 (base t)); generalize (inc_ln1 (base t)).",
                        "VernacExtend",
                        "10e1dbaf39df83c99ec0c12d40958d843d8c125b"
                    ]
                },
                {
                    "command": [
                        "unfold Incident in |- *; tauto.",
                        "VernacExtend",
                        "b75b308aaa2a1426489fa57c206238dedd03cbca"
                    ]
                },
                {
                    "command": [
                        "elim H'0; [ intro H'1; clear H'0 | trivial ].",
                        "VernacExtend",
                        "22ed553de9686556e8a5a146741032ed829fad8e"
                    ]
                },
                {
                    "command": [
                        "generalize (inc_ln1 (reverse (Side1 t))).",
                        "VernacExtend",
                        "dc2032678d1ed05e6cf595017d5de001eec504cc"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (ext_rev (Side1 t)).",
                        "VernacExtend",
                        "9d135a559d6d8f82c6322dcce35913b00a5e80f1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (auxs1 t).",
                        "VernacExtend",
                        "cb3cbad011d013b204ef38a228aa0b1e7b71bc18"
                    ]
                },
                {
                    "command": [
                        "intro H'3; elim H'3; auto.",
                        "VernacExtend",
                        "e4ca210c735f720a2daaf9acbb240063981ad496"
                    ]
                },
                {
                    "command": [
                        "apply cong_eqln_diln with (m := ln (Side1 t)); auto.",
                        "VernacExtend",
                        "a3315553e531ec14cf4d07bdcd39a88a46d69977"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Triangle_axioms_iii",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "intro t; elim t.",
                        "VernacExtend",
                        "24cf88f93119f655bb5602b809ec2837e3a1b8aa"
                    ]
                },
                {
                    "command": [
                        "intros summit base Tri_cond.",
                        "VernacExtend",
                        "6d40cfa7bc897b6aa74ecb1b40c65159f3b50885"
                    ]
                },
                {
                    "command": [
                        "apply cong_eqln_apt with (l := ln base); auto.",
                        "VernacExtend",
                        "0cb421127938b2937c873d502186ab82c0b9b4b6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "thm4_5ia",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "unfold EqLn, Incident, Negation in |- *.",
                        "VernacExtend",
                        "d7c02aef8c4de0aa77168c37b354747423a215fe"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "thm4_5ib",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "generalize Uniqueness_of_constructed_lines; intuition.",
                        "VernacExtend",
                        "a23afb63b5aa5580a544c159f89bfc9a680f0ca5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "thm4_5iia",
            "line_nb": 45,
            "steps": [
                {
                    "command": [
                        "split; apply cong_eqpt_inc with (a := pt x); auto.",
                        "VernacExtend",
                        "8abce4d9b05b2d1c8590e6f86fe3274e78cf6490"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "thm4_5iib",
            "line_nb": 48,
            "steps": [
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "apply Uniqueness_of_constructed_points; trivial.",
                        "VernacExtend",
                        "929b2540d8d6628b221fed779fd855af6815b6b4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "thm4_6",
            "line_nb": 52,
            "steps": [
                {
                    "command": [
                        "unfold Incident in |- *.",
                        "VernacExtend",
                        "c47b25f843c7f119224638282ff4035465344501"
                    ]
                },
                {
                    "command": [
                        "intros x y H'; generalize (Symmetry_of_Apart y x).",
                        "VernacExtend",
                        "de6bbf3eae3ccd16a276bb7111ddc917f4c5ce6a"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "thm4_7i",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "intros a b c H1 H2 H'.",
                        "VernacExtend",
                        "9399a2bba011de6ac9254f7f7071bff593a7b5d0"
                    ]
                },
                {
                    "command": [
                        "lapply (thm4_6 (reverse (Seg b c H2)) (Seg a b H1)); [ intro H'1; elim H'1; trivial | idtac ].",
                        "VernacExtend",
                        "f7f23b4f295b5d5be73e113c81319a62d175a1ce"
                    ]
                },
                {
                    "command": [
                        "generalize (inc_ln2 (Seg a b H1)); auto.",
                        "VernacExtend",
                        "f800cc29fe00e323b292ab9ef223e807b9026f14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "thm4_7ii",
            "line_nb": 62,
            "steps": [
                {
                    "command": [
                        "intros a b c H1 H2 H'.",
                        "VernacExtend",
                        "9399a2bba011de6ac9254f7f7071bff593a7b5d0"
                    ]
                },
                {
                    "command": [
                        "lapply (thm4_6 (Seg a c H2) (Seg a b H1)); [ intro H'1; elim H'1; trivial | idtac ].",
                        "VernacExtend",
                        "2b680b954a12e7cb3a7b7503c6be18c9c941598b"
                    ]
                },
                {
                    "command": [
                        "generalize (inc_ln1 (Seg a b H1)); auto.",
                        "VernacExtend",
                        "74e6cc652092ffd903f4dde5716328139075f39d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "thm4_7iii",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "intros x c H'.",
                        "VernacExtend",
                        "0f4e7af6969532e4f561159c708f578778e5f990"
                    ]
                },
                {
                    "command": [
                        "apply cong_eqln_inc with (l := ln x); auto.",
                        "VernacExtend",
                        "97363a4963be1d5264e874472e1fbab428077aa4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Symmetry_of_Apart'",
            "line_nb": 71,
            "steps": [
                {
                    "command": [
                        "intros x y H'.",
                        "VernacExtend",
                        "88ac6800dbe81ee0042311fe3134d6c8111dc7cf"
                    ]
                },
                {
                    "command": [
                        "apply thm4_1c.",
                        "VernacExtend",
                        "eafbe4340ae27a4b507f367bd270bde6e2502af7"
                    ]
                },
                {
                    "command": [
                        "apply sym_DiPt; auto.",
                        "VernacExtend",
                        "d625f303958ff1b88ba5f62f2303d3039601f501"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "thm4_9a",
            "line_nb": 76,
            "steps": [
                {
                    "command": [
                        "intros x c H'.",
                        "VernacExtend",
                        "0f4e7af6969532e4f561159c708f578778e5f990"
                    ]
                },
                {
                    "command": [
                        "lapply (cmp_apt_diln (pt x) c (line1 x)); [ intro H'3; elim H'3; [ trivial | intro H'4; clear H'3 ] | idtac ]; trivial.",
                        "VernacExtend",
                        "ca51e5420c66561386133c6adfc206c45fbe4b7e"
                    ]
                },
                {
                    "command": [
                        "elim (inc_pt1 x); trivial.",
                        "VernacExtend",
                        "b8fbcfd00e07faca81801cb6ffe5fc1bd9304d5a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "thm4_9b",
            "line_nb": 81,
            "steps": [
                {
                    "command": [
                        "intros x c H'.",
                        "VernacExtend",
                        "0f4e7af6969532e4f561159c708f578778e5f990"
                    ]
                },
                {
                    "command": [
                        "lapply (cmp_apt_diln (pt x) c (line2 x)); [ intro H'3; elim H'3; [ trivial | intro H'4; clear H'3 ] | idtac ]; trivial.",
                        "VernacExtend",
                        "a23baf6cde157300b2a0155471a5ca3d9356f397"
                    ]
                },
                {
                    "command": [
                        "elim (inc_pt2 x); trivial.",
                        "VernacExtend",
                        "5d8bca331d6e91d908e8eff5503863cb1fd4a16f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "thm5_3",
            "line_nb": 86,
            "steps": [
                {
                    "command": [
                        "intros x y z; elim z; simpl in |- *.",
                        "VernacExtend",
                        "01ecfe3dcf4561fb6e946a908951c30ba335201b"
                    ]
                },
                {
                    "command": [
                        "intros line1 line2 Twol_cond H' H'0 H'1.",
                        "VernacExtend",
                        "bc52ac09bbe02a84f7e943029d5c191da9d0dc54"
                    ]
                },
                {
                    "command": [
                        "lapply (Convergent_imp_distinct line1 line2); trivial.",
                        "VernacExtend",
                        "d7fc1386607bd820aa47cb2acd4ffd1dde661dd1"
                    ]
                },
                {
                    "command": [
                        "intro H'2; red in |- *; red in |- *; red in |- *; intro H.",
                        "VernacExtend",
                        "f12763764385db916e66fc5332e970fecaa48a63"
                    ]
                },
                {
                    "command": [
                        "lapply (el_ax (Seg (pt (Twol line1 line2 Twol_cond)) (origin x) H) line1 line2); [ intro H'7 | trivial ].",
                        "VernacExtend",
                        "b432ad00d7a7f043da6caa9ee4998e4fb764ab8f"
                    ]
                },
                {
                    "command": [
                        "simpl in H'7.",
                        "VernacExtend",
                        "b0251778ec3773fd947dd3ee8e745742d8f38be9"
                    ]
                },
                {
                    "command": [
                        "elim H'7; clear H'7; (intro H'3; elim H'3; (clear H'3; intro H'4)).",
                        "VernacExtend",
                        "52aad25eab7cddf8f1491a2f6563d53b51586216"
                    ]
                },
                {
                    "command": [
                        "elim (inc_pt1 (Twol line1 line2 Twol_cond)); auto.",
                        "VernacExtend",
                        "397907778c55ad1d82a4a52621c8ebdf41643998"
                    ]
                },
                {
                    "command": [
                        "apply (inc_ln1 x); rewrite <- H'0; assumption.",
                        "VernacExtend",
                        "b601b63812c94fe7465540308c09062d9934968b"
                    ]
                },
                {
                    "command": [
                        "elim (inc_pt2 (Twol line1 line2 Twol_cond)); auto.",
                        "VernacExtend",
                        "9d5ccabd4e797b8a77342fc2d7a3f9d630ee4acf"
                    ]
                },
                {
                    "command": [
                        "apply (inc_ln1 y); rewrite <- H'1; rewrite <- H'; assumption.",
                        "VernacExtend",
                        "52634e5cb57d078caf02ed0c5d1604b147a9263a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "thm5_4",
            "line_nb": 99,
            "steps": [
                {
                    "command": [
                        "intros x y z; elim z; simpl in |- *.",
                        "VernacExtend",
                        "01ecfe3dcf4561fb6e946a908951c30ba335201b"
                    ]
                },
                {
                    "command": [
                        "intros origin extremity Seg_cond H' H'0 H'1.",
                        "VernacExtend",
                        "6dc3fe8ab81d3c16fdd421ebc4c3db29da09e8ed"
                    ]
                },
                {
                    "command": [
                        "red in |- *; red in |- *; red in |- *; intro H'2.",
                        "VernacExtend",
                        "adef1dbcbb7f8ec3a67870bc1f7413ab780f81d6"
                    ]
                },
                {
                    "command": [
                        "lapply (el_ax (Seg origin extremity Seg_cond) (ln (Seg origin extremity Seg_cond)) (line1 x)); [ intro H'7 | trivial ].",
                        "VernacExtend",
                        "17c63558e8adfc0b466a78c8e2555418aaea0c0d"
                    ]
                },
                {
                    "command": [
                        "simpl in H'7.",
                        "VernacExtend",
                        "b0251778ec3773fd947dd3ee8e745742d8f38be9"
                    ]
                },
                {
                    "command": [
                        "elim H'7; clear H'7; (intro H'3; elim H'3; (clear H'3; intro H'4)).",
                        "VernacExtend",
                        "52aad25eab7cddf8f1491a2f6563d53b51586216"
                    ]
                },
                {
                    "command": [
                        "elim (inc_ln1 (Seg origin extremity Seg_cond)); auto.",
                        "VernacExtend",
                        "e5e4a4e5520aad5d0af83fadb554510137f2f5de"
                    ]
                },
                {
                    "command": [
                        "elim (inc_ln2 (Seg origin extremity Seg_cond)); auto.",
                        "VernacExtend",
                        "0a530de0f37f79815a2c5d9ae923509f460f8f08"
                    ]
                },
                {
                    "command": [
                        "apply (inc_pt1 x); rewrite <- H'0; assumption.",
                        "VernacExtend",
                        "5b4876f1e412a1fe8ede164035c50764073431da"
                    ]
                },
                {
                    "command": [
                        "apply (inc_pt1 y); rewrite <- H'1; rewrite <- H'; assumption.",
                        "VernacExtend",
                        "086a944739e9fdd3afea2d8ea5e98861da3b8232"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "thm5_5",
            "line_nb": 111,
            "steps": [
                {
                    "command": [
                        "intros a b c H1 H2; apply Uniqueness_of_constructed_lines; simpl in |- *.",
                        "VernacExtend",
                        "353ca22b9220d5616535bfd3339c8379dc9be83c"
                    ]
                },
                {
                    "command": [
                        "exact (inc_ln1 (Seg a b H1)).",
                        "VernacExtend",
                        "58e08f3de61de25142f4279881ed0dc7e2f06329"
                    ]
                },
                {
                    "command": [
                        "generalize (inc_ln2 (Seg a b H1)); simpl in |- *; intro H'.",
                        "VernacExtend",
                        "3a183e181d08ec0979d32337c6c33843136e415a"
                    ]
                },
                {
                    "command": [
                        "apply cong_eqpt_inc with (a := b); trivial.",
                        "VernacExtend",
                        "b0f2f419a0c2824ae3d875ff9a365de69e5ea531"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "thm5_6",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "intros l m n H1 H2; apply Uniqueness_of_constructed_points; simpl in |- *.",
                        "VernacExtend",
                        "9a8b780eed80c56f8ba61b5d5b09ea6605a73be4"
                    ]
                },
                {
                    "command": [
                        "exact (inc_pt1 (Twol l m H1)).",
                        "VernacExtend",
                        "e2b9cc333e1d1cbe68a33e1de376c04c8b1354b5"
                    ]
                },
                {
                    "command": [
                        "generalize (inc_pt2 (Twol l m H1)); simpl in |- *; intro H'.",
                        "VernacExtend",
                        "1eb47d9b6835e4ee5368a0377b5f5fe82fa8dd82"
                    ]
                },
                {
                    "command": [
                        "apply cong_eqln_inc with (l := m); trivial.",
                        "VernacExtend",
                        "8f810f332e1375d2e1ff66e1ef80499f2259093a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}