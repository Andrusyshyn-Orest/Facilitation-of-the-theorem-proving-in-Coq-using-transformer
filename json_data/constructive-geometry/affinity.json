{
    "filename": "affinity.v",
    "coq_project": "constructive-geometry",
    "vernac_cmds": [
        [
            "Require Import basis.",
            "VernacRequire",
            "f2442ce68e5f87d75900cc79a1467e93cfa98c26"
        ],
        [
            "Require Import part1.",
            "VernacRequire",
            "2bf008786df95fbeffc5050eb7abfba29bc61ec5"
        ],
        [
            "Require Import part2.",
            "VernacRequire",
            "f08d38bbc5161f3275d8aafc8a5daf13e141c00e"
        ],
        [
            "Require Import part3.",
            "VernacRequire",
            "ef87b2792da14574db167587fe2c3038b51832f0"
        ],
        [
            "Axiom constructed_parallel : forall (l : Line) (a : Point), {l' : Line | Par l' l /\\ Incident a l'}.",
            "VernacAssumption",
            "1fe229b36fb5970773c3fe9fbe059f8250b19b29"
        ],
        [
            "Definition par : Line -> Point -> Line.",
            "VernacDefinition",
            "3ac9f3be3e879f2a4bd8115214a980aeea759965"
        ],
        [
            "intros l a; elim (constructed_parallel l a).",
            "VernacExtend",
            "438669d8e347acd00381cc0ce9802ddcfbdb3d23"
        ],
        [
            "intros x H; exact x.",
            "VernacExtend",
            "d213a5ee8f934f77b7079729e50eb215356940b1"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Axiom constructive_uniqueness_for_parallels : forall (l m : Line) (a : Point), DiLn l m -> (Apart a l \\/ Apart a m) \\/ ConLn l m.",
            "VernacAssumption",
            "6614ebb0dc6de5779ab4b476d5b1cbef0d9df030"
        ],
        [
            "Theorem Ax1_i : forall (l : Line) (a : Point), Par (par l a) l.",
            "VernacStartTheoremProof",
            "1069d2cda90226b3a36825e4951212bbb151bbc5"
        ],
        [
            "intros l a.",
            "VernacExtend",
            "547900bde8e1b495760a43792458cd7cff66a0c5"
        ],
        [
            "unfold par at 1 in |- *.",
            "VernacExtend",
            "dbff3fa5b9b410f5d6ca04c89856d495d9329e8b"
        ],
        [
            "elim (constructed_parallel l a).",
            "VernacExtend",
            "fffc7dc79224420d1f547154c32d4628326a25b0"
        ],
        [
            "simpl in |- *; tauto.",
            "VernacExtend",
            "2c27d7b56602355c3ed4605e551cd6a88509ac37"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Ax1_ii : forall (l : Line) (a : Point), Incident a (par l a).",
            "VernacStartTheoremProof",
            "bd206600566d7f519ce08625c1b44cdc75953ac4"
        ],
        [
            "intros l a.",
            "VernacExtend",
            "547900bde8e1b495760a43792458cd7cff66a0c5"
        ],
        [
            "unfold par at 1 in |- *.",
            "VernacExtend",
            "dbff3fa5b9b410f5d6ca04c89856d495d9329e8b"
        ],
        [
            "elim (constructed_parallel l a).",
            "VernacExtend",
            "fffc7dc79224420d1f547154c32d4628326a25b0"
        ],
        [
            "simpl in |- *; tauto.",
            "VernacExtend",
            "2c27d7b56602355c3ed4605e551cd6a88509ac37"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Ax1_i Ax1_ii.",
            "VernacHints",
            "9baca81d4036148868d49770207e5c691ed725d7"
        ],
        [
            "Theorem thm7_1 : forall (l m : Line) (a : Point), Incident a l /\\ Par l m -> EqLn l (par m a).",
            "VernacStartTheoremProof",
            "cc40c75e5f902d73bd262af8d1ae309ca665b4aa"
        ],
        [
            "intros l m a H'; elim H'; intros H'0 H'1; try exact H'1; clear H'.",
            "VernacExtend",
            "b113162f3784864414756bc2f1c946c450701ca9"
        ],
        [
            "generalize (Ax1_i m a); intro H'2.",
            "VernacExtend",
            "8319d056c5cde5bcdd8c3a2dc0da3d768d3cda0b"
        ],
        [
            "elim equiv_Par.",
            "VernacExtend",
            "b8b0c3869bd3e763b65e189a4fce491fdec29a1e"
        ],
        [
            "intros H'3 H'4 H'5.",
            "VernacExtend",
            "0df4522ccee953a2148c79730b94fac8d576ebcd"
        ],
        [
            "red in H'5.",
            "VernacExtend",
            "4d1a46c965c754290cc387bb682c9386889049b0"
        ],
        [
            "assert (H'8 := H'5 (par m a) m l); lapply H'8; [ intro H'9; lapply H'9; [ intro H'10; clear H'9 H'8 | clear H'9 H'8 ] | clear H'8 ]; auto.",
            "VernacExtend",
            "49c2b287f306617e1fd9ffafacb205e741cc46c5"
        ],
        [
            "red in |- *; red in |- *; red in |- *; intro H'6.",
            "VernacExtend",
            "ea11ab5aa5db02ea91308e99cb8b99d148e67e9d"
        ],
        [
            "lapply (constructive_uniqueness_for_parallels l (par m a) a); [ intro H'11 | assumption ].",
            "VernacExtend",
            "2290cbbf6e37ef11b559994fd83197f742af240f"
        ],
        [
            "elim H'11; [ intro H'; elim H'; [ idtac | intro H'7; clear H' H'11 ] | idtac ]; auto.",
            "VernacExtend",
            "ffd5c60fd6c0f2d48b5e311c44640712b9411529"
        ],
        [
            "elim (Ax1_ii m a); auto.",
            "VernacExtend",
            "9b6e78ddec0dfb80099fd1b3cc9e186077f78325"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve thm7_1.",
            "VernacHints",
            "4ffa0874829768b333424bdc0a347a9237275bf0"
        ],
        [
            "Theorem thm7_3 : forall (l m : Line) (a : Point), Incident a l -> Incident a m -> Par l m -> EqLn l m.",
            "VernacStartTheoremProof",
            "4258fdf8ab1d5338ca8fed9d5a106c493b4ad40c"
        ],
        [
            "elim equiv_EqLn.",
            "VernacExtend",
            "9671a38a53fd09cd803aca98784bcd2a8a0877d1"
        ],
        [
            "intros H' H'0 H'1 l m a H'2 H'3 H'4.",
            "VernacExtend",
            "42bbed45312024e0ce25c19882f751c0632b57ab"
        ],
        [
            "unfold Transitive at 1 in H'1.",
            "VernacExtend",
            "723aaf240b39cff1db17a798bd598fa4bc1915ae"
        ],
        [
            "apply H'1 with (y := par m a); auto.",
            "VernacExtend",
            "fc6d0fc75e05a227b44bc79ed94c23173da97ac7"
        ],
        [
            "apply H'0.",
            "VernacExtend",
            "f1f7d253c59fe30c9977766a215126b9faf09097"
        ],
        [
            "elim equiv_Par; auto.",
            "VernacExtend",
            "68a07da65170e2f79fdf582e5ebcfb3bbe1d2d28"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem thm7_4 : forall (l m n : Line) (a : Point), Apart a l -> Incident a m -> Incident a n -> Par n l -> Par m l -> EqLn m n.",
            "VernacStartTheoremProof",
            "ba0b994666a7e09c4d14bb30440dcbc1921870d1"
        ],
        [
            "intros l m n a H' H'0 H'1 H'2 H'3; try assumption.",
            "VernacExtend",
            "4995cb8e2fd0ac864c9b2c106c242710d66d5554"
        ],
        [
            "apply thm7_3 with (a := a); auto.",
            "VernacExtend",
            "354643f0bf23c49481465ebf3f86a19bd0aff28e"
        ],
        [
            "elim equiv_Par.",
            "VernacExtend",
            "b8b0c3869bd3e763b65e189a4fce491fdec29a1e"
        ],
        [
            "intros H'4 H'5 H'6; red in H'6.",
            "VernacExtend",
            "f5900ffda5d79264bcc41be80681bdb947398947"
        ],
        [
            "apply H'6 with (y := l); auto.",
            "VernacExtend",
            "83e3e8ba595bbabbf4a0a613ae1941b4442dbf61"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem DiLn_qimp_con : forall l m : Line, DiLn l m -> ex (fun b : Point => Incident b l /\\ Incident b m) -> ConLn l m.",
            "VernacStartTheoremProof",
            "7c404a2a7e506592bd0c4cf74e0904a342b47541"
        ],
        [
            "unfold Incident, Negation in |- *.",
            "VernacExtend",
            "3bdc308c7b91d66451c82e2d681cb07f3eaea755"
        ],
        [
            "intros l m H' H'0; elim H'0; intros b E; elim E; intros H'1 H'2; clear E H'0.",
            "VernacExtend",
            "0d777c110818d735d623a08ce8a618accacaca49"
        ],
        [
            "lapply (constructive_uniqueness_for_parallels l m b); [ intro H'5 | trivial ].",
            "VernacExtend",
            "1d7efa64ef907f4865d7b6729178396c01c7970f"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem strict_parallel : forall (a : Point) (l : Line), Apart a l -> DiLn l (par l a).",
            "VernacStartTheoremProof",
            "7d2d1b963529ed75ccc0ece6066f49c73fb68079"
        ],
        [
            "intros a l H'.",
            "VernacExtend",
            "320e248a1ffce57c7ebcb270ad3c3cc3c47d037b"
        ],
        [
            "lapply (cmp_apt_diln a l (par l a)); [ intro H'3 | trivial ].",
            "VernacExtend",
            "2b5c1fadf02cd8033813e0ba5fafe3015b8532d7"
        ],
        [
            "elim H'3; [ trivial | intro H'0; clear H'3 ].",
            "VernacExtend",
            "2dca4b71eebdf8e5de4c3e276c87f3518ee271eb"
        ],
        [
            "elim (Ax1_ii l a); auto.",
            "VernacExtend",
            "a2e8a30724dceed26bbc909212c65299f5239247"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve strict_parallel.",
            "VernacHints",
            "51bef2abb186058201300e9c7fcc936d08f6c0a5"
        ],
        [
            "Theorem spar : forall (a : Point) (l : Line), Apart a l -> SPar l (par l a).",
            "VernacStartTheoremProof",
            "27375dbc9fbbbc9d395d0feff10352207a68211d"
        ],
        [
            "intros a l H'; red in |- *; auto.",
            "VernacExtend",
            "e66403cb7d881f7408a6f223b44e31d771dd187a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve spar.",
            "VernacHints",
            "eada6f9755d7d39b78c3cb48c97bde75a1573894"
        ]
    ],
    "proofs": [
        {
            "name": "par",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros l a; elim (constructed_parallel l a).",
                        "VernacExtend",
                        "438669d8e347acd00381cc0ce9802ddcfbdb3d23"
                    ]
                },
                {
                    "command": [
                        "intros x H; exact x.",
                        "VernacExtend",
                        "d213a5ee8f934f77b7079729e50eb215356940b1"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Ax1_i",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "intros l a.",
                        "VernacExtend",
                        "547900bde8e1b495760a43792458cd7cff66a0c5"
                    ]
                },
                {
                    "command": [
                        "unfold par at 1 in |- *.",
                        "VernacExtend",
                        "dbff3fa5b9b410f5d6ca04c89856d495d9329e8b"
                    ]
                },
                {
                    "command": [
                        "elim (constructed_parallel l a).",
                        "VernacExtend",
                        "fffc7dc79224420d1f547154c32d4628326a25b0"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; tauto.",
                        "VernacExtend",
                        "2c27d7b56602355c3ed4605e551cd6a88509ac37"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ax1_ii",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "intros l a.",
                        "VernacExtend",
                        "547900bde8e1b495760a43792458cd7cff66a0c5"
                    ]
                },
                {
                    "command": [
                        "unfold par at 1 in |- *.",
                        "VernacExtend",
                        "dbff3fa5b9b410f5d6ca04c89856d495d9329e8b"
                    ]
                },
                {
                    "command": [
                        "elim (constructed_parallel l a).",
                        "VernacExtend",
                        "fffc7dc79224420d1f547154c32d4628326a25b0"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; tauto.",
                        "VernacExtend",
                        "2c27d7b56602355c3ed4605e551cd6a88509ac37"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "thm7_1",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "intros l m a H'; elim H'; intros H'0 H'1; try exact H'1; clear H'.",
                        "VernacExtend",
                        "b113162f3784864414756bc2f1c946c450701ca9"
                    ]
                },
                {
                    "command": [
                        "generalize (Ax1_i m a); intro H'2.",
                        "VernacExtend",
                        "8319d056c5cde5bcdd8c3a2dc0da3d768d3cda0b"
                    ]
                },
                {
                    "command": [
                        "elim equiv_Par.",
                        "VernacExtend",
                        "b8b0c3869bd3e763b65e189a4fce491fdec29a1e"
                    ]
                },
                {
                    "command": [
                        "intros H'3 H'4 H'5.",
                        "VernacExtend",
                        "0df4522ccee953a2148c79730b94fac8d576ebcd"
                    ]
                },
                {
                    "command": [
                        "red in H'5.",
                        "VernacExtend",
                        "4d1a46c965c754290cc387bb682c9386889049b0"
                    ]
                },
                {
                    "command": [
                        "assert (H'8 := H'5 (par m a) m l); lapply H'8; [ intro H'9; lapply H'9; [ intro H'10; clear H'9 H'8 | clear H'9 H'8 ] | clear H'8 ]; auto.",
                        "VernacExtend",
                        "49c2b287f306617e1fd9ffafacb205e741cc46c5"
                    ]
                },
                {
                    "command": [
                        "red in |- *; red in |- *; red in |- *; intro H'6.",
                        "VernacExtend",
                        "ea11ab5aa5db02ea91308e99cb8b99d148e67e9d"
                    ]
                },
                {
                    "command": [
                        "lapply (constructive_uniqueness_for_parallels l (par m a) a); [ intro H'11 | assumption ].",
                        "VernacExtend",
                        "2290cbbf6e37ef11b559994fd83197f742af240f"
                    ]
                },
                {
                    "command": [
                        "elim H'11; [ intro H'; elim H'; [ idtac | intro H'7; clear H' H'11 ] | idtac ]; auto.",
                        "VernacExtend",
                        "ffd5c60fd6c0f2d48b5e311c44640712b9411529"
                    ]
                },
                {
                    "command": [
                        "elim (Ax1_ii m a); auto.",
                        "VernacExtend",
                        "9b6e78ddec0dfb80099fd1b3cc9e186077f78325"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "thm7_3",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "elim equiv_EqLn.",
                        "VernacExtend",
                        "9671a38a53fd09cd803aca98784bcd2a8a0877d1"
                    ]
                },
                {
                    "command": [
                        "intros H' H'0 H'1 l m a H'2 H'3 H'4.",
                        "VernacExtend",
                        "42bbed45312024e0ce25c19882f751c0632b57ab"
                    ]
                },
                {
                    "command": [
                        "unfold Transitive at 1 in H'1.",
                        "VernacExtend",
                        "723aaf240b39cff1db17a798bd598fa4bc1915ae"
                    ]
                },
                {
                    "command": [
                        "apply H'1 with (y := par m a); auto.",
                        "VernacExtend",
                        "fc6d0fc75e05a227b44bc79ed94c23173da97ac7"
                    ]
                },
                {
                    "command": [
                        "apply H'0.",
                        "VernacExtend",
                        "f1f7d253c59fe30c9977766a215126b9faf09097"
                    ]
                },
                {
                    "command": [
                        "elim equiv_Par; auto.",
                        "VernacExtend",
                        "68a07da65170e2f79fdf582e5ebcfb3bbe1d2d28"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "thm7_4",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "intros l m n a H' H'0 H'1 H'2 H'3; try assumption.",
                        "VernacExtend",
                        "4995cb8e2fd0ac864c9b2c106c242710d66d5554"
                    ]
                },
                {
                    "command": [
                        "apply thm7_3 with (a := a); auto.",
                        "VernacExtend",
                        "354643f0bf23c49481465ebf3f86a19bd0aff28e"
                    ]
                },
                {
                    "command": [
                        "elim equiv_Par.",
                        "VernacExtend",
                        "b8b0c3869bd3e763b65e189a4fce491fdec29a1e"
                    ]
                },
                {
                    "command": [
                        "intros H'4 H'5 H'6; red in H'6.",
                        "VernacExtend",
                        "f5900ffda5d79264bcc41be80681bdb947398947"
                    ]
                },
                {
                    "command": [
                        "apply H'6 with (y := l); auto.",
                        "VernacExtend",
                        "83e3e8ba595bbabbf4a0a613ae1941b4442dbf61"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "DiLn_qimp_con",
            "line_nb": 51,
            "steps": [
                {
                    "command": [
                        "unfold Incident, Negation in |- *.",
                        "VernacExtend",
                        "3bdc308c7b91d66451c82e2d681cb07f3eaea755"
                    ]
                },
                {
                    "command": [
                        "intros l m H' H'0; elim H'0; intros b E; elim E; intros H'1 H'2; clear E H'0.",
                        "VernacExtend",
                        "0d777c110818d735d623a08ce8a618accacaca49"
                    ]
                },
                {
                    "command": [
                        "lapply (constructive_uniqueness_for_parallels l m b); [ intro H'5 | trivial ].",
                        "VernacExtend",
                        "1d7efa64ef907f4865d7b6729178396c01c7970f"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "strict_parallel",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "intros a l H'.",
                        "VernacExtend",
                        "320e248a1ffce57c7ebcb270ad3c3cc3c47d037b"
                    ]
                },
                {
                    "command": [
                        "lapply (cmp_apt_diln a l (par l a)); [ intro H'3 | trivial ].",
                        "VernacExtend",
                        "2b5c1fadf02cd8033813e0ba5fafe3015b8532d7"
                    ]
                },
                {
                    "command": [
                        "elim H'3; [ trivial | intro H'0; clear H'3 ].",
                        "VernacExtend",
                        "2dca4b71eebdf8e5de4c3e276c87f3518ee271eb"
                    ]
                },
                {
                    "command": [
                        "elim (Ax1_ii l a); auto.",
                        "VernacExtend",
                        "a2e8a30724dceed26bbc909212c65299f5239247"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "spar",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "intros a l H'; red in |- *; auto.",
                        "VernacExtend",
                        "e66403cb7d881f7408a6f223b44e31d771dd187a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}