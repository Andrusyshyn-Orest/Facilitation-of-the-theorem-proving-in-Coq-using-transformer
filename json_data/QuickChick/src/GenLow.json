{
    "filename": "src/GenLow.v",
    "coq_project": "QuickChick",
    "vernac_cmds": [
        [
            "Set Warnings \"-extraction-opaque-accessed,-extraction\".",
            "VernacSetOption",
            "0d9ccca50d6f2e2dcc602566ab5a0ab4e16fd208"
        ],
        [
            "Set Warnings \"-notation-overridden,-parsing\".",
            "VernacSetOption",
            "e5f1121c0752b2fa1e608a6680bad33b020316a3"
        ],
        [
            "Require Import ZArith List.",
            "VernacRequire",
            "9cff41dd2fcd1db2a6cc609313d460f8c1c36673"
        ],
        [
            "Require Import mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "85e251063dc2b5a9653f7bb76dcd176ed36b42a9"
        ],
        [
            "From mathcomp Require Import ssrfun ssrbool ssrnat.",
            "VernacRequire",
            "96ef3830637b05135472a2aa5654a388421ed742"
        ],
        [
            "Require Import Numbers.BinNums.",
            "VernacRequire",
            "9628016db4bf754afc9702f6a53504bea80c7dd3"
        ],
        [
            "Require Import Classes.RelationClasses.",
            "VernacRequire",
            "859f0a8385adf9a2f813b409fd35d026829ffbc0"
        ],
        [
            "From ExtLib.Structures Require Export Monads.",
            "VernacRequire",
            "765ad5eefcb861e6c02c030c5dce826883454d93"
        ],
        [
            "From ExtLib.Structures Require Import Functor Applicative.",
            "VernacRequire",
            "c97b14cd41a560560b1b5ed06a3c066e60faa08d"
        ],
        [
            "Import MonadNotation.",
            "VernacImport",
            "b2fad3b56c7f1007d10b6d3cda77e74e6da50f59"
        ],
        [
            "Open Scope monad_scope.",
            "VernacOpenCloseScope",
            "c4c2904764180bec8e2cf2c4c70e7893d2086835"
        ],
        [
            "From QuickChick Require Import GenLowInterface RandomQC RoseTrees Sets Tactics.",
            "VernacRequire",
            "48ac6685e0d4597b670e8eeec9a617581e205660"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Set Bullet Behavior \"Strict Subproofs\".",
            "VernacSetOption",
            "2f48a6a957bc407939a01b772051438c4013f99b"
        ],
        [
            "Import ListNotations.",
            "VernacImport",
            "52647db2a3b752153a8cbd37039246f200bccdee"
        ],
        [
            "Open Scope fun_scope.",
            "VernacOpenCloseScope",
            "e1ee39f80bc184ef30030f33fdee416a82fd06cd"
        ],
        [
            "Open Scope set_scope.",
            "VernacOpenCloseScope",
            "417be06cab40feb6c94f908d49fb1ba5a4a04ab7"
        ],
        [
            "Module GenLow : GenLowInterface.Sig.",
            "VernacDefineModule",
            "f97506517f272ca5a7805cc402da6a57266fb323"
        ],
        [
            "Inductive GenType (A:Type) : Type := MkGen : (nat -> RandomSeed -> A) -> GenType A.",
            "VernacInductive",
            "9df2f591534805f3b9b6141f8ddc90d27fb7bfd6"
        ],
        [
            "Definition G := GenType.",
            "VernacDefinition",
            "7e9560e0a11771a1090332e9531af968419133fe"
        ],
        [
            "Definition run {A : Type} (g : G A) := match g with MkGen f => f end.",
            "VernacDefinition",
            "8e9e8daafe54423738c2f81edaa97c5395f800dd"
        ],
        [
            "Definition returnGen {A : Type} (x : A) : G A := MkGen (fun _ _ => x).",
            "VernacDefinition",
            "35601be3469aa25445fc76742e370ba29e1de6b2"
        ],
        [
            "Definition bindGen {A B : Type} (g : G A) (k : A -> G B) : G B := MkGen (fun n r => let (r1,r2) := randomSplit r in run (k (run g n r1)) n r2).",
            "VernacDefinition",
            "0cc4ccbc22837f26b82b3caa40559f54a9e3e090"
        ],
        [
            "Definition fmap {A B : Type} (f : A -> B) (g : G A) : G B := MkGen (fun n r => f (run g n r)).",
            "VernacDefinition",
            "4d4862aed5b6e1bcce4bc63ed1b4d42559054a33"
        ],
        [
            "Definition apGen {A B} (gf : G (A -> B)) (gg : G A) : G B := bindGen gf (fun f => fmap f gg).",
            "VernacDefinition",
            "c3536bd9c2be132f1cd2272c4ebe450943af9c33"
        ],
        [
            "Definition sized {A : Type} (f : nat -> G A) : G A := MkGen (fun n r => run (f n) n r).",
            "VernacDefinition",
            "c308079a578715633b6d288d2c4759257414afb1"
        ],
        [
            "Definition resize {A : Type} (n : nat) (g : G A) : G A := match g with | MkGen m => MkGen (fun _ => m n) end.",
            "VernacDefinition",
            "e6032611baea224bb18d27d8839858ab7a238d59"
        ],
        [
            "Definition promote {A : Type} (m : Rose (G A)) : G (Rose A) := MkGen (fun n r => fmapRose (fun g => run g n r) m).",
            "VernacDefinition",
            "e6b20db528cbd7fccbae5c0a587596026f50df9b"
        ],
        [
            "Fixpoint rnds (s : RandomSeed) (n' : nat) : list RandomSeed := match n' with | O => nil | S n'' => let (s1, s2) := randomSplit s in cons s1 (rnds s2 n'') end.",
            "VernacFixpoint",
            "c4a12b18c7183d7c7f842323268d2f511e0164de"
        ],
        [
            "Fixpoint createRange (n : nat) (acc : list nat) : list nat := match n with | O => List.rev (cons O acc) | S n' => createRange n' (cons n acc) end.",
            "VernacFixpoint",
            "4cbbf0031b9036b7926668830a0d0b91dadec233"
        ],
        [
            "Definition choose {A : Type} `{ChoosableFromInterval A} (range : A * A) : G A := MkGen (fun _ r => fst (randomR range r)).",
            "VernacDefinition",
            "c39b014bd0031a4d14236c7abd5215d40932031b"
        ],
        [
            "Definition sample (A : Type) (g : G A) : list A := match g with | MkGen m => let rnd := newRandomSeed in let l := List.combine (rnds rnd 20) (createRange 10 nil) in List.map (fun (p : RandomSeed * nat) => let (r,n) := p in m n r) l end.",
            "VernacDefinition",
            "3d6bd6000a3dcb1cddf78ab30c13f85aad7fe46c"
        ],
        [
            "Definition variant {A : Type} (p : SplitPath) (g : G A) : G A := match g with | MkGen f => MkGen (fun n r => f n (varySeed p r)) end.",
            "VernacDefinition",
            "f70fc8ffcbc019e27d9276a7d6698e2956d7c52b"
        ],
        [
            "Definition reallyUnsafeDelay {A : Type} : G (G A -> A) := MkGen (fun r n g => (match g with MkGen f => f r n end)).",
            "VernacDefinition",
            "11676cc354b42edebc25d4fd9fa67bdd9a64abd0"
        ],
        [
            "Definition reallyUnsafePromote {r A : Type} (m : r -> G A) : G (r -> A) := (bindGen reallyUnsafeDelay (fun eval => returnGen (fun r => eval (m r)))).",
            "VernacDefinition",
            "419dbf3b1cf0c017866f482c6e3bea3b603e31c9"
        ],
        [
            "Definition semGenSize {A : Type} (g : G A) (s : nat) : set A := codom (run g s).",
            "VernacDefinition",
            "6d947163ec59b435f9164aa1ba609833dfe4697b"
        ],
        [
            "Definition semGen {A : Type} (g : G A) : set A := \\bigcup_s semGenSize g s.",
            "VernacDefinition",
            "f3bba0d2ed2fb1ef7936f433831ec935dae01e14"
        ],
        [
            "Definition semGenSizeOpt {A : Type} (g : G (option A)) (s : nat) : set A := somes (semGenSize g s).",
            "VernacDefinition",
            "9fec1f9944ccc69f2a532b3a0dc4808eb015d46c"
        ],
        [
            "Definition semGenOpt {A : Type} (g : G (option A)) : set A := somes (semGen g).",
            "VernacDefinition",
            "7135aebf7dcfd4d1799c9ed8bc4065e434638024"
        ],
        [
            "Lemma semGenOpt_equiv {A} (g : G (option A)) : semGenOpt g <--> \\bigcup_s semGenSizeOpt g s.",
            "VernacStartTheoremProof",
            "f9a635136659c44bb726e4951b48f76aeb667221"
        ],
        [
            "split; intros [n [Hn [t H]]]; (exists n; split; [constructor | exists t; auto]).",
            "VernacExtend",
            "45758840965a14e9069dcbddc8d89fe2b7f5eefd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bindGen_aux {A : Type} (g : G A) (n : nat) (r : RandomSeed) : semGen g (run g n r).",
            "VernacStartTheoremProof",
            "8985cdf19bdd0f48b3a6f87e9d2d2d55dc8ac239"
        ],
        [
            "unfold semGen, semGenSize, codom, bigcup.",
            "VernacExtend",
            "e18a842280b73a8bd055c08af07e08df93d11b58"
        ],
        [
            "exists n; split => //=.",
            "VernacExtend",
            "9b48c5543deec4c869b7587798613789034f253c"
        ],
        [
            "exists r; auto.",
            "VernacExtend",
            "6c115d61b7b2a121c5d8ff8967a21754335dd08a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition bindGen' {A B : Type} (g : G A) (k : forall (a : A), (a \\in semGen g) -> G B) : G B := MkGen (fun n r => let (r1,r2) := randomSplit r in run (k (run g n r1) (bindGen_aux g n r1)) n r2).",
            "VernacDefinition",
            "10a118cb27477e40b2662b3ac867fa14094db06e"
        ],
        [
            "Class Unsized {A} (g : G A) := unsized : forall s1 s2, semGenSize g s1 <--> semGenSize g s2.",
            "VernacInductive",
            "48a224b244ace61918ca9dda0e1c69a67c7c6ef2"
        ],
        [
            "Class SizedMonotonic {A} (g : nat -> G A) := sizeMonotonic : forall s s1 s2, s1 <= s2 -> semGenSize (g s1) s \\subset semGenSize (g s2) s.",
            "VernacInductive",
            "fe84b1941fd411ddb6b4a05e9baf2228e3d08f1a"
        ],
        [
            "Class SizedMonotonicOpt {A} (g : nat -> G (option A)) := sizeMonotonicOpt : forall s s1 s2, s1 <= s2 -> semGenSizeOpt (g s1) s \\subset semGenSizeOpt (g s2) s.",
            "VernacInductive",
            "2cdc3edc7f29a6ebe43ef41ed59bba13c8d0316e"
        ],
        [
            "Class SizeMonotonic {A} (g : G A) := monotonic : forall s1 s2, s1 <= s2 -> semGenSize g s1 \\subset semGenSize g s2.",
            "VernacInductive",
            "c1f9304d065717fc4d915b978124f6d80e3adcf5"
        ],
        [
            "Class SizeMonotonicOpt {A} (g : G (option A)) := monotonicOpt : forall s1 s2, s1 <= s2 -> semGenSizeOpt g s1 \\subset semGenSizeOpt g s2.",
            "VernacInductive",
            "082fa7fed0fd22de5710f3421cc4f32533bf547f"
        ],
        [
            "Class SizeAntiMonotonicNone {A} (g : G (option A)) := monotonicNone : forall s1 s2, s1 <= s2 -> isNone :&: semGenSize g s2 \\subset isNone :&: semGenSize g s1.",
            "VernacInductive",
            "9ea949eec2bd99f92f3be0125baf9235e2a7e0a3"
        ],
        [
            "Lemma unsizedMonotonic {A} (g : G A) : Unsized g -> SizeMonotonic g.",
            "VernacStartTheoremProof",
            "d89010683c40e4513d264642890d4d8f9607e84c"
        ],
        [
            "intros s1 s2 Hleq.",
            "VernacExtend",
            "da266b6f10b8101960f2fa39526a47d3a6381854"
        ],
        [
            "rewrite /unsized /monotonic => a H12.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply unsized.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unsized_alt_def : forall A (g : G A) `{Unsized _ g}, forall s, semGenSize g s <--> semGen g.",
            "VernacStartTheoremProof",
            "df888eb16a1ed4ad84e899633331e89ee3ddf47e"
        ],
        [
            "move => A f H s a.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "move => H'.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists s.",
            "VernacExtend",
            "9ece244071006cc9d8ee4c8b2b1890689cc4fa6f"
        ],
        [
            "split; auto => //.",
            "VernacExtend",
            "6bff1d22f26f73e2af6bbb2e9c65e0bfad7c6104"
        ],
        [
            "move => [s' [_ H']].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "eapply unsized; eauto.",
            "VernacExtend",
            "103505bb9edfd3f1582e8492a5a97363eaac4e96"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semReturn {A} (x : A) : semGen (returnGen x) <--> [set x].",
            "VernacStartTheoremProof",
            "d470b151d3070374d1ff86abf58e760a4ffc6766"
        ],
        [
            "rewrite /semGen /semGenSize /= bigcup_const ?codom_const //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact: randomSeed_inhabited.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "by do 2! constructor.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semReturnSize A (x : A) (s : nat) : semGenSize (returnGen x) s <--> [set x].",
            "VernacStartTheoremProof",
            "c4df7ec558c88f541912cec1482699a5bd4ab487"
        ],
        [
            "unfold semGenSize.",
            "VernacExtend",
            "c1e2af1e22187dd21f57e4f810e190ee7bd903f1"
        ],
        [
            "rewrite codom_const; [ reflexivity | apply randomSeed_inhabited ].",
            "VernacExtend",
            "f90e43543f21e813417750a9224e1edd82fb9a6c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance unsizedReturn {A} (x : A) : Unsized (returnGen x).",
            "VernacInstance",
            "44177f10c171ff9b4c3696cc8319b935236ddfb5"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance returnGenSizeMonotonic {A} (x : A) : SizeMonotonic (returnGen x).",
            "VernacInstance",
            "86844daea9baf7e405639c9e1e84b82ec38cca60"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance returnGenSizeMonotonicOpt {A} (x : option A) : SizeMonotonicOpt (returnGen x).",
            "VernacInstance",
            "5f679a6cce0ff0b0637b84b29ac8ff9aa0fed5cc"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semBindSize A B (g : G A) (f : A -> G B) (s : nat) : semGenSize (bindGen g f) s <--> \\bigcup_(a in semGenSize g s) semGenSize (f a) s.",
            "VernacStartTheoremProof",
            "36fcb79b125af148780282b6df12cef55b69ca8c"
        ],
        [
            "rewrite /semGenSize /bindGen /= bigcup_codom -curry_codom2l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -[codom (prod_curry _)]imsetT -randomSplit_codom -codom_comp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semBindSize_subset_compat {A B : Type} (g g' : G A) (f f' : A -> G B) : (forall s, semGenSize g s \\subset semGenSize g' s) -> (forall x s, semGenSize (f x) s \\subset semGenSize (f' x) s) -> (forall s, semGenSize (bindGen g f) s \\subset semGenSize (bindGen g' f') s).",
            "VernacStartTheoremProof",
            "d6ba134afad4c9fad5938c20a3c4365179fcff3f"
        ],
        [
            "intros H1 H2 s.",
            "VernacExtend",
            "1ce264eb42841f4d98b49a199a436e151f220d57"
        ],
        [
            "rewrite !semBindSize.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "eapply subset_trans.",
            "VernacExtend",
            "7b7c401c28a0523bf2c32ab44aa58624ec32fedb"
        ],
        [
            "eapply incl_bigcupl.",
            "VernacExtend",
            "8df2a185b5e91336ac345307684ffe8bcc306b24"
        ],
        [
            "eapply H1.",
            "VernacExtend",
            "825143ff5ea05ac2ed1d4eae976364feb9c3ba1e"
        ],
        [
            "eapply incl_bigcupr.",
            "VernacExtend",
            "5572f0848d249879412f43d5e0b7417728abac14"
        ],
        [
            "intros; eapply H2.",
            "VernacExtend",
            "aa521fa2baeba7f7981396fc1b083c6f5d968088"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semBindSizeOpt_subset_compat {A B : Type} (g g' : G A) (f f' : A -> G (option B)) : (forall s, semGenSize g s \\subset semGenSize g' s) -> (forall x s, isSome :&: semGenSize (f x) s \\subset isSome :&: semGenSize (f' x) s) -> (forall s, isSome :&: semGenSize (bindGen g f) s \\subset isSome :&: semGenSize (bindGen g' f') s).",
            "VernacStartTheoremProof",
            "1825a7bef286f715d3075f83765b730567d9e350"
        ],
        [
            "intros H1 H2 s.",
            "VernacExtend",
            "1ce264eb42841f4d98b49a199a436e151f220d57"
        ],
        [
            "rewrite !semBindSize.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "eapply subset_trans.",
            "VernacExtend",
            "7b7c401c28a0523bf2c32ab44aa58624ec32fedb"
        ],
        [
            "eapply setI_subset_compat.",
            "VernacExtend",
            "ccb598e641fc80525988c799249a445b2d9a0adb"
        ],
        [
            "eapply subset_refl.",
            "VernacExtend",
            "6729b0dbd4870d65b0e1d8fb8a4c5592d69f78fa"
        ],
        [
            "eapply incl_bigcupl.",
            "VernacExtend",
            "8df2a185b5e91336ac345307684ffe8bcc306b24"
        ],
        [
            "eapply H1.",
            "VernacExtend",
            "825143ff5ea05ac2ed1d4eae976364feb9c3ba1e"
        ],
        [
            "rewrite !setI_bigcup_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "eapply incl_bigcupr.",
            "VernacExtend",
            "5572f0848d249879412f43d5e0b7417728abac14"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply H2.",
            "VernacExtend",
            "3ca0999137ea3173dce632ad69d798e6843387bd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma monad_leftid A B (a : A) (f : A -> G B) : semGen (bindGen (returnGen a) f) <--> semGen (f a).",
            "VernacStartTheoremProof",
            "e972a73523e96b2d0ebca6d81109be917717849e"
        ],
        [
            "by apply: eq_bigcupr => size; rewrite semBindSize semReturnSize bigcup_set1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma monad_rightid A (g : G A) : semGen (bindGen g returnGen) <--> semGen g.",
            "VernacStartTheoremProof",
            "21460c63848e02245291ce09113501989810163e"
        ],
        [
            "apply: eq_bigcupr => size; rewrite semBindSize.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite (eq_bigcupr _ (fun x => semReturnSize x size)) /semGenSize bigcup_codom codomE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma monad_assoc A B C (ga : G A) (fb : A -> G B) (fc : B -> G C) : semGen (bindGen (bindGen ga fb) fc) <--> semGen (bindGen ga (fun a => bindGen (fb a) fc)).",
            "VernacStartTheoremProof",
            "e61a6bff6b53ce2a933f8d8051b7311f72f00476"
        ],
        [
            "apply eq_bigcupr => ?; rewrite !semBindSize ?bigcup_flatten.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "by apply eq_bigcupr => ?; rewrite !semBindSize ?bigcup_flatten.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance bindUnsized {A B} (g : G A) (f : A -> G B) `{Unsized _ g} `{forall x, Unsized (f x)} : Unsized (bindGen g f).",
            "VernacInstance",
            "edd6fc99dfa94046632504559622db594d8dd87e"
        ],
        [
            "intros s1 s2.",
            "VernacExtend",
            "e41e36f8873f6a66fd611cc257aafb8e34cc695d"
        ],
        [
            "rewrite !semBindSize !unsized_alt_def.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move => b.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "split; move => [a [H1 H2]]; exists a; split => //; by eapply unsized; eauto.",
            "VernacExtend",
            "403e1065ada3694a903ff8ff83c4743cb3ca0a18"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance bindMonotonic {A B} (g : G A) (f : A -> G B) `{SizeMonotonic _ g} `{forall x, SizeMonotonic (f x)} : SizeMonotonic (bindGen g f).",
            "VernacInstance",
            "8d80447281dcd7f16e3095cc63825b2ec3b5cca8"
        ],
        [
            "intros s1 s2 Hs.",
            "VernacExtend",
            "58263317bcafa7670dfef4ad231dd01e88ebd64b"
        ],
        [
            "rewrite !semBindSize.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move => b.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move => [a [H3 H4]]; exists a; split => //; eapply monotonic; eauto.",
            "VernacExtend",
            "c6a5ac9ac7b16f0f9430f1c0eaf930c6bee95a37"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance bindMonotonicOpt {A B} (g : G A) (f : A -> G (option B)) `{SizeMonotonic _ g} `{forall x, SizeMonotonicOpt (f x)} : SizeMonotonicOpt (bindGen g f).",
            "VernacInstance",
            "2825eada76d4b76846efcf2225c0c71402a8ff0f"
        ],
        [
            "intros s1 s2 Hs.",
            "VernacExtend",
            "58263317bcafa7670dfef4ad231dd01e88ebd64b"
        ],
        [
            "unfold semGenSizeOpt.",
            "VernacExtend",
            "8a37d7412be50b6dd8930396944ca0fc3f05ad79"
        ],
        [
            "rewrite !semBindSize.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move => b.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move => [a [Hsome [H4 H5]]].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "eexists a; split => //.",
            "VernacExtend",
            "658c1fd7246fbbaef7033d26338a5213b7643b64"
        ],
        [
            "eapply monotonic; eauto.",
            "VernacExtend",
            "fc74acb4937bd6f9b2fd57bf6ac62ecf6a875450"
        ],
        [
            "eapply monotonicOpt; eauto; eexists; eauto.",
            "VernacExtend",
            "2acf4dbc135a7e8791a7774ed2c025fd9592f7c4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance bindMonotonicStrong {A B} (g : G A) (f : A -> G B) `{SizeMonotonic _ g} `{forall x, semGen g x -> SizeMonotonic (f x)} : SizeMonotonic (bindGen g f).",
            "VernacInstance",
            "4bfa50ed2771aff720f2393a0bf48de91fa9a5dc"
        ],
        [
            "intros s1 s2 Hleq.",
            "VernacExtend",
            "da266b6f10b8101960f2fa39526a47d3a6381854"
        ],
        [
            "rewrite !semBindSize.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move => b.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move => [a [H3 H4]]; exists a; split => //.",
            "VernacExtend",
            "d14f3155c1864724e8756498350a57e024c0c2ba"
        ],
        [
            "now eapply monotonic; eauto.",
            "VernacExtend",
            "709212d5931f6964b21122364d9164043961a8df"
        ],
        [
            "eapply H0.",
            "VernacExtend",
            "fdf6443e4e58cab6382db9111187a5f78f51e8f6"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "split; eauto.",
            "VernacExtend",
            "f3520b20a884376c5c10e2f9e716eedc86a566b6"
        ],
        [
            "now constructor.",
            "VernacExtend",
            "e001978ec065ef0fd63cb804e72fb73890e93711"
        ],
        [
            "eassumption.",
            "VernacExtend",
            "909bfe8655bf95c07560744f733991163ce6cf7e"
        ],
        [
            "eassumption.",
            "VernacExtend",
            "909bfe8655bf95c07560744f733991163ce6cf7e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance bindMonotonicOptStrong {A B} (g : G A) (f : A -> G (option B)) `{SizeMonotonic _ g} `{forall x, semGen g x -> SizeMonotonicOpt (f x)} : SizeMonotonicOpt (bindGen g f).",
            "VernacInstance",
            "c0478a68a72cb9db7c23a31b560ebaeed858e9ee"
        ],
        [
            "intros s1 s2 Hleq.",
            "VernacExtend",
            "da266b6f10b8101960f2fa39526a47d3a6381854"
        ],
        [
            "unfold semGenSizeOpt.",
            "VernacExtend",
            "8a37d7412be50b6dd8930396944ca0fc3f05ad79"
        ],
        [
            "rewrite !semBindSize.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move => b.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move => [a [Hsome [H4 H5]]].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists a; split => //.",
            "VernacExtend",
            "50609201c3b8d42154955676c44df5008a1bf485"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply monotonic; eauto.",
            "VernacExtend",
            "fc74acb4937bd6f9b2fd57bf6ac62ecf6a875450"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply H0; eauto.",
            "VernacExtend",
            "0240392f0ea7b22c93b1755ba1a7880bec673374"
        ],
        [
            "exists s1; split; auto.",
            "VernacExtend",
            "40cc29a47188eb8b9deb335b8bd67df80706851d"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "eexists; eauto.",
            "VernacExtend",
            "02215ff570a78e8dfed0585aa87594983a8aa0fb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semBindUnsized1 {A B} (g : G A) (f : A -> G B) `{H : Unsized _ g}: semGen (bindGen g f) <--> \\bigcup_(a in semGen g) semGen (f a).",
            "VernacStartTheoremProof",
            "9bdc4989c7a41474a4b2fde9c8b810e03352d916"
        ],
        [
            "rewrite /semGen.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "setoid_rewrite semBindSize.",
            "VernacExtend",
            "9c4be0e0d90f6a9974ef031685952753315ed905"
        ],
        [
            "setoid_rewrite (@unsized_alt_def A g H).",
            "VernacExtend",
            "a7c228a5dda527d99983647d0c8ad306f88bb6c8"
        ],
        [
            "move => b.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros [s [_ [a [H1 H2]]]].",
            "VernacExtend",
            "22214f7f25c2b7bf894ef6b912ca1c2e10594d9b"
        ],
        [
            "exists a.",
            "VernacExtend",
            "59cc5697e7369be65591d2d5e6ad6fd701682809"
        ],
        [
            "split; exists s; split; by [].",
            "VernacExtend",
            "08e147b42ff12972277276bc61106bd7ac0f9682"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros [a [[s1 [_ H1]] [s2 [_ H2]]]].",
            "VernacExtend",
            "16c1755f504b45e8fb9d4c3ed1fff90202ee56a6"
        ],
        [
            "exists s2.",
            "VernacExtend",
            "17e88827b3887ecd1fe6b79dab670adf75f42e23"
        ],
        [
            "split; first by [].",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "exists a.",
            "VernacExtend",
            "59cc5697e7369be65591d2d5e6ad6fd701682809"
        ],
        [
            "split; by [].",
            "VernacExtend",
            "9c392753fd6384a52f43e9d349afde47af3b3aa5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semBindUnsized2 : forall A B (g : G A) (f : A -> G B), (forall a, Unsized (f a)) -> semGen (bindGen g f) <--> \\bigcup_(a in semGen g) semGen (f a).",
            "VernacStartTheoremProof",
            "4b789fe1fcdcf1d3f9975b6b1599c2c8f3138062"
        ],
        [
            "move=> A B g f H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /semGen.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "setoid_rewrite semBindSize.",
            "VernacExtend",
            "9c4be0e0d90f6a9974ef031685952753315ed905"
        ],
        [
            "intro b.",
            "VernacExtend",
            "069cd7d34a03b833d46b6b4ca32ac31560c50264"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros [s [_ [a [H1 H2]]]].",
            "VernacExtend",
            "22214f7f25c2b7bf894ef6b912ca1c2e10594d9b"
        ],
        [
            "exists a.",
            "VernacExtend",
            "59cc5697e7369be65591d2d5e6ad6fd701682809"
        ],
        [
            "split; exists s; split => //.",
            "VernacExtend",
            "a556c754b586d913babfbda712b2c9667167cb33"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros [a [[s1 [_ H1]] [s2 [_ H2]]]].",
            "VernacExtend",
            "16c1755f504b45e8fb9d4c3ed1fff90202ee56a6"
        ],
        [
            "exists s1.",
            "VernacExtend",
            "60a73095e3ca930995c49bbfddb9a2e5d49df7d7"
        ],
        [
            "split; first by [].",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "exists a.",
            "VernacExtend",
            "59cc5697e7369be65591d2d5e6ad6fd701682809"
        ],
        [
            "split; first by []; apply unsized_alt_def; eauto.",
            "VernacExtend",
            "5c41016b8e1944810af23b58963b88a12f368659"
        ],
        [
            "by eapply unsized_alt_def; eauto.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semBindSizeMonotonic {A B} (g : G A) (f : A -> G B) `{Hg : SizeMonotonic _ g} `{Hf : forall a, SizeMonotonic (f a)} : semGen (bindGen g f) <--> \\bigcup_(a in semGen g) semGen (f a).",
            "VernacStartTheoremProof",
            "8a7b560bdca367e7a6ca98ef06e05059daca5aae"
        ],
        [
            "rewrite /semGen.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "setoid_rewrite semBindSize.",
            "VernacExtend",
            "9c4be0e0d90f6a9974ef031685952753315ed905"
        ],
        [
            "intro b.",
            "VernacExtend",
            "069cd7d34a03b833d46b6b4ca32ac31560c50264"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros [s [_ [a [H1 H2]]]].",
            "VernacExtend",
            "22214f7f25c2b7bf894ef6b912ca1c2e10594d9b"
        ],
        [
            "exists a.",
            "VernacExtend",
            "59cc5697e7369be65591d2d5e6ad6fd701682809"
        ],
        [
            "split; exists s; (split; first (compute; by []); first by[]).",
            "VernacExtend",
            "6c99c77a9a789f9309d8894df354b24a8c49c071"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros [a [[s1 [_ H1]] [s2 [_ H2]]]].",
            "VernacExtend",
            "16c1755f504b45e8fb9d4c3ed1fff90202ee56a6"
        ],
        [
            "exists (max s1 s2).",
            "VernacExtend",
            "b152ca4914053f2527f991a0533d502cab03d129"
        ],
        [
            "split; first (compute; by []).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "exists a.",
            "VernacExtend",
            "59cc5697e7369be65591d2d5e6ad6fd701682809"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply Hg; last eassumption.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/leP; apply Max.le_max_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "eapply Hf; last eassumption.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/leP; apply Max.le_max_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semBindSizeMonotonicIncl_r {A B} (g : G A) (f : A -> G (option B)) (s1 : set A) (s2 : A -> set B) : semGen g \\subset s1 -> (forall x, semGen (f x) \\subset Some @: (s2 x) :|: [set None]) -> semGen (bindGen g f) \\subset Some @: (\\bigcup_(a in s1) s2 a) :|: [set None].",
            "VernacStartTheoremProof",
            "799b0b05592b8d0c8572aba453f1dab38e5cd25a"
        ],
        [
            "intros H1 H2 [x |] [s [_ [r H]]]; [| right; reflexivity ].",
            "VernacExtend",
            "2f286be1fc6d680d48fa437be4dd3a8263c80d92"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "eexists; split; [| reflexivity ].",
            "VernacExtend",
            "59afa54c52541cda0d1cfd4b14afc6022a25f509"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "destruct (randomSplit r) as [r1 r2] eqn:Heq.",
            "VernacExtend",
            "5c8f7f7748ec7cd2b3f4ec536c7f3680b194c67d"
        ],
        [
            "destruct (run (f (run g s r1)) s r2) eqn:Heq2; try discriminate.",
            "VernacExtend",
            "e9fbf8c0bc1c3217c4353d4c1e9449a481fc1a8f"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "eexists (run g s r1).",
            "VernacExtend",
            "406544ceb99996d5be39ed15d3af99abc821221c"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply H1.",
            "VernacExtend",
            "825143ff5ea05ac2ed1d4eae976364feb9c3ba1e"
        ],
        [
            "eexists; split; [| eexists; reflexivity ].",
            "VernacExtend",
            "33fb6a49d731cf887d6633529fbc7f3f5e31b084"
        ],
        [
            "now constructor.",
            "VernacExtend",
            "e001978ec065ef0fd63cb804e72fb73890e93711"
        ],
        [
            "edestruct H2.",
            "VernacExtend",
            "a50be2ce6dcd304df9d4adc7be7690c291ff05bf"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "split; [| eexists; eauto ].",
            "VernacExtend",
            "cff2e6332c1290b04b7b12f72dea06182d6a2719"
        ],
        [
            "now constructor.",
            "VernacExtend",
            "e001978ec065ef0fd63cb804e72fb73890e93711"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "inv H3.",
            "VernacExtend",
            "bf389b6bd23f97715c74ed9eca5a780ee9e91e3c"
        ],
        [
            "inv H5.",
            "VernacExtend",
            "3b24f58d604fd0d45f8c1024700082cc552e0ce8"
        ],
        [
            "eassumption.",
            "VernacExtend",
            "909bfe8655bf95c07560744f733991163ce6cf7e"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semBindSizeMonotonicIncl_l {A B} (g : G A) (f : A -> G (option B)) (s1 : set A) (fs : A -> set B) `{Hg : SizeMonotonic _ g} `{Hf : forall a, SizeMonotonicOpt (f a)} : s1 \\subset semGen g -> (forall x, Some @: (fs x) \\subset semGen (f x)) -> (Some @: \\bigcup_(a in s1) (fs a)) \\subset semGen (bindGen g f).",
            "VernacStartTheoremProof",
            "d23f6254f6726aa82811bc6f15e96e7e97e0115c"
        ],
        [
            "Admitted.",
            "VernacEndProof",
            "b273df2a612833d7cae3ad881c7303cec72f8651"
        ],
        [
            "Lemma semFmapSize A B (f : A -> B) (g : G A) (size : nat) : semGenSize (fmap f g) size <--> f @: semGenSize g size.",
            "VernacStartTheoremProof",
            "c56ca1db9347e0eedc8c0c1373eb610a281720fb"
        ],
        [
            "by rewrite /fmap /semGenSize /= codom_comp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semFmap A B (f : A -> B) (g : G A) : semGen (fmap f g) <--> f @: semGen g.",
            "VernacStartTheoremProof",
            "25e559bee5ba9d9ecaa53b8bfcce010c387b4c22"
        ],
        [
            "by rewrite imset_bigcup /semGen (eq_bigcupr _ (semFmapSize _ _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance fmapUnsized {A B} (f : A -> B) (g : G A) `{Unsized _ g} : Unsized (fmap f g).",
            "VernacInstance",
            "4ea4ff0b260955ec64799d4d1c7b2573bedabc21"
        ],
        [
            "intros s1 s2.",
            "VernacExtend",
            "e41e36f8873f6a66fd611cc257aafb8e34cc695d"
        ],
        [
            "rewrite !semFmapSize.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move => b.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by split; move => [a [H1 <-]]; eexists; split; eauto => //; eapply unsized; eauto.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance fmapMonotonic {A B} (f : A -> B) (g : G A) `{SizeMonotonic _ g} : SizeMonotonic (fmap f g).",
            "VernacInstance",
            "df57317f4d612144e8be2aa041e9ee19081b7bb6"
        ],
        [
            "intros s1 s2 Hs.",
            "VernacExtend",
            "58263317bcafa7670dfef4ad231dd01e88ebd64b"
        ],
        [
            "rewrite !semFmapSize.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move => b.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move => [a [H1 <-]]; eexists; split; eauto => //; eapply monotonic; eauto.",
            "VernacExtend",
            "4603db4247e92f7f7c89781acb76654b2973ed92"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semChooseSize A `{ChoosableFromInterval A} (a1 a2 : A) : RandomQC.leq a1 a2 -> forall size, semGenSize (choose (a1,a2)) size <--> [set a | RandomQC.leq a1 a && RandomQC.leq a a2].",
            "VernacStartTheoremProof",
            "1786bf8a3644e3f78771657665087d0a4a1af2ef"
        ],
        [
            "by move=> /= le_a1a2 m n; rewrite (randomRCorrect n a1 a2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance chooseUnsized {A} `{RandomQC.ChoosableFromInterval A} (a1 a2 : A) : Unsized (choose (a1, a2)).",
            "VernacInstance",
            "4165201a97db64a8b3b4ab80388320fb8345cdc1"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semChoose A `{RandomQC.ChoosableFromInterval A} (a1 a2 : A) : RandomQC.leq a1 a2 -> (semGen (choose (a1,a2)) <--> [set a | RandomQC.leq a1 a && RandomQC.leq a a2]).",
            "VernacStartTheoremProof",
            "869745f70805b9f868c0d1803c54ad29071de0ea"
        ],
        [
            "move=> /= le_a1a2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite <- (unsized_alt_def 1).",
            "VernacExtend",
            "2136db75d146d3c63fc28765af60b662c026baa2"
        ],
        [
            "move => m /=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite (randomRCorrect m a1 a2) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma promoteVariant : forall {A B : Type} (a : A) (f : A -> SplitPath) (g : G B) size (r r1 r2 : RandomSeed), randomSplit r = (r1, r2) -> run (reallyUnsafePromote (fun a => variant (f a) g)) size r a = run g size (varySeed (f a) r1).",
            "VernacStartTheoremProof",
            "7a348cf312aa26495e617d8eeaab929822a47f17"
        ],
        [
            "move => A B a p g size r r1 r2 H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /reallyUnsafePromote /variant.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "destruct g.",
            "VernacExtend",
            "58c12597ac8434a7c2475af42670d77056ce85a1"
        ],
        [
            "rewrite /= H.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semPromote A (m : Rose (G A)) : semGen (promote m) <--> codom2 (fun size seed => fmapRose (fun g => run g size seed) m).",
            "VernacStartTheoremProof",
            "60888083b7d00848b7e051e6920b43e01f17b845"
        ],
        [
            "by rewrite /codom2 curry_codom2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semPromoteSize (A : Type) (m : Rose (G A)) n : semGenSize (promote m) n <--> codom (fun seed => fmapRose (fun g => run g n seed) m).",
            "VernacStartTheoremProof",
            "6514586249abe4fc4192c5a938a17da65afb1dc5"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma runPromote A (m : Rose (G A)) seed size : run (promote m) seed size = fmapRose (fun (g : G A) => run g seed size) m.",
            "VernacStartTheoremProof",
            "0c9135f3cad623d1755a477cb4da4186c708701d"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma runFmap (A B : Type) (f : A -> B) (g : G A) seed size : run (fmap f g) seed size = f (run g seed size).",
            "VernacStartTheoremProof",
            "7e08ee9fe749a1a17cd820f06c7f0366f6f67efa"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semFmapBind : forall A B C (g : G A) (f1 : B -> C) (f2 : A -> G B), semGen (fmap f1 (bindGen g f2)) <--> semGen (bindGen g (fun x => fmap f1 (f2 x))).",
            "VernacStartTheoremProof",
            "99560c2c0f6b5c499f046e45c219f724f9410bc8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite /semGen.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "setoid_rewrite semFmapSize.",
            "VernacExtend",
            "abe0ccae8f47c3c0a787af13c91391fd8dfb7b70"
        ],
        [
            "setoid_rewrite semBindSize.",
            "VernacExtend",
            "9c4be0e0d90f6a9974ef031685952753315ed905"
        ],
        [
            "apply eq_bigcupr => s.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "setoid_rewrite semFmapSize.",
            "VernacExtend",
            "abe0ccae8f47c3c0a787af13c91391fd8dfb7b70"
        ],
        [
            "rewrite imset_bigcup.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semSized A (f : nat -> G A) : semGen (sized f) <--> \\bigcup_n semGenSize (f n) n.",
            "VernacStartTheoremProof",
            "5808c9945251693cfeced8a5248711c73ea75ce2"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semSizedSize A(f:nat->G A)s : semGenSize (sized f) s <--> semGenSize (f s) s.",
            "VernacStartTheoremProof",
            "6b08120b6dc5ac28cb59a62b4e8db713d61dfa18"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semSized_opt A (f : nat -> G (option A)) (H : forall n, SizeMonotonicOpt (f n)) (H' : SizedMonotonicOpt f) : isSome :&: semGen (sized f) <--> isSome :&: \\bigcup_n (semGen (f n)).",
            "VernacStartTheoremProof",
            "a9afc1cf5a190169e5876b5baea3f7b2e4ff42cb"
        ],
        [
            "rewrite semSized.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite !setI_bigcup_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move => x; split.",
            "VernacExtend",
            "22de1c5faad21de60fd48f882c8175e01347018a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move => [n [HT [Hs1 Hs2]]].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "split; eauto.",
            "VernacExtend",
            "f3520b20a884376c5c10e2f9e716eedc86a566b6"
        ],
        [
            "split; eauto.",
            "VernacExtend",
            "f3520b20a884376c5c10e2f9e716eedc86a566b6"
        ],
        [
            "eexists; eauto.",
            "VernacExtend",
            "02215ff570a78e8dfed0585aa87594983a8aa0fb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move => [n [HT [Hs1 [m [HT' Hs2]]]]].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "eexists (m + n).",
            "VernacExtend",
            "ae1c4d07c178d74c9a743b82c0022dc0b39f5024"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "now constructor.",
            "VernacExtend",
            "e001978ec065ef0fd63cb804e72fb73890e93711"
        ],
        [
            "split; [ eassumption | ].",
            "VernacExtend",
            "cca1aae3b9a0ff9501e2800189754e6ef3b447f1"
        ],
        [
            "destruct x as [ x | ].",
            "VernacExtend",
            "ecc25553fc037c75b79fa429d1b32999b4bc9555"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply monotonicOpt with (s2 := m + n) in Hs2; [| now ssromega ].",
            "VernacExtend",
            "880ac68a9f4af3d126e828cf000d8e6aebf5e375"
        ],
        [
            "eapply sizeMonotonicOpt with (s1 := n) (s2 := m + n); [now ssromega |].",
            "VernacExtend",
            "5d3b1595427715587e7cec54b58ed8ca6972e231"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inv Hs1.",
            "VernacExtend",
            "74f969b64c07f0c63b94fb3ae78e04586785077d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semSized_alt A (f : nat -> G A) (H : forall n, SizeMonotonic (f n)) (H' : forall n m s, n <= m -> semGenSize (f n) s \\subset semGenSize (f m) s) : semGen (sized f) <--> \\bigcup_n (semGen (f n)).",
            "VernacStartTheoremProof",
            "0c99b531b4821e4065649de942c96d0f792972f8"
        ],
        [
            "rewrite semSized.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move => x; split.",
            "VernacExtend",
            "22de1c5faad21de60fd48f882c8175e01347018a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move => [n [HT Hs]].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "split; eauto.",
            "VernacExtend",
            "f3520b20a884376c5c10e2f9e716eedc86a566b6"
        ],
        [
            "eexists; eauto.",
            "VernacExtend",
            "02215ff570a78e8dfed0585aa87594983a8aa0fb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move => [n [HT [m [_ Hs]]]].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "eapply semSized.",
            "VernacExtend",
            "50f23aa40f5ced6fdbb645c89987d08a5084e214"
        ],
        [
            "eexists (m + n).",
            "VernacExtend",
            "ae1c4d07c178d74c9a743b82c0022dc0b39f5024"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "eapply (H' n).",
            "VernacExtend",
            "ad60d66159b5ec6c107db8cc8d6b7fa550db5759"
        ],
        [
            "ssromega.",
            "VernacExtend",
            "035f00c4d6895e7b85abb1ca2c49b48b224889e9"
        ],
        [
            "eapply (H n); try eassumption.",
            "VernacExtend",
            "9b46e18163862c19f7269d9dd00847d9a1e53465"
        ],
        [
            "ssromega.",
            "VernacExtend",
            "035f00c4d6895e7b85abb1ca2c49b48b224889e9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance sizedSizeMonotonic A (gen : nat -> G A) `{forall n, SizeMonotonic (gen n)} `{SizedMonotonic A gen} : SizeMonotonic (sized gen).",
            "VernacInstance",
            "bd27b1e528846ee794e111532f963acea4a84b61"
        ],
        [
            "move => s1 s2 Hleq a /semSizedSize H1.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "eapply semSizedSize.",
            "VernacExtend",
            "fbeb8536d9e3104c48d0c4417420ef38627c5200"
        ],
        [
            "eapply H.",
            "VernacExtend",
            "cf02e2445d256ebbbf0bbedfdc7f26983e04ec5a"
        ],
        [
            "eassumption.",
            "VernacExtend",
            "909bfe8655bf95c07560744f733991163ce6cf7e"
        ],
        [
            "eapply H0; eassumption.",
            "VernacExtend",
            "0f79f43e6b9faafaf67cfcf27317fb56a8a1ba16"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance sizedSizeMonotonicOpt A (gen : nat -> G (option A)) `{forall n, SizeMonotonic (gen n)} `{SizedMonotonicOpt A gen} : SizeMonotonicOpt (sized gen).",
            "VernacInstance",
            "389e402f6285a6614ac36407efdfbca0211f2da2"
        ],
        [
            "move => s1 s2 Hleq a H1.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "eapply semSizedSize.",
            "VernacExtend",
            "fbeb8536d9e3104c48d0c4417420ef38627c5200"
        ],
        [
            "eapply H.",
            "VernacExtend",
            "cf02e2445d256ebbbf0bbedfdc7f26983e04ec5a"
        ],
        [
            "eassumption.",
            "VernacExtend",
            "909bfe8655bf95c07560744f733991163ce6cf7e"
        ],
        [
            "unfold semGenSizeOpt in H1.",
            "VernacExtend",
            "36cacf6150123554fa7115da192dd3422fdb0700"
        ],
        [
            "unfold somes in H1.",
            "VernacExtend",
            "58119b4df2dc3eb410c84088ed143d63f7e751d1"
        ],
        [
            "eapply @sizeMonotonicOpt; eauto.",
            "VernacExtend",
            "784c534ed5ae24bd5bfd73e9d758d18622721bc0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semResize A n (g : G A) : semGen (resize n g) <--> semGenSize g n .",
            "VernacStartTheoremProof",
            "e8337f998bdefca440c0e4fb81727b45a576d399"
        ],
        [
            "by case: g => g; rewrite /semGen /semGenSize /= bigcup_const.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semSizeResize A (s n : nat) (g : G A) : semGenSize (resize n g) s <--> semGenSize g n.",
            "VernacStartTheoremProof",
            "07ef2efce4a541bc6ae565a7e31001b98995a108"
        ],
        [
            "by case: g => g; rewrite /semGenSize.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance unsizedResize {A} (g : G A) n : Unsized (resize n g).",
            "VernacInstance",
            "ba183cc47e9f42dfd3b504cf3981d6210561ba66"
        ],
        [
            "by case: g => g; rewrite /semGenSize.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semGenSizeInhabited {A} (g : G A) s : exists x, semGenSize g s x.",
            "VernacStartTheoremProof",
            "58dc57c9d180392b36bbd5ca4dc7b4e822fd59fa"
        ],
        [
            "destruct randomSeed_inhabited as [r].",
            "VernacExtend",
            "922774cb07e3a81798edb574a8492433d99eb36e"
        ],
        [
            "exists (run g s r); exists r; reflexivity.",
            "VernacExtend",
            "c02e6d26775f7e190c28b543f8788b3b4c49dcba"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance Functor_G : Functor G := { fmap A B := fmap; }.",
            "VernacInstance",
            "b068d10a7bcd07062e137c5649f194511f5e2f79"
        ],
        [
            "Instance Applicative_G : Applicative G := { pure A := returnGen; ap A B := apGen; }.",
            "VernacInstance",
            "24a6f4ba4ff2649258270e96a18a6fbf573dc150"
        ],
        [
            "Instance Monad_G : Monad G := { ret A := returnGen; bind A B := bindGen; }.",
            "VernacInstance",
            "e229bc75a618f8ee804a63c6309a0419cc0b0130"
        ],
        [
            "Definition thunkGen {A} (f : unit -> G A) : G A := MkGen (fun n r => run (f tt) n r).",
            "VernacDefinition",
            "98b43436aa4008a3dd7ded15397f523bb832a9eb"
        ],
        [
            "Lemma semThunkGenSize {A} (f : unit -> G A) s : semGenSize (thunkGen f) s <--> semGenSize (f tt) s.",
            "VernacStartTheoremProof",
            "659f6dbddf5cd3ab0d41102ef88e3931f950f281"
        ],
        [
            "split; intros [r Hr]; exists r; simpl in *; assumption.",
            "VernacExtend",
            "eaf920d4523e303fd8d9823b24fb2344ea38c5f1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semThunkGen {A} (f : unit -> G A) : semGen (thunkGen f) <--> semGen (f tt).",
            "VernacStartTheoremProof",
            "d56b450173503b13c065118871b529507c54ad6f"
        ],
        [
            "split; intros [r Hr]; exists r; simpl in *; assumption.",
            "VernacExtend",
            "eaf920d4523e303fd8d9823b24fb2344ea38c5f1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance thunkGenUnsized {A} (f : unit -> G A) `{Unsized _ (f tt)} : Unsized (thunkGen f).",
            "VernacInstance",
            "119f8aacf667d50ffab81081db4bc0ae8841f597"
        ],
        [
            "intros s1 s2.",
            "VernacExtend",
            "e41e36f8873f6a66fd611cc257aafb8e34cc695d"
        ],
        [
            "do 2 rewrite semThunkGenSize.",
            "VernacExtend",
            "93375f9970f47120010d145e831d8fb681bcbcd3"
        ],
        [
            "apply unsized.",
            "VernacExtend",
            "b13e18a18e08871079cc1aacb37a86fb9568ec89"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance thunkGenSizeMonotonic {A} (f : unit -> G A) `{SizeMonotonic _ (f tt)} : SizeMonotonic (thunkGen f).",
            "VernacInstance",
            "e7d1911ec36d8acf15c16cfb84feeb09acf309e3"
        ],
        [
            "intros s1 s2 Hs.",
            "VernacExtend",
            "58263317bcafa7670dfef4ad231dd01e88ebd64b"
        ],
        [
            "do 2 rewrite semThunkGenSize.",
            "VernacExtend",
            "93375f9970f47120010d145e831d8fb681bcbcd3"
        ],
        [
            "by apply monotonic.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance thunkGenSizeMonotonicOpt {A} (f : unit -> G (option A)) `{SizeMonotonicOpt _ (f tt)} : SizeMonotonicOpt (thunkGen f).",
            "VernacInstance",
            "c376205c96df7f0abab32555666043977ae2374a"
        ],
        [
            "intros s1 s2 Hs.",
            "VernacExtend",
            "58263317bcafa7670dfef4ad231dd01e88ebd64b"
        ],
        [
            "unfold semGenSizeOpt.",
            "VernacExtend",
            "8a37d7412be50b6dd8930396944ca0fc3f05ad79"
        ],
        [
            "do 2 rewrite semThunkGenSize.",
            "VernacExtend",
            "93375f9970f47120010d145e831d8fb681bcbcd3"
        ],
        [
            "by apply monotonicOpt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance thunkGenSizeAntiMonotonicNone {A} (f : unit -> G (option A)) `{SizeAntiMonotonicNone _ (f tt)} : SizeAntiMonotonicNone (thunkGen f).",
            "VernacInstance",
            "ffedfeb81c3f0cb4bfe1a317ca8ad31f4b1354d9"
        ],
        [
            "intros s1 s2 Hs.",
            "VernacExtend",
            "58263317bcafa7670dfef4ad231dd01e88ebd64b"
        ],
        [
            "do 2 rewrite semThunkGenSize.",
            "VernacExtend",
            "93375f9970f47120010d145e831d8fb681bcbcd3"
        ],
        [
            "by apply monotonicNone.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End GenLow.",
            "VernacEndSegment",
            "f4e5c25c4699c8d7668c0e058e1f0a1f3652565f"
        ]
    ],
    "proofs": [
        {
            "name": "semGenOpt_equiv",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "split; intros [n [Hn [t H]]]; (exists n; split; [constructor | exists t; auto]).",
                        "VernacExtend",
                        "45758840965a14e9069dcbddc8d89fe2b7f5eefd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bindGen_aux",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "unfold semGen, semGenSize, codom, bigcup.",
                        "VernacExtend",
                        "e18a842280b73a8bd055c08af07e08df93d11b58"
                    ]
                },
                {
                    "command": [
                        "exists n; split => //=.",
                        "VernacExtend",
                        "9b48c5543deec4c869b7587798613789034f253c"
                    ]
                },
                {
                    "command": [
                        "exists r; auto.",
                        "VernacExtend",
                        "6c115d61b7b2a121c5d8ff8967a21754335dd08a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unsizedMonotonic",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "intros s1 s2 Hleq.",
                        "VernacExtend",
                        "da266b6f10b8101960f2fa39526a47d3a6381854"
                    ]
                },
                {
                    "command": [
                        "rewrite /unsized /monotonic => a H12.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply unsized.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unsized_alt_def",
            "line_nb": 61,
            "steps": [
                {
                    "command": [
                        "move => A f H s a.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "move => H'.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists s.",
                        "VernacExtend",
                        "9ece244071006cc9d8ee4c8b2b1890689cc4fa6f"
                    ]
                },
                {
                    "command": [
                        "split; auto => //.",
                        "VernacExtend",
                        "6bff1d22f26f73e2af6bbb2e9c65e0bfad7c6104"
                    ]
                },
                {
                    "command": [
                        "move => [s' [_ H']].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "eapply unsized; eauto.",
                        "VernacExtend",
                        "103505bb9edfd3f1582e8492a5a97363eaac4e96"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "semReturn",
            "line_nb": 70,
            "steps": [
                {
                    "command": [
                        "rewrite /semGen /semGenSize /= bigcup_const ?codom_const //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "exact: randomSeed_inhabited.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "by do 2! constructor.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "semReturnSize",
            "line_nb": 75,
            "steps": [
                {
                    "command": [
                        "unfold semGenSize.",
                        "VernacExtend",
                        "c1e2af1e22187dd21f57e4f810e190ee7bd903f1"
                    ]
                },
                {
                    "command": [
                        "rewrite codom_const; [ reflexivity | apply randomSeed_inhabited ].",
                        "VernacExtend",
                        "f90e43543f21e813417750a9224e1edd82fb9a6c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unsizedReturn",
            "line_nb": 79,
            "steps": [
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "returnGenSizeMonotonic",
            "line_nb": 82,
            "steps": [
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "returnGenSizeMonotonicOpt",
            "line_nb": 85,
            "steps": [
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "semBindSize",
            "line_nb": 88,
            "steps": [
                {
                    "command": [
                        "rewrite /semGenSize /bindGen /= bigcup_codom -curry_codom2l.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -[codom (prod_curry _)]imsetT -randomSplit_codom -codom_comp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "monad_leftid",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "by apply: eq_bigcupr => size; rewrite semBindSize semReturnSize bigcup_set1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "monad_rightid",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "apply: eq_bigcupr => size; rewrite semBindSize.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite (eq_bigcupr _ (fun x => semReturnSize x size)) /semGenSize bigcup_codom codomE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "monad_assoc",
            "line_nb": 121,
            "steps": [
                {
                    "command": [
                        "apply eq_bigcupr => ?; rewrite !semBindSize ?bigcup_flatten.",
                        "VernacExtend",
                        "82d53976234637e3f0907eb36cddf61d028c6306"
                    ]
                },
                {
                    "command": [
                        "by apply eq_bigcupr => ?; rewrite !semBindSize ?bigcup_flatten.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bindUnsized",
            "line_nb": 125,
            "steps": [
                {
                    "command": [
                        "intros s1 s2.",
                        "VernacExtend",
                        "e41e36f8873f6a66fd611cc257aafb8e34cc695d"
                    ]
                },
                {
                    "command": [
                        "rewrite !semBindSize !unsized_alt_def.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "move => b.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "split; move => [a [H1 H2]]; exists a; split => //; by eapply unsized; eauto.",
                        "VernacExtend",
                        "403e1065ada3694a903ff8ff83c4743cb3ca0a18"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bindMonotonic",
            "line_nb": 131,
            "steps": [
                {
                    "command": [
                        "intros s1 s2 Hs.",
                        "VernacExtend",
                        "58263317bcafa7670dfef4ad231dd01e88ebd64b"
                    ]
                },
                {
                    "command": [
                        "rewrite !semBindSize.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "move => b.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "move => [a [H3 H4]]; exists a; split => //; eapply monotonic; eauto.",
                        "VernacExtend",
                        "c6a5ac9ac7b16f0f9430f1c0eaf930c6bee95a37"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bindMonotonicOpt",
            "line_nb": 137,
            "steps": [
                {
                    "command": [
                        "intros s1 s2 Hs.",
                        "VernacExtend",
                        "58263317bcafa7670dfef4ad231dd01e88ebd64b"
                    ]
                },
                {
                    "command": [
                        "unfold semGenSizeOpt.",
                        "VernacExtend",
                        "8a37d7412be50b6dd8930396944ca0fc3f05ad79"
                    ]
                },
                {
                    "command": [
                        "rewrite !semBindSize.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "move => b.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "move => [a [Hsome [H4 H5]]].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "eexists a; split => //.",
                        "VernacExtend",
                        "658c1fd7246fbbaef7033d26338a5213b7643b64"
                    ]
                },
                {
                    "command": [
                        "eapply monotonic; eauto.",
                        "VernacExtend",
                        "fc74acb4937bd6f9b2fd57bf6ac62ecf6a875450"
                    ]
                },
                {
                    "command": [
                        "eapply monotonicOpt; eauto; eexists; eauto.",
                        "VernacExtend",
                        "2acf4dbc135a7e8791a7774ed2c025fd9592f7c4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bindMonotonicOptStrong",
            "line_nb": 160,
            "steps": [
                {
                    "command": [
                        "intros s1 s2 Hleq.",
                        "VernacExtend",
                        "da266b6f10b8101960f2fa39526a47d3a6381854"
                    ]
                },
                {
                    "command": [
                        "unfold semGenSizeOpt.",
                        "VernacExtend",
                        "8a37d7412be50b6dd8930396944ca0fc3f05ad79"
                    ]
                },
                {
                    "command": [
                        "rewrite !semBindSize.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "move => b.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "move => [a [Hsome [H4 H5]]].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists a; split => //.",
                        "VernacExtend",
                        "50609201c3b8d42154955676c44df5008a1bf485"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "eapply monotonic; eauto.",
                        "VernacExtend",
                        "fc74acb4937bd6f9b2fd57bf6ac62ecf6a875450"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "eapply H0; eauto.",
                        "VernacExtend",
                        "0240392f0ea7b22c93b1755ba1a7880bec673374"
                    ]
                },
                {
                    "command": [
                        "exists s1; split; auto.",
                        "VernacExtend",
                        "40cc29a47188eb8b9deb335b8bd67df80706851d"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "eexists; eauto.",
                        "VernacExtend",
                        "02215ff570a78e8dfed0585aa87594983a8aa0fb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "semBindUnsized1",
            "line_nb": 175,
            "steps": [
                {
                    "command": [
                        "rewrite /semGen.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "setoid_rewrite semBindSize.",
                        "VernacExtend",
                        "9c4be0e0d90f6a9974ef031685952753315ed905"
                    ]
                },
                {
                    "command": [
                        "setoid_rewrite (@unsized_alt_def A g H).",
                        "VernacExtend",
                        "a7c228a5dda527d99983647d0c8ad306f88bb6c8"
                    ]
                },
                {
                    "command": [
                        "move => b.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros [s [_ [a [H1 H2]]]].",
                        "VernacExtend",
                        "22214f7f25c2b7bf894ef6b912ca1c2e10594d9b"
                    ]
                },
                {
                    "command": [
                        "exists a.",
                        "VernacExtend",
                        "59cc5697e7369be65591d2d5e6ad6fd701682809"
                    ]
                },
                {
                    "command": [
                        "split; exists s; split; by [].",
                        "VernacExtend",
                        "08e147b42ff12972277276bc61106bd7ac0f9682"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros [a [[s1 [_ H1]] [s2 [_ H2]]]].",
                        "VernacExtend",
                        "16c1755f504b45e8fb9d4c3ed1fff90202ee56a6"
                    ]
                },
                {
                    "command": [
                        "exists s2.",
                        "VernacExtend",
                        "17e88827b3887ecd1fe6b79dab670adf75f42e23"
                    ]
                },
                {
                    "command": [
                        "split; first by [].",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "exists a.",
                        "VernacExtend",
                        "59cc5697e7369be65591d2d5e6ad6fd701682809"
                    ]
                },
                {
                    "command": [
                        "split; by [].",
                        "VernacExtend",
                        "9c392753fd6384a52f43e9d349afde47af3b3aa5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "semBindUnsized2",
            "line_nb": 192,
            "steps": [
                {
                    "command": [
                        "move=> A B g f H.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /semGen.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "setoid_rewrite semBindSize.",
                        "VernacExtend",
                        "9c4be0e0d90f6a9974ef031685952753315ed905"
                    ]
                },
                {
                    "command": [
                        "intro b.",
                        "VernacExtend",
                        "069cd7d34a03b833d46b6b4ca32ac31560c50264"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros [s [_ [a [H1 H2]]]].",
                        "VernacExtend",
                        "22214f7f25c2b7bf894ef6b912ca1c2e10594d9b"
                    ]
                },
                {
                    "command": [
                        "exists a.",
                        "VernacExtend",
                        "59cc5697e7369be65591d2d5e6ad6fd701682809"
                    ]
                },
                {
                    "command": [
                        "split; exists s; split => //.",
                        "VernacExtend",
                        "a556c754b586d913babfbda712b2c9667167cb33"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros [a [[s1 [_ H1]] [s2 [_ H2]]]].",
                        "VernacExtend",
                        "16c1755f504b45e8fb9d4c3ed1fff90202ee56a6"
                    ]
                },
                {
                    "command": [
                        "exists s1.",
                        "VernacExtend",
                        "60a73095e3ca930995c49bbfddb9a2e5d49df7d7"
                    ]
                },
                {
                    "command": [
                        "split; first by [].",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "exists a.",
                        "VernacExtend",
                        "59cc5697e7369be65591d2d5e6ad6fd701682809"
                    ]
                },
                {
                    "command": [
                        "split; first by []; apply unsized_alt_def; eauto.",
                        "VernacExtend",
                        "5c41016b8e1944810af23b58963b88a12f368659"
                    ]
                },
                {
                    "command": [
                        "by eapply unsized_alt_def; eauto.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "semBindSizeMonotonic",
            "line_nb": 210,
            "steps": [
                {
                    "command": [
                        "rewrite /semGen.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "setoid_rewrite semBindSize.",
                        "VernacExtend",
                        "9c4be0e0d90f6a9974ef031685952753315ed905"
                    ]
                },
                {
                    "command": [
                        "intro b.",
                        "VernacExtend",
                        "069cd7d34a03b833d46b6b4ca32ac31560c50264"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros [s [_ [a [H1 H2]]]].",
                        "VernacExtend",
                        "22214f7f25c2b7bf894ef6b912ca1c2e10594d9b"
                    ]
                },
                {
                    "command": [
                        "exists a.",
                        "VernacExtend",
                        "59cc5697e7369be65591d2d5e6ad6fd701682809"
                    ]
                },
                {
                    "command": [
                        "split; exists s; (split; first (compute; by []); first by[]).",
                        "VernacExtend",
                        "6c99c77a9a789f9309d8894df354b24a8c49c071"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros [a [[s1 [_ H1]] [s2 [_ H2]]]].",
                        "VernacExtend",
                        "16c1755f504b45e8fb9d4c3ed1fff90202ee56a6"
                    ]
                },
                {
                    "command": [
                        "exists (max s1 s2).",
                        "VernacExtend",
                        "b152ca4914053f2527f991a0533d502cab03d129"
                    ]
                },
                {
                    "command": [
                        "split; first (compute; by []).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "exists a.",
                        "VernacExtend",
                        "59cc5697e7369be65591d2d5e6ad6fd701682809"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "eapply Hg; last eassumption.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply/leP; apply Max.le_max_l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "eapply Hf; last eassumption.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply/leP; apply Max.le_max_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "semFmapSize",
            "line_nb": 258,
            "steps": [
                {
                    "command": [
                        "by rewrite /fmap /semGenSize /= codom_comp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "semFmap",
            "line_nb": 261,
            "steps": [
                {
                    "command": [
                        "by rewrite imset_bigcup /semGen (eq_bigcupr _ (semFmapSize _ _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fmapUnsized",
            "line_nb": 264,
            "steps": [
                {
                    "command": [
                        "intros s1 s2.",
                        "VernacExtend",
                        "e41e36f8873f6a66fd611cc257aafb8e34cc695d"
                    ]
                },
                {
                    "command": [
                        "rewrite !semFmapSize.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "move => b.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by split; move => [a [H1 <-]]; eexists; split; eauto => //; eapply unsized; eauto.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fmapMonotonic",
            "line_nb": 270,
            "steps": [
                {
                    "command": [
                        "intros s1 s2 Hs.",
                        "VernacExtend",
                        "58263317bcafa7670dfef4ad231dd01e88ebd64b"
                    ]
                },
                {
                    "command": [
                        "rewrite !semFmapSize.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "move => b.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "move => [a [H1 <-]]; eexists; split; eauto => //; eapply monotonic; eauto.",
                        "VernacExtend",
                        "4603db4247e92f7f7c89781acb76654b2973ed92"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "semChooseSize",
            "line_nb": 276,
            "steps": [
                {
                    "command": [
                        "by move=> /= le_a1a2 m n; rewrite (randomRCorrect n a1 a2).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "chooseUnsized",
            "line_nb": 279,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "semChoose",
            "line_nb": 282,
            "steps": [
                {
                    "command": [
                        "move=> /= le_a1a2.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (unsized_alt_def 1).",
                        "VernacExtend",
                        "2136db75d146d3c63fc28765af60b662c026baa2"
                    ]
                },
                {
                    "command": [
                        "move => m /=.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite (randomRCorrect m a1 a2) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "promoteVariant",
            "line_nb": 288,
            "steps": [
                {
                    "command": [
                        "move => A B a p g size r r1 r2 H.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /reallyUnsafePromote /variant.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "destruct g.",
                        "VernacExtend",
                        "58c12597ac8434a7c2475af42670d77056ce85a1"
                    ]
                },
                {
                    "command": [
                        "rewrite /= H.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "semPromote",
            "line_nb": 295,
            "steps": [
                {
                    "command": [
                        "by rewrite /codom2 curry_codom2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "semPromoteSize",
            "line_nb": 298,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "runPromote",
            "line_nb": 301,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "runFmap",
            "line_nb": 304,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "semFmapBind",
            "line_nb": 307,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite /semGen.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "setoid_rewrite semFmapSize.",
                        "VernacExtend",
                        "abe0ccae8f47c3c0a787af13c91391fd8dfb7b70"
                    ]
                },
                {
                    "command": [
                        "setoid_rewrite semBindSize.",
                        "VernacExtend",
                        "9c4be0e0d90f6a9974ef031685952753315ed905"
                    ]
                },
                {
                    "command": [
                        "apply eq_bigcupr => s.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "setoid_rewrite semFmapSize.",
                        "VernacExtend",
                        "abe0ccae8f47c3c0a787af13c91391fd8dfb7b70"
                    ]
                },
                {
                    "command": [
                        "rewrite imset_bigcup.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "semSized",
            "line_nb": 317,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "semSizedSize",
            "line_nb": 320,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "semResize",
            "line_nb": 382,
            "steps": [
                {
                    "command": [
                        "by case: g => g; rewrite /semGen /semGenSize /= bigcup_const.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "semSizeResize",
            "line_nb": 385,
            "steps": [
                {
                    "command": [
                        "by case: g => g; rewrite /semGenSize.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unsizedResize",
            "line_nb": 388,
            "steps": [
                {
                    "command": [
                        "by case: g => g; rewrite /semGenSize.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "semGenSizeInhabited",
            "line_nb": 391,
            "steps": [
                {
                    "command": [
                        "destruct randomSeed_inhabited as [r].",
                        "VernacExtend",
                        "922774cb07e3a81798edb574a8492433d99eb36e"
                    ]
                },
                {
                    "command": [
                        "exists (run g s r); exists r; reflexivity.",
                        "VernacExtend",
                        "c02e6d26775f7e190c28b543f8788b3b4c49dcba"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "semThunkGenSize",
            "line_nb": 399,
            "steps": [
                {
                    "command": [
                        "split; intros [r Hr]; exists r; simpl in *; assumption.",
                        "VernacExtend",
                        "eaf920d4523e303fd8d9823b24fb2344ea38c5f1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "semThunkGen",
            "line_nb": 402,
            "steps": [
                {
                    "command": [
                        "split; intros [r Hr]; exists r; simpl in *; assumption.",
                        "VernacExtend",
                        "eaf920d4523e303fd8d9823b24fb2344ea38c5f1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "thunkGenUnsized",
            "line_nb": 405,
            "steps": [
                {
                    "command": [
                        "intros s1 s2.",
                        "VernacExtend",
                        "e41e36f8873f6a66fd611cc257aafb8e34cc695d"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite semThunkGenSize.",
                        "VernacExtend",
                        "93375f9970f47120010d145e831d8fb681bcbcd3"
                    ]
                },
                {
                    "command": [
                        "apply unsized.",
                        "VernacExtend",
                        "b13e18a18e08871079cc1aacb37a86fb9568ec89"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "thunkGenSizeMonotonic",
            "line_nb": 410,
            "steps": [
                {
                    "command": [
                        "intros s1 s2 Hs.",
                        "VernacExtend",
                        "58263317bcafa7670dfef4ad231dd01e88ebd64b"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite semThunkGenSize.",
                        "VernacExtend",
                        "93375f9970f47120010d145e831d8fb681bcbcd3"
                    ]
                },
                {
                    "command": [
                        "by apply monotonic.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "thunkGenSizeMonotonicOpt",
            "line_nb": 415,
            "steps": [
                {
                    "command": [
                        "intros s1 s2 Hs.",
                        "VernacExtend",
                        "58263317bcafa7670dfef4ad231dd01e88ebd64b"
                    ]
                },
                {
                    "command": [
                        "unfold semGenSizeOpt.",
                        "VernacExtend",
                        "8a37d7412be50b6dd8930396944ca0fc3f05ad79"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite semThunkGenSize.",
                        "VernacExtend",
                        "93375f9970f47120010d145e831d8fb681bcbcd3"
                    ]
                },
                {
                    "command": [
                        "by apply monotonicOpt.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "thunkGenSizeAntiMonotonicNone",
            "line_nb": 421,
            "steps": [
                {
                    "command": [
                        "intros s1 s2 Hs.",
                        "VernacExtend",
                        "58263317bcafa7670dfef4ad231dd01e88ebd64b"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite semThunkGenSize.",
                        "VernacExtend",
                        "93375f9970f47120010d145e831d8fb681bcbcd3"
                    ]
                },
                {
                    "command": [
                        "by apply monotonicNone.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}