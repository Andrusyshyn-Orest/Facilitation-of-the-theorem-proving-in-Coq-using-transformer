{
    "filename": "src/RandomQC.v",
    "coq_project": "QuickChick",
    "vernac_cmds": [
        [
            "Set Warnings \"-extraction-opaque-accessed,-extraction\".",
            "VernacSetOption",
            "0d9ccca50d6f2e2dcc602566ab5a0ab4e16fd208"
        ],
        [
            "Set Warnings \"-notation-overridden,-parsing\".",
            "VernacSetOption",
            "e5f1121c0752b2fa1e608a6680bad33b020316a3"
        ],
        [
            "Require Import mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "85e251063dc2b5a9653f7bb76dcd176ed36b42a9"
        ],
        [
            "From mathcomp Require Import ssrfun ssrbool ssrnat eqtype.",
            "VernacRequire",
            "bc2ec1e98dcefcc700863df35ca125e66faaddcb"
        ],
        [
            "Require Import ZArith.",
            "VernacRequire",
            "12e7bb35b490128f5b015cdb4af7d2255de07134"
        ],
        [
            "Axiom RandomSeed : Type.",
            "VernacAssumption",
            "977b51638edc7443dcb516b87cf5f2dbe68ba8d0"
        ],
        [
            "Axiom randomSeed_inhabited : inhabited RandomSeed.",
            "VernacAssumption",
            "1339867da2675baf9acf6eb87bd6c8ea5a65ccaa"
        ],
        [
            "Axiom randomNext : RandomSeed -> Z * RandomSeed.",
            "VernacAssumption",
            "cddcacb18eddcc12dc516907786a7458d798c72b"
        ],
        [
            "Axiom randomGenRange : RandomSeed -> Z * Z.",
            "VernacAssumption",
            "998f99e1984e526a6437a0f666cca17c324e0cb6"
        ],
        [
            "Axiom mkRandomSeed : Z -> RandomSeed.",
            "VernacAssumption",
            "9c491ad03e036a5698339ffeae5ad6ffcbe15df0"
        ],
        [
            "Axiom newRandomSeed : RandomSeed.",
            "VernacAssumption",
            "f733f6e3548f3080c4b7dc5ba8ef427079af9a41"
        ],
        [
            "Axiom randomSplit : RandomSeed -> RandomSeed * RandomSeed.",
            "VernacAssumption",
            "bc878602680b7afdd3ea6c451ac630a8919010b4"
        ],
        [
            "Axiom randomSplitAssumption : forall s1 s2 : RandomSeed, exists s, randomSplit s = (s1,s2).",
            "VernacAssumption",
            "20a6241398ad1c7832025cade93ddcb35a5787f1"
        ],
        [
            "CoInductive RandomSeedTree := | RstNode : RandomSeed -> RandomSeedTree -> RandomSeedTree -> RandomSeedTree.",
            "VernacInductive",
            "c2c75ea8b4004edd4ce7782af720673b0d72e7cd"
        ],
        [
            "Definition root_rst (rst : RandomSeedTree) : RandomSeed := match rst with | RstNode root _ _ => root end.",
            "VernacDefinition",
            "87f98f7a2ab26f146d264c615a03229709c708eb"
        ],
        [
            "Definition left_rst (rst : RandomSeedTree) : RandomSeedTree := match rst with | RstNode _ t1 _ => t1 end.",
            "VernacDefinition",
            "bc6619a899acabdd03d94e02b9d95432b66b02b8"
        ],
        [
            "Definition right_rst (rst : RandomSeedTree) : RandomSeedTree := match rst with | RstNode _ _ t2 => t2 end.",
            "VernacDefinition",
            "178af850f246415f4b90917f243300c0fa40a166"
        ],
        [
            "Lemma rst_eta : forall rst : RandomSeedTree, rst = RstNode (root_rst rst) (left_rst rst) (right_rst rst).",
            "VernacStartTheoremProof",
            "48377450180e5389038796adf686228f567fe665"
        ],
        [
            "destruct rst.",
            "VernacExtend",
            "25d68da100e7064cb4465a38e9497c834d0afec1"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "CoFixpoint mkSeedTree (s : RandomSeed) : RandomSeedTree := let (s1, s2) := randomSplit s in RstNode s (mkSeedTree s1) (mkSeedTree s2).",
            "VernacCoFixpoint",
            "5fe1ccf79174506fbb145a9ced0c97190b18ccdc"
        ],
        [
            "Lemma mkSeedTreeHelper r : mkSeedTree r = RstNode r (mkSeedTree (randomSplit r).1) (mkSeedTree (randomSplit r).2).",
            "VernacStartTheoremProof",
            "178eb5dddb0b692af2a35e5cd4b11441d8fe4042"
        ],
        [
            "by rewrite [mkSeedTree _]rst_eta /=; case: (randomSplit r).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive SplitDirection := Left | Right.",
            "VernacInductive",
            "f57783244f3257d444886ac05fca4f2968fddd2f"
        ],
        [
            "Definition SplitPath := list SplitDirection.",
            "VernacDefinition",
            "6185239429090feeeea7246968934ccde916f668"
        ],
        [
            "Require Import List.",
            "VernacRequire",
            "d9bcce4a390afeb160107bf87c6f7abe3d82c6d6"
        ],
        [
            "Import ListNotations.",
            "VernacImport",
            "52647db2a3b752153a8cbd37039246f200bccdee"
        ],
        [
            "Fixpoint varySeedAux (p : SplitPath) (rst : RandomSeedTree) : RandomSeed := let '(RstNode s t1 t2) := rst in match p with | [] => s | Left :: p' => varySeedAux p' t1 | Right :: p' => varySeedAux p' t2 end.",
            "VernacFixpoint",
            "984745668c4d39949aace38c56dd5cbf9bd8e0e5"
        ],
        [
            "Definition varySeed (p : SplitPath) (s : RandomSeed) : RandomSeed := varySeedAux p (mkSeedTree s).",
            "VernacDefinition",
            "fa08a2b7adba04ca0672faac90e8ffc22c956148"
        ],
        [
            "Inductive SeedTree := | SeedTreeUndef : SeedTree | SeedTreeLeaf : RandomSeed -> SeedTree | SeedTreeNode : SeedTree -> SeedTree -> SeedTree.",
            "VernacInductive",
            "e8658696fb7331230b250df9127d92462b5b4163"
        ],
        [
            "Inductive SubSeedTree : SeedTree -> RandomSeedTree -> Prop := | SubUndef : forall (rst : RandomSeedTree), SubSeedTree SeedTreeUndef rst | SubLeaf : forall (s : RandomSeed) (rst1 rst2 : RandomSeedTree), SubSeedTree (SeedTreeLeaf s) (RstNode s rst1 rst2) | SubNode : forall (st1 st2 : SeedTree) (rst1 rst2 : RandomSeedTree) (s : RandomSeed), SubSeedTree st1 rst1 -> SubSeedTree st2 rst2 -> SubSeedTree (SeedTreeNode st1 st2) (RstNode s rst1 rst2).",
            "VernacInductive",
            "2abf4f7b1fda0589be733dd8ff99bca1eb983104"
        ],
        [
            "Fixpoint varySeed' (st : SeedTree) (p : SplitPath) : option RandomSeed := match st with | SeedTreeUndef => None | SeedTreeLeaf s => match p with | [] => Some s | _ => None end | SeedTreeNode st1 st2 => match p with | [] => None | Left :: p' => varySeed' st1 p' | Right :: p' => varySeed' st2 p' end end.",
            "VernacFixpoint",
            "e4250d28392b9ff17ccd3e53d88bfef6a3637d38"
        ],
        [
            "Lemma pathAgreesOnSubTree : forall (st : SeedTree) (rst : RandomSeedTree) (p : SplitPath) (s : RandomSeed), SubSeedTree st rst -> varySeed' st p = Some s -> varySeedAux p rst = s.",
            "VernacStartTheoremProof",
            "10cface425ce5c94ff8a16ed495fd98bd0c5458e"
        ],
        [
            "induction st.",
            "VernacExtend",
            "fadcd08c305d3b0c472a5ea2ae957b639a4cd610"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "destruct p eqn:P.",
            "VernacExtend",
            "58daf28ce8131e2969cc5cd1cdb5d8d3c645662f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "destruct p eqn:P.",
            "VernacExtend",
            "58daf28ce8131e2969cc5cd1cdb5d8d3c645662f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion H; subst.",
            "VernacExtend",
            "123ebc73101dcac5781200440a60232218464ea1"
        ],
        [
            "destruct s0 eqn:S0.",
            "VernacExtend",
            "2023069c4d91234dbdc4e905dfbe452332782de5"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply IHst1; auto.",
            "VernacExtend",
            "10da0f57704347374760b94129fd81488cbbafd5"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply IHst2; auto.",
            "VernacExtend",
            "1c85b479095755ed5e5f914c3181ba47b538f3e9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma splitExpand st : exists s, SubSeedTree st (mkSeedTree s).",
            "VernacStartTheoremProof",
            "e9f2e286dd4d1371d4d2ddcc609e006f486c5738"
        ],
        [
            "elim: st => [|r|st1 [s1 st_s1] st2 [s2 st_s2]].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "by case: randomSeed_inhabited=> seed; exists seed; apply: SubUndef.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "by exists r; rewrite mkSeedTreeHelper; constructor.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [s eq_s] := randomSplitAssumption s1 s2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by exists s; rewrite mkSeedTreeHelper eq_s; constructor.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive PrefixFree : list SplitPath -> Prop := | FreeNil : PrefixFree [] | FreeCons : forall (p : SplitPath) (l : list SplitPath), PrefixFree l -> (forall (p' : SplitPath), In p' l -> (forall p1 p2, p' ++ p1 = p ++ p2-> False)) -> PrefixFree (p :: l).",
            "VernacInductive",
            "1a4faff9999796a304a0d0a96813a009d5cf76c2"
        ],
        [
            "Lemma prefixFreeSingleton : forall p, PrefixFree [p].",
            "VernacStartTheoremProof",
            "4333f0de3f1b75151b2e31e8e9febb33c05c96b7"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply FreeCons.",
            "VernacExtend",
            "b915070eb96844d8d98d9b446ee5b133947b5784"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply FreeNil.",
            "VernacExtend",
            "dfe341d21413ba9f7735ba801e53fa904b829275"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prefixFreeEmpty : forall l, PrefixFree ([] :: l) -> l = [].",
            "VernacStartTheoremProof",
            "cee6ee355393d839599d68caeee656237ae8aeb3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct l; auto.",
            "VernacExtend",
            "4bfcd2f625a7deb5fd623e7d5faa40328d66978c"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "pose proof H3 l.",
            "VernacExtend",
            "e6257bfddc809ce3f5701ea4b7363195d8aaa31c"
        ],
        [
            "assert (In l (l :: l0)) by (left; auto).",
            "VernacExtend",
            "4392f746bdba45f14f95fa674916cc98aca1aba4"
        ],
        [
            "eapply H0 in H1.",
            "VernacExtend",
            "ee3d12249df47beb742e4b6335059c02024ef341"
        ],
        [
            "inversion H1.",
            "VernacExtend",
            "58dee2cce9b13b50b065ba894c1b533413715754"
        ],
        [
            "instantiate (2 := []).",
            "VernacExtend",
            "4d6cd49cba38d2c9b13f7a4485194582ca2214f5"
        ],
        [
            "rewrite app_nil_r; simpl; eauto.",
            "VernacExtend",
            "799498476fb951fabc92aa3ce1a0e49a26faea61"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive correspondingSeedTree (l : list SplitPath) (f : SplitPath -> RandomSeed) (st : SeedTree) : Prop := | Corresponding : (forall (p : SplitPath) s, varySeed' st p = Some s -> In p l) -> (forall (p : SplitPath), In p l -> varySeed' st p = Some (f p)) -> PrefixFree l -> correspondingSeedTree l f st.",
            "VernacInductive",
            "81ee34791164bea61865f760d56cc0b69263b61e"
        ],
        [
            "Lemma corrEmptyUndef : forall f, correspondingSeedTree [] f SeedTreeUndef.",
            "VernacStartTheoremProof",
            "3b2134e7e5bd27312ee075855c6e89438cf00e18"
        ],
        [
            "intro f.",
            "VernacExtend",
            "cfca43118419dd191a669828299d7df459d583f5"
        ],
        [
            "apply Corresponding.",
            "VernacExtend",
            "33c52dde00de1b06bbb4327b1858338fa2878599"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros p s Contra.",
            "VernacExtend",
            "0ca8e3a8e590e2fa30e45738e6107c3f189f60b1"
        ],
        [
            "inversion Contra.",
            "VernacExtend",
            "532d20696c58e2a0142e7a5fb46f8af6ab72db97"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros p InNil.",
            "VernacExtend",
            "5bda41355df8cfb3424c61c4515fd5b883ea1be7"
        ],
        [
            "inversion InNil.",
            "VernacExtend",
            "6a92312fb45a088e77ac9163bcd48c81b07c8c20"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply FreeNil.",
            "VernacExtend",
            "dfe341d21413ba9f7735ba801e53fa904b829275"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac fireInLeft name := match goal with | [H : In ?X (?X :: ?XS) -> _ |- _ ] => assert (In X (X :: XS)) as name by (left; auto); apply H in name; clear H end.",
            "VernacExtend",
            "1bdb1443c9a43a5d39d8f6f7a702e7d8d48ef38f"
        ],
        [
            "Lemma corrUndefEmpty : forall l f, correspondingSeedTree l f SeedTreeUndef -> l = [].",
            "VernacStartTheoremProof",
            "6ea742253a229e4eafb12f6324c71bfcd6ca7baa"
        ],
        [
            "intros l f Corr.",
            "VernacExtend",
            "9b700d2af53d77e4c0b3140ffeaf4f5bb358b0d5"
        ],
        [
            "inversion Corr as [Vary_In In_Vary Pref]; clear Corr.",
            "VernacExtend",
            "8307ab860ab66e5f6ee24d3b5ec7d980df121468"
        ],
        [
            "destruct l as [ | p ps]; auto.",
            "VernacExtend",
            "e99d932d2684fc39289593fd5069f33b659aebd1"
        ],
        [
            "clear Vary_In Pref.",
            "VernacExtend",
            "7ac2b5c528e65710583e787d2f4780a73f42eec3"
        ],
        [
            "pose proof (In_Vary p) as Contra; clear In_Vary.",
            "VernacExtend",
            "1115f22a694286334830ce654f1070d43fb97313"
        ],
        [
            "fireInLeft Hyp.",
            "VernacExtend",
            "b964943beba5a030050f46b0325a2fdaffefeab8"
        ],
        [
            "inversion Hyp.",
            "VernacExtend",
            "e8a79d7c9df846da8ea7555b1624013f7b3cbe26"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma PrefixFreeWithNil : forall l, PrefixFree ([] :: l) -> l = [].",
            "VernacStartTheoremProof",
            "71cb3fc6728034463739e6e2f98bd67d7d984fae"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H; subst.",
            "VernacExtend",
            "123ebc73101dcac5781200440a60232218464ea1"
        ],
        [
            "destruct l eqn:L; auto.",
            "VernacExtend",
            "c1e41b0efb6b4986ef63ef0db3810b489f181926"
        ],
        [
            "pose proof (H3 l0).",
            "VernacExtend",
            "9baa3da957fc617fab41c4a83bc9cf9a94c50037"
        ],
        [
            "assert (In l0 (l0 :: l1)) by (left; auto).",
            "VernacExtend",
            "2f40e7609690acac1dc6a92b0be1162fca656ec6"
        ],
        [
            "eapply H0 in H1.",
            "VernacExtend",
            "ee3d12249df47beb742e4b6335059c02024ef341"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inversion H1.",
            "VernacExtend",
            "58dee2cce9b13b50b065ba894c1b533413715754"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "instantiate (1 := l0).",
            "VernacExtend",
            "4331048ac6df033b3e9a2c343478c1a294fac846"
        ],
        [
            "instantiate (1 := []).",
            "VernacExtend",
            "a4ff658212c83728e90563a11f103f7ab23aea07"
        ],
        [
            "rewrite app_nil_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma corrEmptyLeaf : forall s l f, correspondingSeedTree l f (SeedTreeLeaf s) -> l = [[]] /\\ s = f [].",
            "VernacStartTheoremProof",
            "154c63938b5eabf71136e8338cb3d88b987d7cda"
        ],
        [
            "intros s l f Corr.",
            "VernacExtend",
            "a588dd2dd26ab2a0449f1b71de0d71c4309ce23b"
        ],
        [
            "inversion Corr as [Vary_In In_Vary Pref]; clear Corr.",
            "VernacExtend",
            "8307ab860ab66e5f6ee24d3b5ec7d980df121468"
        ],
        [
            "pose proof (Vary_In [] s) as Hyp; clear Vary_In.",
            "VernacExtend",
            "e50eb41d0b16c37b1dd9ac0c9ec7b18c5d024a38"
        ],
        [
            "simpl in Hyp.",
            "VernacExtend",
            "b668b3da0bf9ed61164e3a2fc832fc359440e086"
        ],
        [
            "assert (InNilL : In [] l) by (apply Hyp; auto); clear Hyp.",
            "VernacExtend",
            "bcdeae70e91e9b7b465382011f4f9cc94207023a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct l eqn:L.",
            "VernacExtend",
            "bbba45bf52f8d93627a5a08ad1633c6d01648052"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion InNilL.",
            "VernacExtend",
            "7f8c9d397bed4d7611f54591c74d9c62f73c203a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct s0 eqn : S0.",
            "VernacExtend",
            "2023069c4d91234dbdc4e905dfbe452332782de5"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply PrefixFreeWithNil in Pref; subst; auto.",
            "VernacExtend",
            "200067f2a69baa6228c02038f76b38121096fc63"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "pose proof (In_Vary (s1 :: s2)) as Hyp; clear In_Vary.",
            "VernacExtend",
            "8bb5e3189a6238fb14fa667a32013df7d8b1fc57"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inversion Pref.",
            "VernacExtend",
            "367f372f021bdfc082fe1df2be04bd24990f9717"
        ],
        [
            "fireInLeft Hyp'.",
            "VernacExtend",
            "2bdda87f41709f4246e6b294af79057f39609539"
        ],
        [
            "simpl in Hyp'.",
            "VernacExtend",
            "41b8596b107c9441e8daea69a0ec96a42176d222"
        ],
        [
            "inversion Hyp'.",
            "VernacExtend",
            "503e826e661d8ae99943c5209ccb2dd993140a37"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "pose proof In_Vary [] as Hyp; clear In_Vary.",
            "VernacExtend",
            "a43f416c3bceb5b9d48d9590b512fcaa1111a0b8"
        ],
        [
            "apply Hyp in InNilL; clear Hyp.",
            "VernacExtend",
            "911ef38851a0c15183c127cd8ae85b26f80470d6"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma corrNodeNonEmpty : forall st1 st2 l p f, correspondingSeedTree l f (SeedTreeNode st1 st2) -> In p l -> p <> [].",
            "VernacStartTheoremProof",
            "0182110a4f26898a483cbff21cb7d63fa03edfb3"
        ],
        [
            "unfold not; intros st1 st2 l p f Corr InPL PNil; subst.",
            "VernacExtend",
            "c7b186869a57dfafa9fe18aca1e2d489bb250d27"
        ],
        [
            "inversion Corr as [_ In_Vary _]; clear Corr.",
            "VernacExtend",
            "f7934864068940b769931d3553b82746b3651f07"
        ],
        [
            "pose proof (In_Vary []) as Hyp; clear In_Vary.",
            "VernacExtend",
            "a43f416c3bceb5b9d48d9590b512fcaa1111a0b8"
        ],
        [
            "apply Hyp in InPL; clear Hyp.",
            "VernacExtend",
            "3b70a39b1c25b515ed1ab5c2a8b5566141f7aef4"
        ],
        [
            "simpl in InPL.",
            "VernacExtend",
            "f6e9fb162344b8322f6b19cb20cd00ac6f5000ae"
        ],
        [
            "inversion InPL.",
            "VernacExtend",
            "ec63acd471dbd9b16e73ec8faaa9cb86d40e84fd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve corrEmptyUndef.",
            "VernacHints",
            "bdb3b9cbcb78759f239bd87b9815ba5f252e9ab4"
        ],
        [
            "Hint Resolve corrNodeNonEmpty.",
            "VernacHints",
            "305b077b49d3c5d1497bf592dd5707cb6abab226"
        ],
        [
            "Definition Direction_eq_dec : forall (d1 d2 : SplitDirection), {d1 = d2} + {d1 <> d2}.",
            "VernacDefinition",
            "940766a22347fb26eafb80d602cb8c9a4ec04482"
        ],
        [
            "decide equality.",
            "VernacExtend",
            "10aba07d521545accbb51a4c2e0695a9ddce3199"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition eq_dir_b (d1 d2 : SplitDirection) : bool := match d1,d2 with | Left, Left => true | Right, Right => true | _, _ => false end.",
            "VernacDefinition",
            "79ca031f78a6f6b4a24270eb62a7dcaa34a00499"
        ],
        [
            "Lemma eq_dir_b_eq : forall d1 d2, eq_dir_b d1 d2 = true <-> d1 = d2.",
            "VernacStartTheoremProof",
            "15284e27553e1b3540ce51e694d03cbc6c691c06"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold eq_dir_b.",
            "VernacExtend",
            "664f0701d8c73067a8a1a3580ad58d1b3edf44d1"
        ],
        [
            "destruct d1; destruct d2; split; auto; intro Contra; inversion Contra.",
            "VernacExtend",
            "0664ea1f5ea5a14deb55967966b0de38fd850dd8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition refineList (d : SplitDirection) (l : list SplitPath) : list SplitPath := map (@tl SplitDirection) (filter (fun p => match hd_error p with | Some d' => eq_dir_b d d' | _ => false end) l).",
            "VernacDefinition",
            "c6ef084b836eb2b89b561b9ffb4028c12ca7e22b"
        ],
        [
            "Lemma refineCorrect : forall d l p, In p (refineList d l) -> In (d :: p) l.",
            "VernacStartTheoremProof",
            "b4060db872f05d7cb55302d83ef67ffec8c6c604"
        ],
        [
            "intros d l p.",
            "VernacExtend",
            "aa3305e87b270ec770cf492b445d84fb10015d9f"
        ],
        [
            "unfold refineList.",
            "VernacExtend",
            "0db58f98a912d24740a5ab4c284e49a6be841737"
        ],
        [
            "rewrite in_map_iff.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H; clear H.",
            "VernacExtend",
            "4307aab7d08f40aa3f33a7c04b2c5713617cbd6b"
        ],
        [
            "inversion H0; clear H0.",
            "VernacExtend",
            "81451fd27f287bf5bfd1c5a230d7cd85c2471c6d"
        ],
        [
            "generalize H1; clear H1.",
            "VernacExtend",
            "8f7d5fc11e4f2aab9d79cbc415ff67ec0dca8762"
        ],
        [
            "rewrite filter_In.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H0; clear H0.",
            "VernacExtend",
            "81451fd27f287bf5bfd1c5a230d7cd85c2471c6d"
        ],
        [
            "unfold tl in H.",
            "VernacExtend",
            "d96e4b81735393d9dcafbe56198cc5196b29ffa0"
        ],
        [
            "destruct x eqn:X.",
            "VernacExtend",
            "32384b85e2857812fc767824fa43303b6377aa6b"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl in H2.",
            "VernacExtend",
            "b1e247c43b6623097ab13813b4de664287dd4249"
        ],
        [
            "inversion H2.",
            "VernacExtend",
            "afdc959ca1f20d64005a6cd95d8f83134e6ae5f8"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl in H2.",
            "VernacExtend",
            "b1e247c43b6623097ab13813b4de664287dd4249"
        ],
        [
            "apply eq_dir_b_eq in H2.",
            "VernacExtend",
            "bfe4ae0a6bdf3e5ce753b82587d017654f9b41b2"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma refineCorrect' : forall d l p, In (d :: p) l -> In p (refineList d l).",
            "VernacStartTheoremProof",
            "a4e0e3b6844f2223c1996135ce5c3566ee9f251d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold refineList.",
            "VernacExtend",
            "0db58f98a912d24740a5ab4c284e49a6be841737"
        ],
        [
            "apply in_map_iff.",
            "VernacExtend",
            "b128e1e6f601182342113d742a28792f5aaec52c"
        ],
        [
            "exists (d :: p).",
            "VernacExtend",
            "2b2ae54ef8b3231f4acb7397f20c78b583e10132"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply filter_In.",
            "VernacExtend",
            "95c2fd78cbf1a879af2e72bb24df2817c4c830a0"
        ],
        [
            "split; simpl; auto.",
            "VernacExtend",
            "e2ee7819fbb32d2c4a8d46eec291a3c64ca8c3fb"
        ],
        [
            "unfold eq_dir_b; destruct d; auto.",
            "VernacExtend",
            "a7ed47b748fd56e798fe4e3883195a681a5725dd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma refinePreservesPrefixFree : forall d l, PrefixFree l -> PrefixFree (refineList d l).",
            "VernacStartTheoremProof",
            "73a08968358ff31fd37ff5039db3b89215699262"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction l.",
            "VernacExtend",
            "1194af70832939708f8c7fde2f18f81c37b97a0c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold refineList; constructor.",
            "VernacExtend",
            "fd0f0747d5e2df582a7d264900ab250a4d69a412"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct a eqn:A; subst.",
            "VernacExtend",
            "04cea96a21c05b79a2d43c7c4b211b7db2b45f23"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply prefixFreeEmpty in H.",
            "VernacExtend",
            "2274cd5d4fea1455182a74b50301b6d3d1846e07"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "unfold refineList.",
            "VernacExtend",
            "0db58f98a912d24740a5ab4c284e49a6be841737"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct s eqn:S; destruct d; subst.",
            "VernacExtend",
            "fd6b5a69d045042b725754afb51063334783a57b"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold refineList; simpl.",
            "VernacExtend",
            "eebd265b2988c2103c0aeb969b359264b76c3778"
        ],
        [
            "eapply FreeCons.",
            "VernacExtend",
            "b84a9f9f604285e67ce9aa7fe87514e2f852680b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply IHl.",
            "VernacExtend",
            "af412c6009bba78f939aa53ab07dcd1baaf5888b"
        ],
        [
            "inversion H; auto.",
            "VernacExtend",
            "ca70ce9532e796fd752cb12d4d270e557a16bc8a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H; subst; clear H.",
            "VernacExtend",
            "af91d9c91d2a2af0497b29ec223cb26a1faa1092"
        ],
        [
            "apply in_map_iff in H0.",
            "VernacExtend",
            "24f56f16f0d005852ffec0b9e84dc4ff72c47c2e"
        ],
        [
            "inversion H0; subst; clear H0.",
            "VernacExtend",
            "67633bcad1f08913253223fb1d000a0f96a47e48"
        ],
        [
            "inversion H; subst; clear H.",
            "VernacExtend",
            "af91d9c91d2a2af0497b29ec223cb26a1faa1092"
        ],
        [
            "apply filter_In in H2.",
            "VernacExtend",
            "6085c113ed4d6fbd76a29418e795ae7d951d990e"
        ],
        [
            "inversion H2; subst; clear H2.",
            "VernacExtend",
            "0fe4d6346cced611a23cd7924eeac6763288ab20"
        ],
        [
            "destruct x eqn:X; simpl in *.",
            "VernacExtend",
            "1683d5479275632f24f0a13fafd6b2c31ed3fa04"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "destruct s eqn:S; simpl in *.",
            "VernacExtend",
            "bb4e1031daa949e572074853bff279bf797da940"
        ],
        [
            "pose proof H5 (Left :: l0).",
            "VernacExtend",
            "b8088b53378e9d8c4e3f14546b076285a0310ab5"
        ],
        [
            "eapply H2 in H; auto.",
            "VernacExtend",
            "34f37f02e665c62a01652e85b9a1cd295673868a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "instantiate (1 := p2).",
            "VernacExtend",
            "8f2479c238050e9604928f680c531d92dcecf538"
        ],
        [
            "instantiate (1:= p1).",
            "VernacExtend",
            "72f80f2a9baf882f760ca167a32f9a82a93cfe7c"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold refineList; simpl.",
            "VernacExtend",
            "eebd265b2988c2103c0aeb969b359264b76c3778"
        ],
        [
            "apply IHl.",
            "VernacExtend",
            "af412c6009bba78f939aa53ab07dcd1baaf5888b"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold refineList; simpl.",
            "VernacExtend",
            "eebd265b2988c2103c0aeb969b359264b76c3778"
        ],
        [
            "apply IHl.",
            "VernacExtend",
            "af412c6009bba78f939aa53ab07dcd1baaf5888b"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold refineList; simpl.",
            "VernacExtend",
            "eebd265b2988c2103c0aeb969b359264b76c3778"
        ],
        [
            "eapply FreeCons.",
            "VernacExtend",
            "b84a9f9f604285e67ce9aa7fe87514e2f852680b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply IHl.",
            "VernacExtend",
            "af412c6009bba78f939aa53ab07dcd1baaf5888b"
        ],
        [
            "inversion H; auto.",
            "VernacExtend",
            "ca70ce9532e796fd752cb12d4d270e557a16bc8a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H; subst; clear H.",
            "VernacExtend",
            "af91d9c91d2a2af0497b29ec223cb26a1faa1092"
        ],
        [
            "apply in_map_iff in H0.",
            "VernacExtend",
            "24f56f16f0d005852ffec0b9e84dc4ff72c47c2e"
        ],
        [
            "inversion H0; subst; clear H0.",
            "VernacExtend",
            "67633bcad1f08913253223fb1d000a0f96a47e48"
        ],
        [
            "inversion H; subst; clear H.",
            "VernacExtend",
            "af91d9c91d2a2af0497b29ec223cb26a1faa1092"
        ],
        [
            "apply filter_In in H2.",
            "VernacExtend",
            "6085c113ed4d6fbd76a29418e795ae7d951d990e"
        ],
        [
            "inversion H2; subst; clear H2.",
            "VernacExtend",
            "0fe4d6346cced611a23cd7924eeac6763288ab20"
        ],
        [
            "destruct x eqn:X; simpl in *.",
            "VernacExtend",
            "1683d5479275632f24f0a13fafd6b2c31ed3fa04"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "destruct s eqn:S; simpl in *.",
            "VernacExtend",
            "bb4e1031daa949e572074853bff279bf797da940"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "pose proof H5 (Right :: l0).",
            "VernacExtend",
            "9cd7b5bce8a4430cc4c1cefd0998f9460413fa22"
        ],
        [
            "eapply H2 in H; auto.",
            "VernacExtend",
            "34f37f02e665c62a01652e85b9a1cd295673868a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "instantiate (1 := p2).",
            "VernacExtend",
            "8f2479c238050e9604928f680c531d92dcecf538"
        ],
        [
            "instantiate (1:= p1).",
            "VernacExtend",
            "72f80f2a9baf882f760ca167a32f9a82a93cfe7c"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition refineFunction (f : SplitPath -> RandomSeed) (d : SplitDirection) (arg : SplitPath) : RandomSeed := f (d :: arg).",
            "VernacDefinition",
            "3d9b135f89b788d5b928d3572786945852378cf9"
        ],
        [
            "Lemma refineFunCorrect : forall f d p, f (d :: p) = (refineFunction f d) p.",
            "VernacStartTheoremProof",
            "9506840ee0a5671eede77674670f59015e1d67b3"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite refineFunCorrect.",
            "VernacExtend",
            "d5089796ac8fdd850a36dc0b9ccda35bef7a3fe7"
        ],
        [
            "Hint Unfold refineFunction.",
            "VernacHints",
            "b5248dd3eccfd0929e5e4771860cb93225f993e8"
        ],
        [
            "Program Fixpoint addToTree (st : SeedTree) (p : SplitPath) (f : SplitPath -> RandomSeed) (l : list SplitPath) (Corr : correspondingSeedTree l f st) (Pref : forall p', In p' l -> (forall p1 p2, p ++ p1 = p' ++ p2 -> False)) : SeedTree := match st with | SeedTreeUndef => match p with | [] => SeedTreeLeaf (f p) | Left :: p' => SeedTreeNode (addToTree SeedTreeUndef p' (refineFunction f Left) [] _ _) SeedTreeUndef | Right :: p' => SeedTreeNode SeedTreeUndef (addToTree SeedTreeUndef p' (refineFunction f Right) [] _ _) end | SeedTreeLeaf s => _ | SeedTreeNode st1 st2 => match p with | [] => SeedTreeLeaf (f p) | Left :: p' => SeedTreeNode (addToTree st1 p' (refineFunction f Left) (refineList Left l) _ _) st2 | Right :: p' => SeedTreeNode st1 (addToTree st2 p' (refineFunction f Right) (refineList Right l) _ _) end end.",
            "VernacFixpoint",
            "5fe632effa98be7da3efc0e8a0bb7febad97312c"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "apply corrEmptyLeaf in Corr.",
            "VernacExtend",
            "5b4e4e5e2e555ca7cb74cbda98552a7332e3a0d5"
        ],
        [
            "inversion Corr; clear Corr; subst.",
            "VernacExtend",
            "609c109aa47f0e36c9914f8f40054bed564bf365"
        ],
        [
            "pose proof (Pref []).",
            "VernacExtend",
            "bd1acf31e40e9df106a65bae6265540f63b29a08"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "eapply H.",
            "VernacExtend",
            "cf02e2445d256ebbbf0bbedfdc7f26983e04ec5a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "left; auto.",
            "VernacExtend",
            "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "instantiate (2 := []).",
            "VernacExtend",
            "4d6cd49cba38d2c9b13f7a4485194582ca2214f5"
        ],
        [
            "rewrite app_nil_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "eapply Corresponding; intros.",
            "VernacExtend",
            "9f46013f4d6decba4b2f1d090d1973a957141c78"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply refineCorrect'.",
            "VernacExtend",
            "9d8a3e80e410e5ac66dbbd857fb41e317f413bb0"
        ],
        [
            "inversion Corr as [Vary_In _ _ ]; clear Corr.",
            "VernacExtend",
            "934f4a7bf840415691d8931954cafe8e3725ea18"
        ],
        [
            "pose proof (Vary_In (Left :: p) s) as Hyp; clear Vary_In.",
            "VernacExtend",
            "c16f5304ec2926202deaa20c03d73c0eda619e88"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply refineCorrect in H.",
            "VernacExtend",
            "5df5d92e07a88fae6aff046752ba11c1fa3e1e9b"
        ],
        [
            "inversion Corr as [_ In_Vary _]; clear Corr.",
            "VernacExtend",
            "f7934864068940b769931d3553b82746b3651f07"
        ],
        [
            "pose proof (In_Vary (Left :: p)) as Hyp; clear In_Vary.",
            "VernacExtend",
            "13f2a596872ce89e6f4f26d9f38f232e13f04f04"
        ],
        [
            "apply Hyp in H; clear Hyp.",
            "VernacExtend",
            "4069f46389adebe62264dac8855239c9b21a7d92"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "unfold refineFunction; auto.",
            "VernacExtend",
            "8a8352c2b454f474dc9de0e60fe7a5ff6ecf7ad0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inversion Corr.",
            "VernacExtend",
            "23304f925973271dcd33cfde8f52c25a42914c5d"
        ],
        [
            "apply refinePreservesPrefixFree.",
            "VernacExtend",
            "f8400df018bdf112ac43bbbe564bf8c9a24461e3"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "eapply Pref.",
            "VernacExtend",
            "3a09c0c8c2f5a901f76e19ba8b57fff9cdf007bd"
        ],
        [
            "instantiate (1:= Left :: p'0).",
            "VernacExtend",
            "b4105e3bfb0b2cee9dd0e8224c8eb527e92942c1"
        ],
        [
            "apply refineCorrect; auto.",
            "VernacExtend",
            "dcc651384c7f098e79c9345ece28f73eccdac81c"
        ],
        [
            "instantiate (1:= p2).",
            "VernacExtend",
            "8f2479c238050e9604928f680c531d92dcecf538"
        ],
        [
            "instantiate (1:=p1).",
            "VernacExtend",
            "72f80f2a9baf882f760ca167a32f9a82a93cfe7c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "eapply Corresponding; intros.",
            "VernacExtend",
            "9f46013f4d6decba4b2f1d090d1973a957141c78"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply refineCorrect'.",
            "VernacExtend",
            "9d8a3e80e410e5ac66dbbd857fb41e317f413bb0"
        ],
        [
            "inversion Corr as [Vary_In _ _ ]; clear Corr.",
            "VernacExtend",
            "934f4a7bf840415691d8931954cafe8e3725ea18"
        ],
        [
            "pose proof (Vary_In (Right :: p) s) as Hyp; clear Vary_In.",
            "VernacExtend",
            "b9fcc0d459ad94ea19d67668149aac47f7aa4f92"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply refineCorrect in H.",
            "VernacExtend",
            "5df5d92e07a88fae6aff046752ba11c1fa3e1e9b"
        ],
        [
            "inversion Corr as [_ In_Vary _]; clear Corr.",
            "VernacExtend",
            "f7934864068940b769931d3553b82746b3651f07"
        ],
        [
            "pose proof (In_Vary (Right :: p)) as Hyp; clear In_Vary.",
            "VernacExtend",
            "12cb6e24ebdac73cf818b285cced0d0245ea7ad3"
        ],
        [
            "apply Hyp in H; clear Hyp.",
            "VernacExtend",
            "4069f46389adebe62264dac8855239c9b21a7d92"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "unfold refineFunction; auto.",
            "VernacExtend",
            "8a8352c2b454f474dc9de0e60fe7a5ff6ecf7ad0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inversion Corr.",
            "VernacExtend",
            "23304f925973271dcd33cfde8f52c25a42914c5d"
        ],
        [
            "apply refinePreservesPrefixFree.",
            "VernacExtend",
            "f8400df018bdf112ac43bbbe564bf8c9a24461e3"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "eapply Pref.",
            "VernacExtend",
            "3a09c0c8c2f5a901f76e19ba8b57fff9cdf007bd"
        ],
        [
            "instantiate (1:= Right :: p'0).",
            "VernacExtend",
            "1b5e53c32ce67c3e8b3caa5c33a083f31266e240"
        ],
        [
            "apply refineCorrect; auto.",
            "VernacExtend",
            "dcc651384c7f098e79c9345ece28f73eccdac81c"
        ],
        [
            "instantiate (1:= p2).",
            "VernacExtend",
            "8f2479c238050e9604928f680c531d92dcecf538"
        ],
        [
            "instantiate (1:=p1).",
            "VernacExtend",
            "72f80f2a9baf882f760ca167a32f9a82a93cfe7c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addToTreeCorrect1 : forall (st : SeedTree) (p : SplitPath) (f : SplitPath -> RandomSeed) (l : list SplitPath) (Corr : correspondingSeedTree l f st) (Pref : forall p', In p' l -> (forall p1 p2, p ++ p1 = p' ++ p2 -> False)), varySeed' (addToTree st p f l Corr Pref) p = Some (f p).",
            "VernacStartTheoremProof",
            "d0ef7055221ddbc5e5b87a4e41fe9116440fb4fd"
        ],
        [
            "intros st p.",
            "VernacExtend",
            "de4b1112b9c8da89f8aa7e1a0f7059bc3f80d1e8"
        ],
        [
            "generalize dependent st.",
            "VernacExtend",
            "70ae6801ffa3f4b0bb8a12da5956cb9c13f30582"
        ],
        [
            "induction p.",
            "VernacExtend",
            "57241b1bf2113f288b5c35cf50cb4c85d8323deb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros st f l Corr Pref.",
            "VernacExtend",
            "df551348715f634f2c10db203fa9897c9631ba82"
        ],
        [
            "unfold addToTree.",
            "VernacExtend",
            "d891130e6945f8be220e79cd12d22f0c7a1ae26f"
        ],
        [
            "destruct st.",
            "VernacExtend",
            "1de71a29f426bba83dc1cdf101ce2bd971405966"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "apply corrEmptyLeaf in Corr.",
            "VernacExtend",
            "5b4e4e5e2e555ca7cb74cbda98552a7332e3a0d5"
        ],
        [
            "inversion Corr; clear Corr.",
            "VernacExtend",
            "59abced3e473d8dae2a2bf442cef13f61d813d6b"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "pose proof Pref [] as Contra; clear Pref.",
            "VernacExtend",
            "0f2b675e40e3329b24aa5024ab5699a7da3c50b0"
        ],
        [
            "eapply Contra; clear Contra.",
            "VernacExtend",
            "b62e8ad75818f013c0e518a9ab67ef1378f979f6"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "left; auto.",
            "VernacExtend",
            "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "instantiate (1 := []).",
            "VernacExtend",
            "a4ff658212c83728e90563a11f103f7ab23aea07"
        ],
        [
            "instantiate (1 := []).",
            "VernacExtend",
            "a4ff658212c83728e90563a11f103f7ab23aea07"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct st; destruct a; simpl; auto.",
            "VernacExtend",
            "d47bc0e6c0d6ca049d7a6d7614cf61709fa06fde"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite refineFunCorrect.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply IHp.",
            "VernacExtend",
            "246d34d2490ae6e017eeeee5e330f76082b9a564"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite refineFunCorrect; apply IHp.",
            "VernacExtend",
            "a7911aee2fa5fd59aa385f912308c32d437bc930"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "eapply corrEmptyLeaf in Corr; inversion Corr; subst; clear Corr.",
            "VernacExtend",
            "ecc9c9f38621f826428688f5405e66917f2ebb50"
        ],
        [
            "pose proof (Pref []).",
            "VernacExtend",
            "bd1acf31e40e9df106a65bae6265540f63b29a08"
        ],
        [
            "eapply H.",
            "VernacExtend",
            "cf02e2445d256ebbbf0bbedfdc7f26983e04ec5a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst; left; auto.",
            "VernacExtend",
            "4d4a557d886ffffd40fb1d320c99b797cdf2b0b4"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "instantiate (2:= []); rewrite app_nil_r.",
            "VernacExtend",
            "fe6d07aa4a9e7314d2bbe20c7ad4dcc5fc91658e"
        ],
        [
            "instantiate (1 := Left ::p); auto.",
            "VernacExtend",
            "5efb0dda83f6bae498f06cee4f6e1c29fdeb9867"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "eapply corrEmptyLeaf in Corr; inversion Corr; subst; clear Corr.",
            "VernacExtend",
            "ecc9c9f38621f826428688f5405e66917f2ebb50"
        ],
        [
            "pose proof (Pref []).",
            "VernacExtend",
            "bd1acf31e40e9df106a65bae6265540f63b29a08"
        ],
        [
            "eapply H.",
            "VernacExtend",
            "cf02e2445d256ebbbf0bbedfdc7f26983e04ec5a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst; left; auto.",
            "VernacExtend",
            "4d4a557d886ffffd40fb1d320c99b797cdf2b0b4"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "instantiate (2:= []); rewrite app_nil_r.",
            "VernacExtend",
            "fe6d07aa4a9e7314d2bbe20c7ad4dcc5fc91658e"
        ],
        [
            "instantiate (1 := Right ::p); auto.",
            "VernacExtend",
            "a947dc74c1a679e7ea22c5ea084489cfad95084a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite refineFunCorrect; apply IHp.",
            "VernacExtend",
            "a7911aee2fa5fd59aa385f912308c32d437bc930"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite refineFunCorrect; apply IHp.",
            "VernacExtend",
            "a7911aee2fa5fd59aa385f912308c32d437bc930"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addToTreeCorrect2 : forall (st : SeedTree) (p : SplitPath) (f : SplitPath -> RandomSeed) (l : list SplitPath) (Corr : correspondingSeedTree l f st) (Pref : forall p', In p' l -> (forall p1 p2, p ++ p1 = p' ++ p2 -> False)), forall p' seed, varySeed' st p' = Some seed -> varySeed' (addToTree st p f l Corr Pref) p' = Some seed.",
            "VernacStartTheoremProof",
            "7bb87905cf9e7c801017962da0b5aa43646d3f05"
        ],
        [
            "intros st p.",
            "VernacExtend",
            "de4b1112b9c8da89f8aa7e1a0f7059bc3f80d1e8"
        ],
        [
            "generalize dependent st.",
            "VernacExtend",
            "70ae6801ffa3f4b0bb8a12da5956cb9c13f30582"
        ],
        [
            "induction p as [ | d ds].",
            "VernacExtend",
            "f961ff8cc56de23adee700dc1ee014130464ab10"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "eapply Pref.",
            "VernacExtend",
            "3a09c0c8c2f5a901f76e19ba8b57fff9cdf007bd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion Corr as [Vary_In In_Vary Pref']; clear Corr.",
            "VernacExtend",
            "1259d77dd185bf7e0e6f280053d7168032caa412"
        ],
        [
            "eapply Vary_In; eassumption.",
            "VernacExtend",
            "9ef62c8582b519b159b1153cd77c4fc4a00f20b0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "instantiate (1 := []); instantiate (1 := p'); rewrite app_nil_r; auto.",
            "VernacExtend",
            "2fed4db8f694dbaab46293c5702492d0fed8aada"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros st f l Corr Pref p' seed VarySome.",
            "VernacExtend",
            "528ea360e450efa7e794805c11a94fe8b5a0b446"
        ],
        [
            "destruct st; destruct d; simpl; auto.",
            "VernacExtend",
            "cab4bd81efff5de94590f66d699cbcdaf5430708"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "apply corrUndefEmpty in Corr.",
            "VernacExtend",
            "6dff125b29c99c598a21a55bf86b2f8a796fe00d"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "inversion VarySome.",
            "VernacExtend",
            "6fafe35ffdf898daf887a5a84d71d2ecc8054e37"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "apply corrUndefEmpty in Corr.",
            "VernacExtend",
            "6dff125b29c99c598a21a55bf86b2f8a796fe00d"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "inversion VarySome.",
            "VernacExtend",
            "6fafe35ffdf898daf887a5a84d71d2ecc8054e37"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "apply corrEmptyLeaf in Corr; inversion Corr; subst; clear Corr.",
            "VernacExtend",
            "145f53a7c3f8c991ae4f1be70109d93e4a37946b"
        ],
        [
            "eapply Pref.",
            "VernacExtend",
            "3a09c0c8c2f5a901f76e19ba8b57fff9cdf007bd"
        ],
        [
            "instantiate (1 := []); left; auto.",
            "VernacExtend",
            "75737227d9de1b7c68b3b01b39cffd718b742389"
        ],
        [
            "instantiate (1:= Left :: ds).",
            "VernacExtend",
            "40564da8d65b2f3fc6edb0615275d2ef896268b8"
        ],
        [
            "instantiate (1 := []).",
            "VernacExtend",
            "a4ff658212c83728e90563a11f103f7ab23aea07"
        ],
        [
            "rewrite app_nil_r; simpl; auto.",
            "VernacExtend",
            "8643f9f903267b97e78f95f292a0f367d7ef7060"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "apply corrEmptyLeaf in Corr; inversion Corr; subst; clear Corr.",
            "VernacExtend",
            "145f53a7c3f8c991ae4f1be70109d93e4a37946b"
        ],
        [
            "eapply Pref.",
            "VernacExtend",
            "3a09c0c8c2f5a901f76e19ba8b57fff9cdf007bd"
        ],
        [
            "instantiate (1 := []); left; auto.",
            "VernacExtend",
            "75737227d9de1b7c68b3b01b39cffd718b742389"
        ],
        [
            "instantiate (1:= Right :: ds).",
            "VernacExtend",
            "4cf061d1a50574a14c0d39b14935025244802146"
        ],
        [
            "instantiate (1 := []).",
            "VernacExtend",
            "a4ff658212c83728e90563a11f103f7ab23aea07"
        ],
        [
            "rewrite app_nil_r; simpl; auto.",
            "VernacExtend",
            "8643f9f903267b97e78f95f292a0f367d7ef7060"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct p'.",
            "VernacExtend",
            "f7123a3999cfa23fae1c8baa65ce8d5c8e3c4205"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl in VarySome.",
            "VernacExtend",
            "7ae677ee671d618e78c6a55cacd919223b07af4f"
        ],
        [
            "inversion VarySome.",
            "VernacExtend",
            "6fafe35ffdf898daf887a5a84d71d2ecc8054e37"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct s.",
            "VernacExtend",
            "25b900e268e7851d959aa45edce33af62b3fca65"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply IHds; auto.",
            "VernacExtend",
            "528dd89815391e0a88d51d99caa795625604f180"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct p'.",
            "VernacExtend",
            "f7123a3999cfa23fae1c8baa65ce8d5c8e3c4205"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl in VarySome; inversion VarySome.",
            "VernacExtend",
            "ef57c29c74ff36aa3fefc1c5c1e1f10b7249b3bc"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct s.",
            "VernacExtend",
            "25b900e268e7851d959aa45edce33af62b3fca65"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply IHds; auto.",
            "VernacExtend",
            "528dd89815391e0a88d51d99caa795625604f180"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addToTreeCorrect3 : forall (st : SeedTree) (p : SplitPath) (f : SplitPath -> RandomSeed) (l : list SplitPath) (Corr : correspondingSeedTree l f st) (Pref : forall p', In p' l -> (forall p1 p2, p ++ p1 = p' ++ p2 -> False)), forall p' seed, varySeed' (addToTree st p f l Corr Pref) p' = Some seed -> p = p' \\/ varySeed' st p' = Some seed.",
            "VernacStartTheoremProof",
            "0b873d73a968d64d3b127ad5d6d6a7f277bc7c71"
        ],
        [
            "intros st p.",
            "VernacExtend",
            "de4b1112b9c8da89f8aa7e1a0f7059bc3f80d1e8"
        ],
        [
            "generalize dependent st.",
            "VernacExtend",
            "70ae6801ffa3f4b0bb8a12da5956cb9c13f30582"
        ],
        [
            "induction p.",
            "VernacExtend",
            "57241b1bf2113f288b5c35cf50cb4c85d8323deb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct p'.",
            "VernacExtend",
            "f7123a3999cfa23fae1c8baa65ce8d5c8e3c4205"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "left; auto.",
            "VernacExtend",
            "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "unfold addToTree in H; simpl in H.",
            "VernacExtend",
            "88b483685b91a4b162902ec8b93e7eef06d425cc"
        ],
        [
            "destruct st; simpl in H.",
            "VernacExtend",
            "38a0d5d632491bfb2956fe48d31259be30a6b67d"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "apply corrEmptyLeaf in Corr; inversion Corr; subst; clear Corr.",
            "VernacExtend",
            "145f53a7c3f8c991ae4f1be70109d93e4a37946b"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "eapply Pref.",
            "VernacExtend",
            "3a09c0c8c2f5a901f76e19ba8b57fff9cdf007bd"
        ],
        [
            "instantiate (1 := []).",
            "VernacExtend",
            "a4ff658212c83728e90563a11f103f7ab23aea07"
        ],
        [
            "left; auto.",
            "VernacExtend",
            "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
        ],
        [
            "instantiate (1 := []); instantiate (1 := []); auto.",
            "VernacExtend",
            "871d47c76dd9afe5072cd14fd065668c73ff3928"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct p'; destruct st; destruct a; simpl in *; try solve [match goal with [ H : None = Some _ |- _ ] => inversion H end].",
            "VernacExtend",
            "6fe7872aade0330414b735c8c50d4643d955580a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "apply corrEmptyLeaf in Corr; inversion Corr; subst; clear Corr.",
            "VernacExtend",
            "145f53a7c3f8c991ae4f1be70109d93e4a37946b"
        ],
        [
            "eapply Pref.",
            "VernacExtend",
            "3a09c0c8c2f5a901f76e19ba8b57fff9cdf007bd"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "instantiate (1 := []) ; left; auto.",
            "VernacExtend",
            "75737227d9de1b7c68b3b01b39cffd718b742389"
        ],
        [
            "instantiate (1 := (Left :: p)); instantiate (1 := []); rewrite app_nil_r; auto.",
            "VernacExtend",
            "ed81cabd612a98f68f7dd6078990d29edd91bed8"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "apply corrEmptyLeaf in Corr; inversion Corr; subst; clear Corr.",
            "VernacExtend",
            "145f53a7c3f8c991ae4f1be70109d93e4a37946b"
        ],
        [
            "eapply Pref.",
            "VernacExtend",
            "3a09c0c8c2f5a901f76e19ba8b57fff9cdf007bd"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "instantiate (1 := []) ; left; auto.",
            "VernacExtend",
            "75737227d9de1b7c68b3b01b39cffd718b742389"
        ],
        [
            "instantiate (1 := (Right :: p)); instantiate (1 := []); rewrite app_nil_r; auto.",
            "VernacExtend",
            "71dd9b14337ee2d4e116b875c8811e71ffaa176e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct s; simpl in *.",
            "VernacExtend",
            "9b53faeb6557a88096b1512ec5e13f08ce211921"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (p = p' \\/ varySeed' SeedTreeUndef p' = Some seed) by (eapply IHp; eauto).",
            "VernacExtend",
            "14fffc485713e3c468aecc7f606096e4504d31c4"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "left; subst; auto.",
            "VernacExtend",
            "a5fc7d7159b9a18f279d62be319c3e516b6f4e4b"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "simpl in H1.",
            "VernacExtend",
            "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
        ],
        [
            "inversion H1.",
            "VernacExtend",
            "58dee2cce9b13b50b065ba894c1b533413715754"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct s; simpl in *.",
            "VernacExtend",
            "9b53faeb6557a88096b1512ec5e13f08ce211921"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (p = p' \\/ varySeed' SeedTreeUndef p' = Some seed) by (eapply IHp; eauto).",
            "VernacExtend",
            "14fffc485713e3c468aecc7f606096e4504d31c4"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "left; subst; auto.",
            "VernacExtend",
            "a5fc7d7159b9a18f279d62be319c3e516b6f4e4b"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "simpl in H1.",
            "VernacExtend",
            "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
        ],
        [
            "inversion H1.",
            "VernacExtend",
            "58dee2cce9b13b50b065ba894c1b533413715754"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "apply corrEmptyLeaf in Corr; inversion Corr; subst; clear Corr.",
            "VernacExtend",
            "145f53a7c3f8c991ae4f1be70109d93e4a37946b"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "eapply Pref.",
            "VernacExtend",
            "3a09c0c8c2f5a901f76e19ba8b57fff9cdf007bd"
        ],
        [
            "instantiate (1 := []).",
            "VernacExtend",
            "a4ff658212c83728e90563a11f103f7ab23aea07"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "left; auto.",
            "VernacExtend",
            "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "instantiate (1 := Left :: p); instantiate (1 := []); rewrite app_nil_r; auto.",
            "VernacExtend",
            "ed81cabd612a98f68f7dd6078990d29edd91bed8"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "apply corrEmptyLeaf in Corr; inversion Corr; subst; clear Corr.",
            "VernacExtend",
            "145f53a7c3f8c991ae4f1be70109d93e4a37946b"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "eapply Pref.",
            "VernacExtend",
            "3a09c0c8c2f5a901f76e19ba8b57fff9cdf007bd"
        ],
        [
            "instantiate (1 := []).",
            "VernacExtend",
            "a4ff658212c83728e90563a11f103f7ab23aea07"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "left; auto.",
            "VernacExtend",
            "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "instantiate (1 := Right :: p); instantiate (1 := []); rewrite app_nil_r; auto.",
            "VernacExtend",
            "71dd9b14337ee2d4e116b875c8811e71ffaa176e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct s eqn:S; simpl in *.",
            "VernacExtend",
            "bb4e1031daa949e572074853bff279bf797da940"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (p = p' \\/ varySeed' st1 p' = Some seed) by (eapply IHp; eauto).",
            "VernacExtend",
            "7c19aec781f5e404ce1044cc457eb83ac5ad7fb0"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "left; subst; auto.",
            "VernacExtend",
            "a5fc7d7159b9a18f279d62be319c3e516b6f4e4b"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "right; auto.",
            "VernacExtend",
            "1f0a695ab06b3950e6a7adf329d300b1f859fe9d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "right; auto.",
            "VernacExtend",
            "1f0a695ab06b3950e6a7adf329d300b1f859fe9d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct s eqn:S; simpl in *.",
            "VernacExtend",
            "bb4e1031daa949e572074853bff279bf797da940"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "right; auto.",
            "VernacExtend",
            "1f0a695ab06b3950e6a7adf329d300b1f859fe9d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (p = p' \\/ varySeed' st2 p' = Some seed) by (eapply IHp; eauto).",
            "VernacExtend",
            "fcd0c8e5afd0012470d396bec9824babe28f4a34"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "left; subst; auto.",
            "VernacExtend",
            "a5fc7d7159b9a18f279d62be319c3e516b6f4e4b"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "right; auto.",
            "VernacExtend",
            "1f0a695ab06b3950e6a7adf329d300b1f859fe9d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addToTreeCorrect : forall (st : SeedTree) (p : SplitPath) (f : SplitPath -> RandomSeed) (l : list SplitPath) (Corr : correspondingSeedTree l f st) (Pref : forall p', In p' l -> (forall p1 p2, p ++ p1 = p' ++ p2 -> False)), correspondingSeedTree (p :: l) f (addToTree st p f l Corr Pref).",
            "VernacStartTheoremProof",
            "12c700d9d4a2f423d1236ec024bd94d3a17f69e2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Corresponding.",
            "VernacExtend",
            "33c52dde00de1b06bbb4327b1858338fa2878599"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros p' s VarySome.",
            "VernacExtend",
            "89751a4b1f1400ec3e6160469300485e2d33add3"
        ],
        [
            "inversion Corr as [Vary_In In_Vary Pref'].",
            "VernacExtend",
            "d4d849d1ebfaf000b75a45d51e2a9aaf6f2fc260"
        ],
        [
            "apply addToTreeCorrect3 in VarySome.",
            "VernacExtend",
            "6cddc06ef0e559d9d70f9b529ed37584f12b3d09"
        ],
        [
            "inversion VarySome.",
            "VernacExtend",
            "6fafe35ffdf898daf887a5a84d71d2ecc8054e37"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "left; auto.",
            "VernacExtend",
            "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "eapply Vary_In; eassumption.",
            "VernacExtend",
            "9ef62c8582b519b159b1153cd77c4fc4a00f20b0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros p' InP'.",
            "VernacExtend",
            "d1561e76991adb8abcd65352a5ec84b784f3e014"
        ],
        [
            "inversion Corr as [Vary_In In_Vary Pref'].",
            "VernacExtend",
            "d4d849d1ebfaf000b75a45d51e2a9aaf6f2fc260"
        ],
        [
            "inversion InP'.",
            "VernacExtend",
            "5e1b672dd1a2c945bb6cba96dee23e6a7351f62c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "apply addToTreeCorrect1.",
            "VernacExtend",
            "a27f028b466735c42a9996095e0ba69752599e3b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply addToTreeCorrect2.",
            "VernacExtend",
            "a13e154c7940d3f7e0d56e6104d72454cc787c60"
        ],
        [
            "apply In_Vary.",
            "VernacExtend",
            "f555bdc551bc032477142187005176585ab90af3"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply FreeCons.",
            "VernacExtend",
            "b915070eb96844d8d98d9b446ee5b133947b5784"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion Corr; auto.",
            "VernacExtend",
            "a590e9f24f530f799ec1fcfd40e30093b25ba467"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply Pref.",
            "VernacExtend",
            "3a09c0c8c2f5a901f76e19ba8b57fff9cdf007bd"
        ],
        [
            "eassumption.",
            "VernacExtend",
            "909bfe8655bf95c07560744f733991163ce6cf7e"
        ],
        [
            "instantiate (1 := p1); instantiate (1:= p2); subst; auto.",
            "VernacExtend",
            "e36adadb4f297dba097034c1bd3e9446d85874ee"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma PrefixFreeTail : forall a l, PrefixFree (a :: l) -> PrefixFree l.",
            "VernacStartTheoremProof",
            "1d5e930ea82afd5982c8cec5ff15cfb5d4f4d37b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint listToTree (l : list SplitPath) (f : SplitPath -> RandomSeed) ( Pref : PrefixFree l) : {s : SeedTree | correspondingSeedTree l f s}.",
            "VernacFixpoint",
            "9d26e86ff623b85d4ffaddd9d7c2a6e12002c47d"
        ],
        [
            "induction l.",
            "VernacExtend",
            "1194af70832939708f8c7fde2f18f81c37b97a0c"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exists SeedTreeUndef.",
            "VernacExtend",
            "351f0173aa5347f3d9c4b2233433c87d29489814"
        ],
        [
            "apply corrEmptyUndef.",
            "VernacExtend",
            "9c6796fe2e2d317ea289a6bcde0f21721a298493"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "remember Pref as Pref'.",
            "VernacExtend",
            "0449179d6086551babf7df9e73c1e0f8cbdbd1f7"
        ],
        [
            "clear HeqPref'.",
            "VernacExtend",
            "6d30e8aa34503a9f1d9f9ff9f267663666965ca0"
        ],
        [
            "apply PrefixFreeTail in Pref'.",
            "VernacExtend",
            "60d7ded1ae537099d675b38d2c846b2867f54022"
        ],
        [
            "apply IHl in Pref'.",
            "VernacExtend",
            "629ecf52b474bc3ff4c7a92b87e586c3726266b9"
        ],
        [
            "inversion Pref'; clear Pref'.",
            "VernacExtend",
            "52dabc66772c59c74fd3a82ad4bb3372e93e63ad"
        ],
        [
            "assert (forall p', In p' l -> forall p1 p2, a ++ p1 = p' ++ p2 -> False) by (inversion Pref; intros; subst; eapply H3; [eassumption | instantiate (1 := p1); instantiate (1 := p2); subst; auto]).",
            "VernacExtend",
            "afd8adcd778fe0622ff5f1a5799eebdaadaf2bbe"
        ],
        [
            "exists (addToTree x a f l H H0).",
            "VernacExtend",
            "b585c447acf7285c2ef81a151a02dc858f80dfab"
        ],
        [
            "apply addToTreeCorrect.",
            "VernacExtend",
            "46593a1b5c08a321cef267ebd49df9164defc93a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem SplitPathCompleteness (l : list SplitPath) (f : SplitPath -> RandomSeed) : PrefixFree l -> exists (s : RandomSeed), forall p, In p l -> varySeed p s = f p.",
            "VernacStartTheoremProof",
            "9a5719937561776d4d780e382f11adfb0ab40aec"
        ],
        [
            "intros Pref.",
            "VernacExtend",
            "3ee2fac16b025ee79e20e071eeed1278eae3c71a"
        ],
        [
            "pose proof (listToTree l f Pref) as ExSeedTree.",
            "VernacExtend",
            "2f43de30e842013b4710b6a6c7ebeec65cf41477"
        ],
        [
            "inversion ExSeedTree as [st Corr]; clear ExSeedTree.",
            "VernacExtend",
            "51787509ece4320f05a632084fe4362f0b61936c"
        ],
        [
            "inversion Corr as [Vary_In In_Vary Pref']; clear Corr.",
            "VernacExtend",
            "1259d77dd185bf7e0e6f280053d7168032caa412"
        ],
        [
            "pose proof (splitExpand st) as ExRst.",
            "VernacExtend",
            "74fd86d1ca555d879751d5c2927192600149d7d2"
        ],
        [
            "inversion ExRst as [rst Sub]; clear ExRst.",
            "VernacExtend",
            "ecc04c7f959962215744e7bec4f16db1bea75aa3"
        ],
        [
            "exists rst.",
            "VernacExtend",
            "188443bdcfaa4a0a6b94249cd9560a84dea72d51"
        ],
        [
            "intros p InPL.",
            "VernacExtend",
            "9440a4ffef2fe71a698b2527f09d9c65c78331b2"
        ],
        [
            "pose proof (pathAgreesOnSubTree st (mkSeedTree rst) p (f p)) as Hyp.",
            "VernacExtend",
            "ee83fe1dbe695db581dc7f7ad3467d32e029bba7"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Axiom randomRBool : bool * bool -> RandomSeed -> bool * RandomSeed.",
            "VernacAssumption",
            "0990e1f9480709ed464768ec6d77620e6812fe72"
        ],
        [
            "Axiom randomRBoolCorrect : forall b b1 b2, implb b1 b2 -> (implb b1 b && implb b b2 <-> exists seed, (fst (randomRBool (b1, b2) seed)) = b).",
            "VernacAssumption",
            "e1379e0dbbcabda74d489fb7d38af7a6de97599d"
        ],
        [
            "Axiom randomRNat : nat * nat -> RandomSeed -> nat * RandomSeed.",
            "VernacAssumption",
            "1abc1855580a2f78bf279b4a782efe70b3300e94"
        ],
        [
            "Axiom randomRNatCorrect: forall n n1 n2, n1 <= n2 -> (n1 <= n <= n2 <-> exists seed, (fst (randomRNat (n1, n2) seed)) = n).",
            "VernacAssumption",
            "b56215d0e89c1e7357eef1da4157d6099eab009d"
        ],
        [
            "Axiom randomRInt : Z * Z -> RandomSeed -> Z * RandomSeed.",
            "VernacAssumption",
            "c1814b6bdc6b2a3f39ad94a4f56f576d2cb92912"
        ],
        [
            "Axiom randomRIntCorrect: forall z z1 z2, Z.leb z1 z2 -> (Z.leb z1 z && Z.leb z z2 <-> exists seed, (fst (randomRInt (z1, z2) seed)) = z).",
            "VernacAssumption",
            "ce0b57542cf4b7113b2ae2b09f4308242131fccc"
        ],
        [
            "Axiom randomRN : N * N -> RandomSeed -> N * RandomSeed.",
            "VernacAssumption",
            "6ef1b3c6767c169c841ba3d8b9a9492a31bd427c"
        ],
        [
            "Axiom randomRNCorrect: forall n n1 n2, N.leb n1 n2 -> N.leb n1 n && N.leb n n2 <-> exists seed, fst (randomRN (n1, n2) seed) = n.",
            "VernacAssumption",
            "9d297f6629ba00ea2f3f90be6dc76f1e816d8eb8"
        ],
        [
            "Module InfiniteTrees.",
            "VernacDefineModule",
            "c0571f41de529221cb42d5572913ba82adbf8c91"
        ],
        [
            "CoInductive RandomSeed : Type := | Node : bool -> RandomSeed -> RandomSeed -> RandomSeed.",
            "VernacInductive",
            "f239ca56330c798ae7fac639bbf07303346cf472"
        ],
        [
            "Definition randomSplit (s : RandomSeed) := match s with | Node b s1 s2 => (s1,s2) end.",
            "VernacDefinition",
            "b19954ebb34ab383a00b3b718f24bc25dcd2840b"
        ],
        [
            "Lemma randomSplitAssumption : forall s1 s2 : RandomSeed, exists s, randomSplit s = (s1,s2).",
            "VernacStartTheoremProof",
            "2543d34a589711b8a077e9c0ba3e6acc3e0600d1"
        ],
        [
            "move => s1 s2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by exists (Node true s1 s2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End InfiniteTrees.",
            "VernacEndSegment",
            "a732b7e76de47bc9db69588320f9a7da62f0a7fb"
        ],
        [
            "Class OrdType (A: Type) := { leq : A -> A -> bool; refl : reflexive leq; trans : transitive leq; antisym : antisymmetric leq }.",
            "VernacInductive",
            "3f2cbff8073d8f8394574758af9dafb966da96e5"
        ],
        [
            "Program Instance OrdBool : OrdType bool := { leq b1 b2 := implb b1 b2 }.",
            "VernacInstance",
            "6b86a1b4084d582b6e475adb3448b52b215da602"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "by do 3! case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "by do 2! case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Instance OrdNat : OrdType nat := { leq := ssrnat.leq; refl := leqnn; trans := leq_trans; antisym := anti_leq }.",
            "VernacInstance",
            "f1cda789da7a5e334e9c1e7308c3023c92908113"
        ],
        [
            "Program Instance OrdZ : OrdType Z := { leq := Z.leb; refl := Z.leb_refl }.",
            "VernacInstance",
            "f7ec2cd07dc2454c330be0f5400aa1456bdaf4ff"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "move=> x y z le_yx le_xz.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exact: (Zle_bool_trans y x z).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "move=> x y /andP[].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exact: Zle_bool_antisym.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Instance OrdN : OrdType N := { leq := N.leb; refl := N.leb_refl }.",
            "VernacInstance",
            "5f03553b23f1711af935fdf2523f96f58a2eac95"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "move=> x y z le_yx le_xz.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "unfold is_true in *.",
            "VernacExtend",
            "0fbeb2fe432b1ebe391a9ec89fd2bb2ea793048a"
        ],
        [
            "apply N.leb_le in le_yx.",
            "VernacExtend",
            "cf527cd04e1aa951fa828b51c8411c6c2368f899"
        ],
        [
            "apply N.leb_le in le_xz.",
            "VernacExtend",
            "4cbb4966acaf382d8208901a6fb8aad802e319ea"
        ],
        [
            "apply N.leb_le.",
            "VernacExtend",
            "8e6a9e0cf9a7b692fe0b99a8c81f1654b89dcf2b"
        ],
        [
            "eapply N.le_trans; eauto.",
            "VernacExtend",
            "ab2eee55078db9f070ad32873e09959248a4d3b5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "move=> x y /andP[].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "unfold is_true.",
            "VernacExtend",
            "73e58dc4b9293f0e30cceb725066cf6dc51c855f"
        ],
        [
            "repeat rewrite N.leb_le.",
            "VernacExtend",
            "c23cdc0c7bcb18627cd6e2b08e391fe6a16b1b34"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply N.le_antisymm; auto.",
            "VernacExtend",
            "b73c759b2e0202a079f0727b41685055e27cb186"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Class ChoosableFromInterval (A : Type) := { super :> OrdType A; randomR : A * A -> RandomSeed -> A * RandomSeed; randomRCorrect : forall (a a1 a2 : A), leq a1 a2 -> (leq a1 a && leq a a2 <-> exists seed, fst (randomR (a1, a2) seed) = a) }.",
            "VernacInductive",
            "35f53a40d68c3e23e5f92b6803c6f793fcf5e795"
        ],
        [
            "Program Instance ChooseBool : ChoosableFromInterval bool := { randomR := randomRBool; randomRCorrect := randomRBoolCorrect }.",
            "VernacInstance",
            "b2f919e3dbcb3f5eedd686fb4dd69889896db1e9"
        ],
        [
            "Instance ChooseNat : ChoosableFromInterval nat := { randomR := randomRNat; randomRCorrect := randomRNatCorrect }.",
            "VernacInstance",
            "066bf571a124c49d41b73e45452b84cada2e18f1"
        ],
        [
            "Instance ChooseZ : ChoosableFromInterval Z := { randomR := randomRInt; randomRCorrect := randomRIntCorrect }.",
            "VernacInstance",
            "9021e250e315e45ce9a7018b029d71383bf3353a"
        ],
        [
            "Instance ChooseN : ChoosableFromInterval N := { randomR := randomRN; randomRCorrect := randomRNCorrect }.",
            "VernacInstance",
            "3816f6abfe9f83a40b94b573c1b2f860f945ed2e"
        ]
    ],
    "proofs": [
        {
            "name": "rst_eta",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "destruct rst.",
                        "VernacExtend",
                        "25d68da100e7064cb4465a38e9497c834d0afec1"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mkSeedTreeHelper",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "by rewrite [mkSeedTree _]rst_eta /=; case: (randomSplit r).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pathAgreesOnSubTree",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "induction st.",
                        "VernacExtend",
                        "fadcd08c305d3b0c472a5ea2ae957b639a4cd610"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl in H0.",
                        "VernacExtend",
                        "a4a6a8421870dbf7255f8d031744eec32f12a941"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl in H0.",
                        "VernacExtend",
                        "a4a6a8421870dbf7255f8d031744eec32f12a941"
                    ]
                },
                {
                    "command": [
                        "destruct p eqn:P.",
                        "VernacExtend",
                        "58daf28ce8131e2969cc5cd1cdb5d8d3c645662f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "inversion H0.",
                        "VernacExtend",
                        "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inversion H0.",
                        "VernacExtend",
                        "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl in H0.",
                        "VernacExtend",
                        "a4a6a8421870dbf7255f8d031744eec32f12a941"
                    ]
                },
                {
                    "command": [
                        "destruct p eqn:P.",
                        "VernacExtend",
                        "58daf28ce8131e2969cc5cd1cdb5d8d3c645662f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inversion H0.",
                        "VernacExtend",
                        "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inversion H; subst.",
                        "VernacExtend",
                        "123ebc73101dcac5781200440a60232218464ea1"
                    ]
                },
                {
                    "command": [
                        "destruct s0 eqn:S0.",
                        "VernacExtend",
                        "2023069c4d91234dbdc4e905dfbe452332782de5"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply IHst1; auto.",
                        "VernacExtend",
                        "10da0f57704347374760b94129fd81488cbbafd5"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply IHst2; auto.",
                        "VernacExtend",
                        "1c85b479095755ed5e5f914c3181ba47b538f3e9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "splitExpand",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "elim: st => [|r|st1 [s1 st_s1] st2 [s2 st_s2]].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "by case: randomSeed_inhabited=> seed; exists seed; apply: SubUndef.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "by exists r; rewrite mkSeedTreeHelper; constructor.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [s eq_s] := randomSplitAssumption s1 s2.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by exists s; rewrite mkSeedTreeHelper eq_s; constructor.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prefixFreeSingleton",
            "line_nb": 77,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply FreeCons.",
                        "VernacExtend",
                        "b915070eb96844d8d98d9b446ee5b133947b5784"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply FreeNil.",
                        "VernacExtend",
                        "dfe341d21413ba9f7735ba801e53fa904b829275"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "corrEmptyUndef",
            "line_nb": 99,
            "steps": [
                {
                    "command": [
                        "intro f.",
                        "VernacExtend",
                        "cfca43118419dd191a669828299d7df459d583f5"
                    ]
                },
                {
                    "command": [
                        "apply Corresponding.",
                        "VernacExtend",
                        "33c52dde00de1b06bbb4327b1858338fa2878599"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros p s Contra.",
                        "VernacExtend",
                        "0ca8e3a8e590e2fa30e45738e6107c3f189f60b1"
                    ]
                },
                {
                    "command": [
                        "inversion Contra.",
                        "VernacExtend",
                        "532d20696c58e2a0142e7a5fb46f8af6ab72db97"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros p InNil.",
                        "VernacExtend",
                        "5bda41355df8cfb3424c61c4515fd5b883ea1be7"
                    ]
                },
                {
                    "command": [
                        "inversion InNil.",
                        "VernacExtend",
                        "6a92312fb45a088e77ac9163bcd48c81b07c8c20"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply FreeNil.",
                        "VernacExtend",
                        "dfe341d21413ba9f7735ba801e53fa904b829275"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "corrUndefEmpty",
            "line_nb": 112,
            "steps": [
                {
                    "command": [
                        "intros l f Corr.",
                        "VernacExtend",
                        "9b700d2af53d77e4c0b3140ffeaf4f5bb358b0d5"
                    ]
                },
                {
                    "command": [
                        "inversion Corr as [Vary_In In_Vary Pref]; clear Corr.",
                        "VernacExtend",
                        "8307ab860ab66e5f6ee24d3b5ec7d980df121468"
                    ]
                },
                {
                    "command": [
                        "destruct l as [ | p ps]; auto.",
                        "VernacExtend",
                        "e99d932d2684fc39289593fd5069f33b659aebd1"
                    ]
                },
                {
                    "command": [
                        "clear Vary_In Pref.",
                        "VernacExtend",
                        "7ac2b5c528e65710583e787d2f4780a73f42eec3"
                    ]
                },
                {
                    "command": [
                        "pose proof (In_Vary p) as Contra; clear In_Vary.",
                        "VernacExtend",
                        "1115f22a694286334830ce654f1070d43fb97313"
                    ]
                },
                {
                    "command": [
                        "fireInLeft Hyp.",
                        "VernacExtend",
                        "b964943beba5a030050f46b0325a2fdaffefeab8"
                    ]
                },
                {
                    "command": [
                        "inversion Hyp.",
                        "VernacExtend",
                        "e8a79d7c9df846da8ea7555b1624013f7b3cbe26"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "corrEmptyLeaf",
            "line_nb": 136,
            "steps": [
                {
                    "command": [
                        "intros s l f Corr.",
                        "VernacExtend",
                        "a588dd2dd26ab2a0449f1b71de0d71c4309ce23b"
                    ]
                },
                {
                    "command": [
                        "inversion Corr as [Vary_In In_Vary Pref]; clear Corr.",
                        "VernacExtend",
                        "8307ab860ab66e5f6ee24d3b5ec7d980df121468"
                    ]
                },
                {
                    "command": [
                        "pose proof (Vary_In [] s) as Hyp; clear Vary_In.",
                        "VernacExtend",
                        "e50eb41d0b16c37b1dd9ac0c9ec7b18c5d024a38"
                    ]
                },
                {
                    "command": [
                        "simpl in Hyp.",
                        "VernacExtend",
                        "b668b3da0bf9ed61164e3a2fc832fc359440e086"
                    ]
                },
                {
                    "command": [
                        "assert (InNilL : In [] l) by (apply Hyp; auto); clear Hyp.",
                        "VernacExtend",
                        "bcdeae70e91e9b7b465382011f4f9cc94207023a"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct l eqn:L.",
                        "VernacExtend",
                        "bbba45bf52f8d93627a5a08ad1633c6d01648052"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inversion InNilL.",
                        "VernacExtend",
                        "7f8c9d397bed4d7611f54591c74d9c62f73c203a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct s0 eqn : S0.",
                        "VernacExtend",
                        "2023069c4d91234dbdc4e905dfbe452332782de5"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply PrefixFreeWithNil in Pref; subst; auto.",
                        "VernacExtend",
                        "200067f2a69baa6228c02038f76b38121096fc63"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "pose proof (In_Vary (s1 :: s2)) as Hyp; clear In_Vary.",
                        "VernacExtend",
                        "8bb5e3189a6238fb14fa667a32013df7d8b1fc57"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inversion Pref.",
                        "VernacExtend",
                        "367f372f021bdfc082fe1df2be04bd24990f9717"
                    ]
                },
                {
                    "command": [
                        "fireInLeft Hyp'.",
                        "VernacExtend",
                        "2bdda87f41709f4246e6b294af79057f39609539"
                    ]
                },
                {
                    "command": [
                        "simpl in Hyp'.",
                        "VernacExtend",
                        "41b8596b107c9441e8daea69a0ec96a42176d222"
                    ]
                },
                {
                    "command": [
                        "inversion Hyp'.",
                        "VernacExtend",
                        "503e826e661d8ae99943c5209ccb2dd993140a37"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "pose proof In_Vary [] as Hyp; clear In_Vary.",
                        "VernacExtend",
                        "a43f416c3bceb5b9d48d9590b512fcaa1111a0b8"
                    ]
                },
                {
                    "command": [
                        "apply Hyp in InNilL; clear Hyp.",
                        "VernacExtend",
                        "911ef38851a0c15183c127cd8ae85b26f80470d6"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "corrNodeNonEmpty",
            "line_nb": 164,
            "steps": [
                {
                    "command": [
                        "unfold not; intros st1 st2 l p f Corr InPL PNil; subst.",
                        "VernacExtend",
                        "c7b186869a57dfafa9fe18aca1e2d489bb250d27"
                    ]
                },
                {
                    "command": [
                        "inversion Corr as [_ In_Vary _]; clear Corr.",
                        "VernacExtend",
                        "f7934864068940b769931d3553b82746b3651f07"
                    ]
                },
                {
                    "command": [
                        "pose proof (In_Vary []) as Hyp; clear In_Vary.",
                        "VernacExtend",
                        "a43f416c3bceb5b9d48d9590b512fcaa1111a0b8"
                    ]
                },
                {
                    "command": [
                        "apply Hyp in InPL; clear Hyp.",
                        "VernacExtend",
                        "3b70a39b1c25b515ed1ab5c2a8b5566141f7aef4"
                    ]
                },
                {
                    "command": [
                        "simpl in InPL.",
                        "VernacExtend",
                        "f6e9fb162344b8322f6b19cb20cd00ac6f5000ae"
                    ]
                },
                {
                    "command": [
                        "inversion InPL.",
                        "VernacExtend",
                        "ec63acd471dbd9b16e73ec8faaa9cb86d40e84fd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Direction_eq_dec",
            "line_nb": 174,
            "steps": [
                {
                    "command": [
                        "decide equality.",
                        "VernacExtend",
                        "10aba07d521545accbb51a4c2e0695a9ddce3199"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_dir_b_eq",
            "line_nb": 178,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold eq_dir_b.",
                        "VernacExtend",
                        "664f0701d8c73067a8a1a3580ad58d1b3edf44d1"
                    ]
                },
                {
                    "command": [
                        "destruct d1; destruct d2; split; auto; intro Contra; inversion Contra.",
                        "VernacExtend",
                        "0664ea1f5ea5a14deb55967966b0de38fd850dd8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "refineCorrect",
            "line_nb": 184,
            "steps": [
                {
                    "command": [
                        "intros d l p.",
                        "VernacExtend",
                        "aa3305e87b270ec770cf492b445d84fb10015d9f"
                    ]
                },
                {
                    "command": [
                        "unfold refineList.",
                        "VernacExtend",
                        "0db58f98a912d24740a5ab4c284e49a6be841737"
                    ]
                },
                {
                    "command": [
                        "rewrite in_map_iff.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion H; clear H.",
                        "VernacExtend",
                        "4307aab7d08f40aa3f33a7c04b2c5713617cbd6b"
                    ]
                },
                {
                    "command": [
                        "inversion H0; clear H0.",
                        "VernacExtend",
                        "81451fd27f287bf5bfd1c5a230d7cd85c2471c6d"
                    ]
                },
                {
                    "command": [
                        "generalize H1; clear H1.",
                        "VernacExtend",
                        "8f7d5fc11e4f2aab9d79cbc415ff67ec0dca8762"
                    ]
                },
                {
                    "command": [
                        "rewrite filter_In.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion H0; clear H0.",
                        "VernacExtend",
                        "81451fd27f287bf5bfd1c5a230d7cd85c2471c6d"
                    ]
                },
                {
                    "command": [
                        "unfold tl in H.",
                        "VernacExtend",
                        "d96e4b81735393d9dcafbe56198cc5196b29ffa0"
                    ]
                },
                {
                    "command": [
                        "destruct x eqn:X.",
                        "VernacExtend",
                        "32384b85e2857812fc767824fa43303b6377aa6b"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl in H2.",
                        "VernacExtend",
                        "b1e247c43b6623097ab13813b4de664287dd4249"
                    ]
                },
                {
                    "command": [
                        "inversion H2.",
                        "VernacExtend",
                        "afdc959ca1f20d64005a6cd95d8f83134e6ae5f8"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl in H2.",
                        "VernacExtend",
                        "b1e247c43b6623097ab13813b4de664287dd4249"
                    ]
                },
                {
                    "command": [
                        "apply eq_dir_b_eq in H2.",
                        "VernacExtend",
                        "bfe4ae0a6bdf3e5ce753b82587d017654f9b41b2"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "refineCorrect'",
            "line_nb": 206,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold refineList.",
                        "VernacExtend",
                        "0db58f98a912d24740a5ab4c284e49a6be841737"
                    ]
                },
                {
                    "command": [
                        "apply in_map_iff.",
                        "VernacExtend",
                        "b128e1e6f601182342113d742a28792f5aaec52c"
                    ]
                },
                {
                    "command": [
                        "exists (d :: p).",
                        "VernacExtend",
                        "2b2ae54ef8b3231f4acb7397f20c78b583e10132"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "apply filter_In.",
                        "VernacExtend",
                        "95c2fd78cbf1a879af2e72bb24df2817c4c830a0"
                    ]
                },
                {
                    "command": [
                        "split; simpl; auto.",
                        "VernacExtend",
                        "e2ee7819fbb32d2c4a8d46eec291a3c64ca8c3fb"
                    ]
                },
                {
                    "command": [
                        "unfold eq_dir_b; destruct d; auto.",
                        "VernacExtend",
                        "a7ed47b748fd56e798fe4e3883195a681a5725dd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "refineFunCorrect",
            "line_nb": 293,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addToTree_obligation_6",
            "line_nb": 313,
            "steps": [
                {
                    "command": [
                        "eapply Corresponding; intros.",
                        "VernacExtend",
                        "9f46013f4d6decba4b2f1d090d1973a957141c78"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply refineCorrect'.",
                        "VernacExtend",
                        "9d8a3e80e410e5ac66dbbd857fb41e317f413bb0"
                    ]
                },
                {
                    "command": [
                        "inversion Corr as [Vary_In _ _ ]; clear Corr.",
                        "VernacExtend",
                        "934f4a7bf840415691d8931954cafe8e3725ea18"
                    ]
                },
                {
                    "command": [
                        "pose proof (Vary_In (Left :: p) s) as Hyp; clear Vary_In.",
                        "VernacExtend",
                        "c16f5304ec2926202deaa20c03d73c0eda619e88"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply refineCorrect in H.",
                        "VernacExtend",
                        "5df5d92e07a88fae6aff046752ba11c1fa3e1e9b"
                    ]
                },
                {
                    "command": [
                        "inversion Corr as [_ In_Vary _]; clear Corr.",
                        "VernacExtend",
                        "f7934864068940b769931d3553b82746b3651f07"
                    ]
                },
                {
                    "command": [
                        "pose proof (In_Vary (Left :: p)) as Hyp; clear In_Vary.",
                        "VernacExtend",
                        "13f2a596872ce89e6f4f26d9f38f232e13f04f04"
                    ]
                },
                {
                    "command": [
                        "apply Hyp in H; clear Hyp.",
                        "VernacExtend",
                        "4069f46389adebe62264dac8855239c9b21a7d92"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "unfold refineFunction; auto.",
                        "VernacExtend",
                        "8a8352c2b454f474dc9de0e60fe7a5ff6ecf7ad0"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inversion Corr.",
                        "VernacExtend",
                        "23304f925973271dcd33cfde8f52c25a42914c5d"
                    ]
                },
                {
                    "command": [
                        "apply refinePreservesPrefixFree.",
                        "VernacExtend",
                        "f8400df018bdf112ac43bbbe564bf8c9a24461e3"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addToTree_obligation_8",
            "line_nb": 342,
            "steps": [
                {
                    "command": [
                        "eapply Corresponding; intros.",
                        "VernacExtend",
                        "9f46013f4d6decba4b2f1d090d1973a957141c78"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply refineCorrect'.",
                        "VernacExtend",
                        "9d8a3e80e410e5ac66dbbd857fb41e317f413bb0"
                    ]
                },
                {
                    "command": [
                        "inversion Corr as [Vary_In _ _ ]; clear Corr.",
                        "VernacExtend",
                        "934f4a7bf840415691d8931954cafe8e3725ea18"
                    ]
                },
                {
                    "command": [
                        "pose proof (Vary_In (Right :: p) s) as Hyp; clear Vary_In.",
                        "VernacExtend",
                        "b9fcc0d459ad94ea19d67668149aac47f7aa4f92"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply refineCorrect in H.",
                        "VernacExtend",
                        "5df5d92e07a88fae6aff046752ba11c1fa3e1e9b"
                    ]
                },
                {
                    "command": [
                        "inversion Corr as [_ In_Vary _]; clear Corr.",
                        "VernacExtend",
                        "f7934864068940b769931d3553b82746b3651f07"
                    ]
                },
                {
                    "command": [
                        "pose proof (In_Vary (Right :: p)) as Hyp; clear In_Vary.",
                        "VernacExtend",
                        "12cb6e24ebdac73cf818b285cced0d0245ea7ad3"
                    ]
                },
                {
                    "command": [
                        "apply Hyp in H; clear Hyp.",
                        "VernacExtend",
                        "4069f46389adebe62264dac8855239c9b21a7d92"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "unfold refineFunction; auto.",
                        "VernacExtend",
                        "8a8352c2b454f474dc9de0e60fe7a5ff6ecf7ad0"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inversion Corr.",
                        "VernacExtend",
                        "23304f925973271dcd33cfde8f52c25a42914c5d"
                    ]
                },
                {
                    "command": [
                        "apply refinePreservesPrefixFree.",
                        "VernacExtend",
                        "f8400df018bdf112ac43bbbe564bf8c9a24461e3"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PrefixFreeTail",
            "line_nb": 644,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "listToTree",
            "line_nb": 649,
            "steps": [
                {
                    "command": [
                        "induction l.",
                        "VernacExtend",
                        "1194af70832939708f8c7fde2f18f81c37b97a0c"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exists SeedTreeUndef.",
                        "VernacExtend",
                        "351f0173aa5347f3d9c4b2233433c87d29489814"
                    ]
                },
                {
                    "command": [
                        "apply corrEmptyUndef.",
                        "VernacExtend",
                        "9c6796fe2e2d317ea289a6bcde0f21721a298493"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "remember Pref as Pref'.",
                        "VernacExtend",
                        "0449179d6086551babf7df9e73c1e0f8cbdbd1f7"
                    ]
                },
                {
                    "command": [
                        "clear HeqPref'.",
                        "VernacExtend",
                        "6d30e8aa34503a9f1d9f9ff9f267663666965ca0"
                    ]
                },
                {
                    "command": [
                        "apply PrefixFreeTail in Pref'.",
                        "VernacExtend",
                        "60d7ded1ae537099d675b38d2c846b2867f54022"
                    ]
                },
                {
                    "command": [
                        "apply IHl in Pref'.",
                        "VernacExtend",
                        "629ecf52b474bc3ff4c7a92b87e586c3726266b9"
                    ]
                },
                {
                    "command": [
                        "inversion Pref'; clear Pref'.",
                        "VernacExtend",
                        "52dabc66772c59c74fd3a82ad4bb3372e93e63ad"
                    ]
                },
                {
                    "command": [
                        "assert (forall p', In p' l -> forall p1 p2, a ++ p1 = p' ++ p2 -> False) by (inversion Pref; intros; subst; eapply H3; [eassumption | instantiate (1 := p1); instantiate (1 := p2); subst; auto]).",
                        "VernacExtend",
                        "afd8adcd778fe0622ff5f1a5799eebdaadaf2bbe"
                    ]
                },
                {
                    "command": [
                        "exists (addToTree x a f l H H0).",
                        "VernacExtend",
                        "b585c447acf7285c2ef81a151a02dc858f80dfab"
                    ]
                },
                {
                    "command": [
                        "apply addToTreeCorrect.",
                        "VernacExtend",
                        "46593a1b5c08a321cef267ebd49df9164defc93a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "SplitPathCompleteness",
            "line_nb": 664,
            "steps": [
                {
                    "command": [
                        "intros Pref.",
                        "VernacExtend",
                        "3ee2fac16b025ee79e20e071eeed1278eae3c71a"
                    ]
                },
                {
                    "command": [
                        "pose proof (listToTree l f Pref) as ExSeedTree.",
                        "VernacExtend",
                        "2f43de30e842013b4710b6a6c7ebeec65cf41477"
                    ]
                },
                {
                    "command": [
                        "inversion ExSeedTree as [st Corr]; clear ExSeedTree.",
                        "VernacExtend",
                        "51787509ece4320f05a632084fe4362f0b61936c"
                    ]
                },
                {
                    "command": [
                        "inversion Corr as [Vary_In In_Vary Pref']; clear Corr.",
                        "VernacExtend",
                        "1259d77dd185bf7e0e6f280053d7168032caa412"
                    ]
                },
                {
                    "command": [
                        "pose proof (splitExpand st) as ExRst.",
                        "VernacExtend",
                        "74fd86d1ca555d879751d5c2927192600149d7d2"
                    ]
                },
                {
                    "command": [
                        "inversion ExRst as [rst Sub]; clear ExRst.",
                        "VernacExtend",
                        "ecc04c7f959962215744e7bec4f16db1bea75aa3"
                    ]
                },
                {
                    "command": [
                        "exists rst.",
                        "VernacExtend",
                        "188443bdcfaa4a0a6b94249cd9560a84dea72d51"
                    ]
                },
                {
                    "command": [
                        "intros p InPL.",
                        "VernacExtend",
                        "9440a4ffef2fe71a698b2527f09d9c65c78331b2"
                    ]
                },
                {
                    "command": [
                        "pose proof (pathAgreesOnSubTree st (mkSeedTree rst) p (f p)) as Hyp.",
                        "VernacExtend",
                        "ee83fe1dbe695db581dc7f7ad3467d32e029bba7"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "randomSplitAssumption",
            "line_nb": 687,
            "steps": [
                {
                    "command": [
                        "move => s1 s2.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by exists (Node true s1 s2).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "OrdBool_obligation_1",
            "line_nb": 694,
            "steps": [
                {
                    "command": [
                        "by case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "OrdBool_obligation_2",
            "line_nb": 697,
            "steps": [
                {
                    "command": [
                        "by do 3! case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "OrdBool_obligation_3",
            "line_nb": 700,
            "steps": [
                {
                    "command": [
                        "by do 2! case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "OrdZ_obligation_1",
            "line_nb": 705,
            "steps": [
                {
                    "command": [
                        "move=> x y z le_yx le_xz.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exact: (Zle_bool_trans y x z).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "OrdZ_obligation_2",
            "line_nb": 709,
            "steps": [
                {
                    "command": [
                        "move=> x y /andP[].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exact: Zle_bool_antisym.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "OrdN_obligation_1",
            "line_nb": 714,
            "steps": [
                {
                    "command": [
                        "move=> x y z le_yx le_xz.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "unfold is_true in *.",
                        "VernacExtend",
                        "0fbeb2fe432b1ebe391a9ec89fd2bb2ea793048a"
                    ]
                },
                {
                    "command": [
                        "apply N.leb_le in le_yx.",
                        "VernacExtend",
                        "cf527cd04e1aa951fa828b51c8411c6c2368f899"
                    ]
                },
                {
                    "command": [
                        "apply N.leb_le in le_xz.",
                        "VernacExtend",
                        "4cbb4966acaf382d8208901a6fb8aad802e319ea"
                    ]
                },
                {
                    "command": [
                        "apply N.leb_le.",
                        "VernacExtend",
                        "8e6a9e0cf9a7b692fe0b99a8c81f1654b89dcf2b"
                    ]
                },
                {
                    "command": [
                        "eapply N.le_trans; eauto.",
                        "VernacExtend",
                        "ab2eee55078db9f070ad32873e09959248a4d3b5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "OrdN_obligation_2",
            "line_nb": 722,
            "steps": [
                {
                    "command": [
                        "move=> x y /andP[].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "unfold is_true.",
                        "VernacExtend",
                        "73e58dc4b9293f0e30cceb725066cf6dc51c855f"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite N.leb_le.",
                        "VernacExtend",
                        "c23cdc0c7bcb18627cd6e2b08e391fe6a16b1b34"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply N.le_antisymm; auto.",
                        "VernacExtend",
                        "b73c759b2e0202a079f0727b41685055e27cb186"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}