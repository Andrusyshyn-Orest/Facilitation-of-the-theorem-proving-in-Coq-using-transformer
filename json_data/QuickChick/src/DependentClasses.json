{
    "filename": "src/DependentClasses.v",
    "coq_project": "QuickChick",
    "vernac_cmds": [
        [
            "Set Warnings \"-extraction-opaque-accessed,-extraction\".",
            "VernacSetOption",
            "0d9ccca50d6f2e2dcc602566ab5a0ab4e16fd208"
        ],
        [
            "Set Warnings \"-notation-overridden,-parsing\".",
            "VernacSetOption",
            "e5f1121c0752b2fa1e608a6680bad33b020316a3"
        ],
        [
            "Require Import String List.",
            "VernacRequire",
            "bdcdf17403f5a30a67a1073d994f7d3c0d098b28"
        ],
        [
            "From mathcomp Require Import ssreflect ssrfun ssrbool ssrnat eqtype seq.",
            "VernacRequire",
            "06d0e73ee2f2ff3d3e3e3d2c859029aa22a11183"
        ],
        [
            "Require Import GenLow GenHigh Tactics Sets Classes.",
            "VernacRequire",
            "8cee855d050a4b4e8bebc2b9c4878dabb71b8faf"
        ],
        [
            "Import GenLow GenHigh.",
            "VernacImport",
            "213d1becf9d65ff3bbbce840bff44b082754c20e"
        ],
        [
            "Import ListNotations.",
            "VernacImport",
            "52647db2a3b752153a8cbd37039246f200bccdee"
        ],
        [
            "Import QcDefaultNotation.",
            "VernacImport",
            "861ea55fb85858ef1eae38d1bc739e8466f94413"
        ],
        [
            "Open Scope qc_scope.",
            "VernacOpenCloseScope",
            "c6f6cc8734984d9b530e3f61c572e97dd7a2edec"
        ],
        [
            "Local Open Scope string.",
            "VernacOpenCloseScope",
            "64eee6803d1a1eb745cadbf36ff86b35b0ecee7e"
        ],
        [
            "Set Bullet Behavior \"Strict Subproofs\".",
            "VernacSetOption",
            "2f48a6a957bc407939a01b772051438c4013f99b"
        ],
        [
            "Class SizedProofEqs {A : Type} (P : A -> Prop) := { iter : nat -> set A; mon : forall n1 n2, n1 <= n2 -> iter n1 \\subset iter n2; spec : \\bigcup_(n : nat) iter n <--> P}.",
            "VernacInductive",
            "8a46d4014e6fc222a5c8a2692220df2f210ff1fa"
        ],
        [
            "Class SizedSuchThatCorrect {A : Type} (P : A -> Prop) `{SizedProofEqs A P} (g : nat -> G (option A)) := { sizedSTCorrect : forall s, isSome :&: semGen (g s) <--> Some @: (iter s) }.",
            "VernacInductive",
            "f787ea7d44ef0fbbf4c51c42f3b4acb1fe7246e8"
        ],
        [
            "Class SuchThatCorrect {A : Type} (P : A -> Prop) (g : G (option A)) := { STCorrect : isSome :&: semGen g <--> Some @: [set x : A | P x ] }.",
            "VernacInductive",
            "458a56474120274ac6481e853028f2b122d9636a"
        ],
        [
            "Class GenSizedSuchThat (A : Type) (P : A -> Prop) := { arbitrarySizeST : nat -> G (option A) }.",
            "VernacInductive",
            "bc148e832a1b885b05f121be3ce1303e3f6e7b16"
        ],
        [
            "Class GenSizedSuchThatMonotonic (A : Type) `{GenSizedSuchThat A} `{forall s, SizeMonotonic (arbitrarySizeST s)}.",
            "VernacInductive",
            "1d1ad03ee8a09ac8a6cc9c68ece943c2af9d1fc3"
        ],
        [
            "Class GenSizedSuchThatMonotonicOpt (A : Type) `{GenSizedSuchThat A} `{forall s, SizeMonotonicOpt (arbitrarySizeST s)}.",
            "VernacInductive",
            "ffa5e8b74b95f9db0f25e4029ba2d61fe23fdf06"
        ],
        [
            "Class GenSizedSuchThatSizeMonotonic (A : Type) `{GenSizedSuchThat A} `{SizedMonotonic _ arbitrarySizeST}.",
            "VernacInductive",
            "b5dae761bd7badec12dd8f679bede952402d7d33"
        ],
        [
            "Class GenSizedSuchThatSizeMonotonicOpt (A : Type) `{GenSizedSuchThat A} `{SizedMonotonicOpt _ arbitrarySizeST}.",
            "VernacInductive",
            "1d915e91625c13d4c92bda00648cb850f6cbaa32"
        ],
        [
            "Class GenSizedSuchThatCorrect (A : Type) (P : A -> Prop) `{GenSizedSuchThat A P} `{SizedSuchThatCorrect A P arbitrarySizeST}.",
            "VernacInductive",
            "a981ff8b9f3fbfa4cb90b8e68721c4d9266ea666"
        ],
        [
            "Class GenSuchThat (A : Type) (P : A -> Prop) := { arbitraryST : G (option A) }.",
            "VernacInductive",
            "55a73e6ccebe1666188abf779cfb4013ff05a825"
        ],
        [
            "Notation \"'genST' x\" := (@arbitraryST _ x _) (at level 70).",
            "VernacNotation",
            "c5f9c7602b8283c89c8d11d2a5db5994cf9e61ec"
        ],
        [
            "Class GenSuchThatMonotonic (A : Type) (P : A -> Prop) `{GenSuchThat A P} `{@SizeMonotonic _ arbitraryST}.",
            "VernacInductive",
            "6f62084207975a749e13fff5cfdf4e47456fb474"
        ],
        [
            "Class GenSuchThatMonotonicOpt (A : Type) (P : A -> Prop) `{GenSuchThat A P} `{@SizeMonotonicOpt _ arbitraryST}.",
            "VernacInductive",
            "1bd853bceecc1afcc72c6f2d5dd95093192aa22a"
        ],
        [
            "Class GenSuchThatCorrect {A : Type} (P : A -> Prop) `{GenSuchThat A P} `{SuchThatCorrect A P arbitraryST}.",
            "VernacInductive",
            "f104b2b0ff94f54eb7e2b3690dcb10aba611c162"
        ],
        [
            "Class GenSuchThatMonotonicCorrect (A : Type) (P : A -> Prop) `{GenSuchThat A P} `{@SizeMonotonicOpt _ arbitraryST} `{SuchThatCorrect A P arbitraryST}.",
            "VernacInductive",
            "5e0cad2237547d2b12f9ba2a01f4a7fdb7da0d77"
        ],
        [
            "Instance GenSizedSuchThatMonotonicOptOfSizeMonotonic (A : Type) (P : A -> Prop) (Hgen : GenSizedSuchThat A P) (Hmon : forall s : nat, SizeMonotonicOpt (arbitrarySizeST s)) : @GenSizedSuchThatMonotonicOpt A _ Hgen Hmon.",
            "VernacInstance",
            "ef4148032b09b2d7e568d928d85b4873ab9964bf"
        ],
        [
            "Instance GenSizedSuchThatSizeMonotonicOptOfSizedMonotonic (A : Type) (P : A -> Prop) (Hgen : GenSizedSuchThat A P) (Hmon : SizedMonotonicOpt arbitrarySizeST) : @GenSizedSuchThatSizeMonotonicOpt A _ Hgen Hmon.",
            "VernacInstance",
            "40be960b81d85a3080c64ee0d74f9885af73b26a"
        ],
        [
            "Instance GenSizedSuchThatCorrectOptOfSizedSuchThatCorrect (A : Type) (P : A -> Prop) (H : GenSizedSuchThat A P) (Heqs : SizedProofEqs P) (Hcorr : SizedSuchThatCorrect P arbitrarySizeST) : @GenSizedSuchThatCorrect A P H Heqs Hcorr.",
            "VernacInstance",
            "c36cf44e2ae24b69e29aeee84a2addd31e15e14d"
        ],
        [
            "Instance GenSuchThatMonotonicOptOfSizeMonotonic (A : Type) (P : A -> Prop) (Hgen : GenSuchThat A P) (Hmon : SizeMonotonicOpt arbitraryST) : @GenSuchThatMonotonicOpt A _ Hgen Hmon.",
            "VernacInstance",
            "d14c5518dca0278d92f18a0638313fa2f61d1c05"
        ],
        [
            "Instance GenSuchThatCorrectOptOfSuchThatCorrect (A : Type) (P : A -> Prop) (H : GenSuchThat A P) (Hcorr : SuchThatCorrect P (genST P)) : @GenSuchThatCorrect A P H Hcorr.",
            "VernacInstance",
            "aa76040082e89de51b0baf72503e4ad95f3395ae"
        ],
        [
            "Instance SizeMonotonicOptofSizeMonotonic {A} (g : G (option A)) {H : SizeMonotonic g} : SizeMonotonicOpt g.",
            "VernacInstance",
            "08fbe3baf2debc0b1fc89419424cb0e5313c4c2a"
        ],
        [
            "intros s1 s2 Hs a.",
            "VernacExtend",
            "52926f36b759c85f0e1491b60a65b60f19ae0a60"
        ],
        [
            "eapply monotonic; eauto.",
            "VernacExtend",
            "fc74acb4937bd6f9b2fd57bf6ac62ecf6a875450"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance GenSuchThatOfBounded (A : Type) (P : A -> Prop) (H : GenSizedSuchThat A P) : GenSuchThat A P := { arbitraryST := sized arbitrarySizeST }.",
            "VernacInstance",
            "6fcc71ee60d597784ea00152210874cb8a9f397d"
        ],
        [
            "Generalizable Variables PSized PMon PSMon PCorr.",
            "VernacGeneralizable",
            "43af647f86f77e3ebb4fa068c3010adc7b0b15d2"
        ],
        [
            "Instance GenSuchThatMonotonicOfSized (A : Type) (P : A -> Prop) {H : GenSizedSuchThat A P} `{@GenSizedSuchThatMonotonic A P H PMon} `{@GenSizedSuchThatSizeMonotonic A P H PSMon} : GenSuchThatMonotonic A P.",
            "VernacInstance",
            "d96d7e60db0c01baafb3c7d222a2c0d611edd058"
        ],
        [
            "Instance SizeMonotonicOptOfBounded' (A : Type) (P : A -> Prop) {H : GenSizedSuchThat A P} `{@GenSizedSuchThatMonotonicOpt A P H PMon} `{@GenSizedSuchThatSizeMonotonicOpt A P H PSMon} : SizeMonotonicOpt (genST P).",
            "VernacInstance",
            "86301de317d90b5185e93a02115491b42554b49b"
        ],
        [
            "unfold arbitraryST, GenSuchThatOfBounded.",
            "VernacExtend",
            "33fac25a2c59aaccf32377270c604854c8b6c173"
        ],
        [
            "Admitted.",
            "VernacEndProof",
            "b273df2a612833d7cae3ad881c7303cec72f8651"
        ],
        [
            "Instance SizeMonotonicOptOfBounded (A : Type) (P : A -> Prop) (H1 : GenSizedSuchThat A P) (H2 : SizedProofEqs P) (H2 : forall s : nat, SizeMonotonicOpt (arbitrarySizeST s)) (H3 : SizedMonotonicOpt arbitrarySizeST) : SizeMonotonicOpt (genST P).",
            "VernacInstance",
            "e9689cb59d40f3775ec1e6a9c49e53bbd017e6c0"
        ],
        [
            "eapply SizeMonotonicOptOfBounded'.",
            "VernacExtend",
            "e5e950e6cd7c74b942bd78321e5f7a6315dcc560"
        ],
        [
            "constructor; eauto.",
            "VernacExtend",
            "e0e7f3b9c455b20aabae95754dcd431c74b5b789"
        ],
        [
            "constructor; eauto.",
            "VernacExtend",
            "e0e7f3b9c455b20aabae95754dcd431c74b5b789"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance GenSuchThatMonotonicOptOfSized' (A : Type) (P : A -> Prop) {H : GenSizedSuchThat A P} `{@GenSizedSuchThatMonotonicOpt A P H PMon} `{@GenSizedSuchThatSizeMonotonicOpt A P H PSMon} : GenSuchThatMonotonicOpt A P.",
            "VernacInstance",
            "6b793129b535aa8fb35bd081bcb461674267722d"
        ],
        [
            "Instance SuchThatCorrectOfBounded' (A : Type) (P : A -> Prop) {H : GenSizedSuchThat A P} `{@GenSizedSuchThatMonotonicOpt A P H PMon} `{@GenSizedSuchThatSizeMonotonicOpt A P H PSMon} `{@GenSizedSuchThatCorrect A P H PSized PCorr} : SuchThatCorrect P arbitraryST.",
            "VernacInstance",
            "14f8261c23e41b98c21733ae689252f197ed4c88"
        ],
        [
            "constructor; unfold arbitraryST, GenSuchThatOfBounded.",
            "VernacExtend",
            "9c2a41fab0492c34927ef5882cff11a7233f8fc2"
        ],
        [
            "rewrite semSized_opt; eauto.",
            "VernacExtend",
            "fb1e0ce4547c97302d305d5cc4504ca925b47905"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros [H3 H4].",
            "VernacExtend",
            "9036e968aadb2594915022a13e4a0bc80a49cebc"
        ],
        [
            "destruct a; try discriminate.",
            "VernacExtend",
            "fde6b0aa5849f5ce2cd41eb99544a829f1038d46"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "split; [| reflexivity ].",
            "VernacExtend",
            "b3b2ab28272d17bbd288e5c714b27165f96106d4"
        ],
        [
            "eapply spec.",
            "VernacExtend",
            "de538f27526c0ac5e4f208b84714aec4ec736b4e"
        ],
        [
            "destruct H4 as [n [_ Hsem]].",
            "VernacExtend",
            "e7545dc61d4b3907102d4fbc3eb73995ab7d8cd7"
        ],
        [
            "exists n.",
            "VernacExtend",
            "a97204a252e0d9b7444ffed9b38570a756391511"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "now constructor.",
            "VernacExtend",
            "e001978ec065ef0fd63cb804e72fb73890e93711"
        ],
        [
            "assert (Ha : (isSome :&: semGen (arbitrarySizeST n)) (Some a)).",
            "VernacExtend",
            "d172cc6cbebb47c4c0121f5b28dba58d36098f82"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "split; eauto.",
            "VernacExtend",
            "f3520b20a884376c5c10e2f9e716eedc86a566b6"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "eapply PCorr in Ha.",
            "VernacExtend",
            "4c02420aea457286e5c7ca617a39e9a7d848c98b"
        ],
        [
            "destruct Ha as [a' [Hit Heq]].",
            "VernacExtend",
            "41fc8a6eeabe28471a59d3182600b4de49c0f552"
        ],
        [
            "inv Heq.",
            "VernacExtend",
            "eddd74ca6f091e02adeca6da43d1c621e882f9b4"
        ],
        [
            "eassumption.",
            "VernacExtend",
            "909bfe8655bf95c07560744f733991163ce6cf7e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros [y [HP Heq]].",
            "VernacExtend",
            "bd4323c2d20d7f4f068110c68d826ae9daf0ab8a"
        ],
        [
            "inv Heq.",
            "VernacExtend",
            "eddd74ca6f091e02adeca6da43d1c621e882f9b4"
        ],
        [
            "eapply spec in HP.",
            "VernacExtend",
            "82ce6e7772546268221b50de8e19181fbf0eb4fd"
        ],
        [
            "destruct HP as [n [_ Hit]].",
            "VernacExtend",
            "c1459d416d49bd2b32e6055541d5018ac95ab90c"
        ],
        [
            "split; eauto.",
            "VernacExtend",
            "f3520b20a884376c5c10e2f9e716eedc86a566b6"
        ],
        [
            "exists n.",
            "VernacExtend",
            "a97204a252e0d9b7444ffed9b38570a756391511"
        ],
        [
            "split; [ now constructor |].",
            "VernacExtend",
            "f83d480e9cfb1de8ca3c5c582e6406327bf6e2ee"
        ],
        [
            "eapply PCorr.",
            "VernacExtend",
            "ba557c1a186d5a1b9fa65b6e6093e229a1984433"
        ],
        [
            "eexists; split; eauto.",
            "VernacExtend",
            "79f3b564d9de421e26f4d4011c66097e301daa61"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance SuchThatCorrectOfBounded (A : Type) (P : A -> Prop) (H1 : GenSizedSuchThat A P) (H2 : SizedProofEqs P) (H3 : forall s : nat, SizeMonotonicOpt (arbitrarySizeST s)) (H4 : SizedMonotonicOpt arbitrarySizeST) (H5 : SizedSuchThatCorrect P arbitrarySizeST) : SuchThatCorrect P arbitraryST.",
            "VernacInstance",
            "3680b2ef5f95fd1a7e4351cc7fd3ea6c9107510e"
        ],
        [
            "eapply SuchThatCorrectOfBounded'; eauto.",
            "VernacExtend",
            "b8e83c756569c7db38df232fa17c6a9748900ad7"
        ],
        [
            "constructor; eauto.",
            "VernacExtend",
            "e0e7f3b9c455b20aabae95754dcd431c74b5b789"
        ],
        [
            "constructor; eauto.",
            "VernacExtend",
            "e0e7f3b9c455b20aabae95754dcd431c74b5b789"
        ],
        [
            "constructor; eauto.",
            "VernacExtend",
            "e0e7f3b9c455b20aabae95754dcd431c74b5b789"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "SizeMonotonicOptofSizeMonotonic",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "intros s1 s2 Hs a.",
                        "VernacExtend",
                        "52926f36b759c85f0e1491b60a65b60f19ae0a60"
                    ]
                },
                {
                    "command": [
                        "eapply monotonic; eauto.",
                        "VernacExtend",
                        "fc74acb4937bd6f9b2fd57bf6ac62ecf6a875450"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "SizeMonotonicOptOfBounded",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "eapply SizeMonotonicOptOfBounded'.",
                        "VernacExtend",
                        "e5e950e6cd7c74b942bd78321e5f7a6315dcc560"
                    ]
                },
                {
                    "command": [
                        "constructor; eauto.",
                        "VernacExtend",
                        "e0e7f3b9c455b20aabae95754dcd431c74b5b789"
                    ]
                },
                {
                    "command": [
                        "constructor; eauto.",
                        "VernacExtend",
                        "e0e7f3b9c455b20aabae95754dcd431c74b5b789"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "SuchThatCorrectOfBounded",
            "line_nb": 80,
            "steps": [
                {
                    "command": [
                        "eapply SuchThatCorrectOfBounded'; eauto.",
                        "VernacExtend",
                        "b8e83c756569c7db38df232fa17c6a9748900ad7"
                    ]
                },
                {
                    "command": [
                        "constructor; eauto.",
                        "VernacExtend",
                        "e0e7f3b9c455b20aabae95754dcd431c74b5b789"
                    ]
                },
                {
                    "command": [
                        "constructor; eauto.",
                        "VernacExtend",
                        "e0e7f3b9c455b20aabae95754dcd431c74b5b789"
                    ]
                },
                {
                    "command": [
                        "constructor; eauto.",
                        "VernacExtend",
                        "e0e7f3b9c455b20aabae95754dcd431c74b5b789"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}