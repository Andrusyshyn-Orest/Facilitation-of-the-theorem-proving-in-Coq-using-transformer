{
    "filename": "src/CoArbitrary.v",
    "coq_project": "QuickChick",
    "vernac_cmds": [
        [
            "Require Import PArith List ChoiceFacts Omega.",
            "VernacRequire",
            "39dfa354be44de64f47bdbd1188a23ad339e0397"
        ],
        [
            "Require Import mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "85e251063dc2b5a9653f7bb76dcd176ed36b42a9"
        ],
        [
            "From mathcomp Require Import ssrfun ssrbool.",
            "VernacRequire",
            "6bc5ca42638605b758087d61b8ffe70e5cce2c72"
        ],
        [
            "Require Import Classes RandomQC GenLow Sets.",
            "VernacRequire",
            "f2fb71899cd2bab5d08ec2d8d987f8efbe277e79"
        ],
        [
            "Import GenLow.",
            "VernacImport",
            "3335f4d1a94013e0d7ec3d29483172681396898b"
        ],
        [
            "Import ListNotations.",
            "VernacImport",
            "52647db2a3b752153a8cbd37039246f200bccdee"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Class CoArbitrary (A : Type) : Type := { coarbitrary : A -> positive; coarbReverse : positive -> option A; coarbCorrect : forall a, coarbReverse (coarbitrary a) = Some a }.",
            "VernacInductive",
            "cdd0dc13911442ce64ce57edcd62238b7aaff0ce"
        ],
        [
            "Instance coArbPos : CoArbitrary positive.",
            "VernacInstance",
            "c156f0f263ad04b717c2ba1da1ee42ffea45e905"
        ],
        [
            "refine {| coarbitrary x := x; coarbReverse x := Some x |}.",
            "VernacExtend",
            "c03eddb1996aae9a4144b14773603b7d873bb96b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nat_lemma : forall a : nat, Some (Init.Nat.pred (Pos.to_nat (Pos.of_nat (S a)))) = Some a.",
            "VernacStartTheoremProof",
            "83c51b4b5a5f27f6e521173d728307dad1575508"
        ],
        [
            "Admitted.",
            "VernacEndProof",
            "b273df2a612833d7cae3ad881c7303cec72f8651"
        ],
        [
            "Instance coqArbNat : CoArbitrary nat.",
            "VernacInstance",
            "794ff3a86dad8a9eaabf320ad28e5628c5597489"
        ],
        [
            "refine {| coarbitrary x := Pos.of_nat (S x); coarbReverse p := Some (Coq.Init.Peano.pred (Pos.to_nat p)) |}.",
            "VernacExtend",
            "541216b3d2abcd1ab1084b28e27844fcac07c2e3"
        ],
        [
            "apply nat_lemma.",
            "VernacExtend",
            "a8bbadd5ac80755ff67b9e4088c29d95b52eedc7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Open Scope positive.",
            "VernacOpenCloseScope",
            "ecdd20a6c035f81cd1162802a177e3dcc9201c26"
        ],
        [
            "Fixpoint posToPathAux (p : positive) : SplitPath := match p with | xH => [] | xI p' => posToPathAux p' ++ [Left; Right] | xO p' => posToPathAux p' ++ [Left; Left ] end.",
            "VernacFixpoint",
            "2f0315e6c20614c6a87a9571b0665a49e69ccac9"
        ],
        [
            "Definition posToPath (p : positive) : SplitPath := posToPathAux p ++ [Right].",
            "VernacDefinition",
            "0fa6e218b7992749216579667688045ba7c59229"
        ],
        [
            "Fixpoint pathToPosAux (p : SplitPath) (f : positive -> positive) : option positive := match p with | [Right] => Some (f xH) | Left :: Right :: p' => pathToPosAux p' (fun p => xI (f p)) | Left :: Left :: p' => pathToPosAux p' (fun p => xO (f p)) | _ => None end.",
            "VernacFixpoint",
            "365c39346ded1bb571008c12114dd8666f9dce5b"
        ],
        [
            "Definition pathToPos p := pathToPosAux p (fun x => x).",
            "VernacDefinition",
            "7a76edd75921ccd279c3cc8ba6d7aaedcadca782"
        ],
        [
            "Definition list_ind' (A : Type) (P : list A -> Prop) : P [] -> (forall (a : A), P [a]) -> (forall (a b : A) (l : list A), P l -> P (a :: b :: l)) -> forall (l : list A), P l := fun H0 H1 H2 => fix aux (l : list A) : P l := match l with | [] => H0 | [x] => H1 x | a :: b :: l' => H2 a b l' (aux l') end.",
            "VernacDefinition",
            "284d630598ebd0fafae379ec05bfe56c5c4abf6d"
        ],
        [
            "Lemma aux1 : forall l p f, pathToPosAux (l ++ [Right]) f = Some p -> exists f', forall l', pathToPosAux (l ++ l') f = pathToPosAux l' f' /\\ f' xH = p.",
            "VernacStartTheoremProof",
            "b045e4036c44ad2930432cd2aa882bafd2a83a61"
        ],
        [
            "induction l using list_ind'; intros.",
            "VernacExtend",
            "249157d68b165913ad0d5b1077e040e9cea610ed"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl in *; inversion H; subst.",
            "VernacExtend",
            "bd0edd44b2964d0980b0816e6eb6d62ff1fc7f58"
        ],
        [
            "exists f; intros.",
            "VernacExtend",
            "a8e05059ccaf9183ecde196b2f591bf27d9a6d5d"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl in H; destruct a; inversion H.",
            "VernacExtend",
            "d6e13a8413ee0bf566f31c6e4da084366e1c2284"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "pose proof IHl p; clear IHl.",
            "VernacExtend",
            "18506cdd817a770d7e68c176239238f1a6541c91"
        ],
        [
            "destruct a; destruct b; simpl in *.",
            "VernacExtend",
            "ea68ff10b842d66ce82861f93afc22ad79f49bd3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "pose proof (H0 (fun p0 => xO (f p0))); clear H0.",
            "VernacExtend",
            "94959cc35067f5d80aa0b8b9ee7ac3b91a97a751"
        ],
        [
            "apply H1 in H; clear H1.",
            "VernacExtend",
            "0930f817ae31658329d1bf922b23c1e333127384"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "pose proof (H0 (fun p0 => xI (f p0))); clear H0.",
            "VernacExtend",
            "3bee489a4abcdbffba378ef36b0391688ba67597"
        ],
        [
            "apply H1 in H; clear H1.",
            "VernacExtend",
            "0930f817ae31658329d1bf922b23c1e333127384"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma posPathInj : forall p, pathToPos (posToPath p) = Some p.",
            "VernacStartTheoremProof",
            "99e37ad6fe20a3d09abb99f12bd7eb20e582f90c"
        ],
        [
            "induction p; unfold posToPath, pathToPos in *; simpl in *.",
            "VernacExtend",
            "ac026a991f0edc300d1a7574e0820fcb1dcd3720"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply aux1 in IHp.",
            "VernacExtend",
            "739f486e0ce95e46447c7a4e10a7de1d4e919d96"
        ],
        [
            "inversion IHp as [f' Hyp]; clear IHp.",
            "VernacExtend",
            "ddc55476929eb4db937998b9c88a5bfd5651ff98"
        ],
        [
            "rewrite <- app_assoc; simpl.",
            "VernacExtend",
            "f58c01d870a66db32eee97ed11219da3c1b04eda"
        ],
        [
            "pose proof Hyp [Left; Right; Right] as H; clear Hyp.",
            "VernacExtend",
            "db3a19431e86ee522b469c879fa702be195e454a"
        ],
        [
            "inversion H as [H0 H1]; clear H.",
            "VernacExtend",
            "56863f5cce4d81eeb3ae941360638c32a78fa4c2"
        ],
        [
            "rewrite H0; clear H0.",
            "VernacExtend",
            "890e95147a64aa3270c983cf9925f4788e8c1c89"
        ],
        [
            "simpl; subst; auto.",
            "VernacExtend",
            "7f48ea8dd238510d0dc92e5776d10aaf06126e10"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply aux1 in IHp.",
            "VernacExtend",
            "739f486e0ce95e46447c7a4e10a7de1d4e919d96"
        ],
        [
            "inversion IHp as [f' Hyp]; clear IHp.",
            "VernacExtend",
            "ddc55476929eb4db937998b9c88a5bfd5651ff98"
        ],
        [
            "rewrite <- app_assoc; simpl.",
            "VernacExtend",
            "f58c01d870a66db32eee97ed11219da3c1b04eda"
        ],
        [
            "pose proof Hyp [Left; Left; Right] as H; clear Hyp.",
            "VernacExtend",
            "d4146354b7a9e53a471ce4b44dc980372f8fa0e8"
        ],
        [
            "inversion H as [H0 H1]; clear H.",
            "VernacExtend",
            "56863f5cce4d81eeb3ae941360638c32a78fa4c2"
        ],
        [
            "rewrite H0; clear H0.",
            "VernacExtend",
            "890e95147a64aa3270c983cf9925f4788e8c1c89"
        ],
        [
            "simpl; subst; auto.",
            "VernacExtend",
            "7f48ea8dd238510d0dc92e5776d10aaf06126e10"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint lengthSplit {A : Type} (l l' : list A) : option (list A * list A) := match l, l' with | [], x => Some ([], x) | _::xs, y::ys => option_map (fun (p : list A * list A) => let (l1,l2) := p in (y::l1, l2)) (lengthSplit xs ys) | _, _ => None end.",
            "VernacFixpoint",
            "2636044130efdf984f9fe36f2d97ad74e87d7156"
        ],
        [
            "Lemma lengthSplit1 : forall {A : Type} (l l' : list A), le (length l) (length l') -> exists p, lengthSplit l l' = Some p.",
            "VernacStartTheoremProof",
            "516f57e0a91ef7787d4f08afa38870eb6dcf7903"
        ],
        [
            "induction l as [ | x xs IHxs].",
            "VernacExtend",
            "30eb45a3a4c1bc185beea982258cb592b47f2884"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros; exists ([], l'); auto.",
            "VernacExtend",
            "45911a33b39e09db56b63910434482214b0db026"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros l' LE; destruct l' as [ | b bs] eqn:LEq.",
            "VernacExtend",
            "16abecf85426407127c878bd93edda93067d6b80"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion LE.",
            "VernacExtend",
            "cd4a205cc3d64ab235eb28ecd01835e062ad112c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "pose proof IHxs bs as IH; clear IHxs.",
            "VernacExtend",
            "d2b20c449e2f8bb99da0ec827d8ed9e18f019960"
        ],
        [
            "assert (LE' : le (length xs) (length bs)) by (simpl in *; omega).",
            "VernacExtend",
            "6d80a559d33f6a740acfc7ec09049235c51d7aeb"
        ],
        [
            "clear LE.",
            "VernacExtend",
            "c26651eef1f371dcc4cf5bd3406f1caa27c32495"
        ],
        [
            "apply IH in LE'; clear IH.",
            "VernacExtend",
            "4f75da941b077b4ebae4a2fc18255e681346a6ae"
        ],
        [
            "inversion LE' as [pair Split]; clear LE'.",
            "VernacExtend",
            "a171e501b028507e7fa67240929a90f6b4982e74"
        ],
        [
            "destruct pair as [l1 l2] eqn:Pair.",
            "VernacExtend",
            "49b59bd8bbc05ff629ac9664453476cae11d7ba9"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Split.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exists (b :: l1, l2).",
            "VernacExtend",
            "5dad6d7777863f4d8c1d73f88b4cfad09e179e88"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lengthSplit2 : forall {A : Type} (l l' l1 l2 : list A), lengthSplit l l' = Some (l1, l2) -> l1 ++ l2 = l'.",
            "VernacStartTheoremProof",
            "522901839d50a342ca5b79925c02ba5aa6ba7cbd"
        ],
        [
            "induction l.",
            "VernacExtend",
            "1194af70832939708f8c7fde2f18f81c37b97a0c"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros l' l1 l2 Hyp; simpl in Hyp; inversion_clear Hyp; auto.",
            "VernacExtend",
            "bd34579c3cba1663d4c6a90d538a932b2233487f"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros l' l1 l2 Hyp.",
            "VernacExtend",
            "cf70b99ea0e8985ff708be0c2d7e0abb04585563"
        ],
        [
            "simpl in Hyp.",
            "VernacExtend",
            "b668b3da0bf9ed61164e3a2fc832fc359440e086"
        ],
        [
            "destruct l' as [ | y ys] eqn:L'.",
            "VernacExtend",
            "d43146243184da0c993ab7c4b5cbf7f168923158"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion Hyp.",
            "VernacExtend",
            "e8a79d7c9df846da8ea7555b1624013f7b3cbe26"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct l1 eqn:L1.",
            "VernacExtend",
            "8dfa2ba28fc84fa632472703d257b51e9be3a81f"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct (lengthSplit l ys); simpl in *.",
            "VernacExtend",
            "2b6dddd77bffa1e28488a5c498cd9582eecd24b3"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct p; congruence.",
            "VernacExtend",
            "037f7fdfe541d4b4907a7cdb950c4af761e267e2"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "pose proof IHl ys l0 l2; clear IHl.",
            "VernacExtend",
            "9489cd777a72648fc40c2ebd1d11dd4dd38786d0"
        ],
        [
            "destruct (lengthSplit l ys) eqn:LenSplit; simpl in *.",
            "VernacExtend",
            "6d48e651a9776f431f4016af8d5468214d462a25"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inversion Hyp.",
            "VernacExtend",
            "e8a79d7c9df846da8ea7555b1624013f7b3cbe26"
        ],
        [
            "destruct p.",
            "VernacExtend",
            "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
        ],
        [
            "inversion H1.",
            "VernacExtend",
            "58dee2cce9b13b50b065ba894c1b533413715754"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "rewrite H; auto.",
            "VernacExtend",
            "9e2b92fba484264671c209dbe9b51f8bf106fcab"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inversion Hyp.",
            "VernacExtend",
            "e8a79d7c9df846da8ea7555b1624013f7b3cbe26"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lengthSplit3 : forall {A : Type} (l l' l1 l2 : list A), lengthSplit l l' = Some (l1, l2) -> length l1 = length l.",
            "VernacStartTheoremProof",
            "d633763ea2cccc71da9db9477f31fe59f4f05ab7"
        ],
        [
            "induction l as [ | x xs IHxs].",
            "VernacExtend",
            "30eb45a3a4c1bc185beea982258cb592b47f2884"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros; simpl in H; inversion H; auto.",
            "VernacExtend",
            "1e4c081529a405e6507af2761fa3c341f83d63c5"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros l' l1 l2 Split.",
            "VernacExtend",
            "2982a662bf96ee6108aa154ab5e7c018f65405f0"
        ],
        [
            "simpl in Split.",
            "VernacExtend",
            "938b667a09520f4ef84aabd556768c907a51fc34"
        ],
        [
            "destruct l'.",
            "VernacExtend",
            "d3a2cf1f5af31737cd1e570fd3939d7f963563b3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion Split.",
            "VernacExtend",
            "20e5ee0086dac6824ab67cce0a997b84345ff5b4"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct l1.",
            "VernacExtend",
            "9d980bd7c4dba1bbd3fdfae643479b8d8129e3a6"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct (lengthSplit xs l').",
            "VernacExtend",
            "1e5a81461bd6468845dd7c4abfd9f93bd381eedb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "destruct p.",
            "VernacExtend",
            "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
        ],
        [
            "inversion Split.",
            "VernacExtend",
            "20e5ee0086dac6824ab67cce0a997b84345ff5b4"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "inversion Split.",
            "VernacExtend",
            "20e5ee0086dac6824ab67cce0a997b84345ff5b4"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "destruct (lengthSplit xs l') eqn:LenSplit.",
            "VernacExtend",
            "950a596d4114492c1ef1ded0ddc75ecc9af60296"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "destruct p.",
            "VernacExtend",
            "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
        ],
        [
            "inversion Split; subst; clear Split.",
            "VernacExtend",
            "6d95c7f36e1888a860fb174986c62a4f627b8e59"
        ],
        [
            "pose proof (IHxs l' l1 l2 LenSplit) as Hyp; clear IHxs.",
            "VernacExtend",
            "03cde635553beeccf2c17a0c04ed383d985fd3e8"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "inversion Split.",
            "VernacExtend",
            "20e5ee0086dac6824ab67cce0a997b84345ff5b4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lengthPathEven : forall p, exists n, length (posToPathAux p) = (2 * n)%nat.",
            "VernacStartTheoremProof",
            "a58320681c4e5fe29c283883a77cef6cdef9df2e"
        ],
        [
            "induction p.",
            "VernacExtend",
            "57241b1bf2113f288b5c35cf50cb4c85d8323deb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inversion IHp as [n Hyp]; clear IHp.",
            "VernacExtend",
            "98b0f4018154a6b27c84fab92a3534eb9bfa4274"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "exists (S n).",
            "VernacExtend",
            "cd2a24563bef1e96e5268d448b7159cbb0bda443"
        ],
        [
            "rewrite app_length.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Hyp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inversion IHp as [n Hyp]; clear IHp.",
            "VernacExtend",
            "98b0f4018154a6b27c84fab92a3534eb9bfa4274"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "exists (S n).",
            "VernacExtend",
            "cd2a24563bef1e96e5268d448b7159cbb0bda443"
        ],
        [
            "rewrite app_length.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Hyp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exists (O).",
            "VernacExtend",
            "857793ba1f2fca166b38dcce16bdb0403ad0f7dc"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma evenPathAux : forall l l' l'' lApp f n p, length l = (2 * n)%nat -> pathToPosAux (l ++ l' ++ l'') f = Some p -> exists f', pathToPosAux (l ++ l') f = pathToPosAux l' f' /\\ pathToPosAux (l ++ l' ++ lApp) f = pathToPosAux (l' ++ lApp) f'.",
            "VernacStartTheoremProof",
            "77afec03f4e38d54dad7ee1d1ff2b748dffb5b46"
        ],
        [
            "induction l using list_ind'.",
            "VernacExtend",
            "2932869da6e79415a402b99f6aa42503008d5523"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exists f.",
            "VernacExtend",
            "c9e46b92fddb4f89ddd3a964bd2aee97fe7e2db7"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros l' l'' lApp f n p Len Valid.",
            "VernacExtend",
            "a0056adcf2472c99cba21f5cbfaeea3249ab76d0"
        ],
        [
            "destruct n.",
            "VernacExtend",
            "1582bf847770c098bee882393a48b146dcc37a8c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl in Len.",
            "VernacExtend",
            "8e63250c0fdf43acb12efb3b5009b7c7f10dc7b4"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl in Len; assert (length l = (2 * n)%nat) by omega.",
            "VernacExtend",
            "38f190b7c711a49be9285f817ac199558d909bbc"
        ],
        [
            "destruct a eqn:A; destruct b eqn:B; simpl in *.",
            "VernacExtend",
            "6c2091631aca1a42b1f508bae2a6d7b528d7465f"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "unfold pathToPos in Valid.",
            "VernacExtend",
            "fea48b1e419dac4648ba159620d843cc57c58e7e"
        ],
        [
            "simpl in Valid.",
            "VernacExtend",
            "0dcc324c7e7d304bc2527282e55eb5999d7a194c"
        ],
        [
            "pose proof (IHl l' l'' lApp (fun p => xO (f p)) n p H Valid) as Hyp; clear IHl H.",
            "VernacExtend",
            "3b8c9ce66906140d7a53494e65e35672ee220bdb"
        ],
        [
            "inversion Hyp as [f' HF]; clear Hyp.",
            "VernacExtend",
            "0f61589f52188c03e89f701e18936926aaf5cca0"
        ],
        [
            "exists f'.",
            "VernacExtend",
            "e95a080cbf17df4d26d1fb84ae05493ce615c642"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "unfold pathToPos in Valid.",
            "VernacExtend",
            "fea48b1e419dac4648ba159620d843cc57c58e7e"
        ],
        [
            "simpl in Valid.",
            "VernacExtend",
            "0dcc324c7e7d304bc2527282e55eb5999d7a194c"
        ],
        [
            "pose proof (IHl l' l'' lApp (fun p => xI (f p)) n p H Valid) as Hyp; clear IHl H.",
            "VernacExtend",
            "39d2384c7a25dfeaf630d3ed2bb95df4caf07937"
        ],
        [
            "inversion Hyp as [f' HF]; clear Hyp.",
            "VernacExtend",
            "0f61589f52188c03e89f701e18936926aaf5cca0"
        ],
        [
            "exists f'.",
            "VernacExtend",
            "e95a080cbf17df4d26d1fb84ae05493ce615c642"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "inversion Valid.",
            "VernacExtend",
            "8cb10c690f47140d5363702d2686e15a46cb3749"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "inversion Valid.",
            "VernacExtend",
            "8cb10c690f47140d5363702d2686e15a46cb3749"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pathBeginsLeft : forall l1 l2 f x, l1 <> [] -> l2 <> [] -> pathToPosAux (l1 ++ l2) f = Some x -> head l1 = Some Left.",
            "VernacStartTheoremProof",
            "426b83f7aad62b18765445675892246de98595c1"
        ],
        [
            "destruct l1.",
            "VernacExtend",
            "9d980bd7c4dba1bbd3fdfae643479b8d8129e3a6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exfalso; apply H; auto.",
            "VernacExtend",
            "973252ec4c1397cd8a55ed6c086e8b86a3af08a2"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct s.",
            "VernacExtend",
            "25b900e268e7851d959aa45edce33af62b3fca65"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl in H1.",
            "VernacExtend",
            "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
        ],
        [
            "destruct (l1 ++ l2) eqn:Contra.",
            "VernacExtend",
            "dab4e5a79b520e34627e4696d3618fb5a2f49dc7"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct l1; destruct l2; try solve [unfold not; exfalso; auto]; simpl in *; congruence.",
            "VernacExtend",
            "4c798a48ebd23395aae0b0651b8c730905de01f4"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma listAppNeq : forall (A : Type) (l1 l2 l3 l4 : list A), (forall (x y : A), {x = y} + {x <> y}) -> length l1 = length l2 -> l1 <> l2 -> l1 ++ l3 <> l2 ++ l4.",
            "VernacStartTheoremProof",
            "b259b5f018f2327f232479a90651805c105d404f"
        ],
        [
            "induction l1.",
            "VernacExtend",
            "dfeb7bb70eb7390d22f3eada025c33a176cd1338"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct l2.",
            "VernacExtend",
            "0d8334f1e323ab8f2f037af4de7aa29b31aa5fb2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold not in H0.",
            "VernacExtend",
            "eff5756abeaf36fdc554936501a439c8f4159123"
        ],
        [
            "exfalso; apply H0; auto.",
            "VernacExtend",
            "3eb9e762bc8451ba3272acfd103dd9f49d80c6af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl in H; inversion H.",
            "VernacExtend",
            "7c1997cdfbf3d103c73b8423bc0be65df461739c"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros l2 l3 l4 EqDec Len Neq.",
            "VernacExtend",
            "3bdb35a2633965cb1d2957f97a072c24efef0a25"
        ],
        [
            "destruct l2 as [ | b l2 ].",
            "VernacExtend",
            "aeb8a15e77d0353414c9f7dd9844ee9dc1b4515e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl in Len.",
            "VernacExtend",
            "8e63250c0fdf43acb12efb3b5009b7c7f10dc7b4"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (EqDec a b).",
            "VernacExtend",
            "f9c76ffe9ba323202eba242dbd5cc249a81571d8"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "simpl in Len.",
            "VernacExtend",
            "8e63250c0fdf43acb12efb3b5009b7c7f10dc7b4"
        ],
        [
            "inversion Len as [ Len']; clear Len.",
            "VernacExtend",
            "870b844f1db7ca025a9ed818035e32058de9dada"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "pose proof (IHl1 l2 l3 l4 EqDec Len') as Contra; clear IHl1.",
            "VernacExtend",
            "f184ad48721feee31a0ed7739d5225882e00b0f4"
        ],
        [
            "assert (l1 <> l2) by (unfold not; intros; congruence).",
            "VernacExtend",
            "e85ee9bc38bfd27e3e28f3c13945a6577f9eec4d"
        ],
        [
            "apply Contra in H.",
            "VernacExtend",
            "aafba415e3f95a276e0be2980e1eec7e61033c59"
        ],
        [
            "unfold not in *.",
            "VernacExtend",
            "e992d731987459002424cdefea553f6182b3a61b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "unfold not; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma PosToPathPrefixFreeAux : forall (x y : positive), (x <> y) -> le (length (posToPathAux y)) (length(posToPathAux x)) -> PrefixFree [posToPath x; posToPath y].",
            "VernacStartTheoremProof",
            "f974e8d72f7944a79757809cd5fa7c53e535c123"
        ],
        [
            "intros x y H Leq.",
            "VernacExtend",
            "1e2a24464619bebef7d638ee71b42ebcc3480718"
        ],
        [
            "apply FreeCons; [ apply FreeCons ; [ constructor | intros p Contra; inversion Contra] | ].",
            "VernacExtend",
            "a963f22dbae3e565450724e0f3100f9c974f567d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H0; subst; clear H0; [ | inversion H2].",
            "VernacExtend",
            "9b2319d872cc684fe1a125454724076203ec999d"
        ],
        [
            "unfold posToPath in *; simpl in *; repeat rewrite <- app_assoc in *.",
            "VernacExtend",
            "f0dbcdc70d3e46607b0d1043c08b6aab6482e32d"
        ],
        [
            "pose proof (lengthSplit1 Leq) as Hyp.",
            "VernacExtend",
            "214aad63e96ab11abffac7fe6e5d12ffbb2bac68"
        ],
        [
            "inversion Hyp as [pair Split]; clear Hyp.",
            "VernacExtend",
            "aa4dd0a4c08a3c7b91db429f6d05d542dacf1294"
        ],
        [
            "destruct pair as [l0 l1].",
            "VernacExtend",
            "95c5e9ab6233cda525c635a7f0f16a00cd5111db"
        ],
        [
            "pose proof (lengthSplit2 Split) as AppHyp.",
            "VernacExtend",
            "9d9aa682b1f10bab748ef9e66c485c67881b9241"
        ],
        [
            "pose proof (lengthSplit3 Split) as LenHyp.",
            "VernacExtend",
            "f62410ec5a92836ad368d3bf85c0bd759609bab9"
        ],
        [
            "pose proof (lengthPathEven y) as Hyp; inversion Hyp as [n LenN]; subst; clear Hyp.",
            "VernacExtend",
            "563153e88da0fbc2f153046ddd878005a78f4b89"
        ],
        [
            "assert (XHyp : pathToPosAux (l0 ++ l1 ++ [Right]) (fun x => x) = Some x); [ rewrite app_assoc; rewrite AppHyp; apply posPathInj | ].",
            "VernacExtend",
            "d92621e0e0dde15f8cbfd977d2246c6ad882f296"
        ],
        [
            "rewrite <- LenHyp in LenN.",
            "VernacExtend",
            "2edcf38fe39ed51d543cc2b8d746b91c7421799c"
        ],
        [
            "pose proof (evenPathAux [Right] LenN XHyp) as Even.",
            "VernacExtend",
            "de209a859ed94f7c2779f32c293b6e79db21df81"
        ],
        [
            "inversion Even as [f' HF]; clear Even.",
            "VernacExtend",
            "9766fc5be6f134782a2ce304e912924c372c4dd1"
        ],
        [
            "inversion HF as [HF1 HF2]; clear HF.",
            "VernacExtend",
            "20ef245387f828c8d0e4a94d0d89d7dbc9373b80"
        ],
        [
            "rewrite <- AppHyp in H1.",
            "VernacExtend",
            "016f27517cdae46d31d6ac8d7fd59c2ed6a38dde"
        ],
        [
            "rewrite <- app_assoc in H1.",
            "VernacExtend",
            "bd953ff35368ac9cab5ab9dde85469a5a015fca1"
        ],
        [
            "destruct (list_eq_dec Direction_eq_dec (posToPathAux y) l0).",
            "VernacExtend",
            "eb1e52bc052fa241ee6427a4d20b8c49631f6baa"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "apply app_inv_head in H1.",
            "VernacExtend",
            "db09ae6a43e09ee3db84dfc23bfb998ae1794aca"
        ],
        [
            "destruct l1.",
            "VernacExtend",
            "9d980bd7c4dba1bbd3fdfae643479b8d8129e3a6"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "simpl in AppHyp; rewrite app_nil_r in AppHyp.",
            "VernacExtend",
            "a3335047422a5021ade5749575c6a31ecad6db34"
        ],
        [
            "assert (posToPathAux y ++ [Right] = posToPathAux x ++ [Right]) by (rewrite AppHyp; auto).",
            "VernacExtend",
            "76d4cf7ff8047735e14d0f7895aadc9707082c01"
        ],
        [
            "assert (posToPath y = posToPath x) by (unfold posToPath; auto).",
            "VernacExtend",
            "4f4b6b8020f22a24c9afb18df19ce2ecc2ec464d"
        ],
        [
            "assert (pathToPos (posToPath y) = pathToPos (posToPath x)) by (rewrite H2; auto).",
            "VernacExtend",
            "48aaa1a3b9e40d599d423b0a77d7dc5b1fad971c"
        ],
        [
            "repeat rewrite posPathInj in H3.",
            "VernacExtend",
            "c23cdc0c7bcb18627cd6e2b08e391fe6a16b1b34"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "assert (Contra : hd_error (s :: l1) = Some Left).",
            "VernacExtend",
            "26b08fd619ca8d6d8addd104ca5fcc73ac9ce7e7"
        ],
        [
            "eapply pathBeginsLeft.",
            "VernacExtend",
            "c8f560149425194a750f674a5b1cdca256273455"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold not; intros; congruence.",
            "VernacExtend",
            "15c9b7122af5d92477ce2302ad6f3dd3c0417611"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "instantiate (1 := [Right]); unfold not; intros; congruence.",
            "VernacExtend",
            "d0f103559384a2097f3ee740ea230e45b3f66131"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "instantiate (1:= x); instantiate (1:=f').",
            "VernacExtend",
            "b892a52f525ef9519ba2d2d5df5f48e35ff4a6ee"
        ],
        [
            "rewrite <- HF2.",
            "VernacExtend",
            "763a19011dee176242b9d8ca5b7709f7bdd985cb"
        ],
        [
            "apply XHyp.",
            "VernacExtend",
            "223831978b3640f0068e89fb95640df4db92de82"
        ],
        [
            "simpl in Contra.",
            "VernacExtend",
            "b9e5ddf219852a236bed842daffcece79b256df4"
        ],
        [
            "inversion Contra; subst.",
            "VernacExtend",
            "7fd4527528f920198474a4ee3e03223de4b55fe8"
        ],
        [
            "simpl in H1.",
            "VernacExtend",
            "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply listAppNeq.",
            "VernacExtend",
            "0dccdde691736fb8f3d67e8e1f1967c28ec778ea"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply Direction_eq_dec.",
            "VernacExtend",
            "24d019acb8a085f90b8dbd92f8cffae863125438"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "instantiate (1 := l0).",
            "VernacExtend",
            "4331048ac6df033b3e9a2c343478c1a294fac846"
        ],
        [
            "instantiate (1 := posToPathAux y).",
            "VernacExtend",
            "8d428e4ee449753208a1af00280e6b01ffcb1ffd"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "eassumption.",
            "VernacExtend",
            "909bfe8655bf95c07560744f733991163ce6cf7e"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "eapply H1.",
            "VernacExtend",
            "825143ff5ea05ac2ed1d4eae976364feb9c3ba1e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prefixFreeCommutative : forall l1 l2, PrefixFree [l1;l2] -> PrefixFree [l2;l1].",
            "VernacStartTheoremProof",
            "73c0cd1ed4d914fd4da2f30a5ad7305ada532965"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "apply FreeCons.",
            "VernacExtend",
            "b915070eb96844d8d98d9b446ee5b133947b5784"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply FreeCons.",
            "VernacExtend",
            "b915070eb96844d8d98d9b446ee5b133947b5784"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H4.",
            "VernacExtend",
            "184e412874313f14014d688ef3b69568302d00ff"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "eapply H3.",
            "VernacExtend",
            "c283fe0cccfea6349d3f3b143a42b920bc1e86aa"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "instantiate (1 := l2); left; auto.",
            "VernacExtend",
            "bc8f7450d77a28b074bf4df0cd60494b9b7e0034"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion H4.",
            "VernacExtend",
            "184e412874313f14014d688ef3b69568302d00ff"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "inversion H4.",
            "VernacExtend",
            "184e412874313f14014d688ef3b69568302d00ff"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "instantiate (1:= p1); instantiate (1 := p2).",
            "VernacExtend",
            "b5cb9685e5f3e602e9130c75f6ced684e3ac7bca"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma PosToPathPrefixFree : forall (x y : positive), (x <> y) -> PrefixFree [posToPath x; posToPath y].",
            "VernacStartTheoremProof",
            "9ee3c575128e138e82771b2aa27c96ef963d035b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (Compare_dec.le_ge_dec (length (posToPathAux y)) (length (posToPathAux x))).",
            "VernacExtend",
            "69a1c151a31c72445f981609c2accde30a861d5f"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply (PosToPathPrefixFreeAux H l).",
            "VernacExtend",
            "30c1afdbb09a52429f2046412063c142fa48ba81"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply prefixFreeCommutative.",
            "VernacExtend",
            "684b1c4a49e65599f4f9cb595e97d6c983a790fb"
        ],
        [
            "apply (@PosToPathPrefixFreeAux y x).",
            "VernacExtend",
            "25a06ecdeb35c2c751f0f08419a583366ab4c22e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold not in *; intros; exfalso; auto.",
            "VernacExtend",
            "123a63755fac9fbd8d8e4706cdec425673ab704c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Function rangeNat (p : nat) : list nat := match p with | O => [] | S n' => p :: (rangeNat n') end.",
            "VernacExtend",
            "0d78d2377798f4ef5a8077e0dec1e5059abec2c6"
        ],
        [
            "Definition rangePos (p : positive) : list positive := map Pos.of_nat (rangeNat (Pos.to_nat p)).",
            "VernacDefinition",
            "6370cdf4b843b8ec7102e919a4153bb48b913db9"
        ],
        [
            "Lemma ltInRange : forall m n, le n m -> n <> O -> In n (rangeNat m).",
            "VernacStartTheoremProof",
            "6ebf406d76cf46be8764ab1741cd2aefe8df320d"
        ],
        [
            "induction m; intros.",
            "VernacExtend",
            "ad78c67d3a9216bd0cba3419d43201d461ab0fe9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "left; auto.",
            "VernacExtend",
            "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "right; subst.",
            "VernacExtend",
            "32d79e60023eec503e323179243fb88e62c117c5"
        ],
        [
            "apply IHm; auto.",
            "VernacExtend",
            "93ebdc0cb1bbba4bb86d6c586f3cf4018d5eca18"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma posLtInRange : forall max pos, Pos.le pos max -> In pos (rangePos max).",
            "VernacStartTheoremProof",
            "d222eba425ea4dcd6559057281c32f38f9369636"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply in_map_iff.",
            "VernacExtend",
            "b128e1e6f601182342113d742a28792f5aaec52c"
        ],
        [
            "exists (Pos.to_nat pos).",
            "VernacExtend",
            "aec4f81ba6c041f4180b13cdc59c8b9d7e139517"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply Pos2Nat.id.",
            "VernacExtend",
            "72ed8ca0a2516e4497ec7cf25683faccc74ff3e0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply ltInRange.",
            "VernacExtend",
            "36dabd48918355355dcce9282ce3e8e272d8e22a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply Pos2Nat.inj_le; auto.",
            "VernacExtend",
            "008437ec497cb438d9934e1e5d263df4754d7f9a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "pose proof (Pos2Nat.is_succ pos) as Contra; inversion_clear Contra; congruence.",
            "VernacExtend",
            "31d30276959073c655c7bdbe983ce581b798fc6c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rangeNatLt : forall n m, In m (rangeNat n) -> lt m (S n) /\\ m <> O.",
            "VernacStartTheoremProof",
            "1602e0b9a50ff5bea48d0f22945931d2cf36ea17"
        ],
        [
            "induction n; intros.",
            "VernacExtend",
            "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "unfold lt.",
            "VernacExtend",
            "2e821d407c03d5f5e572c51453fdc618d9dec364"
        ],
        [
            "apply le_n.",
            "VernacExtend",
            "cd4ea009ba050d55c0c5552f05ee5752a2fad9f9"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply IHn in H0; inversion H0; clear H0; split.",
            "VernacExtend",
            "682532975670f6191089d9a29ef7117b5e1f4158"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "unfold lt in *.",
            "VernacExtend",
            "495bf2f00eaf79d236d5f0b773a3acfc0bb6ee0d"
        ],
        [
            "apply le_S.",
            "VernacExtend",
            "dfa151dba71c734eeb3c5ffb45ae15b3c0a88486"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rangePosPrefixFree : forall p, PrefixFree (map posToPath (rangePos p)).",
            "VernacStartTheoremProof",
            "53dddd5c523a67e463247789576eccc88c3dae41"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold rangePos.",
            "VernacExtend",
            "e8a50252c0e1b7f58b11883d02c245f2a49ce6f4"
        ],
        [
            "induction (Pos.to_nat p) as [ | n IHn].",
            "VernacExtend",
            "1728898d8631a39ee30d3bdfe7fcf4640802c85c"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply FreeCons; auto.",
            "VernacExtend",
            "fab080741f0a3bbecb607ae53c005b413d454f94"
        ],
        [
            "intros p' InP' p1 p2 App.",
            "VernacExtend",
            "b6775711376129d6e7b9edeb6c931978e660b812"
        ],
        [
            "apply in_map_iff in InP'.",
            "VernacExtend",
            "52c740a4a6a9fef6d0e67e74056712832e155825"
        ],
        [
            "clear IHn.",
            "VernacExtend",
            "cae601efe03260c52301ec9ec0a1f190fd54fb3c"
        ],
        [
            "inversion InP' as [x xHyp]; clear InP'.",
            "VernacExtend",
            "8a64673f2205a141fd6fde383cec5c6e2f56a0e1"
        ],
        [
            "inversion xHyp as [Pos2Path InX]; clear xHyp.",
            "VernacExtend",
            "282ee8328505260e66a34c1f0d8c33c4a23f9a73"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "apply in_map_iff in InX.",
            "VernacExtend",
            "1bbd8bd34d5e0ca1bf7324c7693cd179da55c524"
        ],
        [
            "inversion InX as [y yHyp]; clear InX.",
            "VernacExtend",
            "b4f4a6170cb54a6f34aa1aae1874ecbec5bd70f5"
        ],
        [
            "inversion yHyp as [Pos2PathY InY]; clear yHyp.",
            "VernacExtend",
            "d8513eff9f157e7d3f93b03371160aad56456f69"
        ],
        [
            "apply rangeNatLt in InY.",
            "VernacExtend",
            "ccaeb7f562c322881ffda4dd54e7b97a69e20a8e"
        ],
        [
            "inversion InY as [LtYSn YNotO]; clear InY.",
            "VernacExtend",
            "1dafb1db9eabad81ba4885e6baf7c992ed4ace10"
        ],
        [
            "remember (match n with | O => 1 | S _ => Pos.succ (Pos.of_nat n) end) as m.",
            "VernacExtend",
            "e5f04f4d0938d7c806eb84ff1051b80b1c1ea3cc"
        ],
        [
            "assert (Neq : x <> m).",
            "VernacExtend",
            "71af4c58b0365ed207cab7db76bb966b7f962326"
        ],
        [
            "unfold not; intros; subst.",
            "VernacExtend",
            "4b8c31877306485112c88802f1934ed8887c181f"
        ],
        [
            "destruct y.",
            "VernacExtend",
            "fbeb4c3b73b2f0e6bfc89563d7f3b824ea0ea309"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct n.",
            "VernacExtend",
            "1582bf847770c098bee882393a48b146dcc37a8c"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "assert (Pos.to_nat (Pos.of_nat (S y)) = Pos.to_nat (Pos.succ (Pos.of_nat (S n)))) by (rewrite H; auto).",
            "VernacExtend",
            "b8bd92e27510ba3cbdeb45c4178454175e1876dd"
        ],
        [
            "rewrite Pos2Nat.inj_succ in H0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Nat2Pos.id in H0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Nat2Pos.id in H0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "subst; omega.",
            "VernacExtend",
            "4626fb1662161ffc3973fe8546af63ae7f56e4b5"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "pose proof (@PosToPathPrefixFree x m) as Hyp.",
            "VernacExtend",
            "8a7c388850e1c237b1195ceed64509f51c92b201"
        ],
        [
            "apply Hyp in Neq; clear Hyp.",
            "VernacExtend",
            "78af8307111664c06b81cc26ea361d3887408f3c"
        ],
        [
            "inversion Neq.",
            "VernacExtend",
            "f619bce08aa0f15835975b48874a29bb50ebaef1"
        ],
        [
            "eapply H2.",
            "VernacExtend",
            "3ca0999137ea3173dce632ad69d798e6843387bd"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "left; auto.",
            "VernacExtend",
            "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition posFunToPathFun (f : positive -> RandomSeed) (p : SplitPath) : RandomSeed := match pathToPos p with | Some a => f a | None => newRandomSeed end.",
            "VernacDefinition",
            "9bfcf65ad9b49583093a6560bb4b93e97b7f2bc9"
        ],
        [
            "Theorem coarbComplete' : forall (max : positive) (f : positive -> RandomSeed) , exists seed, forall p, p <= max -> varySeed (posToPath p) seed = f p.",
            "VernacStartTheoremProof",
            "0110b9163ae4d29bdeb15310adf2d28887b84fd9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (SplitPathCompleteness (map posToPath (rangePos max)) (posFunToPathFun f) (rangePosPrefixFree max)).",
            "VernacExtend",
            "b097c15a05a68f655b35d0cc76a4d8d2d3759ad6"
        ],
        [
            "inversion H; clear H.",
            "VernacExtend",
            "4307aab7d08f40aa3f33a7c04b2c5713617cbd6b"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof H0 (posToPath p).",
            "VernacExtend",
            "aad69d063d3db3c8cc9fb9ff11c8ec876ddeeecd"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold posFunToPathFun.",
            "VernacExtend",
            "c52ce9d8d73b4f6e07239328d866193acea5eb0d"
        ],
        [
            "rewrite posPathInj.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply in_map_iff.",
            "VernacExtend",
            "b128e1e6f601182342113d742a28792f5aaec52c"
        ],
        [
            "exists p.",
            "VernacExtend",
            "cb4eaff811cdb91cdb614614b7df264de4996b62"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply posLtInRange.",
            "VernacExtend",
            "5b29d3d5fd27791d6118860702ef21639e3a121f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition funToPosFun {A : Type} `{_ : CoArbitrary A} (f : A -> RandomSeed) (p : positive) : RandomSeed := match coarbReverse p with | Some a => f a | None => newRandomSeed end.",
            "VernacDefinition",
            "a0e20ae68ec5fa2ff07e85b326e8358f43aed742"
        ],
        [
            "Definition coarbLe {A : Type} `{_ : CoArbitrary A} (x y : A) : Prop := Pos.le (coarbitrary x) (coarbitrary y).",
            "VernacDefinition",
            "3a054fbdd2b8b1e2e3a09fc0c636ecdeb6f99bed"
        ],
        [
            "Lemma coarbLePreservesLe : forall {A : Type} `{_ : CoArbitrary A} (x y : A), coarbLe x y -> Pos.le (coarbitrary x) (coarbitrary y).",
            "VernacStartTheoremProof",
            "877d3d7b7a1dcae7cb4b6ef3fd1cb8b2b8c9ddd4"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem coarbComplete : forall {A : Type} `{_ : CoArbitrary A} (max : A) (f : A -> RandomSeed), exists seed, forall a, coarbLe a max -> varySeed (posToPath (coarbitrary a)) seed = f a.",
            "VernacStartTheoremProof",
            "5f10b92978654390154449bdd06127df2e34b3f4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (coarbComplete' (coarbitrary max) (funToPosFun f)) as Hyp.",
            "VernacExtend",
            "c642018042bc2362a6721f67167c8dab20b4e11f"
        ],
        [
            "inversion Hyp as [seed HSeed]; clear Hyp.",
            "VernacExtend",
            "a0fe5b30f3013dd64da7ef68e2714df3448443c4"
        ],
        [
            "exists seed.",
            "VernacExtend",
            "f6d80ef9c28ef5281a4ea9350a58aba893a2dba2"
        ],
        [
            "intros a HLe.",
            "VernacExtend",
            "1ca453adeb2b3bd8629a8fe19cbd60ed1092c0b8"
        ],
        [
            "pose proof (HSeed (coarbitrary a)) as HCo; clear HSeed.",
            "VernacExtend",
            "7923b1f08c8b26ab01f7f70db17f4fc586560c3d"
        ],
        [
            "apply coarbLePreservesLe in HLe.",
            "VernacExtend",
            "d349e90e065c2321cf9c93eb26e67190e83b001b"
        ],
        [
            "apply HCo in HLe; clear HCo.",
            "VernacExtend",
            "3d5535f5dba52a67587e368bd80addb5f2e86ce3"
        ],
        [
            "rewrite HLe; clear HLe.",
            "VernacExtend",
            "290bee8b4730bfd3804d32292ac4d05b328d8b79"
        ],
        [
            "unfold funToPosFun.",
            "VernacExtend",
            "484a20a05b34380876aa455e0b91b7f48a1a59b1"
        ],
        [
            "rewrite coarbCorrect.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance genFun {A B : Type} `{_ : CoArbitrary A} `{_ : Gen B} : Gen (A -> B) := {| arbitrary := reallyUnsafePromote (fun a => variant (posToPath (coarbitrary a)) arbitrary); |}.",
            "VernacInstance",
            "81a55fef4707f0bf36636f7424644e36aeea4129"
        ],
        [
            "Instance shrinkFunNil {A B : Type} : Shrink (A -> B) := {| shrink x := nil |}.",
            "VernacInstance",
            "4e94ab61438e22d2732d3f65dd999ed560236ff8"
        ],
        [
            "Section arbFun_completeness.",
            "VernacBeginSection",
            "096dfe82618bba989c6004a34e917d1213f67209"
        ],
        [
            "Variables A B : Type.",
            "VernacAssumption",
            "b4e42fd426c23cd1c77c79fc26c25f95338235a5"
        ],
        [
            "Hypothesis choice : FunctionalChoice_on A RandomSeed.",
            "VernacAssumption",
            "ccd5d52a4ea3d475c7b1535c47961891e4adee4d"
        ],
        [
            "Theorem arbFunComplete `{CoArbitrary A, Arbitrary B} (max:A) (f:A-> B) (s:nat) : s = Pos.to_nat (coarbitrary max) -> (semGenSize arbitrary s <--> setT) -> exists seed, forall a, coarbLe a max -> run arbitrary s seed a = f a.",
            "VernacStartTheoremProof",
            "ecf1cb8935c14b618489ebc708b20bfd58b91104"
        ],
        [
            "move=> eqsize semB.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have/choice [fseed fseedP]: forall a, exists seed : RandomSeed, run arbitrary s seed = f a.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move => a; case: (semB (f a))=> _ /(_ I) [seed ?]; exists seed.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (coarbComplete max fseed) => seed Hseed.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "pose proof (randomSplitAssumption seed seed) as Hyp.",
            "VernacExtend",
            "3fa43c5efdc0b775c86cf4ac4273cc296812af68"
        ],
        [
            "move : Hyp => [seed' Hsplit].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists seed' => a le_a; rewrite -fseedP -Hseed //=.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "apply (@promoteVariant A B a (fun a => posToPath (coarbitrary a)) arbitrary s seed' seed seed Hsplit).",
            "VernacExtend",
            "888c0846361883ff71d00aa7d52a3d940346aae7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End arbFun_completeness.",
            "VernacEndSegment",
            "73297820051a9a551f06470b14783229c1d7c4e2"
        ]
    ],
    "proofs": [
        {
            "name": "coArbPos",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "refine {| coarbitrary x := x; coarbReverse x := Some x |}.",
                        "VernacExtend",
                        "c03eddb1996aae9a4144b14773603b7d873bb96b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coqArbNat",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "refine {| coarbitrary x := Pos.of_nat (S x); coarbReverse p := Some (Coq.Init.Peano.pred (Pos.to_nat p)) |}.",
                        "VernacExtend",
                        "541216b3d2abcd1ab1084b28e27844fcac07c2e3"
                    ]
                },
                {
                    "command": [
                        "apply nat_lemma.",
                        "VernacExtend",
                        "a8bbadd5ac80755ff67b9e4088c29d95b52eedc7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "aux1",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "induction l using list_ind'; intros.",
                        "VernacExtend",
                        "249157d68b165913ad0d5b1077e040e9cea610ed"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl in *; inversion H; subst.",
                        "VernacExtend",
                        "bd0edd44b2964d0980b0816e6eb6d62ff1fc7f58"
                    ]
                },
                {
                    "command": [
                        "exists f; intros.",
                        "VernacExtend",
                        "a8e05059ccaf9183ecde196b2f591bf27d9a6d5d"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl in H; destruct a; inversion H.",
                        "VernacExtend",
                        "d6e13a8413ee0bf566f31c6e4da084366e1c2284"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "pose proof IHl p; clear IHl.",
                        "VernacExtend",
                        "18506cdd817a770d7e68c176239238f1a6541c91"
                    ]
                },
                {
                    "command": [
                        "destruct a; destruct b; simpl in *.",
                        "VernacExtend",
                        "ea68ff10b842d66ce82861f93afc22ad79f49bd3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "pose proof (H0 (fun p0 => xO (f p0))); clear H0.",
                        "VernacExtend",
                        "94959cc35067f5d80aa0b8b9ee7ac3b91a97a751"
                    ]
                },
                {
                    "command": [
                        "apply H1 in H; clear H1.",
                        "VernacExtend",
                        "0930f817ae31658329d1bf922b23c1e333127384"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "pose proof (H0 (fun p0 => xI (f p0))); clear H0.",
                        "VernacExtend",
                        "3bee489a4abcdbffba378ef36b0391688ba67597"
                    ]
                },
                {
                    "command": [
                        "apply H1 in H; clear H1.",
                        "VernacExtend",
                        "0930f817ae31658329d1bf922b23c1e333127384"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "posPathInj",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "induction p; unfold posToPath, pathToPos in *; simpl in *.",
                        "VernacExtend",
                        "ac026a991f0edc300d1a7574e0820fcb1dcd3720"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply aux1 in IHp.",
                        "VernacExtend",
                        "739f486e0ce95e46447c7a4e10a7de1d4e919d96"
                    ]
                },
                {
                    "command": [
                        "inversion IHp as [f' Hyp]; clear IHp.",
                        "VernacExtend",
                        "ddc55476929eb4db937998b9c88a5bfd5651ff98"
                    ]
                },
                {
                    "command": [
                        "rewrite <- app_assoc; simpl.",
                        "VernacExtend",
                        "f58c01d870a66db32eee97ed11219da3c1b04eda"
                    ]
                },
                {
                    "command": [
                        "pose proof Hyp [Left; Right; Right] as H; clear Hyp.",
                        "VernacExtend",
                        "db3a19431e86ee522b469c879fa702be195e454a"
                    ]
                },
                {
                    "command": [
                        "inversion H as [H0 H1]; clear H.",
                        "VernacExtend",
                        "56863f5cce4d81eeb3ae941360638c32a78fa4c2"
                    ]
                },
                {
                    "command": [
                        "rewrite H0; clear H0.",
                        "VernacExtend",
                        "890e95147a64aa3270c983cf9925f4788e8c1c89"
                    ]
                },
                {
                    "command": [
                        "simpl; subst; auto.",
                        "VernacExtend",
                        "7f48ea8dd238510d0dc92e5776d10aaf06126e10"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply aux1 in IHp.",
                        "VernacExtend",
                        "739f486e0ce95e46447c7a4e10a7de1d4e919d96"
                    ]
                },
                {
                    "command": [
                        "inversion IHp as [f' Hyp]; clear IHp.",
                        "VernacExtend",
                        "ddc55476929eb4db937998b9c88a5bfd5651ff98"
                    ]
                },
                {
                    "command": [
                        "rewrite <- app_assoc; simpl.",
                        "VernacExtend",
                        "f58c01d870a66db32eee97ed11219da3c1b04eda"
                    ]
                },
                {
                    "command": [
                        "pose proof Hyp [Left; Left; Right] as H; clear Hyp.",
                        "VernacExtend",
                        "d4146354b7a9e53a471ce4b44dc980372f8fa0e8"
                    ]
                },
                {
                    "command": [
                        "inversion H as [H0 H1]; clear H.",
                        "VernacExtend",
                        "56863f5cce4d81eeb3ae941360638c32a78fa4c2"
                    ]
                },
                {
                    "command": [
                        "rewrite H0; clear H0.",
                        "VernacExtend",
                        "890e95147a64aa3270c983cf9925f4788e8c1c89"
                    ]
                },
                {
                    "command": [
                        "simpl; subst; auto.",
                        "VernacExtend",
                        "7f48ea8dd238510d0dc92e5776d10aaf06126e10"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lengthSplit1",
            "line_nb": 72,
            "steps": [
                {
                    "command": [
                        "induction l as [ | x xs IHxs].",
                        "VernacExtend",
                        "30eb45a3a4c1bc185beea982258cb592b47f2884"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros; exists ([], l'); auto.",
                        "VernacExtend",
                        "45911a33b39e09db56b63910434482214b0db026"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros l' LE; destruct l' as [ | b bs] eqn:LEq.",
                        "VernacExtend",
                        "16abecf85426407127c878bd93edda93067d6b80"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inversion LE.",
                        "VernacExtend",
                        "cd4a205cc3d64ab235eb28ecd01835e062ad112c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "pose proof IHxs bs as IH; clear IHxs.",
                        "VernacExtend",
                        "d2b20c449e2f8bb99da0ec827d8ed9e18f019960"
                    ]
                },
                {
                    "command": [
                        "assert (LE' : le (length xs) (length bs)) by (simpl in *; omega).",
                        "VernacExtend",
                        "6d80a559d33f6a740acfc7ec09049235c51d7aeb"
                    ]
                },
                {
                    "command": [
                        "clear LE.",
                        "VernacExtend",
                        "c26651eef1f371dcc4cf5bd3406f1caa27c32495"
                    ]
                },
                {
                    "command": [
                        "apply IH in LE'; clear IH.",
                        "VernacExtend",
                        "4f75da941b077b4ebae4a2fc18255e681346a6ae"
                    ]
                },
                {
                    "command": [
                        "inversion LE' as [pair Split]; clear LE'.",
                        "VernacExtend",
                        "a171e501b028507e7fa67240929a90f6b4982e74"
                    ]
                },
                {
                    "command": [
                        "destruct pair as [l1 l2] eqn:Pair.",
                        "VernacExtend",
                        "49b59bd8bbc05ff629ac9664453476cae11d7ba9"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Split.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "exists (b :: l1, l2).",
                        "VernacExtend",
                        "5dad6d7777863f4d8c1d73f88b4cfad09e179e88"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lengthSplit2",
            "line_nb": 93,
            "steps": [
                {
                    "command": [
                        "induction l.",
                        "VernacExtend",
                        "1194af70832939708f8c7fde2f18f81c37b97a0c"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros l' l1 l2 Hyp; simpl in Hyp; inversion_clear Hyp; auto.",
                        "VernacExtend",
                        "bd34579c3cba1663d4c6a90d538a932b2233487f"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros l' l1 l2 Hyp.",
                        "VernacExtend",
                        "cf70b99ea0e8985ff708be0c2d7e0abb04585563"
                    ]
                },
                {
                    "command": [
                        "simpl in Hyp.",
                        "VernacExtend",
                        "b668b3da0bf9ed61164e3a2fc832fc359440e086"
                    ]
                },
                {
                    "command": [
                        "destruct l' as [ | y ys] eqn:L'.",
                        "VernacExtend",
                        "d43146243184da0c993ab7c4b5cbf7f168923158"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inversion Hyp.",
                        "VernacExtend",
                        "e8a79d7c9df846da8ea7555b1624013f7b3cbe26"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct l1 eqn:L1.",
                        "VernacExtend",
                        "8dfa2ba28fc84fa632472703d257b51e9be3a81f"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "destruct (lengthSplit l ys); simpl in *.",
                        "VernacExtend",
                        "2b6dddd77bffa1e28488a5c498cd9582eecd24b3"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct p; congruence.",
                        "VernacExtend",
                        "037f7fdfe541d4b4907a7cdb950c4af761e267e2"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "pose proof IHl ys l0 l2; clear IHl.",
                        "VernacExtend",
                        "9489cd777a72648fc40c2ebd1d11dd4dd38786d0"
                    ]
                },
                {
                    "command": [
                        "destruct (lengthSplit l ys) eqn:LenSplit; simpl in *.",
                        "VernacExtend",
                        "6d48e651a9776f431f4016af8d5468214d462a25"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inversion Hyp.",
                        "VernacExtend",
                        "e8a79d7c9df846da8ea7555b1624013f7b3cbe26"
                    ]
                },
                {
                    "command": [
                        "destruct p.",
                        "VernacExtend",
                        "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
                    ]
                },
                {
                    "command": [
                        "inversion H1.",
                        "VernacExtend",
                        "58dee2cce9b13b50b065ba894c1b533413715754"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "rewrite H; auto.",
                        "VernacExtend",
                        "9e2b92fba484264671c209dbe9b51f8bf106fcab"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inversion Hyp.",
                        "VernacExtend",
                        "e8a79d7c9df846da8ea7555b1624013f7b3cbe26"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lengthSplit3",
            "line_nb": 123,
            "steps": [
                {
                    "command": [
                        "induction l as [ | x xs IHxs].",
                        "VernacExtend",
                        "30eb45a3a4c1bc185beea982258cb592b47f2884"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros; simpl in H; inversion H; auto.",
                        "VernacExtend",
                        "1e4c081529a405e6507af2761fa3c341f83d63c5"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros l' l1 l2 Split.",
                        "VernacExtend",
                        "2982a662bf96ee6108aa154ab5e7c018f65405f0"
                    ]
                },
                {
                    "command": [
                        "simpl in Split.",
                        "VernacExtend",
                        "938b667a09520f4ef84aabd556768c907a51fc34"
                    ]
                },
                {
                    "command": [
                        "destruct l'.",
                        "VernacExtend",
                        "d3a2cf1f5af31737cd1e570fd3939d7f963563b3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inversion Split.",
                        "VernacExtend",
                        "20e5ee0086dac6824ab67cce0a997b84345ff5b4"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct l1.",
                        "VernacExtend",
                        "9d980bd7c4dba1bbd3fdfae643479b8d8129e3a6"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "destruct (lengthSplit xs l').",
                        "VernacExtend",
                        "1e5a81461bd6468845dd7c4abfd9f93bd381eedb"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "destruct p.",
                        "VernacExtend",
                        "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
                    ]
                },
                {
                    "command": [
                        "inversion Split.",
                        "VernacExtend",
                        "20e5ee0086dac6824ab67cce0a997b84345ff5b4"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "inversion Split.",
                        "VernacExtend",
                        "20e5ee0086dac6824ab67cce0a997b84345ff5b4"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "destruct (lengthSplit xs l') eqn:LenSplit.",
                        "VernacExtend",
                        "950a596d4114492c1ef1ded0ddc75ecc9af60296"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "destruct p.",
                        "VernacExtend",
                        "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
                    ]
                },
                {
                    "command": [
                        "inversion Split; subst; clear Split.",
                        "VernacExtend",
                        "6d95c7f36e1888a860fb174986c62a4f627b8e59"
                    ]
                },
                {
                    "command": [
                        "pose proof (IHxs l' l1 l2 LenSplit) as Hyp; clear IHxs.",
                        "VernacExtend",
                        "03cde635553beeccf2c17a0c04ed383d985fd3e8"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "inversion Split.",
                        "VernacExtend",
                        "20e5ee0086dac6824ab67cce0a997b84345ff5b4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lengthPathEven",
            "line_nb": 157,
            "steps": [
                {
                    "command": [
                        "induction p.",
                        "VernacExtend",
                        "57241b1bf2113f288b5c35cf50cb4c85d8323deb"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inversion IHp as [n Hyp]; clear IHp.",
                        "VernacExtend",
                        "98b0f4018154a6b27c84fab92a3534eb9bfa4274"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "exists (S n).",
                        "VernacExtend",
                        "cd2a24563bef1e96e5268d448b7159cbb0bda443"
                    ]
                },
                {
                    "command": [
                        "rewrite app_length.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite Hyp.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inversion IHp as [n Hyp]; clear IHp.",
                        "VernacExtend",
                        "98b0f4018154a6b27c84fab92a3534eb9bfa4274"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "exists (S n).",
                        "VernacExtend",
                        "cd2a24563bef1e96e5268d448b7159cbb0bda443"
                    ]
                },
                {
                    "command": [
                        "rewrite app_length.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite Hyp.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exists (O).",
                        "VernacExtend",
                        "857793ba1f2fca166b38dcce16bdb0403ad0f7dc"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "evenPathAux",
            "line_nb": 180,
            "steps": [
                {
                    "command": [
                        "induction l using list_ind'.",
                        "VernacExtend",
                        "2932869da6e79415a402b99f6aa42503008d5523"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exists f.",
                        "VernacExtend",
                        "c9e46b92fddb4f89ddd3a964bd2aee97fe7e2db7"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros l' l'' lApp f n p Len Valid.",
                        "VernacExtend",
                        "a0056adcf2472c99cba21f5cbfaeea3249ab76d0"
                    ]
                },
                {
                    "command": [
                        "destruct n.",
                        "VernacExtend",
                        "1582bf847770c098bee882393a48b146dcc37a8c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl in Len.",
                        "VernacExtend",
                        "8e63250c0fdf43acb12efb3b5009b7c7f10dc7b4"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl in Len; assert (length l = (2 * n)%nat) by omega.",
                        "VernacExtend",
                        "38f190b7c711a49be9285f817ac199558d909bbc"
                    ]
                },
                {
                    "command": [
                        "destruct a eqn:A; destruct b eqn:B; simpl in *.",
                        "VernacExtend",
                        "6c2091631aca1a42b1f508bae2a6d7b528d7465f"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "unfold pathToPos in Valid.",
                        "VernacExtend",
                        "fea48b1e419dac4648ba159620d843cc57c58e7e"
                    ]
                },
                {
                    "command": [
                        "simpl in Valid.",
                        "VernacExtend",
                        "0dcc324c7e7d304bc2527282e55eb5999d7a194c"
                    ]
                },
                {
                    "command": [
                        "pose proof (IHl l' l'' lApp (fun p => xO (f p)) n p H Valid) as Hyp; clear IHl H.",
                        "VernacExtend",
                        "3b8c9ce66906140d7a53494e65e35672ee220bdb"
                    ]
                },
                {
                    "command": [
                        "inversion Hyp as [f' HF]; clear Hyp.",
                        "VernacExtend",
                        "0f61589f52188c03e89f701e18936926aaf5cca0"
                    ]
                },
                {
                    "command": [
                        "exists f'.",
                        "VernacExtend",
                        "e95a080cbf17df4d26d1fb84ae05493ce615c642"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "unfold pathToPos in Valid.",
                        "VernacExtend",
                        "fea48b1e419dac4648ba159620d843cc57c58e7e"
                    ]
                },
                {
                    "command": [
                        "simpl in Valid.",
                        "VernacExtend",
                        "0dcc324c7e7d304bc2527282e55eb5999d7a194c"
                    ]
                },
                {
                    "command": [
                        "pose proof (IHl l' l'' lApp (fun p => xI (f p)) n p H Valid) as Hyp; clear IHl H.",
                        "VernacExtend",
                        "39d2384c7a25dfeaf630d3ed2bb95df4caf07937"
                    ]
                },
                {
                    "command": [
                        "inversion Hyp as [f' HF]; clear Hyp.",
                        "VernacExtend",
                        "0f61589f52188c03e89f701e18936926aaf5cca0"
                    ]
                },
                {
                    "command": [
                        "exists f'.",
                        "VernacExtend",
                        "e95a080cbf17df4d26d1fb84ae05493ce615c642"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "inversion Valid.",
                        "VernacExtend",
                        "8cb10c690f47140d5363702d2686e15a46cb3749"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "inversion Valid.",
                        "VernacExtend",
                        "8cb10c690f47140d5363702d2686e15a46cb3749"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pathBeginsLeft",
            "line_nb": 218,
            "steps": [
                {
                    "command": [
                        "destruct l1.",
                        "VernacExtend",
                        "9d980bd7c4dba1bbd3fdfae643479b8d8129e3a6"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exfalso; apply H; auto.",
                        "VernacExtend",
                        "973252ec4c1397cd8a55ed6c086e8b86a3af08a2"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct s.",
                        "VernacExtend",
                        "25b900e268e7851d959aa45edce33af62b3fca65"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl in H1.",
                        "VernacExtend",
                        "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
                    ]
                },
                {
                    "command": [
                        "destruct (l1 ++ l2) eqn:Contra.",
                        "VernacExtend",
                        "dab4e5a79b520e34627e4696d3618fb5a2f49dc7"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "destruct l1; destruct l2; try solve [unfold not; exfalso; auto]; simpl in *; congruence.",
                        "VernacExtend",
                        "4c798a48ebd23395aae0b0651b8c730905de01f4"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "listAppNeq",
            "line_nb": 236,
            "steps": [
                {
                    "command": [
                        "induction l1.",
                        "VernacExtend",
                        "dfeb7bb70eb7390d22f3eada025c33a176cd1338"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct l2.",
                        "VernacExtend",
                        "0d8334f1e323ab8f2f037af4de7aa29b31aa5fb2"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold not in H0.",
                        "VernacExtend",
                        "eff5756abeaf36fdc554936501a439c8f4159123"
                    ]
                },
                {
                    "command": [
                        "exfalso; apply H0; auto.",
                        "VernacExtend",
                        "3eb9e762bc8451ba3272acfd103dd9f49d80c6af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl in H; inversion H.",
                        "VernacExtend",
                        "7c1997cdfbf3d103c73b8423bc0be65df461739c"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros l2 l3 l4 EqDec Len Neq.",
                        "VernacExtend",
                        "3bdb35a2633965cb1d2957f97a072c24efef0a25"
                    ]
                },
                {
                    "command": [
                        "destruct l2 as [ | b l2 ].",
                        "VernacExtend",
                        "aeb8a15e77d0353414c9f7dd9844ee9dc1b4515e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl in Len.",
                        "VernacExtend",
                        "8e63250c0fdf43acb12efb3b5009b7c7f10dc7b4"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (EqDec a b).",
                        "VernacExtend",
                        "f9c76ffe9ba323202eba242dbd5cc249a81571d8"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "simpl in Len.",
                        "VernacExtend",
                        "8e63250c0fdf43acb12efb3b5009b7c7f10dc7b4"
                    ]
                },
                {
                    "command": [
                        "inversion Len as [ Len']; clear Len.",
                        "VernacExtend",
                        "870b844f1db7ca025a9ed818035e32058de9dada"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "pose proof (IHl1 l2 l3 l4 EqDec Len') as Contra; clear IHl1.",
                        "VernacExtend",
                        "f184ad48721feee31a0ed7739d5225882e00b0f4"
                    ]
                },
                {
                    "command": [
                        "assert (l1 <> l2) by (unfold not; intros; congruence).",
                        "VernacExtend",
                        "e85ee9bc38bfd27e3e28f3c13945a6577f9eec4d"
                    ]
                },
                {
                    "command": [
                        "apply Contra in H.",
                        "VernacExtend",
                        "aafba415e3f95a276e0be2980e1eec7e61033c59"
                    ]
                },
                {
                    "command": [
                        "unfold not in *.",
                        "VernacExtend",
                        "e992d731987459002424cdefea553f6182b3a61b"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "inversion H0.",
                        "VernacExtend",
                        "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "unfold not; intros.",
                        "VernacExtend",
                        "a373869c1c99731a8797825160ba5f5ab7a057a9"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PosToPathPrefixFree",
            "line_nb": 361,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (Compare_dec.le_ge_dec (length (posToPathAux y)) (length (posToPathAux x))).",
                        "VernacExtend",
                        "69a1c151a31c72445f981609c2accde30a861d5f"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply (PosToPathPrefixFreeAux H l).",
                        "VernacExtend",
                        "30c1afdbb09a52429f2046412063c142fa48ba81"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply prefixFreeCommutative.",
                        "VernacExtend",
                        "684b1c4a49e65599f4f9cb595e97d6c983a790fb"
                    ]
                },
                {
                    "command": [
                        "apply (@PosToPathPrefixFreeAux y x).",
                        "VernacExtend",
                        "25a06ecdeb35c2c751f0f08419a583366ab4c22e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold not in *; intros; exfalso; auto.",
                        "VernacExtend",
                        "123a63755fac9fbd8d8e4706cdec425673ab704c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltInRange",
            "line_nb": 376,
            "steps": [
                {
                    "command": [
                        "induction m; intros.",
                        "VernacExtend",
                        "ad78c67d3a9216bd0cba3419d43201d461ab0fe9"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "left; auto.",
                        "VernacExtend",
                        "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "right; subst.",
                        "VernacExtend",
                        "32d79e60023eec503e323179243fb88e62c117c5"
                    ]
                },
                {
                    "command": [
                        "apply IHm; auto.",
                        "VernacExtend",
                        "93ebdc0cb1bbba4bb86d6c586f3cf4018d5eca18"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "posLtInRange",
            "line_nb": 391,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply in_map_iff.",
                        "VernacExtend",
                        "b128e1e6f601182342113d742a28792f5aaec52c"
                    ]
                },
                {
                    "command": [
                        "exists (Pos.to_nat pos).",
                        "VernacExtend",
                        "aec4f81ba6c041f4180b13cdc59c8b9d7e139517"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply Pos2Nat.id.",
                        "VernacExtend",
                        "72ed8ca0a2516e4497ec7cf25683faccc74ff3e0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply ltInRange.",
                        "VernacExtend",
                        "36dabd48918355355dcce9282ce3e8e272d8e22a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply Pos2Nat.inj_le; auto.",
                        "VernacExtend",
                        "008437ec497cb438d9934e1e5d263df4754d7f9a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "pose proof (Pos2Nat.is_succ pos) as Contra; inversion_clear Contra; congruence.",
                        "VernacExtend",
                        "31d30276959073c655c7bdbe983ce581b798fc6c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rangeNatLt",
            "line_nb": 405,
            "steps": [
                {
                    "command": [
                        "induction n; intros.",
                        "VernacExtend",
                        "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "unfold lt.",
                        "VernacExtend",
                        "2e821d407c03d5f5e572c51453fdc618d9dec364"
                    ]
                },
                {
                    "command": [
                        "apply le_n.",
                        "VernacExtend",
                        "cd4ea009ba050d55c0c5552f05ee5752a2fad9f9"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply IHn in H0; inversion H0; clear H0; split.",
                        "VernacExtend",
                        "682532975670f6191089d9a29ef7117b5e1f4158"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "unfold lt in *.",
                        "VernacExtend",
                        "495bf2f00eaf79d236d5f0b773a3acfc0bb6ee0d"
                    ]
                },
                {
                    "command": [
                        "apply le_S.",
                        "VernacExtend",
                        "dfa151dba71c734eeb3c5ffb45ae15b3c0a88486"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coarbComplete'",
            "line_nb": 480,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (SplitPathCompleteness (map posToPath (rangePos max)) (posFunToPathFun f) (rangePosPrefixFree max)).",
                        "VernacExtend",
                        "b097c15a05a68f655b35d0cc76a4d8d2d3759ad6"
                    ]
                },
                {
                    "command": [
                        "inversion H; clear H.",
                        "VernacExtend",
                        "4307aab7d08f40aa3f33a7c04b2c5713617cbd6b"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof H0 (posToPath p).",
                        "VernacExtend",
                        "aad69d063d3db3c8cc9fb9ff11c8ec876ddeeecd"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "unfold posFunToPathFun.",
                        "VernacExtend",
                        "c52ce9d8d73b4f6e07239328d866193acea5eb0d"
                    ]
                },
                {
                    "command": [
                        "rewrite posPathInj.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply in_map_iff.",
                        "VernacExtend",
                        "b128e1e6f601182342113d742a28792f5aaec52c"
                    ]
                },
                {
                    "command": [
                        "exists p.",
                        "VernacExtend",
                        "cb4eaff811cdb91cdb614614b7df264de4996b62"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "apply posLtInRange.",
                        "VernacExtend",
                        "5b29d3d5fd27791d6118860702ef21639e3a121f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coarbLePreservesLe",
            "line_nb": 501,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coarbComplete",
            "line_nb": 504,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (coarbComplete' (coarbitrary max) (funToPosFun f)) as Hyp.",
                        "VernacExtend",
                        "c642018042bc2362a6721f67167c8dab20b4e11f"
                    ]
                },
                {
                    "command": [
                        "inversion Hyp as [seed HSeed]; clear Hyp.",
                        "VernacExtend",
                        "a0fe5b30f3013dd64da7ef68e2714df3448443c4"
                    ]
                },
                {
                    "command": [
                        "exists seed.",
                        "VernacExtend",
                        "f6d80ef9c28ef5281a4ea9350a58aba893a2dba2"
                    ]
                },
                {
                    "command": [
                        "intros a HLe.",
                        "VernacExtend",
                        "1ca453adeb2b3bd8629a8fe19cbd60ed1092c0b8"
                    ]
                },
                {
                    "command": [
                        "pose proof (HSeed (coarbitrary a)) as HCo; clear HSeed.",
                        "VernacExtend",
                        "7923b1f08c8b26ab01f7f70db17f4fc586560c3d"
                    ]
                },
                {
                    "command": [
                        "apply coarbLePreservesLe in HLe.",
                        "VernacExtend",
                        "d349e90e065c2321cf9c93eb26e67190e83b001b"
                    ]
                },
                {
                    "command": [
                        "apply HCo in HLe; clear HCo.",
                        "VernacExtend",
                        "3d5535f5dba52a67587e368bd80addb5f2e86ce3"
                    ]
                },
                {
                    "command": [
                        "rewrite HLe; clear HLe.",
                        "VernacExtend",
                        "290bee8b4730bfd3804d32292ac4d05b328d8b79"
                    ]
                },
                {
                    "command": [
                        "unfold funToPosFun.",
                        "VernacExtend",
                        "484a20a05b34380876aa455e0b91b7f48a1a59b1"
                    ]
                },
                {
                    "command": [
                        "rewrite coarbCorrect.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "arbFunComplete",
            "line_nb": 523,
            "steps": [
                {
                    "command": [
                        "move=> eqsize semB.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have/choice [fseed fseedP]: forall a, exists seed : RandomSeed, run arbitrary s seed = f a.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by move => a; case: (semB (f a))=> _ /(_ I) [seed ?]; exists seed.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: (coarbComplete max fseed) => seed Hseed.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "pose proof (randomSplitAssumption seed seed) as Hyp.",
                        "VernacExtend",
                        "3fa43c5efdc0b775c86cf4ac4273cc296812af68"
                    ]
                },
                {
                    "command": [
                        "move : Hyp => [seed' Hsplit].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists seed' => a le_a; rewrite -fseedP -Hseed //=.",
                        "VernacExtend",
                        "82d53976234637e3f0907eb36cddf61d028c6306"
                    ]
                },
                {
                    "command": [
                        "apply (@promoteVariant A B a (fun a => posToPath (coarbitrary a)) arbitrary s seed' seed seed Hsplit).",
                        "VernacExtend",
                        "888c0846361883ff71d00aa7d52a3d940346aae7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}