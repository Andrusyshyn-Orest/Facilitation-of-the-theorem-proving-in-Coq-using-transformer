{
    "filename": "theories/ElemFct.v",
    "coq_project": "coquelicot",
    "vernac_cmds": [
        [
            "Require Import Reals Omega mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "cc8afe32fbf3a291d65564dbcb032ec00b33e16f"
        ],
        [
            "Require Import Rbar Rcomplements Continuity Derive Hierarchy RInt PSeries.",
            "VernacRequire",
            "b6bec22387a16a6c755b92a305cc1459b26d290b"
        ],
        [
            "Require Import Lim_seq RInt_analysis.",
            "VernacRequire",
            "a688d806b8f6e15e7a9d267ceca161a656069a4e"
        ],
        [
            "Lemma continuous_abs {K : AbsRing} (x : K) : continuous abs x.",
            "VernacStartTheoremProof",
            "6b8196a9acd649128bd587956fea778e4d04d286"
        ],
        [
            "apply filterlim_locally => /= eps.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "exists eps => /= y Hy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "eapply Rle_lt_trans, Hy.",
            "VernacExtend",
            "5d7b9881fa7bedfd08a0475ca10bafb618d939dd"
        ],
        [
            "wlog: x y Hy / (abs x <= abs y) => [Hw | Hxy].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (Rle_lt_dec (abs x) (abs y)) => Hxy.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Hw.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite abs_minus (abs_minus y).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Hw, Rlt_le, Hxy.",
            "VernacExtend",
            "9f34df4d27d6caf3f01560acf72dee6b9b5dce01"
        ],
        [
            "by apply ball_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite {1}/abs /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Rabs_pos_eq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_minus_l.",
            "VernacExtend",
            "fd70e10454fdcda9a9ecb4708f46b7de8d290b92"
        ],
        [
            "eapply Rle_trans, abs_triangle.",
            "VernacExtend",
            "16b0126491e6b30b476ad99dec223b9504c517c3"
        ],
        [
            "apply Req_le, f_equal.",
            "VernacExtend",
            "611305432bb56a049c3263355c95dcb6f09bd9a0"
        ],
        [
            "by rewrite /minus -plus_assoc plus_opp_l plus_zero_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply -> Rminus_le_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterlim_abs_0 {K : AbsRing} : (forall x : K, abs x = 0 -> x = zero) -> filterlim (abs (K := K)) (locally' (zero (G := K))) (at_right 0).",
            "VernacStartTheoremProof",
            "291a1453529d420fc00e07ecc5f06e15bc281672"
        ],
        [
            "intros H P [eps HP].",
            "VernacExtend",
            "fdfde8e1823c9d80e442a164f6643b321fe10f8e"
        ],
        [
            "exists eps.",
            "VernacExtend",
            "c7af48b9f65cab7cfe7f63abbdd2c6bef269dc77"
        ],
        [
            "intros x Hx Hx'.",
            "VernacExtend",
            "60fd9fdc1e7a721ff9e305c6c5cd264fc3816346"
        ],
        [
            "apply HP.",
            "VernacExtend",
            "ca37aebd7e8ae00878bfd4cba5592ae8e97d86d9"
        ],
        [
            "revert Hx.",
            "VernacExtend",
            "6f33b03350f7d5550754ef79fc319be630ae9ecd"
        ],
        [
            "rewrite /ball /= /AbsRing_ball !minus_zero_r {2}/abs /= Rabs_pos_eq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply abs_ge_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "assert (abs x <> 0).",
            "VernacExtend",
            "79b6817809c8ed86fd1a7d00975743edc4104a2c"
        ],
        [
            "contradict Hx' ; by apply H.",
            "VernacExtend",
            "e4936b958559d8694eeaf28b60e059d469bf595d"
        ],
        [
            "case: (abs_ge_0 x) => // H1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite -H1 in H0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma continuous_Rabs (x : R) : continuous Rabs x.",
            "VernacStartTheoremProof",
            "7e7f7c7ff09c238b8256aa34e58a952e9a9a0501"
        ],
        [
            "by apply @continuous_abs.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterlim_Rabs (x : Rbar) : filterlim Rabs (Rbar_locally' x) (Rbar_locally (Rbar_abs x)).",
            "VernacStartTheoremProof",
            "be4e714448b0f40ff28dea68c61b19236870f3e9"
        ],
        [
            "destruct x as [x| | ] => //=.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "eapply filterlim_filter_le_1, continuous_Rabs.",
            "VernacExtend",
            "58de9d696cee41ec529897ecd30302c1073cc21f"
        ],
        [
            "intros P [d HP] ; exists d => y Hy _.",
            "VernacExtend",
            "c25479c99645ac3eb0c672546a2af5c0bf42cfae"
        ],
        [
            "by apply HP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "eapply filterlim_ext_loc.",
            "VernacExtend",
            "735b49873e3aa689c51125555ec9be4b621211d4"
        ],
        [
            "exists 0 => y Hy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite Rabs_pos_eq // ; by apply Rlt_le.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "apply is_lim_id.",
            "VernacExtend",
            "b5c2901657d02300527a48634f110a43e141619e"
        ],
        [
            "eapply filterlim_ext_loc.",
            "VernacExtend",
            "735b49873e3aa689c51125555ec9be4b621211d4"
        ],
        [
            "exists 0 => y Hy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -Rabs_Ropp Rabs_pos_eq // -Ropp_0 ; by apply Ropp_le_contravar, Rlt_le.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "apply (is_lim_opp id m_infty m_infty), is_lim_id.",
            "VernacExtend",
            "da472801c48f9e04391a525c271e484bd4aa45a4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_Rabs (f : R -> R) (x l : Rbar) : is_lim f x l -> is_lim (fun x => Rabs (f x)) x (Rbar_abs l).",
            "VernacStartTheoremProof",
            "9c46b8eb4fa3166601e1036092b678acf72648c2"
        ],
        [
            "destruct l as [l| | ] ; simpl ; intros ; first last.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "eapply is_lim_comp.",
            "VernacExtend",
            "d7491b43c7b8ca150cbfbe7748c22920794471a0"
        ],
        [
            "2: by apply H.",
            "VernacExtend",
            "42cf05b0c5cd7515ffd5d7bb186f381ddeb0d8c5"
        ],
        [
            "by apply filterlim_Rabs.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "destruct x ; by exists (mkposreal _ Rlt_0_1).",
            "VernacExtend",
            "5598676067fa58df6ef13d4f07833868efbdf02c"
        ],
        [
            "eapply is_lim_comp.",
            "VernacExtend",
            "d7491b43c7b8ca150cbfbe7748c22920794471a0"
        ],
        [
            "2: by apply H.",
            "VernacExtend",
            "42cf05b0c5cd7515ffd5d7bb186f381ddeb0d8c5"
        ],
        [
            "by apply filterlim_Rabs.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "destruct x ; by exists (mkposreal _ Rlt_0_1).",
            "VernacExtend",
            "5598676067fa58df6ef13d4f07833868efbdf02c"
        ],
        [
            "apply is_lim_comp_continuous => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply continuous_Rabs.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterlim_Rabs_0 : filterlim Rabs (Rbar_locally' 0) (at_right 0).",
            "VernacStartTheoremProof",
            "ce6d70adc82dc0063053ff4ca44f9faedce48a0b"
        ],
        [
            "apply @filterlim_abs_0.",
            "VernacExtend",
            "a7d6027670ee10b233808d043e90c35f253ec0e3"
        ],
        [
            "by apply Rabs_eq_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_Rabs_0 (f : R -> R) (x : Rbar) : is_lim f x 0 -> Rbar_locally' x (fun x => f x <> 0) -> filterlim (fun x => Rabs (f x)) (Rbar_locally' x) (at_right 0).",
            "VernacStartTheoremProof",
            "7f4447b021bc2de734bd80411d51f5e4773d2151"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply filterlim_comp, filterlim_Rabs_0.",
            "VernacExtend",
            "4d2e048dd77d8e29a6086121d2760efb6e4c1427"
        ],
        [
            "intros P HP.",
            "VernacExtend",
            "55e2f4eebfad5cc358bd93712ab9be7674f934e9"
        ],
        [
            "apply H in HP.",
            "VernacExtend",
            "898d7d8dd8d9e005abf96a0ccb67ac75da03e3bd"
        ],
        [
            "generalize (filter_and _ _ H0 HP).",
            "VernacExtend",
            "390501b696d567c5fd734441f956505a612688a9"
        ],
        [
            "rewrite /filtermap /= ; apply filter_imp.",
            "VernacExtend",
            "641b7e6411115fd8acfd5b817fc545f0788a3aa8"
        ],
        [
            "intros y Hy.",
            "VernacExtend",
            "d610d987f827782ed7ad408419c9743f4107dcdc"
        ],
        [
            "apply Hy, Hy.",
            "VernacExtend",
            "92a8e1e8d8ccb73b2101e5dc28d57b086f0f06bf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterdiff_Rabs (x : R) : x <> 0 -> filterdiff Rabs (locally x) (fun y : R => scal y (sign x)).",
            "VernacStartTheoremProof",
            "871ed1b3fa8e720b55c301370d320c1a229aa244"
        ],
        [
            "rewrite -/(is_derive Rabs x (sign x)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move => Hx0.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Rle_lt_dec 0 x) => Hx.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Hx => //= Hx.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite sign_eq_1 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "eapply is_derive_ext_loc.",
            "VernacExtend",
            "eb33b0d5651548cda74587d0bce961c97cd5ab81"
        ],
        [
            "apply locally_interval with 0 p_infty.",
            "VernacExtend",
            "25474dee231da77c793fb2f5ed4a914b44d51810"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => /= y Hy _.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite Rabs_pos_eq //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Rlt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply @is_derive_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply sym_eq in Hx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite sign_eq_m1 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "eapply is_derive_ext_loc.",
            "VernacExtend",
            "eb33b0d5651548cda74587d0bce961c97cd5ab81"
        ],
        [
            "apply locally_interval with m_infty 0.",
            "VernacExtend",
            "61fb28d96dfae28d88cac49dbffb7dc1f11df944"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => /= y _ Hy.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite -Rabs_Ropp Rabs_pos_eq //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -Ropp_0 ; by apply Rlt_le, Ropp_lt_contravar.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "apply @is_derive_opp.",
            "VernacExtend",
            "7f6fe4254cace43ca129f7e5c1895e95f21b8211"
        ],
        [
            "by apply @is_derive_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_derive_Rabs (f : R -> R) (x df : R) : is_derive f x df -> f x <> 0 -> is_derive (fun x => Rabs (f x)) x (sign (f x) * df).",
            "VernacStartTheoremProof",
            "67daee4b61003cc0c46185a2f85ceb4c618cc29a"
        ],
        [
            "intros Hf Hfx.",
            "VernacExtend",
            "a823a6a955a0dc70a9d4ab5c3b5d3057fddcb4b6"
        ],
        [
            "evar_last.",
            "VernacExtend",
            "66189d18eff3abe5c0f87ca72027637c063094b4"
        ],
        [
            "apply is_derive_comp, Hf.",
            "VernacExtend",
            "d4a260291349ddce186b0478593c3946d516f3bc"
        ],
        [
            "by apply filterdiff_Rabs.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rmult_comm.",
            "VernacExtend",
            "f6a795952024dfb6a8db9b1b3050b14eb7f075aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterlim_Rinv_0_right : filterlim Rinv (at_right 0) (Rbar_locally p_infty).",
            "VernacStartTheoremProof",
            "81a4e4e2f7c9a2836482809025fb286429663fc6"
        ],
        [
            "intros P [M HM].",
            "VernacExtend",
            "912eee4bdf845576ead0eae8eb9e686e21e27a18"
        ],
        [
            "have Hd : 0 < / Rmax 1 M.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply Rinv_0_lt_compat.",
            "VernacExtend",
            "d7abdc8c3031a09ca2712c9563d7ecf89b4d477e"
        ],
        [
            "apply Rlt_le_trans with (2 := Rmax_l _ _).",
            "VernacExtend",
            "759c028334c4cc47650b0646143187ec025626e9"
        ],
        [
            "by apply Rlt_0_1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (mkposreal _ Hd) => x /= Hx Hx0.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply HM.",
            "VernacExtend",
            "da44e10176bfb6a0c07c29369b62e8b925d50bc1"
        ],
        [
            "apply Rle_lt_trans with (1 := Rmax_r 1 M).",
            "VernacExtend",
            "e535d65679f5c8012ebb08ae79e80d8a3a6728c3"
        ],
        [
            "replace (Rmax 1 M) with (/ / Rmax 1 M) by (field ; apply Rgt_not_eq, Rlt_le_trans with (2 := Rmax_l _ _), Rlt_0_1).",
            "VernacExtend",
            "86288cf2ce115bd483ba015cadd16e4c4857da46"
        ],
        [
            "apply Rinv_lt_contravar.",
            "VernacExtend",
            "39f1015e834f9c2b39a61c50e6b9c8cf8a29f32a"
        ],
        [
            "apply Rdiv_lt_0_compat with (1 := Hx0).",
            "VernacExtend",
            "7b14bcbeab0105153d125443ef02922105c6b925"
        ],
        [
            "apply Rlt_le_trans with (2 := Rmax_l _ _), Rlt_0_1.",
            "VernacExtend",
            "96e5b9abbf868be5a98e5f35362316c08c59845b"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /= /abs /minus /plus /opp /= in Hx.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -/(Rminus _ _) Rminus_0_r Rabs_pos_eq // in Hx.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact: Rlt_le.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_Rinv_0_right (f : R -> R) (x : Rbar) : is_lim f x 0 -> Rbar_locally' x (fun x => 0 < f x) -> is_lim (fun x => / (f x)) x p_infty.",
            "VernacStartTheoremProof",
            "a4ce13370287233951425c95c0f6efcd36cf5c1d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply filterlim_comp, filterlim_Rinv_0_right.",
            "VernacExtend",
            "dda7f53a3cd79ff8fccfe7de8c8a581c59f84dcb"
        ],
        [
            "intros P HP.",
            "VernacExtend",
            "55e2f4eebfad5cc358bd93712ab9be7674f934e9"
        ],
        [
            "apply H in HP.",
            "VernacExtend",
            "898d7d8dd8d9e005abf96a0ccb67ac75da03e3bd"
        ],
        [
            "generalize (filter_and _ _ H0 HP).",
            "VernacExtend",
            "390501b696d567c5fd734441f956505a612688a9"
        ],
        [
            "rewrite /filtermap ; apply filter_imp => y Hy.",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "by apply Hy, Hy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterlim_Rinv_0_left : filterlim Rinv (at_left 0) (Rbar_locally m_infty).",
            "VernacStartTheoremProof",
            "623fe68a2abcf4ecaae1aec618c80b4de914bc9c"
        ],
        [
            "eapply filterlim_ext_loc.",
            "VernacExtend",
            "735b49873e3aa689c51125555ec9be4b621211d4"
        ],
        [
            "exists (mkposreal _ Rlt_0_1) => /= y _ Hy0.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -{2}(Ropp_involutive y).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -Ropp_inv_permute.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "contradict Hy0.",
            "VernacExtend",
            "1ea617de2eaf253742b7afb2bf052ea3ea98f4d6"
        ],
        [
            "apply Rle_not_lt, Req_le.",
            "VernacExtend",
            "746d3cae4c233a6a8268c0404925bd6d23d75a84"
        ],
        [
            "by rewrite -(Ropp_involutive y) Hy0 Ropp_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "eapply filterlim_comp.",
            "VernacExtend",
            "887c72ce037fc4dc1c63092170c000188c601e2f"
        ],
        [
            "eapply filterlim_comp.",
            "VernacExtend",
            "887c72ce037fc4dc1c63092170c000188c601e2f"
        ],
        [
            "by apply filterlim_Ropp_left.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Ropp_0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply filterlim_Rinv_0_right.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply filterlim_Rbar_opp.",
            "VernacExtend",
            "4813069cfd33626caced6e914153ee6c7c2abc1e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_Rinv_0_left (f : R -> R) (x : Rbar) : is_lim f x 0 -> Rbar_locally' x (fun x => f x < 0) -> is_lim (fun x => / (f x)) x m_infty.",
            "VernacStartTheoremProof",
            "dddf368a015faefec55aa4d35be60f7570051fc9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply filterlim_comp, filterlim_Rinv_0_left.",
            "VernacExtend",
            "3679568530f9294cf98b56c2d83c5979b719be06"
        ],
        [
            "intros P HP.",
            "VernacExtend",
            "55e2f4eebfad5cc358bd93712ab9be7674f934e9"
        ],
        [
            "apply H in HP.",
            "VernacExtend",
            "898d7d8dd8d9e005abf96a0ccb67ac75da03e3bd"
        ],
        [
            "generalize (filter_and _ _ H0 HP).",
            "VernacExtend",
            "390501b696d567c5fd734441f956505a612688a9"
        ],
        [
            "rewrite /filtermap ; apply filter_imp => y Hy.",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "by apply Hy, Hy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterlim_sqrt_p : filterlim sqrt (Rbar_locally' p_infty) (Rbar_locally p_infty).",
            "VernacStartTheoremProof",
            "15ea70cfb6c9de9b2a89c2a911eea547992ca45b"
        ],
        [
            "apply is_lim_spec.",
            "VernacExtend",
            "6a433fd37843c6d7f4bc73e6cfa945c5042b65eb"
        ],
        [
            "move => M.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists ((Rmax 0 M)\u00b2) => x Hx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rle_lt_trans with (1 := Rmax_r 0 M).",
            "VernacExtend",
            "f81e987896aa096393be688678a254d560083333"
        ],
        [
            "rewrite -(sqrt_Rsqr (Rmax 0 M)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply sqrt_lt_1_alt.",
            "VernacExtend",
            "45b4cd2388d55c8102fb6e671b5e2b84734b7c99"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rle_0_sqr.",
            "VernacExtend",
            "dab150eb3bf9ea450741d52bf434375cb024aaf1"
        ],
        [
            "by apply Hx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rmax_l.",
            "VernacExtend",
            "e8bdf305d751b877364ec9794b15c2d6e134dc98"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_sqrt_p (f : R -> R) (x : Rbar) : is_lim f x p_infty -> is_lim (fun x => sqrt (f x)) x p_infty.",
            "VernacStartTheoremProof",
            "a39c6ee2a70c6e1960f8514c8fa0741856edae42"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply filterlim_comp, filterlim_sqrt_p.",
            "VernacExtend",
            "486a39bb27a042e3d352b75090f3a7ca38f8c00e"
        ],
        [
            "by apply H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterdiff_sqrt (x : R) : 0 < x -> filterdiff sqrt (locally x) (fun y => scal y (/ (2 * sqrt x))).",
            "VernacStartTheoremProof",
            "2e9ec009d7911a5ca5c23733edb6d811d64abe40"
        ],
        [
            "intros Hx.",
            "VernacExtend",
            "9276b72df3a882c9b4b954c90d9e870c80a906fc"
        ],
        [
            "apply is_derive_Reals.",
            "VernacExtend",
            "50ffedc276e75c32dd6244cd073b4227506b2788"
        ],
        [
            "by apply derivable_pt_lim_sqrt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_derive_sqrt (f : R -> R) (x df : R) : is_derive f x df -> 0 < f x -> is_derive (fun x => sqrt (f x)) x (df / (2 * sqrt (f x))).",
            "VernacStartTheoremProof",
            "67a1c058b2a8be64d12e6c1bf7a4d3824c758f27"
        ],
        [
            "intros Hf Hfx.",
            "VernacExtend",
            "a823a6a955a0dc70a9d4ab5c3b5d3057fddcb4b6"
        ],
        [
            "evar_last.",
            "VernacExtend",
            "66189d18eff3abe5c0f87ca72027637c063094b4"
        ],
        [
            "eapply is_derive_comp.",
            "VernacExtend",
            "520ba150e9d5cf5179c228d7bd2893e77831c99c"
        ],
        [
            "by apply filterdiff_sqrt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section nat_to_ring.",
            "VernacBeginSection",
            "d5ef54059e41ca6cdd6041efc89f23a4c2be10c0"
        ],
        [
            "Context {K : Ring}.",
            "VernacContext",
            "7afd0a675e561274a7afb32a4b5a69abdb1e8822"
        ],
        [
            "Definition nat_to_ring (n : nat) : K := sum_n_m (fun _ => one) 1 n.",
            "VernacDefinition",
            "1f3f3fdf0a3953ff691879b8ac8b1deac00f5c46"
        ],
        [
            "Lemma nat_to_ring_O : nat_to_ring O = zero.",
            "VernacStartTheoremProof",
            "5ceba096900e173d6ac323db0eb6c6454b63c848"
        ],
        [
            "rewrite /nat_to_ring sum_n_m_zero //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nat_to_ring_Sn (n : nat) : nat_to_ring (S n) = plus (nat_to_ring n) one.",
            "VernacStartTheoremProof",
            "9d05634a5ff1c7b27c2a6c03f0435f838c55556c"
        ],
        [
            "case: n => [ | n] ; rewrite /nat_to_ring.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "rewrite sum_n_n sum_n_m_zero //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite plus_zero_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite sum_n_Sm //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply le_n_S, le_O_n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End nat_to_ring.",
            "VernacEndSegment",
            "2dc0762c4021a58250aac5413ef12e5b25836321"
        ],
        [
            "Section is_derive_mult.",
            "VernacBeginSection",
            "299b9ab85d5d4f9488645d05cb8d0799a8aa5ac8"
        ],
        [
            "Context {K : AbsRing}.",
            "VernacContext",
            "cdc71fbcdcf81d89fe3229c3d0f9f374ef2ffa20"
        ],
        [
            "Lemma is_derive_mult (f g : K -> K) x (df dg : K) : is_derive f x df -> is_derive g x dg -> (forall n m : K, mult n m = mult m n) -> is_derive (fun x : K => mult (f x) (g x)) x (plus (mult df (g x)) (mult (f x) dg)).",
            "VernacStartTheoremProof",
            "8729dffbdb21b74d4ec91595d97ea669569f8efa"
        ],
        [
            "intros Hf Hg Hmult.",
            "VernacExtend",
            "dd7d360e29a6a191c8cfb268ff1184ad4ea4c182"
        ],
        [
            "eapply filterdiff_ext_lin.",
            "VernacExtend",
            "95ec423140e8c1a0927774f978482d971b43a652"
        ],
        [
            "eapply filterdiff_comp_2 => /=.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply Hf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "eapply filterdiff_ext_lin.",
            "VernacExtend",
            "95ec423140e8c1a0927774f978482d971b43a652"
        ],
        [
            "apply (filterdiff_mult (f x,g x)) => /=.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "intros P [d Hd].",
            "VernacExtend",
            "b0e698234308a641534e33c7e92cd0cf9f876c93"
        ],
        [
            "assert (Cf := ex_derive_continuous f x).",
            "VernacExtend",
            "4f2f0876d7f2be70cd23ae846cda738d9652d97c"
        ],
        [
            "assert (Cg := ex_derive_continuous g x).",
            "VernacExtend",
            "01276213a5114f5b867317d194c4536948604132"
        ],
        [
            "destruct (fun H => proj1 (filterlim_locally _ _) (Cf H) d) as [d1 Hd1].",
            "VernacExtend",
            "a47db33801593b2172f39887e7f23aa8060a6fe5"
        ],
        [
            "eexists ; by apply Hf.",
            "VernacExtend",
            "4657dc7e5563695fc6fb97b882b38b9c9d8fee9c"
        ],
        [
            "destruct (fun H => proj1 (filterlim_locally _ _) (Cg H) d) as [d2 Hd2].",
            "VernacExtend",
            "bfe8b40e65b3845397ad82b718fac0cdd450f71c"
        ],
        [
            "eexists ; by apply Hg.",
            "VernacExtend",
            "4657dc7e5563695fc6fb97b882b38b9c9d8fee9c"
        ],
        [
            "exists (mkposreal _ (Rmin_stable_in_posreal d1 d2)) => /= y Hy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Hd ; split => /=.",
            "VernacExtend",
            "dcb2b508fedbeba8f6ef7c99c73498e919f63063"
        ],
        [
            "eapply (Hd1 y), ball_le, Hy.",
            "VernacExtend",
            "4a866a67ee6a1968b98ad3b982fd7befadd0a9e2"
        ],
        [
            "by apply Rmin_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "eapply (Hd2 y), ball_le, Hy.",
            "VernacExtend",
            "39fa6304d888451f6f81a482cdfbb2d63057f12a"
        ],
        [
            "by apply Rmin_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hmult.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "simpl => [[y1 y2]] /=.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl => y.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /scal /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite mult_assoc (Hmult (f x)) -!mult_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mult_distr_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End is_derive_mult.",
            "VernacEndSegment",
            "8d920e99e5fb73f66ded16bd3f202ebe40a3e7a2"
        ],
        [
            "Lemma filterdiff_pow_n {K : AbsRing} (x : K) (n : nat) : (forall a b : K, mult a b = mult b a) -> filterdiff (fun y : K => pow_n y n) (locally x) (fun y : K => scal y (mult (nat_to_ring n) (pow_n x (pred n)))).",
            "VernacStartTheoremProof",
            "e8b9811aa8a0ffe995a72dbf8d58af52a0da5ed7"
        ],
        [
            "intros Hmult.",
            "VernacExtend",
            "1ba4a5874a1dbec89f87e8c81d9b3b4708b9a800"
        ],
        [
            "rewrite -/(is_derive (fun y : K => pow_n y n) x (mult (nat_to_ring n) (pow_n x (pred n)))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "elim: n => [ | n IH] /=.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "evar_last.",
            "VernacExtend",
            "66189d18eff3abe5c0f87ca72027637c063094b4"
        ],
        [
            "apply is_derive_const.",
            "VernacExtend",
            "0c57570ae21ab9a27b6b5a5df221d9432c67f177"
        ],
        [
            "by rewrite nat_to_ring_O mult_zero_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "evar_last.",
            "VernacExtend",
            "66189d18eff3abe5c0f87ca72027637c063094b4"
        ],
        [
            "eapply is_derive_mult.",
            "VernacExtend",
            "d336173185105af21744dd099268d7e4dc88c3ea"
        ],
        [
            "apply is_derive_id.",
            "VernacExtend",
            "f48d59a22b6184c077230e9fa12ff9ee2bba6989"
        ],
        [
            "apply IH.",
            "VernacExtend",
            "88103d45393d3ee3ab547447d913543854db8cea"
        ],
        [
            "by apply Hmult.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite nat_to_ring_Sn mult_one_l mult_assoc (Hmult x) -mult_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite mult_distr_r mult_one_l plus_comm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal2 => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "clear ; case: n => [ | n] //=.",
            "VernacExtend",
            "d82b3e9d9c2616c7c6138fa80b8df8d22f053643"
        ],
        [
            "by rewrite nat_to_ring_O !mult_zero_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_derive_n_pow_smalli: forall i p x, (i <= p)%nat -> is_derive_n (fun x : R => x ^ p) i x (INR (fact p) / INR (fact (p - i)%nat) * x ^ (p - i)%nat).",
            "VernacStartTheoremProof",
            "2575e5ce7254902c252c09e4defff15279d0d98a"
        ],
        [
            "elim => /= [ | i IH] p x Hip.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite -minus_n_O ; field.",
            "VernacExtend",
            "978748f3924ddecb0b5c0d464fc313237f2af3c9"
        ],
        [
            "by apply INR_fact_neq_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "eapply is_derive_ext.",
            "VernacExtend",
            "573c1b8d910f7acc5c079ebf5ad4c6203c0b7b81"
        ],
        [
            "intros t.",
            "VernacExtend",
            "3c4fe6f257739f9d979bf15fca5e899c1914c76d"
        ],
        [
            "apply sym_equal, is_derive_n_unique, IH.",
            "VernacExtend",
            "42c358bc0025eadd2e4510791feaeb76fd4ea8a9"
        ],
        [
            "eapply le_trans, Hip ; by apply le_n_Sn.",
            "VernacExtend",
            "3b61dabf665e99beeaeb7be7ad1973b59d50c91a"
        ],
        [
            "evar_last.",
            "VernacExtend",
            "66189d18eff3abe5c0f87ca72027637c063094b4"
        ],
        [
            "apply is_derive_scal, is_derive_pow, is_derive_id.",
            "VernacExtend",
            "0492f2e08aed681e9215155dcac5a3f75e1ae25f"
        ],
        [
            "rewrite MyNat.sub_succ_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "change one with 1.",
            "VernacExtend",
            "6a329d874bdd62072e6af13c2e5f839fd7d41305"
        ],
        [
            "rewrite {1 2} (S_pred (p - i) O) /fact -/fact ?mult_INR.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply INR_fact_neq_0.",
            "VernacExtend",
            "9f4443217b6f3c8f07648392448a37630452a203"
        ],
        [
            "apply not_0_INR, sym_not_eq, O_S.",
            "VernacExtend",
            "914e8e2a4921a292d3823fc1cb0d34fb391a058e"
        ],
        [
            "by apply lt_minus_O_lt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Derive_n_pow_smalli: forall i p x, (i <= p)%nat -> Derive_n (fun x : R => x ^ p) i x = INR (fact p) / INR (fact (p - i)%nat) * x ^ (p - i)%nat.",
            "VernacStartTheoremProof",
            "5277410b1d823cdd9c304ae89cf1a6c776a696c3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "now apply is_derive_n_unique, is_derive_n_pow_smalli.",
            "VernacExtend",
            "74263f03bb2085867e51df221b541fe656c0d983"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_derive_n_pow_bigi: forall i p x, (p < i) %nat -> is_derive_n (fun x : R => x ^ p) i x 0.",
            "VernacStartTheoremProof",
            "75ba53815e6644403515dd6fc93cae6f28bf083e"
        ],
        [
            "elim => /= [ | i IH] p x Hip.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by apply lt_n_O in Hip.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply lt_n_Sm_le, le_lt_eq_dec in Hip.",
            "VernacExtend",
            "16009c58289435216a7f0bdd80b9416c082037d8"
        ],
        [
            "case: Hip => [Hip | ->] ; eapply is_derive_ext.",
            "VernacExtend",
            "e73308690e132832190c7ac1fcdbdcaad56b1afe"
        ],
        [
            "intros t ; by apply sym_equal, is_derive_n_unique, IH.",
            "VernacExtend",
            "7127a57739fba84c0edec80a9a47b12e17827038"
        ],
        [
            "apply @is_derive_const.",
            "VernacExtend",
            "debf5cabe29d1be313d21564237d133376dbd1f1"
        ],
        [
            "intros t ; rewrite Derive_n_pow_smalli.",
            "VernacExtend",
            "df2ab005706eec9ecc5057ce4f10cadc8c27c8b5"
        ],
        [
            "by rewrite minus_diag /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply le_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply @is_derive_const.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Derive_n_pow_bigi: forall i p x, (p < i) %nat -> Derive_n (fun x : R => x ^ p) i x = 0.",
            "VernacStartTheoremProof",
            "98eea1778cc8cf6c675bf31dbfc259e8210e212f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "now apply is_derive_n_unique, is_derive_n_pow_bigi.",
            "VernacExtend",
            "bb91c3282b92f72c75f7e07cc8a2d21aa43396a8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Derive_n_pow i p x: Derive_n (fun x : R => x ^ p) i x = match (le_dec i p) with | left _ => INR (fact p) / INR (fact (p -i)%nat) * x ^ (p - i)%nat | right _ => 0 end.",
            "VernacStartTheoremProof",
            "f16d4ce37ec24b95edd7f49ca23bf24aa7821161"
        ],
        [
            "case: le_dec => H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Derive_n_pow_smalli.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Derive_n_pow_bigi, not_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_derive_n_pow i p x: ex_derive_n (fun x : R => x ^ p) i x.",
            "VernacStartTheoremProof",
            "934b99ad2fb050a862c694477dd7efba2ae5fa23"
        ],
        [
            "case: i => //= i.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (Derive_n (fun x : R => x ^ p) (S i) x).",
            "VernacExtend",
            "ae0027009bdb588eb6357d7e971057fc9e6bf805"
        ],
        [
            "rewrite Derive_n_pow.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: le_dec => Hip.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply (is_derive_n_pow_smalli (S i)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply (is_derive_n_pow_bigi (S i)) ; omega.",
            "VernacExtend",
            "3ad4363a301149e91a6ae94b204975293466491f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_RInt_pow : forall a b n, is_RInt (fun x => pow x n) a b (pow b (S n) / INR (S n) - pow a (S n) / INR (S n)).",
            "VernacStartTheoremProof",
            "c3d1c0718c24bc7ec3ea2c2f3449b4dc0828fd8f"
        ],
        [
            "intros a b n.",
            "VernacExtend",
            "5e31f7b7020b0ea280ae113065f75167acdb803c"
        ],
        [
            "set f := fun x => pow x (S n) / INR (S n).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "fold (f a) (f b).",
            "VernacExtend",
            "f5f589b1c0932de39fe1f82a4c084770a97f927a"
        ],
        [
            "assert (H: forall x : R, is_derive f x (pow x n)).",
            "VernacExtend",
            "9639343786d03d569d8423e77aa6dafffad842fa"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "evar_last.",
            "VernacExtend",
            "66189d18eff3abe5c0f87ca72027637c063094b4"
        ],
        [
            "rewrite /f /Rdiv -[Rmult]/(scal (V := R_NormedModule)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply is_derive_scal_l.",
            "VernacExtend",
            "bb369ebe5e69e4dee66a062f2570bed1d752ac51"
        ],
        [
            "apply is_derive_pow, is_derive_id.",
            "VernacExtend",
            "31f8c46fa221781799c47de2fc0605d65c576322"
        ],
        [
            "rewrite /pred.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "set k := INR (S n).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "rewrite /scal /= /mult /one /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "rewrite /k S_INR.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rgt_not_eq, INRp1_pos.",
            "VernacExtend",
            "71d22a291ebd36fd007c76a06c2ef8ca6372df68"
        ],
        [
            "apply: is_RInt_derive => x Hx //.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply continuity_pt_filterlim.",
            "VernacExtend",
            "e7e11f829f0da02ed082c41d4319fefb2ba19a7b"
        ],
        [
            "apply derivable_continuous_pt.",
            "VernacExtend",
            "939a043861a6c1b6ad68f89e18a325fcf10fb0f3"
        ],
        [
            "apply derivable_pt_pow.",
            "VernacExtend",
            "77fee7839321e3199cafd579edb275436be5e6f6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exp_ge_taylor (x : R) (n : nat) : 0 <= x -> sum_f_R0 (fun k => x^k / INR (fact k)) n <= exp x.",
            "VernacStartTheoremProof",
            "c60b0e93d6790991b87db4440f3b1dd27716108e"
        ],
        [
            "move => Hx.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /exp /exist_exp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Alembert_C3 => /= y Hy.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rnot_lt_le => H.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rminus_lt_0 in H.",
            "VernacExtend",
            "cc788f46f0f5b7c476514ba43d78dd77271a6406"
        ],
        [
            "case: (Hy _ H) => N {Hy} Hy.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (Hy _ (le_plus_r n N)) => {Hy}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Rle_not_lt.",
            "VernacExtend",
            "1f0f6b47a7d49626d97b2585f7610e291096035d"
        ],
        [
            "apply Rle_trans with (2 := Rle_abs _).",
            "VernacExtend",
            "72c9ed1eeb9d16ecf7ec04b7601241cd3efc9de9"
        ],
        [
            "apply Rplus_le_compat_r.",
            "VernacExtend",
            "5ca7acb5e67c7d7a5b6143fd11bc1e75c3e361e4"
        ],
        [
            "elim: N => [ | N IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite plus_0_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Req_le.",
            "VernacExtend",
            "b69ffc9461f465218c69f379ac293728d3f8e7bd"
        ],
        [
            "elim: (n) => {n H} [ | n /= <-].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "apply Rmult_comm.",
            "VernacExtend",
            "f6a795952024dfb6a8db9b1b3050b14eb7f075aa"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "apply Rmult_comm.",
            "VernacExtend",
            "f6a795952024dfb6a8db9b1b3050b14eb7f075aa"
        ],
        [
            "apply Rle_trans with (1 := IH).",
            "VernacExtend",
            "7edff2fefc3e3d55d4db068dd3dc9e178b58a76c"
        ],
        [
            "rewrite -plus_n_Sm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: (n + N)%nat => {n H N IH} n.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /sum_f_R0 -/sum_f_R0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rminus_le_0 ; ring_simplify.",
            "VernacExtend",
            "48c96302111e8edc2fcb95e79f4f71c3818d133f"
        ],
        [
            "apply Rmult_le_pos.",
            "VernacExtend",
            "e03207c3cef85471384dc0906485b056bc83a80a"
        ],
        [
            "apply Rlt_le, Rinv_0_lt_compat, INR_fact_lt_0.",
            "VernacExtend",
            "edb267fcffb9139e886671f7bdf26b5936fd38c0"
        ],
        [
            "by apply pow_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_exp_Reals (x : R) : is_pseries (fun n => / INR (fact n)) x (exp x).",
            "VernacStartTheoremProof",
            "298f625d798ef0657af2d3538c7fe469bbe5b26b"
        ],
        [
            "rewrite /exp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: exist_exp => l /= Hl.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Series.is_series_Reals in Hl.",
            "VernacExtend",
            "226e4d3fdbbdf7dc5306961e9dbe57582e49bed1"
        ],
        [
            "move: Hl ; apply Series.is_series_ext => n.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by rewrite Rmult_comm pow_n_pow.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exp_Reals (x : R) : exp x = PSeries (fun n => / INR (fact n)) x.",
            "VernacStartTheoremProof",
            "3b1ea7a8bb4444fd110dcc9e2478f3cd2cb2f257"
        ],
        [
            "apply sym_eq, is_pseries_unique.",
            "VernacExtend",
            "a2c87e79c4b334f78f1c022570e0c81d8149ca87"
        ],
        [
            "by apply is_exp_Reals.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_exp_p : is_lim (fun y => exp y) p_infty p_infty.",
            "VernacStartTheoremProof",
            "a70c60601772aedb695c251407baca3a976a7059"
        ],
        [
            "apply is_lim_le_p_loc with (fun y => 1 + y).",
            "VernacExtend",
            "57f9c5f0a7367e2e887e182f5f351a656ca84e46"
        ],
        [
            "exists 0 => y Hy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply Rlt_le, exp_ineq1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pattern p_infty at 2.",
            "VernacExtend",
            "721569feee07ac3f55d88031a56215880b8b0e17"
        ],
        [
            "replace p_infty with (Rbar_plus 1 p_infty) by auto.",
            "VernacExtend",
            "4454eb55433bdb071e4b32ff1d25fd16e3e09906"
        ],
        [
            "eapply is_lim_plus.",
            "VernacExtend",
            "716ead8934c013c4d4668980097b9e8b4ce42906"
        ],
        [
            "apply is_lim_const.",
            "VernacExtend",
            "59ce2cb7f7d13488752d566191bc5a7d46ac5d68"
        ],
        [
            "apply is_lim_id.",
            "VernacExtend",
            "b5c2901657d02300527a48634f110a43e141619e"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_exp_m : is_lim (fun y => exp y) m_infty 0.",
            "VernacStartTheoremProof",
            "41a4ee718796ca15e1914f5d4c26025c39c3623e"
        ],
        [
            "evar_last.",
            "VernacExtend",
            "66189d18eff3abe5c0f87ca72027637c063094b4"
        ],
        [
            "apply is_lim_ext with (fun y => /(exp (- y))).",
            "VernacExtend",
            "ea77bda0453751245fe7b92f57dd2cc0c63e4a54"
        ],
        [
            "move => y ; rewrite exp_Ropp ; apply Rinv_involutive.",
            "VernacExtend",
            "371c994647e73b356d143bb0b3721bcdd4fc86e5"
        ],
        [
            "apply Rgt_not_eq, exp_pos.",
            "VernacExtend",
            "5db82baeccbf14cfce96becce0a6b5e3de2a4cca"
        ],
        [
            "apply is_lim_inv.",
            "VernacExtend",
            "d3ad530ccd1c2f83bab2f2008d4ebc69acba93af"
        ],
        [
            "apply is_lim_comp with p_infty.",
            "VernacExtend",
            "145fbbfac1c2c17ec0624ac092bad95e257852ff"
        ],
        [
            "apply is_lim_exp_p.",
            "VernacExtend",
            "14a44629d36b14bf6ec05ed48713cbc85833bf9d"
        ],
        [
            "replace p_infty with (Rbar_opp m_infty) by auto.",
            "VernacExtend",
            "0393cd420a340146c008087738a17bb7e245f5df"
        ],
        [
            "apply is_lim_opp.",
            "VernacExtend",
            "e4fe5b0c2db9cdda2ab034a7f1f90d26446fe7a4"
        ],
        [
            "apply is_lim_id.",
            "VernacExtend",
            "b5c2901657d02300527a48634f110a43e141619e"
        ],
        [
            "by apply filter_forall.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_exp (x : Rbar) : ex_lim (fun y => exp y) x.",
            "VernacStartTheoremProof",
            "3cc618797a07de9fa270b98495258a7f57403b75"
        ],
        [
            "case: x => [x | | ].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply ex_finite_lim_correct, ex_lim_continuity.",
            "VernacExtend",
            "847d805ba107fef6db7a0c6f09c1a75e6c9f3f1d"
        ],
        [
            "apply derivable_continuous_pt, derivable_pt_exp.",
            "VernacExtend",
            "f2af8279b06fa099a920dba6566943dd5398c04e"
        ],
        [
            "exists p_infty ; by apply is_lim_exp_p.",
            "VernacExtend",
            "1bed9b0fe38de2029a82e9b610831cdebb89793a"
        ],
        [
            "exists 0 ; by apply is_lim_exp_m.",
            "VernacExtend",
            "3efdae3ec47c5d4dcaa495bcaa641a21b49f4fa4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_exp (x : Rbar) : Lim (fun y => exp y) x = match x with | Finite x => exp x | p_infty => p_infty | m_infty => 0 end.",
            "VernacStartTheoremProof",
            "e87593d6c52ae79ff6831f42e14c5c318ba1efca"
        ],
        [
            "apply is_lim_unique.",
            "VernacExtend",
            "dae3243103dd458b8bf69808c8c75b5d97ae46f2"
        ],
        [
            "case: x => [x | | ].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply is_lim_continuity.",
            "VernacExtend",
            "86eeb22cc14e496f582b82d29320be34eead1153"
        ],
        [
            "apply derivable_continuous_pt, derivable_pt_exp.",
            "VernacExtend",
            "f2af8279b06fa099a920dba6566943dd5398c04e"
        ],
        [
            "by apply is_lim_exp_p.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply is_lim_exp_m.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_div_exp_p : is_lim (fun y => exp y / y) p_infty p_infty.",
            "VernacStartTheoremProof",
            "1f3176c66719a54866a5e29051fdaad8982d8b25"
        ],
        [
            "apply is_lim_le_p_loc with (fun y => (1 + y + y^2 / 2)/y).",
            "VernacExtend",
            "80121d8ce5b0909d052aa81be809a989b2fc5e2b"
        ],
        [
            "exists 0 => y Hy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "by apply Rlt_le, Rinv_0_lt_compat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /exp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /exist_exp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Alembert_C3 => /= x Hx.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite /Pser /infinite_sum in Hx.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rnot_lt_le => H.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (Hx _ (proj1 (Rminus_lt_0 _ _) H)) => N {Hx} Hx.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (Hx _ (le_plus_r 2 N)) => {Hx}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Rle_not_lt.",
            "VernacExtend",
            "1f0f6b47a7d49626d97b2585f7610e291096035d"
        ],
        [
            "apply Rle_trans with (2 := Rle_abs _).",
            "VernacExtend",
            "72c9ed1eeb9d16ecf7ec04b7601241cd3efc9de9"
        ],
        [
            "apply Rplus_le_compat_r.",
            "VernacExtend",
            "5ca7acb5e67c7d7a5b6143fd11bc1e75c3e361e4"
        ],
        [
            "elim: N => [ | n IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "simpl ; apply Req_le ; field.",
            "VernacExtend",
            "f62edc5e7a223c8d7de2c17b6929e8d1dfdae5ca"
        ],
        [
            "apply Rle_trans with (1 := IH).",
            "VernacExtend",
            "7edff2fefc3e3d55d4db068dd3dc9e178b58a76c"
        ],
        [
            "rewrite -plus_n_Sm ; move: (2 + n)%nat => {n IH} n.",
            "VernacExtend",
            "7e529e80bb2879787ee6d9466056f19f0215c721"
        ],
        [
            "rewrite /sum_f_R0 -/sum_f_R0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Rplus_comm ; apply Rle_minus_l ; rewrite Rminus_eq_0.",
            "VernacExtend",
            "018ed5b5c3cf7261287fa992e92bb61d9be997a9"
        ],
        [
            "apply Rmult_le_pos.",
            "VernacExtend",
            "e03207c3cef85471384dc0906485b056bc83a80a"
        ],
        [
            "apply Rlt_le, Rinv_0_lt_compat, INR_fact_lt_0.",
            "VernacExtend",
            "edb267fcffb9139e886671f7bdf26b5936fd38c0"
        ],
        [
            "apply pow_le.",
            "VernacExtend",
            "cc44161251b27644855953f8a9cda06edcf33960"
        ],
        [
            "by apply Rlt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_lim_ext_loc with (fun y => /y + 1 + y / 2).",
            "VernacExtend",
            "e06261aac6530041ab12511df312ccc09a2dec29"
        ],
        [
            "exists 0 => y Hy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "by apply Rgt_not_eq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "eapply is_lim_plus.",
            "VernacExtend",
            "716ead8934c013c4d4668980097b9e8b4ce42906"
        ],
        [
            "eapply is_lim_plus.",
            "VernacExtend",
            "716ead8934c013c4d4668980097b9e8b4ce42906"
        ],
        [
            "apply is_lim_inv.",
            "VernacExtend",
            "d3ad530ccd1c2f83bab2f2008d4ebc69acba93af"
        ],
        [
            "apply is_lim_id.",
            "VernacExtend",
            "b5c2901657d02300527a48634f110a43e141619e"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_lim_const.",
            "VernacExtend",
            "59ce2cb7f7d13488752d566191bc5a7d46ac5d68"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_lim_div.",
            "VernacExtend",
            "fa7a62750067f5d4ee0ce8748a02c0f5de52f090"
        ],
        [
            "apply is_lim_id.",
            "VernacExtend",
            "b5c2901657d02300527a48634f110a43e141619e"
        ],
        [
            "apply is_lim_const.",
            "VernacExtend",
            "59ce2cb7f7d13488752d566191bc5a7d46ac5d68"
        ],
        [
            "apply Rbar_finite_neq, Rgt_not_eq, Rlt_0_2.",
            "VernacExtend",
            "4bced9cb6c29f274d3d779c21b0a9e5ac8d1c424"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Rgt_not_eq, Rinv_0_lt_compat, Rlt_0_2.",
            "VernacExtend",
            "815a6b02b64eec0d3d1132b126bd5bdc65c058ae"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "case: Rle_dec (Rlt_le _ _ (Rinv_0_lt_compat 2 (Rlt_0_2))) => //= H _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_lt_or_eq_dec (Rlt_not_eq _ _ (Rinv_0_lt_compat 2 (Rlt_0_2))) => //= H _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_mul_exp_m : is_lim (fun y => y * exp y) m_infty 0.",
            "VernacStartTheoremProof",
            "464e7f59e7ac986401dd1832942208b790c5e326"
        ],
        [
            "evar_last.",
            "VernacExtend",
            "66189d18eff3abe5c0f87ca72027637c063094b4"
        ],
        [
            "apply is_lim_ext_loc with (fun y => - / (exp (-y) / (- y))).",
            "VernacExtend",
            "85ae616ed94d4dca413eff70d4304829ad7e6abe"
        ],
        [
            "exists 0 => y Hy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite exp_Ropp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rgt_not_eq, exp_pos.",
            "VernacExtend",
            "5db82baeccbf14cfce96becce0a6b5e3de2a4cca"
        ],
        [
            "by apply Rlt_not_eq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_lim_opp.",
            "VernacExtend",
            "e4fe5b0c2db9cdda2ab034a7f1f90d26446fe7a4"
        ],
        [
            "apply is_lim_inv.",
            "VernacExtend",
            "d3ad530ccd1c2f83bab2f2008d4ebc69acba93af"
        ],
        [
            "apply (is_lim_comp (fun y => exp y / y)) with p_infty.",
            "VernacExtend",
            "82f7ad288e965be57fd54d31294a9cb6fa9bd089"
        ],
        [
            "by apply is_lim_div_exp_p.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "evar_last.",
            "VernacExtend",
            "66189d18eff3abe5c0f87ca72027637c063094b4"
        ],
        [
            "apply is_lim_opp.",
            "VernacExtend",
            "e4fe5b0c2db9cdda2ab034a7f1f90d26446fe7a4"
        ],
        [
            "apply is_lim_id.",
            "VernacExtend",
            "b5c2901657d02300527a48634f110a43e141619e"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply filter_forall.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "simpl ; by rewrite Ropp_0.",
            "VernacExtend",
            "58f90b18beae5b9cd92772a1e3ce5ef0dc6bd627"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_div_expm1_0 : is_lim (fun y => (exp y - 1) / y) 0 1.",
            "VernacStartTheoremProof",
            "7c162b034dd42893013cd12d9d97e196a5ffa6bd"
        ],
        [
            "apply is_lim_spec.",
            "VernacExtend",
            "6a433fd37843c6d7f4bc73e6cfa945c5042b65eb"
        ],
        [
            "move => eps.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (derivable_pt_lim_exp_0 eps (cond_pos eps)) => delta H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists delta => y Hy Hy0.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /= /minus /plus /opp /= in Hy.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -/(Rminus _ _) Rminus_0_r in Hy.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: (H y Hy0 Hy).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite Rplus_0_l exp_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_RInt_exp : forall a b, is_RInt exp a b (exp b - exp a).",
            "VernacStartTheoremProof",
            "d6c3c08fae9d4efbc7539cf180f3b8943512061d"
        ],
        [
            "intros a b.",
            "VernacExtend",
            "8c4941fda9d591147c446ef6e06d248ec0e6bf7a"
        ],
        [
            "apply: is_RInt_derive.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "intros x _.",
            "VernacExtend",
            "a217ac7c130d591b56438fb1fd6c2cc8c3f9de57"
        ],
        [
            "apply is_derive_Reals, derivable_pt_lim_exp.",
            "VernacExtend",
            "637af6bc607f867a6c5f4a686ecbe38640f9c40c"
        ],
        [
            "intros x _.",
            "VernacExtend",
            "a217ac7c130d591b56438fb1fd6c2cc8c3f9de57"
        ],
        [
            "apply continuity_pt_filterlim.",
            "VernacExtend",
            "e7e11f829f0da02ed082c41d4319fefb2ba19a7b"
        ],
        [
            "apply derivable_continuous_pt.",
            "VernacExtend",
            "939a043861a6c1b6ad68f89e18a325fcf10fb0f3"
        ],
        [
            "apply derivable_pt_exp.",
            "VernacExtend",
            "bab6fda85dd526e0c1af9a5441564eebd7f42014"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_ln_p : is_lim (fun y => ln y) p_infty p_infty.",
            "VernacStartTheoremProof",
            "8a2baa5d3f406b3a1d28b9a5527b9559996a318e"
        ],
        [
            "apply is_lim_spec.",
            "VernacExtend",
            "6a433fd37843c6d7f4bc73e6cfa945c5042b65eb"
        ],
        [
            "move => M.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists (exp M) => x Hx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -(ln_exp M).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply ln_increasing.",
            "VernacExtend",
            "a0b0912d7f10a9c69ccaf4e66f4aa3c1ed788a8b"
        ],
        [
            "apply exp_pos.",
            "VernacExtend",
            "e7aede1d8dff8d25c884324d0860ea3be851262c"
        ],
        [
            "by apply Hx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_ln_0 : filterlim ln (at_right 0) (Rbar_locally m_infty).",
            "VernacStartTheoremProof",
            "c0ae749769162b93cd9255dd0d01c175ec6ec15e"
        ],
        [
            "intros P [M HM].",
            "VernacExtend",
            "912eee4bdf845576ead0eae8eb9e686e21e27a18"
        ],
        [
            "exists (mkposreal (exp M) (exp_pos _)) => x /= Hx Hx0.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply HM.",
            "VernacExtend",
            "da44e10176bfb6a0c07c29369b62e8b925d50bc1"
        ],
        [
            "rewrite <- (ln_exp M).",
            "VernacExtend",
            "895a3c8bd54c9cba8e8fa1cd5906d11fb0174c08"
        ],
        [
            "apply ln_increasing.",
            "VernacExtend",
            "a0b0912d7f10a9c69ccaf4e66f4aa3c1ed788a8b"
        ],
        [
            "exact Hx0.",
            "VernacExtend",
            "ccdb2933351c0c0e69d575ac7620a10568c4e3b0"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /= /abs /minus /plus /opp /= in Hx.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -/(Rminus _ _) Rminus_0_r Rabs_pos_eq in Hx.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact Hx.",
            "VernacExtend",
            "c13c54106cd84aeca38c2dd70bf8e46a5be5e1eb"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_div_ln_p : is_lim (fun y => ln y / y) p_infty 0.",
            "VernacStartTheoremProof",
            "ceafa27bd4546daf697aa10a491f127118e0512a"
        ],
        [
            "have H : forall x, 0 < x -> ln x < x.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move => x Hx.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Rminus_lt_0.",
            "VernacExtend",
            "266ec80c870ca91ace5efd2beddab25e945c4342"
        ],
        [
            "apply Rlt_le_trans with (1 := Rlt_0_1).",
            "VernacExtend",
            "e9c498b13adc6cd9d89541462c924714dc64dd28"
        ],
        [
            "case: (MVT_gen (fun y => y - ln y) 1 x (fun y => (y-1)/y)).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move => z Hz.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "evar (l : R).",
            "VernacExtend",
            "47a1cacb3c2348cf48b59652fb2b8ae5776ee26e"
        ],
        [
            "replace ((z - 1) / z) with l.",
            "VernacExtend",
            "78b5a6e457b7e9296dedb47fca459168b9d09665"
        ],
        [
            "apply is_derive_Reals.",
            "VernacExtend",
            "50ffedc276e75c32dd6244cd073b4227506b2788"
        ],
        [
            "apply derivable_pt_lim_minus.",
            "VernacExtend",
            "2ce17b6d9d27cabc3808057431f47c10825c2fff"
        ],
        [
            "apply derivable_pt_lim_id.",
            "VernacExtend",
            "eefa66208b1c7b1195a98db883611b02fd29636c"
        ],
        [
            "apply derivable_pt_lim_ln.",
            "VernacExtend",
            "8978b912771bae35842dfd1a15488d5110267b4f"
        ],
        [
            "eapply Rlt_trans, Hz.",
            "VernacExtend",
            "a47f2b11a1173ec9a0d0e6aabf4268e67db46e51"
        ],
        [
            "apply Rmin_case => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply Rlt_0_1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /l ; field.",
            "VernacExtend",
            "978748f3924ddecb0b5c0d464fc313237f2af3c9"
        ],
        [
            "apply Rgt_not_eq ; eapply Rlt_trans, Hz.",
            "VernacExtend",
            "9dddfa86acbdda1d68f7a6095f03fc0c3e8f88da"
        ],
        [
            "apply Rmin_case => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply Rlt_0_1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => y Hy.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply continuity_pt_minus.",
            "VernacExtend",
            "ee124f243d9a30e1165f89a65c2280f21b3b2888"
        ],
        [
            "apply continuity_pt_id.",
            "VernacExtend",
            "eeef04bdabafa78a69f5a42ef5803b63666e8048"
        ],
        [
            "apply derivable_continuous_pt ; eexists ; apply derivable_pt_lim_ln.",
            "VernacExtend",
            "2c916abdf95483ed35c2899e76c10d9a29612437"
        ],
        [
            "eapply Rlt_le_trans, Hy.",
            "VernacExtend",
            "a7a30c757f7d8cb19222051e0f9e5d4d89f8daf6"
        ],
        [
            "apply Rmin_case => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply Rlt_0_1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => c [Hc H0].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "replace 1 with (1 - ln 1) by (rewrite ln_1 Rminus_0_r //).",
            "VernacExtend",
            "3eed78b811ed7536694373ccf0397b7ffd018d89"
        ],
        [
            "apply Rminus_le_0.",
            "VernacExtend",
            "79ba7fff2b7dbdb704707b2f87011a5a974cd791"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: Hc ; rewrite /Rmin /Rmax ; case: Rle_dec => H1 Hc.",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "apply Rmult_le_pos.",
            "VernacExtend",
            "e03207c3cef85471384dc0906485b056bc83a80a"
        ],
        [
            "apply Rdiv_le_0_compat.",
            "VernacExtend",
            "693e22205d4e08285736e8c5e96457827d9a8003"
        ],
        [
            "apply -> Rminus_le_0 ; apply Hc.",
            "VernacExtend",
            "0b7fc98d5c545c774ec3a2368f4a4d0cdf2a0ac8"
        ],
        [
            "apply Rlt_le_trans with (1 := Rlt_0_1).",
            "VernacExtend",
            "e9c498b13adc6cd9d89541462c924714dc64dd28"
        ],
        [
            "by apply Hc.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply -> Rminus_le_0 ; apply H1.",
            "VernacExtend",
            "a0a4827a8452ce3d46b8493fe304c199529991fe"
        ],
        [
            "apply Rnot_le_lt in H1.",
            "VernacExtend",
            "8df6b31fd6167f00af156a7a7a73e0e8456344d7"
        ],
        [
            "replace ((c - 1) / c * (x - 1)) with ((1-c) * (1-x) / c).",
            "VernacExtend",
            "0f84ffd25523f863f9b5daddfe344bb8e315fb18"
        ],
        [
            "apply Rdiv_le_0_compat.",
            "VernacExtend",
            "693e22205d4e08285736e8c5e96457827d9a8003"
        ],
        [
            "apply Rmult_le_pos.",
            "VernacExtend",
            "e03207c3cef85471384dc0906485b056bc83a80a"
        ],
        [
            "apply -> Rminus_le_0 ; apply Hc.",
            "VernacExtend",
            "0b7fc98d5c545c774ec3a2368f4a4d0cdf2a0ac8"
        ],
        [
            "apply -> Rminus_le_0 ; apply Rlt_le, H1.",
            "VernacExtend",
            "59ba5e7f35ae480cb5b47861e96e2cae834e0d9e"
        ],
        [
            "apply Rlt_le_trans with (1 := Hx).",
            "VernacExtend",
            "17cfcea7cef1e39ddff4797053bb05abaf553802"
        ],
        [
            "by apply Hc.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "apply Rgt_not_eq.",
            "VernacExtend",
            "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
        ],
        [
            "apply Rlt_le_trans with (1 := Hx).",
            "VernacExtend",
            "17cfcea7cef1e39ddff4797053bb05abaf553802"
        ],
        [
            "by apply Hc.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply (is_lim_le_le_loc (fun _ => 0) (fun y => 2/sqrt y)).",
            "VernacExtend",
            "a158a0b3e6b6452eb6bb1ebd0ddbf022afa48be3"
        ],
        [
            "exists 1 => x Hx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rdiv_le_0_compat.",
            "VernacExtend",
            "693e22205d4e08285736e8c5e96457827d9a8003"
        ],
        [
            "rewrite -ln_1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply ln_le.",
            "VernacExtend",
            "889fbd99825e057f363324e0e89ba6a87df94a49"
        ],
        [
            "apply Rlt_0_1.",
            "VernacExtend",
            "c3f675388bf844e0740197fd71afa66e5eef091d"
        ],
        [
            "by apply Rlt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rlt_trans with (1 := Rlt_0_1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "replace (ln _) with (2 * ln (sqrt x)).",
            "VernacExtend",
            "4a1e54a049b9d2461c17152fda5375cc164f3b61"
        ],
        [
            "rewrite /Rdiv Rmult_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmult_le_compat_l.",
            "VernacExtend",
            "509839294acd7016ba82d594bfdb05afe131eed3"
        ],
        [
            "apply Rlt_le, Rlt_0_2.",
            "VernacExtend",
            "402befb5a4950597f8c70db391dff8f1cd4e8542"
        ],
        [
            "apply Rle_div_l.",
            "VernacExtend",
            "300a9124ae599e97b5c7dcc1ad678aa6b0fecb98"
        ],
        [
            "by apply Rlt_trans with (1 := Rlt_0_1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -{3}(sqrt_sqrt x).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "field_simplify ; rewrite ?Rdiv_1.",
            "VernacExtend",
            "f0f737846cbca54b0661563cad780d391c67fc50"
        ],
        [
            "apply Rlt_le, H.",
            "VernacExtend",
            "123b78dc59f4f7ff1f0c7baac86e6173d565d83a"
        ],
        [
            "apply sqrt_lt_R0.",
            "VernacExtend",
            "86145992515d5d44a6e93d78e0cca38f5b136134"
        ],
        [
            "by apply Rlt_trans with (1 := Rlt_0_1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rgt_not_eq.",
            "VernacExtend",
            "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
        ],
        [
            "apply sqrt_lt_R0.",
            "VernacExtend",
            "86145992515d5d44a6e93d78e0cca38f5b136134"
        ],
        [
            "by apply Rlt_trans with (1 := Rlt_0_1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "by apply Rlt_trans with (1 := Rlt_0_1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "change 2 with (INR 2).",
            "VernacExtend",
            "94962a28a212b7c2f206b99b3c8b25da2f539868"
        ],
        [
            "rewrite -ln_pow.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /= Rmult_1_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite sqrt_sqrt.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "by apply Rlt_trans with (1 := Rlt_0_1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply sqrt_lt_R0.",
            "VernacExtend",
            "86145992515d5d44a6e93d78e0cca38f5b136134"
        ],
        [
            "by apply Rlt_trans with (1 := Rlt_0_1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_lim_const.",
            "VernacExtend",
            "59ce2cb7f7d13488752d566191bc5a7d46ac5d68"
        ],
        [
            "evar_last.",
            "VernacExtend",
            "66189d18eff3abe5c0f87ca72027637c063094b4"
        ],
        [
            "apply is_lim_div.",
            "VernacExtend",
            "fa7a62750067f5d4ee0ce8748a02c0f5de52f090"
        ],
        [
            "apply is_lim_const.",
            "VernacExtend",
            "59ce2cb7f7d13488752d566191bc5a7d46ac5d68"
        ],
        [
            "apply filterlim_sqrt_p.",
            "VernacExtend",
            "d338b02b2cfcb3e2959b3d6aa527fbba116d0fe8"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "simpl ; by rewrite Rmult_0_r.",
            "VernacExtend",
            "58f90b18beae5b9cd92772a1e3ce5ef0dc6bd627"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_div_ln1p_0 : is_lim (fun y => ln (1+y) / y) 0 1.",
            "VernacStartTheoremProof",
            "10e4f740d37dfd8a7413895979cca3823ce46d5c"
        ],
        [
            "apply is_lim_spec.",
            "VernacExtend",
            "6a433fd37843c6d7f4bc73e6cfa945c5042b65eb"
        ],
        [
            "move => eps.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (derivable_pt_lim_ln 1 (Rlt_0_1) eps (cond_pos eps)) => delta H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists delta => y Hy Hy0.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /= /minus /plus /opp /= in Hy.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /= -/(Rminus _ _) Rminus_0_r in Hy.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: (H y Hy0 Hy).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite ln_1 Rinv_1 Rminus_0_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_sinc_0 : is_lim (fun x => sin x / x) 0 1.",
            "VernacStartTheoremProof",
            "34cd6eec8ca70081ebf6a07e8a3b6d836d30916a"
        ],
        [
            "apply is_lim_spec.",
            "VernacExtend",
            "6a433fd37843c6d7f4bc73e6cfa945c5042b65eb"
        ],
        [
            "move => eps.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (derivable_pt_lim_sin_0 eps (cond_pos eps)) => delta H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists delta => y Hy Hy0.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /= /minus /plus /opp /= in Hy.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /= -/(Rminus _ _) Rminus_0_r in Hy.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: (H y Hy0 Hy).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite Rplus_0_l sin_0 Rminus_0_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CV_radius_atan : CV_radius (fun n => (-1)^n / (INR (S (n + n)))) = 1.",
            "VernacStartTheoremProof",
            "45a83549e6811e2fbc38e2a33078e8aab8f54f44"
        ],
        [
            "apply eq_trans with (2 := f_equal Finite Rinv_1).",
            "VernacExtend",
            "18aabcac3880b9280a4c54b5fd55b127d9da1e39"
        ],
        [
            "apply CV_radius_finite_DAlembert.",
            "VernacExtend",
            "6248e6dbcb616fbae3d68369b75f111798e53f70"
        ],
        [
            "intros n.",
            "VernacExtend",
            "9410cc86153539309ee696ae5785ea70534ece11"
        ],
        [
            "apply Rmult_integral_contrapositive_currified.",
            "VernacExtend",
            "67cbc94190cf35c6f1cdcda1f1ab365145cc47eb"
        ],
        [
            "apply pow_nonzero.",
            "VernacExtend",
            "282744fa14f20635385d7e1ac0d1a961c143f970"
        ],
        [
            "apply Rlt_not_eq, Rminus_lt_0 ; ring_simplify ; apply Rlt_0_1.",
            "VernacExtend",
            "0c1fb5676eec4678fd7eea3958b964abee466fda"
        ],
        [
            "rewrite S_INR ; by apply Rgt_not_eq, RinvN_pos.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "by apply Rlt_0_1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_lim_seq_ext with (fun n => 1 - 2 / (2 * INR n + 3)).",
            "VernacExtend",
            "9ab351d567c3734ecc20a495391689d0bcbcc7aa"
        ],
        [
            "intros n.",
            "VernacExtend",
            "9410cc86153539309ee696ae5785ea70534ece11"
        ],
        [
            "rewrite -plus_n_Sm plus_Sn_m !S_INR plus_INR.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "assert (0 < INR n + INR n + 1).",
            "VernacExtend",
            "6352750b937aedffb1998622cd050eb5efbf13f3"
        ],
        [
            "rewrite -plus_INR -S_INR.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply (lt_INR O), lt_O_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "assert (0 < INR n + INR n + 1 + 1 + 1).",
            "VernacExtend",
            "5e36c79c4ab156cc807763de7e2455144be77dc2"
        ],
        [
            "rewrite -plus_INR -!S_INR.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply (lt_INR O), lt_O_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !Rabs_div ; try by apply Rgt_not_eq.",
            "VernacExtend",
            "768b2f88f8c65ebded32bd7dc9c8ffec8f100548"
        ],
        [
            "rewrite -!RPow_abs Rabs_m1 !pow1 !Rabs_pos_eq ; try by left.",
            "VernacExtend",
            "768b2f88f8c65ebded32bd7dc9c8ffec8f100548"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "split ; by apply Rgt_not_eq.",
            "VernacExtend",
            "9c392753fd6384a52f43e9d349afde47af3b3aa5"
        ],
        [
            "apply Rmult_integral_contrapositive_currified.",
            "VernacExtend",
            "67cbc94190cf35c6f1cdcda1f1ab365145cc47eb"
        ],
        [
            "apply pow_nonzero.",
            "VernacExtend",
            "282744fa14f20635385d7e1ac0d1a961c143f970"
        ],
        [
            "apply Rlt_not_eq, Rminus_lt_0 ; ring_simplify ; apply Rlt_0_1.",
            "VernacExtend",
            "0c1fb5676eec4678fd7eea3958b964abee466fda"
        ],
        [
            "rewrite -plus_INR ; by apply Rgt_not_eq, RinvN_pos.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "evar_last.",
            "VernacExtend",
            "66189d18eff3abe5c0f87ca72027637c063094b4"
        ],
        [
            "apply is_lim_seq_minus'.",
            "VernacExtend",
            "d40b84f9d4c6cdd5a953bb10ef3fce2a83fa3569"
        ],
        [
            "apply filterlim_const.",
            "VernacExtend",
            "ff971edf84d1cf6e134869f4729acc40969816e1"
        ],
        [
            "eapply is_lim_seq_div.",
            "VernacExtend",
            "5534b3448df4122dd57945592bc83357e8f6e3a1"
        ],
        [
            "apply is_lim_seq_const.",
            "VernacExtend",
            "841054990caf6b74d9f691433bc35ebf9401e15a"
        ],
        [
            "eapply is_lim_seq_plus.",
            "VernacExtend",
            "42bee7d425fd3a78a36ba8991a1bbb03d2b15a0e"
        ],
        [
            "eapply is_lim_seq_mult.",
            "VernacExtend",
            "3c0395752a70333e89ed9dad06606f326adf55b8"
        ],
        [
            "apply is_lim_seq_const.",
            "VernacExtend",
            "841054990caf6b74d9f691433bc35ebf9401e15a"
        ],
        [
            "apply is_lim_seq_INR.",
            "VernacExtend",
            "a24edd871cee6630005256236f6299caaa48c5b6"
        ],
        [
            "apply is_Rbar_mult_sym, is_Rbar_mult_p_infty_pos.",
            "VernacExtend",
            "b6d4344b4181c58257fe07ec7029ff3f09e70f28"
        ],
        [
            "by apply Rlt_0_2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_lim_seq_const.",
            "VernacExtend",
            "841054990caf6b74d9f691433bc35ebf9401e15a"
        ],
        [
            "reflexivity ; simpl.",
            "VernacExtend",
            "6b139156246c6f0c1ee91798be2ee7e7178eb213"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl ; apply f_equal ; ring.",
            "VernacExtend",
            "47221404273f010f9c7ae3d91eed60f3c5f3d319"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma atan_Reals (x : R) : Rabs x < 1 -> atan x = x * PSeries (fun n => (-1)^n / (INR (S (n + n)))) (x ^ 2).",
            "VernacStartTheoremProof",
            "9ef02fdfd99e3469c5b7dde1ddccd8c89f33c258"
        ],
        [
            "wlog: x / (0 <= x) => [Hw | Hx0] Hx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (Rle_lt_dec 0 x) => Hx0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Hw.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -{1}(Ropp_involutive x) atan_opp Hw.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace ((- x) ^ 2) with (x^2) by ring.",
            "VernacExtend",
            "c9cccb98692d6274885f591f543c558a6b46f0fe"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "apply Ropp_le_cancel ; rewrite Ropp_involutive Ropp_0 ; by left.",
            "VernacExtend",
            "0bea02a2ecebbf94a0e3ce4a30b94a8414279a19"
        ],
        [
            "by rewrite Rabs_Ropp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Rabs_pos_eq // in Hx.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Hx0 => Hx0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite atan_eq_ps_atan ; try by split.",
            "VernacExtend",
            "768b2f88f8c65ebded32bd7dc9c8ffec8f100548"
        ],
        [
            "rewrite /ps_atan.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Ratan.in_int => H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: ps_atan_exists_1 => ps Hps.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "rewrite -Series.Series_scal_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Series.is_series_unique.",
            "VernacExtend",
            "0bc6daeaf5ff826641b702f4bcb7aa11fe4d68bc"
        ],
        [
            "apply is_lim_seq_Reals in Hps.",
            "VernacExtend",
            "37c10ad4144aed42cbf7811c7b324bf46f22b13f"
        ],
        [
            "move: Hps ; apply is_lim_seq_ext => n.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "rewrite -sum_n_Reals.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply sum_n_ext => k.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /tg_alt /Ratan_seq S_INR !plus_INR.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite pow_add -pow_mult.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "simpl ; field.",
            "VernacExtend",
            "db84c8cac4d419667c5dc078fea83a0aa7cc0138"
        ],
        [
            "rewrite -plus_INR -S_INR.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rgt_not_eq, (lt_INR 0), lt_O_Sn.",
            "VernacExtend",
            "e84d95bc6e9152d6fa5b378b137031bcff6cb405"
        ],
        [
            "contradict H ; split.",
            "VernacExtend",
            "cf354d712bdfdd7fd441911c58c781fbec9a5f03"
        ],
        [
            "apply Rle_trans with 0.",
            "VernacExtend",
            "6fc7cbbd3bf64d4d7a487e9e8054a92c4237c86a"
        ],
        [
            "apply Rminus_le_0 ; ring_simplify ; by apply Rle_0_1.",
            "VernacExtend",
            "829f68a7bd9f898cf068a2f4a9f2a10ad267a59c"
        ],
        [
            "by left.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by left.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -Hx0 atan_0 Rmult_0_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "continuous_abs",
            "line_nb": 3,
            "steps": [
                {
                    "command": [
                        "apply filterlim_locally => /= eps.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "exists eps => /= y Hy.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "eapply Rle_lt_trans, Hy.",
                        "VernacExtend",
                        "5d7b9881fa7bedfd08a0475ca10bafb618d939dd"
                    ]
                },
                {
                    "command": [
                        "wlog: x y Hy / (abs x <= abs y) => [Hw | Hxy].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: (Rle_lt_dec (abs x) (abs y)) => Hxy.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply Hw.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite abs_minus (abs_minus y).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Hw, Rlt_le, Hxy.",
                        "VernacExtend",
                        "9f34df4d27d6caf3f01560acf72dee6b9b5dce01"
                    ]
                },
                {
                    "command": [
                        "by apply ball_sym.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite {1}/abs /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_pos_eq.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rle_minus_l.",
                        "VernacExtend",
                        "fd70e10454fdcda9a9ecb4708f46b7de8d290b92"
                    ]
                },
                {
                    "command": [
                        "eapply Rle_trans, abs_triangle.",
                        "VernacExtend",
                        "16b0126491e6b30b476ad99dec223b9504c517c3"
                    ]
                },
                {
                    "command": [
                        "apply Req_le, f_equal.",
                        "VernacExtend",
                        "611305432bb56a049c3263355c95dcb6f09bd9a0"
                    ]
                },
                {
                    "command": [
                        "by rewrite /minus -plus_assoc plus_opp_l plus_zero_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply -> Rminus_le_0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterlim_abs_0",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "intros H P [eps HP].",
                        "VernacExtend",
                        "fdfde8e1823c9d80e442a164f6643b321fe10f8e"
                    ]
                },
                {
                    "command": [
                        "exists eps.",
                        "VernacExtend",
                        "c7af48b9f65cab7cfe7f63abbdd2c6bef269dc77"
                    ]
                },
                {
                    "command": [
                        "intros x Hx Hx'.",
                        "VernacExtend",
                        "60fd9fdc1e7a721ff9e305c6c5cd264fc3816346"
                    ]
                },
                {
                    "command": [
                        "apply HP.",
                        "VernacExtend",
                        "ca37aebd7e8ae00878bfd4cba5592ae8e97d86d9"
                    ]
                },
                {
                    "command": [
                        "revert Hx.",
                        "VernacExtend",
                        "6f33b03350f7d5550754ef79fc319be630ae9ecd"
                    ]
                },
                {
                    "command": [
                        "rewrite /ball /= /AbsRing_ball !minus_zero_r {2}/abs /= Rabs_pos_eq.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply abs_ge_0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "assert (abs x <> 0).",
                        "VernacExtend",
                        "79b6817809c8ed86fd1a7d00975743edc4104a2c"
                    ]
                },
                {
                    "command": [
                        "contradict Hx' ; by apply H.",
                        "VernacExtend",
                        "e4936b958559d8694eeaf28b60e059d469bf595d"
                    ]
                },
                {
                    "command": [
                        "case: (abs_ge_0 x) => // H1.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -H1 in H0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "continuous_Rabs",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "by apply @continuous_abs.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterlim_Rabs_0",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "apply @filterlim_abs_0.",
                        "VernacExtend",
                        "a7d6027670ee10b233808d043e90c35f253ec0e3"
                    ]
                },
                {
                    "command": [
                        "by apply Rabs_eq_0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_Rabs_0",
            "line_nb": 69,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eapply filterlim_comp, filterlim_Rabs_0.",
                        "VernacExtend",
                        "4d2e048dd77d8e29a6086121d2760efb6e4c1427"
                    ]
                },
                {
                    "command": [
                        "intros P HP.",
                        "VernacExtend",
                        "55e2f4eebfad5cc358bd93712ab9be7674f934e9"
                    ]
                },
                {
                    "command": [
                        "apply H in HP.",
                        "VernacExtend",
                        "898d7d8dd8d9e005abf96a0ccb67ac75da03e3bd"
                    ]
                },
                {
                    "command": [
                        "generalize (filter_and _ _ H0 HP).",
                        "VernacExtend",
                        "390501b696d567c5fd734441f956505a612688a9"
                    ]
                },
                {
                    "command": [
                        "rewrite /filtermap /= ; apply filter_imp.",
                        "VernacExtend",
                        "641b7e6411115fd8acfd5b817fc545f0788a3aa8"
                    ]
                },
                {
                    "command": [
                        "intros y Hy.",
                        "VernacExtend",
                        "d610d987f827782ed7ad408419c9743f4107dcdc"
                    ]
                },
                {
                    "command": [
                        "apply Hy, Hy.",
                        "VernacExtend",
                        "92a8e1e8d8ccb73b2101e5dc28d57b086f0f06bf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterlim_Rinv_0_right",
            "line_nb": 112,
            "steps": [
                {
                    "command": [
                        "intros P [M HM].",
                        "VernacExtend",
                        "912eee4bdf845576ead0eae8eb9e686e21e27a18"
                    ]
                },
                {
                    "command": [
                        "have Hd : 0 < / Rmax 1 M.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat.",
                        "VernacExtend",
                        "d7abdc8c3031a09ca2712c9563d7ecf89b4d477e"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (2 := Rmax_l _ _).",
                        "VernacExtend",
                        "759c028334c4cc47650b0646143187ec025626e9"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_0_1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists (mkposreal _ Hd) => x /= Hx Hx0.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply HM.",
                        "VernacExtend",
                        "da44e10176bfb6a0c07c29369b62e8b925d50bc1"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (1 := Rmax_r 1 M).",
                        "VernacExtend",
                        "e535d65679f5c8012ebb08ae79e80d8a3a6728c3"
                    ]
                },
                {
                    "command": [
                        "replace (Rmax 1 M) with (/ / Rmax 1 M) by (field ; apply Rgt_not_eq, Rlt_le_trans with (2 := Rmax_l _ _), Rlt_0_1).",
                        "VernacExtend",
                        "86288cf2ce115bd483ba015cadd16e4c4857da46"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_lt_contravar.",
                        "VernacExtend",
                        "39f1015e834f9c2b39a61c50e6b9c8cf8a29f32a"
                    ]
                },
                {
                    "command": [
                        "apply Rdiv_lt_0_compat with (1 := Hx0).",
                        "VernacExtend",
                        "7b14bcbeab0105153d125443ef02922105c6b925"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (2 := Rmax_l _ _), Rlt_0_1.",
                        "VernacExtend",
                        "96e5b9abbf868be5a98e5f35362316c08c59845b"
                    ]
                },
                {
                    "command": [
                        "rewrite /ball /= /AbsRing_ball /= /abs /minus /plus /opp /= in Hx.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -/(Rminus _ _) Rminus_0_r Rabs_pos_eq // in Hx.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "exact: Rlt_le.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_Rinv_0_right",
            "line_nb": 129,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eapply filterlim_comp, filterlim_Rinv_0_right.",
                        "VernacExtend",
                        "dda7f53a3cd79ff8fccfe7de8c8a581c59f84dcb"
                    ]
                },
                {
                    "command": [
                        "intros P HP.",
                        "VernacExtend",
                        "55e2f4eebfad5cc358bd93712ab9be7674f934e9"
                    ]
                },
                {
                    "command": [
                        "apply H in HP.",
                        "VernacExtend",
                        "898d7d8dd8d9e005abf96a0ccb67ac75da03e3bd"
                    ]
                },
                {
                    "command": [
                        "generalize (filter_and _ _ H0 HP).",
                        "VernacExtend",
                        "390501b696d567c5fd734441f956505a612688a9"
                    ]
                },
                {
                    "command": [
                        "rewrite /filtermap ; apply filter_imp => y Hy.",
                        "VernacExtend",
                        "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
                    ]
                },
                {
                    "command": [
                        "by apply Hy, Hy.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_Rinv_0_left",
            "line_nb": 154,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eapply filterlim_comp, filterlim_Rinv_0_left.",
                        "VernacExtend",
                        "3679568530f9294cf98b56c2d83c5979b719be06"
                    ]
                },
                {
                    "command": [
                        "intros P HP.",
                        "VernacExtend",
                        "55e2f4eebfad5cc358bd93712ab9be7674f934e9"
                    ]
                },
                {
                    "command": [
                        "apply H in HP.",
                        "VernacExtend",
                        "898d7d8dd8d9e005abf96a0ccb67ac75da03e3bd"
                    ]
                },
                {
                    "command": [
                        "generalize (filter_and _ _ H0 HP).",
                        "VernacExtend",
                        "390501b696d567c5fd734441f956505a612688a9"
                    ]
                },
                {
                    "command": [
                        "rewrite /filtermap ; apply filter_imp => y Hy.",
                        "VernacExtend",
                        "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
                    ]
                },
                {
                    "command": [
                        "by apply Hy, Hy.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterlim_sqrt_p",
            "line_nb": 163,
            "steps": [
                {
                    "command": [
                        "apply is_lim_spec.",
                        "VernacExtend",
                        "6a433fd37843c6d7f4bc73e6cfa945c5042b65eb"
                    ]
                },
                {
                    "command": [
                        "move => M.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists ((Rmax 0 M)\u00b2) => x Hx.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (1 := Rmax_r 0 M).",
                        "VernacExtend",
                        "f81e987896aa096393be688678a254d560083333"
                    ]
                },
                {
                    "command": [
                        "rewrite -(sqrt_Rsqr (Rmax 0 M)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply sqrt_lt_1_alt.",
                        "VernacExtend",
                        "45b4cd2388d55c8102fb6e671b5e2b84734b7c99"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Rle_0_sqr.",
                        "VernacExtend",
                        "dab150eb3bf9ea450741d52bf434375cb024aaf1"
                    ]
                },
                {
                    "command": [
                        "by apply Hx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rmax_l.",
                        "VernacExtend",
                        "e8bdf305d751b877364ec9794b15c2d6e134dc98"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_sqrt_p",
            "line_nb": 175,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eapply filterlim_comp, filterlim_sqrt_p.",
                        "VernacExtend",
                        "486a39bb27a042e3d352b75090f3a7ca38f8c00e"
                    ]
                },
                {
                    "command": [
                        "by apply H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterdiff_sqrt",
            "line_nb": 180,
            "steps": [
                {
                    "command": [
                        "intros Hx.",
                        "VernacExtend",
                        "9276b72df3a882c9b4b954c90d9e870c80a906fc"
                    ]
                },
                {
                    "command": [
                        "apply is_derive_Reals.",
                        "VernacExtend",
                        "50ffedc276e75c32dd6244cd073b4227506b2788"
                    ]
                },
                {
                    "command": [
                        "by apply derivable_pt_lim_sqrt.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nat_to_ring_O",
            "line_nb": 196,
            "steps": [
                {
                    "command": [
                        "rewrite /nat_to_ring sum_n_m_zero //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nat_to_ring_Sn",
            "line_nb": 199,
            "steps": [
                {
                    "command": [
                        "case: n => [ | n] ; rewrite /nat_to_ring.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "rewrite sum_n_n sum_n_m_zero //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite plus_zero_l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite sum_n_Sm //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply le_n_S, le_O_n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_n_pow_smalli",
            "line_nb": 277,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "now apply is_derive_n_unique, is_derive_n_pow_smalli.",
                        "VernacExtend",
                        "74263f03bb2085867e51df221b541fe656c0d983"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_n_pow_bigi",
            "line_nb": 293,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "now apply is_derive_n_unique, is_derive_n_pow_bigi.",
                        "VernacExtend",
                        "bb91c3282b92f72c75f7e07cc8a2d21aa43396a8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_n_pow",
            "line_nb": 297,
            "steps": [
                {
                    "command": [
                        "case: le_dec => H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply Derive_n_pow_smalli.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Derive_n_pow_bigi, not_le.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_derive_n_pow",
            "line_nb": 302,
            "steps": [
                {
                    "command": [
                        "case: i => //= i.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists (Derive_n (fun x : R => x ^ p) (S i) x).",
                        "VernacExtend",
                        "ae0027009bdb588eb6357d7e971057fc9e6bf805"
                    ]
                },
                {
                    "command": [
                        "rewrite Derive_n_pow.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: le_dec => Hip.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply (is_derive_n_pow_smalli (S i)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply (is_derive_n_pow_bigi (S i)) ; omega.",
                        "VernacExtend",
                        "3ad4363a301149e91a6ae94b204975293466491f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exp_ge_taylor",
            "line_nb": 331,
            "steps": [
                {
                    "command": [
                        "move => Hx.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /exp /exist_exp.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: Alembert_C3 => /= y Hy.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Rnot_lt_le => H.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt_0 in H.",
                        "VernacExtend",
                        "cc788f46f0f5b7c476514ba43d78dd77271a6406"
                    ]
                },
                {
                    "command": [
                        "case: (Hy _ H) => N {Hy} Hy.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move: (Hy _ (le_plus_r n N)) => {Hy}.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt.",
                        "VernacExtend",
                        "1f0f6b47a7d49626d97b2585f7610e291096035d"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (2 := Rle_abs _).",
                        "VernacExtend",
                        "72c9ed1eeb9d16ecf7ec04b7601241cd3efc9de9"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat_r.",
                        "VernacExtend",
                        "5ca7acb5e67c7d7a5b6143fd11bc1e75c3e361e4"
                    ]
                },
                {
                    "command": [
                        "elim: N => [ | N IH].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_0_r.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Req_le.",
                        "VernacExtend",
                        "b69ffc9461f465218c69f379ac293728d3f8e7bd"
                    ]
                },
                {
                    "command": [
                        "elim: (n) => {n H} [ | n /= <-].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_comm.",
                        "VernacExtend",
                        "f6a795952024dfb6a8db9b1b3050b14eb7f075aa"
                    ]
                },
                {
                    "command": [
                        "apply f_equal.",
                        "VernacExtend",
                        "ba856cbef3c8e84dcef77c91c8515b497874875b"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_comm.",
                        "VernacExtend",
                        "f6a795952024dfb6a8db9b1b3050b14eb7f075aa"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (1 := IH).",
                        "VernacExtend",
                        "7edff2fefc3e3d55d4db068dd3dc9e178b58a76c"
                    ]
                },
                {
                    "command": [
                        "rewrite -plus_n_Sm.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "move: (n + N)%nat => {n H N IH} n.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /sum_f_R0 -/sum_f_R0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_le_0 ; ring_simplify.",
                        "VernacExtend",
                        "48c96302111e8edc2fcb95e79f4f71c3818d133f"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_pos.",
                        "VernacExtend",
                        "e03207c3cef85471384dc0906485b056bc83a80a"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le, Rinv_0_lt_compat, INR_fact_lt_0.",
                        "VernacExtend",
                        "edb267fcffb9139e886671f7bdf26b5936fd38c0"
                    ]
                },
                {
                    "command": [
                        "by apply pow_le.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_exp_Reals",
            "line_nb": 358,
            "steps": [
                {
                    "command": [
                        "rewrite /exp.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: exist_exp => l /= Hl.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Series.is_series_Reals in Hl.",
                        "VernacExtend",
                        "226e4d3fdbbdf7dc5306961e9dbe57582e49bed1"
                    ]
                },
                {
                    "command": [
                        "move: Hl ; apply Series.is_series_ext => n.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "by rewrite Rmult_comm pow_n_pow.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exp_Reals",
            "line_nb": 365,
            "steps": [
                {
                    "command": [
                        "apply sym_eq, is_pseries_unique.",
                        "VernacExtend",
                        "a2c87e79c4b334f78f1c022570e0c81d8149ca87"
                    ]
                },
                {
                    "command": [
                        "by apply is_exp_Reals.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_exp",
            "line_nb": 395,
            "steps": [
                {
                    "command": [
                        "case: x => [x | | ].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply ex_finite_lim_correct, ex_lim_continuity.",
                        "VernacExtend",
                        "847d805ba107fef6db7a0c6f09c1a75e6c9f3f1d"
                    ]
                },
                {
                    "command": [
                        "apply derivable_continuous_pt, derivable_pt_exp.",
                        "VernacExtend",
                        "f2af8279b06fa099a920dba6566943dd5398c04e"
                    ]
                },
                {
                    "command": [
                        "exists p_infty ; by apply is_lim_exp_p.",
                        "VernacExtend",
                        "1bed9b0fe38de2029a82e9b610831cdebb89793a"
                    ]
                },
                {
                    "command": [
                        "exists 0 ; by apply is_lim_exp_m.",
                        "VernacExtend",
                        "3efdae3ec47c5d4dcaa495bcaa641a21b49f4fa4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_exp",
            "line_nb": 402,
            "steps": [
                {
                    "command": [
                        "apply is_lim_unique.",
                        "VernacExtend",
                        "dae3243103dd458b8bf69808c8c75b5d97ae46f2"
                    ]
                },
                {
                    "command": [
                        "case: x => [x | | ].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_continuity.",
                        "VernacExtend",
                        "86eeb22cc14e496f582b82d29320be34eead1153"
                    ]
                },
                {
                    "command": [
                        "apply derivable_continuous_pt, derivable_pt_exp.",
                        "VernacExtend",
                        "f2af8279b06fa099a920dba6566943dd5398c04e"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_exp_p.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_exp_m.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_div_expm1_0",
            "line_nb": 477,
            "steps": [
                {
                    "command": [
                        "apply is_lim_spec.",
                        "VernacExtend",
                        "6a433fd37843c6d7f4bc73e6cfa945c5042b65eb"
                    ]
                },
                {
                    "command": [
                        "move => eps.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (derivable_pt_lim_exp_0 eps (cond_pos eps)) => delta H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists delta => y Hy Hy0.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite /ball /= /AbsRing_ball /= /minus /plus /opp /= in Hy.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -/(Rminus _ _) Rminus_0_r in Hy.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "move: (H y Hy0 Hy).",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite Rplus_0_l exp_0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_ln_p",
            "line_nb": 497,
            "steps": [
                {
                    "command": [
                        "apply is_lim_spec.",
                        "VernacExtend",
                        "6a433fd37843c6d7f4bc73e6cfa945c5042b65eb"
                    ]
                },
                {
                    "command": [
                        "move => M.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists (exp M) => x Hx.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite -(ln_exp M).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply ln_increasing.",
                        "VernacExtend",
                        "a0b0912d7f10a9c69ccaf4e66f4aa3c1ed788a8b"
                    ]
                },
                {
                    "command": [
                        "apply exp_pos.",
                        "VernacExtend",
                        "e7aede1d8dff8d25c884324d0860ea3be851262c"
                    ]
                },
                {
                    "command": [
                        "by apply Hx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_ln_0",
            "line_nb": 506,
            "steps": [
                {
                    "command": [
                        "intros P [M HM].",
                        "VernacExtend",
                        "912eee4bdf845576ead0eae8eb9e686e21e27a18"
                    ]
                },
                {
                    "command": [
                        "exists (mkposreal (exp M) (exp_pos _)) => x /= Hx Hx0.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply HM.",
                        "VernacExtend",
                        "da44e10176bfb6a0c07c29369b62e8b925d50bc1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (ln_exp M).",
                        "VernacExtend",
                        "895a3c8bd54c9cba8e8fa1cd5906d11fb0174c08"
                    ]
                },
                {
                    "command": [
                        "apply ln_increasing.",
                        "VernacExtend",
                        "a0b0912d7f10a9c69ccaf4e66f4aa3c1ed788a8b"
                    ]
                },
                {
                    "command": [
                        "exact Hx0.",
                        "VernacExtend",
                        "ccdb2933351c0c0e69d575ac7620a10568c4e3b0"
                    ]
                },
                {
                    "command": [
                        "rewrite /ball /= /AbsRing_ball /= /abs /minus /plus /opp /= in Hx.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -/(Rminus _ _) Rminus_0_r Rabs_pos_eq in Hx.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "exact Hx.",
                        "VernacExtend",
                        "c13c54106cd84aeca38c2dd70bf8e46a5be5e1eb"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_le.",
                        "VernacExtend",
                        "3fa67bbd472123a7abc1f777aecc643fb3862e46"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_div_ln1p_0",
            "line_nb": 611,
            "steps": [
                {
                    "command": [
                        "apply is_lim_spec.",
                        "VernacExtend",
                        "6a433fd37843c6d7f4bc73e6cfa945c5042b65eb"
                    ]
                },
                {
                    "command": [
                        "move => eps.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (derivable_pt_lim_ln 1 (Rlt_0_1) eps (cond_pos eps)) => delta H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists delta => y Hy Hy0.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite /ball /= /AbsRing_ball /= /minus /plus /opp /= in Hy.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite /= -/(Rminus _ _) Rminus_0_r in Hy.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "move: (H y Hy0 Hy).",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite ln_1 Rinv_1 Rminus_0_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_sinc_0",
            "line_nb": 621,
            "steps": [
                {
                    "command": [
                        "apply is_lim_spec.",
                        "VernacExtend",
                        "6a433fd37843c6d7f4bc73e6cfa945c5042b65eb"
                    ]
                },
                {
                    "command": [
                        "move => eps.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (derivable_pt_lim_sin_0 eps (cond_pos eps)) => delta H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists delta => y Hy Hy0.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite /ball /= /AbsRing_ball /= /minus /plus /opp /= in Hy.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite /= -/(Rminus _ _) Rminus_0_r in Hy.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "move: (H y Hy0 Hy).",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite Rplus_0_l sin_0 Rminus_0_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "atan_Reals",
            "line_nb": 674,
            "steps": [
                {
                    "command": [
                        "wlog: x / (0 <= x) => [Hw | Hx0] Hx.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: (Rle_lt_dec 0 x) => Hx0.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply Hw.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -{1}(Ropp_involutive x) atan_opp Hw.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "replace ((- x) ^ 2) with (x^2) by ring.",
                        "VernacExtend",
                        "c9cccb98692d6274885f591f543c558a6b46f0fe"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_le_cancel ; rewrite Ropp_involutive Ropp_0 ; by left.",
                        "VernacExtend",
                        "0bea02a2ecebbf94a0e3ce4a30b94a8414279a19"
                    ]
                },
                {
                    "command": [
                        "by rewrite Rabs_Ropp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_pos_eq // in Hx.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: Hx0 => Hx0.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite atan_eq_ps_atan ; try by split.",
                        "VernacExtend",
                        "768b2f88f8c65ebded32bd7dc9c8ffec8f100548"
                    ]
                },
                {
                    "command": [
                        "rewrite /ps_atan.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: Ratan.in_int => H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: ps_atan_exists_1 => ps Hps.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq.",
                        "VernacExtend",
                        "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
                    ]
                },
                {
                    "command": [
                        "rewrite -Series.Series_scal_l.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Series.is_series_unique.",
                        "VernacExtend",
                        "0bc6daeaf5ff826641b702f4bcb7aa11fe4d68bc"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_Reals in Hps.",
                        "VernacExtend",
                        "37c10ad4144aed42cbf7811c7b324bf46f22b13f"
                    ]
                },
                {
                    "command": [
                        "move: Hps ; apply is_lim_seq_ext => n.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "rewrite -sum_n_Reals.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply sum_n_ext => k.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite /tg_alt /Ratan_seq S_INR !plus_INR.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite pow_add -pow_mult.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "simpl ; field.",
                        "VernacExtend",
                        "db84c8cac4d419667c5dc078fea83a0aa7cc0138"
                    ]
                },
                {
                    "command": [
                        "rewrite -plus_INR -S_INR.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rgt_not_eq, (lt_INR 0), lt_O_Sn.",
                        "VernacExtend",
                        "e84d95bc6e9152d6fa5b378b137031bcff6cb405"
                    ]
                },
                {
                    "command": [
                        "contradict H ; split.",
                        "VernacExtend",
                        "cf354d712bdfdd7fd441911c58c781fbec9a5f03"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with 0.",
                        "VernacExtend",
                        "6fc7cbbd3bf64d4d7a487e9e8054a92c4237c86a"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_le_0 ; ring_simplify ; by apply Rle_0_1.",
                        "VernacExtend",
                        "829f68a7bd9f898cf068a2f4a9f2a10ad267a59c"
                    ]
                },
                {
                    "command": [
                        "by left.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by left.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -Hx0 atan_0 Rmult_0_l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}