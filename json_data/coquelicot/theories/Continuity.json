{
    "filename": "theories/Continuity.v",
    "coq_project": "coquelicot",
    "vernac_cmds": [
        [
            "Require Import Reals.",
            "VernacRequire",
            "45681fd6487015ca7aa8c8e9b408e40e3103ca14"
        ],
        [
            "Require Import mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "85e251063dc2b5a9653f7bb76dcd176ed36b42a9"
        ],
        [
            "Require Import Rcomplements Rbar Hierarchy.",
            "VernacRequire",
            "237a5398e3ccf4816e2b184e0671be9026851920"
        ],
        [
            "Require Import Compactness Lim_seq.",
            "VernacRequire",
            "e4cec28cf5982dc1d5364838512bd3e9ce0b0121"
        ],
        [
            "Definition is_lim (f : R -> R) (x l : Rbar) := filterlim f (Rbar_locally' x) (Rbar_locally l).",
            "VernacDefinition",
            "4a9e4b0c4edccba0dab93e23e108d66c66dd584e"
        ],
        [
            "Definition is_lim' (f : R -> R) (x l : Rbar) := match l with | Finite l => forall eps : posreal, Rbar_locally' x (fun y => Rabs (f y - l) < eps) | p_infty => forall M : R, Rbar_locally' x (fun y => M < f y) | m_infty => forall M : R, Rbar_locally' x (fun y => f y < M) end.",
            "VernacDefinition",
            "172ef7ff7ec62b64a8c910dadd0272d59c4e5fb7"
        ],
        [
            "Definition ex_lim (f : R -> R) (x : Rbar) := exists l : Rbar, is_lim f x l.",
            "VernacDefinition",
            "ba337fb23cb8b311852904d2637aa27c36142813"
        ],
        [
            "Definition ex_finite_lim (f : R -> R) (x : Rbar) := exists l : R, is_lim f x l.",
            "VernacDefinition",
            "be957947096bc0599870f5f7ce455291ff7ee011"
        ],
        [
            "Definition Lim (f : R -> R) (x : Rbar) := Lim_seq (fun n => f (Rbar_loc_seq x n)).",
            "VernacDefinition",
            "4c195de062e1f468c6c59d7dabe37e582b7d2519"
        ],
        [
            "Lemma is_lim_spec : forall f x l, is_lim' f x l <-> is_lim f x l.",
            "VernacStartTheoremProof",
            "8d4c49de36d53735ee766914db17b2e47cf9832d"
        ],
        [
            "destruct l as [l| |] ; split.",
            "VernacExtend",
            "229a2f1d639d91740395bce4727cdf4cd178db1d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros H P [eps LP].",
            "VernacExtend",
            "17632fc297e5ea1852f56e45f60d632d6c052b0d"
        ],
        [
            "unfold filtermap.",
            "VernacExtend",
            "ab2a046933e4dbb14f70f2b6f6c5f6e701f158bb"
        ],
        [
            "generalize (H eps).",
            "VernacExtend",
            "b4138fee14edae555ad11b093ba7215cabeededb"
        ],
        [
            "apply filter_imp.",
            "VernacExtend",
            "cd5d68d491d9b471ebb7deccb08d7a71ba953368"
        ],
        [
            "intros u.",
            "VernacExtend",
            "e9ac7498bea712c86b519a88f31159d86dff11e7"
        ],
        [
            "apply LP.",
            "VernacExtend",
            "099c424a8903c296b67973586f11183c07d7f16d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros H eps.",
            "VernacExtend",
            "4de6f57925203b02f76ebe50fd9dc4ae88fd01e6"
        ],
        [
            "apply (H (fun y => Rabs (y - l) < eps)).",
            "VernacExtend",
            "dd5687257e1b15f7261abe488a72f2a874f81162"
        ],
        [
            "now exists eps.",
            "VernacExtend",
            "231859d3bd429d5cb9a46c5a8150f7440e5ea441"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros H P [M LP].",
            "VernacExtend",
            "86538739fbff626e1019f8ae61bcd24b26a35c0a"
        ],
        [
            "unfold filtermap.",
            "VernacExtend",
            "ab2a046933e4dbb14f70f2b6f6c5f6e701f158bb"
        ],
        [
            "generalize (H M).",
            "VernacExtend",
            "c592c18b33e8581861823dd077ce9cfaa589dfdc"
        ],
        [
            "apply filter_imp.",
            "VernacExtend",
            "cd5d68d491d9b471ebb7deccb08d7a71ba953368"
        ],
        [
            "intros u.",
            "VernacExtend",
            "e9ac7498bea712c86b519a88f31159d86dff11e7"
        ],
        [
            "apply LP.",
            "VernacExtend",
            "099c424a8903c296b67973586f11183c07d7f16d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros H M.",
            "VernacExtend",
            "60a3e448289d314561e45ebdbf40b346bbb6454f"
        ],
        [
            "apply (H (fun y => M < y)).",
            "VernacExtend",
            "8eb7e7ad631524d7e01530bf4abbb07a90b0e8d4"
        ],
        [
            "now exists M.",
            "VernacExtend",
            "d209ee394e51e963b50da18371a61ccbd1897fc7"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros H P [M LP].",
            "VernacExtend",
            "86538739fbff626e1019f8ae61bcd24b26a35c0a"
        ],
        [
            "unfold filtermap.",
            "VernacExtend",
            "ab2a046933e4dbb14f70f2b6f6c5f6e701f158bb"
        ],
        [
            "generalize (H M).",
            "VernacExtend",
            "c592c18b33e8581861823dd077ce9cfaa589dfdc"
        ],
        [
            "apply filter_imp.",
            "VernacExtend",
            "cd5d68d491d9b471ebb7deccb08d7a71ba953368"
        ],
        [
            "intros u.",
            "VernacExtend",
            "e9ac7498bea712c86b519a88f31159d86dff11e7"
        ],
        [
            "apply LP.",
            "VernacExtend",
            "099c424a8903c296b67973586f11183c07d7f16d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros H M.",
            "VernacExtend",
            "60a3e448289d314561e45ebdbf40b346bbb6454f"
        ],
        [
            "apply (H (fun y => y < M)).",
            "VernacExtend",
            "264b26dcb620e6abe0b62c58907181fd3b89fe63"
        ],
        [
            "now exists M.",
            "VernacExtend",
            "d209ee394e51e963b50da18371a61ccbd1897fc7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_Reals_0 (f : R -> R) (x l : R) : is_lim f x l -> limit1_in f (fun y => y <> x) l x.",
            "VernacStartTheoremProof",
            "a76413c001855924f446024484d938619dbaab7f"
        ],
        [
            "intros H e He.",
            "VernacExtend",
            "70afb674b1014d1c35e434b592e205b41b4947cf"
        ],
        [
            "apply is_lim_spec in H.",
            "VernacExtend",
            "87fcfb23448786b12058195bd853b7f81665a2e1"
        ],
        [
            "destruct (H (mkposreal e He)) as [d Hd].",
            "VernacExtend",
            "bda401a4357073944d97026518c86f6029e61b95"
        ],
        [
            "exists d ; split.",
            "VernacExtend",
            "a1fcb883b1c5fcd25ed6ebd6b983148f883d1f7b"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "intros y [H1 H2].",
            "VernacExtend",
            "0fdcac9841d84787d9eab46d365b0b0590398583"
        ],
        [
            "now apply (Hd y).",
            "VernacExtend",
            "a15b3ec5e32a1e34b93d97774ffd4325f52dc921"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_Reals_1 (f : R -> R) (x l : R) : limit1_in f (fun y => y <> x) l x -> is_lim f x l.",
            "VernacStartTheoremProof",
            "ebdf2f3b85bb10e66265561b97832626058d4602"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "apply is_lim_spec.",
            "VernacExtend",
            "6a433fd37843c6d7f4bc73e6cfa945c5042b65eb"
        ],
        [
            "intros [e He].",
            "VernacExtend",
            "a57ae437db144953696b7993fbc2a3bfacab22c3"
        ],
        [
            "destruct (H e He) as [d [Hd H']].",
            "VernacExtend",
            "bb92492963f174c52a131b8a12f28278557b3238"
        ],
        [
            "exists (mkposreal d Hd).",
            "VernacExtend",
            "90aa23f9faf6a31c1d9b6f6a46be612c041c12a1"
        ],
        [
            "intros y Hy Hxy.",
            "VernacExtend",
            "640e7d9fe65dd03c3b92d220f090a5f38a7f2fae"
        ],
        [
            "apply (H' y).",
            "VernacExtend",
            "8c40b930406ddaf1ef2e878283416a4efbe6b7ae"
        ],
        [
            "now split.",
            "VernacExtend",
            "1791b9ff1e86fc70e4ee1a32bce684778be25d40"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_Reals (f : R -> R) (x l : R) : is_lim f x l <-> limit1_in f (fun y => y <> x) l x.",
            "VernacStartTheoremProof",
            "de900161ae5a713b1adaa71be542ed6c99e5ef1b"
        ],
        [
            "split ; [apply is_lim_Reals_0|apply is_lim_Reals_1].",
            "VernacExtend",
            "7cbbc9e8760ed2250954eaedb6e0b5a0866923e3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_comp' : forall {T} {F} {FF : @Filter T F} (f : T -> R) (g : R -> R) (x l : Rbar), filterlim f F (Rbar_locally x) -> is_lim g x l -> F (fun y => Finite (f y) <> x) -> filterlim (fun y => g (f y)) F (Rbar_locally l).",
            "VernacStartTheoremProof",
            "93cafe13ec9585769a69e9601783e60b26944c89"
        ],
        [
            "intros T F FF f g x l Lf Lg Hf.",
            "VernacExtend",
            "a93fb6a29d48e040127b6ee71cc0e548dcc71571"
        ],
        [
            "revert Lg.",
            "VernacExtend",
            "f7cc808da08e63345108abf9cad809c2d236f1a3"
        ],
        [
            "apply filterlim_comp.",
            "VernacExtend",
            "119a797e3832e9c043bf4d4800e025d17a046515"
        ],
        [
            "intros P HP.",
            "VernacExtend",
            "55e2f4eebfad5cc358bd93712ab9be7674f934e9"
        ],
        [
            "destruct x as [x| |] ; try now apply Lf.",
            "VernacExtend",
            "15d3662aa1728559ff2b7ca2e317b4f87c58a34e"
        ],
        [
            "specialize (Lf _ HP).",
            "VernacExtend",
            "0e6756721684b1f5b73cb27e381fa054c8151c5c"
        ],
        [
            "unfold filtermap in Lf |- *.",
            "VernacExtend",
            "27c519872584f16d5932de5e9daa34127df3877f"
        ],
        [
            "generalize (filter_and _ _ Hf Lf).",
            "VernacExtend",
            "20a5687089d1aac01a54803810c50d8399a762a8"
        ],
        [
            "apply filter_imp.",
            "VernacExtend",
            "cd5d68d491d9b471ebb7deccb08d7a71ba953368"
        ],
        [
            "intros y [H Hi].",
            "VernacExtend",
            "0d2f371bcf92b56311491d199f09f18e4b343a7f"
        ],
        [
            "apply Hi.",
            "VernacExtend",
            "b7959f73b24cea8febda147e5d8d404627f1652f"
        ],
        [
            "contradict H.",
            "VernacExtend",
            "0da4c7d87991a3ed628c796c81ed5112e2aac241"
        ],
        [
            "now apply f_equal.",
            "VernacExtend",
            "2be51066ac0713afbd2686f67010448cf5cd7ac9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_comp_seq (f : R -> R) (u : nat -> R) (x l : Rbar) : is_lim f x l -> eventually (fun n => Finite (u n) <> x) -> is_lim_seq u x -> is_lim_seq (fun n => f (u n)) l.",
            "VernacStartTheoremProof",
            "2f3b3aa10161183690867b16528cb95e79d529b3"
        ],
        [
            "intros Lf Hu Lu.",
            "VernacExtend",
            "de8f4d7f078c13ef5bae75c9ba41d304f8319bfd"
        ],
        [
            "exact (is_lim_comp' u f x l Lu Lf Hu).",
            "VernacExtend",
            "72a51b8dd8b37cce68e6175b16b8931aa71f1772"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_unique (f : R -> R) (x l : Rbar) : is_lim f x l -> Lim f x = l.",
            "VernacStartTheoremProof",
            "75fc7bd5f720e3b3035dfc4b19d158075b557032"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Lim.",
            "VernacExtend",
            "c5b5487cbe85dd91f8daa5ba8b3a6b0b3d1184bd"
        ],
        [
            "rewrite (is_lim_seq_unique _ l) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply (is_lim_comp_seq f _ x l H).",
            "VernacExtend",
            "a10ee1a7399cc1fe2be09d84e752f6fa1fff0b75"
        ],
        [
            "exists 1%nat => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: x {H} => [x | | ] //=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rbar_finite_neq, Rgt_not_eq, Rminus_lt_0.",
            "VernacExtend",
            "98120fd0a7ab0f7681b3342ad8a0d68a5a087ca1"
        ],
        [
            "ring_simplify.",
            "VernacExtend",
            "31578f61427562191ce5389abf97dbf9985ea04c"
        ],
        [
            "by apply RinvN_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply is_lim_seq_Rbar_loc_seq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_correct (f : R -> R) (x : Rbar) : ex_lim f x -> is_lim f x (Lim f x).",
            "VernacStartTheoremProof",
            "5bd8e14ea1794e6b6358c00f3e7dfb126cd42080"
        ],
        [
            "intros (l,H).",
            "VernacExtend",
            "3fda3140394abbcf85ec93d7935c462cf104be2c"
        ],
        [
            "replace (Lim f x) with l.",
            "VernacExtend",
            "a3cec296ae0f4db5f4061edebb84d93d58a11dd2"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply sym_eq, is_lim_unique, H.",
            "VernacExtend",
            "5224fd389aa26ed12a23d057da56ea944ffcdbb4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_finite_lim_correct (f : R -> R) (x : Rbar) : ex_finite_lim f x <-> ex_lim f x /\\ is_finite (Lim f x).",
            "VernacStartTheoremProof",
            "640e89086775097ac145d2775ce33a668a6b5bbc"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "case => l Hf.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (is_lim_unique f x l Hf) => Hf0.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "by exists l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite Hf0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case ; case => l Hf Hf0.",
            "VernacExtend",
            "f5c637551d7ace847ffea0c2c9ae9f848858e99e"
        ],
        [
            "exists (real l).",
            "VernacExtend",
            "1c463d8f7130cd5cea0475d8d2603b9041eda584"
        ],
        [
            "rewrite -(is_lim_unique _ _ _ Hf).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Hf0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (is_lim_unique _ _ _ Hf).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_correct' (f : R -> R) (x : Rbar) : ex_finite_lim f x -> is_lim f x (real (Lim f x)).",
            "VernacStartTheoremProof",
            "10f96e8e95a40c46f2d66a1422cfe72c5e3d29c0"
        ],
        [
            "intro Hf.",
            "VernacExtend",
            "6f8097812b59a70e6a2905483ee62407e17f44b0"
        ],
        [
            "apply ex_finite_lim_correct in Hf.",
            "VernacExtend",
            "3a9a1a2380687794a8f6860f224ea5f88706e821"
        ],
        [
            "rewrite (proj2 Hf).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Lim_correct, Hf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_ext_loc (f g : R -> R) (x l : Rbar) : Rbar_locally' x (fun y => f y = g y) -> is_lim f x l -> is_lim g x l.",
            "VernacStartTheoremProof",
            "f734340c47952bbef52f474b94a1af08c311298d"
        ],
        [
            "apply filterlim_ext_loc.",
            "VernacExtend",
            "b1bfeab64804f9bca017cf3228230f12ef2c8f11"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_ext_loc (f g : R -> R) (x : Rbar) : Rbar_locally' x (fun y => f y = g y) -> ex_lim f x -> ex_lim g x.",
            "VernacStartTheoremProof",
            "bd311a5ef7255cf3b6e86847be44db2ab5d72b14"
        ],
        [
            "move => H [l Hf].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists l.",
            "VernacExtend",
            "9ca96dacfce153d20a69dd7ea7c7254236074950"
        ],
        [
            "by apply is_lim_ext_loc with f.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_ext_loc (f g : R -> R) (x : Rbar) : Rbar_locally' x (fun y => f y = g y) -> Lim g x = Lim f x.",
            "VernacStartTheoremProof",
            "3bce4c03a7657f906aee78c08fb17f7654e13ee7"
        ],
        [
            "move => H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "apply Lim_seq_ext_loc.",
            "VernacExtend",
            "08e7386a15ead02f2e0ccc11bb83c0615aaf6aaa"
        ],
        [
            "apply: filterlim_Rbar_loc_seq H.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_ext (f g : R -> R) (x l : Rbar) : (forall y, f y = g y) -> is_lim f x l -> is_lim g x l.",
            "VernacStartTheoremProof",
            "48149a87fa55112619b2c458cba93fddb1ad4e17"
        ],
        [
            "move => H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_lim_ext_loc.",
            "VernacExtend",
            "4a4eb0ae16af7dbc8266c794ebf260b2c84d5b23"
        ],
        [
            "by apply filter_forall.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_ext (f g : R -> R) (x : Rbar) : (forall y, f y = g y) -> ex_lim f x -> ex_lim g x.",
            "VernacStartTheoremProof",
            "abc2a2d6e3ec7c2945a2b8ccfbf797b4a8bfa9b9"
        ],
        [
            "move => H [l Hf].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists l.",
            "VernacExtend",
            "9ca96dacfce153d20a69dd7ea7c7254236074950"
        ],
        [
            "by apply is_lim_ext with f.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_ext (f g : R -> R) (x : Rbar) : (forall y, f y = g y) -> Lim g x = Lim f x.",
            "VernacStartTheoremProof",
            "95554759f09463a85ecfb44d68e7f3bec0a937b8"
        ],
        [
            "move => H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Lim_ext_loc.",
            "VernacExtend",
            "e199927ab5d3aaa31f7bd3fd6a60ecfa89e7c3d3"
        ],
        [
            "by apply filter_forall.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_comp (f g : R -> R) (x k l : Rbar) : is_lim f l k -> is_lim g x l -> Rbar_locally' x (fun y => Finite (g y) <> l) -> is_lim (fun x => f (g x)) x k.",
            "VernacStartTheoremProof",
            "14c086916bf293e9688b6d95bfc26b6dbd9b4f7b"
        ],
        [
            "intros Lf Lg Hg.",
            "VernacExtend",
            "be438088f1b3d7425e001b98f206d6043e96668f"
        ],
        [
            "by apply (is_lim_comp' g f l k Lg Lf Hg).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_comp (f g : R -> R) (x : Rbar) : ex_lim f (Lim g x) -> ex_lim g x -> Rbar_locally' x (fun y => Finite (g y) <> Lim g x) -> ex_lim (fun x => f (g x)) x.",
            "VernacStartTheoremProof",
            "da4fa87e1eb0b193f64862575f0fc948a4df50d7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exists (Lim f (Lim g x)).",
            "VernacExtend",
            "a721ee9dd99c4b43b0449de10f32ee999f5130ed"
        ],
        [
            "apply is_lim_comp with (Lim g x).",
            "VernacExtend",
            "13366a1f6b08f1c45695b30cf61fda6fcad9aa4c"
        ],
        [
            "by apply Lim_correct.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Lim_correct.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply H1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_comp (f g : R -> R) (x : Rbar) : ex_lim f (Lim g x) -> ex_lim g x -> Rbar_locally' x (fun y => Finite (g y) <> Lim g x) -> Lim (fun x => f (g x)) x = Lim f (Lim g x).",
            "VernacStartTheoremProof",
            "aa60a054528b7d7664c46567e1654ad305ae446f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply is_lim_unique.",
            "VernacExtend",
            "dae3243103dd458b8bf69808c8c75b5d97ae46f2"
        ],
        [
            "apply is_lim_comp with (Lim g x).",
            "VernacExtend",
            "13366a1f6b08f1c45695b30cf61fda6fcad9aa4c"
        ],
        [
            "by apply Lim_correct.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Lim_correct.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply H1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_id (x : Rbar) : is_lim (fun y => y) x x.",
            "VernacStartTheoremProof",
            "1bfb866c023f249a0361aa442fb59a41474c2947"
        ],
        [
            "intros P HP.",
            "VernacExtend",
            "55e2f4eebfad5cc358bd93712ab9be7674f934e9"
        ],
        [
            "apply filterlim_id.",
            "VernacExtend",
            "0c9885f23d2ca915379801b6ded9080d6c98b8f7"
        ],
        [
            "now apply Rbar_locally'_le.",
            "VernacExtend",
            "268451f0e2e4ee9da61fb30e84f2b2c5cb30a995"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_id (x : Rbar) : ex_lim (fun y => y) x.",
            "VernacStartTheoremProof",
            "db726c9ba0066b34cd94ce4e014edb832d00f8a9"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "by apply is_lim_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_id (x : Rbar) : Lim (fun y => y) x = x.",
            "VernacStartTheoremProof",
            "0e9424fb540c83945aaa19245e63cd623b4ce2a3"
        ],
        [
            "apply is_lim_unique.",
            "VernacExtend",
            "dae3243103dd458b8bf69808c8c75b5d97ae46f2"
        ],
        [
            "by apply is_lim_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_const (a : R) (x : Rbar) : is_lim (fun _ => a) x a.",
            "VernacStartTheoremProof",
            "c8ecd4bd499b58fadbec844b4d01206531994a81"
        ],
        [
            "intros P HP.",
            "VernacExtend",
            "55e2f4eebfad5cc358bd93712ab9be7674f934e9"
        ],
        [
            "now apply filterlim_const.",
            "VernacExtend",
            "f42434f4dc7bd1f6f31ed0d58c195d4a0985469b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_const (a : R) (x : Rbar) : ex_lim (fun _ => a) x.",
            "VernacStartTheoremProof",
            "bc8fceecfa8a14f92c47a8fede93c6de18e08eae"
        ],
        [
            "exists a.",
            "VernacExtend",
            "59cc5697e7369be65591d2d5e6ad6fd701682809"
        ],
        [
            "by apply is_lim_const.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_const (a : R) (x : Rbar) : Lim (fun _ => a) x = a.",
            "VernacStartTheoremProof",
            "73b648a919be390fa22ebd7a8c1616e44e08adbf"
        ],
        [
            "apply is_lim_unique.",
            "VernacExtend",
            "dae3243103dd458b8bf69808c8c75b5d97ae46f2"
        ],
        [
            "by apply is_lim_const.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_opp (f : R -> R) (x l : Rbar) : is_lim f x l -> is_lim (fun y => - f y) x (Rbar_opp l).",
            "VernacStartTheoremProof",
            "a7dfa5a9ad34bc11fe8ed3fab73b65858b376c6d"
        ],
        [
            "intros Cf.",
            "VernacExtend",
            "c0908e95f513cc0ceca49df41b5b3b64dbe4f821"
        ],
        [
            "eapply filterlim_comp.",
            "VernacExtend",
            "887c72ce037fc4dc1c63092170c000188c601e2f"
        ],
        [
            "apply Cf.",
            "VernacExtend",
            "50610f46fbfa53c93c9fcf1f56f87527a14f990a"
        ],
        [
            "apply filterlim_Rbar_opp.",
            "VernacExtend",
            "4813069cfd33626caced6e914153ee6c7c2abc1e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_opp (f : R -> R) (x : Rbar) : ex_lim f x -> ex_lim (fun y => - f y) x.",
            "VernacStartTheoremProof",
            "ebf5b8e33144b1e53c4c095454aadd50d7979c29"
        ],
        [
            "case => l Hf.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (Rbar_opp l).",
            "VernacExtend",
            "b2e1d0ad8013d1119a747b3f3221ab5c396dcb72"
        ],
        [
            "by apply is_lim_opp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_opp (f : R -> R) (x : Rbar) : Lim (fun y => - f y) x = Rbar_opp (Lim f x).",
            "VernacStartTheoremProof",
            "1ab2159cdb28ab265d67bce579544ba72e10f6a0"
        ],
        [
            "rewrite -Lim_seq_opp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Lim_seq_ext.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_plus (f g : R -> R) (x lf lg l : Rbar) : is_lim f x lf -> is_lim g x lg -> is_Rbar_plus lf lg l -> is_lim (fun y => f y + g y) x l.",
            "VernacStartTheoremProof",
            "309e7b987283cdf0061dea44114d3d05b122cf8f"
        ],
        [
            "intros Cf Cg Hp.",
            "VernacExtend",
            "91116e26604642b0790bbcebf0dff367a247fb27"
        ],
        [
            "eapply filterlim_comp_2 ; try eassumption.",
            "VernacExtend",
            "7c3053626bc57cbf6f1cfd59e4d64fef6c071b19"
        ],
        [
            "by apply filterlim_Rbar_plus.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_plus' (f g : R -> R) (x : Rbar) (lf lg : R) : is_lim f x lf -> is_lim g x lg -> is_lim (fun y => f y + g y) x (lf + lg).",
            "VernacStartTheoremProof",
            "444959dc7f9566c9c81b1703baef5aaed955cad4"
        ],
        [
            "intros Hf Hg.",
            "VernacExtend",
            "9cea10f3019eec1e1c1dcd5d69eef2f9cbe47708"
        ],
        [
            "eapply is_lim_plus.",
            "VernacExtend",
            "716ead8934c013c4d4668980097b9e8b4ce42906"
        ],
        [
            "by apply Hf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_plus (f g : R -> R) (x : Rbar) : ex_lim f x -> ex_lim g x -> ex_Rbar_plus (Lim f x) (Lim g x) -> ex_lim (fun y => f y + g y) x.",
            "VernacStartTheoremProof",
            "8c4cb1943c8b5c912f7c72349534c113abec7582"
        ],
        [
            "move => /Lim_correct Hf /Lim_correct Hg Hl.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists (Rbar_plus (Lim f x) (Lim g x)).",
            "VernacExtend",
            "b2bb147926032d9857504b38fafc2a1e9b2a4755"
        ],
        [
            "eapply is_lim_plus ; try eassumption.",
            "VernacExtend",
            "87070a6a62ad336bc9cfeec05210a8d5d7b7b3c3"
        ],
        [
            "by apply Rbar_plus_correct.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_plus (f g : R -> R) (x : Rbar) : ex_lim f x -> ex_lim g x -> ex_Rbar_plus (Lim f x) (Lim g x) -> Lim (fun y => f y + g y) x = Rbar_plus (Lim f x) (Lim g x).",
            "VernacStartTheoremProof",
            "b0274b945f0c925027c2418a4cb6bb6ec16c463e"
        ],
        [
            "move => /Lim_correct Hf /Lim_correct Hg Hl.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_lim_unique.",
            "VernacExtend",
            "dae3243103dd458b8bf69808c8c75b5d97ae46f2"
        ],
        [
            "eapply is_lim_plus ; try eassumption.",
            "VernacExtend",
            "87070a6a62ad336bc9cfeec05210a8d5d7b7b3c3"
        ],
        [
            "by apply Rbar_plus_correct.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_minus (f g : R -> R) (x lf lg l : Rbar) : is_lim f x lf -> is_lim g x lg -> is_Rbar_minus lf lg l -> is_lim (fun y => f y - g y) x l.",
            "VernacStartTheoremProof",
            "10fc94182a16292e613765a357c9a6e792db8723"
        ],
        [
            "move => Hf Hg Hl.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "eapply is_lim_plus ; try eassumption.",
            "VernacExtend",
            "87070a6a62ad336bc9cfeec05210a8d5d7b7b3c3"
        ],
        [
            "now apply is_lim_opp.",
            "VernacExtend",
            "a8d648c4e7204501001cc34972453bef98f3f02f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_minus' (f g : R -> R) (x : Rbar) (lf lg : R) : is_lim f x lf -> is_lim g x lg -> is_lim (fun y => f y - g y) x (lf - lg).",
            "VernacStartTheoremProof",
            "133110c0473b24235383bd8b2d02b537d8d4f23f"
        ],
        [
            "intros Hf Hg.",
            "VernacExtend",
            "9cea10f3019eec1e1c1dcd5d69eef2f9cbe47708"
        ],
        [
            "eapply is_lim_minus ; try eassumption.",
            "VernacExtend",
            "b8d6887d9918c2d5249bf27526fcb18468744c97"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_minus (f g : R -> R) (x : Rbar) : ex_lim f x -> ex_lim g x -> ex_Rbar_minus (Lim f x) (Lim g x) -> ex_lim (fun y => f y - g y) x.",
            "VernacStartTheoremProof",
            "3f0b83445eaa160ed5c0a17cda64ee4eeac03d37"
        ],
        [
            "move => Hf Hg Hl.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply ex_lim_plus.",
            "VernacExtend",
            "711ba0fa2d5fe08f639364d2c56cc8853566641a"
        ],
        [
            "by apply Hf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply ex_lim_opp.",
            "VernacExtend",
            "b58f5e7435e5ae1a9ec82a52ab939d95a1ca465e"
        ],
        [
            "by apply Hg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Lim_opp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Hl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_minus (f g : R -> R) (x : Rbar) : ex_lim f x -> ex_lim g x -> ex_Rbar_minus (Lim f x) (Lim g x) -> Lim (fun y => f y - g y) x = Rbar_minus (Lim f x) (Lim g x).",
            "VernacStartTheoremProof",
            "e277efbed714806fed6de4b5e06f9581d301f060"
        ],
        [
            "move => Hf Hg Hl.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite Lim_plus.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite Lim_opp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply ex_lim_opp.",
            "VernacExtend",
            "b58f5e7435e5ae1a9ec82a52ab939d95a1ca465e"
        ],
        [
            "by apply Hg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Lim_opp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Hl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_inv (f : R -> R) (x l : Rbar) : is_lim f x l -> l <> 0 -> is_lim (fun y => / f y) x (Rbar_inv l).",
            "VernacStartTheoremProof",
            "dad68e8f22f67df213ff0c27d92f6a56fb1b08d2"
        ],
        [
            "intros Hf Hl.",
            "VernacExtend",
            "31e2e76220ee2a0b224707d0e1f6e31a0bd0a6e6"
        ],
        [
            "apply filterlim_comp with (1 := Hf).",
            "VernacExtend",
            "209cf5da6d51c8d7df4d7d409f93566eeae11560"
        ],
        [
            "now apply filterlim_Rbar_inv.",
            "VernacExtend",
            "37c75cbd290513ba25ace90e324a1eea791eb489"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_inv (f : R -> R) (x : Rbar) : ex_lim f x -> Lim f x <> 0 -> ex_lim (fun y => / f y) x.",
            "VernacStartTheoremProof",
            "773ecdb24391f1ebf55331b61e8b49f6ea02fb99"
        ],
        [
            "move => /Lim_correct Hf Hlf.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists (Rbar_inv (Lim f x)).",
            "VernacExtend",
            "97f50980f8a8cb8ebd179c99e598dedb1b24f8fd"
        ],
        [
            "by apply is_lim_inv.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_inv (f : R -> R) (x : Rbar) : ex_lim f x -> Lim f x <> 0 -> Lim (fun y => / f y) x = Rbar_inv (Lim f x).",
            "VernacStartTheoremProof",
            "767bb23c8bd8fc5991b68e1b438fa3dd5ae7c5ba"
        ],
        [
            "move => /Lim_correct Hf Hlf.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_lim_unique.",
            "VernacExtend",
            "dae3243103dd458b8bf69808c8c75b5d97ae46f2"
        ],
        [
            "by apply is_lim_inv.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_mult (f g : R -> R) (x lf lg : Rbar) : is_lim f x lf -> is_lim g x lg -> ex_Rbar_mult lf lg -> is_lim (fun y => f y * g y) x (Rbar_mult lf lg).",
            "VernacStartTheoremProof",
            "675f08976cb706a0fd27c45ff9638c0e4a4854a8"
        ],
        [
            "intros Cf Cg Hp.",
            "VernacExtend",
            "91116e26604642b0790bbcebf0dff367a247fb27"
        ],
        [
            "eapply filterlim_comp_2 ; try eassumption.",
            "VernacExtend",
            "7c3053626bc57cbf6f1cfd59e4d64fef6c071b19"
        ],
        [
            "by apply filterlim_Rbar_mult, Rbar_mult_correct.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_mult (f g : R -> R) (x : Rbar) : ex_lim f x -> ex_lim g x -> ex_Rbar_mult (Lim f x) (Lim g x) -> ex_lim (fun y => f y * g y) x.",
            "VernacStartTheoremProof",
            "33c5c01da23abc3320ad176b7163ff6aaf329c17"
        ],
        [
            "move => /Lim_correct Hf /Lim_correct Hg Hl.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists (Rbar_mult (Lim f x) (Lim g x)).",
            "VernacExtend",
            "e1bbd552c8a2625b3c147fd94ea1c7228fa4c36f"
        ],
        [
            "now apply is_lim_mult.",
            "VernacExtend",
            "66c0a17f8601e37d7a1202b3265df62721605daf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_mult (f g : R -> R) (x : Rbar) : ex_lim f x -> ex_lim g x -> ex_Rbar_mult (Lim f x) (Lim g x) -> Lim (fun y => f y * g y) x = Rbar_mult (Lim f x) (Lim g x).",
            "VernacStartTheoremProof",
            "ffb1f733bba409168eb788a4b312705ee9a96f4d"
        ],
        [
            "move => /Lim_correct Hf /Lim_correct Hg Hl.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_lim_unique.",
            "VernacExtend",
            "dae3243103dd458b8bf69808c8c75b5d97ae46f2"
        ],
        [
            "now apply is_lim_mult.",
            "VernacExtend",
            "66c0a17f8601e37d7a1202b3265df62721605daf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_scal_l (f : R -> R) (a : R) (x l : Rbar) : is_lim f x l -> is_lim (fun y => a * f y) x (Rbar_mult a l).",
            "VernacStartTheoremProof",
            "ca17d9384bdf4c0ffbb8e8b38f4f07b1cdc0aa1e"
        ],
        [
            "move => Hf.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Req_dec 0 a) => [<- {a} | Ha].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite Rbar_mult_0_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply is_lim_ext with (fun _ => 0).",
            "VernacExtend",
            "f796899d850b8b8164f13859f001aaa86934ac18"
        ],
        [
            "move => y ; by rewrite Rmult_0_l.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "by apply is_lim_const.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_lim_mult.",
            "VernacExtend",
            "d95cb0f6ff23ea8f9e7ec45a785634c0519aee3f"
        ],
        [
            "by apply is_lim_const.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply sym_not_eq in Ha.",
            "VernacExtend",
            "abd84e169b3e5410aefc94eeb8c898842032ffd1"
        ],
        [
            "case: l {Hf} => [l | | ] //=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_scal_l (f : R -> R) (a : R) (x : Rbar) : ex_lim f x -> ex_lim (fun y => a * f y) x.",
            "VernacStartTheoremProof",
            "210f085663f2e1fa2132c8b79be13abdafdad1d8"
        ],
        [
            "case => l Hf.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (Rbar_mult a l).",
            "VernacExtend",
            "9a8820fb1c1536d302a33bdc48689bfe4afb9175"
        ],
        [
            "by apply is_lim_scal_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_scal_l (f : R -> R) (a : R) (x : Rbar) : Lim (fun y => a * f y) x = Rbar_mult a (Lim f x).",
            "VernacStartTheoremProof",
            "aa5ceb868d3200f5b4d065cf7bc2bbb2d69b3b8f"
        ],
        [
            "apply Lim_seq_scal_l.",
            "VernacExtend",
            "6a74e18fe5ff86afc24c988921312063015c81cb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_scal_r (f : R -> R) (a : R) (x l : Rbar) : is_lim f x l -> is_lim (fun y => f y * a) x (Rbar_mult l a).",
            "VernacStartTheoremProof",
            "1cfd19e0e182cd3c897ebd60a14210bedeed1a32"
        ],
        [
            "move => Hf.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite Rbar_mult_comm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply is_lim_ext with (fun y => a * f y).",
            "VernacExtend",
            "cc21c2928a51f346e60e212e3f94e2b52ca3c971"
        ],
        [
            "move => y ; by apply Rmult_comm.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "by apply is_lim_scal_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_scal_r (f : R -> R) (a : R) (x : Rbar) : ex_lim f x -> ex_lim (fun y => f y * a) x.",
            "VernacStartTheoremProof",
            "16a3990d60c3524a866e7ab8b773868fbb9b565d"
        ],
        [
            "case => l Hf.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (Rbar_mult l a).",
            "VernacExtend",
            "307738da59610c4a4c913064d6f0fcc0b5302d7e"
        ],
        [
            "by apply is_lim_scal_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_scal_r (f : R -> R) (a : R) (x : Rbar) : Lim (fun y => f y * a) x = Rbar_mult (Lim f x) a.",
            "VernacStartTheoremProof",
            "4ff3bc9aa8c60d6b8de4b517b0137a54cecfbed6"
        ],
        [
            "rewrite Rbar_mult_comm -Lim_seq_scal_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Lim_seq_ext.",
            "VernacExtend",
            "7ea6f4316462f16e8e0201ec50e1735bb5bff76f"
        ],
        [
            "move => y ; by apply Rmult_comm.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_div (f g : R -> R) (x lf lg : Rbar) : is_lim f x lf -> is_lim g x lg -> lg <> 0 -> ex_Rbar_div lf lg -> is_lim (fun y => f y / g y) x (Rbar_div lf lg).",
            "VernacStartTheoremProof",
            "3586a759d28990d521f2bafa9caea6a57613b119"
        ],
        [
            "move => Hf Hg Hlg Hl.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_lim_mult ; try assumption.",
            "VernacExtend",
            "a191c3dde389490f7b9fb7e035fbc749b9715778"
        ],
        [
            "now apply is_lim_inv.",
            "VernacExtend",
            "65a68795f664d2c92e1f628d470064c8749d1014"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_div (f g : R -> R) (x : Rbar) : ex_lim f x -> ex_lim g x -> Lim g x <> 0 -> ex_Rbar_div (Lim f x) (Lim g x) -> ex_lim (fun y => f y / g y) x.",
            "VernacStartTheoremProof",
            "7736bfd05889837cf038a67ce0db8c7ff733745e"
        ],
        [
            "move => Hf Hg Hlg Hl.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply ex_lim_mult ; try assumption.",
            "VernacExtend",
            "8c1af53016a98bdafb47856d1762b5eadcf36aa4"
        ],
        [
            "now apply ex_lim_inv.",
            "VernacExtend",
            "f18ef21423b8f69a90e99bd28bda6f89e5b636dc"
        ],
        [
            "now rewrite Lim_inv.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_div (f g : R -> R) (x : Rbar) : ex_lim f x -> ex_lim g x -> Lim g x <> 0 -> ex_Rbar_div (Lim f x) (Lim g x) -> Lim (fun y => f y / g y) x = Rbar_div (Lim f x) (Lim g x).",
            "VernacStartTheoremProof",
            "d262de0275ff3a19e343db037813ac4de8d24485"
        ],
        [
            "move => Hf Hg Hlg Hl.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_lim_unique.",
            "VernacExtend",
            "dae3243103dd458b8bf69808c8c75b5d97ae46f2"
        ],
        [
            "apply is_lim_div ; try apply Lim_correct ; assumption.",
            "VernacExtend",
            "f7d74c6c38f32b77a62dbc7390ac180a91e80f0a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_comp_lin (f : R -> R) (a b : R) (x l : Rbar) : is_lim f (Rbar_plus (Rbar_mult a x) b) l -> a <> 0 -> is_lim (fun y => f (a * y + b)) x l.",
            "VernacStartTheoremProof",
            "a039a0bc0b777d96ebd421a6ca4e92c38b1423b2"
        ],
        [
            "move => Hf Ha.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_lim_comp with (Rbar_plus (Rbar_mult a x) b).",
            "VernacExtend",
            "b3ca9f62d9527871c2d3961665bcc3adadde076d"
        ],
        [
            "by apply Hf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "eapply is_lim_plus.",
            "VernacExtend",
            "716ead8934c013c4d4668980097b9e8b4ce42906"
        ],
        [
            "apply is_lim_scal_l.",
            "VernacExtend",
            "8ef967180d1cc4b7f934f478a66d6d48640e887b"
        ],
        [
            "apply is_lim_id.",
            "VernacExtend",
            "b5c2901657d02300527a48634f110a43e141619e"
        ],
        [
            "apply is_lim_const.",
            "VernacExtend",
            "59ce2cb7f7d13488752d566191bc5a7d46ac5d68"
        ],
        [
            "apply Rbar_plus_correct.",
            "VernacExtend",
            "aa6e67f05fdf2a679a005cfb748325f8c6b4b364"
        ],
        [
            "case: (Rbar_mult a x) => //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: x {Hf} => [x | | ] //=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (mkposreal _ Rlt_0_1) => y _ Hy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rbar_finite_neq, Rminus_not_eq ; ring_simplify (a * y + b - (a * x + b)).",
            "VernacExtend",
            "a1ab9b212a4a29f816aba354515d8d7760fe688f"
        ],
        [
            "rewrite -Rmult_minus_distr_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmult_integral_contrapositive ; split.",
            "VernacExtend",
            "d8212e57cada50c47229325207e986053f14a602"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rminus_eq_contra.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists 0 => x Hx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply sym_not_eq in Ha.",
            "VernacExtend",
            "abd84e169b3e5410aefc94eeb8c898842032ffd1"
        ],
        [
            "case: Rle_dec => // H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_lt_or_eq_dec => //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists 0 => x Hx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply sym_not_eq in Ha.",
            "VernacExtend",
            "abd84e169b3e5410aefc94eeb8c898842032ffd1"
        ],
        [
            "case: Rle_dec => // H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_lt_or_eq_dec => //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_comp_lin (f : R -> R) (a b : R) (x : Rbar) : ex_lim f (Rbar_plus (Rbar_mult a x) b) -> ex_lim (fun y => f (a * y + b)) x.",
            "VernacStartTheoremProof",
            "dd409972aaa65f01c8b5506824dade455f553358"
        ],
        [
            "case => l Hf.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Req_dec a 0) => [-> {a Hf} | Ha].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply ex_lim_ext with (fun _ => f b).",
            "VernacExtend",
            "0bea62b207056551bf51a9fa2702ca34c91590a6"
        ],
        [
            "move => y ; by rewrite Rmult_0_l Rplus_0_l.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "by apply ex_lim_const.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists l ; by apply is_lim_comp_lin.",
            "VernacExtend",
            "4f9f93dbf1ab94af5a51d54d8955eb863fb55340"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_comp_lin (f : R -> R) (a b : R) (x : Rbar) : ex_lim f (Rbar_plus (Rbar_mult a x) b) -> a <> 0 -> Lim (fun y => f (a * y + b)) x = Lim f (Rbar_plus (Rbar_mult a x) b).",
            "VernacStartTheoremProof",
            "0b3b885c67acf4785b992b3b5bb9d2e8c4a27356"
        ],
        [
            "move => Hf Ha.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_lim_unique.",
            "VernacExtend",
            "dae3243103dd458b8bf69808c8c75b5d97ae46f2"
        ],
        [
            "apply is_lim_comp_lin.",
            "VernacExtend",
            "92f93106eddccdd4d449b98d35578aa7b7c8710e"
        ],
        [
            "by apply Lim_correct.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exact: Ha.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_continuity (f : R -> R) (x : R) : continuity_pt f x -> is_lim f x (f x).",
            "VernacStartTheoremProof",
            "447f49a65a8d8eea89ea30ecca69ea3d52aa9044"
        ],
        [
            "intros cf.",
            "VernacExtend",
            "066f70738d0fa4fd82cf8bdb0fbd5760dff76946"
        ],
        [
            "now apply continuity_pt_filterlim'.",
            "VernacExtend",
            "8e0c75dd95d0f1efac35da129e03a2946f0d5506"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_continuity (f : R -> R) (x : R) : continuity_pt f x -> ex_finite_lim f x.",
            "VernacStartTheoremProof",
            "8fa901dad87a58c09f33a4c2b5c2d45f45b7249a"
        ],
        [
            "move => Hf.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists (f x).",
            "VernacExtend",
            "82d0433c52def299dae52e00c1bf42867054c8b7"
        ],
        [
            "by apply is_lim_continuity.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_continuity (f : R -> R) (x : R) : continuity_pt f x -> Lim f x = f x.",
            "VernacStartTheoremProof",
            "68804ba2609431b5209ac412bb60b9d02948c30c"
        ],
        [
            "move => Hf.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_lim_unique.",
            "VernacExtend",
            "dae3243103dd458b8bf69808c8c75b5d97ae46f2"
        ],
        [
            "by apply is_lim_continuity.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma C0_extension_right {T : UniformSpace} (f : R -> T) lb (a b : R) : a < b -> (forall c : R, a < c < b -> filterlim f (locally c) (locally (f c))) -> (filterlim f (at_left b) (locally lb)) -> {g : R -> T | (forall c, a < c -> filterlim g (locally c) (locally (g c))) /\\ (forall c : R, c < b -> g c = f c) /\\ g b = lb}.",
            "VernacStartTheoremProof",
            "b41b3f4b55793835921af635a3b89f7f7f0dc69d"
        ],
        [
            "intros Hab ; intros.",
            "VernacExtend",
            "31adc17320d9e4e0c99811bff7e68d2068874fdc"
        ],
        [
            "set g := fun x => match Rlt_dec x b with | left _ => f x | right _ => lb end.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "assert (Gab : forall c : R, c < b -> g c = f c).",
            "VernacExtend",
            "c5fd038aa14f7e42ba6145f5cdf427ead096a082"
        ],
        [
            "intros c Hcb.",
            "VernacExtend",
            "814f8b18787a7c92923f669a210d2a0d20d4dd14"
        ],
        [
            "unfold g.",
            "VernacExtend",
            "fd78415b188602b878d030c2cbc915af33ab1e1d"
        ],
        [
            "by (case: Rlt_dec).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "assert (Gb : forall c : R, b <= c -> g c = lb).",
            "VernacExtend",
            "07f489793a4d3875d03223ad36fdbfd9aeabe432"
        ],
        [
            "intros c Hbc.",
            "VernacExtend",
            "a042111ce8bfc907201d068a7293afee104fc1ff"
        ],
        [
            "unfold g.",
            "VernacExtend",
            "fd78415b188602b878d030c2cbc915af33ab1e1d"
        ],
        [
            "case: Rlt_dec (Rle_not_lt _ _ Hbc) => //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists g ; split.",
            "VernacExtend",
            "c3c807a6c6145ff29b637818b3040ac9b0585817"
        ],
        [
            "intros c Hac.",
            "VernacExtend",
            "98002cf7ac88873e98578addedcd1bbd59e85709"
        ],
        [
            "case: (Rlt_le_dec c b) ; (try case) => Hbc.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply filterlim_ext_loc with f.",
            "VernacExtend",
            "027fbf97e3f6f8df048c82b6d4029cfbae2914fe"
        ],
        [
            "apply locally_interval with m_infty b => //= y _ Hyb.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply sym_eq, Gab.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Gab //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply H ; by split.",
            "VernacExtend",
            "34fd41a308b5b35ebaca836e1d65b2bf94b36c8e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Gb.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "2: by apply Rlt_le.",
            "VernacExtend",
            "42cf05b0c5cd7515ffd5d7bb186f381ddeb0d8c5"
        ],
        [
            "eapply filterlim_ext_loc.",
            "VernacExtend",
            "735b49873e3aa689c51125555ec9be4b621211d4"
        ],
        [
            "2: by apply filterlim_const.",
            "VernacExtend",
            "42cf05b0c5cd7515ffd5d7bb186f381ddeb0d8c5"
        ],
        [
            "apply locally_interval with b p_infty => //= y Hby _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply sym_eq, Gb.",
            "VernacExtend",
            "758af7d83b455ed38d631b5c3cfe236167c28f1a"
        ],
        [
            "by apply Rlt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite -Hbc => {c Hbc Hac}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite Gb.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "2: by apply Rle_refl.",
            "VernacExtend",
            "42cf05b0c5cd7515ffd5d7bb186f381ddeb0d8c5"
        ],
        [
            "apply filterlim_locally => eps /= {H}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "destruct (proj1 (filterlim_locally _ _) H0 eps) as [d Hd].",
            "VernacExtend",
            "d106e42a2f91318768f093bfbfb129cf37437687"
        ],
        [
            "simpl in Hd.",
            "VernacExtend",
            "8d63f27467b0959e77e788b73feb8327d5b14293"
        ],
        [
            "exists d => x Hx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (Rlt_le_dec x b) => Hxb.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite Gab //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Hd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Gb //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply ball_center.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "by apply Gab.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Gb ; by apply Rle_refl.",
            "VernacExtend",
            "9717edc7620fe8c4068239f5fec4690683a93c1a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterlim_Ropp_left (x : R) : filterlim Ropp (at_left x) (at_right (- x)).",
            "VernacStartTheoremProof",
            "689776da197e645195c7f93d4c4cc3b7c772aab0"
        ],
        [
            "move => P [d /= Hd].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists d => y /= Hy Hy'.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Hd.",
            "VernacExtend",
            "b2c76316200582fcad9318af1ed397a8dea483e3"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /abs /minus /plus /opp /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -Ropp_plus_distr Rabs_Ropp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Hy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Ropp_lt_contravar.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterlim_Ropp_right (x : R) : filterlim Ropp (at_right x) (at_left (- x)).",
            "VernacStartTheoremProof",
            "885c790c2bf82f4cdf2617304154b60cdee1c740"
        ],
        [
            "move => P [d /= Hd].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists d => y /= Hy Hy'.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Hd.",
            "VernacExtend",
            "b2c76316200582fcad9318af1ed397a8dea483e3"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /abs /minus /plus /opp /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -Ropp_plus_distr Rabs_Ropp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Hy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Ropp_lt_contravar.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma C0_extension_left {T : UniformSpace} (f : R -> T) la (a b : R) : a < b -> (forall c : R, a < c < b -> filterlim f (locally c) (locally (f c))) -> (filterlim f (at_right a) (locally la)) -> {g : R -> T | (forall c, c < b -> filterlim g (locally c) (locally (g c))) /\\ (forall c : R, a < c -> g c = f c) /\\ g a = la}.",
            "VernacStartTheoremProof",
            "0fcdb3adfe0fd4ff143d719050c6ab14592964ab"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (C0_extension_right (fun x => f (- x)) la (-b) (-a)) as [g Hg].",
            "VernacExtend",
            "69f39c81cae0cffb7d3e2503743858eb0302ca34"
        ],
        [
            "by apply Ropp_lt_contravar.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply filterlim_comp.",
            "VernacExtend",
            "887c72ce037fc4dc1c63092170c000188c601e2f"
        ],
        [
            "apply (filterlim_opp c).",
            "VernacExtend",
            "d07c2e7085763692e8c9e7d58ba4d5977cc404c5"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "split ; apply Ropp_lt_cancel ; rewrite Ropp_involutive ; by apply H2.",
            "VernacExtend",
            "2a2bb5d0a3ed0952c293b3b2450b83735495abc4"
        ],
        [
            "eapply filterlim_comp.",
            "VernacExtend",
            "887c72ce037fc4dc1c63092170c000188c601e2f"
        ],
        [
            "apply filterlim_Ropp_left.",
            "VernacExtend",
            "4fd3db4dbebd880c83475438f5d2314a2915dffd"
        ],
        [
            "by rewrite Ropp_involutive.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (fun x => g (- x)) ; split.",
            "VernacExtend",
            "8feaae23832f315738fbfff0e69311af7749e072"
        ],
        [
            "intros c Hc.",
            "VernacExtend",
            "a6796c62d7c0db66fe8ba83a4c9d8f0f080ccce0"
        ],
        [
            "eapply filterlim_comp.",
            "VernacExtend",
            "887c72ce037fc4dc1c63092170c000188c601e2f"
        ],
        [
            "apply (filterlim_opp c).",
            "VernacExtend",
            "d07c2e7085763692e8c9e7d58ba4d5977cc404c5"
        ],
        [
            "by apply Hg, Ropp_lt_contravar.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros c Hc.",
            "VernacExtend",
            "a6796c62d7c0db66fe8ba83a4c9d8f0f080ccce0"
        ],
        [
            "rewrite (proj1 (proj2 Hg)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite Ropp_involutive.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Ropp_lt_contravar.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma C0_extension_lt {T : UniformSpace} (f : R -> T) la lb (a b : R) : a < b -> (forall c : R, a < c < b -> filterlim f (locally c) (locally (f c))) -> (filterlim f (at_right a) (locally la)) -> (filterlim f (at_left b) (locally lb)) -> {g : R -> T | (forall c, filterlim g (locally c) (locally (g c))) /\\ (forall c : R, a < c < b -> g c = f c) /\\ g a = la /\\ g b = lb}.",
            "VernacStartTheoremProof",
            "fe35f63253abfd4c7c621e7175cd7356eacc5e15"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (C0_extension_left f la a b) as [g [Cg [Gab Ga]]] => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "destruct (C0_extension_right g lb a b) as [h [Ch [Hab Hb]]] => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Cg, H3.",
            "VernacExtend",
            "cdfd0621279578f163edcf6b1eaa781a6cd51ea8"
        ],
        [
            "eapply filterlim_ext_loc.",
            "VernacExtend",
            "735b49873e3aa689c51125555ec9be4b621211d4"
        ],
        [
            "2: by apply H2.",
            "VernacExtend",
            "42cf05b0c5cd7515ffd5d7bb186f381ddeb0d8c5"
        ],
        [
            "apply Rminus_lt_0 in H.",
            "VernacExtend",
            "cc788f46f0f5b7c476514ba43d78dd77271a6406"
        ],
        [
            "exists (mkposreal _ H) => y /= Hy Hy'.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply sym_eq, Gab.",
            "VernacExtend",
            "09a1fd817ff6d39a5916912def932d16764c048f"
        ],
        [
            "apply Ropp_lt_cancel, (Rplus_lt_reg_l b).",
            "VernacExtend",
            "b1981f09ee644b5b7c8b1e546e2999ae29956ca8"
        ],
        [
            "eapply Rle_lt_trans, Hy.",
            "VernacExtend",
            "5d7b9881fa7bedfd08a0475ca10bafb618d939dd"
        ],
        [
            "rewrite -abs_opp opp_minus.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_abs.",
            "VernacExtend",
            "7222806352a7f01b48467f271bcdc35194fd1877"
        ],
        [
            "exists h ; repeat split.",
            "VernacExtend",
            "f67c95fe752f25148a3c5147bc73c7434533d23f"
        ],
        [
            "intros c.",
            "VernacExtend",
            "b22524904714a3291216c142472c7a61ff52b803"
        ],
        [
            "case: (Rlt_le_dec a c) => Hac.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Ch.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Hab.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "eapply filterlim_ext_loc.",
            "VernacExtend",
            "735b49873e3aa689c51125555ec9be4b621211d4"
        ],
        [
            "2: apply Cg.",
            "VernacExtend",
            "36016d9ba58d2e7fe4bd1c88459de76759cbf016"
        ],
        [
            "apply locally_interval with m_infty b => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by eapply Rle_lt_trans, H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "intros y _ Hy ; by apply sym_eq, Hab.",
            "VernacExtend",
            "578b90bd69efe83d99b96f1d8417d7313d7030cc"
        ],
        [
            "by eapply Rle_lt_trans, H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by eapply Rle_lt_trans, H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "intros c [Hac Hcb].",
            "VernacExtend",
            "2544237b446687fad0ede667fc26839eb60f8eef"
        ],
        [
            "rewrite Hab => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply Gab.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite Hab.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma C0_extension_le {T : UniformSpace} (f : R -> T) (a b : R) : (forall c : R, a <= c <= b -> filterlim f (locally c) (locally (f c))) -> {g : R -> T | (forall c, filterlim g (locally c) (locally (g c))) /\\ (forall c : R, a <= c <= b -> g c = f c)}.",
            "VernacStartTheoremProof",
            "e73f34b1f98ebe4e416b1c5577c37e62a28eb6ce"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case: (Rlt_le_dec a b) => Hab.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "destruct (C0_extension_lt f (f a) (f b) a b Hab) as [g [Cg [Gab [Ga Gb]]]].",
            "VernacExtend",
            "9ba906f086442d69169bdc60168543e5e8638d97"
        ],
        [
            "intros c Hc.",
            "VernacExtend",
            "a6796c62d7c0db66fe8ba83a4c9d8f0f080ccce0"
        ],
        [
            "apply H ; split ; apply Rlt_le, Hc.",
            "VernacExtend",
            "5c1cde73e33e3fd4de38bd0034f2d360fa9f5303"
        ],
        [
            "eapply filterlim_filter_le_1, H.",
            "VernacExtend",
            "cf74121a784d32f9ba85f0ef56438bc427e27edd"
        ],
        [
            "by apply filter_le_within.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "eapply filterlim_filter_le_1, H.",
            "VernacExtend",
            "cf74121a784d32f9ba85f0ef56438bc427e27edd"
        ],
        [
            "by apply filter_le_within.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "exists g ; repeat split => //.",
            "VernacExtend",
            "90c8d66b5ecbdd8918ccffeee7870f4139424b81"
        ],
        [
            "intros c [Hac Hcb].",
            "VernacExtend",
            "2544237b446687fad0ede667fc26839eb60f8eef"
        ],
        [
            "case: Hac => [ Hac | <-] //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Hcb => [ Hcb | ->] //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Gab ; by split.",
            "VernacExtend",
            "55ba0f3cd504460a058e54bb2f7682a796d8df9b"
        ],
        [
            "exists (fun _ => f a) ; split ; simpl.",
            "VernacExtend",
            "49e4f34b621a56b5547758f5113d09b1d7d56407"
        ],
        [
            "move => c.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by apply filterlim_const.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "intros c [Hac Hca].",
            "VernacExtend",
            "58a7b13bafb3c246bc76cfc594641ef93e950ba2"
        ],
        [
            "case: Hab => Hab.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "contradict Hab ; apply Rle_not_lt.",
            "VernacExtend",
            "147c0f3aed100f5c3614d6ec37750b8349c1e94f"
        ],
        [
            "by apply Rle_trans with c.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Hab in Hca.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply f_equal, Rle_antisym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bounded_continuity {K : AbsRing} {V : NormedModule K} (f : R -> V) a b : (forall x, a <= x <= b -> filterlim f (locally x) (locally (f x))) -> {M : R | forall x, a <= x <= b -> norm (f x) < M}.",
            "VernacStartTheoremProof",
            "340ba962ffdf7b0399f971b0c286a97022173fa6"
        ],
        [
            "destruct (Rle_dec b a) as [Hab|Hab].",
            "VernacExtend",
            "e1a3f81a5e1162435107fa840e47cb3f0b0a8b86"
        ],
        [
            "exists (norm (f a) + 1).",
            "VernacExtend",
            "8075af716d8ae865e910a34a2b20cb17f3d88439"
        ],
        [
            "intros x [Hax Hxb].",
            "VernacExtend",
            "888d298670d3c6f66c84134fa2c27c1cc94c3810"
        ],
        [
            "replace x with a.",
            "VernacExtend",
            "5f2c0e86d74a660505ab0f3a731f5cfc430df5a3"
        ],
        [
            "rewrite -{1}(Rplus_0_r (norm (f a))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_lt_compat_l, Rlt_0_1.",
            "VernacExtend",
            "1dce50fe895bfafd032b7b3c6313e1e75e2f1d89"
        ],
        [
            "apply Rle_antisym with (1 := Hax).",
            "VernacExtend",
            "204adeeed319c59ab0aa8f70a1efb85d5667f02b"
        ],
        [
            "now apply Rle_trans with b.",
            "VernacExtend",
            "8fe4d4563363d8e124c2ae75a8ac67c05cb86719"
        ],
        [
            "apply Rnot_le_lt in Hab.",
            "VernacExtend",
            "7743eaae08682179b29b49369fc7d11e918642b7"
        ],
        [
            "wlog: f / (forall x, filterlim f (locally x) (locally (f x))) => [ Hw Cf | Cf _ ].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "destruct (C0_extension_le f a b) as [g [Cg Hg]].",
            "VernacExtend",
            "3a93c4e916b371c303d62c2055769d859c699232"
        ],
        [
            "by apply Cf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "destruct (Hw g) as [M HM] => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "exists M ; intros.",
            "VernacExtend",
            "61eb3ad2ec3eb2a38d12bdc736953a8277cd664a"
        ],
        [
            "rewrite -Hg //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply HM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "assert (forall x : R, locally x (fun y : R => Rabs (norm (f y) - norm (f x)) < 1)).",
            "VernacExtend",
            "e8e1b285a704c97fd5287566d8d832c954cce591"
        ],
        [
            "intro x.",
            "VernacExtend",
            "f7163633eedf12f483fa0d8c0c119dd59431ca1e"
        ],
        [
            "generalize (proj1 (filterlim_locally_ball_norm _ _) (Cf x)) => {Cf} Cf.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply: filter_imp (Cf (mkposreal _ Rlt_0_1)) => y Hy.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply Rle_lt_trans with (2 := Hy).",
            "VernacExtend",
            "0f42117986cf67489d7a273fa461699c0e9abc7c"
        ],
        [
            "apply norm_triangle_inv.",
            "VernacExtend",
            "ae84085add88546782a6f9c148e5fe2f9301b2b9"
        ],
        [
            "assert (forall x y : R, Rabs (norm (f y) - norm (f x)) < 1 \\/ ~ Rabs (norm (f y) - norm (f x)) < 1).",
            "VernacExtend",
            "c44ffb5fc25b7d5294ab84bbb6e3aa1fd0d9a2d4"
        ],
        [
            "intros x y ; edestruct Rlt_dec.",
            "VernacExtend",
            "4331987f30c51f7fdfb0fba09e30502a2be922af"
        ],
        [
            "left ; by apply r.",
            "VernacExtend",
            "8d1d3855bd3af5f36952354b4669569e4c0e7e37"
        ],
        [
            "by right.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "set delta := (fun (x : R) => proj1_sig (locally_ex_dec x _ (H0 x) (H x))).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "destruct (compactness_value_1d a b delta) as [d Hd].",
            "VernacExtend",
            "d2c99c85d2a4c60f0075a10b269fdd4c684485b9"
        ],
        [
            "destruct (nfloor_ex ((b - a) / d)) as [N HN].",
            "VernacExtend",
            "73df0d8b7497c8f52f257487d3728c4be6cc1bc8"
        ],
        [
            "apply Rdiv_le_0_compat.",
            "VernacExtend",
            "693e22205d4e08285736e8c5e96457827d9a8003"
        ],
        [
            "now apply Rlt_le, Rlt_Rminus.",
            "VernacExtend",
            "3d3bc9bc4e8d43d4f9dde6ebb2e2303173c207c9"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "set (M := (fix g n := match n with O => 0 | S n => Rmax (norm (f (a + INR n * d)) + 3) (g n) end) (S N)).",
            "VernacExtend",
            "40e0d4c235d9a1a9a7341a6a3a428aeb1d86d7c6"
        ],
        [
            "exists M => x Hx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rnot_le_lt => H2.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply (Hd x Hx) ; case => t.",
            "VernacExtend",
            "35bb56bfced15c111fe1c8f0b25755fe217abc38"
        ],
        [
            "unfold delta.",
            "VernacExtend",
            "1a2d82e65e40967d077849446b26a6a4f437e2f7"
        ],
        [
            "case: locally_ex_dec => e /= He [Ht [Hxt Hde]].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "contradict H2 ; apply Rlt_not_le.",
            "VernacExtend",
            "0f700d28bf990aab76b5158ffac9687e42fc6226"
        ],
        [
            "move: (fun (y : R) Hy => He y (norm_compat1 _ _ _ Hy)) => {He} He.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply He in Hxt.",
            "VernacExtend",
            "226fbacc5b6243b825901b0c65144115b9ffd2f6"
        ],
        [
            "rewrite -(Rabs_pos_eq (norm _) (norm_ge_0 _)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (norm (f x)) with ((norm (f x) - norm (f t)) + norm (f t))%R by ring.",
            "VernacExtend",
            "6bab1dc3fe36630ed84d2a4ea11f8b543911eeca"
        ],
        [
            "eapply Rle_lt_trans.",
            "VernacExtend",
            "51df35c21ed37a72940fad0733f4416a5ba5669c"
        ],
        [
            "apply Rabs_triang.",
            "VernacExtend",
            "ac95e0693bced827aa4991eb13639b86503a8150"
        ],
        [
            "eapply Rlt_trans.",
            "VernacExtend",
            "680e916b99a4206ca68b8a6681793ad9d4abf6e8"
        ],
        [
            "apply Rplus_lt_compat_r.",
            "VernacExtend",
            "8ca3e9c0f7e7327fd8e0145cec0673e72652d996"
        ],
        [
            "by apply Hxt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Rplus_comm ; apply Rlt_minus_r.",
            "VernacExtend",
            "bbfc1289234960c05a1b463f24a9b64487726cbb"
        ],
        [
            "clear x Hx Hxt.",
            "VernacExtend",
            "3694f5895803cc30de9eadd34909e4852bbfb8c3"
        ],
        [
            "destruct (nfloor_ex ((t - a) / d)) as [n Hn].",
            "VernacExtend",
            "ef635730e9169a4d3c85d84c90516571e9a34d42"
        ],
        [
            "apply Rdiv_le_0_compat.",
            "VernacExtend",
            "693e22205d4e08285736e8c5e96457827d9a8003"
        ],
        [
            "apply Rplus_le_reg_r with a.",
            "VernacExtend",
            "7e41b8d10aacb48eab4235f2cca73781bfced56b"
        ],
        [
            "now ring_simplify.",
            "VernacExtend",
            "2d108f365e3e8acc156a34cc381bc8087ba632ff"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "set (y := a + INR n * d).",
            "VernacExtend",
            "aaad0077d95c3af31722d5f3a3e9951e9322539a"
        ],
        [
            "replace (norm (f t)) with (-(norm (f y) - norm (f t)) + norm (f y))%R by ring.",
            "VernacExtend",
            "476f39b3e34939892bfd1b4e419845f10492e51a"
        ],
        [
            "eapply Rle_lt_trans.",
            "VernacExtend",
            "51df35c21ed37a72940fad0733f4416a5ba5669c"
        ],
        [
            "apply Rabs_triang.",
            "VernacExtend",
            "ac95e0693bced827aa4991eb13639b86503a8150"
        ],
        [
            "eapply Rlt_trans.",
            "VernacExtend",
            "680e916b99a4206ca68b8a6681793ad9d4abf6e8"
        ],
        [
            "apply Rplus_lt_compat_r.",
            "VernacExtend",
            "8ca3e9c0f7e7327fd8e0145cec0673e72652d996"
        ],
        [
            "rewrite Rabs_Ropp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply He.",
            "VernacExtend",
            "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
        ],
        [
            "change (Rabs (a + INR n * d - t) < e).",
            "VernacExtend",
            "79b63b64fc3731e81a4017614ac7c4a0b60955a5"
        ],
        [
            "replace (a + INR n * d - t) with (-((t - a) / d - INR n) * d).",
            "VernacExtend",
            "a8e09be568c5edf91dc3da2d9a2c86f54eb3391d"
        ],
        [
            "rewrite Rabs_mult (Rabs_pos_eq d).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "2: apply Rlt_le, cond_pos.",
            "VernacExtend",
            "c6354d697946c03bef645b8d1d9a47d5cf70ba4a"
        ],
        [
            "apply Rlt_le_trans with (1 * d).",
            "VernacExtend",
            "eb010aa77d6b079081b2fe2ae52f8c1da563d9d7"
        ],
        [
            "apply Rmult_lt_compat_r with (1 := cond_pos d).",
            "VernacExtend",
            "266ffa17652309735f47dac2a325b78bf7d24a6b"
        ],
        [
            "rewrite Rabs_Ropp Rabs_pos_eq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_lt_reg_r with (INR n).",
            "VernacExtend",
            "b07dbf45b14ba4fb6d5fd49ae5d810010dd5c265"
        ],
        [
            "now rewrite /Rminus Rplus_assoc Rplus_opp_l Rplus_0_r (Rplus_comm 1).",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "apply Rplus_le_reg_r with (INR n).",
            "VernacExtend",
            "17f44ec7cfadf5fc792a48cf835ae945eb06f0cd"
        ],
        [
            "now ring_simplify.",
            "VernacExtend",
            "2d108f365e3e8acc156a34cc381bc8087ba632ff"
        ],
        [
            "now rewrite Rmult_1_l.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "apply Rgt_not_eq, cond_pos.",
            "VernacExtend",
            "ba2e6c3b02a6d60b19f6832999eba9b7dde2c1e7"
        ],
        [
            "apply Rplus_lt_reg_l with 1.",
            "VernacExtend",
            "6f34a15f131045fe27932d7dd416a942af5d7ff9"
        ],
        [
            "ring_simplify.",
            "VernacExtend",
            "31578f61427562191ce5389abf97dbf9985ea04c"
        ],
        [
            "rewrite -> Rabs_pos_eq by apply norm_ge_0.",
            "VernacExtend",
            "e84b80bf597463d4b092d448c2136b92ecb34241"
        ],
        [
            "assert (n < S N)%nat.",
            "VernacExtend",
            "658493d6fb6554f1898670de3d964d6f244e12a5"
        ],
        [
            "apply INR_lt.",
            "VernacExtend",
            "611624ce5b6bd7bd8d885620f478a1ea7f7cae68"
        ],
        [
            "apply Rle_lt_trans with (1 := proj1 Hn).",
            "VernacExtend",
            "2e320cd802df8910262e63e878c2e3b8aea2de62"
        ],
        [
            "rewrite S_INR.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_lt_trans with (2 := proj2 HN).",
            "VernacExtend",
            "7ee484cdd02f8efebd6c5f50dc116207ec97a6fd"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "apply Rlt_le, Rinv_0_lt_compat, cond_pos.",
            "VernacExtend",
            "5e26ba881bd2b95b70d7137bb7ea5ce77177eeaa"
        ],
        [
            "now apply Rplus_le_compat_r.",
            "VernacExtend",
            "8182aad22e58bd21105c801af074d763818ebcdd"
        ],
        [
            "unfold M, y.",
            "VernacExtend",
            "e76dccaf79940967bf4148092f19d0cfc24829a1"
        ],
        [
            "clear -H1.",
            "VernacExtend",
            "a97560cbbe2cd31ef128e29a3cf251870622f56a"
        ],
        [
            "induction N.",
            "VernacExtend",
            "014c91061e9f52f369bba44af3bfd9be499036f5"
        ],
        [
            "apply Rlt_le_trans with (2 := Rmax_l _ _).",
            "VernacExtend",
            "759c028334c4cc47650b0646143187ec025626e9"
        ],
        [
            "destruct n.",
            "VernacExtend",
            "1582bf847770c098bee882393a48b146dcc37a8c"
        ],
        [
            "apply Rplus_lt_compat_l, Rplus_lt_compat_l.",
            "VernacExtend",
            "f66072edd552d88a820389c093cc19633be3891f"
        ],
        [
            "now apply (IZR_lt 1 2).",
            "VernacExtend",
            "d40a3b69ffcfcaa7931ecec6959957d4352e9df8"
        ],
        [
            "now apply lt_S_n in H1.",
            "VernacExtend",
            "c4664c0871cbd9696c419383ced0f19a199d0234"
        ],
        [
            "destruct (le_lt_eq_dec _ _ (lt_n_Sm_le _ _ H1)) as [H2|H2].",
            "VernacExtend",
            "4c05d9479e4d46131a4b17f2fdfb951a5a35d2c5"
        ],
        [
            "apply Rlt_le_trans with (2 := Rmax_r _ _).",
            "VernacExtend",
            "62bde975de5c0dccbde6689b5d303d203a2f73fd"
        ],
        [
            "now apply IHN.",
            "VernacExtend",
            "7ccadcc51106e646002650deec3c32956062480d"
        ],
        [
            "apply Rlt_le_trans with (2 := Rmax_l _ _).",
            "VernacExtend",
            "759c028334c4cc47650b0646143187ec025626e9"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_lt_compat_l, Rplus_lt_compat_l.",
            "VernacExtend",
            "f66072edd552d88a820389c093cc19633be3891f"
        ],
        [
            "now apply (IZR_lt 1 2).",
            "VernacExtend",
            "d40a3b69ffcfcaa7931ecec6959957d4352e9df8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_le_loc (f g : R -> R) (x lf lg : Rbar) : Rbar_locally' x (fun y => f y <= g y) -> is_lim f x lf -> is_lim g x lg -> Rbar_le lf lg.",
            "VernacStartTheoremProof",
            "7faabef4a12feb39f102208885f3c669370ce5f4"
        ],
        [
            "apply filterlim_le.",
            "VernacExtend",
            "5e6a5ccbad10ca26cb77b714628126244c1ff433"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_le_p_loc (f g : R -> R) (x : Rbar) : Rbar_locally' x (fun y => f y <= g y) -> is_lim f x p_infty -> is_lim g x p_infty.",
            "VernacStartTheoremProof",
            "53f4390e0af3e99821bc81b553a72c1cdd3d30eb"
        ],
        [
            "apply filterlim_ge_p_infty.",
            "VernacExtend",
            "c94e134f7985812b4b7b602713f8c802b60b58db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_le_m_loc (f g : R -> R) (x : Rbar) : Rbar_locally' x (fun y => g y <= f y) -> is_lim f x m_infty -> is_lim g x m_infty.",
            "VernacStartTheoremProof",
            "e1023474991596f9a306d47ba8a6502ccff9682c"
        ],
        [
            "apply filterlim_le_m_infty.",
            "VernacExtend",
            "5436a4d282bcc919165db88abe5231dbbb28f716"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_le_le_loc (f g h : R -> R) (x : Rbar) (l : Rbar) : Rbar_locally' x (fun y => f y <= h y <= g y) -> is_lim f x l -> is_lim g x l -> is_lim h x l.",
            "VernacStartTheoremProof",
            "6a10232a7fb74e2c3c4c4d69c947fae36a42cca7"
        ],
        [
            "apply filterlim_le_le.",
            "VernacExtend",
            "2f2ddeea5b85f11c7fd2c4dedda1c2b3ea2ec976"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma IVT_gen (f : R -> R) (a b y : R) : Ranalysis1.continuity f -> Rmin (f a) (f b) <= y <= Rmax (f a) (f b) -> { x : R | Rmin a b <= x <= Rmax a b /\\ f x = y }.",
            "VernacStartTheoremProof",
            "07d0ba726f6f789d76e57f8c97a0f43bcada0c82"
        ],
        [
            "case: (Req_EM_T a b) => [ <- {b} | Hab].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite /Rmin /Rmax ; case: Rle_dec (Rle_refl a) (Rle_refl (f a)) ; case: Rle_dec => // _ _ _ _ Cf Hy.",
            "VernacExtend",
            "1418099f654a9d12bdfd561bac86adb846b83bfd"
        ],
        [
            "exists a ; split.",
            "VernacExtend",
            "14cc1ae54125a915d2423229819457ec091b2fbe"
        ],
        [
            "split ; by apply Rle_refl.",
            "VernacExtend",
            "9c392753fd6384a52f43e9d349afde47af3b3aa5"
        ],
        [
            "apply Rle_antisym ; by apply Hy.",
            "VernacExtend",
            "0ff8d61586e7089e2b58371bfdb97c2085d6935a"
        ],
        [
            "wlog: a b Hab / (a < b) => [Hw | {Hab} Hab].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (Rle_lt_dec a b) => Hab'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Rle_lt_or_eq_dec _ _ Hab') => {Hab'} // Hab'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Hw.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (Rmin_comm (f a)) (Rmin_comm a) (Rmax_comm (f a)) (Rmax_comm a) ; apply Hw => //.",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "by apply Rlt_not_eq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /(Rmin a) /(Rmax a) ; case: Rle_dec (Rlt_le _ _ Hab) => // _ _.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "wlog: f y / (f a <= f b) => [Hw |].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (Rle_lt_dec (f a) (f b)) => Hf' Hf Hy.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Hw.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (Hw (fun y => - f y) (- y)).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Ropp_le_contravar, Rlt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Ranalysis1.continuity_opp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Rmin_opp_Rmax Rmax_opp_Rmin ; split ; apply Ropp_le_contravar, Hy.",
            "VernacExtend",
            "1440ba6f10718ac3df5aa9b61b91cf0356534cc2"
        ],
        [
            "move => x [Hx Hfx].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists x ; intuition.",
            "VernacExtend",
            "5265b0752ff2ed4bffe4b91b951e6ea4268a5bda"
        ],
        [
            "by rewrite -(Ropp_involutive y) -Hfx Ropp_involutive.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /Rmin /Rmax ; case: Rle_dec => // _ _.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "wlog: y / (f a < y < f b) => [Hw Hf Hy | Hy Hf _].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: Hy => Hay Hyb.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Rle_lt_or_eq_dec _ _ Hay) => {Hay} [Hay | <- ].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Rle_lt_or_eq_dec _ _ Hyb) => {Hyb} [Hyb | -> ].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Hw ; intuition.",
            "VernacExtend",
            "eae2f5adec13dad9a9fbae045a9caeae4b47a2b6"
        ],
        [
            "exists b ; intuition.",
            "VernacExtend",
            "441cbfd61add61d24683c564714be9e11a4072f5"
        ],
        [
            "exists a ; intuition.",
            "VernacExtend",
            "345fb1146acf9bd58cf6fb5ac46f90f2fc8d9845"
        ],
        [
            "case (IVT (fun x => f x - y) a b).",
            "VernacExtend",
            "801f4861419105da9ddb33252c2d8252ceee6b7b"
        ],
        [
            "apply Ranalysis1.continuity_minus.",
            "VernacExtend",
            "b1ce7fb1197f44a54b583660a8a116bbcad8f623"
        ],
        [
            "exact Hf.",
            "VernacExtend",
            "e25e6849230bea1fb4d4eb83c79000be517c04a9"
        ],
        [
            "apply continuity_const.",
            "VernacExtend",
            "d5df7d9d284bef9ec83e0df177af94f9418ea22c"
        ],
        [
            "intros _ _ ; reflexivity.",
            "VernacExtend",
            "c26a0a9efac520c628b5bb8f4973fde0f8613793"
        ],
        [
            "exact Hab.",
            "VernacExtend",
            "f3d0f5752a150a91e25c080a5fc3ae0ed192bc4f"
        ],
        [
            "apply Rlt_minus_l ; rewrite Rplus_0_l ; apply Hy.",
            "VernacExtend",
            "814b46b9ea42533bbbaa659df2bb4dbef535f176"
        ],
        [
            "apply Rlt_minus_r ; rewrite Rplus_0_l ; apply Hy.",
            "VernacExtend",
            "de20e9773731da44778218317652ab0f70d6c599"
        ],
        [
            "intros x [Hx Hfx].",
            "VernacExtend",
            "6d9e94b4738a14a84a416736ec03e30977dfd5e6"
        ],
        [
            "apply Rminus_diag_uniq in Hfx.",
            "VernacExtend",
            "b3697df48e1e5c6d4f2ef98729600938a2f7a0f1"
        ],
        [
            "by exists x.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma IVT_Rbar_incr (f : R -> R) (a b la lb : Rbar) (y : R) : is_lim f a la -> is_lim f b lb -> (forall (x : R), Rbar_lt a x -> Rbar_lt x b -> continuity_pt f x) -> Rbar_lt a b -> Rbar_lt la y /\\ Rbar_lt y lb -> {x : R | Rbar_lt a x /\\ Rbar_lt x b /\\ f x = y}.",
            "VernacStartTheoremProof",
            "6c001d9816f79ad73599dc0b46ef12c13b6457cb"
        ],
        [
            "intros Hfa Hfb Cf Hab Hy.",
            "VernacExtend",
            "3bd84e638b7dbed6deeac91ccc2c2ac8aeb8082f"
        ],
        [
            "assert (Hb' : exists b' : R, Rbar_lt b' b /\\ is_upper_bound (fun x => Rbar_lt a x /\\ Rbar_lt x b /\\ f x <= y) b').",
            "VernacExtend",
            "f14db535cf924310045127c313f8070c0d7fd424"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (Hfb' : Rbar_locally' b (fun x => y < f x)).",
            "VernacExtend",
            "d92f8d31df06abed4ce32443e86e8161a826cb01"
        ],
        [
            "apply Hfb.",
            "VernacExtend",
            "7eee318e89ec8fd42b025dd70ab467db936f924f"
        ],
        [
            "now apply (open_Rbar_gt' _ y).",
            "VernacExtend",
            "8eab4cc7c26348dfd55b0d50d4bbee9e1d43130f"
        ],
        [
            "clear -Hab Hfb'.",
            "VernacExtend",
            "471151e7abc8a601e71e21a50559330fef4d5fe5"
        ],
        [
            "destruct b as [b| |].",
            "VernacExtend",
            "bca616082b551ac0c483d9a259eecd5d14aa6cad"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct Hfb' as [eps He].",
            "VernacExtend",
            "30307618cfbd717f4b8d801c4dedebf2be0e6410"
        ],
        [
            "exists (b - eps).",
            "VernacExtend",
            "9078426ac849727bbcf6019aa9afca0847024c0c"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rminus_lt_0.",
            "VernacExtend",
            "266ec80c870ca91ace5efd2beddab25e945c4342"
        ],
        [
            "replace (b - (b - eps)) with (pos eps) by ring.",
            "VernacExtend",
            "6c2c7d0cc556a79fa73656b210dd9ec7baa7dd5b"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "intros u [_ [H1 H2]].",
            "VernacExtend",
            "1085b9ea92fbd9faa87ea005211e592e5018b82d"
        ],
        [
            "apply Rnot_lt_le.",
            "VernacExtend",
            "3c60597e841405b7d257d92c4717e01515b21555"
        ],
        [
            "intros Hu.",
            "VernacExtend",
            "354a231d2e89381b80441c83de51a8623736a173"
        ],
        [
            "apply Rle_not_lt with (1 := H2).",
            "VernacExtend",
            "2f2b91d1941e5c5c7650acba82254a4e7c67761b"
        ],
        [
            "apply He.",
            "VernacExtend",
            "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
        ],
        [
            "apply Rabs_lt_between'.",
            "VernacExtend",
            "63a15ff3174a06f608196b85267ac5d1aae1e55e"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exact Hu.",
            "VernacExtend",
            "2ef276b73f30adea6147a9e5bb93e0371d61e365"
        ],
        [
            "apply Rlt_le_trans with (1 := H1).",
            "VernacExtend",
            "6d3864a89ca677d6c1d9e59e9ef1a94dcfd8af8d"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "apply Rminus_lt_0.",
            "VernacExtend",
            "266ec80c870ca91ace5efd2beddab25e945c4342"
        ],
        [
            "replace (b + eps - b) with (pos eps) by ring.",
            "VernacExtend",
            "11924999410a067fa90413fa6616bf4b3db39fd4"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "now apply Rlt_not_eq.",
            "VernacExtend",
            "7c469637fc05542bf9c3c4fab85774b12e6b8f93"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct Hfb' as [M HM].",
            "VernacExtend",
            "a765d4e3bf679914571477d4ee8f85f465888343"
        ],
        [
            "exists M.",
            "VernacExtend",
            "2a4b5607a006ea853718a616784ce7d5094d0af9"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intros u [_ [H1 H2]].",
            "VernacExtend",
            "1085b9ea92fbd9faa87ea005211e592e5018b82d"
        ],
        [
            "apply Rnot_lt_le.",
            "VernacExtend",
            "3c60597e841405b7d257d92c4717e01515b21555"
        ],
        [
            "intros Hu.",
            "VernacExtend",
            "354a231d2e89381b80441c83de51a8623736a173"
        ],
        [
            "apply Rle_not_lt with (1 := H2).",
            "VernacExtend",
            "2f2b91d1941e5c5c7650acba82254a4e7c67761b"
        ],
        [
            "now apply HM.",
            "VernacExtend",
            "0fd50daf33700aec4b38fe714931408d9860ab7d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now destruct a.",
            "VernacExtend",
            "24051356fff328c7208562817960b0c83ed3bf6c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Hex : exists x : R, Rbar_lt a x /\\ Rbar_lt x b /\\ f x <= y).",
            "VernacExtend",
            "72b2becc4faee04ee93adcaab039748f352a7e6c"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (Hfa' : Rbar_locally' a (fun x => Rbar_lt x b /\\ f x < y)).",
            "VernacExtend",
            "2a0e50cf69090934416fccea5980c3253be5cca1"
        ],
        [
            "apply filter_and.",
            "VernacExtend",
            "fbb80260b7ada2aadd0c8d53e45502ffc98a91f1"
        ],
        [
            "apply Rbar_locally'_le.",
            "VernacExtend",
            "b9295b9a3c8e346f731fd684e37b47127f96aff8"
        ],
        [
            "now apply open_Rbar_lt'.",
            "VernacExtend",
            "ed6a52a3a4b4260c6b498cd9dd1b117031efcb54"
        ],
        [
            "apply (Hfa (fun u => u < y)).",
            "VernacExtend",
            "cc560037bc88b46b8ca6903b8ed3e4b8da45e921"
        ],
        [
            "now apply (open_Rbar_lt' _ y).",
            "VernacExtend",
            "3155e3252161ece29036ac0927f1bedc042103f2"
        ],
        [
            "clear -Hab Hfa'.",
            "VernacExtend",
            "2af2149fa744268c90dc9949b2ac320eece122da"
        ],
        [
            "destruct a as [a| |].",
            "VernacExtend",
            "04889a33caf31358e8bd997d113fd5cf53d9b4f3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct Hfa' as [eps He].",
            "VernacExtend",
            "8dfad193a829c1e9e74cf8f4110b736654f86900"
        ],
        [
            "exists (a + eps / 2).",
            "VernacExtend",
            "431c3d40fc8efb8c630fad05e21387869ef0d10f"
        ],
        [
            "assert (Ha : a < a + eps / 2).",
            "VernacExtend",
            "e78fd253484257c9662c79b624176b6ee7062f5d"
        ],
        [
            "apply Rminus_lt_0.",
            "VernacExtend",
            "266ec80c870ca91ace5efd2beddab25e945c4342"
        ],
        [
            "replace (a + eps / 2 - a) with (eps / 2) by ring.",
            "VernacExtend",
            "8c8a5fcde48dfeb37618ee3795b5a74e0e5d8fb1"
        ],
        [
            "apply is_pos_div_2.",
            "VernacExtend",
            "34ece1c858dc4d1fc16b226888abddacb10f0a54"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exact Ha.",
            "VernacExtend",
            "a28fca5591eeaddb4e260e48e00517131e113f6d"
        ],
        [
            "assert (H : Rbar_lt (a + eps / 2) b /\\ (f (a + eps / 2) < y)).",
            "VernacExtend",
            "ddb36b06404da2886c2a3a3e484d6894223250e9"
        ],
        [
            "apply He.",
            "VernacExtend",
            "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /abs /minus /plus /opp /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (a + eps / 2 + - a) with (eps / 2) by ring.",
            "VernacExtend",
            "11bf9c6438567adbdd5926386e83d56622ab8654"
        ],
        [
            "rewrite Rabs_pos_eq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rlt_eps2_eps.",
            "VernacExtend",
            "57005ded85ef0e45613ca5a139065be8e8425d00"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "apply is_pos_div_2.",
            "VernacExtend",
            "34ece1c858dc4d1fc16b226888abddacb10f0a54"
        ],
        [
            "now apply Rgt_not_eq.",
            "VernacExtend",
            "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
        ],
        [
            "destruct H as [H1 H2].",
            "VernacExtend",
            "c7474c5d52e048046b184a41b5748899e80e4e65"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exact H1.",
            "VernacExtend",
            "c03ab82d1e411e1dcd211c59917a4946e039be00"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct Hfa' as [M HM].",
            "VernacExtend",
            "ace1112deea57b20d724e66b66aad61847f40d05"
        ],
        [
            "exists (M - 1).",
            "VernacExtend",
            "04b4168cc26ecc76684f28febfb37774d51b6d1c"
        ],
        [
            "assert (H : Rbar_lt (M - 1) b /\\ f (M - 1) < y).",
            "VernacExtend",
            "09c92d7dc0c223d4cad1fbc3a4de7d49834eb948"
        ],
        [
            "apply HM.",
            "VernacExtend",
            "da44e10176bfb6a0c07c29369b62e8b925d50bc1"
        ],
        [
            "apply Rminus_lt_0.",
            "VernacExtend",
            "266ec80c870ca91ace5efd2beddab25e945c4342"
        ],
        [
            "replace (M - (M - 1)) with 1 by ring.",
            "VernacExtend",
            "b5fbaec120a92083eeac93812807a1e0ad32c145"
        ],
        [
            "apply Rlt_0_1.",
            "VernacExtend",
            "c3f675388bf844e0740197fd71afa66e5eef091d"
        ],
        [
            "destruct H as [H1 H2].",
            "VernacExtend",
            "c7474c5d52e048046b184a41b5748899e80e4e65"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "exact H1.",
            "VernacExtend",
            "c03ab82d1e411e1dcd211c59917a4946e039be00"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (completeness (fun x => Rbar_lt a x /\\ Rbar_lt x b /\\ f x <= y)) as [x [Hub Hlub]].",
            "VernacExtend",
            "bb9d1b46e3df6b6050564a903e353187dc7ca2fd"
        ],
        [
            "destruct Hb' as [b' Hb'].",
            "VernacExtend",
            "221b01e238bb032ffc1d662ec3bf6f6796cf8bc5"
        ],
        [
            "now exists b'.",
            "VernacExtend",
            "d2cf2f38fbf8b3a96fda4f973f5708f7fcb1d30a"
        ],
        [
            "exact Hex.",
            "VernacExtend",
            "e0ee9de7cc2fcb930bb369f96acabead1395690e"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "destruct Hb' as [b' [Hb Hb']].",
            "VernacExtend",
            "24b808fc0094d6f4a114913c81931177ae3e4c63"
        ],
        [
            "destruct Hex as [x' Hx'].",
            "VernacExtend",
            "27ddf3896bdaceabc9356bae00e806ec76a2106f"
        ],
        [
            "assert (Hax : Rbar_lt a x).",
            "VernacExtend",
            "246b0ac65e1bd5b7e8aae8e4c36afedb66245e48"
        ],
        [
            "apply Rbar_lt_le_trans with x'.",
            "VernacExtend",
            "fd5e7a89909c9bf057715dfe7df4ee2f7ce3f6c3"
        ],
        [
            "apply Hx'.",
            "VernacExtend",
            "b86ae5b23af511ab5298308aa6904e92e151bdab"
        ],
        [
            "now apply Hub.",
            "VernacExtend",
            "446f7d176007ba3ba84bb7ab477e912968dbf964"
        ],
        [
            "assert (Hxb : Rbar_lt x b).",
            "VernacExtend",
            "c2f7bd4ce23a32e9f26230b4915f37f80686c0de"
        ],
        [
            "apply Rbar_le_lt_trans with b'.",
            "VernacExtend",
            "e739ab1eb440c5996a540cc762b3372961e52c1f"
        ],
        [
            "now apply Hlub.",
            "VernacExtend",
            "12b64d286fcc670d0f1247101cce42fb0189260c"
        ],
        [
            "exact Hb.",
            "VernacExtend",
            "0113214a475bcb80be38afd1bb1b52021ce8419f"
        ],
        [
            "repeat split ; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "specialize (Cf _ Hax Hxb).",
            "VernacExtend",
            "53c81dd9af059900349136f1255e859347099d2e"
        ],
        [
            "apply continuity_pt_filterlim in Cf.",
            "VernacExtend",
            "73ae1e7add4b664c2296e31a449355bb785b4a76"
        ],
        [
            "destruct (total_order_T (f x) y) as [[H|H]|H].",
            "VernacExtend",
            "deebc75c50c52a920dc5c58917472cce5d12fdcb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (H': locally x (fun u => (Rbar_lt a u /\\ Rbar_lt u b) /\\ f u < y)).",
            "VernacExtend",
            "08a4a863bf800f5be5bea1a17971f203bf9f9f17"
        ],
        [
            "apply filter_and.",
            "VernacExtend",
            "fbb80260b7ada2aadd0c8d53e45502ffc98a91f1"
        ],
        [
            "apply filter_and.",
            "VernacExtend",
            "fbb80260b7ada2aadd0c8d53e45502ffc98a91f1"
        ],
        [
            "now apply open_Rbar_gt.",
            "VernacExtend",
            "58f53075c91382d8697e63e5b2b4912dbb802a61"
        ],
        [
            "now apply open_Rbar_lt.",
            "VernacExtend",
            "e886c6cd06bf21e42e3aa034425a0023037b3b6f"
        ],
        [
            "apply (Cf (fun u => u < y)).",
            "VernacExtend",
            "a0f1dcba5e45a5c082b90382f4211dcce39e290c"
        ],
        [
            "now apply open_lt.",
            "VernacExtend",
            "8cf0b577159c5ebd31b155114ac90bdecf599892"
        ],
        [
            "destruct H' as [eps H'].",
            "VernacExtend",
            "bc82f85448b47ba23c3693fb6cdfc4e916175740"
        ],
        [
            "elim Rle_not_lt with x (x + eps / 2).",
            "VernacExtend",
            "06e4566c7cf2ecb03c7542d71bc8c0dae13c29ac"
        ],
        [
            "apply Hub.",
            "VernacExtend",
            "88ecc2488b63e46827735699f592921a85d0a25a"
        ],
        [
            "destruct (H' (x + eps / 2)) as [[H1 H2] H3].",
            "VernacExtend",
            "baabd282d5c6a3a9c409ad522b2cecb4aa01aebb"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /abs /minus /plus /opp /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (x + eps / 2 + - x) with (eps / 2) by ring.",
            "VernacExtend",
            "e261f0e1c48695d34f657d3199f721d2021a3ec4"
        ],
        [
            "rewrite Rabs_pos_eq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rlt_eps2_eps.",
            "VernacExtend",
            "57005ded85ef0e45613ca5a139065be8e8425d00"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "apply is_pos_div_2.",
            "VernacExtend",
            "34ece1c858dc4d1fc16b226888abddacb10f0a54"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exact H1.",
            "VernacExtend",
            "c03ab82d1e411e1dcd211c59917a4946e039be00"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exact H2.",
            "VernacExtend",
            "6cf1ccd4f667f962fca87ce20ad22b06c15c53ad"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "apply Rminus_lt_0.",
            "VernacExtend",
            "266ec80c870ca91ace5efd2beddab25e945c4342"
        ],
        [
            "replace (x + eps / 2 - x) with (eps / 2) by ring.",
            "VernacExtend",
            "b3c4dd7bd21f57df91a6bd55b1779ff1d58ddaea"
        ],
        [
            "apply is_pos_div_2.",
            "VernacExtend",
            "34ece1c858dc4d1fc16b226888abddacb10f0a54"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exact H.",
            "VernacExtend",
            "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (H': locally x (fun u => y < f u)).",
            "VernacExtend",
            "06fd7991fdfd5ae513933cdcf3c70f2315051f9f"
        ],
        [
            "apply (Cf (fun u => y < u)).",
            "VernacExtend",
            "c775f6b8784e229543499eabd1de5564a529ada2"
        ],
        [
            "now apply open_gt.",
            "VernacExtend",
            "2318c82e3dfd68e1bf68de85d24d9b266cd32e60"
        ],
        [
            "destruct H' as [eps H'].",
            "VernacExtend",
            "bc82f85448b47ba23c3693fb6cdfc4e916175740"
        ],
        [
            "elim Rle_not_lt with (x - eps) x.",
            "VernacExtend",
            "7467d330ae6129643838cd48a51f0bc4f8a92bbe"
        ],
        [
            "apply Hlub.",
            "VernacExtend",
            "42a854660f9b5b76a9f43a3a158d45a7581393cb"
        ],
        [
            "intros u Hfu.",
            "VernacExtend",
            "68a7ba44cce6dd3f60858f0dd4e027a83a7a9311"
        ],
        [
            "apply Rnot_lt_le.",
            "VernacExtend",
            "3c60597e841405b7d257d92c4717e01515b21555"
        ],
        [
            "intros Hu.",
            "VernacExtend",
            "354a231d2e89381b80441c83de51a8623736a173"
        ],
        [
            "apply Rle_not_lt with (1 := proj2 (proj2 Hfu)).",
            "VernacExtend",
            "bf19d77d8c497e500b0f5712b7f69dd800c8431b"
        ],
        [
            "apply H'.",
            "VernacExtend",
            "b9f7b1afd5784d2a6d1eac6189a3bdc5f0119ad0"
        ],
        [
            "apply Rabs_lt_between'.",
            "VernacExtend",
            "63a15ff3174a06f608196b85267ac5d1aae1e55e"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exact Hu.",
            "VernacExtend",
            "2ef276b73f30adea6147a9e5bb93e0371d61e365"
        ],
        [
            "apply Rle_lt_trans with (1 := Hub u Hfu).",
            "VernacExtend",
            "bd308e4da377848331e54c51135aaf631c484d2d"
        ],
        [
            "apply Rminus_lt_0.",
            "VernacExtend",
            "266ec80c870ca91ace5efd2beddab25e945c4342"
        ],
        [
            "replace (x + eps - x) with (pos eps) by ring.",
            "VernacExtend",
            "a71263931943517e18f5ffca410b7cc821f81190"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "apply Rminus_lt_0.",
            "VernacExtend",
            "266ec80c870ca91ace5efd2beddab25e945c4342"
        ],
        [
            "replace (x - (x - eps)) with (pos eps) by ring.",
            "VernacExtend",
            "c4092aed191badfef8782a9c998a97b56299f319"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma IVT_Rbar_decr (f : R -> R) (a b la lb : Rbar) (y : R) : is_lim f a la -> is_lim f b lb -> (forall (x : R), Rbar_lt a x -> Rbar_lt x b -> continuity_pt f x) -> Rbar_lt a b -> Rbar_lt lb y /\\ Rbar_lt y la -> {x : R | Rbar_lt a x /\\ Rbar_lt x b /\\ f x = y}.",
            "VernacStartTheoremProof",
            "4ea8af48ab7bef2192fa29db3ae2ecbce23887c6"
        ],
        [
            "move => Hla Hlb Cf Hab Hy.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (IVT_Rbar_incr (fun x => - f x) a b (Rbar_opp la) (Rbar_opp lb) (-y)).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply is_lim_opp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply is_lim_opp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => x Hax Hxb.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by apply continuity_pt_opp, Cf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hab.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split ; apply Rbar_opp_lt ; rewrite Rbar_opp_involutive /Rbar_opp Ropp_involutive ; by apply Hy.",
            "VernacExtend",
            "53333cb718cff66f07cc074a150cbde125107b85"
        ],
        [
            "move => x Hx ; exists x ; intuition.",
            "VernacExtend",
            "9cf22d0991bcb9b52f60d16f38fb69d236b39d0e"
        ],
        [
            "by rewrite -(Ropp_involutive y) -H4 Ropp_involutive.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition continuity_2d_pt f x y := forall eps : posreal, locally_2d (fun u v => Rabs (f u v - f x y) < eps) x y.",
            "VernacDefinition",
            "18fde3c81d3547bdff710739f72f9b053ad59f1a"
        ],
        [
            "Lemma continuity_2d_pt_filterlim : forall f x y, continuity_2d_pt f x y <-> filterlim (fun z : R * R => f (fst z) (snd z)) (locally (x,y)) (locally (f x y)).",
            "VernacStartTheoremProof",
            "92f9477a777f363a2b885747b11aae4ef732bbf7"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros Cf P [eps He].",
            "VernacExtend",
            "dfd29f15d60a44a9dd0fd471d68ef317bc2d679c"
        ],
        [
            "specialize (Cf eps).",
            "VernacExtend",
            "4dd629f246617596079d971e5890bf4a009d445f"
        ],
        [
            "apply locally_2d_locally in Cf.",
            "VernacExtend",
            "362f59623976084bc339a99e92bf822f19e1c9b7"
        ],
        [
            "apply filter_imp with (2 := Cf).",
            "VernacExtend",
            "c877a3b50a0c321fa2468c027b51123fee0ddedf"
        ],
        [
            "intros [u v].",
            "VernacExtend",
            "c9b3ee7d8ebd28ed5e29d8ca474d701782d2eab1"
        ],
        [
            "apply He.",
            "VernacExtend",
            "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros Cf eps.",
            "VernacExtend",
            "3a4079fe27ad5b4661bec5977d27b02cbc6dc82e"
        ],
        [
            "apply locally_2d_locally.",
            "VernacExtend",
            "ef6e7a1f160f0048548d7d44408b1e8584988c50"
        ],
        [
            "specialize (Cf (fun z => Rabs (z - f x y) < eps)).",
            "VernacExtend",
            "055a5e2ac3f8e43505f87d5b9b61c77bb1adaaaf"
        ],
        [
            "unfold filtermap in Cf.",
            "VernacExtend",
            "daaabd0fcfc92c412202164b4495b51b10734456"
        ],
        [
            "apply Cf.",
            "VernacExtend",
            "50610f46fbfa53c93c9fcf1f56f87527a14f990a"
        ],
        [
            "now exists eps.",
            "VernacExtend",
            "231859d3bd429d5cb9a46c5a8150f7440e5ea441"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma uniform_continuity_2d : forall f a b c d, (forall x y, a <= x <= b -> c <= y <= d -> continuity_2d_pt f x y) -> forall eps : posreal, exists delta : posreal, forall x y u v, a <= x <= b -> c <= y <= d -> a <= u <= b -> c <= v <= d -> Rabs (u - x) < delta -> Rabs (v - y) < delta -> Rabs (f u v - f x y) < eps.",
            "VernacStartTheoremProof",
            "4b7127368e0a72a7dcca65ae7d104d4dd4ea023f"
        ],
        [
            "intros f a b c d Cf eps.",
            "VernacExtend",
            "470a1ae20c4b465a52d570b055e6fb9a87d1eb7b"
        ],
        [
            "set (P x y u v := Rabs (f u v - f x y) < pos_div_2 eps).",
            "VernacExtend",
            "b8149d4c7c27e08ec700618aaff104cb397cadf0"
        ],
        [
            "refine (_ (fun x y Hx Hy => locally_2d_ex_dec (P x y) x y _ (Cf x y Hx Hy _))).",
            "VernacExtend",
            "7d3d9f23878bb6dfecc3c930c3fccb038f6a8a96"
        ],
        [
            "intros delta1.",
            "VernacExtend",
            "2e787a6b0ad55c32875568412ec3621e984b4951"
        ],
        [
            "set (delta2 x y := match Rle_dec a x, Rle_dec x b, Rle_dec c y, Rle_dec y d with left Ha, left Hb, left Hc, left Hd => pos_div_2 (proj1_sig (delta1 x y (conj Ha Hb) (conj Hc Hd))) | _, _, _, _ => mkposreal _ Rlt_0_1 end).",
            "VernacExtend",
            "65000e07cb2b069f1749ac52fdfe0ee5572834b4"
        ],
        [
            "destruct (compactness_value_2d a b c d delta2) as (delta,Hdelta).",
            "VernacExtend",
            "d4f1be4371137253cf72dc003db7082b30482ef4"
        ],
        [
            "exists (pos_div_2 delta) => x y u v Hx Hy Hu Hv Hux Hvy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "specialize (Hdelta x y Hx Hy).",
            "VernacExtend",
            "85d3a5ebd6270eebe69f5068548831850a183704"
        ],
        [
            "apply Rnot_le_lt.",
            "VernacExtend",
            "b6f8b57a60bfd6845f42e4c68c9a5305f4b60dd7"
        ],
        [
            "apply: false_not_not Hdelta => Hdelta.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply Rlt_not_le.",
            "VernacExtend",
            "970672dbfa76c5b1a5bbbe80816db4b871608528"
        ],
        [
            "destruct Hdelta as (p&q&(Hap,Hpb)&(Hcq,Hqd)&Hxp&Hyq&Hd).",
            "VernacExtend",
            "2a6d8754579cc3d97b98ae24713198dd38945e09"
        ],
        [
            "replace (f u v - f x y) with (f u v - f p q + (f p q - f x y)) by ring.",
            "VernacExtend",
            "1f111e267ab1c6d5450c9dac3dd76c075fad5e42"
        ],
        [
            "apply Rle_lt_trans with (1 := Rabs_triang _ _).",
            "VernacExtend",
            "f9c6acae1b531169f9dfd40f6360571bc11e9f82"
        ],
        [
            "rewrite (double_var eps).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "revert Hxp Hyq Hd.",
            "VernacExtend",
            "4882ac7fea368120e643534f30663c7102947ab8"
        ],
        [
            "unfold delta2.",
            "VernacExtend",
            "ccd27d6a0af1c5b772071a10d70e8b0a3de1fde1"
        ],
        [
            "case Rle_dec => Hap' ; try easy.",
            "VernacExtend",
            "72cb795b82ef507b643b7b4749d19f39f5a0dfef"
        ],
        [
            "case Rle_dec => Hpb' ; try easy.",
            "VernacExtend",
            "72cb795b82ef507b643b7b4749d19f39f5a0dfef"
        ],
        [
            "case Rle_dec => Hcq' ; try easy.",
            "VernacExtend",
            "72cb795b82ef507b643b7b4749d19f39f5a0dfef"
        ],
        [
            "case Rle_dec => Hqd' ; try easy.",
            "VernacExtend",
            "72cb795b82ef507b643b7b4749d19f39f5a0dfef"
        ],
        [
            "clear delta2.",
            "VernacExtend",
            "c3b1398bbfd672c3471ffb505ff02a304afa6783"
        ],
        [
            "case delta1 => /= r Hr Hxp Hyq Hd.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rplus_lt_compat.",
            "VernacExtend",
            "f7bc5a60a4f35352751a55736bc694ac6ced98ea"
        ],
        [
            "apply Hr.",
            "VernacExtend",
            "aa68d994f36ec546c76f63b16f35647197b91e1e"
        ],
        [
            "replace (u - p) with (u - x + (x - p)) by ring.",
            "VernacExtend",
            "45ae5c98a9bd569c292087c7722731ac858d3639"
        ],
        [
            "apply Rle_lt_trans with (1 := Rabs_triang _ _).",
            "VernacExtend",
            "f9c6acae1b531169f9dfd40f6360571bc11e9f82"
        ],
        [
            "rewrite (double_var r).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_lt_compat with (2 := Hxp).",
            "VernacExtend",
            "6d470f06d97d09c6e122a4c3a6670abb1f29d833"
        ],
        [
            "apply Rlt_le_trans with (2 := Hd).",
            "VernacExtend",
            "9ec8ee3167f6b3edc46fc684738fa2346d49e6ae"
        ],
        [
            "apply Rlt_trans with (1 := Hux).",
            "VernacExtend",
            "d7b4ef5d01478664110b854cb5453f6fb44a46a2"
        ],
        [
            "apply: Rlt_eps2_eps.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "replace (v - q) with (v - y + (y - q)) by ring.",
            "VernacExtend",
            "65d7eb42711003b1523a1abe70526d4542a65a37"
        ],
        [
            "apply Rle_lt_trans with (1 := Rabs_triang _ _).",
            "VernacExtend",
            "f9c6acae1b531169f9dfd40f6360571bc11e9f82"
        ],
        [
            "rewrite (double_var r).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_lt_compat with (2 := Hyq).",
            "VernacExtend",
            "4440185fde2c36bb38e58430f125f1d45ad3785d"
        ],
        [
            "apply Rlt_le_trans with (2 := Hd).",
            "VernacExtend",
            "9ec8ee3167f6b3edc46fc684738fa2346d49e6ae"
        ],
        [
            "apply Rlt_trans with (1 := Hvy).",
            "VernacExtend",
            "c88658355ff9776193ebe9468ec42f67ae2c851e"
        ],
        [
            "apply: Rlt_eps2_eps.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "rewrite Rabs_minus_sym.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Hr.",
            "VernacExtend",
            "aa68d994f36ec546c76f63b16f35647197b91e1e"
        ],
        [
            "apply Rlt_trans with (1 := Hxp).",
            "VernacExtend",
            "60a2f15a0287cb86d0fd50b2e64d8ec6b9f85bfd"
        ],
        [
            "apply Rlt_eps2_eps.",
            "VernacExtend",
            "57005ded85ef0e45613ca5a139065be8e8425d00"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "apply Rlt_trans with (1 := Hyq).",
            "VernacExtend",
            "b677d27a2761cfa56f10153921d2fdfe8d188a33"
        ],
        [
            "apply Rlt_eps2_eps.",
            "VernacExtend",
            "57005ded85ef0e45613ca5a139065be8e8425d00"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "intros u v.",
            "VernacExtend",
            "d0984daaf81b5a88d7b1c18dbba4c758cf27d325"
        ],
        [
            "unfold P.",
            "VernacExtend",
            "434cc3f55beee2a7785044446fc359fddb900b69"
        ],
        [
            "destruct (Rlt_dec (Rabs (f u v - f x y)) (pos_div_2 eps)) ; [left|right]; assumption.",
            "VernacExtend",
            "04f97192e24a3f0f292c82122ce805f54b5903e4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma uniform_continuity_2d_1d : forall f a b c, (forall x, a <= x <= b -> continuity_2d_pt f x c) -> forall eps : posreal, exists delta : posreal, forall x y u v, a <= x <= b -> c - delta <= y <= c + delta -> a <= u <= b -> c - delta <= v <= c + delta -> Rabs (u - x) < delta -> Rabs (f u v - f x y) < eps.",
            "VernacStartTheoremProof",
            "0f9c46542d7b211df0bf170cbbb201be6a62a915"
        ],
        [
            "intros f a b c Cf eps.",
            "VernacExtend",
            "6d81e0a318331ebd52aa4a3f45bf6199cf3b39ef"
        ],
        [
            "set (P x y u v := Rabs (f u v - f x y) < pos_div_2 eps).",
            "VernacExtend",
            "b8149d4c7c27e08ec700618aaff104cb397cadf0"
        ],
        [
            "refine (_ (fun x Hx => locally_2d_ex_dec (P x c) x c _ (Cf x Hx _))).",
            "VernacExtend",
            "ca43b1cf9cd8471b62d9dabf9713dbd15d24d87f"
        ],
        [
            "intros delta1.",
            "VernacExtend",
            "2e787a6b0ad55c32875568412ec3621e984b4951"
        ],
        [
            "set (delta2 x := match Rle_dec a x, Rle_dec x b with left Ha, left Hb => pos_div_2 (proj1_sig (delta1 x (conj Ha Hb))) | _, _ => mkposreal _ Rlt_0_1 end).",
            "VernacExtend",
            "38e755f7658defcf4c0c602fc162552ab6918114"
        ],
        [
            "destruct (compactness_value_1d a b delta2) as (delta,Hdelta).",
            "VernacExtend",
            "8825f2f8866b46ce0c389508d953c5fafb347118"
        ],
        [
            "exists (pos_div_2 delta) => x y u v Hx Hy Hu Hv Hux.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "specialize (Hdelta x Hx).",
            "VernacExtend",
            "cfbd992d9729dcc66805dd2174a830e91a437523"
        ],
        [
            "apply Rnot_le_lt.",
            "VernacExtend",
            "b6f8b57a60bfd6845f42e4c68c9a5305f4b60dd7"
        ],
        [
            "apply: false_not_not Hdelta => Hdelta.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply Rlt_not_le.",
            "VernacExtend",
            "970672dbfa76c5b1a5bbbe80816db4b871608528"
        ],
        [
            "destruct Hdelta as (p&(Hap,Hpb)&Hxp&Hd).",
            "VernacExtend",
            "15cb8e336d92d4113392d1e512f2ca86aa5bf41b"
        ],
        [
            "replace (f u v - f x y) with (f u v - f p c + (f p c - f x y)) by ring.",
            "VernacExtend",
            "2496a22d00bb17dd18cf890e67e084f976968b4b"
        ],
        [
            "apply Rle_lt_trans with (1 := Rabs_triang _ _).",
            "VernacExtend",
            "f9c6acae1b531169f9dfd40f6360571bc11e9f82"
        ],
        [
            "rewrite (double_var eps).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "revert Hxp Hd.",
            "VernacExtend",
            "2c71a63859b8fc829cc08a077272c1a619b75661"
        ],
        [
            "unfold delta2.",
            "VernacExtend",
            "ccd27d6a0af1c5b772071a10d70e8b0a3de1fde1"
        ],
        [
            "case Rle_dec => Hap' ; try easy.",
            "VernacExtend",
            "72cb795b82ef507b643b7b4749d19f39f5a0dfef"
        ],
        [
            "case Rle_dec => Hpb' ; try easy.",
            "VernacExtend",
            "72cb795b82ef507b643b7b4749d19f39f5a0dfef"
        ],
        [
            "clear delta2.",
            "VernacExtend",
            "c3b1398bbfd672c3471ffb505ff02a304afa6783"
        ],
        [
            "case delta1 => /= r Hr Hxp Hd.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rplus_lt_compat.",
            "VernacExtend",
            "f7bc5a60a4f35352751a55736bc694ac6ced98ea"
        ],
        [
            "apply Hr.",
            "VernacExtend",
            "aa68d994f36ec546c76f63b16f35647197b91e1e"
        ],
        [
            "replace (u - p) with (u - x + (x - p)) by ring.",
            "VernacExtend",
            "45ae5c98a9bd569c292087c7722731ac858d3639"
        ],
        [
            "apply Rle_lt_trans with (1 := Rabs_triang _ _).",
            "VernacExtend",
            "f9c6acae1b531169f9dfd40f6360571bc11e9f82"
        ],
        [
            "rewrite (double_var r).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_lt_compat with (2 := Hxp).",
            "VernacExtend",
            "6d470f06d97d09c6e122a4c3a6670abb1f29d833"
        ],
        [
            "apply Rlt_le_trans with (2 := Hd).",
            "VernacExtend",
            "9ec8ee3167f6b3edc46fc684738fa2346d49e6ae"
        ],
        [
            "apply Rlt_trans with (1 := Hux).",
            "VernacExtend",
            "d7b4ef5d01478664110b854cb5453f6fb44a46a2"
        ],
        [
            "apply: Rlt_eps2_eps.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "apply Rle_lt_trans with (pos_div_2 delta).",
            "VernacExtend",
            "daf768d4159dbcfc2f47a8fa78d77a88535981e5"
        ],
        [
            "now apply Rabs_le_between'.",
            "VernacExtend",
            "1d4657e8b7b1811ac5b690fde586e513cf7b67dc"
        ],
        [
            "apply Rlt_le_trans with(1 := Rlt_eps2_eps _ (cond_pos delta)).",
            "VernacExtend",
            "0a45ff4f39a21b6fadfeceb464b55176e70fcc99"
        ],
        [
            "apply Rle_trans with (1 := Hd).",
            "VernacExtend",
            "199f83d4778cdf6d33284840ed46dabd05ee544b"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "apply Rlt_eps2_eps.",
            "VernacExtend",
            "57005ded85ef0e45613ca5a139065be8e8425d00"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "rewrite Rabs_minus_sym.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Hr.",
            "VernacExtend",
            "aa68d994f36ec546c76f63b16f35647197b91e1e"
        ],
        [
            "apply Rlt_trans with (1 := Hxp).",
            "VernacExtend",
            "60a2f15a0287cb86d0fd50b2e64d8ec6b9f85bfd"
        ],
        [
            "apply Rlt_eps2_eps.",
            "VernacExtend",
            "57005ded85ef0e45613ca5a139065be8e8425d00"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "apply Rle_lt_trans with (pos_div_2 delta).",
            "VernacExtend",
            "daf768d4159dbcfc2f47a8fa78d77a88535981e5"
        ],
        [
            "now apply Rabs_le_between'.",
            "VernacExtend",
            "1d4657e8b7b1811ac5b690fde586e513cf7b67dc"
        ],
        [
            "apply Rlt_le_trans with(1 := Rlt_eps2_eps _ (cond_pos delta)).",
            "VernacExtend",
            "0a45ff4f39a21b6fadfeceb464b55176e70fcc99"
        ],
        [
            "apply Rle_trans with (1 := Hd).",
            "VernacExtend",
            "199f83d4778cdf6d33284840ed46dabd05ee544b"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "apply Rlt_eps2_eps.",
            "VernacExtend",
            "57005ded85ef0e45613ca5a139065be8e8425d00"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "intros u v.",
            "VernacExtend",
            "d0984daaf81b5a88d7b1c18dbba4c758cf27d325"
        ],
        [
            "unfold P.",
            "VernacExtend",
            "434cc3f55beee2a7785044446fc359fddb900b69"
        ],
        [
            "destruct (Rlt_dec (Rabs (f u v - f x c)) (pos_div_2 eps)); [left|right] ; assumption.",
            "VernacExtend",
            "93ccbd35e7ebb102586558b82e6813d8394a644f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma uniform_continuity_2d_1d' : forall f a b c, (forall x, a <= x <= b -> continuity_2d_pt f c x) -> forall eps : posreal, exists delta : posreal, forall x y u v, a <= x <= b -> c - delta <= y <= c + delta -> a <= u <= b -> c - delta <= v <= c + delta -> Rabs (u - x) < delta -> Rabs (f v u - f y x) < eps.",
            "VernacStartTheoremProof",
            "6dd7444bbbdfc5917ddac0d54c1d8f08a892d8a8"
        ],
        [
            "intros f a b c Cf eps.",
            "VernacExtend",
            "6d81e0a318331ebd52aa4a3f45bf6199cf3b39ef"
        ],
        [
            "assert (T:(forall x : R, a <= x <= b -> continuity_2d_pt (fun x0 y : R => f y x0) x c) ).",
            "VernacExtend",
            "2356e75aa9590e1f5a9ae6389df0a6fa73301c4e"
        ],
        [
            "intros x Hx e.",
            "VernacExtend",
            "4b2bc658d1352d6bbc15c3a5ac9b52bdf2f8e0f0"
        ],
        [
            "destruct (Cf x Hx e) as (d,Hd).",
            "VernacExtend",
            "18e542940a9c5d9a02b1db1ebdf2386a33ad29ac"
        ],
        [
            "exists d.",
            "VernacExtend",
            "39cea21d4e04fa9463f57be4e5a423277681d456"
        ],
        [
            "intros; now apply Hd.",
            "VernacExtend",
            "5442cc0b2e703f8a6ee655c0fa82e3c6401911af"
        ],
        [
            "destruct (uniform_continuity_2d_1d (fun x y => f y x) a b c T eps) as (d,Hd).",
            "VernacExtend",
            "3798b283485185a4dde7e60706dff2489d4432c2"
        ],
        [
            "exists d; intros.",
            "VernacExtend",
            "b9e788289c3f4d552494ea1db28a0fbdfdeb0705"
        ],
        [
            "now apply Hd.",
            "VernacExtend",
            "15c9c6e291f7dbf0a6c15cab84ce6f5db83fe740"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma continuity_2d_pt_neq_0 : forall f x y, continuity_2d_pt f x y -> f x y <> 0 -> locally_2d (fun u v => f u v <> 0) x y.",
            "VernacStartTheoremProof",
            "8efa0e0a765d349906a3e380d13604c1f677abd1"
        ],
        [
            "intros f x y Cf H.",
            "VernacExtend",
            "f3a321ec692838167a7f307000bf9221443246c8"
        ],
        [
            "apply continuity_2d_pt_filterlim in Cf.",
            "VernacExtend",
            "0eacd1bde0ecc09e0efbb89943e3e2af67dbfd1d"
        ],
        [
            "apply locally_2d_locally.",
            "VernacExtend",
            "ef6e7a1f160f0048548d7d44408b1e8584988c50"
        ],
        [
            "apply (Cf (fun y => y <> 0)).",
            "VernacExtend",
            "0b794f43c53b0f22afe4b8ec50179fa46fc394ee"
        ],
        [
            "now apply open_neq.",
            "VernacExtend",
            "9e5c429edcb1bb04c8d5bb5fc92fa2424501e911"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma continuity_pt_id : forall x, continuity_pt (fun x => x) x.",
            "VernacStartTheoremProof",
            "1e0de095bd32c64d9942ca6eabea3e948c2de735"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "apply continuity_pt_filterlim.",
            "VernacExtend",
            "e7e11f829f0da02ed082c41d4319fefb2ba19a7b"
        ],
        [
            "now intros P.",
            "VernacExtend",
            "19ab06932640025e658ae6c88dc50d978078fe19"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma continuity_2d_pt_id1 : forall x y, continuity_2d_pt (fun u v => u) x y.",
            "VernacStartTheoremProof",
            "084a6c21c4cc11ef69bba8b2a8f529f683a3416b"
        ],
        [
            "intros x y eps; exists eps; tauto.",
            "VernacExtend",
            "45f9f070015a4c45578edf281859581a3ca9dc3f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma continuity_2d_pt_id2 : forall x y, continuity_2d_pt (fun u v => v) x y.",
            "VernacStartTheoremProof",
            "8dfc9895a696fbafefba704921698108cc1b8774"
        ],
        [
            "intros x y eps; exists eps; tauto.",
            "VernacExtend",
            "45f9f070015a4c45578edf281859581a3ca9dc3f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma continuity_2d_pt_const : forall x y c, continuity_2d_pt (fun u v => c) x y.",
            "VernacStartTheoremProof",
            "b66e3df92903064639848fd7af105539c8d6876e"
        ],
        [
            "intros x y c eps; exists eps; rewrite Rminus_eq_0 Rabs_R0.",
            "VernacExtend",
            "1a33f2ac2533f51a5a73874d49807c866ca352d6"
        ],
        [
            "intros; apply cond_pos.",
            "VernacExtend",
            "d54831fecb9d9e65ebb68fd8d5444020c548cf21"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma continuity_pt_ext_loc : forall f g x, locally x (fun x => f x = g x) -> continuity_pt f x -> continuity_pt g x.",
            "VernacStartTheoremProof",
            "eac84471aad6c53a6cbe8cb7395f88a5a1a560f8"
        ],
        [
            "intros f g x Heq Cf.",
            "VernacExtend",
            "72f1f93808acf3e470e3cca8126f0e2dd8f7089d"
        ],
        [
            "apply continuity_pt_filterlim in Cf.",
            "VernacExtend",
            "73ae1e7add4b664c2296e31a449355bb785b4a76"
        ],
        [
            "apply continuity_pt_filterlim.",
            "VernacExtend",
            "e7e11f829f0da02ed082c41d4319fefb2ba19a7b"
        ],
        [
            "rewrite -(locally_singleton _ _ Heq).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply filterlim_ext_loc with f.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma continuity_pt_ext : forall f g x, (forall x, f x = g x) -> continuity_pt f x -> continuity_pt g x.",
            "VernacStartTheoremProof",
            "601e5b902dc37f83563ff4c25d07f609e6449760"
        ],
        [
            "intros f g x Heq.",
            "VernacExtend",
            "29966d2f8857985b347ce0718922abc61d463c8d"
        ],
        [
            "apply continuity_pt_ext_loc.",
            "VernacExtend",
            "5b5719b354c4a8c13364ad40a90b6ac39bcd35ae"
        ],
        [
            "by apply filter_forall.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma continuity_2d_pt_ext_loc : forall f g x y, locally_2d (fun u v => f u v = g u v) x y -> continuity_2d_pt f x y -> continuity_2d_pt g x y.",
            "VernacStartTheoremProof",
            "e42b6a78d739c3d01383922c151485766a542174"
        ],
        [
            "intros f g x y Heq Cf.",
            "VernacExtend",
            "38c5b1288d1b20df88d95fb53d10dbb8be9e783b"
        ],
        [
            "apply locally_2d_locally in Heq.",
            "VernacExtend",
            "568a47cd7d34cfca28867dc37d68ffb4e6b8bf3d"
        ],
        [
            "apply continuity_2d_pt_filterlim in Cf.",
            "VernacExtend",
            "0eacd1bde0ecc09e0efbb89943e3e2af67dbfd1d"
        ],
        [
            "apply continuity_2d_pt_filterlim.",
            "VernacExtend",
            "b6b9ac5f01c00b9bf67d33187b183cf20656d595"
        ],
        [
            "rewrite -(locally_singleton _ _ Heq).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply filterlim_ext_loc with (2 := Cf).",
            "VernacExtend",
            "c357449de121f0d594fb1749b6e1a20808f327e4"
        ],
        [
            "by apply Heq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma continuity_2d_pt_ext : forall f g x y, (forall x y, f x y = g x y) -> continuity_2d_pt f x y -> continuity_2d_pt g x y.",
            "VernacStartTheoremProof",
            "2f6fa92ef5627bf1915ac5d9a150cf66c5d7c39a"
        ],
        [
            "intros f g x y Heq.",
            "VernacExtend",
            "56ec2bcdec428f74bf58e719898b80e63e868507"
        ],
        [
            "apply continuity_2d_pt_ext_loc.",
            "VernacExtend",
            "00fecdf6acdaa228426119fac2c7acca1526c50a"
        ],
        [
            "apply locally_2d_locally.",
            "VernacExtend",
            "ef6e7a1f160f0048548d7d44408b1e8584988c50"
        ],
        [
            "apply filter_forall.",
            "VernacExtend",
            "8c32dc4f52f30e2c1af34a6c3ce57fe2d3feab75"
        ],
        [
            "now intros [u v].",
            "VernacExtend",
            "78841ab0a6dc930090e87595a5ad76277bd6fac7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma continuity_1d_2d_pt_comp : forall f g x y, continuity_pt f (g x y) -> continuity_2d_pt g x y -> continuity_2d_pt (fun x y => f (g x y)) x y.",
            "VernacStartTheoremProof",
            "3be2e515353eeadcea848041945e409f55742fdc"
        ],
        [
            "intros f g x y Cf Cg.",
            "VernacExtend",
            "6cc3d1a3ed463324d9b69460befa7d37262a744a"
        ],
        [
            "apply continuity_pt_filterlim in Cf.",
            "VernacExtend",
            "73ae1e7add4b664c2296e31a449355bb785b4a76"
        ],
        [
            "apply continuity_2d_pt_filterlim in Cg.",
            "VernacExtend",
            "62d4446d1a477c4c619425542938ff21b2bc0e97"
        ],
        [
            "apply continuity_2d_pt_filterlim.",
            "VernacExtend",
            "b6b9ac5f01c00b9bf67d33187b183cf20656d595"
        ],
        [
            "apply: filterlim_comp Cg Cf.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma continuity_2d_pt_opp (f : R -> R -> R) (x y : R) : continuity_2d_pt f x y -> continuity_2d_pt (fun u v => - f u v) x y.",
            "VernacStartTheoremProof",
            "7c21dc76dcbc5684b4f5661714615e4df8817ffc"
        ],
        [
            "apply continuity_1d_2d_pt_comp.",
            "VernacExtend",
            "7f0f0bfea3ff859e7e4267b058bce22bc5c1bd4e"
        ],
        [
            "apply continuity_pt_opp.",
            "VernacExtend",
            "238c2d5d040985b9f9b2cd62b295bf4aea700456"
        ],
        [
            "apply continuity_pt_id.",
            "VernacExtend",
            "eeef04bdabafa78a69f5a42ef5803b63666e8048"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma continuity_2d_pt_plus (f g : R -> R -> R) (x y : R) : continuity_2d_pt f x y -> continuity_2d_pt g x y -> continuity_2d_pt (fun u v => f u v + g u v) x y.",
            "VernacStartTheoremProof",
            "ffc66330edd798c0cd09cc5d602fa40922a30073"
        ],
        [
            "intros Cf Cg.",
            "VernacExtend",
            "4e7c5e286eb4ef21ffa9c75793902212dddfde12"
        ],
        [
            "apply continuity_2d_pt_filterlim in Cf.",
            "VernacExtend",
            "0eacd1bde0ecc09e0efbb89943e3e2af67dbfd1d"
        ],
        [
            "apply continuity_2d_pt_filterlim in Cg.",
            "VernacExtend",
            "62d4446d1a477c4c619425542938ff21b2bc0e97"
        ],
        [
            "apply continuity_2d_pt_filterlim.",
            "VernacExtend",
            "b6b9ac5f01c00b9bf67d33187b183cf20656d595"
        ],
        [
            "eapply filterlim_comp_2.",
            "VernacExtend",
            "738a6ac74a2b7b80aac28fb98e1d3a3cccbca8d5"
        ],
        [
            "apply Cf.",
            "VernacExtend",
            "50610f46fbfa53c93c9fcf1f56f87527a14f990a"
        ],
        [
            "apply Cg.",
            "VernacExtend",
            "670e5d703c64b5be268b12714a375dc4e4a8d0fa"
        ],
        [
            "apply: filterlim_plus.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma continuity_2d_pt_minus (f g : R -> R -> R) (x y : R) : continuity_2d_pt f x y -> continuity_2d_pt g x y -> continuity_2d_pt (fun u v => f u v - g u v) x y.",
            "VernacStartTheoremProof",
            "355b329cfc3211cf27e1c5d954c14e4a96a2fcd8"
        ],
        [
            "move => Cf Cg.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply continuity_2d_pt_plus.",
            "VernacExtend",
            "df5a8a417edaeae44af71f07272e95b7a5d6699b"
        ],
        [
            "exact: Cf.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "by apply continuity_2d_pt_opp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma continuity_2d_pt_inv (f : R -> R -> R) (x y : R) : continuity_2d_pt f x y -> f x y <> 0 -> continuity_2d_pt (fun u v => / f u v) x y.",
            "VernacStartTheoremProof",
            "83fc2486c3befadedfa98bc431702c0f78927436"
        ],
        [
            "intros Cf Df.",
            "VernacExtend",
            "c4d4a1a4cdb6aaf6053b3f4090df3c964a7c318e"
        ],
        [
            "apply continuity_2d_pt_filterlim in Cf.",
            "VernacExtend",
            "0eacd1bde0ecc09e0efbb89943e3e2af67dbfd1d"
        ],
        [
            "apply continuity_2d_pt_filterlim.",
            "VernacExtend",
            "b6b9ac5f01c00b9bf67d33187b183cf20656d595"
        ],
        [
            "apply filterlim_comp with (1 := Cf).",
            "VernacExtend",
            "a8efc7aee103a51e56f9caab00bcdfeaeeebf253"
        ],
        [
            "apply (filterlim_Rbar_inv (f x y)).",
            "VernacExtend",
            "1588dd8269203d2c433c62d0e24b129f47eb71c3"
        ],
        [
            "contradict Df.",
            "VernacExtend",
            "016779d955871029f0514348317eebe7aa566e8d"
        ],
        [
            "now injection Df.",
            "VernacExtend",
            "3aa421da28097f73c1db496094755a5d44b2428e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma continuity_2d_pt_mult (f g : R -> R -> R) (x y : R) : continuity_2d_pt f x y -> continuity_2d_pt g x y -> continuity_2d_pt (fun u v => f u v * g u v) x y.",
            "VernacStartTheoremProof",
            "5da99a1a2b177880054a8b433cf1b3154237747f"
        ],
        [
            "intros Cf Cg.",
            "VernacExtend",
            "4e7c5e286eb4ef21ffa9c75793902212dddfde12"
        ],
        [
            "apply continuity_2d_pt_filterlim in Cf.",
            "VernacExtend",
            "0eacd1bde0ecc09e0efbb89943e3e2af67dbfd1d"
        ],
        [
            "apply continuity_2d_pt_filterlim in Cg.",
            "VernacExtend",
            "62d4446d1a477c4c619425542938ff21b2bc0e97"
        ],
        [
            "apply continuity_2d_pt_filterlim.",
            "VernacExtend",
            "b6b9ac5f01c00b9bf67d33187b183cf20656d595"
        ],
        [
            "eapply filterlim_comp_2.",
            "VernacExtend",
            "738a6ac74a2b7b80aac28fb98e1d3a3cccbca8d5"
        ],
        [
            "apply Cf.",
            "VernacExtend",
            "50610f46fbfa53c93c9fcf1f56f87527a14f990a"
        ],
        [
            "apply Cg.",
            "VernacExtend",
            "670e5d703c64b5be268b12714a375dc4e4a8d0fa"
        ],
        [
            "by apply (filterlim_Rbar_mult (f x y) (g x y) (f x y * g x y)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Continuity.",
            "VernacBeginSection",
            "c72223a990bbb79ba577a9f5dd8c047a4c855372"
        ],
        [
            "Context {T U : UniformSpace}.",
            "VernacContext",
            "e3064835be83ef7bb413b79fe6a3ef05ec71c108"
        ],
        [
            "Definition continuous_on (D : T -> Prop) (f : T -> U) := forall x, D x -> filterlim f (within D (locally x)) (locally (f x)).",
            "VernacDefinition",
            "85090b12e2803fc05a7db9c69537fb59fc62679a"
        ],
        [
            "Definition continuous (f : T -> U) (x : T) := filterlim f (locally x) (locally (f x)).",
            "VernacDefinition",
            "49bf07e5236d8a8ee1cbcc8b871a309ab90e7a71"
        ],
        [
            "Lemma continuous_continuous_on : forall (D : T -> Prop) (f : T -> U) (x : T), locally x D -> continuous_on D f -> continuous f x.",
            "VernacStartTheoremProof",
            "0e66160e8b2d8a619637a0bcd6e770def3422db7"
        ],
        [
            "intros D f x Dx CD P Pfx.",
            "VernacExtend",
            "3a09a1a4f855f2bdcff15d93af8640a1d73b6543"
        ],
        [
            "assert (Dx' := locally_singleton _ _ Dx).",
            "VernacExtend",
            "bd0aa630d0357790eba1fdf18751319d360de2a9"
        ],
        [
            "generalize (filter_and _ _ Dx (CD x Dx' P Pfx)).",
            "VernacExtend",
            "7c9391d481e5e8fa90b86ecb826b8364042c80a3"
        ],
        [
            "unfold filtermap, within.",
            "VernacExtend",
            "43b855db24d4bdbf237cb60de5d8592d4d4e8464"
        ],
        [
            "apply filter_imp.",
            "VernacExtend",
            "cd5d68d491d9b471ebb7deccb08d7a71ba953368"
        ],
        [
            "intros t [H1 H2].",
            "VernacExtend",
            "5745969ea200cf658f708285efa8193c7a2226fc"
        ],
        [
            "now apply H2.",
            "VernacExtend",
            "24cee18271b1e351879d2c867b57a8b1f3948c7d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma continuous_on_subset : forall (D E : T -> Prop) (f : T -> U), (forall x, E x -> D x) -> continuous_on D f -> continuous_on E f.",
            "VernacStartTheoremProof",
            "83ec6fb720e58a0fe913f21bdecd37e98a4a5f1a"
        ],
        [
            "intros D E f H CD x Ex P Pfx.",
            "VernacExtend",
            "bd9ad92d592c077353d5aae00e4ee3203bdd2542"
        ],
        [
            "generalize (CD x (H x Ex) P Pfx).",
            "VernacExtend",
            "b997ee5c3a4279b891b3716c442417494b7a66c1"
        ],
        [
            "unfold filtermap, within.",
            "VernacExtend",
            "43b855db24d4bdbf237cb60de5d8592d4d4e8464"
        ],
        [
            "apply filter_imp.",
            "VernacExtend",
            "cd5d68d491d9b471ebb7deccb08d7a71ba953368"
        ],
        [
            "intros t H' Et.",
            "VernacExtend",
            "9097062cced3d6554d6d34e9decc16f8b833b136"
        ],
        [
            "now apply H', H.",
            "VernacExtend",
            "8256c5e6291ac2159ffa06c9e4ac78a44035c736"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma continuous_on_forall : forall (D : T -> Prop) (f : T -> U), (forall x, D x -> continuous f x) -> continuous_on D f.",
            "VernacStartTheoremProof",
            "c6012fac03124a0f9835ee222e65cc7719363498"
        ],
        [
            "intros D f H x Dx P Pfx.",
            "VernacExtend",
            "c7736979b69700b6337952714c5888ad62c9d927"
        ],
        [
            "generalize (H x Dx P Pfx).",
            "VernacExtend",
            "bc43a184507c8c69210f8f01e19ee4c3ea3d4796"
        ],
        [
            "unfold filtermap, within.",
            "VernacExtend",
            "43b855db24d4bdbf237cb60de5d8592d4d4e8464"
        ],
        [
            "now apply filter_imp.",
            "VernacExtend",
            "1634f17ef3d06f3d92d7c9af2991f9dda7feb1da"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma continuous_ext_loc (f g : T -> U) (x : T) : locally x (fun y : T => g y = f y) -> continuous g x -> continuous f x.",
            "VernacStartTheoremProof",
            "55bd8832aae9fcb892b7af26fcb71d9efbf73de1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply filterlim_ext_loc.",
            "VernacExtend",
            "735b49873e3aa689c51125555ec9be4b621211d4"
        ],
        [
            "by apply H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -(locally_singleton _ _ H).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma continuous_ext : forall (f g : T -> U) (x : T), (forall x, f x = g x) -> continuous f x -> continuous g x.",
            "VernacStartTheoremProof",
            "93166c61d074fc10bef66e5ce5f83e4b0961860b"
        ],
        [
            "intros f g x H Cf.",
            "VernacExtend",
            "db8a1feb09796d677ef61203b02beffc74a9d31f"
        ],
        [
            "apply filterlim_ext with (1 := H).",
            "VernacExtend",
            "6f41176d2a918fc3e21cf3e09839eb3510d9177f"
        ],
        [
            "now rewrite <- H.",
            "VernacExtend",
            "263ddf4271621bf4b397740764d4ad46d50c2bb1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma continuous_on_ext : forall (D : T -> Prop) (f g : T -> U), (forall x, D x -> f x = g x) -> continuous_on D f -> continuous_on D g.",
            "VernacStartTheoremProof",
            "e139cd1b9fae56f3a939146a8e153cc9b79ae7f4"
        ],
        [
            "intros D f g H Cf x Dx.",
            "VernacExtend",
            "2baa8d5f2a8a4f31f5b88fb44e76092706102c85"
        ],
        [
            "apply filterlim_within_ext with (1 := H).",
            "VernacExtend",
            "cfbfac9ea5dfaccc52a0069197f04accf0bb32a3"
        ],
        [
            "rewrite <- H with (1 := Dx).",
            "VernacExtend",
            "8286e762eba09d1722525df8969bef734dad3b90"
        ],
        [
            "now apply Cf.",
            "VernacExtend",
            "8b2a93b9c540e05419f8d9aafc9391eadc576c23"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Continuity.",
            "VernacEndSegment",
            "018fdb6628c6cb2978fd1d7b082c51cadcb06c9c"
        ],
        [
            "Lemma continuous_comp {U V W : UniformSpace} (f : U -> V) (g : V -> W) (x : U) : continuous f x -> continuous g (f x) -> continuous (fun x => g (f x)) x.",
            "VernacStartTheoremProof",
            "c052b34713dcf6751ca552d6205dcf42b23661ef"
        ],
        [
            "by apply filterlim_comp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma continuous_comp_2 {U V W X : UniformSpace} (f : U -> V) (g : U -> W) (h : V -> W -> X) (x : U) : continuous f x -> continuous g x -> continuous (fun (x : V * W) => h (fst x) (snd x)) (f x,g x) -> continuous (fun x => h (f x) (g x)) x.",
            "VernacStartTheoremProof",
            "8da45381ff2f58f7ad93874e4d138235ae1b8dcd"
        ],
        [
            "intros Cf Cg Ch.",
            "VernacExtend",
            "b002bbfe67e0254457b1afa2d6b5c33cf984d236"
        ],
        [
            "eapply filterlim_comp_2.",
            "VernacExtend",
            "738a6ac74a2b7b80aac28fb98e1d3a3cccbca8d5"
        ],
        [
            "by apply Cf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Cg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply filterlim_locally => eps.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (proj1 (filterlim_locally _ _) Ch eps) => /= del Hdel.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite {1}/ball /= /prod_ball /= in Hdel.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exists (fun y => ball (f x) (pos del) y) (fun y => ball (g x) (pos del) y).",
            "VernacExtend",
            "49af463f60570b831c9d18a648d103cecaab20af"
        ],
        [
            "apply locally_ball.",
            "VernacExtend",
            "a524778101c365be1e298c6f20c46038902c61d3"
        ],
        [
            "apply locally_ball.",
            "VernacExtend",
            "a524778101c365be1e298c6f20c46038902c61d3"
        ],
        [
            "move => y z /= Hy Hz.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply (Hdel (y,z)).",
            "VernacExtend",
            "97c77deb0b123d649c4256cf3ec814b5cb649832"
        ],
        [
            "by split.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_comp_continuous (f g : R -> R) (x : Rbar) (l : R) : is_lim f x l -> continuous g l -> is_lim (fun x => g (f x)) x (g l).",
            "VernacStartTheoremProof",
            "0f57025435201ba2d5c85f6876fe9c87ac85a28f"
        ],
        [
            "intros Hf Hg.",
            "VernacExtend",
            "9cea10f3019eec1e1c1dcd5d69eef2f9cbe47708"
        ],
        [
            "apply filterlim_locally => eps.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "destruct (proj1 (filterlim_locally _ _) Hg eps) as [e He] ; clear Hg.",
            "VernacExtend",
            "0bbcd84172f6c4f2fab8d3e39458070de1ec8f75"
        ],
        [
            "eapply filter_imp.",
            "VernacExtend",
            "bf3d126874cf320edb00f681aadb1db062bce3fd"
        ],
        [
            "intros y Hy.",
            "VernacExtend",
            "d610d987f827782ed7ad408419c9743f4107dcdc"
        ],
        [
            "apply He, Hy.",
            "VernacExtend",
            "6a03428e9f385f571df825a94a82b0cadcfad0c1"
        ],
        [
            "by apply Hf, locally_ball.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma continuous_fst {U V : UniformSpace} (x : U) (y : V) : continuous (fst (B:=V)) (x, y).",
            "VernacStartTheoremProof",
            "36a2025e2263ec3840e82a56b9a5c2e144f2b2b7"
        ],
        [
            "intros P [d Hd].",
            "VernacExtend",
            "b0e698234308a641534e33c7e92cd0cf9f876c93"
        ],
        [
            "exists d => z [/= Hz1 Hz2].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply Hd => /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma continuous_snd {U V : UniformSpace} (x : U) (y : V) : continuous (snd (B:=V)) (x, y).",
            "VernacStartTheoremProof",
            "3be63c8a97f045f51a1a1519abbf82d26f85e975"
        ],
        [
            "intros P [d Hd].",
            "VernacExtend",
            "b0e698234308a641534e33c7e92cd0cf9f876c93"
        ],
        [
            "exists d => z [/= Hz1 Hz2].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply Hd => /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma continuous_const {U V : UniformSpace} (c : V) (x : U) : continuous (fun _ => c) x.",
            "VernacStartTheoremProof",
            "fad6ea84a639bf124f3844573955ace91ec357cb"
        ],
        [
            "apply filterlim_const.",
            "VernacExtend",
            "ff971edf84d1cf6e134869f4729acc40969816e1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma continuous_id {U : UniformSpace} (x : U) : continuous (fun y => y) x.",
            "VernacStartTheoremProof",
            "ff89e58e99184e54b8394c6fb95c04e4df2f206b"
        ],
        [
            "apply filterlim_id.",
            "VernacExtend",
            "0c9885f23d2ca915379801b6ded9080d6c98b8f7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Continuity_op.",
            "VernacBeginSection",
            "a626d79c8317141f55c73e63aa97488530f3155f"
        ],
        [
            "Context {U : UniformSpace} {K : AbsRing} {V : NormedModule K}.",
            "VernacContext",
            "b2b610aeae3c89c688f8d90bb44c09a43585b38a"
        ],
        [
            "Lemma continuous_opp (f : U -> V) (x : U) : continuous f x -> continuous (fun x : U => opp (f x)) x.",
            "VernacStartTheoremProof",
            "47b5fd9b5dddcf02764356bcbe6ddcead73bba4b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply filterlim_comp.",
            "VernacExtend",
            "887c72ce037fc4dc1c63092170c000188c601e2f"
        ],
        [
            "by apply H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply (filterlim_opp (f x)).",
            "VernacExtend",
            "181d11a2d6714061684dfe3df6a695709454ed9e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma continuous_plus (f g : U -> V) (x : U) : continuous f x -> continuous g x -> continuous (fun x : U => plus (f x) (g x)) x.",
            "VernacStartTheoremProof",
            "58d653f4eff763c1e42c2ade83a6e62a3d1e500b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply filterlim_comp_2.",
            "VernacExtend",
            "738a6ac74a2b7b80aac28fb98e1d3a3cccbca8d5"
        ],
        [
            "by apply H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply H0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply (filterlim_plus (f x) (g x)).",
            "VernacExtend",
            "ab603468f03bb7253f496d00b717144b18eb5b88"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma continuous_minus (f g : U -> V) (x : U) : continuous f x -> continuous g x -> continuous (fun x : U => minus (f x) (g x)) x.",
            "VernacStartTheoremProof",
            "4a890d93f4e27e2c4f54e70aef3279605ec611af"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply continuous_plus.",
            "VernacExtend",
            "1056f8a39923c019dc7af008247ba60188d3c8cb"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "by apply continuous_opp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma continuous_scal (k : U -> K) (f : U -> V) (x : U) : continuous k x -> continuous f x -> continuous (fun y => scal (k y) (f y)) x.",
            "VernacStartTheoremProof",
            "029dd6ede1ace1371e2d5ab5cc229d903b3d10e4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "by eapply filterlim_comp_2, filterlim_scal.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma continuous_scal_r (k : K) (f : U -> V) (x : U) : continuous f x -> continuous (fun y => scal k (f y)) x.",
            "VernacStartTheoremProof",
            "ec8f78052dcdeae5e33ff138797045a383c9e8b6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "by apply continuous_comp, filterlim_scal_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma continuous_scal_l (f : U -> K) (k : V) (x : U) : continuous f x -> continuous (fun y => scal (f y) k) x.",
            "VernacStartTheoremProof",
            "a7f942a181612a3809c6c2ad7a4b2c550e77b360"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (continuous_comp f (fun y => scal y k)) => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply filterlim_scal_l.",
            "VernacExtend",
            "9f9b42fff9cadd03b539c76cc284adc09ffb4d3a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Continuity_op.",
            "VernacEndSegment",
            "842b3bdc018a6ec761924e4851fd9f59d385f657"
        ],
        [
            "Lemma continuous_mult {U : UniformSpace} {K : AbsRing} (f g : U -> K) (x : U) : continuous f x -> continuous g x -> continuous (fun y => mult (f y) (g y)) x.",
            "VernacStartTheoremProof",
            "bc4042f6c8c43c616a868157494e9cf17bdfffc5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "by eapply filterlim_comp_2, filterlim_mult.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section UnifCont.",
            "VernacBeginSection",
            "75c330726582d003a23a2251614aa34cf327c1a9"
        ],
        [
            "Context {V : UniformSpace}.",
            "VernacContext",
            "80f31d804a05b0c440f8d3f327cd47d09c14cd51"
        ],
        [
            "Lemma unifcont_1d (f : R -> V) a b : (forall x, a <= x <= b -> continuous f x) -> forall eps : posreal, {delta : posreal | forall x y, a <= x <= b -> a <= y <= b -> ball x delta y -> ~~ ball (f x) eps (f y)}.",
            "VernacStartTheoremProof",
            "a5498918de0cf83237af0dea002107a7f641a586"
        ],
        [
            "intros Cf eps.",
            "VernacExtend",
            "3a4079fe27ad5b4661bec5977d27b02cbc6dc82e"
        ],
        [
            "wlog: f Cf / (forall z : R, continuous f z) => [ Hw | {Cf} Cf ].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "destruct (C0_extension_le f a b) as [g [Cg Hg]].",
            "VernacExtend",
            "3a93c4e916b371c303d62c2055769d859c699232"
        ],
        [
            "by apply Cf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "destruct (Hw g) as [d Hd].",
            "VernacExtend",
            "e6c34051619bdc81ac7a5ede3bdbef681078bd6d"
        ],
        [
            "intros x Hx ; apply Cg.",
            "VernacExtend",
            "e9250dc9f65c4069c92f3480d141a2bbc335ce39"
        ],
        [
            "apply Cg.",
            "VernacExtend",
            "670e5d703c64b5be268b12714a375dc4e4a8d0fa"
        ],
        [
            "exists d => x y Hx Hy Hxy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -!Hg //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Hd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "assert (forall (x : R), {delta : posreal | forall y : R, ball x delta y -> ~~ ball (f x) (pos_div_2 eps) (f y)}).",
            "VernacExtend",
            "1e98c2b085ffb2858abcf3ea9769f68c702f3b55"
        ],
        [
            "move: (pos_div_2 eps) => {eps} eps x.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "assert (Rbar_lt 0 (Lub.Lub_Rbar (fun d => forall y : R, ball x d y -> ball (f x) eps (f y)))).",
            "VernacExtend",
            "56bf2fe8219a49608816fa962f2f0f0de24df8f5"
        ],
        [
            "case: (Lub.Lub_Rbar_correct (fun d => forall y : R, ball x d y -> ball (f x) eps (f y))).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (Lub.Lub_Rbar _) => l H1 H2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (proj1 (filterlim_locally _ _) (Cf x) eps) => d Hd.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "eapply Rbar_lt_le_trans, H1.",
            "VernacExtend",
            "e8bb36a2dccd554e5a9e4b75eb7c54b9951a1ea3"
        ],
        [
            "by apply d.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "assert (0 < Rbar_min 1 (Lub.Lub_Rbar (fun d => forall y : R, ball x d y -> ball (f x) eps (f y)))).",
            "VernacExtend",
            "87089851e3cd9eaac5cf6d9d0a8d941d64548cb2"
        ],
        [
            "move: H ; case: (Lub.Lub_Rbar (fun d => forall y : R, ball x d y -> ball (f x) eps (f y))) => [l | | ] //= H0.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "apply Rmin_case => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply Rlt_0_1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rlt_0_1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "set d := mkposreal _ H0.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "exists d.",
            "VernacExtend",
            "39cea21d4e04fa9463f57be4e5a423277681d456"
        ],
        [
            "unfold d ; clear d ; simpl.",
            "VernacExtend",
            "fc4b4bc8741f098b4f33202242d2a9dd03c2944e"
        ],
        [
            "case: (Lub.Lub_Rbar_correct (fun d => forall y : R, ball x d y -> ball (f x) eps (f y))).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (Lub.Lub_Rbar (fun d => forall y : R, ball x d y -> ball (f x) eps (f y))) H => {H0} l H0 H1 H2 y Hy.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "contradict Hy.",
            "VernacExtend",
            "5378912ae1f409840716e13b5c13ff1658002182"
        ],
        [
            "apply Rle_not_lt.",
            "VernacExtend",
            "1f0f6b47a7d49626d97b2585f7610e291096035d"
        ],
        [
            "apply (Rbar_le_trans (Finite _) l (Finite _)).",
            "VernacExtend",
            "c47df897ae32018a4d678023ef7c955865d515b1"
        ],
        [
            "case: (l) H0 => [r | | ] //= H0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rmin_r.",
            "VernacExtend",
            "d165954e4d055817b42cbc8960efd3fee45e4f16"
        ],
        [
            "apply H2 => d /= Hd.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rnot_lt_le ; contradict Hy.",
            "VernacExtend",
            "c93e15dbb1d1f0673c3e21057043495f8c0e943c"
        ],
        [
            "by apply Hd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "destruct (compactness_value_1d a b (fun x => pos_div_2 (proj1_sig (H x)))) as [d Hd].",
            "VernacExtend",
            "1962368aa0820c4367ac709a381f06a8c2bbe3f0"
        ],
        [
            "exists d => x y Hx Hy Hxy Hf.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply (Hd x Hx).",
            "VernacExtend",
            "004a901a22502ac9634e31b234ba5ec70b982086"
        ],
        [
            "case => {Hd} t [Ht].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: H => /= delta Hdelta [Htx Hdt].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply (Hdelta x).",
            "VernacExtend",
            "418223aa38972b753930aa251c6b8fb0909e1211"
        ],
        [
            "eapply ball_le, Htx.",
            "VernacExtend",
            "3b176cf3f793b20f69b3d94da7c842724c80cc66"
        ],
        [
            "rewrite {2}(double_var delta).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rminus_le_0 ; ring_simplify.",
            "VernacExtend",
            "48c96302111e8edc2fcb95e79f4f71c3818d133f"
        ],
        [
            "apply Rlt_le, is_pos_div_2.",
            "VernacExtend",
            "c5b3f2736494705d2603c277cc3b65264c236a75"
        ],
        [
            "intro Hftx.",
            "VernacExtend",
            "96764bdebf90402f59b36466cd0adf0a2ec4d2ac"
        ],
        [
            "apply (Hdelta y).",
            "VernacExtend",
            "9f11385b1e3353fd94bf8ac7ad36d063b0ae25ff"
        ],
        [
            "rewrite (double_var delta).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply ball_triangle with x.",
            "VernacExtend",
            "08d66ea10707ac1cad5208e42f7451385e713084"
        ],
        [
            "apply Htx.",
            "VernacExtend",
            "1923c2b4fbb8dfb77e261b80091ab588c75b3bf4"
        ],
        [
            "by eapply ball_le, Hxy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "contradict Hf.",
            "VernacExtend",
            "ed434da833cd32c279b9dd331500e21a90b4c0f9"
        ],
        [
            "rewrite (double_var eps).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "eapply ball_triangle, Hf.",
            "VernacExtend",
            "f288449bf5bf26cb85526a2ac8b49bfe2117cdb9"
        ],
        [
            "by apply ball_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End UnifCont.",
            "VernacEndSegment",
            "af7d7e4ffec1ad491c5377a1421fba22e73660b7"
        ],
        [
            "Section UnifCont_N.",
            "VernacBeginSection",
            "a5ce5dfcae80e57e2d442d659d91a2f6470e07d9"
        ],
        [
            "Context {K : AbsRing} {V : NormedModule K}.",
            "VernacContext",
            "3b61d1aae35ebd0170cfa463dc9750aa874e5a6f"
        ],
        [
            "Lemma unifcont_normed_1d (f : R -> V) a b : (forall x, a <= x <= b -> continuous f x) -> forall eps : posreal, {delta : posreal | forall x y, a <= x <= b -> a <= y <= b -> ball x delta y -> ball_norm (f x) eps (f y)}.",
            "VernacStartTheoremProof",
            "e761d0f14f849f92f747233708a9034b04b95a58"
        ],
        [
            "intros H eps.",
            "VernacExtend",
            "4de6f57925203b02f76ebe50fd9dc4ae88fd01e6"
        ],
        [
            "assert (0 < eps / (@norm_factor _ V)).",
            "VernacExtend",
            "2d6cb3fc6fdbfe27c2c2338dee30de84e03040c1"
        ],
        [
            "apply Rdiv_lt_0_compat.",
            "VernacExtend",
            "283136f6e52505e4579f1f286529bc7e0bbfd6d7"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "exact norm_factor_gt_0.",
            "VernacExtend",
            "355a50fffc866b17d8adbd92b14df19f3adb9b35"
        ],
        [
            "destruct (unifcont_1d f a b H (mkposreal _ H0)) as [d Hd].",
            "VernacExtend",
            "7695dcf2213b96f6865e09f4292c0b0100512fc2"
        ],
        [
            "exists d => x y Hx Hy Hxy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "specialize (Hd x y Hx Hy Hxy).",
            "VernacExtend",
            "e21cd569f6add60dac056bdf725bb6b053177e00"
        ],
        [
            "apply Rnot_le_lt.",
            "VernacExtend",
            "b6f8b57a60bfd6845f42e4c68c9a5305f4b60dd7"
        ],
        [
            "contradict Hd ; contradict Hd.",
            "VernacExtend",
            "1abddf858d205d036f6321decd3386c226e42974"
        ],
        [
            "apply Rlt_not_le.",
            "VernacExtend",
            "970672dbfa76c5b1a5bbbe80816db4b871608528"
        ],
        [
            "evar_last.",
            "VernacExtend",
            "66189d18eff3abe5c0f87ca72027637c063094b4"
        ],
        [
            "apply norm_compat2, Hd.",
            "VernacExtend",
            "562f596710bbe10b0f67b93c046f51a7501c8bb1"
        ],
        [
            "simpl ; field.",
            "VernacExtend",
            "db84c8cac4d419667c5dc078fea83a0aa7cc0138"
        ],
        [
            "apply Rgt_not_eq, norm_factor_gt_0.",
            "VernacExtend",
            "bedcdb9c542523a7d0cb836687a677ddde20498a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End UnifCont_N.",
            "VernacEndSegment",
            "ffecc207d316c8780e78f58f5bff0e6f47aedcb4"
        ]
    ],
    "proofs": [
        {
            "name": "is_lim_spec",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "destruct l as [l| |] ; split.",
                        "VernacExtend",
                        "229a2f1d639d91740395bce4727cdf4cd178db1d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros H P [eps LP].",
                        "VernacExtend",
                        "17632fc297e5ea1852f56e45f60d632d6c052b0d"
                    ]
                },
                {
                    "command": [
                        "unfold filtermap.",
                        "VernacExtend",
                        "ab2a046933e4dbb14f70f2b6f6c5f6e701f158bb"
                    ]
                },
                {
                    "command": [
                        "generalize (H eps).",
                        "VernacExtend",
                        "b4138fee14edae555ad11b093ba7215cabeededb"
                    ]
                },
                {
                    "command": [
                        "apply filter_imp.",
                        "VernacExtend",
                        "cd5d68d491d9b471ebb7deccb08d7a71ba953368"
                    ]
                },
                {
                    "command": [
                        "intros u.",
                        "VernacExtend",
                        "e9ac7498bea712c86b519a88f31159d86dff11e7"
                    ]
                },
                {
                    "command": [
                        "apply LP.",
                        "VernacExtend",
                        "099c424a8903c296b67973586f11183c07d7f16d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros H eps.",
                        "VernacExtend",
                        "4de6f57925203b02f76ebe50fd9dc4ae88fd01e6"
                    ]
                },
                {
                    "command": [
                        "apply (H (fun y => Rabs (y - l) < eps)).",
                        "VernacExtend",
                        "dd5687257e1b15f7261abe488a72f2a874f81162"
                    ]
                },
                {
                    "command": [
                        "now exists eps.",
                        "VernacExtend",
                        "231859d3bd429d5cb9a46c5a8150f7440e5ea441"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros H P [M LP].",
                        "VernacExtend",
                        "86538739fbff626e1019f8ae61bcd24b26a35c0a"
                    ]
                },
                {
                    "command": [
                        "unfold filtermap.",
                        "VernacExtend",
                        "ab2a046933e4dbb14f70f2b6f6c5f6e701f158bb"
                    ]
                },
                {
                    "command": [
                        "generalize (H M).",
                        "VernacExtend",
                        "c592c18b33e8581861823dd077ce9cfaa589dfdc"
                    ]
                },
                {
                    "command": [
                        "apply filter_imp.",
                        "VernacExtend",
                        "cd5d68d491d9b471ebb7deccb08d7a71ba953368"
                    ]
                },
                {
                    "command": [
                        "intros u.",
                        "VernacExtend",
                        "e9ac7498bea712c86b519a88f31159d86dff11e7"
                    ]
                },
                {
                    "command": [
                        "apply LP.",
                        "VernacExtend",
                        "099c424a8903c296b67973586f11183c07d7f16d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros H M.",
                        "VernacExtend",
                        "60a3e448289d314561e45ebdbf40b346bbb6454f"
                    ]
                },
                {
                    "command": [
                        "apply (H (fun y => M < y)).",
                        "VernacExtend",
                        "8eb7e7ad631524d7e01530bf4abbb07a90b0e8d4"
                    ]
                },
                {
                    "command": [
                        "now exists M.",
                        "VernacExtend",
                        "d209ee394e51e963b50da18371a61ccbd1897fc7"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros H P [M LP].",
                        "VernacExtend",
                        "86538739fbff626e1019f8ae61bcd24b26a35c0a"
                    ]
                },
                {
                    "command": [
                        "unfold filtermap.",
                        "VernacExtend",
                        "ab2a046933e4dbb14f70f2b6f6c5f6e701f158bb"
                    ]
                },
                {
                    "command": [
                        "generalize (H M).",
                        "VernacExtend",
                        "c592c18b33e8581861823dd077ce9cfaa589dfdc"
                    ]
                },
                {
                    "command": [
                        "apply filter_imp.",
                        "VernacExtend",
                        "cd5d68d491d9b471ebb7deccb08d7a71ba953368"
                    ]
                },
                {
                    "command": [
                        "intros u.",
                        "VernacExtend",
                        "e9ac7498bea712c86b519a88f31159d86dff11e7"
                    ]
                },
                {
                    "command": [
                        "apply LP.",
                        "VernacExtend",
                        "099c424a8903c296b67973586f11183c07d7f16d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros H M.",
                        "VernacExtend",
                        "60a3e448289d314561e45ebdbf40b346bbb6454f"
                    ]
                },
                {
                    "command": [
                        "apply (H (fun y => y < M)).",
                        "VernacExtend",
                        "264b26dcb620e6abe0b62c58907181fd3b89fe63"
                    ]
                },
                {
                    "command": [
                        "now exists M.",
                        "VernacExtend",
                        "d209ee394e51e963b50da18371a61ccbd1897fc7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_Reals_0",
            "line_nb": 45,
            "steps": [
                {
                    "command": [
                        "intros H e He.",
                        "VernacExtend",
                        "70afb674b1014d1c35e434b592e205b41b4947cf"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_spec in H.",
                        "VernacExtend",
                        "87fcfb23448786b12058195bd853b7f81665a2e1"
                    ]
                },
                {
                    "command": [
                        "destruct (H (mkposreal e He)) as [d Hd].",
                        "VernacExtend",
                        "bda401a4357073944d97026518c86f6029e61b95"
                    ]
                },
                {
                    "command": [
                        "exists d ; split.",
                        "VernacExtend",
                        "a1fcb883b1c5fcd25ed6ebd6b983148f883d1f7b"
                    ]
                },
                {
                    "command": [
                        "apply cond_pos.",
                        "VernacExtend",
                        "8ddb865849694c081c727a4dcd01494f171e402e"
                    ]
                },
                {
                    "command": [
                        "intros y [H1 H2].",
                        "VernacExtend",
                        "0fdcac9841d84787d9eab46d365b0b0590398583"
                    ]
                },
                {
                    "command": [
                        "now apply (Hd y).",
                        "VernacExtend",
                        "a15b3ec5e32a1e34b93d97774ffd4325f52dc921"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_Reals_1",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_spec.",
                        "VernacExtend",
                        "6a433fd37843c6d7f4bc73e6cfa945c5042b65eb"
                    ]
                },
                {
                    "command": [
                        "intros [e He].",
                        "VernacExtend",
                        "a57ae437db144953696b7993fbc2a3bfacab22c3"
                    ]
                },
                {
                    "command": [
                        "destruct (H e He) as [d [Hd H']].",
                        "VernacExtend",
                        "bb92492963f174c52a131b8a12f28278557b3238"
                    ]
                },
                {
                    "command": [
                        "exists (mkposreal d Hd).",
                        "VernacExtend",
                        "90aa23f9faf6a31c1d9b6f6a46be612c041c12a1"
                    ]
                },
                {
                    "command": [
                        "intros y Hy Hxy.",
                        "VernacExtend",
                        "640e7d9fe65dd03c3b92d220f090a5f38a7f2fae"
                    ]
                },
                {
                    "command": [
                        "apply (H' y).",
                        "VernacExtend",
                        "8c40b930406ddaf1ef2e878283416a4efbe6b7ae"
                    ]
                },
                {
                    "command": [
                        "now split.",
                        "VernacExtend",
                        "1791b9ff1e86fc70e4ee1a32bce684778be25d40"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_Reals",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "split ; [apply is_lim_Reals_0|apply is_lim_Reals_1].",
                        "VernacExtend",
                        "7cbbc9e8760ed2250954eaedb6e0b5a0866923e3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_comp'",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "intros T F FF f g x l Lf Lg Hf.",
                        "VernacExtend",
                        "a93fb6a29d48e040127b6ee71cc0e548dcc71571"
                    ]
                },
                {
                    "command": [
                        "revert Lg.",
                        "VernacExtend",
                        "f7cc808da08e63345108abf9cad809c2d236f1a3"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_comp.",
                        "VernacExtend",
                        "119a797e3832e9c043bf4d4800e025d17a046515"
                    ]
                },
                {
                    "command": [
                        "intros P HP.",
                        "VernacExtend",
                        "55e2f4eebfad5cc358bd93712ab9be7674f934e9"
                    ]
                },
                {
                    "command": [
                        "destruct x as [x| |] ; try now apply Lf.",
                        "VernacExtend",
                        "15d3662aa1728559ff2b7ca2e317b4f87c58a34e"
                    ]
                },
                {
                    "command": [
                        "specialize (Lf _ HP).",
                        "VernacExtend",
                        "0e6756721684b1f5b73cb27e381fa054c8151c5c"
                    ]
                },
                {
                    "command": [
                        "unfold filtermap in Lf |- *.",
                        "VernacExtend",
                        "27c519872584f16d5932de5e9daa34127df3877f"
                    ]
                },
                {
                    "command": [
                        "generalize (filter_and _ _ Hf Lf).",
                        "VernacExtend",
                        "20a5687089d1aac01a54803810c50d8399a762a8"
                    ]
                },
                {
                    "command": [
                        "apply filter_imp.",
                        "VernacExtend",
                        "cd5d68d491d9b471ebb7deccb08d7a71ba953368"
                    ]
                },
                {
                    "command": [
                        "intros y [H Hi].",
                        "VernacExtend",
                        "0d2f371bcf92b56311491d199f09f18e4b343a7f"
                    ]
                },
                {
                    "command": [
                        "apply Hi.",
                        "VernacExtend",
                        "b7959f73b24cea8febda147e5d8d404627f1652f"
                    ]
                },
                {
                    "command": [
                        "contradict H.",
                        "VernacExtend",
                        "0da4c7d87991a3ed628c796c81ed5112e2aac241"
                    ]
                },
                {
                    "command": [
                        "now apply f_equal.",
                        "VernacExtend",
                        "2be51066ac0713afbd2686f67010448cf5cd7ac9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_comp_seq",
            "line_nb": 82,
            "steps": [
                {
                    "command": [
                        "intros Lf Hu Lu.",
                        "VernacExtend",
                        "de8f4d7f078c13ef5bae75c9ba41d304f8319bfd"
                    ]
                },
                {
                    "command": [
                        "exact (is_lim_comp' u f x l Lu Lf Hu).",
                        "VernacExtend",
                        "72a51b8dd8b37cce68e6175b16b8931aa71f1772"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_unique",
            "line_nb": 86,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Lim.",
                        "VernacExtend",
                        "c5b5487cbe85dd91f8daa5ba8b3a6b0b3d1184bd"
                    ]
                },
                {
                    "command": [
                        "rewrite (is_lim_seq_unique _ l) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply (is_lim_comp_seq f _ x l H).",
                        "VernacExtend",
                        "a10ee1a7399cc1fe2be09d84e752f6fa1fff0b75"
                    ]
                },
                {
                    "command": [
                        "exists 1%nat => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: x {H} => [x | | ] //=.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_finite_neq, Rgt_not_eq, Rminus_lt_0.",
                        "VernacExtend",
                        "98120fd0a7ab0f7681b3342ad8a0d68a5a087ca1"
                    ]
                },
                {
                    "command": [
                        "ring_simplify.",
                        "VernacExtend",
                        "31578f61427562191ce5389abf97dbf9985ea04c"
                    ]
                },
                {
                    "command": [
                        "by apply RinvN_pos.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_seq_Rbar_loc_seq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_correct",
            "line_nb": 98,
            "steps": [
                {
                    "command": [
                        "intros (l,H).",
                        "VernacExtend",
                        "3fda3140394abbcf85ec93d7935c462cf104be2c"
                    ]
                },
                {
                    "command": [
                        "replace (Lim f x) with l.",
                        "VernacExtend",
                        "a3cec296ae0f4db5f4061edebb84d93d58a11dd2"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq, is_lim_unique, H.",
                        "VernacExtend",
                        "5224fd389aa26ed12a23d057da56ea944ffcdbb4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_finite_lim_correct",
            "line_nb": 104,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "case => l Hf.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move: (is_lim_unique f x l Hf) => Hf0.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "by exists l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite Hf0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case ; case => l Hf Hf0.",
                        "VernacExtend",
                        "f5c637551d7ace847ffea0c2c9ae9f848858e99e"
                    ]
                },
                {
                    "command": [
                        "exists (real l).",
                        "VernacExtend",
                        "1c463d8f7130cd5cea0475d8d2603b9041eda584"
                    ]
                },
                {
                    "command": [
                        "rewrite -(is_lim_unique _ _ _ Hf).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite Hf0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite (is_lim_unique _ _ _ Hf).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_correct'",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "intro Hf.",
                        "VernacExtend",
                        "6f8097812b59a70e6a2905483ee62407e17f44b0"
                    ]
                },
                {
                    "command": [
                        "apply ex_finite_lim_correct in Hf.",
                        "VernacExtend",
                        "3a9a1a2380687794a8f6860f224ea5f88706e821"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj2 Hf).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply Lim_correct, Hf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_ext_loc",
            "line_nb": 123,
            "steps": [
                {
                    "command": [
                        "apply filterlim_ext_loc.",
                        "VernacExtend",
                        "b1bfeab64804f9bca017cf3228230f12ef2c8f11"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_ext_loc",
            "line_nb": 126,
            "steps": [
                {
                    "command": [
                        "move => H [l Hf].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists l.",
                        "VernacExtend",
                        "9ca96dacfce153d20a69dd7ea7c7254236074950"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_ext_loc with f.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_ext_loc",
            "line_nb": 131,
            "steps": [
                {
                    "command": [
                        "move => H.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq.",
                        "VernacExtend",
                        "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
                    ]
                },
                {
                    "command": [
                        "apply Lim_seq_ext_loc.",
                        "VernacExtend",
                        "08e7386a15ead02f2e0ccc11bb83c0615aaf6aaa"
                    ]
                },
                {
                    "command": [
                        "apply: filterlim_Rbar_loc_seq H.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_ext",
            "line_nb": 137,
            "steps": [
                {
                    "command": [
                        "move => H.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_ext_loc.",
                        "VernacExtend",
                        "4a4eb0ae16af7dbc8266c794ebf260b2c84d5b23"
                    ]
                },
                {
                    "command": [
                        "by apply filter_forall.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_ext",
            "line_nb": 142,
            "steps": [
                {
                    "command": [
                        "move => H [l Hf].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists l.",
                        "VernacExtend",
                        "9ca96dacfce153d20a69dd7ea7c7254236074950"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_ext with f.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_ext",
            "line_nb": 147,
            "steps": [
                {
                    "command": [
                        "move => H.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply Lim_ext_loc.",
                        "VernacExtend",
                        "e199927ab5d3aaa31f7bd3fd6a60ecfa89e7c3d3"
                    ]
                },
                {
                    "command": [
                        "by apply filter_forall.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_comp",
            "line_nb": 152,
            "steps": [
                {
                    "command": [
                        "intros Lf Lg Hg.",
                        "VernacExtend",
                        "be438088f1b3d7425e001b98f206d6043e96668f"
                    ]
                },
                {
                    "command": [
                        "by apply (is_lim_comp' g f l k Lg Lf Hg).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_comp",
            "line_nb": 156,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exists (Lim f (Lim g x)).",
                        "VernacExtend",
                        "a721ee9dd99c4b43b0449de10f32ee999f5130ed"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_comp with (Lim g x).",
                        "VernacExtend",
                        "13366a1f6b08f1c45695b30cf61fda6fcad9aa4c"
                    ]
                },
                {
                    "command": [
                        "by apply Lim_correct.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Lim_correct.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply H1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_comp",
            "line_nb": 164,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_unique.",
                        "VernacExtend",
                        "dae3243103dd458b8bf69808c8c75b5d97ae46f2"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_comp with (Lim g x).",
                        "VernacExtend",
                        "13366a1f6b08f1c45695b30cf61fda6fcad9aa4c"
                    ]
                },
                {
                    "command": [
                        "by apply Lim_correct.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Lim_correct.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply H1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_id",
            "line_nb": 172,
            "steps": [
                {
                    "command": [
                        "intros P HP.",
                        "VernacExtend",
                        "55e2f4eebfad5cc358bd93712ab9be7674f934e9"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_id.",
                        "VernacExtend",
                        "0c9885f23d2ca915379801b6ded9080d6c98b8f7"
                    ]
                },
                {
                    "command": [
                        "now apply Rbar_locally'_le.",
                        "VernacExtend",
                        "268451f0e2e4ee9da61fb30e84f2b2c5cb30a995"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_id",
            "line_nb": 177,
            "steps": [
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_id",
            "line_nb": 181,
            "steps": [
                {
                    "command": [
                        "apply is_lim_unique.",
                        "VernacExtend",
                        "dae3243103dd458b8bf69808c8c75b5d97ae46f2"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_const",
            "line_nb": 185,
            "steps": [
                {
                    "command": [
                        "intros P HP.",
                        "VernacExtend",
                        "55e2f4eebfad5cc358bd93712ab9be7674f934e9"
                    ]
                },
                {
                    "command": [
                        "now apply filterlim_const.",
                        "VernacExtend",
                        "f42434f4dc7bd1f6f31ed0d58c195d4a0985469b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_const",
            "line_nb": 189,
            "steps": [
                {
                    "command": [
                        "exists a.",
                        "VernacExtend",
                        "59cc5697e7369be65591d2d5e6ad6fd701682809"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_const.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_const",
            "line_nb": 193,
            "steps": [
                {
                    "command": [
                        "apply is_lim_unique.",
                        "VernacExtend",
                        "dae3243103dd458b8bf69808c8c75b5d97ae46f2"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_const.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_opp",
            "line_nb": 203,
            "steps": [
                {
                    "command": [
                        "case => l Hf.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists (Rbar_opp l).",
                        "VernacExtend",
                        "b2e1d0ad8013d1119a747b3f3221ab5c396dcb72"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_opp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_opp",
            "line_nb": 208,
            "steps": [
                {
                    "command": [
                        "rewrite -Lim_seq_opp.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply Lim_seq_ext.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_plus",
            "line_nb": 212,
            "steps": [
                {
                    "command": [
                        "intros Cf Cg Hp.",
                        "VernacExtend",
                        "91116e26604642b0790bbcebf0dff367a247fb27"
                    ]
                },
                {
                    "command": [
                        "eapply filterlim_comp_2 ; try eassumption.",
                        "VernacExtend",
                        "7c3053626bc57cbf6f1cfd59e4d64fef6c071b19"
                    ]
                },
                {
                    "command": [
                        "by apply filterlim_Rbar_plus.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_plus",
            "line_nb": 224,
            "steps": [
                {
                    "command": [
                        "move => /Lim_correct Hf /Lim_correct Hg Hl.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists (Rbar_plus (Lim f x) (Lim g x)).",
                        "VernacExtend",
                        "b2bb147926032d9857504b38fafc2a1e9b2a4755"
                    ]
                },
                {
                    "command": [
                        "eapply is_lim_plus ; try eassumption.",
                        "VernacExtend",
                        "87070a6a62ad336bc9cfeec05210a8d5d7b7b3c3"
                    ]
                },
                {
                    "command": [
                        "by apply Rbar_plus_correct.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_plus",
            "line_nb": 230,
            "steps": [
                {
                    "command": [
                        "move => /Lim_correct Hf /Lim_correct Hg Hl.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_unique.",
                        "VernacExtend",
                        "dae3243103dd458b8bf69808c8c75b5d97ae46f2"
                    ]
                },
                {
                    "command": [
                        "eapply is_lim_plus ; try eassumption.",
                        "VernacExtend",
                        "87070a6a62ad336bc9cfeec05210a8d5d7b7b3c3"
                    ]
                },
                {
                    "command": [
                        "by apply Rbar_plus_correct.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_minus",
            "line_nb": 236,
            "steps": [
                {
                    "command": [
                        "move => Hf Hg Hl.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "eapply is_lim_plus ; try eassumption.",
                        "VernacExtend",
                        "87070a6a62ad336bc9cfeec05210a8d5d7b7b3c3"
                    ]
                },
                {
                    "command": [
                        "now apply is_lim_opp.",
                        "VernacExtend",
                        "a8d648c4e7204501001cc34972453bef98f3f02f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_minus'",
            "line_nb": 241,
            "steps": [
                {
                    "command": [
                        "intros Hf Hg.",
                        "VernacExtend",
                        "9cea10f3019eec1e1c1dcd5d69eef2f9cbe47708"
                    ]
                },
                {
                    "command": [
                        "eapply is_lim_minus ; try eassumption.",
                        "VernacExtend",
                        "b8d6887d9918c2d5249bf27526fcb18468744c97"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_minus",
            "line_nb": 246,
            "steps": [
                {
                    "command": [
                        "move => Hf Hg Hl.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply ex_lim_plus.",
                        "VernacExtend",
                        "711ba0fa2d5fe08f639364d2c56cc8853566641a"
                    ]
                },
                {
                    "command": [
                        "by apply Hf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply ex_lim_opp.",
                        "VernacExtend",
                        "b58f5e7435e5ae1a9ec82a52ab939d95a1ca465e"
                    ]
                },
                {
                    "command": [
                        "by apply Hg.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite Lim_opp.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply Hl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_minus",
            "line_nb": 255,
            "steps": [
                {
                    "command": [
                        "move => Hf Hg Hl.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite Lim_plus.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite Lim_opp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Hf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply ex_lim_opp.",
                        "VernacExtend",
                        "b58f5e7435e5ae1a9ec82a52ab939d95a1ca465e"
                    ]
                },
                {
                    "command": [
                        "by apply Hg.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite Lim_opp.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply Hl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_inv",
            "line_nb": 265,
            "steps": [
                {
                    "command": [
                        "intros Hf Hl.",
                        "VernacExtend",
                        "31e2e76220ee2a0b224707d0e1f6e31a0bd0a6e6"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_comp with (1 := Hf).",
                        "VernacExtend",
                        "209cf5da6d51c8d7df4d7d409f93566eeae11560"
                    ]
                },
                {
                    "command": [
                        "now apply filterlim_Rbar_inv.",
                        "VernacExtend",
                        "37c75cbd290513ba25ace90e324a1eea791eb489"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_inv",
            "line_nb": 270,
            "steps": [
                {
                    "command": [
                        "move => /Lim_correct Hf Hlf.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists (Rbar_inv (Lim f x)).",
                        "VernacExtend",
                        "97f50980f8a8cb8ebd179c99e598dedb1b24f8fd"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_inv.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_inv",
            "line_nb": 275,
            "steps": [
                {
                    "command": [
                        "move => /Lim_correct Hf Hlf.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_unique.",
                        "VernacExtend",
                        "dae3243103dd458b8bf69808c8c75b5d97ae46f2"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_inv.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_mult",
            "line_nb": 280,
            "steps": [
                {
                    "command": [
                        "intros Cf Cg Hp.",
                        "VernacExtend",
                        "91116e26604642b0790bbcebf0dff367a247fb27"
                    ]
                },
                {
                    "command": [
                        "eapply filterlim_comp_2 ; try eassumption.",
                        "VernacExtend",
                        "7c3053626bc57cbf6f1cfd59e4d64fef6c071b19"
                    ]
                },
                {
                    "command": [
                        "by apply filterlim_Rbar_mult, Rbar_mult_correct.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_mult",
            "line_nb": 285,
            "steps": [
                {
                    "command": [
                        "move => /Lim_correct Hf /Lim_correct Hg Hl.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists (Rbar_mult (Lim f x) (Lim g x)).",
                        "VernacExtend",
                        "e1bbd552c8a2625b3c147fd94ea1c7228fa4c36f"
                    ]
                },
                {
                    "command": [
                        "now apply is_lim_mult.",
                        "VernacExtend",
                        "66c0a17f8601e37d7a1202b3265df62721605daf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_mult",
            "line_nb": 290,
            "steps": [
                {
                    "command": [
                        "move => /Lim_correct Hf /Lim_correct Hg Hl.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_unique.",
                        "VernacExtend",
                        "dae3243103dd458b8bf69808c8c75b5d97ae46f2"
                    ]
                },
                {
                    "command": [
                        "now apply is_lim_mult.",
                        "VernacExtend",
                        "66c0a17f8601e37d7a1202b3265df62721605daf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_scal_l",
            "line_nb": 295,
            "steps": [
                {
                    "command": [
                        "move => Hf.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (Req_dec 0 a) => [<- {a} | Ha].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite Rbar_mult_0_l.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_ext with (fun _ => 0).",
                        "VernacExtend",
                        "f796899d850b8b8164f13859f001aaa86934ac18"
                    ]
                },
                {
                    "command": [
                        "move => y ; by rewrite Rmult_0_l.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_const.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_mult.",
                        "VernacExtend",
                        "d95cb0f6ff23ea8f9e7ec45a785634c0519aee3f"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_const.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Hf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply sym_not_eq in Ha.",
                        "VernacExtend",
                        "abd84e169b3e5410aefc94eeb8c898842032ffd1"
                    ]
                },
                {
                    "command": [
                        "case: l {Hf} => [l | | ] //=.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_scal_l",
            "line_nb": 308,
            "steps": [
                {
                    "command": [
                        "case => l Hf.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists (Rbar_mult a l).",
                        "VernacExtend",
                        "9a8820fb1c1536d302a33bdc48689bfe4afb9175"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_scal_l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_scal_l",
            "line_nb": 313,
            "steps": [
                {
                    "command": [
                        "apply Lim_seq_scal_l.",
                        "VernacExtend",
                        "6a74e18fe5ff86afc24c988921312063015c81cb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_scal_r",
            "line_nb": 316,
            "steps": [
                {
                    "command": [
                        "move => Hf.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite Rbar_mult_comm.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_ext with (fun y => a * f y).",
                        "VernacExtend",
                        "cc21c2928a51f346e60e212e3f94e2b52ca3c971"
                    ]
                },
                {
                    "command": [
                        "move => y ; by apply Rmult_comm.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_scal_l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_scal_r",
            "line_nb": 323,
            "steps": [
                {
                    "command": [
                        "case => l Hf.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists (Rbar_mult l a).",
                        "VernacExtend",
                        "307738da59610c4a4c913064d6f0fcc0b5302d7e"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_scal_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_scal_r",
            "line_nb": 328,
            "steps": [
                {
                    "command": [
                        "rewrite Rbar_mult_comm -Lim_seq_scal_l.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Lim_seq_ext.",
                        "VernacExtend",
                        "7ea6f4316462f16e8e0201ec50e1735bb5bff76f"
                    ]
                },
                {
                    "command": [
                        "move => y ; by apply Rmult_comm.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_div",
            "line_nb": 333,
            "steps": [
                {
                    "command": [
                        "move => Hf Hg Hlg Hl.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_mult ; try assumption.",
                        "VernacExtend",
                        "a191c3dde389490f7b9fb7e035fbc749b9715778"
                    ]
                },
                {
                    "command": [
                        "now apply is_lim_inv.",
                        "VernacExtend",
                        "65a68795f664d2c92e1f628d470064c8749d1014"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_div",
            "line_nb": 338,
            "steps": [
                {
                    "command": [
                        "move => Hf Hg Hlg Hl.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply ex_lim_mult ; try assumption.",
                        "VernacExtend",
                        "8c1af53016a98bdafb47856d1762b5eadcf36aa4"
                    ]
                },
                {
                    "command": [
                        "now apply ex_lim_inv.",
                        "VernacExtend",
                        "f18ef21423b8f69a90e99bd28bda6f89e5b636dc"
                    ]
                },
                {
                    "command": [
                        "now rewrite Lim_inv.",
                        "VernacExtend",
                        "276cb1b1d654c3b906be8c12785939ceeaffac64"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_div",
            "line_nb": 344,
            "steps": [
                {
                    "command": [
                        "move => Hf Hg Hlg Hl.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_unique.",
                        "VernacExtend",
                        "dae3243103dd458b8bf69808c8c75b5d97ae46f2"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_div ; try apply Lim_correct ; assumption.",
                        "VernacExtend",
                        "f7d74c6c38f32b77a62dbc7390ac180a91e80f0a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_comp_lin",
            "line_nb": 375,
            "steps": [
                {
                    "command": [
                        "case => l Hf.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: (Req_dec a 0) => [-> {a Hf} | Ha].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply ex_lim_ext with (fun _ => f b).",
                        "VernacExtend",
                        "0bea62b207056551bf51a9fa2702ca34c91590a6"
                    ]
                },
                {
                    "command": [
                        "move => y ; by rewrite Rmult_0_l Rplus_0_l.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "by apply ex_lim_const.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists l ; by apply is_lim_comp_lin.",
                        "VernacExtend",
                        "4f9f93dbf1ab94af5a51d54d8955eb863fb55340"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_comp_lin",
            "line_nb": 383,
            "steps": [
                {
                    "command": [
                        "move => Hf Ha.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_unique.",
                        "VernacExtend",
                        "dae3243103dd458b8bf69808c8c75b5d97ae46f2"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_comp_lin.",
                        "VernacExtend",
                        "92f93106eddccdd4d449b98d35578aa7b7c8710e"
                    ]
                },
                {
                    "command": [
                        "by apply Lim_correct.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exact: Ha.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_continuity",
            "line_nb": 390,
            "steps": [
                {
                    "command": [
                        "intros cf.",
                        "VernacExtend",
                        "066f70738d0fa4fd82cf8bdb0fbd5760dff76946"
                    ]
                },
                {
                    "command": [
                        "now apply continuity_pt_filterlim'.",
                        "VernacExtend",
                        "8e0c75dd95d0f1efac35da129e03a2946f0d5506"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_continuity",
            "line_nb": 394,
            "steps": [
                {
                    "command": [
                        "move => Hf.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists (f x).",
                        "VernacExtend",
                        "82d0433c52def299dae52e00c1bf42867054c8b7"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_continuity.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_continuity",
            "line_nb": 399,
            "steps": [
                {
                    "command": [
                        "move => Hf.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_unique.",
                        "VernacExtend",
                        "dae3243103dd458b8bf69808c8c75b5d97ae46f2"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_continuity.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterlim_Ropp_left",
            "line_nb": 450,
            "steps": [
                {
                    "command": [
                        "move => P [d /= Hd].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists d => y /= Hy Hy'.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Hd.",
                        "VernacExtend",
                        "b2c76316200582fcad9318af1ed397a8dea483e3"
                    ]
                },
                {
                    "command": [
                        "rewrite /ball /= /AbsRing_ball /abs /minus /plus /opp /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -Ropp_plus_distr Rabs_Ropp.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply Hy.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Ropp_lt_contravar.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterlim_Ropp_right",
            "line_nb": 459,
            "steps": [
                {
                    "command": [
                        "move => P [d /= Hd].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists d => y /= Hy Hy'.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Hd.",
                        "VernacExtend",
                        "b2c76316200582fcad9318af1ed397a8dea483e3"
                    ]
                },
                {
                    "command": [
                        "rewrite /ball /= /AbsRing_ball /abs /minus /plus /opp /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -Ropp_plus_distr Rabs_Ropp.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply Hy.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Ropp_lt_contravar.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "C0_extension_le",
            "line_nb": 525,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "case: (Rlt_le_dec a b) => Hab.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "destruct (C0_extension_lt f (f a) (f b) a b Hab) as [g [Cg [Gab [Ga Gb]]]].",
                        "VernacExtend",
                        "9ba906f086442d69169bdc60168543e5e8638d97"
                    ]
                },
                {
                    "command": [
                        "intros c Hc.",
                        "VernacExtend",
                        "a6796c62d7c0db66fe8ba83a4c9d8f0f080ccce0"
                    ]
                },
                {
                    "command": [
                        "apply H ; split ; apply Rlt_le, Hc.",
                        "VernacExtend",
                        "5c1cde73e33e3fd4de38bd0034f2d360fa9f5303"
                    ]
                },
                {
                    "command": [
                        "eapply filterlim_filter_le_1, H.",
                        "VernacExtend",
                        "cf74121a784d32f9ba85f0ef56438bc427e27edd"
                    ]
                },
                {
                    "command": [
                        "by apply filter_le_within.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "eapply filterlim_filter_le_1, H.",
                        "VernacExtend",
                        "cf74121a784d32f9ba85f0ef56438bc427e27edd"
                    ]
                },
                {
                    "command": [
                        "by apply filter_le_within.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "exists g ; repeat split => //.",
                        "VernacExtend",
                        "90c8d66b5ecbdd8918ccffeee7870f4139424b81"
                    ]
                },
                {
                    "command": [
                        "intros c [Hac Hcb].",
                        "VernacExtend",
                        "2544237b446687fad0ede667fc26839eb60f8eef"
                    ]
                },
                {
                    "command": [
                        "case: Hac => [ Hac | <-] //.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: Hcb => [ Hcb | ->] //.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Gab ; by split.",
                        "VernacExtend",
                        "55ba0f3cd504460a058e54bb2f7682a796d8df9b"
                    ]
                },
                {
                    "command": [
                        "exists (fun _ => f a) ; split ; simpl.",
                        "VernacExtend",
                        "49e4f34b621a56b5547758f5113d09b1d7d56407"
                    ]
                },
                {
                    "command": [
                        "move => c.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by apply filterlim_const.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "intros c [Hac Hca].",
                        "VernacExtend",
                        "58a7b13bafb3c246bc76cfc594641ef93e950ba2"
                    ]
                },
                {
                    "command": [
                        "case: Hab => Hab.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "contradict Hab ; apply Rle_not_lt.",
                        "VernacExtend",
                        "147c0f3aed100f5c3614d6ec37750b8349c1e94f"
                    ]
                },
                {
                    "command": [
                        "by apply Rle_trans with c.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite Hab in Hca.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply f_equal, Rle_antisym.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_le_loc",
            "line_nb": 657,
            "steps": [
                {
                    "command": [
                        "apply filterlim_le.",
                        "VernacExtend",
                        "5e6a5ccbad10ca26cb77b714628126244c1ff433"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_le_p_loc",
            "line_nb": 660,
            "steps": [
                {
                    "command": [
                        "apply filterlim_ge_p_infty.",
                        "VernacExtend",
                        "c94e134f7985812b4b7b602713f8c802b60b58db"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_le_m_loc",
            "line_nb": 663,
            "steps": [
                {
                    "command": [
                        "apply filterlim_le_m_infty.",
                        "VernacExtend",
                        "5436a4d282bcc919165db88abe5231dbbb28f716"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_le_le_loc",
            "line_nb": 666,
            "steps": [
                {
                    "command": [
                        "apply filterlim_le_le.",
                        "VernacExtend",
                        "2f2ddeea5b85f11c7fd2c4dedda1c2b3ea2ec976"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "IVT_gen",
            "line_nb": 669,
            "steps": [
                {
                    "command": [
                        "case: (Req_EM_T a b) => [ <- {b} | Hab].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite /Rmin /Rmax ; case: Rle_dec (Rle_refl a) (Rle_refl (f a)) ; case: Rle_dec => // _ _ _ _ Cf Hy.",
                        "VernacExtend",
                        "1418099f654a9d12bdfd561bac86adb846b83bfd"
                    ]
                },
                {
                    "command": [
                        "exists a ; split.",
                        "VernacExtend",
                        "14cc1ae54125a915d2423229819457ec091b2fbe"
                    ]
                },
                {
                    "command": [
                        "split ; by apply Rle_refl.",
                        "VernacExtend",
                        "9c392753fd6384a52f43e9d349afde47af3b3aa5"
                    ]
                },
                {
                    "command": [
                        "apply Rle_antisym ; by apply Hy.",
                        "VernacExtend",
                        "0ff8d61586e7089e2b58371bfdb97c2085d6935a"
                    ]
                },
                {
                    "command": [
                        "wlog: a b Hab / (a < b) => [Hw | {Hab} Hab].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: (Rle_lt_dec a b) => Hab'.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: (Rle_lt_or_eq_dec _ _ Hab') => {Hab'} // Hab'.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply Hw.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rmin_comm (f a)) (Rmin_comm a) (Rmax_comm (f a)) (Rmax_comm a) ; apply Hw => //.",
                        "VernacExtend",
                        "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_not_eq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite /(Rmin a) /(Rmax a) ; case: Rle_dec (Rlt_le _ _ Hab) => // _ _.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "wlog: f y / (f a <= f b) => [Hw |].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: (Rle_lt_dec (f a) (f b)) => Hf' Hf Hy.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply Hw.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: (Hw (fun y => - f y) (- y)).",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply Ropp_le_contravar, Rlt_le.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Ranalysis1.continuity_opp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmin_opp_Rmax Rmax_opp_Rmin ; split ; apply Ropp_le_contravar, Hy.",
                        "VernacExtend",
                        "1440ba6f10718ac3df5aa9b61b91cf0356534cc2"
                    ]
                },
                {
                    "command": [
                        "move => x [Hx Hfx].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists x ; intuition.",
                        "VernacExtend",
                        "5265b0752ff2ed4bffe4b91b951e6ea4268a5bda"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(Ropp_involutive y) -Hfx Ropp_involutive.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite /Rmin /Rmax ; case: Rle_dec => // _ _.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "wlog: y / (f a < y < f b) => [Hw Hf Hy | Hy Hf _].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: Hy => Hay Hyb.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: (Rle_lt_or_eq_dec _ _ Hay) => {Hay} [Hay | <- ].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: (Rle_lt_or_eq_dec _ _ Hyb) => {Hyb} [Hyb | -> ].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Hw ; intuition.",
                        "VernacExtend",
                        "eae2f5adec13dad9a9fbae045a9caeae4b47a2b6"
                    ]
                },
                {
                    "command": [
                        "exists b ; intuition.",
                        "VernacExtend",
                        "441cbfd61add61d24683c564714be9e11a4072f5"
                    ]
                },
                {
                    "command": [
                        "exists a ; intuition.",
                        "VernacExtend",
                        "345fb1146acf9bd58cf6fb5ac46f90f2fc8d9845"
                    ]
                },
                {
                    "command": [
                        "case (IVT (fun x => f x - y) a b).",
                        "VernacExtend",
                        "801f4861419105da9ddb33252c2d8252ceee6b7b"
                    ]
                },
                {
                    "command": [
                        "apply Ranalysis1.continuity_minus.",
                        "VernacExtend",
                        "b1ce7fb1197f44a54b583660a8a116bbcad8f623"
                    ]
                },
                {
                    "command": [
                        "exact Hf.",
                        "VernacExtend",
                        "e25e6849230bea1fb4d4eb83c79000be517c04a9"
                    ]
                },
                {
                    "command": [
                        "apply continuity_const.",
                        "VernacExtend",
                        "d5df7d9d284bef9ec83e0df177af94f9418ea22c"
                    ]
                },
                {
                    "command": [
                        "intros _ _ ; reflexivity.",
                        "VernacExtend",
                        "c26a0a9efac520c628b5bb8f4973fde0f8613793"
                    ]
                },
                {
                    "command": [
                        "exact Hab.",
                        "VernacExtend",
                        "f3d0f5752a150a91e25c080a5fc3ae0ed192bc4f"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_minus_l ; rewrite Rplus_0_l ; apply Hy.",
                        "VernacExtend",
                        "814b46b9ea42533bbbaa659df2bb4dbef535f176"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_minus_r ; rewrite Rplus_0_l ; apply Hy.",
                        "VernacExtend",
                        "de20e9773731da44778218317652ab0f70d6c599"
                    ]
                },
                {
                    "command": [
                        "intros x [Hx Hfx].",
                        "VernacExtend",
                        "6d9e94b4738a14a84a416736ec03e30977dfd5e6"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_diag_uniq in Hfx.",
                        "VernacExtend",
                        "b3697df48e1e5c6d4f2ef98729600938a2f7a0f1"
                    ]
                },
                {
                    "command": [
                        "by exists x.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "IVT_Rbar_incr",
            "line_nb": 712,
            "steps": [
                {
                    "command": [
                        "intros Hfa Hfb Cf Hab Hy.",
                        "VernacExtend",
                        "3bd84e638b7dbed6deeac91ccc2c2ac8aeb8082f"
                    ]
                },
                {
                    "command": [
                        "assert (Hb' : exists b' : R, Rbar_lt b' b /\\ is_upper_bound (fun x => Rbar_lt a x /\\ Rbar_lt x b /\\ f x <= y) b').",
                        "VernacExtend",
                        "f14db535cf924310045127c313f8070c0d7fd424"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (Hfb' : Rbar_locally' b (fun x => y < f x)).",
                        "VernacExtend",
                        "d92f8d31df06abed4ce32443e86e8161a826cb01"
                    ]
                },
                {
                    "command": [
                        "apply Hfb.",
                        "VernacExtend",
                        "7eee318e89ec8fd42b025dd70ab467db936f924f"
                    ]
                },
                {
                    "command": [
                        "now apply (open_Rbar_gt' _ y).",
                        "VernacExtend",
                        "8eab4cc7c26348dfd55b0d50d4bbee9e1d43130f"
                    ]
                },
                {
                    "command": [
                        "clear -Hab Hfb'.",
                        "VernacExtend",
                        "471151e7abc8a601e71e21a50559330fef4d5fe5"
                    ]
                },
                {
                    "command": [
                        "destruct b as [b| |].",
                        "VernacExtend",
                        "bca616082b551ac0c483d9a259eecd5d14aa6cad"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct Hfb' as [eps He].",
                        "VernacExtend",
                        "30307618cfbd717f4b8d801c4dedebf2be0e6410"
                    ]
                },
                {
                    "command": [
                        "exists (b - eps).",
                        "VernacExtend",
                        "9078426ac849727bbcf6019aa9afca0847024c0c"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt_0.",
                        "VernacExtend",
                        "266ec80c870ca91ace5efd2beddab25e945c4342"
                    ]
                },
                {
                    "command": [
                        "replace (b - (b - eps)) with (pos eps) by ring.",
                        "VernacExtend",
                        "6c2c7d0cc556a79fa73656b210dd9ec7baa7dd5b"
                    ]
                },
                {
                    "command": [
                        "apply cond_pos.",
                        "VernacExtend",
                        "8ddb865849694c081c727a4dcd01494f171e402e"
                    ]
                },
                {
                    "command": [
                        "intros u [_ [H1 H2]].",
                        "VernacExtend",
                        "1085b9ea92fbd9faa87ea005211e592e5018b82d"
                    ]
                },
                {
                    "command": [
                        "apply Rnot_lt_le.",
                        "VernacExtend",
                        "3c60597e841405b7d257d92c4717e01515b21555"
                    ]
                },
                {
                    "command": [
                        "intros Hu.",
                        "VernacExtend",
                        "354a231d2e89381b80441c83de51a8623736a173"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt with (1 := H2).",
                        "VernacExtend",
                        "2f2b91d1941e5c5c7650acba82254a4e7c67761b"
                    ]
                },
                {
                    "command": [
                        "apply He.",
                        "VernacExtend",
                        "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_lt_between'.",
                        "VernacExtend",
                        "63a15ff3174a06f608196b85267ac5d1aae1e55e"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "exact Hu.",
                        "VernacExtend",
                        "2ef276b73f30adea6147a9e5bb93e0371d61e365"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (1 := H1).",
                        "VernacExtend",
                        "6d3864a89ca677d6c1d9e59e9ef1a94dcfd8af8d"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le.",
                        "VernacExtend",
                        "cdc4280500779f23bae235b94c24a4b2ea2921fe"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt_0.",
                        "VernacExtend",
                        "266ec80c870ca91ace5efd2beddab25e945c4342"
                    ]
                },
                {
                    "command": [
                        "replace (b + eps - b) with (pos eps) by ring.",
                        "VernacExtend",
                        "11924999410a067fa90413fa6616bf4b3db39fd4"
                    ]
                },
                {
                    "command": [
                        "apply cond_pos.",
                        "VernacExtend",
                        "8ddb865849694c081c727a4dcd01494f171e402e"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_not_eq.",
                        "VernacExtend",
                        "7c469637fc05542bf9c3c4fab85774b12e6b8f93"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct Hfb' as [M HM].",
                        "VernacExtend",
                        "a765d4e3bf679914571477d4ee8f85f465888343"
                    ]
                },
                {
                    "command": [
                        "exists M.",
                        "VernacExtend",
                        "2a4b5607a006ea853718a616784ce7d5094d0af9"
                    ]
                },
                {
                    "command": [
                        "repeat split.",
                        "VernacExtend",
                        "7968f2448e3e51b1de42f5c433248f4a827b4da2"
                    ]
                },
                {
                    "command": [
                        "intros u [_ [H1 H2]].",
                        "VernacExtend",
                        "1085b9ea92fbd9faa87ea005211e592e5018b82d"
                    ]
                },
                {
                    "command": [
                        "apply Rnot_lt_le.",
                        "VernacExtend",
                        "3c60597e841405b7d257d92c4717e01515b21555"
                    ]
                },
                {
                    "command": [
                        "intros Hu.",
                        "VernacExtend",
                        "354a231d2e89381b80441c83de51a8623736a173"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt with (1 := H2).",
                        "VernacExtend",
                        "2f2b91d1941e5c5c7650acba82254a4e7c67761b"
                    ]
                },
                {
                    "command": [
                        "now apply HM.",
                        "VernacExtend",
                        "0fd50daf33700aec4b38fe714931408d9860ab7d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now destruct a.",
                        "VernacExtend",
                        "24051356fff328c7208562817960b0c83ed3bf6c"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Hex : exists x : R, Rbar_lt a x /\\ Rbar_lt x b /\\ f x <= y).",
                        "VernacExtend",
                        "72b2becc4faee04ee93adcaab039748f352a7e6c"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (Hfa' : Rbar_locally' a (fun x => Rbar_lt x b /\\ f x < y)).",
                        "VernacExtend",
                        "2a0e50cf69090934416fccea5980c3253be5cca1"
                    ]
                },
                {
                    "command": [
                        "apply filter_and.",
                        "VernacExtend",
                        "fbb80260b7ada2aadd0c8d53e45502ffc98a91f1"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_locally'_le.",
                        "VernacExtend",
                        "b9295b9a3c8e346f731fd684e37b47127f96aff8"
                    ]
                },
                {
                    "command": [
                        "now apply open_Rbar_lt'.",
                        "VernacExtend",
                        "ed6a52a3a4b4260c6b498cd9dd1b117031efcb54"
                    ]
                },
                {
                    "command": [
                        "apply (Hfa (fun u => u < y)).",
                        "VernacExtend",
                        "cc560037bc88b46b8ca6903b8ed3e4b8da45e921"
                    ]
                },
                {
                    "command": [
                        "now apply (open_Rbar_lt' _ y).",
                        "VernacExtend",
                        "3155e3252161ece29036ac0927f1bedc042103f2"
                    ]
                },
                {
                    "command": [
                        "clear -Hab Hfa'.",
                        "VernacExtend",
                        "2af2149fa744268c90dc9949b2ac320eece122da"
                    ]
                },
                {
                    "command": [
                        "destruct a as [a| |].",
                        "VernacExtend",
                        "04889a33caf31358e8bd997d113fd5cf53d9b4f3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct Hfa' as [eps He].",
                        "VernacExtend",
                        "8dfad193a829c1e9e74cf8f4110b736654f86900"
                    ]
                },
                {
                    "command": [
                        "exists (a + eps / 2).",
                        "VernacExtend",
                        "431c3d40fc8efb8c630fad05e21387869ef0d10f"
                    ]
                },
                {
                    "command": [
                        "assert (Ha : a < a + eps / 2).",
                        "VernacExtend",
                        "e78fd253484257c9662c79b624176b6ee7062f5d"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt_0.",
                        "VernacExtend",
                        "266ec80c870ca91ace5efd2beddab25e945c4342"
                    ]
                },
                {
                    "command": [
                        "replace (a + eps / 2 - a) with (eps / 2) by ring.",
                        "VernacExtend",
                        "8c8a5fcde48dfeb37618ee3795b5a74e0e5d8fb1"
                    ]
                },
                {
                    "command": [
                        "apply is_pos_div_2.",
                        "VernacExtend",
                        "34ece1c858dc4d1fc16b226888abddacb10f0a54"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "exact Ha.",
                        "VernacExtend",
                        "a28fca5591eeaddb4e260e48e00517131e113f6d"
                    ]
                },
                {
                    "command": [
                        "assert (H : Rbar_lt (a + eps / 2) b /\\ (f (a + eps / 2) < y)).",
                        "VernacExtend",
                        "ddb36b06404da2886c2a3a3e484d6894223250e9"
                    ]
                },
                {
                    "command": [
                        "apply He.",
                        "VernacExtend",
                        "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
                    ]
                },
                {
                    "command": [
                        "rewrite /ball /= /AbsRing_ball /abs /minus /plus /opp /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "replace (a + eps / 2 + - a) with (eps / 2) by ring.",
                        "VernacExtend",
                        "11bf9c6438567adbdd5926386e83d56622ab8654"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_pos_eq.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_eps2_eps.",
                        "VernacExtend",
                        "57005ded85ef0e45613ca5a139065be8e8425d00"
                    ]
                },
                {
                    "command": [
                        "apply cond_pos.",
                        "VernacExtend",
                        "8ddb865849694c081c727a4dcd01494f171e402e"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le.",
                        "VernacExtend",
                        "cdc4280500779f23bae235b94c24a4b2ea2921fe"
                    ]
                },
                {
                    "command": [
                        "apply is_pos_div_2.",
                        "VernacExtend",
                        "34ece1c858dc4d1fc16b226888abddacb10f0a54"
                    ]
                },
                {
                    "command": [
                        "now apply Rgt_not_eq.",
                        "VernacExtend",
                        "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
                    ]
                },
                {
                    "command": [
                        "destruct H as [H1 H2].",
                        "VernacExtend",
                        "c7474c5d52e048046b184a41b5748899e80e4e65"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "exact H1.",
                        "VernacExtend",
                        "c03ab82d1e411e1dcd211c59917a4946e039be00"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_le.",
                        "VernacExtend",
                        "3fa67bbd472123a7abc1f777aecc643fb3862e46"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct Hfa' as [M HM].",
                        "VernacExtend",
                        "ace1112deea57b20d724e66b66aad61847f40d05"
                    ]
                },
                {
                    "command": [
                        "exists (M - 1).",
                        "VernacExtend",
                        "04b4168cc26ecc76684f28febfb37774d51b6d1c"
                    ]
                },
                {
                    "command": [
                        "assert (H : Rbar_lt (M - 1) b /\\ f (M - 1) < y).",
                        "VernacExtend",
                        "09c92d7dc0c223d4cad1fbc3a4de7d49834eb948"
                    ]
                },
                {
                    "command": [
                        "apply HM.",
                        "VernacExtend",
                        "da44e10176bfb6a0c07c29369b62e8b925d50bc1"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt_0.",
                        "VernacExtend",
                        "266ec80c870ca91ace5efd2beddab25e945c4342"
                    ]
                },
                {
                    "command": [
                        "replace (M - (M - 1)) with 1 by ring.",
                        "VernacExtend",
                        "b5fbaec120a92083eeac93812807a1e0ad32c145"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_0_1.",
                        "VernacExtend",
                        "c3f675388bf844e0740197fd71afa66e5eef091d"
                    ]
                },
                {
                    "command": [
                        "destruct H as [H1 H2].",
                        "VernacExtend",
                        "c7474c5d52e048046b184a41b5748899e80e4e65"
                    ]
                },
                {
                    "command": [
                        "repeat split.",
                        "VernacExtend",
                        "7968f2448e3e51b1de42f5c433248f4a827b4da2"
                    ]
                },
                {
                    "command": [
                        "exact H1.",
                        "VernacExtend",
                        "c03ab82d1e411e1dcd211c59917a4946e039be00"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_le.",
                        "VernacExtend",
                        "3fa67bbd472123a7abc1f777aecc643fb3862e46"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (completeness (fun x => Rbar_lt a x /\\ Rbar_lt x b /\\ f x <= y)) as [x [Hub Hlub]].",
                        "VernacExtend",
                        "bb9d1b46e3df6b6050564a903e353187dc7ca2fd"
                    ]
                },
                {
                    "command": [
                        "destruct Hb' as [b' Hb'].",
                        "VernacExtend",
                        "221b01e238bb032ffc1d662ec3bf6f6796cf8bc5"
                    ]
                },
                {
                    "command": [
                        "now exists b'.",
                        "VernacExtend",
                        "d2cf2f38fbf8b3a96fda4f973f5708f7fcb1d30a"
                    ]
                },
                {
                    "command": [
                        "exact Hex.",
                        "VernacExtend",
                        "e0ee9de7cc2fcb930bb369f96acabead1395690e"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "destruct Hb' as [b' [Hb Hb']].",
                        "VernacExtend",
                        "24b808fc0094d6f4a114913c81931177ae3e4c63"
                    ]
                },
                {
                    "command": [
                        "destruct Hex as [x' Hx'].",
                        "VernacExtend",
                        "27ddf3896bdaceabc9356bae00e806ec76a2106f"
                    ]
                },
                {
                    "command": [
                        "assert (Hax : Rbar_lt a x).",
                        "VernacExtend",
                        "246b0ac65e1bd5b7e8aae8e4c36afedb66245e48"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_lt_le_trans with x'.",
                        "VernacExtend",
                        "fd5e7a89909c9bf057715dfe7df4ee2f7ce3f6c3"
                    ]
                },
                {
                    "command": [
                        "apply Hx'.",
                        "VernacExtend",
                        "b86ae5b23af511ab5298308aa6904e92e151bdab"
                    ]
                },
                {
                    "command": [
                        "now apply Hub.",
                        "VernacExtend",
                        "446f7d176007ba3ba84bb7ab477e912968dbf964"
                    ]
                },
                {
                    "command": [
                        "assert (Hxb : Rbar_lt x b).",
                        "VernacExtend",
                        "c2f7bd4ce23a32e9f26230b4915f37f80686c0de"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_le_lt_trans with b'.",
                        "VernacExtend",
                        "e739ab1eb440c5996a540cc762b3372961e52c1f"
                    ]
                },
                {
                    "command": [
                        "now apply Hlub.",
                        "VernacExtend",
                        "12b64d286fcc670d0f1247101cce42fb0189260c"
                    ]
                },
                {
                    "command": [
                        "exact Hb.",
                        "VernacExtend",
                        "0113214a475bcb80be38afd1bb1b52021ce8419f"
                    ]
                },
                {
                    "command": [
                        "repeat split ; try assumption.",
                        "VernacExtend",
                        "221a84919e803be5614ea6011742084cb77b34b6"
                    ]
                },
                {
                    "command": [
                        "specialize (Cf _ Hax Hxb).",
                        "VernacExtend",
                        "53c81dd9af059900349136f1255e859347099d2e"
                    ]
                },
                {
                    "command": [
                        "apply continuity_pt_filterlim in Cf.",
                        "VernacExtend",
                        "73ae1e7add4b664c2296e31a449355bb785b4a76"
                    ]
                },
                {
                    "command": [
                        "destruct (total_order_T (f x) y) as [[H|H]|H].",
                        "VernacExtend",
                        "deebc75c50c52a920dc5c58917472cce5d12fdcb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assert (H': locally x (fun u => (Rbar_lt a u /\\ Rbar_lt u b) /\\ f u < y)).",
                        "VernacExtend",
                        "08a4a863bf800f5be5bea1a17971f203bf9f9f17"
                    ]
                },
                {
                    "command": [
                        "apply filter_and.",
                        "VernacExtend",
                        "fbb80260b7ada2aadd0c8d53e45502ffc98a91f1"
                    ]
                },
                {
                    "command": [
                        "apply filter_and.",
                        "VernacExtend",
                        "fbb80260b7ada2aadd0c8d53e45502ffc98a91f1"
                    ]
                },
                {
                    "command": [
                        "now apply open_Rbar_gt.",
                        "VernacExtend",
                        "58f53075c91382d8697e63e5b2b4912dbb802a61"
                    ]
                },
                {
                    "command": [
                        "now apply open_Rbar_lt.",
                        "VernacExtend",
                        "e886c6cd06bf21e42e3aa034425a0023037b3b6f"
                    ]
                },
                {
                    "command": [
                        "apply (Cf (fun u => u < y)).",
                        "VernacExtend",
                        "a0f1dcba5e45a5c082b90382f4211dcce39e290c"
                    ]
                },
                {
                    "command": [
                        "now apply open_lt.",
                        "VernacExtend",
                        "8cf0b577159c5ebd31b155114ac90bdecf599892"
                    ]
                },
                {
                    "command": [
                        "destruct H' as [eps H'].",
                        "VernacExtend",
                        "bc82f85448b47ba23c3693fb6cdfc4e916175740"
                    ]
                },
                {
                    "command": [
                        "elim Rle_not_lt with x (x + eps / 2).",
                        "VernacExtend",
                        "06e4566c7cf2ecb03c7542d71bc8c0dae13c29ac"
                    ]
                },
                {
                    "command": [
                        "apply Hub.",
                        "VernacExtend",
                        "88ecc2488b63e46827735699f592921a85d0a25a"
                    ]
                },
                {
                    "command": [
                        "destruct (H' (x + eps / 2)) as [[H1 H2] H3].",
                        "VernacExtend",
                        "baabd282d5c6a3a9c409ad522b2cecb4aa01aebb"
                    ]
                },
                {
                    "command": [
                        "rewrite /ball /= /AbsRing_ball /abs /minus /plus /opp /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "replace (x + eps / 2 + - x) with (eps / 2) by ring.",
                        "VernacExtend",
                        "e261f0e1c48695d34f657d3199f721d2021a3ec4"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_pos_eq.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_eps2_eps.",
                        "VernacExtend",
                        "57005ded85ef0e45613ca5a139065be8e8425d00"
                    ]
                },
                {
                    "command": [
                        "apply cond_pos.",
                        "VernacExtend",
                        "8ddb865849694c081c727a4dcd01494f171e402e"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le.",
                        "VernacExtend",
                        "cdc4280500779f23bae235b94c24a4b2ea2921fe"
                    ]
                },
                {
                    "command": [
                        "apply is_pos_div_2.",
                        "VernacExtend",
                        "34ece1c858dc4d1fc16b226888abddacb10f0a54"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "exact H1.",
                        "VernacExtend",
                        "c03ab82d1e411e1dcd211c59917a4946e039be00"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "exact H2.",
                        "VernacExtend",
                        "6cf1ccd4f667f962fca87ce20ad22b06c15c53ad"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_le.",
                        "VernacExtend",
                        "3fa67bbd472123a7abc1f777aecc643fb3862e46"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt_0.",
                        "VernacExtend",
                        "266ec80c870ca91ace5efd2beddab25e945c4342"
                    ]
                },
                {
                    "command": [
                        "replace (x + eps / 2 - x) with (eps / 2) by ring.",
                        "VernacExtend",
                        "b3c4dd7bd21f57df91a6bd55b1779ff1d58ddaea"
                    ]
                },
                {
                    "command": [
                        "apply is_pos_div_2.",
                        "VernacExtend",
                        "34ece1c858dc4d1fc16b226888abddacb10f0a54"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exact H.",
                        "VernacExtend",
                        "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assert (H': locally x (fun u => y < f u)).",
                        "VernacExtend",
                        "06fd7991fdfd5ae513933cdcf3c70f2315051f9f"
                    ]
                },
                {
                    "command": [
                        "apply (Cf (fun u => y < u)).",
                        "VernacExtend",
                        "c775f6b8784e229543499eabd1de5564a529ada2"
                    ]
                },
                {
                    "command": [
                        "now apply open_gt.",
                        "VernacExtend",
                        "2318c82e3dfd68e1bf68de85d24d9b266cd32e60"
                    ]
                },
                {
                    "command": [
                        "destruct H' as [eps H'].",
                        "VernacExtend",
                        "bc82f85448b47ba23c3693fb6cdfc4e916175740"
                    ]
                },
                {
                    "command": [
                        "elim Rle_not_lt with (x - eps) x.",
                        "VernacExtend",
                        "7467d330ae6129643838cd48a51f0bc4f8a92bbe"
                    ]
                },
                {
                    "command": [
                        "apply Hlub.",
                        "VernacExtend",
                        "42a854660f9b5b76a9f43a3a158d45a7581393cb"
                    ]
                },
                {
                    "command": [
                        "intros u Hfu.",
                        "VernacExtend",
                        "68a7ba44cce6dd3f60858f0dd4e027a83a7a9311"
                    ]
                },
                {
                    "command": [
                        "apply Rnot_lt_le.",
                        "VernacExtend",
                        "3c60597e841405b7d257d92c4717e01515b21555"
                    ]
                },
                {
                    "command": [
                        "intros Hu.",
                        "VernacExtend",
                        "354a231d2e89381b80441c83de51a8623736a173"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt with (1 := proj2 (proj2 Hfu)).",
                        "VernacExtend",
                        "bf19d77d8c497e500b0f5712b7f69dd800c8431b"
                    ]
                },
                {
                    "command": [
                        "apply H'.",
                        "VernacExtend",
                        "b9f7b1afd5784d2a6d1eac6189a3bdc5f0119ad0"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_lt_between'.",
                        "VernacExtend",
                        "63a15ff3174a06f608196b85267ac5d1aae1e55e"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "exact Hu.",
                        "VernacExtend",
                        "2ef276b73f30adea6147a9e5bb93e0371d61e365"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (1 := Hub u Hfu).",
                        "VernacExtend",
                        "bd308e4da377848331e54c51135aaf631c484d2d"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt_0.",
                        "VernacExtend",
                        "266ec80c870ca91ace5efd2beddab25e945c4342"
                    ]
                },
                {
                    "command": [
                        "replace (x + eps - x) with (pos eps) by ring.",
                        "VernacExtend",
                        "a71263931943517e18f5ffca410b7cc821f81190"
                    ]
                },
                {
                    "command": [
                        "apply cond_pos.",
                        "VernacExtend",
                        "8ddb865849694c081c727a4dcd01494f171e402e"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt_0.",
                        "VernacExtend",
                        "266ec80c870ca91ace5efd2beddab25e945c4342"
                    ]
                },
                {
                    "command": [
                        "replace (x - (x - eps)) with (pos eps) by ring.",
                        "VernacExtend",
                        "c4092aed191badfef8782a9c998a97b56299f319"
                    ]
                },
                {
                    "command": [
                        "apply cond_pos.",
                        "VernacExtend",
                        "8ddb865849694c081c727a4dcd01494f171e402e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "IVT_Rbar_decr",
            "line_nb": 873,
            "steps": [
                {
                    "command": [
                        "move => Hla Hlb Cf Hab Hy.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (IVT_Rbar_incr (fun x => - f x) a b (Rbar_opp la) (Rbar_opp lb) (-y)).",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_opp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_opp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => x Hax Hxb.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by apply continuity_pt_opp, Cf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Hab.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "split ; apply Rbar_opp_lt ; rewrite Rbar_opp_involutive /Rbar_opp Ropp_involutive ; by apply Hy.",
                        "VernacExtend",
                        "53333cb718cff66f07cc074a150cbde125107b85"
                    ]
                },
                {
                    "command": [
                        "move => x Hx ; exists x ; intuition.",
                        "VernacExtend",
                        "9cf22d0991bcb9b52f60d16f38fb69d236b39d0e"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(Ropp_involutive y) -H4 Ropp_involutive.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "continuity_2d_pt_filterlim",
            "line_nb": 886,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros Cf P [eps He].",
                        "VernacExtend",
                        "dfd29f15d60a44a9dd0fd471d68ef317bc2d679c"
                    ]
                },
                {
                    "command": [
                        "specialize (Cf eps).",
                        "VernacExtend",
                        "4dd629f246617596079d971e5890bf4a009d445f"
                    ]
                },
                {
                    "command": [
                        "apply locally_2d_locally in Cf.",
                        "VernacExtend",
                        "362f59623976084bc339a99e92bf822f19e1c9b7"
                    ]
                },
                {
                    "command": [
                        "apply filter_imp with (2 := Cf).",
                        "VernacExtend",
                        "c877a3b50a0c321fa2468c027b51123fee0ddedf"
                    ]
                },
                {
                    "command": [
                        "intros [u v].",
                        "VernacExtend",
                        "c9b3ee7d8ebd28ed5e29d8ca474d701782d2eab1"
                    ]
                },
                {
                    "command": [
                        "apply He.",
                        "VernacExtend",
                        "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros Cf eps.",
                        "VernacExtend",
                        "3a4079fe27ad5b4661bec5977d27b02cbc6dc82e"
                    ]
                },
                {
                    "command": [
                        "apply locally_2d_locally.",
                        "VernacExtend",
                        "ef6e7a1f160f0048548d7d44408b1e8584988c50"
                    ]
                },
                {
                    "command": [
                        "specialize (Cf (fun z => Rabs (z - f x y) < eps)).",
                        "VernacExtend",
                        "055a5e2ac3f8e43505f87d5b9b61c77bb1adaaaf"
                    ]
                },
                {
                    "command": [
                        "unfold filtermap in Cf.",
                        "VernacExtend",
                        "daaabd0fcfc92c412202164b4495b51b10734456"
                    ]
                },
                {
                    "command": [
                        "apply Cf.",
                        "VernacExtend",
                        "50610f46fbfa53c93c9fcf1f56f87527a14f990a"
                    ]
                },
                {
                    "command": [
                        "now exists eps.",
                        "VernacExtend",
                        "231859d3bd429d5cb9a46c5a8150f7440e5ea441"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "uniform_continuity_2d_1d'",
            "line_nb": 1012,
            "steps": [
                {
                    "command": [
                        "intros f a b c Cf eps.",
                        "VernacExtend",
                        "6d81e0a318331ebd52aa4a3f45bf6199cf3b39ef"
                    ]
                },
                {
                    "command": [
                        "assert (T:(forall x : R, a <= x <= b -> continuity_2d_pt (fun x0 y : R => f y x0) x c) ).",
                        "VernacExtend",
                        "2356e75aa9590e1f5a9ae6389df0a6fa73301c4e"
                    ]
                },
                {
                    "command": [
                        "intros x Hx e.",
                        "VernacExtend",
                        "4b2bc658d1352d6bbc15c3a5ac9b52bdf2f8e0f0"
                    ]
                },
                {
                    "command": [
                        "destruct (Cf x Hx e) as (d,Hd).",
                        "VernacExtend",
                        "18e542940a9c5d9a02b1db1ebdf2386a33ad29ac"
                    ]
                },
                {
                    "command": [
                        "exists d.",
                        "VernacExtend",
                        "39cea21d4e04fa9463f57be4e5a423277681d456"
                    ]
                },
                {
                    "command": [
                        "intros; now apply Hd.",
                        "VernacExtend",
                        "5442cc0b2e703f8a6ee655c0fa82e3c6401911af"
                    ]
                },
                {
                    "command": [
                        "destruct (uniform_continuity_2d_1d (fun x y => f y x) a b c T eps) as (d,Hd).",
                        "VernacExtend",
                        "3798b283485185a4dde7e60706dff2489d4432c2"
                    ]
                },
                {
                    "command": [
                        "exists d; intros.",
                        "VernacExtend",
                        "b9e788289c3f4d552494ea1db28a0fbdfdeb0705"
                    ]
                },
                {
                    "command": [
                        "now apply Hd.",
                        "VernacExtend",
                        "15c9c6e291f7dbf0a6c15cab84ce6f5db83fe740"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "continuity_2d_pt_neq_0",
            "line_nb": 1023,
            "steps": [
                {
                    "command": [
                        "intros f x y Cf H.",
                        "VernacExtend",
                        "f3a321ec692838167a7f307000bf9221443246c8"
                    ]
                },
                {
                    "command": [
                        "apply continuity_2d_pt_filterlim in Cf.",
                        "VernacExtend",
                        "0eacd1bde0ecc09e0efbb89943e3e2af67dbfd1d"
                    ]
                },
                {
                    "command": [
                        "apply locally_2d_locally.",
                        "VernacExtend",
                        "ef6e7a1f160f0048548d7d44408b1e8584988c50"
                    ]
                },
                {
                    "command": [
                        "apply (Cf (fun y => y <> 0)).",
                        "VernacExtend",
                        "0b794f43c53b0f22afe4b8ec50179fa46fc394ee"
                    ]
                },
                {
                    "command": [
                        "now apply open_neq.",
                        "VernacExtend",
                        "9e5c429edcb1bb04c8d5bb5fc92fa2424501e911"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "continuity_pt_id",
            "line_nb": 1030,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "apply continuity_pt_filterlim.",
                        "VernacExtend",
                        "e7e11f829f0da02ed082c41d4319fefb2ba19a7b"
                    ]
                },
                {
                    "command": [
                        "now intros P.",
                        "VernacExtend",
                        "19ab06932640025e658ae6c88dc50d978078fe19"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "continuity_2d_pt_id1",
            "line_nb": 1035,
            "steps": [
                {
                    "command": [
                        "intros x y eps; exists eps; tauto.",
                        "VernacExtend",
                        "45f9f070015a4c45578edf281859581a3ca9dc3f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "continuity_2d_pt_id2",
            "line_nb": 1038,
            "steps": [
                {
                    "command": [
                        "intros x y eps; exists eps; tauto.",
                        "VernacExtend",
                        "45f9f070015a4c45578edf281859581a3ca9dc3f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "continuity_2d_pt_const",
            "line_nb": 1041,
            "steps": [
                {
                    "command": [
                        "intros x y c eps; exists eps; rewrite Rminus_eq_0 Rabs_R0.",
                        "VernacExtend",
                        "1a33f2ac2533f51a5a73874d49807c866ca352d6"
                    ]
                },
                {
                    "command": [
                        "intros; apply cond_pos.",
                        "VernacExtend",
                        "d54831fecb9d9e65ebb68fd8d5444020c548cf21"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "continuity_pt_ext_loc",
            "line_nb": 1045,
            "steps": [
                {
                    "command": [
                        "intros f g x Heq Cf.",
                        "VernacExtend",
                        "72f1f93808acf3e470e3cca8126f0e2dd8f7089d"
                    ]
                },
                {
                    "command": [
                        "apply continuity_pt_filterlim in Cf.",
                        "VernacExtend",
                        "73ae1e7add4b664c2296e31a449355bb785b4a76"
                    ]
                },
                {
                    "command": [
                        "apply continuity_pt_filterlim.",
                        "VernacExtend",
                        "e7e11f829f0da02ed082c41d4319fefb2ba19a7b"
                    ]
                },
                {
                    "command": [
                        "rewrite -(locally_singleton _ _ Heq).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply filterlim_ext_loc with f.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "continuity_pt_ext",
            "line_nb": 1052,
            "steps": [
                {
                    "command": [
                        "intros f g x Heq.",
                        "VernacExtend",
                        "29966d2f8857985b347ce0718922abc61d463c8d"
                    ]
                },
                {
                    "command": [
                        "apply continuity_pt_ext_loc.",
                        "VernacExtend",
                        "5b5719b354c4a8c13364ad40a90b6ac39bcd35ae"
                    ]
                },
                {
                    "command": [
                        "by apply filter_forall.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "continuity_2d_pt_ext_loc",
            "line_nb": 1057,
            "steps": [
                {
                    "command": [
                        "intros f g x y Heq Cf.",
                        "VernacExtend",
                        "38c5b1288d1b20df88d95fb53d10dbb8be9e783b"
                    ]
                },
                {
                    "command": [
                        "apply locally_2d_locally in Heq.",
                        "VernacExtend",
                        "568a47cd7d34cfca28867dc37d68ffb4e6b8bf3d"
                    ]
                },
                {
                    "command": [
                        "apply continuity_2d_pt_filterlim in Cf.",
                        "VernacExtend",
                        "0eacd1bde0ecc09e0efbb89943e3e2af67dbfd1d"
                    ]
                },
                {
                    "command": [
                        "apply continuity_2d_pt_filterlim.",
                        "VernacExtend",
                        "b6b9ac5f01c00b9bf67d33187b183cf20656d595"
                    ]
                },
                {
                    "command": [
                        "rewrite -(locally_singleton _ _ Heq).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_ext_loc with (2 := Cf).",
                        "VernacExtend",
                        "c357449de121f0d594fb1749b6e1a20808f327e4"
                    ]
                },
                {
                    "command": [
                        "by apply Heq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "continuity_2d_pt_ext",
            "line_nb": 1066,
            "steps": [
                {
                    "command": [
                        "intros f g x y Heq.",
                        "VernacExtend",
                        "56ec2bcdec428f74bf58e719898b80e63e868507"
                    ]
                },
                {
                    "command": [
                        "apply continuity_2d_pt_ext_loc.",
                        "VernacExtend",
                        "00fecdf6acdaa228426119fac2c7acca1526c50a"
                    ]
                },
                {
                    "command": [
                        "apply locally_2d_locally.",
                        "VernacExtend",
                        "ef6e7a1f160f0048548d7d44408b1e8584988c50"
                    ]
                },
                {
                    "command": [
                        "apply filter_forall.",
                        "VernacExtend",
                        "8c32dc4f52f30e2c1af34a6c3ce57fe2d3feab75"
                    ]
                },
                {
                    "command": [
                        "now intros [u v].",
                        "VernacExtend",
                        "78841ab0a6dc930090e87595a5ad76277bd6fac7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "continuity_1d_2d_pt_comp",
            "line_nb": 1073,
            "steps": [
                {
                    "command": [
                        "intros f g x y Cf Cg.",
                        "VernacExtend",
                        "6cc3d1a3ed463324d9b69460befa7d37262a744a"
                    ]
                },
                {
                    "command": [
                        "apply continuity_pt_filterlim in Cf.",
                        "VernacExtend",
                        "73ae1e7add4b664c2296e31a449355bb785b4a76"
                    ]
                },
                {
                    "command": [
                        "apply continuity_2d_pt_filterlim in Cg.",
                        "VernacExtend",
                        "62d4446d1a477c4c619425542938ff21b2bc0e97"
                    ]
                },
                {
                    "command": [
                        "apply continuity_2d_pt_filterlim.",
                        "VernacExtend",
                        "b6b9ac5f01c00b9bf67d33187b183cf20656d595"
                    ]
                },
                {
                    "command": [
                        "apply: filterlim_comp Cg Cf.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "continuity_2d_pt_opp",
            "line_nb": 1080,
            "steps": [
                {
                    "command": [
                        "apply continuity_1d_2d_pt_comp.",
                        "VernacExtend",
                        "7f0f0bfea3ff859e7e4267b058bce22bc5c1bd4e"
                    ]
                },
                {
                    "command": [
                        "apply continuity_pt_opp.",
                        "VernacExtend",
                        "238c2d5d040985b9f9b2cd62b295bf4aea700456"
                    ]
                },
                {
                    "command": [
                        "apply continuity_pt_id.",
                        "VernacExtend",
                        "eeef04bdabafa78a69f5a42ef5803b63666e8048"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "continuity_2d_pt_minus",
            "line_nb": 1095,
            "steps": [
                {
                    "command": [
                        "move => Cf Cg.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply continuity_2d_pt_plus.",
                        "VernacExtend",
                        "df5a8a417edaeae44af71f07272e95b7a5d6699b"
                    ]
                },
                {
                    "command": [
                        "exact: Cf.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "by apply continuity_2d_pt_opp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "continuity_2d_pt_inv",
            "line_nb": 1101,
            "steps": [
                {
                    "command": [
                        "intros Cf Df.",
                        "VernacExtend",
                        "c4d4a1a4cdb6aaf6053b3f4090df3c964a7c318e"
                    ]
                },
                {
                    "command": [
                        "apply continuity_2d_pt_filterlim in Cf.",
                        "VernacExtend",
                        "0eacd1bde0ecc09e0efbb89943e3e2af67dbfd1d"
                    ]
                },
                {
                    "command": [
                        "apply continuity_2d_pt_filterlim.",
                        "VernacExtend",
                        "b6b9ac5f01c00b9bf67d33187b183cf20656d595"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_comp with (1 := Cf).",
                        "VernacExtend",
                        "a8efc7aee103a51e56f9caab00bcdfeaeeebf253"
                    ]
                },
                {
                    "command": [
                        "apply (filterlim_Rbar_inv (f x y)).",
                        "VernacExtend",
                        "1588dd8269203d2c433c62d0e24b129f47eb71c3"
                    ]
                },
                {
                    "command": [
                        "contradict Df.",
                        "VernacExtend",
                        "016779d955871029f0514348317eebe7aa566e8d"
                    ]
                },
                {
                    "command": [
                        "now injection Df.",
                        "VernacExtend",
                        "3aa421da28097f73c1db496094755a5d44b2428e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "continuous_continuous_on",
            "line_nb": 1124,
            "steps": [
                {
                    "command": [
                        "intros D f x Dx CD P Pfx.",
                        "VernacExtend",
                        "3a09a1a4f855f2bdcff15d93af8640a1d73b6543"
                    ]
                },
                {
                    "command": [
                        "assert (Dx' := locally_singleton _ _ Dx).",
                        "VernacExtend",
                        "bd0aa630d0357790eba1fdf18751319d360de2a9"
                    ]
                },
                {
                    "command": [
                        "generalize (filter_and _ _ Dx (CD x Dx' P Pfx)).",
                        "VernacExtend",
                        "7c9391d481e5e8fa90b86ecb826b8364042c80a3"
                    ]
                },
                {
                    "command": [
                        "unfold filtermap, within.",
                        "VernacExtend",
                        "43b855db24d4bdbf237cb60de5d8592d4d4e8464"
                    ]
                },
                {
                    "command": [
                        "apply filter_imp.",
                        "VernacExtend",
                        "cd5d68d491d9b471ebb7deccb08d7a71ba953368"
                    ]
                },
                {
                    "command": [
                        "intros t [H1 H2].",
                        "VernacExtend",
                        "5745969ea200cf658f708285efa8193c7a2226fc"
                    ]
                },
                {
                    "command": [
                        "now apply H2.",
                        "VernacExtend",
                        "24cee18271b1e351879d2c867b57a8b1f3948c7d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "continuous_on_subset",
            "line_nb": 1133,
            "steps": [
                {
                    "command": [
                        "intros D E f H CD x Ex P Pfx.",
                        "VernacExtend",
                        "bd9ad92d592c077353d5aae00e4ee3203bdd2542"
                    ]
                },
                {
                    "command": [
                        "generalize (CD x (H x Ex) P Pfx).",
                        "VernacExtend",
                        "b997ee5c3a4279b891b3716c442417494b7a66c1"
                    ]
                },
                {
                    "command": [
                        "unfold filtermap, within.",
                        "VernacExtend",
                        "43b855db24d4bdbf237cb60de5d8592d4d4e8464"
                    ]
                },
                {
                    "command": [
                        "apply filter_imp.",
                        "VernacExtend",
                        "cd5d68d491d9b471ebb7deccb08d7a71ba953368"
                    ]
                },
                {
                    "command": [
                        "intros t H' Et.",
                        "VernacExtend",
                        "9097062cced3d6554d6d34e9decc16f8b833b136"
                    ]
                },
                {
                    "command": [
                        "now apply H', H.",
                        "VernacExtend",
                        "8256c5e6291ac2159ffa06c9e4ac78a44035c736"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "continuous_on_forall",
            "line_nb": 1141,
            "steps": [
                {
                    "command": [
                        "intros D f H x Dx P Pfx.",
                        "VernacExtend",
                        "c7736979b69700b6337952714c5888ad62c9d927"
                    ]
                },
                {
                    "command": [
                        "generalize (H x Dx P Pfx).",
                        "VernacExtend",
                        "bc43a184507c8c69210f8f01e19ee4c3ea3d4796"
                    ]
                },
                {
                    "command": [
                        "unfold filtermap, within.",
                        "VernacExtend",
                        "43b855db24d4bdbf237cb60de5d8592d4d4e8464"
                    ]
                },
                {
                    "command": [
                        "now apply filter_imp.",
                        "VernacExtend",
                        "1634f17ef3d06f3d92d7c9af2991f9dda7feb1da"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "continuous_ext",
            "line_nb": 1153,
            "steps": [
                {
                    "command": [
                        "intros f g x H Cf.",
                        "VernacExtend",
                        "db8a1feb09796d677ef61203b02beffc74a9d31f"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_ext with (1 := H).",
                        "VernacExtend",
                        "6f41176d2a918fc3e21cf3e09839eb3510d9177f"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- H.",
                        "VernacExtend",
                        "263ddf4271621bf4b397740764d4ad46d50c2bb1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "continuous_on_ext",
            "line_nb": 1158,
            "steps": [
                {
                    "command": [
                        "intros D f g H Cf x Dx.",
                        "VernacExtend",
                        "2baa8d5f2a8a4f31f5b88fb44e76092706102c85"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_within_ext with (1 := H).",
                        "VernacExtend",
                        "cfbfac9ea5dfaccc52a0069197f04accf0bb32a3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H with (1 := Dx).",
                        "VernacExtend",
                        "8286e762eba09d1722525df8969bef734dad3b90"
                    ]
                },
                {
                    "command": [
                        "now apply Cf.",
                        "VernacExtend",
                        "8b2a93b9c540e05419f8d9aafc9391eadc576c23"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "continuous_comp",
            "line_nb": 1165,
            "steps": [
                {
                    "command": [
                        "by apply filterlim_comp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "continuous_fst",
            "line_nb": 1192,
            "steps": [
                {
                    "command": [
                        "intros P [d Hd].",
                        "VernacExtend",
                        "b0e698234308a641534e33c7e92cd0cf9f876c93"
                    ]
                },
                {
                    "command": [
                        "exists d => z [/= Hz1 Hz2].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply Hd => /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "continuous_snd",
            "line_nb": 1197,
            "steps": [
                {
                    "command": [
                        "intros P [d Hd].",
                        "VernacExtend",
                        "b0e698234308a641534e33c7e92cd0cf9f876c93"
                    ]
                },
                {
                    "command": [
                        "exists d => z [/= Hz1 Hz2].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply Hd => /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "continuous_const",
            "line_nb": 1202,
            "steps": [
                {
                    "command": [
                        "apply filterlim_const.",
                        "VernacExtend",
                        "ff971edf84d1cf6e134869f4729acc40969816e1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "continuous_id",
            "line_nb": 1205,
            "steps": [
                {
                    "command": [
                        "apply filterlim_id.",
                        "VernacExtend",
                        "0c9885f23d2ca915379801b6ded9080d6c98b8f7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "continuous_minus",
            "line_nb": 1223,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply continuous_plus.",
                        "VernacExtend",
                        "1056f8a39923c019dc7af008247ba60188d3c8cb"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "by apply continuous_opp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "continuous_scal",
            "line_nb": 1229,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "by eapply filterlim_comp_2, filterlim_scal.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "continuous_scal_r",
            "line_nb": 1233,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "by apply continuous_comp, filterlim_scal_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "continuous_scal_l",
            "line_nb": 1237,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (continuous_comp f (fun y => scal y k)) => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_scal_l.",
                        "VernacExtend",
                        "9f9b42fff9cadd03b539c76cc284adc09ffb4d3a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "continuous_mult",
            "line_nb": 1243,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "by eapply filterlim_comp_2, filterlim_mult.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}