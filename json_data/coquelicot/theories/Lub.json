{
    "filename": "theories/Lub.v",
    "coq_project": "coquelicot",
    "vernac_cmds": [
        [
            "Require Import Reals mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "94d17d05ae0141f6c8b0bcb31d33a153dd99df0d"
        ],
        [
            "Require Import Rbar Rcomplements Markov.",
            "VernacRequire",
            "ff49513806a417da11e2e53d35dec4f65bfa6f2a"
        ],
        [
            "Open Scope R_scope.",
            "VernacOpenCloseScope",
            "e9e2b017da79049aff27c5418fe22258c29a75e7"
        ],
        [
            "Definition is_ub_Rbar (E : R -> Prop) (l : Rbar) := forall (x : R), E x -> Rbar_le x l.",
            "VernacDefinition",
            "fb4b57b62f26a3ffdf8fbf050b6c9188da941dd1"
        ],
        [
            "Definition is_lb_Rbar (E : R -> Prop) (l : Rbar) := forall (x : R), E x -> Rbar_le l x.",
            "VernacDefinition",
            "0077339585bf2d23c66163727fd859227d74543a"
        ],
        [
            "Lemma is_ub_Rbar_opp (E : R -> Prop) (l : Rbar) : is_lb_Rbar E l <-> is_ub_Rbar (fun x => E (- x)) (Rbar_opp l).",
            "VernacStartTheoremProof",
            "8d9c8811a87431d7d6551ae89f0dca2f5456942c"
        ],
        [
            "split ; intros Hl x Hx ; apply Rbar_opp_le.",
            "VernacExtend",
            "2ebf6932b5be84a7e5a561389d424ef3fedea53a"
        ],
        [
            "now rewrite Rbar_opp_involutive ; apply Hl.",
            "VernacExtend",
            "fdc2cf285bfdfe1660ab944164423efaefd431c9"
        ],
        [
            "now apply Hl ; rewrite Ropp_involutive.",
            "VernacExtend",
            "a79fd73abf19bff2b3712590a09b8af1c3ad391e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lb_Rbar_opp (E : R -> Prop) (l : Rbar) : is_ub_Rbar E l <-> is_lb_Rbar (fun x => E (- x)) (Rbar_opp l).",
            "VernacStartTheoremProof",
            "1418d3fa7b8648ccd000a363a1920cfad2fa7486"
        ],
        [
            "split ; intros Hl x Hx ; apply Rbar_opp_le.",
            "VernacExtend",
            "2ebf6932b5be84a7e5a561389d424ef3fedea53a"
        ],
        [
            "now rewrite Rbar_opp_involutive ; apply Hl.",
            "VernacExtend",
            "fdc2cf285bfdfe1660ab944164423efaefd431c9"
        ],
        [
            "now apply Hl ; rewrite Ropp_involutive.",
            "VernacExtend",
            "a79fd73abf19bff2b3712590a09b8af1c3ad391e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_ub_Rbar_dec (E : R -> Prop) : {l : R | is_ub_Rbar E l} + {(forall l : R, ~is_ub_Rbar E l)}.",
            "VernacStartTheoremProof",
            "875657c69e52c74a3b32acf61d2c1c33707c6237"
        ],
        [
            "set (F (n : nat) (x : R) := x = 0 \\/ (E x /\\ x <= INR n)).",
            "VernacExtend",
            "abbbc264b98d41e89995503db210b897f241af35"
        ],
        [
            "assert (F_b : forall n, bound (F n)).",
            "VernacExtend",
            "e606fdab0caa222d5d1eb64a6c4088252b3ddec9"
        ],
        [
            "intros ; exists (INR n) => x ; case => [-> | Hx].",
            "VernacExtend",
            "76a7ef5b05d84d9d03ba9fdd3d74c71d7980870a"
        ],
        [
            "by apply pos_INR.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "assert (F_ex : forall n, (exists x : R, F n x)).",
            "VernacExtend",
            "95e4c74fee4ace8be92583c97f4452fef25917e7"
        ],
        [
            "intros ; exists 0 ; by left.",
            "VernacExtend",
            "8923ce2867ab7c54cfd5e71c28d1296bb6535d3b"
        ],
        [
            "set (u (n : nat) := proj1_sig (completeness (F n) (F_b n) (F_ex n))).",
            "VernacExtend",
            "7511d5886ed9866cda3be88ed12e6c98cfe7020e"
        ],
        [
            "destruct (LPO_ub_dec u) as [ [M HM] | HM].",
            "VernacExtend",
            "b76b8c6f081c52b72fa16ea253d28db6b0323d90"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "left ; exists M => x Hx.",
            "VernacExtend",
            "8a6df78024aa115f62777406f2002d070e3ba050"
        ],
        [
            "destruct (nfloor_ex (Rmax 0 x)) as [n Hn].",
            "VernacExtend",
            "ad18816f6d0bc75b1f6a1f5d5ecd0eda27a3c715"
        ],
        [
            "by apply Rmax_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "eapply Rle_trans, (HM (S n)).",
            "VernacExtend",
            "48d6557d17d662840263e386f6c7396700a974e7"
        ],
        [
            "rewrite /u ; case: completeness => l Hl /=.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "apply Hl ; right ; split => //.",
            "VernacExtend",
            "132b28e1900564f7a48785afc04514bfccd39962"
        ],
        [
            "rewrite S_INR ; eapply Rle_trans, Rlt_le, Hn.",
            "VernacExtend",
            "0e65ea34a3801a259a9e27495145dd91533ac11d"
        ],
        [
            "by apply Rmax_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "right => l Hl.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (HM (Rmax 0 l)) => n {HM}.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rle_not_lt.",
            "VernacExtend",
            "1f0f6b47a7d49626d97b2585f7610e291096035d"
        ],
        [
            "rewrite /u ; case: completeness => M HM /=.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "apply HM => x ; case => [ -> | Hx].",
            "VernacExtend",
            "4a95f82aca0fc9a50f43053eca44fc9141212abe"
        ],
        [
            "by apply Rmax_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "eapply Rle_trans, Rmax_r.",
            "VernacExtend",
            "6c0028a6c36bd7e184a7f193f8765b6165686be2"
        ],
        [
            "apply Hl, Hx.",
            "VernacExtend",
            "2aabe13e542d9d479a570b55fe2c500fb279c4eb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lb_Rbar_dec (E : R -> Prop) : {l : R | is_lb_Rbar E l} + {(forall l : R, ~is_lb_Rbar E l)}.",
            "VernacStartTheoremProof",
            "01e77b4ce3f5bc2f42ca56bd43c89b0902a9a464"
        ],
        [
            "destruct (is_ub_Rbar_dec (fun x => E (- x))) as [ [l Hl] | Hl ].",
            "VernacExtend",
            "e0209defba77eee28901f0c8377c55e6dadf8aaf"
        ],
        [
            "left ; exists (Rbar_opp l).",
            "VernacExtend",
            "3c0a5683386edad5d5cd496807c653e33c500279"
        ],
        [
            "by apply is_ub_Rbar_opp ; rewrite (Rbar_opp_involutive l).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "right => l.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "specialize (Hl (Rbar_opp l)).",
            "VernacExtend",
            "8e226b51ad55c95b8a02bb3075426eda8b59f30b"
        ],
        [
            "contradict Hl.",
            "VernacExtend",
            "b0fd704608864a015715b0c7a14b60f0655e01f3"
        ],
        [
            "by apply (is_ub_Rbar_opp E l).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_ub_Rbar_subset (E1 E2 : R -> Prop) (l : Rbar) : (forall x : R, E2 x -> E1 x) -> is_ub_Rbar E1 l -> is_ub_Rbar E2 l.",
            "VernacStartTheoremProof",
            "156dc5f97bf4250d73fcc1199651b529192688ce"
        ],
        [
            "move => H ub1 x Hx.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply: ub1 ; by apply: H.",
            "VernacExtend",
            "9ba8844f90da4a48c6c9ed986dcaebadc0623e9f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lb_Rbar_subset (E1 E2 : R -> Prop) (l : Rbar) : (forall x : R, E2 x -> E1 x) -> is_lb_Rbar E1 l -> is_lb_Rbar E2 l.",
            "VernacStartTheoremProof",
            "4bf590c41e736c8865154bd0f7a0baa2ade6437b"
        ],
        [
            "move => H ub1 x Hx.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply: ub1 ; by apply: H.",
            "VernacExtend",
            "9ba8844f90da4a48c6c9ed986dcaebadc0623e9f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition is_lub_Rbar (E : R -> Prop) (l : Rbar) := is_ub_Rbar E l /\\ (forall b, is_ub_Rbar E b -> Rbar_le l b).",
            "VernacDefinition",
            "5a4b8277d69d3da748f81afdafa099bcd73208d2"
        ],
        [
            "Definition is_glb_Rbar (E : R -> Prop) (l : Rbar) := is_lb_Rbar E l /\\ (forall b, is_lb_Rbar E b -> Rbar_le b l).",
            "VernacDefinition",
            "693479f7997f09f46b35884bca30b13af491bcb2"
        ],
        [
            "Lemma is_lub_Rbar_opp (E : R -> Prop) (l : Rbar) : is_glb_Rbar E l <-> is_lub_Rbar (fun x => E (- x)) (Rbar_opp l).",
            "VernacStartTheoremProof",
            "60c931eaff01aeb50b4d288b0f5a4299a3e9a95c"
        ],
        [
            "split => [[lb glb] | [ub lub] ] ; split.",
            "VernacExtend",
            "ba86abe7713c160dab01ce533cab9e3f8284325e"
        ],
        [
            "by apply is_ub_Rbar_opp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "intros b Hb.",
            "VernacExtend",
            "ffe686d7ca5f978a94474685aa013f036ecfd53d"
        ],
        [
            "apply Rbar_opp_le ; rewrite Rbar_opp_involutive.",
            "VernacExtend",
            "5a29fdaf5bde0ab3e050620e192a50f6854966b1"
        ],
        [
            "apply glb, is_ub_Rbar_opp ; by rewrite Rbar_opp_involutive.",
            "VernacExtend",
            "74d338a5332bf0aab698408e5abad10a72aaa92d"
        ],
        [
            "by apply is_ub_Rbar_opp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "intros b Hb.",
            "VernacExtend",
            "ffe686d7ca5f978a94474685aa013f036ecfd53d"
        ],
        [
            "apply Rbar_opp_le.",
            "VernacExtend",
            "5cbcd8d55cfd99a5ec55818c01018146ad4610f6"
        ],
        [
            "by apply lub, is_ub_Rbar_opp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_glb_Rbar_opp (E : R -> Prop) (l : Rbar) : is_lub_Rbar E l <-> is_glb_Rbar (fun x => E (- x)) (Rbar_opp l).",
            "VernacStartTheoremProof",
            "7c770ff89cc39e631612f6d2c792046b756a4b0d"
        ],
        [
            "split => [[lb glb] | [ub lub] ] ; split.",
            "VernacExtend",
            "ba86abe7713c160dab01ce533cab9e3f8284325e"
        ],
        [
            "by apply is_lb_Rbar_opp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "intros b Hb.",
            "VernacExtend",
            "ffe686d7ca5f978a94474685aa013f036ecfd53d"
        ],
        [
            "apply Rbar_opp_le ; rewrite Rbar_opp_involutive.",
            "VernacExtend",
            "5a29fdaf5bde0ab3e050620e192a50f6854966b1"
        ],
        [
            "apply glb, is_lb_Rbar_opp ; by rewrite Rbar_opp_involutive.",
            "VernacExtend",
            "bc7179ebda44056c21c24ece7a24b7f66942e010"
        ],
        [
            "by apply is_lb_Rbar_opp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "intros b Hb.",
            "VernacExtend",
            "ffe686d7ca5f978a94474685aa013f036ecfd53d"
        ],
        [
            "apply Rbar_opp_le.",
            "VernacExtend",
            "5cbcd8d55cfd99a5ec55818c01018146ad4610f6"
        ],
        [
            "by apply lub, is_lb_Rbar_opp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lub_Rbar (E : R -> Prop) : {l : Rbar | is_lub_Rbar E l}.",
            "VernacStartTheoremProof",
            "171ea6caba3b6022eb85835a6cb24135aa2331d7"
        ],
        [
            "destruct (is_ub_Rbar_dec E) as [[M HM] | HM] ; first last.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "exists p_infty ; split.",
            "VernacExtend",
            "e66f40948c7de01138f71f334f04fcecd21a5233"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case => [l | | ] // Hl.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by specialize (HM l).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "specialize (HM 0).",
            "VernacExtend",
            "6c0ff7d5fda6b0ef4dd373980f715733f73c41f4"
        ],
        [
            "contradict HM => x Hx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by specialize (Hl x Hx).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rename E into F.",
            "VernacExtend",
            "240a0243dc4b915eba3a89657828bce71fcc119d"
        ],
        [
            "assert (F_b : bound F).",
            "VernacExtend",
            "296eb7b06f21eb0ed3daf19a1856c87dc9777d76"
        ],
        [
            "exists M => x Hx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply HM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "clear -F_b.",
            "VernacExtend",
            "71ef8d8fb451cfaf647667a2e5e4180ff965ac21"
        ],
        [
            "set (E (m : nat) (x : R) := x = - INR m \\/ F x).",
            "VernacExtend",
            "cffc3b86310a6fbb88140fd47b8718613ee6df6a"
        ],
        [
            "assert (E_b : forall m, bound (E m)).",
            "VernacExtend",
            "3e1837d89f127a586df2f7992b242b3f7337e275"
        ],
        [
            "intros m.",
            "VernacExtend",
            "c09fb64a4c58d7cc03a731f8399ff847939fe4f0"
        ],
        [
            "case: F_b => l Hl.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (Rmax l (- INR m)) => x ; case => [ -> | Hx].",
            "VernacExtend",
            "4a95f82aca0fc9a50f43053eca44fc9141212abe"
        ],
        [
            "by apply Rmax_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "eapply Rle_trans, Rmax_l.",
            "VernacExtend",
            "998f098aaa3dfbd25cb62849ae254a6f4d1c19d8"
        ],
        [
            "by apply Hl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "assert (E_ex : forall m, exists x : R, E m x).",
            "VernacExtend",
            "9bb03b386c345dd840e38109325909fec3f66847"
        ],
        [
            "intros m ; exists (- INR m) ; by left.",
            "VernacExtend",
            "f86585e43d8e55059b18eb1278334a23f7a0fa38"
        ],
        [
            "set (u m := proj1_sig (completeness (E m) (E_b m) (E_ex m))).",
            "VernacExtend",
            "92c0a9931e2d42f61b8579cdea87663892357198"
        ],
        [
            "destruct (LPO (fun n => u n <> - INR n)) as [ [n Hn] | Hn].",
            "VernacExtend",
            "d74b5af9c5ae6d102c4fa82f25ba32a4010b1591"
        ],
        [
            "intros n.",
            "VernacExtend",
            "9410cc86153539309ee696ae5785ea70534ece11"
        ],
        [
            "case: (Req_EM_T (u n) (- INR n)) => H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by right.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by left.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (u n).",
            "VernacExtend",
            "b2631bdf06c1bf88186750ba7576f82634cc9e51"
        ],
        [
            "move: Hn ; rewrite /u ; case: completeness => l Hl /= H.",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "apply Hl ; by right.",
            "VernacExtend",
            "64d8d29d701736d839f53bf788c3fa13821a001b"
        ],
        [
            "assert (- INR n < l).",
            "VernacExtend",
            "348ec33b1d8524cab78de30b6d95b8a462aec5d0"
        ],
        [
            "case: Hl => Hl _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Hl (-INR n)) => //=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by left.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "intros H0 ; contradict H.",
            "VernacExtend",
            "ab79b794e8b0f8cea63a6216432eb188204fe079"
        ],
        [
            "by rewrite -H0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case => [b | | ] //= Hb.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply Hl => x Hx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: Hx => Hx ; first last.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply Hb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Hx.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rnot_lt_le ; contradict H0.",
            "VernacExtend",
            "972bd064de2fc6ec743913b234b0d7bfe7e37cd6"
        ],
        [
            "apply Rle_not_lt.",
            "VernacExtend",
            "1f0f6b47a7d49626d97b2585f7610e291096035d"
        ],
        [
            "apply Hl => y Hy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: Hy => Hy.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite Hy ; apply Rle_refl.",
            "VernacExtend",
            "2d67a18abe5a05ff39bf986b33b6e7085865b7a4"
        ],
        [
            "eapply Rle_trans, Rlt_le, H0.",
            "VernacExtend",
            "0d13621cb4ac3df43449f6cac8fb8cce8e8435c3"
        ],
        [
            "by apply Hb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "contradict H.",
            "VernacExtend",
            "0da4c7d87991a3ed628c796c81ed5112e2aac241"
        ],
        [
            "apply Rle_antisym ; apply Hl.",
            "VernacExtend",
            "32e5cd785103cec3eedeec16ceef6fca77522232"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "case: Hx => [-> | Hx] //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Rle_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hb in Hx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by left.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "assert (forall n, u n = - INR n).",
            "VernacExtend",
            "3893734b8b62e0cc795103e67f6ff59f29641f5c"
        ],
        [
            "intros n.",
            "VernacExtend",
            "9410cc86153539309ee696ae5785ea70534ece11"
        ],
        [
            "specialize (Hn n).",
            "VernacExtend",
            "7ddc06a16eaa6a0def88178160fcce69af26993f"
        ],
        [
            "case: (Req_dec (u n) (- INR n)) => // H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "clear Hn.",
            "VernacExtend",
            "24a03c9d63807831b3b21f783ac6facdb799cd28"
        ],
        [
            "exists m_infty ; split => // x Hx.",
            "VernacExtend",
            "7752729af45853fb0638f0d2185df4c881d81d95"
        ],
        [
            "destruct (nfloor_ex (Rmax 0 (- x))) as [n Hn].",
            "VernacExtend",
            "b91a42ccc3c5430a662553422ae4eb4f27216e36"
        ],
        [
            "by apply Rmax_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "specialize (H (S n)).",
            "VernacExtend",
            "b73eadabbc114bd30e114d3138f8a98b7eed3712"
        ],
        [
            "contradict H.",
            "VernacExtend",
            "0da4c7d87991a3ed628c796c81ed5112e2aac241"
        ],
        [
            "apply Rgt_not_eq.",
            "VernacExtend",
            "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
        ],
        [
            "rewrite /u S_INR ; case: completeness => l Hl /=.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "eapply Rlt_le_trans with x.",
            "VernacExtend",
            "dd56fa0fd1c3f8f3f6055f019bd3b29d34fd52b0"
        ],
        [
            "apply Ropp_lt_cancel ; rewrite Ropp_involutive.",
            "VernacExtend",
            "31707c24df95152fae2e018204d307f8d0cfe927"
        ],
        [
            "eapply Rle_lt_trans, Hn.",
            "VernacExtend",
            "22cc892d74afa483b206083e0402a3a80819be09"
        ],
        [
            "by apply Rmax_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Hl.",
            "VernacExtend",
            "02df804151e4adadf6baf4a5ea9b58097df0f911"
        ],
        [
            "by right.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_glb_Rbar (E : R -> Prop) : {l : Rbar | is_glb_Rbar E l}.",
            "VernacStartTheoremProof",
            "187c4bf59f90f0fbe2067d97c4bfef5739d6d844"
        ],
        [
            "case: (ex_lub_Rbar (fun x => E (- x))) => l Hl.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (Rbar_opp l).",
            "VernacExtend",
            "b2e1d0ad8013d1119a747b3f3221ab5c396dcb72"
        ],
        [
            "apply is_lub_Rbar_opp ; by rewrite Rbar_opp_involutive.",
            "VernacExtend",
            "d8e28a5ca4062b0c8d94937260b6663a6ff2df83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Lub_Rbar (E : R -> Prop) := proj1_sig (ex_lub_Rbar E).",
            "VernacDefinition",
            "6ee2f95678dc9c5f8e7908a9f21e3044ace7cd58"
        ],
        [
            "Definition Glb_Rbar (E : R -> Prop) := proj1_sig (ex_glb_Rbar E).",
            "VernacDefinition",
            "580de579f4235330399babfc477e7e81a7fcbdad"
        ],
        [
            "Lemma is_lub_Rbar_unique (E : R -> Prop) (l : Rbar) : is_lub_Rbar E l -> Lub_Rbar E = l.",
            "VernacStartTheoremProof",
            "75eb0e7c215b0d8e92283dfc495b86f8dd84375d"
        ],
        [
            "move => Hl ; rewrite /Lub_Rbar ; case: ex_lub_Rbar => l' /= Hl'.",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "apply Rbar_le_antisym.",
            "VernacExtend",
            "f0e54e4db9d25ea0231de349a146a11c944777e8"
        ],
        [
            "by apply Hl', Hl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hl, Hl'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_glb_Rbar_unique (E : R -> Prop) (l : Rbar) : is_glb_Rbar E l -> Glb_Rbar E = l.",
            "VernacStartTheoremProof",
            "7b02e6c44f1ec3f091a01f1245220dddbb0b49cb"
        ],
        [
            "move => Hl ; rewrite /Glb_Rbar ; case: ex_glb_Rbar => l' /= Hl'.",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "apply Rbar_le_antisym.",
            "VernacExtend",
            "f0e54e4db9d25ea0231de349a146a11c944777e8"
        ],
        [
            "by apply Hl, Hl'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hl', Hl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lub_Rbar_correct (E : R -> Prop) : is_lub_Rbar E (Lub_Rbar E).",
            "VernacStartTheoremProof",
            "df70043b889533ab4b8437ccec427173cb3a6b09"
        ],
        [
            "rewrite /Lub_Rbar ; by case: ex_lub_Rbar => l /= Hl.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Glb_Rbar_correct (E : R -> Prop) : is_glb_Rbar E (Glb_Rbar E).",
            "VernacStartTheoremProof",
            "aa525bcfbf62c19ba08711b5e92ad0f115a82fd7"
        ],
        [
            "rewrite /Glb_Rbar ; by case: ex_glb_Rbar => l /= Hl.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lub_Rbar_subset (E1 E2 : R -> Prop) (l1 l2 : Rbar) : (forall x : R, E2 x -> E1 x) -> is_lub_Rbar E1 l1 -> is_lub_Rbar E2 l2 -> Rbar_le l2 l1.",
            "VernacStartTheoremProof",
            "ee58568029b54dc157a2d25860843a9bc6077a1d"
        ],
        [
            "move => H [ub1 _] [_ lub2].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply: lub2 ; by apply (is_ub_Rbar_subset E1), ub1.",
            "VernacExtend",
            "9ba8844f90da4a48c6c9ed986dcaebadc0623e9f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_glb_Rbar_subset (E1 E2 : R -> Prop) (l1 l2 : Rbar) : (forall x : R, E2 x -> E1 x) -> is_glb_Rbar E1 l1 -> is_glb_Rbar E2 l2 -> Rbar_le l1 l2.",
            "VernacStartTheoremProof",
            "fa15b051688eef6323fdec9fcb64c10be50b2db1"
        ],
        [
            "move => H [ub1 _] [_ lub2].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply: lub2 ; by apply (is_lb_Rbar_subset E1), ub1.",
            "VernacExtend",
            "9ba8844f90da4a48c6c9ed986dcaebadc0623e9f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lub_Rbar_eqset (E1 E2 : R -> Prop) (l : Rbar) : (forall x : R, E2 x <-> E1 x) -> is_lub_Rbar E1 l -> is_lub_Rbar E2 l.",
            "VernacStartTheoremProof",
            "fcb375cd5c0ac871c598f8bc675123314c9df339"
        ],
        [
            "move => H [ub1 lub1] ; split.",
            "VernacExtend",
            "22de1c5faad21de60fd48f882c8175e01347018a"
        ],
        [
            "apply (is_ub_Rbar_subset E1) ; [apply H | apply ub1].",
            "VernacExtend",
            "f80d82e6a4d2aeecc85d8f76e8809e2bea0a6362"
        ],
        [
            "move => b Hb ; apply: lub1 ; apply (is_ub_Rbar_subset E2) ; [apply H | apply Hb].",
            "VernacExtend",
            "c0586d848e3c62ea065b65c8c57614567efc242b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_glb_Rbar_eqset (E1 E2 : R -> Prop) (l : Rbar) : (forall x : R, E2 x <-> E1 x) -> is_glb_Rbar E1 l -> is_glb_Rbar E2 l.",
            "VernacStartTheoremProof",
            "f9313093b07f7e805a83616d779c494a611b0d09"
        ],
        [
            "move => H [ub1 lub1] ; split.",
            "VernacExtend",
            "22de1c5faad21de60fd48f882c8175e01347018a"
        ],
        [
            "apply (is_lb_Rbar_subset E1) ; [apply H | apply ub1].",
            "VernacExtend",
            "af8c66121e0bb8e88573432625c71c3de20e7553"
        ],
        [
            "move => b Hb ; apply: lub1 ; apply (is_lb_Rbar_subset E2) ; [apply H | apply Hb].",
            "VernacExtend",
            "2f0ffc495c77e5c5aab03e560bbb2c3073d2b75c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lub_Rbar_eqset (E1 E2 : R -> Prop) : (forall x, E1 x <-> E2 x) -> Lub_Rbar E1 = Lub_Rbar E2.",
            "VernacStartTheoremProof",
            "016bf1683983b4afff139de71f6e928b51ce6c90"
        ],
        [
            "move => H ; rewrite {2}/Lub_Rbar ; case: ex_lub_Rbar => l /= Hl.",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "apply is_lub_Rbar_unique.",
            "VernacExtend",
            "f9967989abbaa5312d90265d2ebaccd5577036d2"
        ],
        [
            "move: Hl ; by apply is_lub_Rbar_eqset.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Glb_Rbar_eqset (E1 E2 : R -> Prop) : (forall x, E1 x <-> E2 x) -> Glb_Rbar E1 = Glb_Rbar E2.",
            "VernacStartTheoremProof",
            "74b817a0327891ae1446c9fa7dc8fb70dc51c5bb"
        ],
        [
            "move => H ; rewrite {2}/Glb_Rbar ; case: (ex_glb_Rbar E2) => l2 H2 /=.",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "apply is_glb_Rbar_unique.",
            "VernacExtend",
            "0e75bae44d09b5a8bffc53b1fabfcdb7f70ba3b1"
        ],
        [
            "move: H2 ; by apply is_glb_Rbar_eqset.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Rbar_is_upper_bound (E : Rbar -> Prop) (l : Rbar) := forall x, E x -> Rbar_le x l.",
            "VernacDefinition",
            "2d2406d1a5de636c0b12a76afa9c8962fe8b9d92"
        ],
        [
            "Definition Rbar_is_lower_bound (E : Rbar -> Prop) (l : Rbar) := forall x, E x -> Rbar_le l x.",
            "VernacDefinition",
            "a23d9b35fc5419e8844e65528768cca613f4f49d"
        ],
        [
            "Lemma Rbar_ub_lb (E : Rbar -> Prop) (l : Rbar) : Rbar_is_upper_bound (fun x => E (Rbar_opp x)) (Rbar_opp l) <-> Rbar_is_lower_bound E l.",
            "VernacStartTheoremProof",
            "2d97656d0239952c00268b48c7aa34fcc8086739"
        ],
        [
            "split => Hl x Hx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rbar_opp_le.",
            "VernacExtend",
            "5cbcd8d55cfd99a5ec55818c01018146ad4610f6"
        ],
        [
            "apply Hl.",
            "VernacExtend",
            "02df804151e4adadf6baf4a5ea9b58097df0f911"
        ],
        [
            "by rewrite Rbar_opp_involutive.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rbar_opp_le.",
            "VernacExtend",
            "5cbcd8d55cfd99a5ec55818c01018146ad4610f6"
        ],
        [
            "rewrite Rbar_opp_involutive.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Hl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rbar_lb_ub (E : Rbar -> Prop) (l : Rbar) : Rbar_is_lower_bound (fun x => E (Rbar_opp x)) (Rbar_opp l) <-> Rbar_is_upper_bound E l.",
            "VernacStartTheoremProof",
            "b80a1444a67ed51338abe02e5eadeb93ce185aa5"
        ],
        [
            "split => Hl x Hx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rbar_opp_le.",
            "VernacExtend",
            "5cbcd8d55cfd99a5ec55818c01018146ad4610f6"
        ],
        [
            "apply Hl.",
            "VernacExtend",
            "02df804151e4adadf6baf4a5ea9b58097df0f911"
        ],
        [
            "by rewrite Rbar_opp_involutive.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rbar_opp_le.",
            "VernacExtend",
            "5cbcd8d55cfd99a5ec55818c01018146ad4610f6"
        ],
        [
            "rewrite Rbar_opp_involutive.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Hl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_ub_Rbar_correct (E : R -> Prop) (l : Rbar) : is_ub_Rbar E l <-> Rbar_is_upper_bound (fun x => is_finite x /\\ E x) l.",
            "VernacStartTheoremProof",
            "8dddcd0c694dfe5fe528c83cc96235e99b7f3fa4"
        ],
        [
            "split => [H x [<- Hx] | H x Hx] ; apply H => // ; by exists x.",
            "VernacExtend",
            "77f020eeb3121cb7b7247d9f5829739fd3221e06"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lb_Rbar_correct (E : R -> Prop) (l : Rbar) : is_lb_Rbar E l <-> Rbar_is_lower_bound (fun x => is_finite x /\\ E x) l.",
            "VernacStartTheoremProof",
            "31beaec0a14cd7a446b8c30d1c46ede9a50eb0b3"
        ],
        [
            "split => [H x [<- Hx] | H x Hx] ; apply H => // ; by exists x.",
            "VernacExtend",
            "77f020eeb3121cb7b7247d9f5829739fd3221e06"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rbar_ub_p_infty (E : Rbar -> Prop) : Rbar_is_upper_bound E p_infty.",
            "VernacStartTheoremProof",
            "4bb0c5ab5f8ae6badec1e116b7ca81e321beee0f"
        ],
        [
            "now intros [x| |] Hx.",
            "VernacExtend",
            "612756551fd56b8af9993084006b585552cfaf3a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rbar_lb_m_infty (E : Rbar -> Prop) : Rbar_is_lower_bound E m_infty.",
            "VernacStartTheoremProof",
            "0e82a88c20a4f787fa83e789a69c5aa4f5d7a346"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rbar_ub_Finite (E : Rbar -> Prop) (l : R) : Rbar_is_upper_bound E l -> is_upper_bound (fun (x : R) => E x) l.",
            "VernacStartTheoremProof",
            "6da69a229512a78c5a9d2808f83ade5de6dc96f0"
        ],
        [
            "intros H x Ex.",
            "VernacExtend",
            "10a7418b1050932b413659760fbb6273fa90dc4a"
        ],
        [
            "now apply (H (Finite x)).",
            "VernacExtend",
            "8be9ef7c3eddf1f0ed3ee30257e413fad40bee09"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rbar_lb_Finite (E : Rbar -> Prop) (l : R) : Rbar_is_lower_bound E (Finite l) -> is_upper_bound (fun x => E (Finite (- x))) (- l).",
            "VernacStartTheoremProof",
            "86ed6e530d5b8db14d5e2f86450bd96d8ff3deca"
        ],
        [
            "intros H x Ex.",
            "VernacExtend",
            "10a7418b1050932b413659760fbb6273fa90dc4a"
        ],
        [
            "apply Ropp_le_cancel ; rewrite Ropp_involutive ; now apply (H (Finite (-x))).",
            "VernacExtend",
            "af295215347838dbc3f3adb6caa23e368fe6157d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rbar_ub_m_infty (E : Rbar -> Prop) : Rbar_is_upper_bound E m_infty -> forall x, E x -> x = m_infty.",
            "VernacStartTheoremProof",
            "f59096535f8c8d8dab32f6824b2aafaf18888a79"
        ],
        [
            "intros H [x| |] Hx ; now specialize (H _ Hx).",
            "VernacExtend",
            "b0825b051dc2f3ba35cf2099112aee4409fbce8d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rbar_lb_p_infty (E : Rbar -> Prop) : Rbar_is_lower_bound E p_infty -> (forall x, E x -> x = p_infty).",
            "VernacStartTheoremProof",
            "a91358b93fd335eb1984fb352765374adf8f313f"
        ],
        [
            "intros H x ; case x ; auto ; clear x ; [intros x| ] ; intros Hx.",
            "VernacExtend",
            "e2bb5cf0e12908faa84b8ce921dabc3561514986"
        ],
        [
            "case (H _ Hx) ; simpl ; intuition.",
            "VernacExtend",
            "12fc316ff062d5226dfa16f0582d8a02843b9994"
        ],
        [
            "case (H _ Hx) ; simpl ; intuition.",
            "VernacExtend",
            "12fc316ff062d5226dfa16f0582d8a02843b9994"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rbar_lb_le_ub (E : Rbar -> Prop) (l1 l2 : Rbar) : (exists x, E x) -> Rbar_is_lower_bound E l1 -> Rbar_is_upper_bound E l2 -> Rbar_le l1 l2.",
            "VernacStartTheoremProof",
            "339061966daac35f86ab41bdf0621b74e5f4b401"
        ],
        [
            "intros (x, Hex) Hl Hu ; apply Rbar_le_trans with (y := x) ; [apply Hl | apply Hu] ; auto.",
            "VernacExtend",
            "e9efa9734a330477d4c26c04c03d50ab8d9387af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rbar_lb_eq_ub (E : Rbar -> Prop) (l : Rbar) : Rbar_is_lower_bound E l -> Rbar_is_upper_bound E l -> forall x, E x -> x = l.",
            "VernacStartTheoremProof",
            "b3f7bc38abd684870f571dd729c0eb9e2092569e"
        ],
        [
            "intros Hl Hu x Hx.",
            "VernacExtend",
            "3d10be965d36cf0a8343a4713cfdf0a4e442c912"
        ],
        [
            "apply Rbar_le_antisym ; [apply Hu | apply Hl] ; auto.",
            "VernacExtend",
            "9edc042c064328f776efe585ad17106894156791"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rbar_ub_dec (E : Rbar -> Prop) (Hp : ~ E p_infty) : {M : R | Rbar_is_upper_bound E M} + {(forall (M : R), ~Rbar_is_upper_bound E M)}.",
            "VernacStartTheoremProof",
            "00ed447019987792b0a5470566ff39c76bcabf41"
        ],
        [
            "destruct (is_ub_Rbar_dec E) as [ [M HM] | HM ].",
            "VernacExtend",
            "537af77430748d63b1b52040702a5a30765e0ee4"
        ],
        [
            "left ; exists M ; case => [x | | ] //= Hx.",
            "VernacExtend",
            "62379f8e9976fe799043d4e718367d132f472f0f"
        ],
        [
            "by apply HM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "right => M.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "specialize (HM M).",
            "VernacExtend",
            "538f943b88f1c337cd888ff885ba43aed02eef4b"
        ],
        [
            "contradict HM => x Hx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply HM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rbar_lb_dec (E : Rbar -> Prop) (Hm : ~ E m_infty) : {M : R | Rbar_is_lower_bound E (Finite M)} + {(forall M, ~Rbar_is_lower_bound E (Finite M))}.",
            "VernacStartTheoremProof",
            "5d9cccb1d79354b9785f0f4316a5ba3f5bf1cb6a"
        ],
        [
            "destruct (Rbar_ub_dec (fun x => E (Rbar_opp x)) Hm) as [(M, H)|H].",
            "VernacExtend",
            "1c513ce1dd382d7f94909b7ea8f88ab646b6932c"
        ],
        [
            "left ; exists (-M).",
            "VernacExtend",
            "785cd4c27978c02dff144a5ad526f622ca70151a"
        ],
        [
            "apply Rbar_ub_lb ; simpl ; rewrite (Ropp_involutive M) ; auto.",
            "VernacExtend",
            "9fa5da998885fbfb21d620f42eec4032d6e13e9f"
        ],
        [
            "right ; intro M ; generalize (H (-M)) ; clear H ; intro H ; contradict H ; apply (Rbar_ub_lb E (Finite M)) ; auto.",
            "VernacExtend",
            "489939fb98f2899bca2b4e6f6cbabec3ca1e1071"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rbar_is_ub_subset (E1 E2 : Rbar -> Prop) (l : Rbar) : (forall x, E1 x -> E2 x) -> (Rbar_is_upper_bound E2 l) -> (Rbar_is_upper_bound E1 l).",
            "VernacStartTheoremProof",
            "5dd5d55c715dcd47a73acd703528e73971d0fc80"
        ],
        [
            "intros Hs Hl x Ex ; apply Hl, Hs ; auto.",
            "VernacExtend",
            "b6e264c02e26e1d87d958a928c70b5b1ad2b2314"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rbar_is_lb_subset (E1 E2 : Rbar -> Prop) (l : Rbar) : (forall x, E1 x -> E2 x) -> (Rbar_is_lower_bound E2 l) -> (Rbar_is_lower_bound E1 l).",
            "VernacStartTheoremProof",
            "c402575ccd2123f64a3688284cf435f8eedb6abd"
        ],
        [
            "intros Hs Hl x Ex ; apply Hl, Hs ; auto.",
            "VernacExtend",
            "b6e264c02e26e1d87d958a928c70b5b1ad2b2314"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Rbar_is_lub (E : Rbar -> Prop) (l : Rbar) := Rbar_is_upper_bound E l /\\ (forall b : Rbar, Rbar_is_upper_bound E b -> Rbar_le l b).",
            "VernacDefinition",
            "5a2517a09707314315d983185d868fb602c379af"
        ],
        [
            "Definition Rbar_is_glb (E : Rbar -> Prop) (l : Rbar) := Rbar_is_lower_bound E l /\\ (forall b : Rbar, Rbar_is_lower_bound E b -> Rbar_le b l).",
            "VernacDefinition",
            "62a78cbc9edb0e9ce66c646e9c847d7a3eb35b5b"
        ],
        [
            "Lemma Rbar_lub_glb (E : Rbar -> Prop) (l : Rbar) : Rbar_is_lub (fun x => E (Rbar_opp x)) (Rbar_opp l) <-> Rbar_is_glb E l.",
            "VernacStartTheoremProof",
            "c0bf76d030bcf606930ad957e2305e449d952d9d"
        ],
        [
            "split ; [intros (ub, lub) | intros (lb, glb)] ; split.",
            "VernacExtend",
            "6cecdbc9b6184ae8b52a5cc84dcc0f25180073d6"
        ],
        [
            "apply Rbar_ub_lb ; auto.",
            "VernacExtend",
            "92b5771ee2724737101a46397ff2a3445cc5d4f2"
        ],
        [
            "intros b Hb ; generalize (lub _ (proj2 (Rbar_ub_lb _ _) Hb)) ; apply Rbar_opp_le.",
            "VernacExtend",
            "9dc0332698116638b7c8a4e3df91860c32560a52"
        ],
        [
            "apply Rbar_lb_ub ; intros x ; simpl ; repeat rewrite Rbar_opp_involutive ; apply lb.",
            "VernacExtend",
            "8d0a868dbc569ba33764d6198c06f13b391f0152"
        ],
        [
            "intros b Hb.",
            "VernacExtend",
            "ffe686d7ca5f978a94474685aa013f036ecfd53d"
        ],
        [
            "apply Rbar_opp_le ; rewrite Rbar_opp_involutive ; apply glb, Rbar_ub_lb ; rewrite Rbar_opp_involutive ; auto.",
            "VernacExtend",
            "d519411c75cefe14696fef5bbb631d80e34f826e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rbar_glb_lub (E : Rbar -> Prop) (l : Rbar) : Rbar_is_glb (fun x => E (Rbar_opp x)) (Rbar_opp l) <-> Rbar_is_lub E l.",
            "VernacStartTheoremProof",
            "e622cfcaeebd06c906c7d9267ce07bc8198a3823"
        ],
        [
            "split ; [ intros (lb, glb) | intros (ub, lub)] ; split.",
            "VernacExtend",
            "4521d57be80be150cb2c4f9195111faca7d4f20c"
        ],
        [
            "apply Rbar_lb_ub ; auto.",
            "VernacExtend",
            "2cddda1089741dd87d7caa66be875f9ed0d1f584"
        ],
        [
            "intros b Hb ; generalize (glb _ (proj2 (Rbar_lb_ub _ _) Hb)) ; apply Rbar_opp_le.",
            "VernacExtend",
            "a4109ac26fefc4b3feea02db31568a466a8b7673"
        ],
        [
            "apply Rbar_ub_lb ; intro x ; simpl ; repeat rewrite Rbar_opp_involutive ; apply ub.",
            "VernacExtend",
            "8aeeec62a2f4a62503ae6b1425ebd26a93268aab"
        ],
        [
            "intros b Hb.",
            "VernacExtend",
            "ffe686d7ca5f978a94474685aa013f036ecfd53d"
        ],
        [
            "apply Rbar_opp_le ; rewrite Rbar_opp_involutive ; apply lub, Rbar_lb_ub ; rewrite Rbar_opp_involutive ; auto.",
            "VernacExtend",
            "bbfab6101ad58284770fe5556be14803b54723ba"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lub_Rbar_correct (E : R -> Prop) (l : Rbar) : is_lub_Rbar E l <-> Rbar_is_lub (fun x => is_finite x /\\ E x) l.",
            "VernacStartTheoremProof",
            "11ee114632babc5446dd4e5afa6acc07677afa48"
        ],
        [
            "split => [[Hub Hlub]|[Hub Hlub]].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "split ; [ | move => b Hb ; apply Hlub ] ; by apply is_ub_Rbar_correct.",
            "VernacExtend",
            "7ad28f937dd230e8e55dbf3586437aaad45a82e4"
        ],
        [
            "split ; [ | move => b Hb ; apply Hlub ] ; by apply is_ub_Rbar_correct.",
            "VernacExtend",
            "7ad28f937dd230e8e55dbf3586437aaad45a82e4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_glb_Rbar_correct (E : R -> Prop) (l : Rbar) : is_glb_Rbar E l <-> Rbar_is_glb (fun x => is_finite x /\\ E x) l.",
            "VernacStartTheoremProof",
            "05514bfdee5568d4e7989b041089992d6a20f9cc"
        ],
        [
            "split => [[Hub Hlub]|[Hub Hlub]].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "split ; [ | move => b Hb ; apply Hlub ] ; by apply is_lb_Rbar_correct.",
            "VernacExtend",
            "7ad28f937dd230e8e55dbf3586437aaad45a82e4"
        ],
        [
            "split ; [ | move => b Hb ; apply Hlub ] ; by apply is_lb_Rbar_correct.",
            "VernacExtend",
            "7ad28f937dd230e8e55dbf3586437aaad45a82e4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rbar_ex_lub (E : Rbar -> Prop) : {l : Rbar | Rbar_is_lub E l}.",
            "VernacStartTheoremProof",
            "597ee3329cda69823263d23b08ac0ccfd6297674"
        ],
        [
            "destruct (EM_dec (E p_infty)) as [Hp|Hp].",
            "VernacExtend",
            "1a0f13e8b9b7880ec7c4c141544289c55a5df217"
        ],
        [
            "exists p_infty ; split.",
            "VernacExtend",
            "e66f40948c7de01138f71f334f04fcecd21a5233"
        ],
        [
            "by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "intros b Hb.",
            "VernacExtend",
            "ffe686d7ca5f978a94474685aa013f036ecfd53d"
        ],
        [
            "apply Rbar_not_lt_le.",
            "VernacExtend",
            "609b6610e848b9efc1928d197bd92cc66b06930b"
        ],
        [
            "contradict Hp => H.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply: Rbar_le_not_lt Hp.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by apply Hb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "destruct (ex_lub_Rbar E) as [l Hl].",
            "VernacExtend",
            "f1071cf0a9e3a1ecc435d68ff363659cdd804280"
        ],
        [
            "exists l ; split.",
            "VernacExtend",
            "e3a5991aa115ae208c25c29e2b0ac35898dc6c6d"
        ],
        [
            "case => [x | | ] // Hx.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Hl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "intros b Hb.",
            "VernacExtend",
            "ffe686d7ca5f978a94474685aa013f036ecfd53d"
        ],
        [
            "apply Hl => x Hx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply Hb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rbar_ex_glb (E : Rbar -> Prop) : {l : Rbar | Rbar_is_glb E l}.",
            "VernacStartTheoremProof",
            "249bc3148473aaee286af3d1cc9cf7ee7feef251"
        ],
        [
            "destruct (Rbar_ex_lub (fun x => E (Rbar_opp x))) as [l Hl].",
            "VernacExtend",
            "937f36d85e7b4a9aa5c27b65a2ef731544eab3a3"
        ],
        [
            "exists (Rbar_opp l).",
            "VernacExtend",
            "b2e1d0ad8013d1119a747b3f3221ab5c396dcb72"
        ],
        [
            "now apply Rbar_lub_glb ; rewrite Rbar_opp_involutive.",
            "VernacExtend",
            "151602295c2b1e861ff20d1192d416d9f5c1a54e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Rbar_lub (E : Rbar -> Prop) := proj1_sig (Rbar_ex_lub E).",
            "VernacDefinition",
            "ffb6d8be574087933f491e38faef307d6272ae6b"
        ],
        [
            "Definition Rbar_glb (E : Rbar -> Prop) := proj1_sig (Rbar_ex_glb E).",
            "VernacDefinition",
            "adcd83db4388aa13e49451b96ae58ebf33b32090"
        ],
        [
            "Lemma Rbar_opp_glb_lub (E : Rbar -> Prop) : Rbar_glb (fun x => E (Rbar_opp x)) = Rbar_opp (Rbar_lub E).",
            "VernacStartTheoremProof",
            "dbf662ae306d527f1b5159d293e5a8c4f38312bb"
        ],
        [
            "unfold Rbar_glb ; case (Rbar_ex_glb _) ; simpl ; intros g [Hg Hg'] ; unfold Rbar_lub ; case (Rbar_ex_lub _) ; simpl ; intros l [Hl Hl'] ; apply Rbar_le_antisym.",
            "VernacExtend",
            "71abb45a447261b74e42aad704aedb2c3ffd2706"
        ],
        [
            "apply Rbar_opp_le ; rewrite Rbar_opp_involutive ; apply Hl', Rbar_lb_ub ; rewrite Rbar_opp_involutive ; auto.",
            "VernacExtend",
            "1e083433149ba1e757820b83441fd46aeca5aadd"
        ],
        [
            "apply Hg', Rbar_lb_ub ; auto.",
            "VernacExtend",
            "5bc0b0d65b9889cd974aa9ec628a240e4ca85e0d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rbar_opp_lub_glb (E : Rbar -> Prop) : Rbar_lub (fun x => E (Rbar_opp x)) = Rbar_opp (Rbar_glb E).",
            "VernacStartTheoremProof",
            "ca6937147ecbbdedc1e5ab704b27782b22911c4f"
        ],
        [
            "unfold Rbar_glb ; case (Rbar_ex_glb _) ; simpl ; intros g (Hg, Hg') ; unfold Rbar_lub ; case (Rbar_ex_lub _) ; simpl ; intros l [Hl Hl'] ; apply Rbar_le_antisym.",
            "VernacExtend",
            "059a2257bcb70372e7fccc0b6513ea7fdff52fa3"
        ],
        [
            "apply Hl', Rbar_lb_ub ; rewrite Rbar_opp_involutive ; apply (Rbar_is_lb_subset _ E) ; auto ; intros x ; rewrite Rbar_opp_involutive ; auto.",
            "VernacExtend",
            "66d64a4f166ff637c08cbfef2fd6d03ded665243"
        ],
        [
            "apply Rbar_opp_le ; rewrite Rbar_opp_involutive ; apply Hg', Rbar_ub_lb ; rewrite Rbar_opp_involutive ; auto.",
            "VernacExtend",
            "d3126b1c1ec2b8971b6eb62d90b6884131c9aba3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rbar_is_lub_unique (E : Rbar -> Prop) (l : Rbar) : Rbar_is_lub E l -> Rbar_lub E = l.",
            "VernacStartTheoremProof",
            "8178346a3efd6815d85b47831202dda08649bdca"
        ],
        [
            "move => H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /Rbar_lub.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Rbar_ex_lub => l0 H0 /=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rbar_le_antisym.",
            "VernacExtend",
            "f0e54e4db9d25ea0231de349a146a11c944777e8"
        ],
        [
            "apply H0, H.",
            "VernacExtend",
            "bf37421deca79de45791722e8c136c611dc6f870"
        ],
        [
            "apply H, H0.",
            "VernacExtend",
            "3dbb2ff2356dfb65fdf913bf80f9579cf1f04ad3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rbar_is_glb_unique (E : Rbar -> Prop) (l : Rbar) : Rbar_is_glb E l -> Rbar_glb E = l.",
            "VernacStartTheoremProof",
            "bc492b3d95f47797450a024ed54fc6812844d9e3"
        ],
        [
            "move => H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /Rbar_glb.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Rbar_ex_glb => l0 H0 /=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rbar_le_antisym.",
            "VernacExtend",
            "f0e54e4db9d25ea0231de349a146a11c944777e8"
        ],
        [
            "apply H, H0.",
            "VernacExtend",
            "3dbb2ff2356dfb65fdf913bf80f9579cf1f04ad3"
        ],
        [
            "apply H0, H.",
            "VernacExtend",
            "bf37421deca79de45791722e8c136c611dc6f870"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rbar_glb_le_lub (E : Rbar -> Prop) : (exists x, E x) -> Rbar_le (Rbar_glb E) (Rbar_lub E).",
            "VernacStartTheoremProof",
            "ab04a84a69362a96f28a9c8a2494a4eccf80b9f2"
        ],
        [
            "case => x Hex.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rbar_le_trans with x.",
            "VernacExtend",
            "e2ec9f6dd684036e671d97b86fbad3621b3f947b"
        ],
        [
            "unfold Rbar_glb ; case (Rbar_ex_glb _) ; simpl ; intros g (Hg, _) ; apply Hg ; auto.",
            "VernacExtend",
            "e8e3f7ec6abc36c1bad5ebd9c10581800ef061b2"
        ],
        [
            "unfold Rbar_lub ; case (Rbar_ex_lub _) ; simpl ; intros l (Hl, _) ; apply Hl ; auto.",
            "VernacExtend",
            "50f00092ecea0f45af42cff65d07b3e3a7cde766"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rbar_is_lub_subset (E1 E2 : Rbar -> Prop) (l1 l2 : Rbar) : (forall x, E1 x -> E2 x) -> (Rbar_is_lub E1 l1) -> (Rbar_is_lub E2 l2) -> Rbar_le l1 l2.",
            "VernacStartTheoremProof",
            "b03abdfe5de9190caffc81c9533e788f3254702f"
        ],
        [
            "intros Hs (_,H1) (H2, _).",
            "VernacExtend",
            "0a947551f91443f997df46588b6da59bb7457ee9"
        ],
        [
            "apply H1 ; intros x Hx ; apply H2, Hs, Hx.",
            "VernacExtend",
            "0c4a71af51f489509f8f9188fbbb1c3bf2cea460"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rbar_is_glb_subset (E1 E2 : Rbar -> Prop) (l1 l2 : Rbar) : (forall x, E2 x -> E1 x) -> (Rbar_is_glb E1 l1) -> (Rbar_is_glb E2 l2) -> Rbar_le l1 l2.",
            "VernacStartTheoremProof",
            "72c7785e545cbc4b316e9bd7ad211866a59099c6"
        ],
        [
            "intros Hs (H1, _) (_, H2).",
            "VernacExtend",
            "e6e65f43264217aa76a33d3328413eb1a1019291"
        ],
        [
            "apply H2 ; intros x Hx ; apply H1, Hs, Hx.",
            "VernacExtend",
            "9f17d53ff9de195513dc6fd391ab5bcced2e9e4e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rbar_is_lub_eq (E1 E2 : Rbar -> Prop) (l1 l2 : Rbar) : (forall x, E1 x <-> E2 x) -> (Rbar_is_lub E1 l1) -> (Rbar_is_lub E2 l2) -> l1 = l2.",
            "VernacStartTheoremProof",
            "00515fb7335f5549875408447aa25a602de31351"
        ],
        [
            "intros Hs H1 H2 ; apply Rbar_le_antisym ; [apply (Rbar_is_lub_subset E1 E2) | apply (Rbar_is_lub_subset E2 E1) ] ; auto ; intros x H ; apply Hs ; auto.",
            "VernacExtend",
            "fdc058faf3ed3cdc160e108a791c2dded0d6360c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rbar_is_glb_eq (E1 E2 : Rbar -> Prop) (l1 l2 : Rbar) : (forall x, E1 x <-> E2 x) -> (Rbar_is_glb E1 l1) -> (Rbar_is_glb E2 l2) -> l1 = l2.",
            "VernacStartTheoremProof",
            "3ca49eeb31add395bf68130302ad7bfaeda60af9"
        ],
        [
            "intros Hs H1 H2 ; apply Rbar_le_antisym ; [apply (Rbar_is_glb_subset E1 E2) | apply (Rbar_is_glb_subset E2 E1) ] ; auto ; intros x H ; apply Hs ; auto.",
            "VernacExtend",
            "8ee94756332dba0875570b91b78113621017a432"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rbar_is_lub_ext (E1 E2 : Rbar -> Prop) (l : Rbar) : (forall x, E1 x <-> E2 x) -> (Rbar_is_lub E1 l) -> (Rbar_is_lub E2 l).",
            "VernacStartTheoremProof",
            "9bd6929e9fd7004c9af2212a1269ea91c999be24"
        ],
        [
            "intros Heq (H1,H2) ; split.",
            "VernacExtend",
            "879564f43eb26cd94dd1e920514e3d22c750d9dd"
        ],
        [
            "apply (Rbar_is_ub_subset _ E1) ; auto ; intros x Hx ; apply Heq ; auto.",
            "VernacExtend",
            "b360108ebde37e6a0bd78e266e49c3b6bb053e61"
        ],
        [
            "intros b Hb ; apply H2 ; apply (Rbar_is_ub_subset _ E2) ; auto ; intros x Hx ; apply Heq ; auto.",
            "VernacExtend",
            "cf5673659f8543ad8d97c14ae86da789af20916c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rbar_is_glb_ext (E1 E2 : Rbar -> Prop) (l : Rbar) : (forall x, E1 x <-> E2 x) -> (Rbar_is_glb E1 l) -> (Rbar_is_glb E2 l).",
            "VernacStartTheoremProof",
            "46002ce48706eb3e783cf7fbc3f4899f3959013c"
        ],
        [
            "intros Heq (H1, H2) ; split.",
            "VernacExtend",
            "879564f43eb26cd94dd1e920514e3d22c750d9dd"
        ],
        [
            "apply (Rbar_is_lb_subset _ E1) ; auto ; intros x Hx ; apply Heq ; auto.",
            "VernacExtend",
            "135ffd678056fa6a0eb729480dd54e2324d16afc"
        ],
        [
            "intros b Hb ; apply H2 ; apply (Rbar_is_lb_subset _ E2) ; auto ; intros x Hx ; apply Heq ; auto.",
            "VernacExtend",
            "9f08f47fa4b97d2d103bea836246f14fa9c3f9f3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rbar_lub_subset (E1 E2 : Rbar -> Prop) : (forall x, E1 x -> E2 x) -> Rbar_le (Rbar_lub E1) (Rbar_lub E2).",
            "VernacStartTheoremProof",
            "efaa739a4f65c49da36afa15febbf51b573100f3"
        ],
        [
            "intros Hs ; unfold Rbar_lub ; case (Rbar_ex_lub E1) ; intros l1 Hl1 ; case (Rbar_ex_lub E2) ; simpl ; intros l2 Hl2 ; apply (Rbar_is_lub_subset E1 E2) ; auto.",
            "VernacExtend",
            "1f9829dd492b3fbfe51a31eab7b953ae89e0b8a2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rbar_glb_subset (E1 E2 : Rbar -> Prop) : (forall x, E2 x -> E1 x) -> Rbar_le (Rbar_glb E1) (Rbar_glb E2).",
            "VernacStartTheoremProof",
            "8e7faa189dddfe9afc6c7d184d59835ac5875f70"
        ],
        [
            "intro Hs ; unfold Rbar_glb ; case (Rbar_ex_glb E1) ; intros l1 Hl1 ; case (Rbar_ex_glb E2) ; simpl ; intros l2 Hl2 ; apply (Rbar_is_glb_subset E1 E2) ; auto.",
            "VernacExtend",
            "a82e67d66aed9f05adc45ec30b0b6871ee2f8bd0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rbar_lub_rw (E1 E2 : Rbar -> Prop) : (forall x, E1 x <-> E2 x) -> Rbar_lub E1 = Rbar_lub E2.",
            "VernacStartTheoremProof",
            "7328132fe2387cc5c11b143521e3d8773ec798de"
        ],
        [
            "intro Hs ; apply Rbar_le_antisym ; apply Rbar_lub_subset ; intros x H ; apply Hs ; auto.",
            "VernacExtend",
            "1bb77acf8da9105359b1076260cce6460e0bed6f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rbar_glb_rw (E1 E2 : Rbar -> Prop) : (forall x, E1 x <-> E2 x) -> Rbar_glb E1 = Rbar_glb E2.",
            "VernacStartTheoremProof",
            "a1ff9f731a25806660f9fe08973b09bc509375ac"
        ],
        [
            "intros Hs ; apply Rbar_le_antisym ; apply Rbar_glb_subset ; intros x H ; apply Hs ; auto.",
            "VernacExtend",
            "6087d6164e8dd0c48ee6ab7c5f1fa9ddd32e3b73"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Empty (E : R -> Prop) := Lub_Rbar (fun x => x = 0 \\/ E x) = Glb_Rbar (fun x => x = 0 \\/ E x) /\\ Lub_Rbar (fun x => x = 1 \\/ E x) = Glb_Rbar (fun x => x = 1 \\/ E x).",
            "VernacDefinition",
            "505814c96e2a716609be149424c81e7f295d6477"
        ],
        [
            "Lemma Empty_correct_1 (E : R -> Prop) : Empty E -> forall x, ~ E x.",
            "VernacStartTheoremProof",
            "f7a2ded5583a7888937c551b1816c1cbcd641af3"
        ],
        [
            "case => E0 E1 x Ex.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite /Lub_Rbar /Glb_Rbar in E0 ; case : (ex_lub_Rbar (fun x : R => x = 0 \\/ E x)) E0 => /= s0 Hs0 ; case : (ex_glb_Rbar (fun x : R => x = 0 \\/ E x)) => i0 Hi0 /= E0.",
            "VernacExtend",
            "1418099f654a9d12bdfd561bac86adb846b83bfd"
        ],
        [
            "have : (x = 0) ; last move => {s0 Hs0 i0 Hi0 E0}.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply Rle_antisym.",
            "VernacExtend",
            "8e9431fb6db6f151160007e68131f4f5cb1c7968"
        ],
        [
            "apply (Rbar_le_trans x s0 0).",
            "VernacExtend",
            "128489d8067c3202c7c90fd8cf8e63eea001938c"
        ],
        [
            "apply Hs0 ; by right.",
            "VernacExtend",
            "2ec6d5a2e5a3578f2a39efd9915db0ec3d06d8d0"
        ],
        [
            "rewrite E0 ; apply Hi0 ; by left.",
            "VernacExtend",
            "e9f622b14563e08c9265cd58a6eabf7ebeee9cb0"
        ],
        [
            "apply (Rbar_le_trans 0 s0 x).",
            "VernacExtend",
            "2534aa910d64ef70a383b19b29fc803b07462b0f"
        ],
        [
            "apply Hs0 ; by left.",
            "VernacExtend",
            "2ec6d5a2e5a3578f2a39efd9915db0ec3d06d8d0"
        ],
        [
            "rewrite E0 ; apply Hi0 ; by right.",
            "VernacExtend",
            "e9f622b14563e08c9265cd58a6eabf7ebeee9cb0"
        ],
        [
            "rewrite /Lub_Rbar /Glb_Rbar in E1 ; case : (ex_lub_Rbar (fun x : R => x = 1 \\/ E x)) E1 => /= s1 Hs1 ; case : (ex_glb_Rbar (fun x : R => x = 1 \\/ E x)) => i1 Hi1 /= E1.",
            "VernacExtend",
            "1418099f654a9d12bdfd561bac86adb846b83bfd"
        ],
        [
            "have : (x = 1) ; last move => {s1 Hs1 i1 Hi1 E1}.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply Rle_antisym.",
            "VernacExtend",
            "8e9431fb6db6f151160007e68131f4f5cb1c7968"
        ],
        [
            "apply (Rbar_le_trans x s1 1).",
            "VernacExtend",
            "0ab1b3cbab23efffc9c5ae3e829eea78399feb52"
        ],
        [
            "apply Hs1 ; by right.",
            "VernacExtend",
            "77e47a96d222d875d94372738e1d5916201baa99"
        ],
        [
            "rewrite E1 ; apply Hi1 ; by left.",
            "VernacExtend",
            "25a5b0c4bb3f6df5de2b82cb8f21a1b001b3f183"
        ],
        [
            "apply (Rbar_le_trans 1 s1 x).",
            "VernacExtend",
            "428d482e7890d3fe28f52aa684fd8dfff6fe9539"
        ],
        [
            "apply Hs1 ; by left.",
            "VernacExtend",
            "77e47a96d222d875d94372738e1d5916201baa99"
        ],
        [
            "rewrite E1 ; apply Hi1 ; by right.",
            "VernacExtend",
            "25a5b0c4bb3f6df5de2b82cb8f21a1b001b3f183"
        ],
        [
            "move => -> ; apply R1_neq_R0.",
            "VernacExtend",
            "10215c1040bd278900c4f8d2ee2201b38a3074b9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Empty_correct_2 (E : R -> Prop) : (forall x, ~ E x) -> Empty E.",
            "VernacStartTheoremProof",
            "70dae97eeaafc9b2161749a03048ceeabbe9661d"
        ],
        [
            "move => H ; split ; rewrite /Glb_Rbar /Lub_Rbar ; [ case : (ex_lub_Rbar (fun x : R => x = 0 \\/ E x)) => s0 Hs0 ; case : (ex_glb_Rbar (fun x : R => x = 0 \\/ E x)) => i0 Hi0 /= | case : (ex_lub_Rbar (fun x : R => x = 1 \\/ E x)) => s1 Hs1 ; case : (ex_glb_Rbar (fun x : R => x = 1 \\/ E x)) => i1 Hi1 /=].",
            "VernacExtend",
            "1cc56bbbc87c5731497ac14ad8e734ef804d7276"
        ],
        [
            "have : (i0 = Finite 0) ; last move => -> ; apply: Rbar_le_antisym.",
            "VernacExtend",
            "a624da2b4199240a3ea232bd84ab1a69486d14ac"
        ],
        [
            "apply Hi0 ; by left.",
            "VernacExtend",
            "c0c399d4cb2234b294a609a659799770caa7ed66"
        ],
        [
            "apply Hi0 => y ; case => H0.",
            "VernacExtend",
            "4a95f82aca0fc9a50f43053eca44fc9141212abe"
        ],
        [
            "rewrite H0 ; by right.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "contradict H0 ; apply H.",
            "VernacExtend",
            "572ca7fc2e0bf2dbf79f5fbf0df858cfd58e44b9"
        ],
        [
            "apply Hs0 => y ; case => H0.",
            "VernacExtend",
            "4a95f82aca0fc9a50f43053eca44fc9141212abe"
        ],
        [
            "rewrite H0 ; by right.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "contradict H0 ; apply H.",
            "VernacExtend",
            "572ca7fc2e0bf2dbf79f5fbf0df858cfd58e44b9"
        ],
        [
            "apply Hs0 ; by left.",
            "VernacExtend",
            "2ec6d5a2e5a3578f2a39efd9915db0ec3d06d8d0"
        ],
        [
            "have : (i1 = Finite 1) ; last move => -> ; apply: Rbar_le_antisym.",
            "VernacExtend",
            "a624da2b4199240a3ea232bd84ab1a69486d14ac"
        ],
        [
            "apply Hi1 ; by left.",
            "VernacExtend",
            "aa674789c04d1803cb221f9522025c0b7f2de85d"
        ],
        [
            "apply Hi1 => y ; case => H1.",
            "VernacExtend",
            "4a95f82aca0fc9a50f43053eca44fc9141212abe"
        ],
        [
            "rewrite H1 ; by right.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "contradict H1 ; apply H.",
            "VernacExtend",
            "e1746d1e9c007aa7972d109c819d9992fb80fff4"
        ],
        [
            "apply Hs1 => y ; case => H1.",
            "VernacExtend",
            "4a95f82aca0fc9a50f43053eca44fc9141212abe"
        ],
        [
            "rewrite H1 ; by right.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "contradict H1 ; apply H.",
            "VernacExtend",
            "e1746d1e9c007aa7972d109c819d9992fb80fff4"
        ],
        [
            "apply Hs1 ; by left.",
            "VernacExtend",
            "77e47a96d222d875d94372738e1d5916201baa99"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Empty_dec (E : R -> Prop) : {~Empty E}+{Empty E}.",
            "VernacStartTheoremProof",
            "42bef3f7359e6bce53946e51046d3fd23e93cc4e"
        ],
        [
            "case: (Rbar_eq_dec (Lub_Rbar (fun x => x = 0 \\/ E x)) (Glb_Rbar (fun x => x = 0 \\/ E x))) => H0 ; [ | left].",
            "VernacExtend",
            "782cc6a1713c9f5ec99a0d7bbec00bf45bf792d9"
        ],
        [
            "case: (Rbar_eq_dec (Lub_Rbar (fun x => x = 1 \\/ E x)) (Glb_Rbar (fun x => x = 1 \\/ E x))) => H1 ; [by right | left].",
            "VernacExtend",
            "0b71d550d1734a15236329f121aae615a86c6240"
        ],
        [
            "contradict H1 ; apply H1.",
            "VernacExtend",
            "c083dbc95334f99935b55e691762e10d9f99766d"
        ],
        [
            "contradict H0 ; apply H0.",
            "VernacExtend",
            "834fcc296fd90e13b04041ddcd97617ce69d23fa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_Empty_dec (E : R -> Prop) : (Decidable.decidable (exists x, E x)) -> {(exists x, E x)} + {(forall x, ~ E x)}.",
            "VernacStartTheoremProof",
            "0065c11e522c645218ab31905932f734dfb9be4f"
        ],
        [
            "move => He ; case: (Empty_dec E) => Hx ; [left|right].",
            "VernacExtend",
            "f25f470a06e5dfb8fcdd32bcd6e8d36fadd5d7ba"
        ],
        [
            "case: He => // He.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "contradict Hx ; apply: Empty_correct_2 => x ; contradict He ; by exists x.",
            "VernacExtend",
            "14d9e94cf9736530cc2a2e6472b1e3b32f59b06c"
        ],
        [
            "by apply: Empty_correct_1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma uniqueness_dec P : (exists ! x : R, P x) -> {x : R | P x}.",
            "VernacStartTheoremProof",
            "60638581fe8d83bb5cd6bde5ee8efd7d223946e6"
        ],
        [
            "move => H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists (Lub_Rbar P).",
            "VernacExtend",
            "24c391a716f21e54dca985c4be6275ce308dff25"
        ],
        [
            "case: H => x Hx.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "replace (real (Lub_Rbar P)) with (real (Finite x)).",
            "VernacExtend",
            "c002439d18cba00f4e05b8eb5cfa511ff8faf3ce"
        ],
        [
            "by apply Hx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply f_equal, sym_eq, is_lub_Rbar_unique.",
            "VernacExtend",
            "99212807ef4875a6e229a0fb194b64873f636495"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "move => y Hy.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "right ; by apply sym_eq, Hx.",
            "VernacExtend",
            "21f761572617e8a5f4c2f2db5fe8cfbfa0f892eb"
        ],
        [
            "move => b Hb.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by apply Hb, Hx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "is_ub_Rbar_opp",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "split ; intros Hl x Hx ; apply Rbar_opp_le.",
                        "VernacExtend",
                        "2ebf6932b5be84a7e5a561389d424ef3fedea53a"
                    ]
                },
                {
                    "command": [
                        "now rewrite Rbar_opp_involutive ; apply Hl.",
                        "VernacExtend",
                        "fdc2cf285bfdfe1660ab944164423efaefd431c9"
                    ]
                },
                {
                    "command": [
                        "now apply Hl ; rewrite Ropp_involutive.",
                        "VernacExtend",
                        "a79fd73abf19bff2b3712590a09b8af1c3ad391e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lb_Rbar_opp",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "split ; intros Hl x Hx ; apply Rbar_opp_le.",
                        "VernacExtend",
                        "2ebf6932b5be84a7e5a561389d424ef3fedea53a"
                    ]
                },
                {
                    "command": [
                        "now rewrite Rbar_opp_involutive ; apply Hl.",
                        "VernacExtend",
                        "fdc2cf285bfdfe1660ab944164423efaefd431c9"
                    ]
                },
                {
                    "command": [
                        "now apply Hl ; rewrite Ropp_involutive.",
                        "VernacExtend",
                        "a79fd73abf19bff2b3712590a09b8af1c3ad391e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_ub_Rbar_dec",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "set (F (n : nat) (x : R) := x = 0 \\/ (E x /\\ x <= INR n)).",
                        "VernacExtend",
                        "abbbc264b98d41e89995503db210b897f241af35"
                    ]
                },
                {
                    "command": [
                        "assert (F_b : forall n, bound (F n)).",
                        "VernacExtend",
                        "e606fdab0caa222d5d1eb64a6c4088252b3ddec9"
                    ]
                },
                {
                    "command": [
                        "intros ; exists (INR n) => x ; case => [-> | Hx].",
                        "VernacExtend",
                        "76a7ef5b05d84d9d03ba9fdd3d74c71d7980870a"
                    ]
                },
                {
                    "command": [
                        "by apply pos_INR.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Hx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "assert (F_ex : forall n, (exists x : R, F n x)).",
                        "VernacExtend",
                        "95e4c74fee4ace8be92583c97f4452fef25917e7"
                    ]
                },
                {
                    "command": [
                        "intros ; exists 0 ; by left.",
                        "VernacExtend",
                        "8923ce2867ab7c54cfd5e71c28d1296bb6535d3b"
                    ]
                },
                {
                    "command": [
                        "set (u (n : nat) := proj1_sig (completeness (F n) (F_b n) (F_ex n))).",
                        "VernacExtend",
                        "7511d5886ed9866cda3be88ed12e6c98cfe7020e"
                    ]
                },
                {
                    "command": [
                        "destruct (LPO_ub_dec u) as [ [M HM] | HM].",
                        "VernacExtend",
                        "b76b8c6f081c52b72fa16ea253d28db6b0323d90"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "left ; exists M => x Hx.",
                        "VernacExtend",
                        "8a6df78024aa115f62777406f2002d070e3ba050"
                    ]
                },
                {
                    "command": [
                        "destruct (nfloor_ex (Rmax 0 x)) as [n Hn].",
                        "VernacExtend",
                        "ad18816f6d0bc75b1f6a1f5d5ecd0eda27a3c715"
                    ]
                },
                {
                    "command": [
                        "by apply Rmax_l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "eapply Rle_trans, (HM (S n)).",
                        "VernacExtend",
                        "48d6557d17d662840263e386f6c7396700a974e7"
                    ]
                },
                {
                    "command": [
                        "rewrite /u ; case: completeness => l Hl /=.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "apply Hl ; right ; split => //.",
                        "VernacExtend",
                        "132b28e1900564f7a48785afc04514bfccd39962"
                    ]
                },
                {
                    "command": [
                        "rewrite S_INR ; eapply Rle_trans, Rlt_le, Hn.",
                        "VernacExtend",
                        "0e65ea34a3801a259a9e27495145dd91533ac11d"
                    ]
                },
                {
                    "command": [
                        "by apply Rmax_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "right => l Hl.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: (HM (Rmax 0 l)) => n {HM}.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt.",
                        "VernacExtend",
                        "1f0f6b47a7d49626d97b2585f7610e291096035d"
                    ]
                },
                {
                    "command": [
                        "rewrite /u ; case: completeness => M HM /=.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "apply HM => x ; case => [ -> | Hx].",
                        "VernacExtend",
                        "4a95f82aca0fc9a50f43053eca44fc9141212abe"
                    ]
                },
                {
                    "command": [
                        "by apply Rmax_l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "eapply Rle_trans, Rmax_r.",
                        "VernacExtend",
                        "6c0028a6c36bd7e184a7f193f8765b6165686be2"
                    ]
                },
                {
                    "command": [
                        "apply Hl, Hx.",
                        "VernacExtend",
                        "2aabe13e542d9d479a570b55fe2c500fb279c4eb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lb_Rbar_dec",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "destruct (is_ub_Rbar_dec (fun x => E (- x))) as [ [l Hl] | Hl ].",
                        "VernacExtend",
                        "e0209defba77eee28901f0c8377c55e6dadf8aaf"
                    ]
                },
                {
                    "command": [
                        "left ; exists (Rbar_opp l).",
                        "VernacExtend",
                        "3c0a5683386edad5d5cd496807c653e33c500279"
                    ]
                },
                {
                    "command": [
                        "by apply is_ub_Rbar_opp ; rewrite (Rbar_opp_involutive l).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "right => l.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "specialize (Hl (Rbar_opp l)).",
                        "VernacExtend",
                        "8e226b51ad55c95b8a02bb3075426eda8b59f30b"
                    ]
                },
                {
                    "command": [
                        "contradict Hl.",
                        "VernacExtend",
                        "b0fd704608864a015715b0c7a14b60f0655e01f3"
                    ]
                },
                {
                    "command": [
                        "by apply (is_ub_Rbar_opp E l).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_ub_Rbar_subset",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "move => H ub1 x Hx.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply: ub1 ; by apply: H.",
                        "VernacExtend",
                        "9ba8844f90da4a48c6c9ed986dcaebadc0623e9f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lb_Rbar_subset",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "move => H ub1 x Hx.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply: ub1 ; by apply: H.",
                        "VernacExtend",
                        "9ba8844f90da4a48c6c9ed986dcaebadc0623e9f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lub_Rbar_opp",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "split => [[lb glb] | [ub lub] ] ; split.",
                        "VernacExtend",
                        "ba86abe7713c160dab01ce533cab9e3f8284325e"
                    ]
                },
                {
                    "command": [
                        "by apply is_ub_Rbar_opp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "intros b Hb.",
                        "VernacExtend",
                        "ffe686d7ca5f978a94474685aa013f036ecfd53d"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_opp_le ; rewrite Rbar_opp_involutive.",
                        "VernacExtend",
                        "5a29fdaf5bde0ab3e050620e192a50f6854966b1"
                    ]
                },
                {
                    "command": [
                        "apply glb, is_ub_Rbar_opp ; by rewrite Rbar_opp_involutive.",
                        "VernacExtend",
                        "74d338a5332bf0aab698408e5abad10a72aaa92d"
                    ]
                },
                {
                    "command": [
                        "by apply is_ub_Rbar_opp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "intros b Hb.",
                        "VernacExtend",
                        "ffe686d7ca5f978a94474685aa013f036ecfd53d"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_opp_le.",
                        "VernacExtend",
                        "5cbcd8d55cfd99a5ec55818c01018146ad4610f6"
                    ]
                },
                {
                    "command": [
                        "by apply lub, is_ub_Rbar_opp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_glb_Rbar_opp",
            "line_nb": 74,
            "steps": [
                {
                    "command": [
                        "split => [[lb glb] | [ub lub] ] ; split.",
                        "VernacExtend",
                        "ba86abe7713c160dab01ce533cab9e3f8284325e"
                    ]
                },
                {
                    "command": [
                        "by apply is_lb_Rbar_opp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "intros b Hb.",
                        "VernacExtend",
                        "ffe686d7ca5f978a94474685aa013f036ecfd53d"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_opp_le ; rewrite Rbar_opp_involutive.",
                        "VernacExtend",
                        "5a29fdaf5bde0ab3e050620e192a50f6854966b1"
                    ]
                },
                {
                    "command": [
                        "apply glb, is_lb_Rbar_opp ; by rewrite Rbar_opp_involutive.",
                        "VernacExtend",
                        "bc7179ebda44056c21c24ece7a24b7f66942e010"
                    ]
                },
                {
                    "command": [
                        "by apply is_lb_Rbar_opp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "intros b Hb.",
                        "VernacExtend",
                        "ffe686d7ca5f978a94474685aa013f036ecfd53d"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_opp_le.",
                        "VernacExtend",
                        "5cbcd8d55cfd99a5ec55818c01018146ad4610f6"
                    ]
                },
                {
                    "command": [
                        "by apply lub, is_lb_Rbar_opp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lub_Rbar",
            "line_nb": 85,
            "steps": [
                {
                    "command": [
                        "destruct (is_ub_Rbar_dec E) as [[M HM] | HM] ; first last.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "exists p_infty ; split.",
                        "VernacExtend",
                        "e66f40948c7de01138f71f334f04fcecd21a5233"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case => [l | | ] // Hl.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by specialize (HM l).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "specialize (HM 0).",
                        "VernacExtend",
                        "6c0ff7d5fda6b0ef4dd373980f715733f73c41f4"
                    ]
                },
                {
                    "command": [
                        "contradict HM => x Hx.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by specialize (Hl x Hx).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rename E into F.",
                        "VernacExtend",
                        "240a0243dc4b915eba3a89657828bce71fcc119d"
                    ]
                },
                {
                    "command": [
                        "assert (F_b : bound F).",
                        "VernacExtend",
                        "296eb7b06f21eb0ed3daf19a1856c87dc9777d76"
                    ]
                },
                {
                    "command": [
                        "exists M => x Hx.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply HM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "clear -F_b.",
                        "VernacExtend",
                        "71ef8d8fb451cfaf647667a2e5e4180ff965ac21"
                    ]
                },
                {
                    "command": [
                        "set (E (m : nat) (x : R) := x = - INR m \\/ F x).",
                        "VernacExtend",
                        "cffc3b86310a6fbb88140fd47b8718613ee6df6a"
                    ]
                },
                {
                    "command": [
                        "assert (E_b : forall m, bound (E m)).",
                        "VernacExtend",
                        "3e1837d89f127a586df2f7992b242b3f7337e275"
                    ]
                },
                {
                    "command": [
                        "intros m.",
                        "VernacExtend",
                        "c09fb64a4c58d7cc03a731f8399ff847939fe4f0"
                    ]
                },
                {
                    "command": [
                        "case: F_b => l Hl.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists (Rmax l (- INR m)) => x ; case => [ -> | Hx].",
                        "VernacExtend",
                        "4a95f82aca0fc9a50f43053eca44fc9141212abe"
                    ]
                },
                {
                    "command": [
                        "by apply Rmax_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "eapply Rle_trans, Rmax_l.",
                        "VernacExtend",
                        "998f098aaa3dfbd25cb62849ae254a6f4d1c19d8"
                    ]
                },
                {
                    "command": [
                        "by apply Hl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "assert (E_ex : forall m, exists x : R, E m x).",
                        "VernacExtend",
                        "9bb03b386c345dd840e38109325909fec3f66847"
                    ]
                },
                {
                    "command": [
                        "intros m ; exists (- INR m) ; by left.",
                        "VernacExtend",
                        "f86585e43d8e55059b18eb1278334a23f7a0fa38"
                    ]
                },
                {
                    "command": [
                        "set (u m := proj1_sig (completeness (E m) (E_b m) (E_ex m))).",
                        "VernacExtend",
                        "92c0a9931e2d42f61b8579cdea87663892357198"
                    ]
                },
                {
                    "command": [
                        "destruct (LPO (fun n => u n <> - INR n)) as [ [n Hn] | Hn].",
                        "VernacExtend",
                        "d74b5af9c5ae6d102c4fa82f25ba32a4010b1591"
                    ]
                },
                {
                    "command": [
                        "intros n.",
                        "VernacExtend",
                        "9410cc86153539309ee696ae5785ea70534ece11"
                    ]
                },
                {
                    "command": [
                        "case: (Req_EM_T (u n) (- INR n)) => H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by right.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by left.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists (u n).",
                        "VernacExtend",
                        "b2631bdf06c1bf88186750ba7576f82634cc9e51"
                    ]
                },
                {
                    "command": [
                        "move: Hn ; rewrite /u ; case: completeness => l Hl /= H.",
                        "VernacExtend",
                        "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "apply Hl ; by right.",
                        "VernacExtend",
                        "64d8d29d701736d839f53bf788c3fa13821a001b"
                    ]
                },
                {
                    "command": [
                        "assert (- INR n < l).",
                        "VernacExtend",
                        "348ec33b1d8524cab78de30b6d95b8a462aec5d0"
                    ]
                },
                {
                    "command": [
                        "case: Hl => Hl _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: (Hl (-INR n)) => //=.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by left.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "intros H0 ; contradict H.",
                        "VernacExtend",
                        "ab79b794e8b0f8cea63a6216432eb188204fe079"
                    ]
                },
                {
                    "command": [
                        "by rewrite -H0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case => [b | | ] //= Hb.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply Hl => x Hx.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: Hx => Hx ; first last.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply Hb.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite Hx.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rnot_lt_le ; contradict H0.",
                        "VernacExtend",
                        "972bd064de2fc6ec743913b234b0d7bfe7e37cd6"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt.",
                        "VernacExtend",
                        "1f0f6b47a7d49626d97b2585f7610e291096035d"
                    ]
                },
                {
                    "command": [
                        "apply Hl => y Hy.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: Hy => Hy.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite Hy ; apply Rle_refl.",
                        "VernacExtend",
                        "2d67a18abe5a05ff39bf986b33b6e7085865b7a4"
                    ]
                },
                {
                    "command": [
                        "eapply Rle_trans, Rlt_le, H0.",
                        "VernacExtend",
                        "0d13621cb4ac3df43449f6cac8fb8cce8e8435c3"
                    ]
                },
                {
                    "command": [
                        "by apply Hb.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "contradict H.",
                        "VernacExtend",
                        "0da4c7d87991a3ed628c796c81ed5112e2aac241"
                    ]
                },
                {
                    "command": [
                        "apply Rle_antisym ; apply Hl.",
                        "VernacExtend",
                        "32e5cd785103cec3eedeec16ceef6fca77522232"
                    ]
                },
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "case: Hx => [-> | Hx] //.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply Rle_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Hb in Hx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by left.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "assert (forall n, u n = - INR n).",
                        "VernacExtend",
                        "3893734b8b62e0cc795103e67f6ff59f29641f5c"
                    ]
                },
                {
                    "command": [
                        "intros n.",
                        "VernacExtend",
                        "9410cc86153539309ee696ae5785ea70534ece11"
                    ]
                },
                {
                    "command": [
                        "specialize (Hn n).",
                        "VernacExtend",
                        "7ddc06a16eaa6a0def88178160fcce69af26993f"
                    ]
                },
                {
                    "command": [
                        "case: (Req_dec (u n) (- INR n)) => // H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "clear Hn.",
                        "VernacExtend",
                        "24a03c9d63807831b3b21f783ac6facdb799cd28"
                    ]
                },
                {
                    "command": [
                        "exists m_infty ; split => // x Hx.",
                        "VernacExtend",
                        "7752729af45853fb0638f0d2185df4c881d81d95"
                    ]
                },
                {
                    "command": [
                        "destruct (nfloor_ex (Rmax 0 (- x))) as [n Hn].",
                        "VernacExtend",
                        "b91a42ccc3c5430a662553422ae4eb4f27216e36"
                    ]
                },
                {
                    "command": [
                        "by apply Rmax_l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "specialize (H (S n)).",
                        "VernacExtend",
                        "b73eadabbc114bd30e114d3138f8a98b7eed3712"
                    ]
                },
                {
                    "command": [
                        "contradict H.",
                        "VernacExtend",
                        "0da4c7d87991a3ed628c796c81ed5112e2aac241"
                    ]
                },
                {
                    "command": [
                        "apply Rgt_not_eq.",
                        "VernacExtend",
                        "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
                    ]
                },
                {
                    "command": [
                        "rewrite /u S_INR ; case: completeness => l Hl /=.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "eapply Rlt_le_trans with x.",
                        "VernacExtend",
                        "dd56fa0fd1c3f8f3f6055f019bd3b29d34fd52b0"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_lt_cancel ; rewrite Ropp_involutive.",
                        "VernacExtend",
                        "31707c24df95152fae2e018204d307f8d0cfe927"
                    ]
                },
                {
                    "command": [
                        "eapply Rle_lt_trans, Hn.",
                        "VernacExtend",
                        "22cc892d74afa483b206083e0402a3a80819be09"
                    ]
                },
                {
                    "command": [
                        "by apply Rmax_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Hl.",
                        "VernacExtend",
                        "02df804151e4adadf6baf4a5ea9b58097df0f911"
                    ]
                },
                {
                    "command": [
                        "by right.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_glb_Rbar",
            "line_nb": 166,
            "steps": [
                {
                    "command": [
                        "case: (ex_lub_Rbar (fun x => E (- x))) => l Hl.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists (Rbar_opp l).",
                        "VernacExtend",
                        "b2e1d0ad8013d1119a747b3f3221ab5c396dcb72"
                    ]
                },
                {
                    "command": [
                        "apply is_lub_Rbar_opp ; by rewrite Rbar_opp_involutive.",
                        "VernacExtend",
                        "d8e28a5ca4062b0c8d94937260b6663a6ff2df83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lub_Rbar_unique",
            "line_nb": 173,
            "steps": [
                {
                    "command": [
                        "move => Hl ; rewrite /Lub_Rbar ; case: ex_lub_Rbar => l' /= Hl'.",
                        "VernacExtend",
                        "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_le_antisym.",
                        "VernacExtend",
                        "f0e54e4db9d25ea0231de349a146a11c944777e8"
                    ]
                },
                {
                    "command": [
                        "by apply Hl', Hl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Hl, Hl'.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_glb_Rbar_unique",
            "line_nb": 179,
            "steps": [
                {
                    "command": [
                        "move => Hl ; rewrite /Glb_Rbar ; case: ex_glb_Rbar => l' /= Hl'.",
                        "VernacExtend",
                        "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_le_antisym.",
                        "VernacExtend",
                        "f0e54e4db9d25ea0231de349a146a11c944777e8"
                    ]
                },
                {
                    "command": [
                        "by apply Hl, Hl'.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Hl', Hl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lub_Rbar_correct",
            "line_nb": 185,
            "steps": [
                {
                    "command": [
                        "rewrite /Lub_Rbar ; by case: ex_lub_Rbar => l /= Hl.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Glb_Rbar_correct",
            "line_nb": 188,
            "steps": [
                {
                    "command": [
                        "rewrite /Glb_Rbar ; by case: ex_glb_Rbar => l /= Hl.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lub_Rbar_subset",
            "line_nb": 191,
            "steps": [
                {
                    "command": [
                        "move => H [ub1 _] [_ lub2].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply: lub2 ; by apply (is_ub_Rbar_subset E1), ub1.",
                        "VernacExtend",
                        "9ba8844f90da4a48c6c9ed986dcaebadc0623e9f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_glb_Rbar_subset",
            "line_nb": 195,
            "steps": [
                {
                    "command": [
                        "move => H [ub1 _] [_ lub2].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply: lub2 ; by apply (is_lb_Rbar_subset E1), ub1.",
                        "VernacExtend",
                        "9ba8844f90da4a48c6c9ed986dcaebadc0623e9f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lub_Rbar_eqset",
            "line_nb": 199,
            "steps": [
                {
                    "command": [
                        "move => H [ub1 lub1] ; split.",
                        "VernacExtend",
                        "22de1c5faad21de60fd48f882c8175e01347018a"
                    ]
                },
                {
                    "command": [
                        "apply (is_ub_Rbar_subset E1) ; [apply H | apply ub1].",
                        "VernacExtend",
                        "f80d82e6a4d2aeecc85d8f76e8809e2bea0a6362"
                    ]
                },
                {
                    "command": [
                        "move => b Hb ; apply: lub1 ; apply (is_ub_Rbar_subset E2) ; [apply H | apply Hb].",
                        "VernacExtend",
                        "c0586d848e3c62ea065b65c8c57614567efc242b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_glb_Rbar_eqset",
            "line_nb": 204,
            "steps": [
                {
                    "command": [
                        "move => H [ub1 lub1] ; split.",
                        "VernacExtend",
                        "22de1c5faad21de60fd48f882c8175e01347018a"
                    ]
                },
                {
                    "command": [
                        "apply (is_lb_Rbar_subset E1) ; [apply H | apply ub1].",
                        "VernacExtend",
                        "af8c66121e0bb8e88573432625c71c3de20e7553"
                    ]
                },
                {
                    "command": [
                        "move => b Hb ; apply: lub1 ; apply (is_lb_Rbar_subset E2) ; [apply H | apply Hb].",
                        "VernacExtend",
                        "2f0ffc495c77e5c5aab03e560bbb2c3073d2b75c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lub_Rbar_eqset",
            "line_nb": 209,
            "steps": [
                {
                    "command": [
                        "move => H ; rewrite {2}/Lub_Rbar ; case: ex_lub_Rbar => l /= Hl.",
                        "VernacExtend",
                        "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
                    ]
                },
                {
                    "command": [
                        "apply is_lub_Rbar_unique.",
                        "VernacExtend",
                        "f9967989abbaa5312d90265d2ebaccd5577036d2"
                    ]
                },
                {
                    "command": [
                        "move: Hl ; by apply is_lub_Rbar_eqset.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Glb_Rbar_eqset",
            "line_nb": 214,
            "steps": [
                {
                    "command": [
                        "move => H ; rewrite {2}/Glb_Rbar ; case: (ex_glb_Rbar E2) => l2 H2 /=.",
                        "VernacExtend",
                        "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
                    ]
                },
                {
                    "command": [
                        "apply is_glb_Rbar_unique.",
                        "VernacExtend",
                        "0e75bae44d09b5a8bffc53b1fabfcdb7f70ba3b1"
                    ]
                },
                {
                    "command": [
                        "move: H2 ; by apply is_glb_Rbar_eqset.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rbar_ub_lb",
            "line_nb": 221,
            "steps": [
                {
                    "command": [
                        "split => Hl x Hx.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_opp_le.",
                        "VernacExtend",
                        "5cbcd8d55cfd99a5ec55818c01018146ad4610f6"
                    ]
                },
                {
                    "command": [
                        "apply Hl.",
                        "VernacExtend",
                        "02df804151e4adadf6baf4a5ea9b58097df0f911"
                    ]
                },
                {
                    "command": [
                        "by rewrite Rbar_opp_involutive.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_opp_le.",
                        "VernacExtend",
                        "5cbcd8d55cfd99a5ec55818c01018146ad4610f6"
                    ]
                },
                {
                    "command": [
                        "rewrite Rbar_opp_involutive.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply Hl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rbar_lb_ub",
            "line_nb": 230,
            "steps": [
                {
                    "command": [
                        "split => Hl x Hx.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_opp_le.",
                        "VernacExtend",
                        "5cbcd8d55cfd99a5ec55818c01018146ad4610f6"
                    ]
                },
                {
                    "command": [
                        "apply Hl.",
                        "VernacExtend",
                        "02df804151e4adadf6baf4a5ea9b58097df0f911"
                    ]
                },
                {
                    "command": [
                        "by rewrite Rbar_opp_involutive.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_opp_le.",
                        "VernacExtend",
                        "5cbcd8d55cfd99a5ec55818c01018146ad4610f6"
                    ]
                },
                {
                    "command": [
                        "rewrite Rbar_opp_involutive.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply Hl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_ub_Rbar_correct",
            "line_nb": 239,
            "steps": [
                {
                    "command": [
                        "split => [H x [<- Hx] | H x Hx] ; apply H => // ; by exists x.",
                        "VernacExtend",
                        "77f020eeb3121cb7b7247d9f5829739fd3221e06"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lb_Rbar_correct",
            "line_nb": 242,
            "steps": [
                {
                    "command": [
                        "split => [H x [<- Hx] | H x Hx] ; apply H => // ; by exists x.",
                        "VernacExtend",
                        "77f020eeb3121cb7b7247d9f5829739fd3221e06"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rbar_ub_p_infty",
            "line_nb": 245,
            "steps": [
                {
                    "command": [
                        "now intros [x| |] Hx.",
                        "VernacExtend",
                        "612756551fd56b8af9993084006b585552cfaf3a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rbar_lb_m_infty",
            "line_nb": 248,
            "steps": [
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rbar_ub_Finite",
            "line_nb": 251,
            "steps": [
                {
                    "command": [
                        "intros H x Ex.",
                        "VernacExtend",
                        "10a7418b1050932b413659760fbb6273fa90dc4a"
                    ]
                },
                {
                    "command": [
                        "now apply (H (Finite x)).",
                        "VernacExtend",
                        "8be9ef7c3eddf1f0ed3ee30257e413fad40bee09"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rbar_lb_Finite",
            "line_nb": 255,
            "steps": [
                {
                    "command": [
                        "intros H x Ex.",
                        "VernacExtend",
                        "10a7418b1050932b413659760fbb6273fa90dc4a"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_le_cancel ; rewrite Ropp_involutive ; now apply (H (Finite (-x))).",
                        "VernacExtend",
                        "af295215347838dbc3f3adb6caa23e368fe6157d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rbar_ub_m_infty",
            "line_nb": 259,
            "steps": [
                {
                    "command": [
                        "intros H [x| |] Hx ; now specialize (H _ Hx).",
                        "VernacExtend",
                        "b0825b051dc2f3ba35cf2099112aee4409fbce8d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rbar_lb_p_infty",
            "line_nb": 262,
            "steps": [
                {
                    "command": [
                        "intros H x ; case x ; auto ; clear x ; [intros x| ] ; intros Hx.",
                        "VernacExtend",
                        "e2bb5cf0e12908faa84b8ce921dabc3561514986"
                    ]
                },
                {
                    "command": [
                        "case (H _ Hx) ; simpl ; intuition.",
                        "VernacExtend",
                        "12fc316ff062d5226dfa16f0582d8a02843b9994"
                    ]
                },
                {
                    "command": [
                        "case (H _ Hx) ; simpl ; intuition.",
                        "VernacExtend",
                        "12fc316ff062d5226dfa16f0582d8a02843b9994"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rbar_lb_le_ub",
            "line_nb": 267,
            "steps": [
                {
                    "command": [
                        "intros (x, Hex) Hl Hu ; apply Rbar_le_trans with (y := x) ; [apply Hl | apply Hu] ; auto.",
                        "VernacExtend",
                        "e9efa9734a330477d4c26c04c03d50ab8d9387af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rbar_lb_eq_ub",
            "line_nb": 270,
            "steps": [
                {
                    "command": [
                        "intros Hl Hu x Hx.",
                        "VernacExtend",
                        "3d10be965d36cf0a8343a4713cfdf0a4e442c912"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_le_antisym ; [apply Hu | apply Hl] ; auto.",
                        "VernacExtend",
                        "9edc042c064328f776efe585ad17106894156791"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rbar_ub_dec",
            "line_nb": 274,
            "steps": [
                {
                    "command": [
                        "destruct (is_ub_Rbar_dec E) as [ [M HM] | HM ].",
                        "VernacExtend",
                        "537af77430748d63b1b52040702a5a30765e0ee4"
                    ]
                },
                {
                    "command": [
                        "left ; exists M ; case => [x | | ] //= Hx.",
                        "VernacExtend",
                        "62379f8e9976fe799043d4e718367d132f472f0f"
                    ]
                },
                {
                    "command": [
                        "by apply HM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "right => M.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "specialize (HM M).",
                        "VernacExtend",
                        "538f943b88f1c337cd888ff885ba43aed02eef4b"
                    ]
                },
                {
                    "command": [
                        "contradict HM => x Hx.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply HM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rbar_lb_dec",
            "line_nb": 283,
            "steps": [
                {
                    "command": [
                        "destruct (Rbar_ub_dec (fun x => E (Rbar_opp x)) Hm) as [(M, H)|H].",
                        "VernacExtend",
                        "1c513ce1dd382d7f94909b7ea8f88ab646b6932c"
                    ]
                },
                {
                    "command": [
                        "left ; exists (-M).",
                        "VernacExtend",
                        "785cd4c27978c02dff144a5ad526f622ca70151a"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_ub_lb ; simpl ; rewrite (Ropp_involutive M) ; auto.",
                        "VernacExtend",
                        "9fa5da998885fbfb21d620f42eec4032d6e13e9f"
                    ]
                },
                {
                    "command": [
                        "right ; intro M ; generalize (H (-M)) ; clear H ; intro H ; contradict H ; apply (Rbar_ub_lb E (Finite M)) ; auto.",
                        "VernacExtend",
                        "489939fb98f2899bca2b4e6f6cbabec3ca1e1071"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rbar_is_ub_subset",
            "line_nb": 289,
            "steps": [
                {
                    "command": [
                        "intros Hs Hl x Ex ; apply Hl, Hs ; auto.",
                        "VernacExtend",
                        "b6e264c02e26e1d87d958a928c70b5b1ad2b2314"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rbar_is_lb_subset",
            "line_nb": 292,
            "steps": [
                {
                    "command": [
                        "intros Hs Hl x Ex ; apply Hl, Hs ; auto.",
                        "VernacExtend",
                        "b6e264c02e26e1d87d958a928c70b5b1ad2b2314"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rbar_lub_glb",
            "line_nb": 297,
            "steps": [
                {
                    "command": [
                        "split ; [intros (ub, lub) | intros (lb, glb)] ; split.",
                        "VernacExtend",
                        "6cecdbc9b6184ae8b52a5cc84dcc0f25180073d6"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_ub_lb ; auto.",
                        "VernacExtend",
                        "92b5771ee2724737101a46397ff2a3445cc5d4f2"
                    ]
                },
                {
                    "command": [
                        "intros b Hb ; generalize (lub _ (proj2 (Rbar_ub_lb _ _) Hb)) ; apply Rbar_opp_le.",
                        "VernacExtend",
                        "9dc0332698116638b7c8a4e3df91860c32560a52"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_lb_ub ; intros x ; simpl ; repeat rewrite Rbar_opp_involutive ; apply lb.",
                        "VernacExtend",
                        "8d0a868dbc569ba33764d6198c06f13b391f0152"
                    ]
                },
                {
                    "command": [
                        "intros b Hb.",
                        "VernacExtend",
                        "ffe686d7ca5f978a94474685aa013f036ecfd53d"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_opp_le ; rewrite Rbar_opp_involutive ; apply glb, Rbar_ub_lb ; rewrite Rbar_opp_involutive ; auto.",
                        "VernacExtend",
                        "d519411c75cefe14696fef5bbb631d80e34f826e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rbar_glb_lub",
            "line_nb": 305,
            "steps": [
                {
                    "command": [
                        "split ; [ intros (lb, glb) | intros (ub, lub)] ; split.",
                        "VernacExtend",
                        "4521d57be80be150cb2c4f9195111faca7d4f20c"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_lb_ub ; auto.",
                        "VernacExtend",
                        "2cddda1089741dd87d7caa66be875f9ed0d1f584"
                    ]
                },
                {
                    "command": [
                        "intros b Hb ; generalize (glb _ (proj2 (Rbar_lb_ub _ _) Hb)) ; apply Rbar_opp_le.",
                        "VernacExtend",
                        "a4109ac26fefc4b3feea02db31568a466a8b7673"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_ub_lb ; intro x ; simpl ; repeat rewrite Rbar_opp_involutive ; apply ub.",
                        "VernacExtend",
                        "8aeeec62a2f4a62503ae6b1425ebd26a93268aab"
                    ]
                },
                {
                    "command": [
                        "intros b Hb.",
                        "VernacExtend",
                        "ffe686d7ca5f978a94474685aa013f036ecfd53d"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_opp_le ; rewrite Rbar_opp_involutive ; apply lub, Rbar_lb_ub ; rewrite Rbar_opp_involutive ; auto.",
                        "VernacExtend",
                        "bbfab6101ad58284770fe5556be14803b54723ba"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lub_Rbar_correct",
            "line_nb": 313,
            "steps": [
                {
                    "command": [
                        "split => [[Hub Hlub]|[Hub Hlub]].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "split ; [ | move => b Hb ; apply Hlub ] ; by apply is_ub_Rbar_correct.",
                        "VernacExtend",
                        "7ad28f937dd230e8e55dbf3586437aaad45a82e4"
                    ]
                },
                {
                    "command": [
                        "split ; [ | move => b Hb ; apply Hlub ] ; by apply is_ub_Rbar_correct.",
                        "VernacExtend",
                        "7ad28f937dd230e8e55dbf3586437aaad45a82e4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_glb_Rbar_correct",
            "line_nb": 318,
            "steps": [
                {
                    "command": [
                        "split => [[Hub Hlub]|[Hub Hlub]].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "split ; [ | move => b Hb ; apply Hlub ] ; by apply is_lb_Rbar_correct.",
                        "VernacExtend",
                        "7ad28f937dd230e8e55dbf3586437aaad45a82e4"
                    ]
                },
                {
                    "command": [
                        "split ; [ | move => b Hb ; apply Hlub ] ; by apply is_lb_Rbar_correct.",
                        "VernacExtend",
                        "7ad28f937dd230e8e55dbf3586437aaad45a82e4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rbar_ex_lub",
            "line_nb": 323,
            "steps": [
                {
                    "command": [
                        "destruct (EM_dec (E p_infty)) as [Hp|Hp].",
                        "VernacExtend",
                        "1a0f13e8b9b7880ec7c4c141544289c55a5df217"
                    ]
                },
                {
                    "command": [
                        "exists p_infty ; split.",
                        "VernacExtend",
                        "e66f40948c7de01138f71f334f04fcecd21a5233"
                    ]
                },
                {
                    "command": [
                        "by case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "intros b Hb.",
                        "VernacExtend",
                        "ffe686d7ca5f978a94474685aa013f036ecfd53d"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_not_lt_le.",
                        "VernacExtend",
                        "609b6610e848b9efc1928d197bd92cc66b06930b"
                    ]
                },
                {
                    "command": [
                        "contradict Hp => H.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply: Rbar_le_not_lt Hp.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by apply Hb.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "destruct (ex_lub_Rbar E) as [l Hl].",
                        "VernacExtend",
                        "f1071cf0a9e3a1ecc435d68ff363659cdd804280"
                    ]
                },
                {
                    "command": [
                        "exists l ; split.",
                        "VernacExtend",
                        "e3a5991aa115ae208c25c29e2b0ac35898dc6c6d"
                    ]
                },
                {
                    "command": [
                        "case => [x | | ] // Hx.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply Hl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "intros b Hb.",
                        "VernacExtend",
                        "ffe686d7ca5f978a94474685aa013f036ecfd53d"
                    ]
                },
                {
                    "command": [
                        "apply Hl => x Hx.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply Hb.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rbar_ex_glb",
            "line_nb": 340,
            "steps": [
                {
                    "command": [
                        "destruct (Rbar_ex_lub (fun x => E (Rbar_opp x))) as [l Hl].",
                        "VernacExtend",
                        "937f36d85e7b4a9aa5c27b65a2ef731544eab3a3"
                    ]
                },
                {
                    "command": [
                        "exists (Rbar_opp l).",
                        "VernacExtend",
                        "b2e1d0ad8013d1119a747b3f3221ab5c396dcb72"
                    ]
                },
                {
                    "command": [
                        "now apply Rbar_lub_glb ; rewrite Rbar_opp_involutive.",
                        "VernacExtend",
                        "151602295c2b1e861ff20d1192d416d9f5c1a54e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rbar_opp_glb_lub",
            "line_nb": 347,
            "steps": [
                {
                    "command": [
                        "unfold Rbar_glb ; case (Rbar_ex_glb _) ; simpl ; intros g [Hg Hg'] ; unfold Rbar_lub ; case (Rbar_ex_lub _) ; simpl ; intros l [Hl Hl'] ; apply Rbar_le_antisym.",
                        "VernacExtend",
                        "71abb45a447261b74e42aad704aedb2c3ffd2706"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_opp_le ; rewrite Rbar_opp_involutive ; apply Hl', Rbar_lb_ub ; rewrite Rbar_opp_involutive ; auto.",
                        "VernacExtend",
                        "1e083433149ba1e757820b83441fd46aeca5aadd"
                    ]
                },
                {
                    "command": [
                        "apply Hg', Rbar_lb_ub ; auto.",
                        "VernacExtend",
                        "5bc0b0d65b9889cd974aa9ec628a240e4ca85e0d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rbar_opp_lub_glb",
            "line_nb": 352,
            "steps": [
                {
                    "command": [
                        "unfold Rbar_glb ; case (Rbar_ex_glb _) ; simpl ; intros g (Hg, Hg') ; unfold Rbar_lub ; case (Rbar_ex_lub _) ; simpl ; intros l [Hl Hl'] ; apply Rbar_le_antisym.",
                        "VernacExtend",
                        "059a2257bcb70372e7fccc0b6513ea7fdff52fa3"
                    ]
                },
                {
                    "command": [
                        "apply Hl', Rbar_lb_ub ; rewrite Rbar_opp_involutive ; apply (Rbar_is_lb_subset _ E) ; auto ; intros x ; rewrite Rbar_opp_involutive ; auto.",
                        "VernacExtend",
                        "66d64a4f166ff637c08cbfef2fd6d03ded665243"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_opp_le ; rewrite Rbar_opp_involutive ; apply Hg', Rbar_ub_lb ; rewrite Rbar_opp_involutive ; auto.",
                        "VernacExtend",
                        "d3126b1c1ec2b8971b6eb62d90b6884131c9aba3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rbar_is_lub_unique",
            "line_nb": 357,
            "steps": [
                {
                    "command": [
                        "move => H.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /Rbar_lub.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: Rbar_ex_lub => l0 H0 /=.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_le_antisym.",
                        "VernacExtend",
                        "f0e54e4db9d25ea0231de349a146a11c944777e8"
                    ]
                },
                {
                    "command": [
                        "apply H0, H.",
                        "VernacExtend",
                        "bf37421deca79de45791722e8c136c611dc6f870"
                    ]
                },
                {
                    "command": [
                        "apply H, H0.",
                        "VernacExtend",
                        "3dbb2ff2356dfb65fdf913bf80f9579cf1f04ad3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rbar_is_glb_unique",
            "line_nb": 365,
            "steps": [
                {
                    "command": [
                        "move => H.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /Rbar_glb.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: Rbar_ex_glb => l0 H0 /=.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_le_antisym.",
                        "VernacExtend",
                        "f0e54e4db9d25ea0231de349a146a11c944777e8"
                    ]
                },
                {
                    "command": [
                        "apply H, H0.",
                        "VernacExtend",
                        "3dbb2ff2356dfb65fdf913bf80f9579cf1f04ad3"
                    ]
                },
                {
                    "command": [
                        "apply H0, H.",
                        "VernacExtend",
                        "bf37421deca79de45791722e8c136c611dc6f870"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rbar_glb_le_lub",
            "line_nb": 373,
            "steps": [
                {
                    "command": [
                        "case => x Hex.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_le_trans with x.",
                        "VernacExtend",
                        "e2ec9f6dd684036e671d97b86fbad3621b3f947b"
                    ]
                },
                {
                    "command": [
                        "unfold Rbar_glb ; case (Rbar_ex_glb _) ; simpl ; intros g (Hg, _) ; apply Hg ; auto.",
                        "VernacExtend",
                        "e8e3f7ec6abc36c1bad5ebd9c10581800ef061b2"
                    ]
                },
                {
                    "command": [
                        "unfold Rbar_lub ; case (Rbar_ex_lub _) ; simpl ; intros l (Hl, _) ; apply Hl ; auto.",
                        "VernacExtend",
                        "50f00092ecea0f45af42cff65d07b3e3a7cde766"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rbar_is_lub_subset",
            "line_nb": 379,
            "steps": [
                {
                    "command": [
                        "intros Hs (_,H1) (H2, _).",
                        "VernacExtend",
                        "0a947551f91443f997df46588b6da59bb7457ee9"
                    ]
                },
                {
                    "command": [
                        "apply H1 ; intros x Hx ; apply H2, Hs, Hx.",
                        "VernacExtend",
                        "0c4a71af51f489509f8f9188fbbb1c3bf2cea460"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rbar_is_glb_subset",
            "line_nb": 383,
            "steps": [
                {
                    "command": [
                        "intros Hs (H1, _) (_, H2).",
                        "VernacExtend",
                        "e6e65f43264217aa76a33d3328413eb1a1019291"
                    ]
                },
                {
                    "command": [
                        "apply H2 ; intros x Hx ; apply H1, Hs, Hx.",
                        "VernacExtend",
                        "9f17d53ff9de195513dc6fd391ab5bcced2e9e4e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rbar_is_lub_eq",
            "line_nb": 387,
            "steps": [
                {
                    "command": [
                        "intros Hs H1 H2 ; apply Rbar_le_antisym ; [apply (Rbar_is_lub_subset E1 E2) | apply (Rbar_is_lub_subset E2 E1) ] ; auto ; intros x H ; apply Hs ; auto.",
                        "VernacExtend",
                        "fdc058faf3ed3cdc160e108a791c2dded0d6360c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rbar_is_glb_eq",
            "line_nb": 390,
            "steps": [
                {
                    "command": [
                        "intros Hs H1 H2 ; apply Rbar_le_antisym ; [apply (Rbar_is_glb_subset E1 E2) | apply (Rbar_is_glb_subset E2 E1) ] ; auto ; intros x H ; apply Hs ; auto.",
                        "VernacExtend",
                        "8ee94756332dba0875570b91b78113621017a432"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rbar_is_lub_ext",
            "line_nb": 393,
            "steps": [
                {
                    "command": [
                        "intros Heq (H1,H2) ; split.",
                        "VernacExtend",
                        "879564f43eb26cd94dd1e920514e3d22c750d9dd"
                    ]
                },
                {
                    "command": [
                        "apply (Rbar_is_ub_subset _ E1) ; auto ; intros x Hx ; apply Heq ; auto.",
                        "VernacExtend",
                        "b360108ebde37e6a0bd78e266e49c3b6bb053e61"
                    ]
                },
                {
                    "command": [
                        "intros b Hb ; apply H2 ; apply (Rbar_is_ub_subset _ E2) ; auto ; intros x Hx ; apply Heq ; auto.",
                        "VernacExtend",
                        "cf5673659f8543ad8d97c14ae86da789af20916c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rbar_is_glb_ext",
            "line_nb": 398,
            "steps": [
                {
                    "command": [
                        "intros Heq (H1, H2) ; split.",
                        "VernacExtend",
                        "879564f43eb26cd94dd1e920514e3d22c750d9dd"
                    ]
                },
                {
                    "command": [
                        "apply (Rbar_is_lb_subset _ E1) ; auto ; intros x Hx ; apply Heq ; auto.",
                        "VernacExtend",
                        "135ffd678056fa6a0eb729480dd54e2324d16afc"
                    ]
                },
                {
                    "command": [
                        "intros b Hb ; apply H2 ; apply (Rbar_is_lb_subset _ E2) ; auto ; intros x Hx ; apply Heq ; auto.",
                        "VernacExtend",
                        "9f08f47fa4b97d2d103bea836246f14fa9c3f9f3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rbar_lub_subset",
            "line_nb": 403,
            "steps": [
                {
                    "command": [
                        "intros Hs ; unfold Rbar_lub ; case (Rbar_ex_lub E1) ; intros l1 Hl1 ; case (Rbar_ex_lub E2) ; simpl ; intros l2 Hl2 ; apply (Rbar_is_lub_subset E1 E2) ; auto.",
                        "VernacExtend",
                        "1f9829dd492b3fbfe51a31eab7b953ae89e0b8a2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rbar_glb_subset",
            "line_nb": 406,
            "steps": [
                {
                    "command": [
                        "intro Hs ; unfold Rbar_glb ; case (Rbar_ex_glb E1) ; intros l1 Hl1 ; case (Rbar_ex_glb E2) ; simpl ; intros l2 Hl2 ; apply (Rbar_is_glb_subset E1 E2) ; auto.",
                        "VernacExtend",
                        "a82e67d66aed9f05adc45ec30b0b6871ee2f8bd0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rbar_lub_rw",
            "line_nb": 409,
            "steps": [
                {
                    "command": [
                        "intro Hs ; apply Rbar_le_antisym ; apply Rbar_lub_subset ; intros x H ; apply Hs ; auto.",
                        "VernacExtend",
                        "1bb77acf8da9105359b1076260cce6460e0bed6f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rbar_glb_rw",
            "line_nb": 412,
            "steps": [
                {
                    "command": [
                        "intros Hs ; apply Rbar_le_antisym ; apply Rbar_glb_subset ; intros x H ; apply Hs ; auto.",
                        "VernacExtend",
                        "6087d6164e8dd0c48ee6ab7c5f1fa9ddd32e3b73"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Empty_correct_1",
            "line_nb": 416,
            "steps": [
                {
                    "command": [
                        "case => E0 E1 x Ex.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite /Lub_Rbar /Glb_Rbar in E0 ; case : (ex_lub_Rbar (fun x : R => x = 0 \\/ E x)) E0 => /= s0 Hs0 ; case : (ex_glb_Rbar (fun x : R => x = 0 \\/ E x)) => i0 Hi0 /= E0.",
                        "VernacExtend",
                        "1418099f654a9d12bdfd561bac86adb846b83bfd"
                    ]
                },
                {
                    "command": [
                        "have : (x = 0) ; last move => {s0 Hs0 i0 Hi0 E0}.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply Rle_antisym.",
                        "VernacExtend",
                        "8e9431fb6db6f151160007e68131f4f5cb1c7968"
                    ]
                },
                {
                    "command": [
                        "apply (Rbar_le_trans x s0 0).",
                        "VernacExtend",
                        "128489d8067c3202c7c90fd8cf8e63eea001938c"
                    ]
                },
                {
                    "command": [
                        "apply Hs0 ; by right.",
                        "VernacExtend",
                        "2ec6d5a2e5a3578f2a39efd9915db0ec3d06d8d0"
                    ]
                },
                {
                    "command": [
                        "rewrite E0 ; apply Hi0 ; by left.",
                        "VernacExtend",
                        "e9f622b14563e08c9265cd58a6eabf7ebeee9cb0"
                    ]
                },
                {
                    "command": [
                        "apply (Rbar_le_trans 0 s0 x).",
                        "VernacExtend",
                        "2534aa910d64ef70a383b19b29fc803b07462b0f"
                    ]
                },
                {
                    "command": [
                        "apply Hs0 ; by left.",
                        "VernacExtend",
                        "2ec6d5a2e5a3578f2a39efd9915db0ec3d06d8d0"
                    ]
                },
                {
                    "command": [
                        "rewrite E0 ; apply Hi0 ; by right.",
                        "VernacExtend",
                        "e9f622b14563e08c9265cd58a6eabf7ebeee9cb0"
                    ]
                },
                {
                    "command": [
                        "rewrite /Lub_Rbar /Glb_Rbar in E1 ; case : (ex_lub_Rbar (fun x : R => x = 1 \\/ E x)) E1 => /= s1 Hs1 ; case : (ex_glb_Rbar (fun x : R => x = 1 \\/ E x)) => i1 Hi1 /= E1.",
                        "VernacExtend",
                        "1418099f654a9d12bdfd561bac86adb846b83bfd"
                    ]
                },
                {
                    "command": [
                        "have : (x = 1) ; last move => {s1 Hs1 i1 Hi1 E1}.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply Rle_antisym.",
                        "VernacExtend",
                        "8e9431fb6db6f151160007e68131f4f5cb1c7968"
                    ]
                },
                {
                    "command": [
                        "apply (Rbar_le_trans x s1 1).",
                        "VernacExtend",
                        "0ab1b3cbab23efffc9c5ae3e829eea78399feb52"
                    ]
                },
                {
                    "command": [
                        "apply Hs1 ; by right.",
                        "VernacExtend",
                        "77e47a96d222d875d94372738e1d5916201baa99"
                    ]
                },
                {
                    "command": [
                        "rewrite E1 ; apply Hi1 ; by left.",
                        "VernacExtend",
                        "25a5b0c4bb3f6df5de2b82cb8f21a1b001b3f183"
                    ]
                },
                {
                    "command": [
                        "apply (Rbar_le_trans 1 s1 x).",
                        "VernacExtend",
                        "428d482e7890d3fe28f52aa684fd8dfff6fe9539"
                    ]
                },
                {
                    "command": [
                        "apply Hs1 ; by left.",
                        "VernacExtend",
                        "77e47a96d222d875d94372738e1d5916201baa99"
                    ]
                },
                {
                    "command": [
                        "rewrite E1 ; apply Hi1 ; by right.",
                        "VernacExtend",
                        "25a5b0c4bb3f6df5de2b82cb8f21a1b001b3f183"
                    ]
                },
                {
                    "command": [
                        "move => -> ; apply R1_neq_R0.",
                        "VernacExtend",
                        "10215c1040bd278900c4f8d2ee2201b38a3074b9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Empty_dec",
            "line_nb": 459,
            "steps": [
                {
                    "command": [
                        "case: (Rbar_eq_dec (Lub_Rbar (fun x => x = 0 \\/ E x)) (Glb_Rbar (fun x => x = 0 \\/ E x))) => H0 ; [ | left].",
                        "VernacExtend",
                        "782cc6a1713c9f5ec99a0d7bbec00bf45bf792d9"
                    ]
                },
                {
                    "command": [
                        "case: (Rbar_eq_dec (Lub_Rbar (fun x => x = 1 \\/ E x)) (Glb_Rbar (fun x => x = 1 \\/ E x))) => H1 ; [by right | left].",
                        "VernacExtend",
                        "0b71d550d1734a15236329f121aae615a86c6240"
                    ]
                },
                {
                    "command": [
                        "contradict H1 ; apply H1.",
                        "VernacExtend",
                        "c083dbc95334f99935b55e691762e10d9f99766d"
                    ]
                },
                {
                    "command": [
                        "contradict H0 ; apply H0.",
                        "VernacExtend",
                        "834fcc296fd90e13b04041ddcd97617ce69d23fa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_Empty_dec",
            "line_nb": 465,
            "steps": [
                {
                    "command": [
                        "move => He ; case: (Empty_dec E) => Hx ; [left|right].",
                        "VernacExtend",
                        "f25f470a06e5dfb8fcdd32bcd6e8d36fadd5d7ba"
                    ]
                },
                {
                    "command": [
                        "case: He => // He.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "contradict Hx ; apply: Empty_correct_2 => x ; contradict He ; by exists x.",
                        "VernacExtend",
                        "14d9e94cf9736530cc2a2e6472b1e3b32f59b06c"
                    ]
                },
                {
                    "command": [
                        "by apply: Empty_correct_1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "uniqueness_dec",
            "line_nb": 471,
            "steps": [
                {
                    "command": [
                        "move => H.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists (Lub_Rbar P).",
                        "VernacExtend",
                        "24c391a716f21e54dca985c4be6275ce308dff25"
                    ]
                },
                {
                    "command": [
                        "case: H => x Hx.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "replace (real (Lub_Rbar P)) with (real (Finite x)).",
                        "VernacExtend",
                        "c002439d18cba00f4e05b8eb5cfa511ff8faf3ce"
                    ]
                },
                {
                    "command": [
                        "by apply Hx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply f_equal, sym_eq, is_lub_Rbar_unique.",
                        "VernacExtend",
                        "99212807ef4875a6e229a0fb194b64873f636495"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "move => y Hy.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "right ; by apply sym_eq, Hx.",
                        "VernacExtend",
                        "21f761572617e8a5f4c2f2db5fe8cfbfa0f892eb"
                    ]
                },
                {
                    "command": [
                        "move => b Hb.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by apply Hb, Hx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}