{
    "filename": "theories/Derive.v",
    "coq_project": "coquelicot",
    "vernac_cmds": [
        [
            "Require Import Reals Psatz.",
            "VernacRequire",
            "aa71e9955fdefb9d3b0e58d51406978b644e60c0"
        ],
        [
            "Require Import mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "85e251063dc2b5a9653f7bb76dcd176ed36b42a9"
        ],
        [
            "Require Import Rcomplements Rbar Lim_seq Iter.",
            "VernacRequire",
            "949c30f8433dfea536053fa0de751eec2e5b47bc"
        ],
        [
            "Require Import Hierarchy Continuity Equiv.",
            "VernacRequire",
            "82949c985ff63c5c051faf413d47b4c3c55a135a"
        ],
        [
            "Open Scope R_scope.",
            "VernacOpenCloseScope",
            "e9e2b017da79049aff27c5418fe22258c29a75e7"
        ],
        [
            "Section LinearFct.",
            "VernacBeginSection",
            "77dcc88a1566e16ab700f8ff4ef99ce1b4c2b95d"
        ],
        [
            "Context {K : AbsRing} {U V : NormedModule K}.",
            "VernacContext",
            "4a503217da2381577a412383dd086317381da049"
        ],
        [
            "Record is_linear (l : U -> V) := { linear_plus : forall (x y : U), l (plus x y) = plus (l x) (l y) ; linear_scal : forall (k : K) (x : U), l (scal k x) = scal k (l x) ; linear_norm : exists M : R, 0 < M /\\ (forall x : U, norm (l x) <= M * norm x) }.",
            "VernacInductive",
            "ee0996683b04d5a037a75bc368d6305482523766"
        ],
        [
            "Lemma linear_zero (l : U -> V) : is_linear l -> l zero = zero.",
            "VernacStartTheoremProof",
            "d5c68db95f333685ded7676aa356a7a69437285a"
        ],
        [
            "intros Hl.",
            "VernacExtend",
            "5c4705396c649f586841a9235569b2230fedbd7f"
        ],
        [
            "rewrite -(scal_zero_l zero).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite linear_scal.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact (scal_zero_l (l zero)).",
            "VernacExtend",
            "06586df6104f3c629352780158c82f77c8b2193e"
        ],
        [
            "exact Hl.",
            "VernacExtend",
            "726a6911ca781f5fae08f27dbd5c9838368eca79"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma linear_opp (l : U -> V) (x : U) : is_linear l -> l (opp x) = opp (l x).",
            "VernacStartTheoremProof",
            "ba14ef51383bd568ea01e1da3494e2de4a0b8c33"
        ],
        [
            "intros Hl.",
            "VernacExtend",
            "5c4705396c649f586841a9235569b2230fedbd7f"
        ],
        [
            "apply plus_reg_r with (l x).",
            "VernacExtend",
            "8a87474abb177040311ad9da962d54e99d7f1fd2"
        ],
        [
            "rewrite <- linear_plus, !plus_opp_l.",
            "VernacExtend",
            "64418fd2f24ba2e1aebd37421f4bd56a64f4954f"
        ],
        [
            "by apply linear_zero.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exact Hl.",
            "VernacExtend",
            "726a6911ca781f5fae08f27dbd5c9838368eca79"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma linear_cont (l : U -> V) (x : U) : is_linear l -> continuous l x.",
            "VernacStartTheoremProof",
            "927c65fb4f1b4f92e25c59b2e518999c78de9bef"
        ],
        [
            "intros Hl.",
            "VernacExtend",
            "5c4705396c649f586841a9235569b2230fedbd7f"
        ],
        [
            "apply filterlim_locally_ball_norm => eps.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply locally_le_locally_norm.",
            "VernacExtend",
            "9374212b9200fda3b7eb6a1448261b97e8a7edc6"
        ],
        [
            "case: (linear_norm _ Hl) => M Hn.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "assert (0 < eps / M).",
            "VernacExtend",
            "25adbf6c9ffdd2cfa334d832bb5a2ffe57bd26a9"
        ],
        [
            "apply Rdiv_lt_0_compat.",
            "VernacExtend",
            "283136f6e52505e4579f1f286529bc7e0bbfd6d7"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "apply Hn.",
            "VernacExtend",
            "c5adcc6ecec47fdf9466a9526d44d536ffc16251"
        ],
        [
            "exists (mkposreal _ H) => y Hy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /ball_norm /minus -linear_opp // -linear_plus //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "eapply Rle_lt_trans.",
            "VernacExtend",
            "51df35c21ed37a72940fad0733f4416a5ba5669c"
        ],
        [
            "by apply Hn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "evar_last.",
            "VernacExtend",
            "66189d18eff3abe5c0f87ca72027637c063094b4"
        ],
        [
            "apply Rmult_lt_compat_l with (2 := Hy).",
            "VernacExtend",
            "b4fe3383b42d33a0bea52754dadf403e438a9642"
        ],
        [
            "apply Hn.",
            "VernacExtend",
            "c5adcc6ecec47fdf9466a9526d44d536ffc16251"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "apply Rgt_not_eq, Hn.",
            "VernacExtend",
            "66cda3b85aff60d0e9045a1ef419a0b900d07a0d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_linear_ext (l1 l2 : U -> V) : (forall x, l1 x = l2 x) -> is_linear l1 -> is_linear l2.",
            "VernacStartTheoremProof",
            "9fe47be3bafde3e8e2e541c44c810c7c2a23bbfa"
        ],
        [
            "intros Hl Hl1.",
            "VernacExtend",
            "935dbef84836ae3988446b1e75f63a057a9da03b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros ; rewrite -!Hl ; apply Hl1.",
            "VernacExtend",
            "e9bfbd25ba3413c6966bbcc3d5653725c5f67888"
        ],
        [
            "intros ; rewrite -!Hl ; apply Hl1.",
            "VernacExtend",
            "e9bfbd25ba3413c6966bbcc3d5653725c5f67888"
        ],
        [
            "case: Hl1 => _ _ [M Hl1].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists M ; split.",
            "VernacExtend",
            "a7920270b1aa7967f9b48b07c0a332ee274d5144"
        ],
        [
            "by apply Hl1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "intros ; rewrite -!Hl ; apply Hl1.",
            "VernacExtend",
            "e9bfbd25ba3413c6966bbcc3d5653725c5f67888"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_linear_zero : is_linear (fun _ => zero).",
            "VernacStartTheoremProof",
            "8e15e955c0983e72c88c38cd08c7370cd2dbc26a"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move => _ _ ; by rewrite plus_zero_l.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move => k _ ; by rewrite scal_zero_r.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists 1 ; split.",
            "VernacExtend",
            "d9b9dd4d6ddae59cf375913fb1366ca7eff03748"
        ],
        [
            "exact Rlt_0_1.",
            "VernacExtend",
            "8bcad5468a1cd57cf91a54b9c96750052bda60a0"
        ],
        [
            "move => x ; rewrite Rmult_1_l norm_zero.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "apply norm_ge_0.",
            "VernacExtend",
            "42acb6605dbb074d8f6aa3d2b2181e0abfe4687b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End LinearFct.",
            "VernacEndSegment",
            "12bdc4bdc3ef9fdc31790a22984829cbc4d5dc66"
        ],
        [
            "Lemma is_linear_comp {K : AbsRing} {U V W : NormedModule K} (l1 : U -> V) (l2 : V -> W) : is_linear l1 -> is_linear l2 -> is_linear (fun x => l2 (l1 x)).",
            "VernacStartTheoremProof",
            "bf90d51c4b7ab31cedab9cc30881c5270cc0fdc0"
        ],
        [
            "intros Hl1 Hl2.",
            "VernacExtend",
            "45944518732d083e8562af6ba270540090e32bef"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move => x y.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite !linear_plus.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move => k x.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite !linear_scal.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (linear_norm _ Hl1) as [M1 Hn1].",
            "VernacExtend",
            "1254fb89744f9f269923437379d3b852e78802d7"
        ],
        [
            "destruct (linear_norm _ Hl2) as [M2 Hn2].",
            "VernacExtend",
            "4bf2250390597918a0ab47484fcfd9f7f5ce238a"
        ],
        [
            "exists (M2 * M1) ; split.",
            "VernacExtend",
            "06e0225c759c1fef183b63705e80ba304a536eaf"
        ],
        [
            "now apply Rmult_lt_0_compat.",
            "VernacExtend",
            "0b58a12fcb8d63fafd34b13cb8f87300d1816fd6"
        ],
        [
            "move => x.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "eapply Rle_trans.",
            "VernacExtend",
            "ec6f33953112c5bac5bfe07c5c0b34597dc6eaba"
        ],
        [
            "by apply Hn2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Rmult_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmult_le_compat_l.",
            "VernacExtend",
            "509839294acd7016ba82d594bfdb05afe131eed3"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "apply Hn1.",
            "VernacExtend",
            "59328fc68483c71c8a97114b3142116bf49bf769"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Op_LinearFct.",
            "VernacBeginSection",
            "437f65eec899b7ec13764e070876d52ce7621c91"
        ],
        [
            "Context {K : AbsRing} {V : NormedModule K}.",
            "VernacContext",
            "3b61d1aae35ebd0170cfa463dc9750aa874e5a6f"
        ],
        [
            "Lemma is_linear_id : is_linear (fun (x : V) => x).",
            "VernacStartTheoremProof",
            "a3728262b4ee3a43ba9f0a38fdb742e9a0cce3b7"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists 1 ; split.",
            "VernacExtend",
            "d9b9dd4d6ddae59cf375913fb1366ca7eff03748"
        ],
        [
            "exact Rlt_0_1.",
            "VernacExtend",
            "8bcad5468a1cd57cf91a54b9c96750052bda60a0"
        ],
        [
            "move => x ; rewrite Rmult_1_l.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by apply Rle_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_linear_opp : is_linear (@opp V).",
            "VernacStartTheoremProof",
            "83ef4ac90d49d07d56afdb38515ced7e5e215586"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move => x y.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "now apply opp_plus.",
            "VernacExtend",
            "f0fe3f224dccfb72943fb11033d27f7da9ee8051"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move => k x.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "apply: scal_opp_r.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists 1 ; split.",
            "VernacExtend",
            "d9b9dd4d6ddae59cf375913fb1366ca7eff03748"
        ],
        [
            "exact Rlt_0_1.",
            "VernacExtend",
            "8bcad5468a1cd57cf91a54b9c96750052bda60a0"
        ],
        [
            "move => x ; rewrite norm_opp Rmult_1_l.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by apply Rle_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_linear_plus : is_linear (fun x : V * V => plus (fst x) (snd x)).",
            "VernacStartTheoremProof",
            "caf6b0e204489cd8748421793647d9a902057479"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move => x y.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite -!plus_assoc ; apply f_equal.",
            "VernacExtend",
            "1775b3adc7dd915cdc7d26d03365d16d21a7694e"
        ],
        [
            "rewrite plus_comm -!plus_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply f_equal, @plus_comm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move => k x.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "now rewrite scal_distr_l.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists 2 ; split.",
            "VernacExtend",
            "48bd120e2ff397d9fd02f132ee2555a6d1a5e68b"
        ],
        [
            "exact Rlt_0_2.",
            "VernacExtend",
            "b28a44a4ff92bff06dfdd851bad8224b270c7e57"
        ],
        [
            "move => x /= ; eapply Rle_trans.",
            "VernacExtend",
            "a086e75c62bda3418e9b224e02fabe5b59003c32"
        ],
        [
            "by apply @norm_triangle.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Rmult_plus_distr_r Rmult_1_l ; apply Rplus_le_compat.",
            "VernacExtend",
            "b38224d3f6e39406a8531c449af1e73b1e512cca"
        ],
        [
            "apply Rle_trans with (2 := proj1 (sqrt_plus_sqr _ _)).",
            "VernacExtend",
            "85c0133dcff38a63411095b6303f203de285db7c"
        ],
        [
            "rewrite -> Rabs_pos_eq by apply norm_ge_0.",
            "VernacExtend",
            "e84b80bf597463d4b092d448c2136b92ecb34241"
        ],
        [
            "by apply Rmax_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rle_trans with (2 := proj1 (sqrt_plus_sqr _ _)).",
            "VernacExtend",
            "85c0133dcff38a63411095b6303f203de285db7c"
        ],
        [
            "rewrite -> (Rabs_pos_eq (norm (snd x))) by apply norm_ge_0.",
            "VernacExtend",
            "6a0633e39edc2fb62ee3bb609afedd1a8c7fb648"
        ],
        [
            "by apply Rmax_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_linear_scal_l (x : V) : is_linear (fun k : K => scal k x).",
            "VernacStartTheoremProof",
            "52ae034912cccf061bd392ba466eca2fc1566cde"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move => u v ; by apply @scal_distr_r.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move => u v /= ; apply sym_eq, @scal_assoc.",
            "VernacExtend",
            "ac9486cca30d02d7cfadaad912fdc974b2020677"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists (norm x + 1) ; split.",
            "VernacExtend",
            "0e775ed5d5bd52199252a84dcd81579b5ca1110a"
        ],
        [
            "apply Rplus_le_lt_0_compat.",
            "VernacExtend",
            "f52234f44384644fc6f21adef182d5c4067417f5"
        ],
        [
            "apply norm_ge_0.",
            "VernacExtend",
            "42acb6605dbb074d8f6aa3d2b2181e0abfe4687b"
        ],
        [
            "exact Rlt_0_1.",
            "VernacExtend",
            "8bcad5468a1cd57cf91a54b9c96750052bda60a0"
        ],
        [
            "move => k /=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite Rmult_plus_distr_r Rmult_1_l -(Rplus_0_r (norm (scal k x))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_le_compat.",
            "VernacExtend",
            "7a69898b466991bee51047e3a2fc51c3b80fbd93"
        ],
        [
            "now rewrite Rmult_comm ; apply norm_scal.",
            "VernacExtend",
            "f7e3c06727dda055b307391350e0e053b8d757b5"
        ],
        [
            "apply norm_ge_0.",
            "VernacExtend",
            "42acb6605dbb074d8f6aa3d2b2181e0abfe4687b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_linear_scal_r (k : K) : (forall n m : K, mult n m = mult m n) -> is_linear (fun x : V => scal k x).",
            "VernacStartTheoremProof",
            "5e2e89a8df819d08491d556695f7dc7ac7f32381"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move => u v ; by apply @scal_distr_l.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move => u v /= ; apply sym_eq ; rewrite !@scal_assoc.",
            "VernacExtend",
            "2ed5272fd948de3dcdd9352aa83b534347910652"
        ],
        [
            "by rewrite H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists (abs k + 1) ; split.",
            "VernacExtend",
            "a0b7e9d3cd4af62be5a7a20bdd2a81121c6dc83d"
        ],
        [
            "apply Rplus_le_lt_0_compat.",
            "VernacExtend",
            "f52234f44384644fc6f21adef182d5c4067417f5"
        ],
        [
            "apply abs_ge_0.",
            "VernacExtend",
            "bfeacd2623650e88fd1e5d792e3438edb9d12256"
        ],
        [
            "exact Rlt_0_1.",
            "VernacExtend",
            "8bcad5468a1cd57cf91a54b9c96750052bda60a0"
        ],
        [
            "move => x /=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite Rmult_plus_distr_r Rmult_1_l -(Rplus_0_r (norm (scal k x))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_le_compat.",
            "VernacExtend",
            "7a69898b466991bee51047e3a2fc51c3b80fbd93"
        ],
        [
            "apply norm_scal.",
            "VernacExtend",
            "6c69934cdb6edc62b007ab3c7da8b2ea37e58aa1"
        ],
        [
            "apply norm_ge_0.",
            "VernacExtend",
            "42acb6605dbb074d8f6aa3d2b2181e0abfe4687b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Op_LinearFct.",
            "VernacEndSegment",
            "f3cd7fa057c51a45c34379912e7c97f64e078156"
        ],
        [
            "Lemma is_linear_prod {K : AbsRing} {T U V : NormedModule K} (l1 : T -> U) (l2 : T -> V) : is_linear l1 -> is_linear l2 -> is_linear (fun t : T => (l1 t, l2 t)).",
            "VernacStartTheoremProof",
            "e20d2604833f89bde53c1e25fdc20dd7f468b34e"
        ],
        [
            "intros H1 H2.",
            "VernacExtend",
            "1a279bc44908e178ace5c31cb5040905c4829477"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "apply injective_projections ; simpl.",
            "VernacExtend",
            "a29cc8f4966e828577843e7892e5291a3c2a57a7"
        ],
        [
            "by apply H1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply H2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros k x.",
            "VernacExtend",
            "b59228cc6f15426955829df42e980dfdf25ece7b"
        ],
        [
            "apply injective_projections ; simpl.",
            "VernacExtend",
            "a29cc8f4966e828577843e7892e5291a3c2a57a7"
        ],
        [
            "by apply H1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply H2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (linear_norm l1 H1) as [M1 [HM1 Hn1]].",
            "VernacExtend",
            "ff06cfb6b4bd028a5627fecc8ba89747068567fc"
        ],
        [
            "destruct (linear_norm l2 H2) as [M2 [HM2 Hn2]].",
            "VernacExtend",
            "81b87ec5d3ff4dbafb60e16fe577e98df0a01d0f"
        ],
        [
            "exists (sqrt 2 * Rmax M1 M2)%R ; split.",
            "VernacExtend",
            "9dd04cd4025b45e227c2aecad3ab810e54475feb"
        ],
        [
            "apply Rmult_lt_0_compat.",
            "VernacExtend",
            "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
        ],
        [
            "apply sqrt_lt_R0, Rlt_0_2.",
            "VernacExtend",
            "71c5463b3fcefa9a12cfab0fccc3a567ae1718d1"
        ],
        [
            "by apply Rmax_case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "eapply Rle_trans.",
            "VernacExtend",
            "ec6f33953112c5bac5bfe07c5c0b34597dc6eaba"
        ],
        [
            "apply norm_prod.",
            "VernacExtend",
            "883d2ea61507a9073dbc12aedd4eba66c88ca4eb"
        ],
        [
            "rewrite Rmult_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmult_le_compat_l.",
            "VernacExtend",
            "509839294acd7016ba82d594bfdb05afe131eed3"
        ],
        [
            "by apply sqrt_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Rmult_max_distr_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmax_case.",
            "VernacExtend",
            "cfd24564dbeed7e74b25ea72bdae495929c2ce09"
        ],
        [
            "by eapply Rle_trans, Rmax_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by eapply Rle_trans, Rmax_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply norm_ge_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_linear_fst {K : AbsRing} {U V : NormedModule K} : is_linear (fun t : U * V => fst t).",
            "VernacStartTheoremProof",
            "9c3f73460dcc73e49253070b800f88e46d5113e7"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros [x1 x2] [y1 y2] ; by simpl.",
            "VernacExtend",
            "13961b3bc282086aa7fa1a9f06c9294eee40cab7"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros k [x1 x2] ; by simpl.",
            "VernacExtend",
            "0ddbf7e905b835da72b926a005657425b8f7eab1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists 1 ; split.",
            "VernacExtend",
            "d9b9dd4d6ddae59cf375913fb1366ca7eff03748"
        ],
        [
            "exact Rlt_0_1.",
            "VernacExtend",
            "8bcad5468a1cd57cf91a54b9c96750052bda60a0"
        ],
        [
            "intros [x1 x2] ; simpl fst ; rewrite Rmult_1_l.",
            "VernacExtend",
            "9025521fa5a21a64b9452c3b7133eb4b3f3dfebe"
        ],
        [
            "eapply Rle_trans.",
            "VernacExtend",
            "ec6f33953112c5bac5bfe07c5c0b34597dc6eaba"
        ],
        [
            "2: by apply norm_prod.",
            "VernacExtend",
            "42cf05b0c5cd7515ffd5d7bb186f381ddeb0d8c5"
        ],
        [
            "by apply Rmax_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_linear_snd {K : AbsRing} {U V : NormedModule K} : is_linear (fun t : U * V => snd t).",
            "VernacStartTheoremProof",
            "e728e32e76b0150b5fd08ba74414f6ef764a9b09"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros [x1 x2] [y1 y2] ; by simpl.",
            "VernacExtend",
            "13961b3bc282086aa7fa1a9f06c9294eee40cab7"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros k [x1 x2] ; by simpl.",
            "VernacExtend",
            "0ddbf7e905b835da72b926a005657425b8f7eab1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists 1 ; split.",
            "VernacExtend",
            "d9b9dd4d6ddae59cf375913fb1366ca7eff03748"
        ],
        [
            "exact Rlt_0_1.",
            "VernacExtend",
            "8bcad5468a1cd57cf91a54b9c96750052bda60a0"
        ],
        [
            "intros [x1 x2] ; simpl snd ; rewrite Rmult_1_l.",
            "VernacExtend",
            "f2ba672c2175b03127c8f5d38ffebab8fc5acee6"
        ],
        [
            "eapply Rle_trans.",
            "VernacExtend",
            "ec6f33953112c5bac5bfe07c5c0b34597dc6eaba"
        ],
        [
            "2: by apply norm_prod.",
            "VernacExtend",
            "42cf05b0c5cd7515ffd5d7bb186f381ddeb0d8c5"
        ],
        [
            "by apply Rmax_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Linear_domin.",
            "VernacBeginSection",
            "aca68231e9c89916970a138302e89c7fe62b89d4"
        ],
        [
            "Context {T : Type} {Kw K : AbsRing} {W : NormedModule Kw} {U V : NormedModule K}.",
            "VernacContext",
            "90f2f2159714f9e9478787ee498f3a75740fe576"
        ],
        [
            "Lemma is_domin_linear {F : (T -> Prop) -> Prop} {FF : Filter F} (f : T -> W) (g : T -> U) (l : U -> V) : is_linear l -> is_domin F f g -> is_domin F f (fun t => l (g t)).",
            "VernacStartTheoremProof",
            "1e595f57a69c7c3e808e57524f65a3332f002c39"
        ],
        [
            "intros [_ _ [M [Hm Hn]]] H eps.",
            "VernacExtend",
            "d484d1740e603ed581cf6805a5e65dae699ba09c"
        ],
        [
            "assert (He : 0 < eps / M).",
            "VernacExtend",
            "2567d659c684e72c5d5a0206c037c60fc0432187"
        ],
        [
            "apply Rdiv_lt_0_compat with (2 := Hm).",
            "VernacExtend",
            "76010f6ffbee1bbe58d7701edcc9b806f2a27f94"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "specialize (H (mkposreal _ He)).",
            "VernacExtend",
            "dcc734789daeca81e193f1ec4a2a69d4a5650b7a"
        ],
        [
            "move: H ; apply filter_imp => /= x Hx.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "apply Rle_trans with (1 := Hn _).",
            "VernacExtend",
            "0a8f007e47c2efb56e5f1934cc9d044c0bc7dad5"
        ],
        [
            "evar_last.",
            "VernacExtend",
            "66189d18eff3abe5c0f87ca72027637c063094b4"
        ],
        [
            "apply Rmult_le_compat_l with (2 := Hx).",
            "VernacExtend",
            "3e06433a9a5ad66af174d6ddc435b63d345a107b"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "now apply Rgt_not_eq.",
            "VernacExtend",
            "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Linear_domin.",
            "VernacEndSegment",
            "64d63bc86e94879c677c79c2fbcf44b698fe5eb2"
        ],
        [
            "Section Diff.",
            "VernacBeginSection",
            "295e5ad31c804de240555ce7969faa123ad48691"
        ],
        [
            "Context {K : AbsRing} {U : NormedModule K} {V : NormedModule K}.",
            "VernacContext",
            "562dc0229b97f19a70a6d606854f5e8f144ab253"
        ],
        [
            "Definition filterdiff (f : U -> V) F (l : U -> V) := is_linear l /\\ forall x, is_filter_lim F x -> is_domin F (fun y : U => minus y x) (fun y => minus (minus (f y) (f x)) (l (minus y x))).",
            "VernacDefinition",
            "61b7fc95043f8535dac4aef35cffb16a1bb30e59"
        ],
        [
            "Definition ex_filterdiff (f : U -> V) F := exists (l : U -> V), filterdiff f F l.",
            "VernacDefinition",
            "c3acdb0e4bbbfb0f4a222a1923ba6e1624653108"
        ],
        [
            "Lemma filterdiff_continuous_aux {F} {FF : Filter F} (f : U -> V) : ex_filterdiff f F -> forall x, is_filter_lim F x -> filterlim f F (locally (f x)).",
            "VernacStartTheoremProof",
            "da577a8a41d61099a812087e9c8f9ae7886df6d3"
        ],
        [
            "intros [l [Hl Df]] x Hx.",
            "VernacExtend",
            "e7535a4901450a03657a98d285b4651b99bb9c79"
        ],
        [
            "specialize (Df x Hx).",
            "VernacExtend",
            "530c5ce3f5a860545af9b0b76530569f7d1ace51"
        ],
        [
            "apply filterlim_locally_ball_norm => eps.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "specialize (Df (mkposreal _ Rlt_0_1)) ; simpl in Df.",
            "VernacExtend",
            "15eb56b64cc2fc489c820a53fc40ce7162a41890"
        ],
        [
            "destruct (linear_norm _ Hl) as [M Hm].",
            "VernacExtend",
            "471364e6c9ff9b8215966eee57fe6cb65509cd1d"
        ],
        [
            "assert (F (fun y => norm (minus (f y) (f x)) <= (M + 1) * norm (minus y x))).",
            "VernacExtend",
            "489a400c0c511ad3c367ece01e37405274ba68a8"
        ],
        [
            "move: Df ; apply filter_imp => y Hy.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "rewrite Rmult_1_l in Hy.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_trans with (1 := norm_triangle_inv _ _) in Hy.",
            "VernacExtend",
            "2206974291ffab742aac63279207c3a16f1e3d9f"
        ],
        [
            "apply Rabs_le_between' in Hy.",
            "VernacExtend",
            "1fc101380e3ffb46d72955def9e9f20403df830c"
        ],
        [
            "eapply Rle_trans.",
            "VernacExtend",
            "ec6f33953112c5bac5bfe07c5c0b34597dc6eaba"
        ],
        [
            "by apply Hy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rle_minus_r ; ring_simplify.",
            "VernacExtend",
            "cfb101a0c5f776b7162ef78d6c396da9a5c40c4c"
        ],
        [
            "by apply Hm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: H => {Df} Df.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "assert (Hm': 0 < M + 1).",
            "VernacExtend",
            "e5ac544d27f99fcc7a3487fb6457c1491126da99"
        ],
        [
            "apply Rplus_le_lt_0_compat.",
            "VernacExtend",
            "f52234f44384644fc6f21adef182d5c4067417f5"
        ],
        [
            "apply Rlt_le, Hm.",
            "VernacExtend",
            "acfcb54ca1975315eed9cf6d6f522f82f58d40a0"
        ],
        [
            "exact Rlt_0_1.",
            "VernacExtend",
            "8bcad5468a1cd57cf91a54b9c96750052bda60a0"
        ],
        [
            "assert (0 < eps / (M+1)).",
            "VernacExtend",
            "95c824d53d11ebb7c86c249d25ea54732cff75ee"
        ],
        [
            "apply Rdiv_lt_0_compat with (2 := Hm').",
            "VernacExtend",
            "d3ee859c9d5bdc400834781d37ab87e766c77ff4"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "specialize (Hx _ (locally_ball_norm x (mkposreal _ H))).",
            "VernacExtend",
            "3dac819c9a5b6427dddbae7f2b55d818f68c4362"
        ],
        [
            "generalize (filter_and _ _ Hx Df) => /=.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply filter_imp => y [Hy Hy'] {Hx Df}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rle_lt_trans with (1 := Hy').",
            "VernacExtend",
            "f9e4ff024e85944879bba49c9081af6cc5e39d68"
        ],
        [
            "evar_last.",
            "VernacExtend",
            "66189d18eff3abe5c0f87ca72027637c063094b4"
        ],
        [
            "now apply Rmult_lt_compat_l with (2 := Hy).",
            "VernacExtend",
            "6f4e283d76889ca2fbbb6dd4ecf79d7a99f6056a"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "now apply Rgt_not_eq.",
            "VernacExtend",
            "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterdiff_continuous (f : U -> V) x : ex_filterdiff f (locally x) -> continuous f x.",
            "VernacStartTheoremProof",
            "096956131ffe459ce526984e7f53bbb71f097d83"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "by apply filterdiff_continuous_aux.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterdiff_locally {F} {FF : ProperFilter F} (f : U -> V) x l : is_filter_lim F x -> filterdiff f (locally x) l -> filterdiff f F l.",
            "VernacStartTheoremProof",
            "2082b71abad67704dc5101902123b2b78ff76b53"
        ],
        [
            "intros Fx [Hl Df].",
            "VernacExtend",
            "a4ce850252c480943a4c0cc82c3bc29336dcca26"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exact Hl.",
            "VernacExtend",
            "726a6911ca781f5fae08f27dbd5c9838368eca79"
        ],
        [
            "intros z Fz.",
            "VernacExtend",
            "61581b0e01f82a9dda8538fec7f6a3dfe5958aa3"
        ],
        [
            "specialize (Df _ (fun P H => H)).",
            "VernacExtend",
            "a6a39ccd16473afc64ba989ba4ebaa305ff4829d"
        ],
        [
            "generalize (is_filter_lim_unique _ _ Fx Fz).",
            "VernacExtend",
            "1241234adeecc67c401968b32b00d3a61e395225"
        ],
        [
            "intros ->.",
            "VernacExtend",
            "e8af3665779d92274caf81949b4a0e6232d89ea7"
        ],
        [
            "now apply is_domin_le with (2 := Fz).",
            "VernacExtend",
            "ee8773fc0041cf3f3a776fc9142013222d4f727e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_filterdiff_locally {F} {FF : ProperFilter F} (f : U -> V) x : is_filter_lim F x -> ex_filterdiff f (locally x) -> ex_filterdiff f F.",
            "VernacStartTheoremProof",
            "337fa58addf8fc0dc0717b474116b0356e15eaae"
        ],
        [
            "intros Fx [l Df].",
            "VernacExtend",
            "4c8a2acc5ccb8908ced5fb97a569b8e1d5381932"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "apply filterdiff_locally with x.",
            "VernacExtend",
            "9d3192e283564bb7c7fe35b2d5320ef615eacf4f"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Df.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterdiff_ext_lin {F} {FF : Filter F} (f : U -> V) (l1 l2 : U -> V) : filterdiff f F l1 -> (forall y, l1 y = l2 y) -> filterdiff f F l2.",
            "VernacStartTheoremProof",
            "0c37743cd3a9df5e2f894db0097cd5bf7f739842"
        ],
        [
            "intros [Hl1 Hf1] Hl ; split => [ | x Hx eps].",
            "VernacExtend",
            "b256c9493539f52b1c0b18fec0d1b29efcf0ec79"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros x y ; rewrite -!Hl.",
            "VernacExtend",
            "be6598b26e238a504f0b0f138d15d82f106a2995"
        ],
        [
            "by apply linear_plus.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros k x ; rewrite -!Hl.",
            "VernacExtend",
            "c62dd0001d6974bac1fb9ffeecbcdce791df4b3d"
        ],
        [
            "by apply linear_scal.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (linear_norm _ Hl1) as [M Hm].",
            "VernacExtend",
            "3fd968570df66439f8892d6ab031cfec71876d06"
        ],
        [
            "exists M ; split.",
            "VernacExtend",
            "a7920270b1aa7967f9b48b07c0a332ee274d5144"
        ],
        [
            "by apply Hm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => x ; now rewrite -Hl.",
            "VernacExtend",
            "f24c74edd1767d7b5d86e27d9c0161c0702b8412"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "move: (Hf1 x Hx eps).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply filter_imp => y.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite !Hl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterdiff_ext_loc {F} {FF : Filter F} (f g : U -> V) (l : U -> V) : F (fun y => f y = g y) -> (forall x, is_filter_lim F x -> f x = g x) -> filterdiff f F l -> filterdiff g F l.",
            "VernacStartTheoremProof",
            "547370cee757a65656ee048a367f4ec141ee8b4b"
        ],
        [
            "move => H H0 [Hl Df].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "split => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move => x Hx eps.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "specialize (H0 x Hx).",
            "VernacExtend",
            "9d253fe2d72e95e7c2a540bfa3a3f1c412d4d8b3"
        ],
        [
            "specialize (Df x Hx eps).",
            "VernacExtend",
            "6d9ece6aaba3c5daa078e0930509d1c565a8e48b"
        ],
        [
            "apply filter_and with (1 := H) in Df.",
            "VernacExtend",
            "fdfdab21a810bd47b6ef637d508e05ea867bb723"
        ],
        [
            "move: Df ; apply filter_imp => y [Hy].",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "apply Rle_trans.",
            "VernacExtend",
            "2502801189c76bcf84789266d44e22a2e1fe0825"
        ],
        [
            "by apply Req_le ; rewrite Hy H0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_filterdiff_ext_loc {F} {FF : Filter F} (f g : U -> V) : F (fun y => f y = g y) -> (forall x, is_filter_lim F x -> f x = g x) -> ex_filterdiff f F -> ex_filterdiff g F.",
            "VernacStartTheoremProof",
            "dc0438ebc558c5e7f49b5d0a7ace71bab8d1a36d"
        ],
        [
            "intros H H0 [l Hl].",
            "VernacExtend",
            "eb4381fdac2a64deb44e9478dba5d27b79ec6170"
        ],
        [
            "exists l ; by apply filterdiff_ext_loc with f.",
            "VernacExtend",
            "4f9f93dbf1ab94af5a51d54d8955eb863fb55340"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterdiff_ext_locally (f g : U -> V) (x : U) (l : U -> V) : locally x (fun y => f y = g y) -> filterdiff f (locally x) l -> filterdiff g (locally x) l.",
            "VernacStartTheoremProof",
            "249247fb4cab76f9a31a704ad2fddacc7869a2aa"
        ],
        [
            "move => H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply filterdiff_ext_loc with (1 := H).",
            "VernacExtend",
            "8189a7f4f738da727c0cc71f1c157313499bde58"
        ],
        [
            "move => y Hy.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "destruct H as [d Hd].",
            "VernacExtend",
            "3d9dd9203284cc496af3e2aaa1bcb93a191fd0d9"
        ],
        [
            "apply Hd.",
            "VernacExtend",
            "b2c76316200582fcad9318af1ed397a8dea483e3"
        ],
        [
            "replace y with x.",
            "VernacExtend",
            "32bcc5bf56210bff5b38cc9e9eaf0c7ab9375e0b"
        ],
        [
            "apply ball_center.",
            "VernacExtend",
            "cd7d813ae3e0973ad761815cfc4c15b7e8339e52"
        ],
        [
            "by apply is_filter_lim_locally_unique.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_filterdiff_ext_locally (f g : U -> V) x : locally x (fun y => f y = g y) -> ex_filterdiff f (locally x) -> ex_filterdiff g (locally x).",
            "VernacStartTheoremProof",
            "49571049a26f67ff692f5115be33f74a385140c4"
        ],
        [
            "intros H [l Hl].",
            "VernacExtend",
            "ce7ac9c1eb27656ee7483e4134e598706582a55a"
        ],
        [
            "exists l ; by apply filterdiff_ext_locally with f.",
            "VernacExtend",
            "4f9f93dbf1ab94af5a51d54d8955eb863fb55340"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterdiff_ext {F} {FF : Filter F} (f g : U -> V) (l : U -> V) : (forall y , f y = g y) -> filterdiff f F l -> filterdiff g F l.",
            "VernacStartTheoremProof",
            "9680db43779e599fe0b80bbaa3c60f0d045eac09"
        ],
        [
            "move => H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply filterdiff_ext_loc => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "now apply filter_imp with (2 := filter_true).",
            "VernacExtend",
            "f421e125b4c00d82240e945df09b30b669f300ec"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_filterdiff_ext {F} {FF : Filter F} (f g : U -> V) : (forall y , f y = g y) -> ex_filterdiff f F -> ex_filterdiff g F.",
            "VernacStartTheoremProof",
            "703328bd907fc471b95ee1d69e1b11df1d707b9b"
        ],
        [
            "intros H [l Hl].",
            "VernacExtend",
            "ce7ac9c1eb27656ee7483e4134e598706582a55a"
        ],
        [
            "exists l ; by apply filterdiff_ext with f.",
            "VernacExtend",
            "4f9f93dbf1ab94af5a51d54d8955eb863fb55340"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterdiff_const {F} {FF : Filter F} (a : V) : filterdiff (fun _ => a) F (fun _ => zero).",
            "VernacStartTheoremProof",
            "1f4e5dc28d3d017371f3bd9f7ef29b318402f9d9"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "by apply is_linear_zero.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => x Hx eps.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply filter_imp with (2 := filter_true) => y _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /minus plus_opp_r plus_zero_l norm_opp norm_zero.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmult_le_pos.",
            "VernacExtend",
            "e03207c3cef85471384dc0906485b056bc83a80a"
        ],
        [
            "by apply Rlt_le, eps.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply norm_ge_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_filterdiff_const {F} {FF : Filter F} (a : V) : ex_filterdiff (fun _ => a) F.",
            "VernacStartTheoremProof",
            "c308674fab24d89f4c8ed86b03ce6170816acd54"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exists (fun _ => zero).",
            "VernacExtend",
            "e8293129961b5f3c30b055777ecdfabea959f911"
        ],
        [
            "by apply filterdiff_const.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterdiff_linear {F} (l : U -> V) : is_linear l -> filterdiff l F l.",
            "VernacStartTheoremProof",
            "1ffddcbf6f509a36e2ff1107ff174c17b9662dc4"
        ],
        [
            "move => Hl ; split.",
            "VernacExtend",
            "22de1c5faad21de60fd48f882c8175e01347018a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => x Hx eps.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Hx.",
            "VernacExtend",
            "6b67a45c0db24f7a9d568d1ce8b5aa142ba212d9"
        ],
        [
            "apply filter_forall => y.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /minus -(linear_opp l x Hl) -linear_plus // plus_opp_r norm_zero.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmult_le_pos.",
            "VernacExtend",
            "e03207c3cef85471384dc0906485b056bc83a80a"
        ],
        [
            "apply Rlt_le, eps.",
            "VernacExtend",
            "a8e0b1a14c78104fc8aba2b0d10697fc4a297ac2"
        ],
        [
            "by apply norm_ge_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_filterdiff_linear {F} (l : U -> V) : is_linear l -> ex_filterdiff l F.",
            "VernacStartTheoremProof",
            "bdc66c0a7b1a739fcb34c21fad774c927120b4b8"
        ],
        [
            "intro Hl ; exists l; by apply filterdiff_linear.",
            "VernacExtend",
            "9d7829450f90451c0ea0fe72b640319e6387d518"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Diff.",
            "VernacEndSegment",
            "e0ae368ee7dde6f260993417d1f5d5c8e3328089"
        ],
        [
            "Section Diff_comp.",
            "VernacBeginSection",
            "d4216e84fd2014c218b282e8cbfd2eefd8802095"
        ],
        [
            "Context {K : AbsRing} {U V W : NormedModule K}.",
            "VernacContext",
            "4fdb4c3f9085a6856954119e83f0e013cf4964fe"
        ],
        [
            "Lemma filterdiff_comp {F} {FF : Filter F} f g (lf : U -> V) (lg : V -> W) : filterdiff f F lf -> filterdiff g (filtermap f F) lg -> filterdiff (fun y => g (f y)) F (fun y => lg (lf y)).",
            "VernacStartTheoremProof",
            "c8df2895a3339bd8170316f553adeb6ff13c03a4"
        ],
        [
            "intros Df Dg.",
            "VernacExtend",
            "1a4882372653d6487683152cc8ed5a4d4f734998"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply is_linear_comp.",
            "VernacExtend",
            "1fdc9e0b62d262d8c99d3adff3a6e5212973ed59"
        ],
        [
            "by apply Df.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Dg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "assert (Cf : filterlim f F (locally (f x))).",
            "VernacExtend",
            "f9cd42bad20c636cbb00bcceeff725bd1f48497a"
        ],
        [
            "apply filterdiff_continuous_aux with (2 := Hx).",
            "VernacExtend",
            "4cedd03bf9c2fc81cc69d020bfac93da1a4914bb"
        ],
        [
            "eexists ; by apply Df.",
            "VernacExtend",
            "4657dc7e5563695fc6fb97b882b38b9c9d8fee9c"
        ],
        [
            "assert (is_domin (filtermap f F) (fun y : V => minus y (f x)) (fun y : V => minus (minus (g y) (g (f x))) (lg (minus y (f x))))).",
            "VernacExtend",
            "a056b1c1b16f1f4b43395aabcc701955ec36d3b8"
        ],
        [
            "apply Dg.",
            "VernacExtend",
            "68022de2c4a6bfdb46f0fcd6a564325fbbc74fa1"
        ],
        [
            "move => P HP.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by apply Cf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "destruct Dg as [Hg _].",
            "VernacExtend",
            "3edc48a84cba99c6262265bc2d148e5825d9bd9b"
        ],
        [
            "rename H into Dg.",
            "VernacExtend",
            "5bdc8ecac32f355c9e0d99a5a9cf423002ae3e0f"
        ],
        [
            "destruct Df as [Hf Df].",
            "VernacExtend",
            "a6a3f73fbe16c64e10773a6009acad00116ddf99"
        ],
        [
            "apply domin_rw_r with (fun y : U => plus (minus (minus (g (f y)) (g (f x))) (lg (minus (f y) (f x)))) (lg (minus (minus (f y) (f x)) (lf (minus y x))))).",
            "VernacExtend",
            "431b8cdc0787c563703ddd40633185ff9d80111c"
        ],
        [
            "apply equiv_ext_loc.",
            "VernacExtend",
            "79d296850be857cb1709e2a39fd36ae899246ef3"
        ],
        [
            "apply filter_forall => y.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /minus -!plus_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "repeat apply f_equal.",
            "VernacExtend",
            "998600d7663151cc7094e6b99854d685cb2c2956"
        ],
        [
            "rewrite plus_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (linear_plus _ Hg (plus _ _)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite plus_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite plus_opp_l plus_zero_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply linear_opp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply domin_plus.",
            "VernacExtend",
            "a09f8e873e7bb8199a9dc48b625717d1645e769b"
        ],
        [
            "intros eps.",
            "VernacExtend",
            "786caed5d6705ffc7435ecfd5604e33c6ecd43f1"
        ],
        [
            "destruct (linear_norm _ Hf) as [mf [Hmf Hnf]].",
            "VernacExtend",
            "91cb626333d29b2ccc9ca6b9da12a64940932c55"
        ],
        [
            "assert (F (fun y => norm (minus (f y) (f x)) <= (1 + mf) * norm (minus y x))).",
            "VernacExtend",
            "1a20cc361c70510b205fb551c144ebdfe7196c03"
        ],
        [
            "specialize (Df x Hx (mkposreal _ Rlt_0_1)).",
            "VernacExtend",
            "850628ff98d685a3331b13dedfc10fc73653a87f"
        ],
        [
            "move: Df ; apply filter_imp.",
            "VernacExtend",
            "0748f60fd4bfbf18081aafc2b987584f77eabe68"
        ],
        [
            "move => y /= Hy.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "replace (minus (f y) (f x)) with (plus (minus (minus (f y) (f x)) (lf (minus y x))) (lf (minus y x))).",
            "VernacExtend",
            "36474e88df513f52cffd2f60c66e8eb8ce564e1e"
        ],
        [
            "eapply Rle_trans.",
            "VernacExtend",
            "ec6f33953112c5bac5bfe07c5c0b34597dc6eaba"
        ],
        [
            "apply @norm_triangle.",
            "VernacExtend",
            "85c8761fbfefc33c72371b73f65134f967a6f807"
        ],
        [
            "rewrite Rmult_plus_distr_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_le_compat.",
            "VernacExtend",
            "7a69898b466991bee51047e3a2fc51c3b80fbd93"
        ],
        [
            "exact Hy.",
            "VernacExtend",
            "def2ddcf2b089fdcc58626c840dcc230a388ad11"
        ],
        [
            "by apply Hnf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite {1}/minus -plus_assoc plus_opp_l plus_zero_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "clear Df ; rename H into Df.",
            "VernacExtend",
            "cc6e6ddf0cd4c426bfd17f3a91cd7c6b72fe04c1"
        ],
        [
            "assert (He : 0 < eps / (1 + mf)).",
            "VernacExtend",
            "c57b6e91ff5424c238061aa4f43f37a56e70e9f4"
        ],
        [
            "apply Rdiv_lt_0_compat.",
            "VernacExtend",
            "283136f6e52505e4579f1f286529bc7e0bbfd6d7"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "apply Rplus_lt_0_compat.",
            "VernacExtend",
            "fabb5a8a4bac5299b29ef6d69850aa31515e1514"
        ],
        [
            "exact Rlt_0_1.",
            "VernacExtend",
            "8bcad5468a1cd57cf91a54b9c96750052bda60a0"
        ],
        [
            "exact Hmf.",
            "VernacExtend",
            "96c82a19602ec13dad7b64098bd838f657629b38"
        ],
        [
            "specialize (Dg (mkposreal _ He)).",
            "VernacExtend",
            "e6df8eaeb752912255b6c60d52899edaf533caa4"
        ],
        [
            "unfold filtermap in Dg.",
            "VernacExtend",
            "1e3f23fbdd09c70dcba15d01cf9f9e8f0ecc4e1f"
        ],
        [
            "generalize (filter_and _ _ Df Dg).",
            "VernacExtend",
            "132efdfbefcc38abda3a83393d23088d073405f5"
        ],
        [
            "apply filter_imp => /= y {Df Dg} [Df Dg].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rle_trans with (1 := Dg).",
            "VernacExtend",
            "746d0704d9cd4fa97d8b22cbc71fb75d30a7dc66"
        ],
        [
            "unfold Rdiv.",
            "VernacExtend",
            "d9820df68a5475147f48d29acf89824b27f71597"
        ],
        [
            "rewrite Rmult_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmult_le_compat_l.",
            "VernacExtend",
            "509839294acd7016ba82d594bfdb05afe131eed3"
        ],
        [
            "apply Rlt_le, eps.",
            "VernacExtend",
            "a8e0b1a14c78104fc8aba2b0d10697fc4a297ac2"
        ],
        [
            "rewrite Rmult_comm ; apply Rle_div_l.",
            "VernacExtend",
            "d9d7ce9f929bd4344f0adb0806d64329a559ead8"
        ],
        [
            "apply Rplus_lt_0_compat.",
            "VernacExtend",
            "fabb5a8a4bac5299b29ef6d69850aa31515e1514"
        ],
        [
            "exact Rlt_0_1.",
            "VernacExtend",
            "8bcad5468a1cd57cf91a54b9c96750052bda60a0"
        ],
        [
            "exact Hmf.",
            "VernacExtend",
            "96c82a19602ec13dad7b64098bd838f657629b38"
        ],
        [
            "rewrite Rmult_comm ; by apply Df.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "specialize (Df x Hx).",
            "VernacExtend",
            "530c5ce3f5a860545af9b0b76530569f7d1ace51"
        ],
        [
            "by apply is_domin_linear.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_filterdiff_comp {F} {FF : Filter F} (f : U -> V) (g : V -> W) : ex_filterdiff f F -> ex_filterdiff g (filtermap f F) -> ex_filterdiff (fun y => g (f y)) F.",
            "VernacStartTheoremProof",
            "e50f83fa458675a3d47a2ef4fa88783ebde0c17e"
        ],
        [
            "intros [lf Df] [lg Dg].",
            "VernacExtend",
            "bdd5e050dc7d12577e233c42cf3ac421f1c778e8"
        ],
        [
            "eexists ; eapply filterdiff_comp ; eassumption.",
            "VernacExtend",
            "f02fa63c5754075f1c664c1d6d069a9b2e39e7db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterdiff_comp' f g x (lf : U -> V) (lg : V -> W) : filterdiff f (locally x) lf -> filterdiff g (locally (f x)) lg -> filterdiff (fun y => g (f y)) (locally x) (fun y => lg (lf y)).",
            "VernacStartTheoremProof",
            "1c669e871c8c4b5f0d65db47630f45b7b18b1afa"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply filterdiff_comp.",
            "VernacExtend",
            "8198bca4a8e18215aeb5f541ae61ff21ce0fa52e"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply filterdiff_locally with (f x).",
            "VernacExtend",
            "e21568c66d13430d88733afc41b5a72d5936616e"
        ],
        [
            "apply is_filter_lim_filtermap => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply filterdiff_continuous => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "eexists ; by apply H.",
            "VernacExtend",
            "4657dc7e5563695fc6fb97b882b38b9c9d8fee9c"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_filterdiff_comp' (f : U -> V) (g : V -> W) x : ex_filterdiff f (locally x) -> ex_filterdiff g (locally (f x)) -> ex_filterdiff (fun y => g (f y)) (locally x).",
            "VernacStartTheoremProof",
            "097374cb1e5392292716a5ceb0a03cde86162b8a"
        ],
        [
            "intros [lf Df] [lg Dg].",
            "VernacExtend",
            "bdd5e050dc7d12577e233c42cf3ac421f1c778e8"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "apply filterdiff_comp' ; eassumption.",
            "VernacExtend",
            "4ef6b055f82161df524621d04abc345a96b44df4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Diff_comp.",
            "VernacEndSegment",
            "6cb0edae9e6b0593feb22c7a290f392b288cc0bc"
        ],
        [
            "Section Diff_comp2.",
            "VernacBeginSection",
            "aa5008565375ed1963bcb1f2cd1f3e9a7b694a01"
        ],
        [
            "Context {K : AbsRing} {T U V : NormedModule K}.",
            "VernacContext",
            "1b29a8d83dba1ffe33626c8325b183133fc02d54"
        ],
        [
            "Section Diff_comp2'.",
            "VernacBeginSection",
            "6e73b7c0a31e0e1821b71801ed969130a37b1f44"
        ],
        [
            "Context {W : NormedModule K}.",
            "VernacContext",
            "7a6431a0397f39170cbf7d651c25b0f99ba3c392"
        ],
        [
            "Lemma filterdiff_comp_2 {F : (T -> Prop) -> Prop} {FF : Filter F} : forall (f : T -> U) (g : T -> V) (h : U -> V -> W) (lf : T -> U) (lg : T -> V) (lh : U -> V -> W), filterdiff f F lf -> filterdiff g F lg -> filterdiff (fun t => h (fst t) (snd t)) (filtermap (fun t => (f t,g t)) F) (fun t => lh (fst t) (snd t)) -> filterdiff (fun y : T => h (f y) (g y)) F (fun y : T => lh (lf y) (lg y)).",
            "VernacStartTheoremProof",
            "8e911ddf4dee4f11fdc7253952128774bf35d24a"
        ],
        [
            "intros f g h lf lg lh [Hf Df] [Hg Dg] Dh.",
            "VernacExtend",
            "7dace6fcf5d76e3c2245bce1754392b8c4d6afe5"
        ],
        [
            "apply (filterdiff_comp (fun t => (f t, g t)) _ (fun t => (lf t, lg t)) _) in Dh.",
            "VernacExtend",
            "3fdbc874cb6fe34e606a7349fe1249780d323f33"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "by apply is_linear_prod.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "intros x Hx eps.",
            "VernacExtend",
            "6e06a4c2e713cdddda1661d476b1633a91b6b278"
        ],
        [
            "assert (0 < eps / sqrt 2).",
            "VernacExtend",
            "c0ec7072110863a0c022bcd4b3cc96cb8d31a0a9"
        ],
        [
            "apply Rdiv_lt_0_compat.",
            "VernacExtend",
            "283136f6e52505e4579f1f286529bc7e0bbfd6d7"
        ],
        [
            "by apply eps.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rlt_sqrt2_0.",
            "VernacExtend",
            "c1b2005376a9b8e97bff3ba76202377d4e222a5e"
        ],
        [
            "generalize (filter_and _ _ (Df x Hx (mkposreal _ H)) (Dg x Hx (mkposreal _ H))).",
            "VernacExtend",
            "40be7d996c5c9d32cdcafdf0a5e7255c6fb1a90e"
        ],
        [
            "simpl pos.",
            "VernacExtend",
            "d4973c7207cc9a8d5d90756966ef990d84b0955d"
        ],
        [
            "apply filter_imp ; intros y [Hnf Hng].",
            "VernacExtend",
            "e0015449fa534bcef75a29064af0a8ca4ef66e12"
        ],
        [
            "eapply Rle_trans.",
            "VernacExtend",
            "ec6f33953112c5bac5bfe07c5c0b34597dc6eaba"
        ],
        [
            "apply norm_prod.",
            "VernacExtend",
            "883d2ea61507a9073dbc12aedd4eba66c88ca4eb"
        ],
        [
            "simpl fst ; simpl snd.",
            "VernacExtend",
            "91b2d0ba752840f71f6d55007c83e13df72f2d45"
        ],
        [
            "eapply Rle_trans.",
            "VernacExtend",
            "ec6f33953112c5bac5bfe07c5c0b34597dc6eaba"
        ],
        [
            "apply Rmult_le_compat_l.",
            "VernacExtend",
            "509839294acd7016ba82d594bfdb05afe131eed3"
        ],
        [
            "by apply sqrt_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rmax_case.",
            "VernacExtend",
            "cfd24564dbeed7e74b25ea72bdae495929c2ce09"
        ],
        [
            "apply Hnf.",
            "VernacExtend",
            "f52c7d024f2ff71254a3bfb4e87ca599ed2dbf57"
        ],
        [
            "apply Hng.",
            "VernacExtend",
            "0430b01ae68e9da11edfadbb6a89131702019a93"
        ],
        [
            "apply Req_le ; field.",
            "VernacExtend",
            "2174f1ccde93a7e8aa969bbcd29fd5556bc786df"
        ],
        [
            "apply Rgt_not_eq, Rlt_sqrt2_0.",
            "VernacExtend",
            "09ca495801a9241dad35fac3d5a066674ea681f8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_filterdiff_comp_2 {F : (T -> Prop) -> Prop} {FF : Filter F} : forall (f : T -> U) (g : T -> V) (h : U -> V -> W), ex_filterdiff f F -> ex_filterdiff g F -> ex_filterdiff (fun t => h (fst t) (snd t)) (filtermap (fun t => (f t,g t)) F) -> ex_filterdiff (fun y : T => h (f y) (g y)) F.",
            "VernacStartTheoremProof",
            "309e311c97114ffce846cb2348d94802ffdaccc9"
        ],
        [
            "intros f g h [lf Df] [lg Dg] [lh Dh].",
            "VernacExtend",
            "8b46e95aae248523e96d67e6c15485cb670fdcc3"
        ],
        [
            "set lh' := fun x y => lh (x,y).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "eexists ; eapply (filterdiff_comp_2 _ _ _ _ _ lh') ; try eassumption.",
            "VernacExtend",
            "24fa9a1342dbc95bfd6b505ba156fbed860ed2c9"
        ],
        [
            "eapply filterdiff_ext_lin.",
            "VernacExtend",
            "95ec423140e8c1a0927774f978482d971b43a652"
        ],
        [
            "by apply Dh.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Diff_comp2'.",
            "VernacEndSegment",
            "52b62c679324fb3f38db6e49d62ca095a9c57801"
        ],
        [
            "Context {W : NormedModule K}.",
            "VernacContext",
            "7a6431a0397f39170cbf7d651c25b0f99ba3c392"
        ],
        [
            "Lemma filterdiff_comp'_2 : forall (f : T -> U) (g : T -> V) (h : U -> V -> W) x (lf : T -> U) (lg : T -> V) (lh : U -> V -> W), filterdiff f (locally x) lf -> filterdiff g (locally x) lg -> filterdiff (fun t => h (fst t) (snd t)) (locally (f x,g x)) (fun t => lh (fst t) (snd t)) -> filterdiff (fun y : T => h (f y) (g y)) (locally x) (fun y : T => lh (lf y) (lg y)).",
            "VernacStartTheoremProof",
            "220707cfda35d1b69823950f157a86b756c0a707"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply filterdiff_comp_2.",
            "VernacExtend",
            "cc78a5e980d928e46e75c4358959223fe3f77222"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply filterdiff_locally with (f x, g x).",
            "VernacExtend",
            "7d8073228df37c442d682823dd1d54e361b3a974"
        ],
        [
            "apply (is_filter_lim_filtermap _ _ (fun t : T => (f t, g t))) => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply (filterdiff_continuous (fun t : T => (f t, g t))) => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply ex_filterdiff_comp_2.",
            "VernacExtend",
            "5f12bc65c4a08add838981dc8708ccc28ee1822c"
        ],
        [
            "by exists lf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by exists lg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply ex_filterdiff_linear.",
            "VernacExtend",
            "1ed3e7eb63881344f6f0a4431143b68d8e56ca84"
        ],
        [
            "apply is_linear_prod.",
            "VernacExtend",
            "435b3ddf29c095ab708a3ef4dac77051350a9ad9"
        ],
        [
            "apply is_linear_fst.",
            "VernacExtend",
            "540da07d1bdca36b9ebbcd162c003841792627db"
        ],
        [
            "by apply is_linear_snd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_filterdiff_comp'_2 : forall (f : T -> U) (g : T -> V) (h : U -> V -> W) x, ex_filterdiff f (locally x) -> ex_filterdiff g (locally x) -> ex_filterdiff (fun t => h (fst t) (snd t)) (locally (f x,g x)) -> ex_filterdiff (fun y : T => h (f y) (g y)) (locally x).",
            "VernacStartTheoremProof",
            "58edeeff7665bb5568890708ff855a004a85b3b7"
        ],
        [
            "intros f g h x [lf Df] [lg Dg] [lh Dh].",
            "VernacExtend",
            "5bddb12cced9b986abc12939684cfebee90b04a4"
        ],
        [
            "exists (fun x => lh (lf x,lg x)).",
            "VernacExtend",
            "abebe93ca6af3e5e91a0038fb6a838e443cf6353"
        ],
        [
            "apply (filterdiff_comp'_2 f g h x lf lg (fun x y => lh (x,y))) ; try eassumption.",
            "VernacExtend",
            "fe35d6822cabba3f9c6066d8320d7671607e3f9d"
        ],
        [
            "eapply filterdiff_ext_lin ; try eassumption.",
            "VernacExtend",
            "68d7eb273159b2bc6491f03a2e06ed1fb65abb88"
        ],
        [
            "by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Diff_comp2.",
            "VernacEndSegment",
            "ae15902c907d1ebce56688c78ec2c59e26606d13"
        ],
        [
            "Section Operations.",
            "VernacBeginSection",
            "c4a3a460055006ed76a962e598d29c044d097d26"
        ],
        [
            "Context {K : AbsRing} {V : NormedModule K}.",
            "VernacContext",
            "3b61d1aae35ebd0170cfa463dc9750aa874e5a6f"
        ],
        [
            "Lemma filterdiff_id (F : (V -> Prop) -> Prop) : filterdiff (fun y => y) F (fun y => y).",
            "VernacStartTheoremProof",
            "5b6bf28adea89a965ce247c0fd14f53687805404"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "by apply is_linear_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => x Hx eps.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Hx ; exists eps => y /= Hy.",
            "VernacExtend",
            "f87f5dcbbbd1d0c1de626f08d5b75b0699bfd535"
        ],
        [
            "rewrite /minus plus_opp_r norm_zero.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmult_le_pos.",
            "VernacExtend",
            "e03207c3cef85471384dc0906485b056bc83a80a"
        ],
        [
            "by apply Rlt_le, eps.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply norm_ge_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_filterdiff_id (F : (V -> Prop) -> Prop) : ex_filterdiff (fun y => y) F.",
            "VernacStartTheoremProof",
            "f065987d54806fb26b8f8f76b17c71837c655a26"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "by apply filterdiff_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterdiff_opp (F : (V -> Prop) -> Prop) : filterdiff opp F opp.",
            "VernacStartTheoremProof",
            "d2f5765db18ce8faa45b45a192d44ed0f7fad7bd"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "by apply is_linear_opp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => x Hx eps.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Hx.",
            "VernacExtend",
            "6b67a45c0db24f7a9d568d1ce8b5aa142ba212d9"
        ],
        [
            "exists eps => y /= Hy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /minus -!opp_plus plus_opp_r norm_opp norm_zero.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmult_le_pos.",
            "VernacExtend",
            "e03207c3cef85471384dc0906485b056bc83a80a"
        ],
        [
            "by apply Rlt_le, eps.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply norm_ge_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_filterdiff_opp (F : (V -> Prop) -> Prop) : ex_filterdiff opp F.",
            "VernacStartTheoremProof",
            "3361ccef82e65f39fb0984ac9e3998a0fdda4584"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "by apply filterdiff_opp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterdiff_plus (F : (V * V -> Prop) -> Prop) : filterdiff (fun u => plus (fst u) (snd u)) F (fun u => plus (fst u) (snd u)).",
            "VernacStartTheoremProof",
            "d231d53f945e7dcfa138a4e759be6a663dc5866e"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "by apply is_linear_plus.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => x Hx eps.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Hx ; exists eps => u /= Hu.",
            "VernacExtend",
            "f87f5dcbbbd1d0c1de626f08d5b75b0699bfd535"
        ],
        [
            "set v := plus (plus _ _) _.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "replace v with (minus (plus (fst u) (snd u)) (plus (fst x) (snd x))).",
            "VernacExtend",
            "2505fac495176adfb49e7ed787604555fa709ea2"
        ],
        [
            "rewrite /minus plus_opp_r norm_zero.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmult_le_pos.",
            "VernacExtend",
            "e03207c3cef85471384dc0906485b056bc83a80a"
        ],
        [
            "by apply Rlt_le, eps.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply sqrt_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /v /minus -!plus_assoc ; apply f_equal.",
            "VernacExtend",
            "1775b3adc7dd915cdc7d26d03365d16d21a7694e"
        ],
        [
            "rewrite opp_plus plus_comm -!plus_assoc ; apply f_equal, @plus_comm.",
            "VernacExtend",
            "d528905e309b0a1ef79ff28a14a9d1dabd27e2c3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_filterdiff_plus (F : (V * V -> Prop) -> Prop) : ex_filterdiff (fun u => plus (fst u) (snd u)) F.",
            "VernacStartTheoremProof",
            "41174faf111986ab98cb2e95a921f3e59e6dc2fa"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "by apply filterdiff_plus.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterdiff_minus (F : (V * V -> Prop) -> Prop) : filterdiff (fun u => minus (fst u) (snd u)) F (fun u => minus (fst u) (snd u)).",
            "VernacStartTheoremProof",
            "6bfb05bb8ff6fb19a97cad4d61b02d17320f6ac3"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply (is_linear_comp (fun u => (fst u, opp (snd u))) (fun u => plus (fst u) (snd u))).",
            "VernacExtend",
            "b6835ed474d4caeea2b3ee29fb94f9aa0620b91b"
        ],
        [
            "apply is_linear_prod.",
            "VernacExtend",
            "435b3ddf29c095ab708a3ef4dac77051350a9ad9"
        ],
        [
            "by apply is_linear_fst.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_linear_comp.",
            "VernacExtend",
            "1fdc9e0b62d262d8c99d3adff3a6e5212973ed59"
        ],
        [
            "by apply is_linear_snd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply is_linear_opp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply is_linear_plus.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => x Hx eps.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Hx ; exists eps => u Hu.",
            "VernacExtend",
            "f87f5dcbbbd1d0c1de626f08d5b75b0699bfd535"
        ],
        [
            "simpl fst ; simpl snd.",
            "VernacExtend",
            "91b2d0ba752840f71f6d55007c83e13df72f2d45"
        ],
        [
            "set v := minus (plus _ (opp (fst x))) _.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "replace v with (minus (minus (fst u) (snd u)) (minus (fst x) (snd x))).",
            "VernacExtend",
            "7b0f6ce083138d3b94e04dcfc352463dc7471e56"
        ],
        [
            "rewrite /minus plus_opp_r norm_zero.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmult_le_pos.",
            "VernacExtend",
            "e03207c3cef85471384dc0906485b056bc83a80a"
        ],
        [
            "by apply Rlt_le, eps.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply sqrt_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /v /minus -!plus_assoc ; apply f_equal.",
            "VernacExtend",
            "1775b3adc7dd915cdc7d26d03365d16d21a7694e"
        ],
        [
            "rewrite !opp_plus !opp_opp plus_comm -!plus_assoc ; apply f_equal, @plus_comm.",
            "VernacExtend",
            "d528905e309b0a1ef79ff28a14a9d1dabd27e2c3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_filterdiff_minus (F : (V * V -> Prop) -> Prop) : ex_filterdiff (fun u => minus (fst u) (snd u)) F.",
            "VernacStartTheoremProof",
            "33aa8c723d3e936e6a3553d8916ecc33d94bc2a4"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "by apply filterdiff_minus.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Ltac plus_grab e := repeat rewrite (plus_assoc _ e) -(plus_comm e) -(plus_assoc e).",
            "VernacExtend",
            "8b55da577eafe830bc6d0cff040027dfcb304ab0"
        ],
        [
            "Lemma filterdiff_scal : forall {F : (K * V -> Prop) -> Prop} {FF : ProperFilter F} (x : K * V), is_filter_lim F x -> (forall (n m : K), mult n m = mult m n) -> filterdiff (fun t : K * V => scal (fst t) (snd t)) F (fun t => plus (scal (fst t) (snd x)) (scal (fst x) (snd t))).",
            "VernacStartTheoremProof",
            "1449253a2c1e6be0f074df7f65607176b4d1e64a"
        ],
        [
            "move => F FF [x1 x2] Hx Hcomm ; split.",
            "VernacExtend",
            "22de1c5faad21de60fd48f882c8175e01347018a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply (is_linear_comp (fun t : K * V => (scal (fst t) x2,scal x1 (snd t))) (fun t : V * V => plus (fst t) (snd t))).",
            "VernacExtend",
            "b56832c9455705f6da75b71dbc3216933ff052f4"
        ],
        [
            "apply is_linear_prod.",
            "VernacExtend",
            "435b3ddf29c095ab708a3ef4dac77051350a9ad9"
        ],
        [
            "apply (is_linear_comp (fun t : K * V => fst t) (fun k : K => scal k x2)).",
            "VernacExtend",
            "2023231c19b89bac8c0f8892b6ae854ddc9a2b3f"
        ],
        [
            "by apply is_linear_fst.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply is_linear_scal_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_linear_comp.",
            "VernacExtend",
            "1fdc9e0b62d262d8c99d3adff3a6e5212973ed59"
        ],
        [
            "by apply is_linear_snd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply is_linear_scal_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_linear_plus.",
            "VernacExtend",
            "d074091aebb46b37a11dc189a51dae43c55e05cb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move => y Hy eps.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "replace y with (x1,x2).",
            "VernacExtend",
            "f72d5ffcd95c7e64593bc2ce702bdddfd9c5226e"
        ],
        [
            "2: now apply is_filter_lim_unique with (1 := Hx).",
            "VernacExtend",
            "d68555ec6b29c6e4bcb668a2cc5be138cb11f85e"
        ],
        [
            "clear y Hy.",
            "VernacExtend",
            "add6ef95144b903dafbe98a8d9a1d1bd2a785214"
        ],
        [
            "apply Hx ; clear Hx.",
            "VernacExtend",
            "a2091597138b99efa5f4e45e15bd32ecbc7fcdb7"
        ],
        [
            "apply: locally_le_locally_norm.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "exists eps.",
            "VernacExtend",
            "c7af48b9f65cab7cfe7f63abbdd2c6bef269dc77"
        ],
        [
            "intros [y1 y2] H.",
            "VernacExtend",
            "3bb63001f971650e88da56c271ed20eb0d6908ea"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "set v := minus (minus _ _) _.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "replace v with (scal (minus y1 x1) (minus y2 x2)).",
            "VernacExtend",
            "255deae020a9f0ac2c114c15edb6a83207fd9117"
        ],
        [
            "apply Rle_trans with (1 := norm_scal _ _).",
            "VernacExtend",
            "390f5f463f33bfdb73a3ec20174bbd4f53904a9b"
        ],
        [
            "generalize (proj1 (sqrt_plus_sqr (abs (minus y1 x1)) (norm (minus y2 x2)))).",
            "VernacExtend",
            "210bd51b82c53b2630008ce941e7dd9e516c213b"
        ],
        [
            "rewrite -> Rabs_pos_eq by apply abs_ge_0.",
            "VernacExtend",
            "de783fa0b847329eafcad2a54b24930868635839"
        ],
        [
            "rewrite -> Rabs_pos_eq by apply norm_ge_0.",
            "VernacExtend",
            "e84b80bf597463d4b092d448c2136b92ecb34241"
        ],
        [
            "intros H'.",
            "VernacExtend",
            "d7903418c9c01fda86d2cc847b39424719d50154"
        ],
        [
            "apply Rmult_le_compat.",
            "VernacExtend",
            "99a65cd1efb8e35313415d4b052731e2b0746daf"
        ],
        [
            "apply abs_ge_0.",
            "VernacExtend",
            "bfeacd2623650e88fd1e5d792e3438edb9d12256"
        ],
        [
            "apply norm_ge_0.",
            "VernacExtend",
            "42acb6605dbb074d8f6aa3d2b2181e0abfe4687b"
        ],
        [
            "apply Rlt_le, Rle_lt_trans with (2 := H).",
            "VernacExtend",
            "66c1c7e0a4e3722479cb5dc3adb5f94041be2014"
        ],
        [
            "apply Rle_trans with (2 := H').",
            "VernacExtend",
            "d3add713107f59c1c441ad8ebf59a614d64843d4"
        ],
        [
            "apply Rmax_l.",
            "VernacExtend",
            "e8bdf305d751b877364ec9794b15c2d6e134dc98"
        ],
        [
            "apply Rle_trans with (2 := H').",
            "VernacExtend",
            "d3add713107f59c1c441ad8ebf59a614d64843d4"
        ],
        [
            "apply Rmax_r.",
            "VernacExtend",
            "d3f964851377911a5dafd3727673be093a2b343f"
        ],
        [
            "rewrite /v /minus !scal_distr_l !scal_distr_r !opp_plus !scal_opp_r !scal_opp_l !opp_opp -!plus_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "plus_grab (opp (scal x1 y2)).",
            "VernacExtend",
            "0f62f0948a8a9b2a3933709034131464667199b9"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "plus_grab (opp (scal y1 x2)).",
            "VernacExtend",
            "860fe3510641ab047ca84b6e94e867752f754763"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "by rewrite plus_assoc plus_opp_l plus_zero_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_filterdiff_scal : forall {F} {FF : ProperFilter F} (x : K * V), is_filter_lim F x -> (forall (n m : K), mult n m = mult m n) -> ex_filterdiff (fun t : K * V => scal (fst t) (snd t)) F.",
            "VernacStartTheoremProof",
            "d97a90b141dc936046436d2d5bd3caf19c6e5edf"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "by apply (filterdiff_scal x).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterdiff_scal_l : forall {F} {FF : Filter F} (x : V), filterdiff (fun k : K => scal k x) F (fun k => scal k x).",
            "VernacStartTheoremProof",
            "d7b402842d4395508836655c22ed9cc36bb1a4db"
        ],
        [
            "move => F FF x.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply filterdiff_linear.",
            "VernacExtend",
            "67ab310bfac2992bdb59f8962825c6990dd81fa3"
        ],
        [
            "by apply is_linear_scal_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_filterdiff_scal_l : forall {F} {FF : Filter F} (x : V), ex_filterdiff (fun k : K => scal k x) F.",
            "VernacStartTheoremProof",
            "4a3419b42182838040331d4d1008ee71c9a81042"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "by apply (filterdiff_scal_l x).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterdiff_scal_r : forall {F} {FF : Filter F} (k : K), (forall (n m : K), mult n m = mult m n) -> filterdiff (fun x : V => scal k x) F (fun x => scal k x).",
            "VernacStartTheoremProof",
            "b99c3d6d5871f3fcd2c7a51dcc8104d484b3b4f6"
        ],
        [
            "move => F FF x Hcomm.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply filterdiff_linear.",
            "VernacExtend",
            "67ab310bfac2992bdb59f8962825c6990dd81fa3"
        ],
        [
            "by apply is_linear_scal_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_filterdiff_scal_r : forall {F} {FF : Filter F} (k : K), (forall (n m : K), mult n m = mult m n) -> ex_filterdiff (fun x : V => scal k x) F.",
            "VernacStartTheoremProof",
            "48cc6bfd98cc53c25a4111b549355efbd1f2c233"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "by apply (filterdiff_scal_r k).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Operations.",
            "VernacEndSegment",
            "b9526c6451006d725a567d510c3427b74baab59b"
        ],
        [
            "Lemma filterdiff_mult {K : AbsRing} : forall {F} {FF : ProperFilter F} (x : K * K), is_filter_lim F x -> (forall (n m : K), mult n m = mult m n) -> filterdiff (fun t : K * K => mult (fst t) (snd t)) F (fun t => plus (mult (fst t) (snd x)) (mult (fst x) (snd t))).",
            "VernacStartTheoremProof",
            "8f753248f333eee5f138c8bdb73e70db59530572"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (filterdiff_scal x H H0) ; by simpl.",
            "VernacExtend",
            "1d49b30486130d03a27fb5afc2153c10da44d2bb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_filterdiff_mult {K : AbsRing} : forall {F} {FF : ProperFilter F} (x : K * K), is_filter_lim F x -> (forall (n m : K), mult n m = mult m n) -> ex_filterdiff (fun t : K * K => mult (fst t) (snd t)) F.",
            "VernacStartTheoremProof",
            "f5ea2df1800863f4953852148b788752b00e3513"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "by apply (filterdiff_mult x).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Operations_fct.",
            "VernacBeginSection",
            "25195cf1d2723275d3962316581ceb301cb6bf67"
        ],
        [
            "Context {K : AbsRing} {U V : NormedModule K}.",
            "VernacContext",
            "4a503217da2381577a412383dd086317381da049"
        ],
        [
            "Lemma filterdiff_opp_fct {F} {FF : Filter F} (f lf : U -> V) : filterdiff f F lf -> filterdiff (fun t => opp (f t)) F (fun t => opp (lf t)).",
            "VernacStartTheoremProof",
            "cf3179a2d8ca85c17163a1687071699ed9a46ddd"
        ],
        [
            "intro Df.",
            "VernacExtend",
            "4b7386dcf990a147b263e402da4c79a5c5998382"
        ],
        [
            "apply filterdiff_comp.",
            "VernacExtend",
            "8198bca4a8e18215aeb5f541ae61ff21ce0fa52e"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply filterdiff_opp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_filterdiff_opp_fct {F} {FF : Filter F} (f : U -> V) : ex_filterdiff f F -> ex_filterdiff (fun t => opp (f t)) F.",
            "VernacStartTheoremProof",
            "b99cc537b283a1c0f02cf113a7801f5c93cf2f2b"
        ],
        [
            "intros [lf Df].",
            "VernacExtend",
            "01647209034684c603f731eaf874444e4ce8aecd"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "apply filterdiff_opp_fct ; eassumption.",
            "VernacExtend",
            "15d3a911da983ac983e8bfff71fdc68c25bc905b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterdiff_plus_fct {F} {FF : Filter F} (f g : U -> V) (lf lg : U -> V) : filterdiff f F lf -> filterdiff g F lg -> filterdiff (fun u => plus (f u) (g u)) F (fun u => plus (lf u) (lg u)).",
            "VernacStartTheoremProof",
            "f1cfb67dc13f6464f87a5f9abc4dcd475ff4399b"
        ],
        [
            "intros Df Dg.",
            "VernacExtend",
            "1a4882372653d6487683152cc8ed5a4d4f734998"
        ],
        [
            "apply filterdiff_comp_2.",
            "VernacExtend",
            "cc78a5e980d928e46e75c4358959223fe3f77222"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply filterdiff_plus.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_filterdiff_plus_fct {F} {FF : Filter F} (f g : U -> V) : ex_filterdiff f F -> ex_filterdiff g F -> ex_filterdiff (fun u => plus (f u) (g u)) F.",
            "VernacStartTheoremProof",
            "1f82e579746f08310164b3917052be26eb118633"
        ],
        [
            "intros [lf Df] [lg Dg].",
            "VernacExtend",
            "bdd5e050dc7d12577e233c42cf3ac421f1c778e8"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "apply filterdiff_plus_fct ; eassumption.",
            "VernacExtend",
            "0ced37fd18eb81c81c0a665b41dfcacdedb4bee5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterdiff_iter_plus_fct {I} {F} {FF : Filter F} (l : list I) (f : I -> U -> V) df (x : U) : (forall (j : I), List.In j l -> filterdiff (f j) F (df j)) -> filterdiff (fun y => iter plus zero l (fun j => f j y)) F (fun x => iter plus zero l (fun j => df j x)).",
            "VernacStartTheoremProof",
            "e84aba72446ddc3624e2df5257b55f53fd95198c"
        ],
        [
            "intros Hf.",
            "VernacExtend",
            "0a34d3f570a7fa7521ff666decd218fe609c954f"
        ],
        [
            "induction l ; simpl in * |- *.",
            "VernacExtend",
            "77d489f05e8dcd65199cf02c2067f98cb8dbba51"
        ],
        [
            "apply filterdiff_const.",
            "VernacExtend",
            "c4a3824a24254aaf40d1d1004814f7d9b4bb02eb"
        ],
        [
            "apply filterdiff_plus_fct.",
            "VernacExtend",
            "8bad168987739e3284635e6f026dff72e0b9104f"
        ],
        [
            "apply Hf.",
            "VernacExtend",
            "44e8b4102d20ba355038f72fc52240fc6cb8650c"
        ],
        [
            "by left.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply IHl ; intros.",
            "VernacExtend",
            "17c41ee74699ffcb3889dae4c0a533d241b6287b"
        ],
        [
            "apply Hf.",
            "VernacExtend",
            "44e8b4102d20ba355038f72fc52240fc6cb8650c"
        ],
        [
            "by right.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterdiff_minus_fct {F} {FF : Filter F} (f g : U -> V) (lf lg : U -> V) : filterdiff f F lf -> filterdiff g F lg -> filterdiff (fun u => minus (f u) (g u)) F (fun u => minus (lf u) (lg u)).",
            "VernacStartTheoremProof",
            "f81fd6264754fda7099616c86caacaa9c002b3fe"
        ],
        [
            "intros Df Dg.",
            "VernacExtend",
            "1a4882372653d6487683152cc8ed5a4d4f734998"
        ],
        [
            "apply filterdiff_comp_2.",
            "VernacExtend",
            "cc78a5e980d928e46e75c4358959223fe3f77222"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply filterdiff_minus.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_filterdiff_minus_fct {F} {FF : Filter F} (f g : U -> V) : ex_filterdiff f F -> ex_filterdiff g F -> ex_filterdiff (fun u => minus (f u) (g u)) F.",
            "VernacStartTheoremProof",
            "3db905e04187f0eb8aac0336bb14315998f63dfb"
        ],
        [
            "intros [lf Df] [lg Dg].",
            "VernacExtend",
            "bdd5e050dc7d12577e233c42cf3ac421f1c778e8"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "apply filterdiff_minus_fct ; eassumption.",
            "VernacExtend",
            "4e6f6226cb28ecf9577088ad3666b2306864bfc3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterdiff_scal_fct x (f : U -> K) (g : U -> V) lf lg : (forall (n m : K), mult n m = mult m n) -> filterdiff f (locally x) lf -> filterdiff g (locally x) lg -> filterdiff (fun t => scal (f t) (g t)) (locally x) (fun t => plus (scal (lf t) (g x)) (scal (f x) (lg t))).",
            "VernacStartTheoremProof",
            "6cd6a426a7f25ab42f53206882e6938c29dc1814"
        ],
        [
            "intros Hcomm Df Dg.",
            "VernacExtend",
            "8f7aec139cb9cad16b3164f86dc492de0fccd406"
        ],
        [
            "apply (filterdiff_comp'_2 f g scal x lf lg (fun k v => plus (scal k (g x)) (scal (f x) v))) => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply (filterdiff_scal (f x, g x)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_filterdiff_scal_fct x (f : U -> K) (g : U -> V) : (forall (n m : K), mult n m = mult m n) -> ex_filterdiff f (locally x) -> ex_filterdiff g (locally x) -> ex_filterdiff (fun t => scal (f t) (g t)) (locally x).",
            "VernacStartTheoremProof",
            "305022dc406a5235cc5c91f17e12a17bf2e41f1b"
        ],
        [
            "intros Hcomm [lf Df] [lg Dg].",
            "VernacExtend",
            "e8b4ea15c7f1fd9146cc56fdcaa92d42650428d2"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "apply (filterdiff_scal_fct x) ; eassumption.",
            "VernacExtend",
            "9d11eb9d9053dd653fa75991d76d0e456169c7e4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterdiff_scal_l_fct : forall {F} {FF : Filter F} (x : V) (f : U -> K) lf, filterdiff f F lf -> filterdiff (fun u => scal (f u) x) F (fun u => scal (lf u) x).",
            "VernacStartTheoremProof",
            "17af9a9de1b695146ed802aee680bf66561df9c1"
        ],
        [
            "move => F FF x f lf Df.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply (filterdiff_comp f (fun k => scal k x) lf (fun k => scal k x)).",
            "VernacExtend",
            "0e2159fa145f156a1b1a878bc1d5d0acc4184033"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply filterdiff_linear.",
            "VernacExtend",
            "67ab310bfac2992bdb59f8962825c6990dd81fa3"
        ],
        [
            "by apply is_linear_scal_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_filterdiff_scal_l_fct : forall {F} {FF : Filter F} (x : V) (f : U -> K), ex_filterdiff f F -> ex_filterdiff (fun u => scal (f u) x) F.",
            "VernacStartTheoremProof",
            "2add8edbe0ab5ba27fb883761856ad07095fd22b"
        ],
        [
            "intros F FF x f [lf Df].",
            "VernacExtend",
            "880fbbb81f0f591271b186f606932c081ffe4604"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "apply (filterdiff_scal_l_fct x) ; eassumption.",
            "VernacExtend",
            "4b30a9e4d5b44c44de9db7ab952388c80b3dc1f3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterdiff_scal_r_fct : forall {F} {FF : Filter F} (k : K) (f lf : U -> V), (forall (n m : K), mult n m = mult m n) -> filterdiff f F lf -> filterdiff (fun x => scal k (f x)) F (fun x => scal k (lf x)).",
            "VernacStartTheoremProof",
            "2a5d7ee30c5106535ec67faed615da4e122710c1"
        ],
        [
            "move => F FF k f lf Hcomm Df.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply (filterdiff_comp f (fun x => scal k x) lf (fun x => scal k x)).",
            "VernacExtend",
            "dfe78589b9167e88099ff9a69674cb9c9883e163"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply filterdiff_linear.",
            "VernacExtend",
            "67ab310bfac2992bdb59f8962825c6990dd81fa3"
        ],
        [
            "by apply is_linear_scal_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_filterdiff_scal_r_fct : forall {F} {FF : Filter F} (k : K) (f : U -> V), (forall (n m : K), mult n m = mult m n) -> ex_filterdiff f F -> ex_filterdiff (fun x => scal k (f x)) F.",
            "VernacStartTheoremProof",
            "cabe0b2046bd008f9f626c907f9e22905977afa1"
        ],
        [
            "move => F FF k f Hcomm [lf Df].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "apply (filterdiff_scal_r_fct k) ; eassumption.",
            "VernacExtend",
            "8dc87734b287a623f5adab23bc309c9bc5801af7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Operations_fct.",
            "VernacEndSegment",
            "f272592cb806b3361be07233e20d45933d5d5e5c"
        ],
        [
            "Lemma filterdiff_mult_fct {K : AbsRing} {U : NormedModule K} (f g : U -> K) x (lf lg : U -> K) : (forall (n m : K), mult n m = mult m n) -> filterdiff f (locally x) lf -> filterdiff g (locally x) lg -> filterdiff (fun t => mult (f t) (g t)) (locally x) (fun t => plus (mult (lf t) (g x)) (mult (f x) (lg t))).",
            "VernacStartTheoremProof",
            "a85e294631158a1c8d53e753bef0abed048e99dc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "by apply @filterdiff_scal_fct.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_filterdiff_mult_fct {K : AbsRing} {U : NormedModule K} (f g : U -> K) x : (forall (n m : K), mult n m = mult m n) -> ex_filterdiff f (locally x) -> ex_filterdiff g (locally x) -> ex_filterdiff (fun t => mult (f t) (g t)) (locally x).",
            "VernacStartTheoremProof",
            "5de668d97167f8eb477b90b97d55499a88a1d91b"
        ],
        [
            "intros Hcomm [lf Df] [lg Dg].",
            "VernacExtend",
            "e8b4ea15c7f1fd9146cc56fdcaa92d42650428d2"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "apply @filterdiff_mult_fct ; eassumption.",
            "VernacExtend",
            "7990d40d1e2ad8006296974777bfd540502c0cc0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Derive.",
            "VernacBeginSection",
            "f9ee7f6c961654071977dff0b5c97bda7cf9973d"
        ],
        [
            "Context {K : AbsRing} {V : NormedModule K}.",
            "VernacContext",
            "3b61d1aae35ebd0170cfa463dc9750aa874e5a6f"
        ],
        [
            "Definition is_derive (f : K -> V) (x : K) (l : V) := filterdiff f (locally x) (fun y : K => scal y l).",
            "VernacDefinition",
            "f82ded0ec9227e5a5c648d02a62118d8fb8ef9f2"
        ],
        [
            "Definition ex_derive (f : K -> V) (x : K) := exists l : V, is_derive f x l.",
            "VernacDefinition",
            "f45623c60c511aadd92e65fa5866544e3df9e05e"
        ],
        [
            "Lemma ex_derive_filterdiff : forall (f : K -> V) (x : K), ex_derive f x <-> ex_filterdiff f (locally x).",
            "VernacStartTheoremProof",
            "84d411a7df938dce20615bb8dd028bbdfeaf4138"
        ],
        [
            "intros f x.",
            "VernacExtend",
            "17eeb72cbf88f3c852dbf90a9cad3586b50f2467"
        ],
        [
            "split ; case => d Df.",
            "VernacExtend",
            "7693ea0446b60093c0a33dc7341b41ab06f1698f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "exact Df.",
            "VernacExtend",
            "3a64957ca6a79d500dc820287f99e81ce509e3a9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists (d one).",
            "VernacExtend",
            "cf1d5e317adf1e79d2f8f2eef0074708a9867343"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply is_linear_scal_l.",
            "VernacExtend",
            "d0530c5151632dff8c1ccc42142c6f1bff19540a"
        ],
        [
            "simpl => t Ht.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "destruct Df as [Ld Df].",
            "VernacExtend",
            "55eca7cae6199d4aedd14e47ed323015ccd48e93"
        ],
        [
            "simpl in Df.",
            "VernacExtend",
            "00dba9f492a7df6b14d60d68483e2ecc285fe17c"
        ],
        [
            "apply domin_rw_r with (2 := Df t Ht).",
            "VernacExtend",
            "189462535723bc9f50718e8beac14754843798f4"
        ],
        [
            "apply equiv_ext_loc.",
            "VernacExtend",
            "79d296850be857cb1709e2a39fd36ae899246ef3"
        ],
        [
            "apply filter_imp with (2 := filter_true) => y /= _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "rewrite -linear_scal //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal, sym_eq, mult_one_r.",
            "VernacExtend",
            "e74f49ff4cadbce9d531971b75bbe7d504d7e59d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_derive_continuous (f : K -> V) (x : K) : ex_derive f x -> continuous f x.",
            "VernacStartTheoremProof",
            "1e9ad2e082ce2ca5f93e2814fce3a42bf7c4991b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply @filterdiff_continuous.",
            "VernacExtend",
            "deefab8a9bff0233473233918410d8d764671aab"
        ],
        [
            "by apply ex_derive_filterdiff.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Derive.",
            "VernacEndSegment",
            "4fc4ed4027cdd6e0c4e608ee7501e774bfeddbd0"
        ],
        [
            "Definition Derive (f : R -> R) (x : R) := real (Lim (fun h => (f (x+h) - f x)/h) 0).",
            "VernacDefinition",
            "06e89be00e5f69a37163f2395141f36c98f441dd"
        ],
        [
            "Lemma is_derive_Reals (f : R -> R) (x l : R) : is_derive f x l <-> derivable_pt_lim f x l.",
            "VernacStartTheoremProof",
            "ffef7e2cd8235a90e1d117ab2c2689d8368b0011"
        ],
        [
            "apply iff_sym.",
            "VernacExtend",
            "b1ce2fe48198e9497b65e9af18e608fad1344b79"
        ],
        [
            "split => Hf.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply @is_linear_scal_l.",
            "VernacExtend",
            "a35a7f17cfc34ccf9c304f3922f21fd1183f7c15"
        ],
        [
            "simpl => y Hy eps.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -(is_filter_lim_locally_unique _ _ Hy) ; clear y Hy.",
            "VernacExtend",
            "28e0e2cef1bd7505fe54d32979375cb52b3679d3"
        ],
        [
            "case: (Hf eps (cond_pos _)) => {Hf} d Hf.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists d => y /= Hy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (Req_dec y x) => Hxy.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite Hxy /norm /scal /= /abs /minus /plus /opp /mult /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "ring_simplify (f x + - f x + - ((x + - x) * l)).",
            "VernacExtend",
            "88a61b6ab5367a4390090f5f68bab8eebdbda1e3"
        ],
        [
            "ring_simplify (x + - x).",
            "VernacExtend",
            "a6b0472d1eba2f37629527ad202470afb7ee9307"
        ],
        [
            "rewrite Rabs_R0 Rmult_0_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Rle_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rle_div_l.",
            "VernacExtend",
            "300a9124ae599e97b5c7dcc1ad678aa6b0fecb98"
        ],
        [
            "apply Rabs_pos_lt.",
            "VernacExtend",
            "e7789cb0a3c08fb3fbbda456620a8022b26229ce"
        ],
        [
            "by apply Rminus_eq_contra.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -Rabs_div.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "2: by apply Rminus_eq_contra.",
            "VernacExtend",
            "42cf05b0c5cd7515ffd5d7bb186f381ddeb0d8c5"
        ],
        [
            "rewrite /scal /= /minus /plus /opp /mult /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace ((f y + - f x + - ((y + - x) * l)) / (y + - x)) with ((f (x + (y-x)) - f x) / (y-x) - l).",
            "VernacExtend",
            "f59ef4ce31e9f5b6dc3a41bad3099fc918dcaf7a"
        ],
        [
            "2: ring_simplify (x + (y - x)) ; field ; by apply Rminus_eq_contra.",
            "VernacExtend",
            "086acc685edcd46d8f0a8db934b12a668533aee1"
        ],
        [
            "apply Rlt_le, Hf.",
            "VernacExtend",
            "ef8ce7a78daba5781347149b871dea7a687a9875"
        ],
        [
            "by apply Rminus_eq_contra.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "move => e He.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "destruct Hf as [_ Hf].",
            "VernacExtend",
            "994a2963f5f2ebb88bb9fec8cddc54725df04999"
        ],
        [
            "specialize (Hf x (fun P H => H)).",
            "VernacExtend",
            "5b8a9e3b0478f15030c69b24d0a993f6f07aa19f"
        ],
        [
            "destruct (Hf (pos_div_2 (mkposreal _ He))) as [delta Hd].",
            "VernacExtend",
            "497da351a61abfe7ea8bb0895db6647c0668fdf8"
        ],
        [
            "exists delta => h Hh0 Hh.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rle_lt_trans with (e / 2).",
            "VernacExtend",
            "99d7e8a78f8a8fa70ccd0a7d0f2f38a990a0e8b5"
        ],
        [
            "simpl in Hd.",
            "VernacExtend",
            "8d63f27467b0959e77e788b73feb8327d5b14293"
        ],
        [
            "replace ((f (x + h) - f x) / h - l) with ((f (x + h) + - f x + - ((x + h + - x) * l)) / (x + h + - x)).",
            "VernacExtend",
            "d9186407887a6b4e2f79e8a814884173c8513e22"
        ],
        [
            "2: by field.",
            "VernacExtend",
            "42cf05b0c5cd7515ffd5d7bb186f381ddeb0d8c5"
        ],
        [
            "rewrite Rabs_div.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "2: by ring_simplify (x + h + - x).",
            "VernacExtend",
            "42cf05b0c5cd7515ffd5d7bb186f381ddeb0d8c5"
        ],
        [
            "apply Rle_div_l.",
            "VernacExtend",
            "300a9124ae599e97b5c7dcc1ad678aa6b0fecb98"
        ],
        [
            "now ring_simplify (x + h + - x) ; apply Rabs_pos_lt.",
            "VernacExtend",
            "fc21f0aaa10edc691ca75db31e3c266df5573407"
        ],
        [
            "apply Hd.",
            "VernacExtend",
            "b2c76316200582fcad9318af1ed397a8dea483e3"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /= /abs /minus /plus /opp /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by ring_simplify (x + h + - x).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rlt_div_l, Rminus_lt_0 ; ring_simplify.",
            "VernacExtend",
            "d9174c68fa506aa873532c2980622d190e869659"
        ],
        [
            "by apply Rlt_0_2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_derive_unique f x l : is_derive f x l -> Derive f x = l.",
            "VernacStartTheoremProof",
            "52feddbad8f5e83c057734abb1c60f76a04e8da5"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "apply (@f_equal _ _ real _ l).",
            "VernacExtend",
            "5c25a6583c34645d1024a794e495b91cb860f495"
        ],
        [
            "apply is_lim_unique.",
            "VernacExtend",
            "dae3243103dd458b8bf69808c8c75b5d97ae46f2"
        ],
        [
            "apply is_lim_spec.",
            "VernacExtend",
            "6a433fd37843c6d7f4bc73e6cfa945c5042b65eb"
        ],
        [
            "apply is_derive_Reals in H.",
            "VernacExtend",
            "55f80d8e94a4b84acc81cc1bacd988c44e1138b2"
        ],
        [
            "intros eps.",
            "VernacExtend",
            "786caed5d6705ffc7435ecfd5604e33c6ecd43f1"
        ],
        [
            "destruct (H eps (cond_pos _)) as [d Hd].",
            "VernacExtend",
            "74ebf7d2f1c06e1524a2fcebba68107a958250c1"
        ],
        [
            "exists d => h.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /= /minus /plus /opp /= Ropp_0 Rplus_0_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "intros Hu Zu.",
            "VernacExtend",
            "d5a622830c6bd71d46effbdf583b764640cb660e"
        ],
        [
            "now apply Hd.",
            "VernacExtend",
            "15c9c6e291f7dbf0a6c15cab84ce6f5db83fe740"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Derive_correct f x : ex_derive f x -> is_derive f x (Derive f x).",
            "VernacStartTheoremProof",
            "e20495c59d2798d111f19c34c87288005ca9b5b9"
        ],
        [
            "intros (l,H).",
            "VernacExtend",
            "3fda3140394abbcf85ec93d7935c462cf104be2c"
        ],
        [
            "cut (Derive f x = l).",
            "VernacExtend",
            "1f41b1238ede34eaab105b210f6c291c3cd85fde"
        ],
        [
            "intros ; rewrite H0 ; apply H.",
            "VernacExtend",
            "c427248083a030663c551b953879e257985ecf38"
        ],
        [
            "apply is_derive_unique, H.",
            "VernacExtend",
            "4caa5433a821d1a1cd0649413a9d6a8a680e73b9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_derive_Reals_0 (f : R -> R) (x : R) : ex_derive f x -> derivable_pt f x.",
            "VernacStartTheoremProof",
            "a43b72a1321b6e2da54550beedfce2e9702195f7"
        ],
        [
            "move => Hf.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Derive_correct in Hf.",
            "VernacExtend",
            "5528005cf5309cfee5c3cec889d823f4b79da1e3"
        ],
        [
            "apply is_derive_Reals in Hf.",
            "VernacExtend",
            "1b974fe7646b45fe6f1b41d99cc7423f52d53f6b"
        ],
        [
            "by exists (Derive f x).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_derive_Reals_1 (f : R -> R) (x : R) : derivable_pt f x -> ex_derive f x.",
            "VernacStartTheoremProof",
            "cceb21a9073f1258d00c73368872147f8694a877"
        ],
        [
            "case => l Hf.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists l.",
            "VernacExtend",
            "9ca96dacfce153d20a69dd7ea7c7254236074950"
        ],
        [
            "now apply is_derive_Reals.",
            "VernacExtend",
            "07d895ad9f1058e7afe5c6efe4fba0d1bcc64e6a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Derive_Reals (f : R -> R) (x : R) (pr : derivable_pt f x) : derive_pt f x pr = Derive f x.",
            "VernacStartTheoremProof",
            "10f420ce093b997a488de8757c6911d56b0424df"
        ],
        [
            "apply sym_eq, is_derive_unique.",
            "VernacExtend",
            "f4345b3d4d1256427b61a2b67e933c43059d651b"
        ],
        [
            "case: pr => /= l Hf.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "now apply is_derive_Reals.",
            "VernacExtend",
            "07d895ad9f1058e7afe5c6efe4fba0d1bcc64e6a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Extensionality.",
            "VernacBeginSection",
            "fef2c0825b072d51bff37065769e1dd7dcbe3238"
        ],
        [
            "Context {K : AbsRing} {V : NormedModule K}.",
            "VernacContext",
            "3b61d1aae35ebd0170cfa463dc9750aa874e5a6f"
        ],
        [
            "Lemma is_derive_ext_loc : forall (f g : K -> V) (x : K) (l : V), locally x (fun t : K => f t = g t) -> is_derive f x l -> is_derive g x l.",
            "VernacStartTheoremProof",
            "3be62849a371076ea4be82656e0afab0aba9460f"
        ],
        [
            "intros f g x l Heq Hf.",
            "VernacExtend",
            "1ca2ac68e002da43dc388fa11dd682b759934912"
        ],
        [
            "now apply (filterdiff_ext_locally f g _ _ Heq).",
            "VernacExtend",
            "dfe8cd5426f35b95e68a2a3b04426682f824edff"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_derive_ext_loc : forall (f g : K -> V) (x : K), locally x (fun t : K => f t = g t) -> ex_derive f x -> ex_derive g x.",
            "VernacStartTheoremProof",
            "c34d8a8cd100b23a33eb6b2b176c8b04cdbebfea"
        ],
        [
            "intros f g x Hfg (l,Hf).",
            "VernacExtend",
            "65665b91ff0affd8982ed67bff3e1ec184b73084"
        ],
        [
            "exists l.",
            "VernacExtend",
            "9ca96dacfce153d20a69dd7ea7c7254236074950"
        ],
        [
            "apply: is_derive_ext_loc Hfg Hf.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_derive_ext : forall (f g : K -> V) (x : K) (l : V), (forall t : K, f t = g t) -> is_derive f x l -> is_derive g x l.",
            "VernacStartTheoremProof",
            "3e40dc0dc8098b78ebfd0815ff21b85db7b90139"
        ],
        [
            "intros f g x l Heq Hf.",
            "VernacExtend",
            "1ca2ac68e002da43dc388fa11dd682b759934912"
        ],
        [
            "apply: filterdiff_ext_locally Hf.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by apply filter_forall.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_derive_ext : forall (f g : K -> V) (x : K), (forall t : K, f t = g t) -> ex_derive f x -> ex_derive g x.",
            "VernacStartTheoremProof",
            "df7fc3e727a07dd08eb57ef68f206afdb3266b27"
        ],
        [
            "intros f g x Heq [l Hf].",
            "VernacExtend",
            "bbc5b3902d08a5bed97c4abdac19b7518098a1ab"
        ],
        [
            "exists l ; move: Hf ; by apply is_derive_ext.",
            "VernacExtend",
            "49d70f8224945fa7a3be12a41d898e6accf26458"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Extensionality.",
            "VernacEndSegment",
            "35bfb1e3b301b5c235f0f3e32da85761f43fe8ae"
        ],
        [
            "Lemma Derive_ext_loc : forall f g x, locally x (fun t => f t = g t) -> Derive f x = Derive g x.",
            "VernacStartTheoremProof",
            "9ba32f2f1dbae599efb11958b3dd263053a6ac17"
        ],
        [
            "intros f g x Hfg.",
            "VernacExtend",
            "d313788a2e29c73878920823242cec1860f22941"
        ],
        [
            "rewrite /Derive /Lim.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal, Lim_seq_ext_loc.",
            "VernacExtend",
            "913dcc760e7ba5e82d0fff47344f97ddd5391eb1"
        ],
        [
            "apply (filterlim_Rbar_loc_seq 0 (fun h => (f (x + h) - f x) / h = (g (x + h) - g x) / h)).",
            "VernacExtend",
            "270da8ec89960b51291ee0a9d97982fbd633cdd1"
        ],
        [
            "apply (filter_imp (fun h => f (x + h) = g (x + h))).",
            "VernacExtend",
            "caff9be0f3b4e4126c649783f41ee50e1e20d4d2"
        ],
        [
            "intros h ->.",
            "VernacExtend",
            "9d5cbb81f01e3447d542d612a412fe3e1a859c3c"
        ],
        [
            "by rewrite (locally_singleton _ _ Hfg).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "destruct Hfg as [eps He].",
            "VernacExtend",
            "40219ad9beff9cc698b9a58839e2c6a277e7e319"
        ],
        [
            "exists eps => h H Hh.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply He.",
            "VernacExtend",
            "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /= /minus /plus /opp /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "now replace (x + h + - x) with (h - 0) by ring.",
            "VernacExtend",
            "fa1febe2160af4151988c6d778d4ded6589e11a9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Derive_ext : forall f g x, (forall t, f t = g t) -> Derive f x = Derive g x.",
            "VernacStartTheoremProof",
            "9d196c5f02cf7a222493e95c3c2907890f46588a"
        ],
        [
            "intros f g x Hfg.",
            "VernacExtend",
            "d313788a2e29c73878920823242cec1860f22941"
        ],
        [
            "apply Derive_ext_loc.",
            "VernacExtend",
            "be93f4349517e1b02e04bc815146affa1b5f33b8"
        ],
        [
            "by apply filter_forall.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Const.",
            "VernacBeginSection",
            "b05435d7055d170bbb063581d8fcbae76de48f91"
        ],
        [
            "Context {K : AbsRing} {V : NormedModule K}.",
            "VernacContext",
            "3b61d1aae35ebd0170cfa463dc9750aa874e5a6f"
        ],
        [
            "Lemma is_derive_const : forall (a : V) (x : K), is_derive (fun _ : K => a) x zero.",
            "VernacStartTheoremProof",
            "d168af6128c67235e528270c51b38120b367a5b5"
        ],
        [
            "intros a x.",
            "VernacExtend",
            "ae8d2ee1dd9062c21284a844645d4ee7ed35906e"
        ],
        [
            "apply filterdiff_ext_lin with (fun y : K => zero).",
            "VernacExtend",
            "64d1272071eef5f2bdeceebb6895e912356ca099"
        ],
        [
            "apply filterdiff_const.",
            "VernacExtend",
            "c4a3824a24254aaf40d1d1004814f7d9b4bb02eb"
        ],
        [
            "intros y.",
            "VernacExtend",
            "d3cd14babe4904577f05dd23b379c589bf67ea40"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "apply: scal_zero_r.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_derive_const : forall (a : V) (x : K), ex_derive (fun _ => a) x.",
            "VernacStartTheoremProof",
            "f7e05e3e84378c2db374a38ed9b1545d770dcd73"
        ],
        [
            "intros a x.",
            "VernacExtend",
            "ae8d2ee1dd9062c21284a844645d4ee7ed35906e"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "apply is_derive_const.",
            "VernacExtend",
            "0c57570ae21ab9a27b6b5a5df221d9432c67f177"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Const.",
            "VernacEndSegment",
            "a397c97945b02af561d53edbb3f05b83ac7eab87"
        ],
        [
            "Lemma Derive_const : forall (a x : R), Derive (fun _ => a) x = 0.",
            "VernacStartTheoremProof",
            "d51eb14ff979ed49a563feeca60bd75bfcb90d94"
        ],
        [
            "intros a x.",
            "VernacExtend",
            "ae8d2ee1dd9062c21284a844645d4ee7ed35906e"
        ],
        [
            "apply is_derive_unique.",
            "VernacExtend",
            "e8a169466dae5921bc3cfc15bd8d8cf05c765407"
        ],
        [
            "apply: is_derive_const.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Id.",
            "VernacBeginSection",
            "aeae460145d020fafdef9653b6c846ba7a470e5d"
        ],
        [
            "Context {K : AbsRing}.",
            "VernacContext",
            "cdc71fbcdcf81d89fe3229c3d0f9f374ef2ffa20"
        ],
        [
            "Lemma is_derive_id : forall x : K, is_derive (fun t : K => t) x one.",
            "VernacStartTheoremProof",
            "691f2d70318365708f9b3ab72d8b664a64556a3f"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "apply filterdiff_ext_lin with (fun t : K => t).",
            "VernacExtend",
            "092aef31cde1ff905cf9c0a98ac145ddd7ca8fb1"
        ],
        [
            "apply filterdiff_id.",
            "VernacExtend",
            "12259268ad0a0068e2e8b64e904b09a3cdea1818"
        ],
        [
            "rewrite /scal /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "intros y.",
            "VernacExtend",
            "d3cd14babe4904577f05dd23b379c589bf67ea40"
        ],
        [
            "apply sym_eq, mult_one_r.",
            "VernacExtend",
            "234646062785a09fa0b1f76022fef037df416eaa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_derive_id : forall x : K, ex_derive (fun t : K => t) x.",
            "VernacStartTheoremProof",
            "5fda9582ff248fe9e9cb601e62acfffa720ef145"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "apply is_derive_id.",
            "VernacExtend",
            "f48d59a22b6184c077230e9fa12ff9ee2bba6989"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Id.",
            "VernacEndSegment",
            "5b5b21dc2a8c717e751c28bd0086df4f9f79742b"
        ],
        [
            "Lemma Derive_id : forall x, Derive id x = 1.",
            "VernacStartTheoremProof",
            "ed241e0c32c7ec59574a4118e0d0ebba0e042346"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "apply is_derive_unique.",
            "VernacExtend",
            "e8a169466dae5921bc3cfc15bd8d8cf05c765407"
        ],
        [
            "apply: is_derive_id.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Opp.",
            "VernacBeginSection",
            "7eb6458130be04514a0491c28bcf5bfef35c558f"
        ],
        [
            "Context {K : AbsRing} {V : NormedModule K}.",
            "VernacContext",
            "3b61d1aae35ebd0170cfa463dc9750aa874e5a6f"
        ],
        [
            "Lemma is_derive_opp : forall (f : K -> V) (x : K) (l : V), is_derive f x l -> is_derive (fun x => opp (f x)) x (opp l).",
            "VernacStartTheoremProof",
            "d3a6f4d66875f5d07b4165648cabff2304d14829"
        ],
        [
            "intros f x l Df.",
            "VernacExtend",
            "7853ee95954f231d36f60e0393821259daf7c245"
        ],
        [
            "apply filterdiff_ext_lin with (fun t : K => opp (scal t l)).",
            "VernacExtend",
            "22584e04098a765cd36bf0c94279381c640a0e42"
        ],
        [
            "apply filterdiff_comp' with (1 := Df).",
            "VernacExtend",
            "dc49e0da33ba9cc591284df87926dda3e5f937f2"
        ],
        [
            "apply filterdiff_opp.",
            "VernacExtend",
            "b40149a2ebd0c4c388fbce3d9bb0abbb47e107c1"
        ],
        [
            "intros y.",
            "VernacExtend",
            "d3cd14babe4904577f05dd23b379c589bf67ea40"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "apply: scal_opp_r.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_derive_opp : forall (f : K -> V) (x : K), ex_derive f x -> ex_derive (fun x => opp (f x)) x.",
            "VernacStartTheoremProof",
            "f7728f5707f8dfbe2e77422c2aadb47dfbd60324"
        ],
        [
            "intros f x [df Df].",
            "VernacExtend",
            "f82e0bee36f2e12e113253b71f6e19e53076dde1"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "apply is_derive_opp.",
            "VernacExtend",
            "7767bf4312b81b0464dac1a97f5bf95143a8205e"
        ],
        [
            "exact Df.",
            "VernacExtend",
            "3a64957ca6a79d500dc820287f99e81ce509e3a9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Opp.",
            "VernacEndSegment",
            "fbecc9d6bb680229bcbb8eadf799371ade51ec3a"
        ],
        [
            "Lemma Derive_opp : forall f x, Derive (fun x => - f x) x = - Derive f x.",
            "VernacStartTheoremProof",
            "2f5742250da6e09fb1dfb100957b5ca7e21b57a9"
        ],
        [
            "intros f x.",
            "VernacExtend",
            "17eeb72cbf88f3c852dbf90a9cad3586b50f2467"
        ],
        [
            "unfold Derive, Lim.",
            "VernacExtend",
            "917c927a79aab63caa792916dfcd4f139e457ea5"
        ],
        [
            "rewrite /Rbar_loc_seq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -Rbar.Rbar_opp_real.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -Lim_seq_opp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal, Lim_seq_ext => n.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -Ropp_mult_distr_l_reverse.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply (f_equal (fun v => v / _)).",
            "VernacExtend",
            "34324e611822f4403b12ab71ea5b968ef04fd319"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Plus.",
            "VernacBeginSection",
            "d4b1af91fae2ec7a6ef8b9a03dd71d5129664261"
        ],
        [
            "Context {K : AbsRing} {V : NormedModule K}.",
            "VernacContext",
            "3b61d1aae35ebd0170cfa463dc9750aa874e5a6f"
        ],
        [
            "Lemma is_derive_plus : forall (f g : K -> V) (x : K) (df dg : V), is_derive f x df -> is_derive g x dg -> is_derive (fun x => plus (f x) (g x)) x (plus df dg).",
            "VernacStartTheoremProof",
            "314046666b522b4a48f93778fa183e802cc546f0"
        ],
        [
            "intros f g x df dg Df Dg.",
            "VernacExtend",
            "a3d9d5444e55efea191e0601b98f80740b0bb022"
        ],
        [
            "eapply filterdiff_ext_lin.",
            "VernacExtend",
            "95ec423140e8c1a0927774f978482d971b43a652"
        ],
        [
            "apply filterdiff_plus_fct ; try eassumption.",
            "VernacExtend",
            "4809aebadf125d5e2a6c3f68da781e6cb1ea5354"
        ],
        [
            "simpl => y.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite scal_distr_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_derive_plus : forall (f g : K -> V) (x : K), ex_derive f x -> ex_derive g x -> ex_derive (fun x => plus (f x) (g x)) x.",
            "VernacStartTheoremProof",
            "77457517981d687357528bf1443fbc4e9521b9c6"
        ],
        [
            "intros f g x [df Df] [dg Dg].",
            "VernacExtend",
            "cdcbd6ed7a35bb2ba1fbd0508ac56656392b1996"
        ],
        [
            "exists (plus df dg).",
            "VernacExtend",
            "fbd9e153ddbb79704e48e7050f62da4fa9301060"
        ],
        [
            "now apply is_derive_plus.",
            "VernacExtend",
            "d77dc622143a2521b44dfc21b3089648703a2e8a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_derive_sum_n : forall (f : nat -> K -> V) (n : nat) (x : K) (d : nat -> V), (forall k, (k <= n)%nat -> is_derive (f k) x (d k)) -> is_derive (fun y => sum_n (fun k => f k y) n) x (sum_n d n).",
            "VernacStartTheoremProof",
            "ac517440ff6f784ca522177d80d41d007c69c48f"
        ],
        [
            "intros f n x d.",
            "VernacExtend",
            "440708f7b72e016452f1daf38781bba42f2b277b"
        ],
        [
            "elim: n => /= [ | n IH] Hf.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite sum_O.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "eapply is_derive_ext, (Hf O) => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "intros t ; by rewrite sum_O.",
            "VernacExtend",
            "7127a57739fba84c0edec80a9a47b12e17827038"
        ],
        [
            "eapply is_derive_ext.",
            "VernacExtend",
            "573c1b8d910f7acc5c079ebf5ad4c6203c0b7b81"
        ],
        [
            "intros t ; apply sym_eq, sum_Sn.",
            "VernacExtend",
            "858a26c3ddc9cc8d46272dfc5b0e9de1ce7768ea"
        ],
        [
            "rewrite sum_Sn.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply is_derive_plus.",
            "VernacExtend",
            "833dd5d321c121d4f21e45ff078c99ef1dbaad8b"
        ],
        [
            "apply IH => k Hk.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply Hf, le_trans with (1 := Hk), le_n_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_derive_sum_n : forall (f : nat -> K -> V) (n : nat) (x : K), (forall k, (k <= n)%nat -> ex_derive (f k) x) -> ex_derive (fun y => sum_n (fun k => f k y) n) x.",
            "VernacStartTheoremProof",
            "57d3a44810604cfa8ee7bf00f2e9269bd70dd60a"
        ],
        [
            "intros f n x.",
            "VernacExtend",
            "2cee8b23020f7f35316f4895e9a442e452539f94"
        ],
        [
            "elim: n => /= [ | n IH] Hf.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "eapply ex_derive_ext.",
            "VernacExtend",
            "90a6db182d9d3f4dcfed1fb1aefe14e4ec15d100"
        ],
        [
            "intros t ; by rewrite sum_O.",
            "VernacExtend",
            "7127a57739fba84c0edec80a9a47b12e17827038"
        ],
        [
            "by apply (Hf O).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "eapply ex_derive_ext.",
            "VernacExtend",
            "90a6db182d9d3f4dcfed1fb1aefe14e4ec15d100"
        ],
        [
            "intros t ; by rewrite sum_Sn.",
            "VernacExtend",
            "7127a57739fba84c0edec80a9a47b12e17827038"
        ],
        [
            "apply ex_derive_plus.",
            "VernacExtend",
            "20793d3e6437e9897b63a99953a40eb46ce1590a"
        ],
        [
            "apply IH => k Hk.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply Hf, le_trans with (1 := Hk), le_n_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Plus.",
            "VernacEndSegment",
            "c46c1172094053afa9b85a176b5def8845ea3b27"
        ],
        [
            "Lemma Derive_plus : forall f g x, ex_derive f x -> ex_derive g x -> Derive (fun x => f x + g x) x = Derive f x + Derive g x.",
            "VernacStartTheoremProof",
            "1a06bb361939f1418bd10b3ab2332026d4c4b340"
        ],
        [
            "intros f g x Df Dg.",
            "VernacExtend",
            "00e7c97a0beeb5b34d5d78cc0cf47216303d5307"
        ],
        [
            "apply is_derive_unique.",
            "VernacExtend",
            "e8a169466dae5921bc3cfc15bd8d8cf05c765407"
        ],
        [
            "apply: is_derive_plus ; now apply Derive_correct.",
            "VernacExtend",
            "04dca57e4125cf6b0a5d9ca38244886915dcb6c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Derive_sum_n (f : nat -> R -> R) (n : nat) (x : R) : (forall k, (k <= n)%nat -> ex_derive (f k) x) -> Derive (fun y => sum_n (fun k => f k y) n) x = sum_n (fun k => Derive (f k) x) n.",
            "VernacStartTheoremProof",
            "8ccebbad26d1903d8387f0c6bbbf4c29c030d359"
        ],
        [
            "move => Hf.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_derive_unique.",
            "VernacExtend",
            "e8a169466dae5921bc3cfc15bd8d8cf05c765407"
        ],
        [
            "apply: is_derive_sum_n.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "move => k Hk.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by apply Derive_correct, Hf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Minus.",
            "VernacBeginSection",
            "f5e844c75117be2f3942aba7e3863e5b16d11d2d"
        ],
        [
            "Context {K : AbsRing} {V : NormedModule K}.",
            "VernacContext",
            "3b61d1aae35ebd0170cfa463dc9750aa874e5a6f"
        ],
        [
            "Lemma is_derive_minus : forall (f g : K -> V) (x : K) (df dg : V), is_derive f x df -> is_derive g x dg -> is_derive (fun x => minus (f x) (g x)) x (minus df dg).",
            "VernacStartTheoremProof",
            "82eaed6dde28f6c078fba9b94a84c3adc275910b"
        ],
        [
            "intros f g x df dg Df Dg.",
            "VernacExtend",
            "a3d9d5444e55efea191e0601b98f80740b0bb022"
        ],
        [
            "eapply filterdiff_ext_lin.",
            "VernacExtend",
            "95ec423140e8c1a0927774f978482d971b43a652"
        ],
        [
            "apply filterdiff_minus_fct ; try eassumption.",
            "VernacExtend",
            "66f251c3e16cc0baab1218dab428beb4998f22c6"
        ],
        [
            "simpl => y.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite scal_distr_l scal_opp_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_derive_minus : forall (f g : K -> V) (x : K), ex_derive f x -> ex_derive g x -> ex_derive (fun x => minus (f x) (g x)) x.",
            "VernacStartTheoremProof",
            "a1dd23fe6b72c8d464bcd13f70e39dc117d3e554"
        ],
        [
            "intros f g x [df Df] [dg Dg].",
            "VernacExtend",
            "cdcbd6ed7a35bb2ba1fbd0508ac56656392b1996"
        ],
        [
            "exists (minus df dg).",
            "VernacExtend",
            "55ce8ca770e00a8811d5c26a7b1c5e554432903b"
        ],
        [
            "now apply is_derive_minus.",
            "VernacExtend",
            "a0092a2f00e7972d39c56747a9ec69eccae2f358"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Minus.",
            "VernacEndSegment",
            "131eb158ad5fe410e3f0ed06b5fae8198775a691"
        ],
        [
            "Lemma Derive_minus : forall f g x, ex_derive f x -> ex_derive g x -> Derive (fun x => f x - g x) x = Derive f x - Derive g x.",
            "VernacStartTheoremProof",
            "f5c3630714a05994b3f821977c028326f57fb43a"
        ],
        [
            "intros f g x Df Dg.",
            "VernacExtend",
            "00e7c97a0beeb5b34d5d78cc0cf47216303d5307"
        ],
        [
            "apply is_derive_unique.",
            "VernacExtend",
            "e8a169466dae5921bc3cfc15bd8d8cf05c765407"
        ],
        [
            "apply: is_derive_minus ; now apply Derive_correct.",
            "VernacExtend",
            "04dca57e4125cf6b0a5d9ca38244886915dcb6c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_derive_inv (f : R -> R) (x l : R) : is_derive f x l -> f x <> 0 -> is_derive (fun y : R => / f y) x (-l/(f x)^2).",
            "VernacStartTheoremProof",
            "4d713e1e0f4d5f013d30d833d2d819ae4a4a863b"
        ],
        [
            "move => Hf Hl.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "eapply filterdiff_ext_lin.",
            "VernacExtend",
            "95ec423140e8c1a0927774f978482d971b43a652"
        ],
        [
            "apply filterdiff_ext with (fun y => 1/f y).",
            "VernacExtend",
            "eb0a1fc1e1598a34078694e17bccbb8393dfe7a5"
        ],
        [
            "move => t ; by rewrite /Rdiv Rmult_1_l.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "apply is_derive_Reals.",
            "VernacExtend",
            "50ffedc276e75c32dd6244cd073b4227506b2788"
        ],
        [
            "apply derivable_pt_lim_div.",
            "VernacExtend",
            "bea94ae9b9bd7ce717261c719b2fa3e099cc38f4"
        ],
        [
            "apply derivable_pt_lim_const.",
            "VernacExtend",
            "960938bb384eb6666a08df49ec2457c0f743a285"
        ],
        [
            "apply is_derive_Reals.",
            "VernacExtend",
            "50ffedc276e75c32dd6244cd073b4227506b2788"
        ],
        [
            "exact Hf.",
            "VernacExtend",
            "e25e6849230bea1fb4d4eb83c79000be517c04a9"
        ],
        [
            "exact Hl.",
            "VernacExtend",
            "726a6911ca781f5fae08f27dbd5c9838368eca79"
        ],
        [
            "simpl => y ; apply f_equal.",
            "VernacExtend",
            "80f9b62bf78363587ab390aeb891a6e245084d09"
        ],
        [
            "rewrite /= /Rsqr ; by field.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_derive_inv (f : R -> R) (x : R) : ex_derive f x -> f x <> 0 -> ex_derive (fun y : R => / f y) x.",
            "VernacStartTheoremProof",
            "394a96f439182a0566facf19408cfef92f66b798"
        ],
        [
            "case => l Hf Hl.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (-l/(f x)^2).",
            "VernacExtend",
            "e37d25198423970b1012c9a96a5efbca3edbc801"
        ],
        [
            "by apply is_derive_inv.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Derive_inv (f : R -> R) (x : R) : ex_derive f x -> f x <> 0 -> Derive (fun y => / f y) x = - Derive f x / (f x) ^ 2.",
            "VernacStartTheoremProof",
            "85994c598b56764fa70d74e32f9a2cec9b718cc2"
        ],
        [
            "move/Derive_correct => Hf Hl.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_derive_unique.",
            "VernacExtend",
            "e8a169466dae5921bc3cfc15bd8d8cf05c765407"
        ],
        [
            "by apply is_derive_inv.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_derive_scal : forall (f : R -> R) (x k df : R), is_derive f x df -> is_derive (fun x : R => k * f x) x (k * df).",
            "VernacStartTheoremProof",
            "6aa6040a77266535a98f99238b249234c9225f86"
        ],
        [
            "intros f x k df Df.",
            "VernacExtend",
            "81eead94d471cd21e7af26b4236752b5c3dc19e0"
        ],
        [
            "change Rmult with (scal (V := R_NormedModule)).",
            "VernacExtend",
            "008dd0cc7a8f8038d29e44af4a385b183a731782"
        ],
        [
            "eapply filterdiff_ext_lin.",
            "VernacExtend",
            "95ec423140e8c1a0927774f978482d971b43a652"
        ],
        [
            "apply filterdiff_scal_r_fct with (2 := Df).",
            "VernacExtend",
            "ed79cee36732337e968171f265b68ed5da7563ec"
        ],
        [
            "apply Rmult_comm.",
            "VernacExtend",
            "f6a795952024dfb6a8db9b1b3050b14eb7f075aa"
        ],
        [
            "rewrite /scal /= /mult /= => y.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_derive_scal : forall (f : R -> R) (k x : R), ex_derive f x -> ex_derive (fun x : R => k * f x) x.",
            "VernacStartTheoremProof",
            "6d6da2541b68a7c78e6c238326c78570ec5f3282"
        ],
        [
            "intros f k x (df,Df).",
            "VernacExtend",
            "e6b35f11f56e1a12cefe104c6a10f08ce1125e28"
        ],
        [
            "exists (k * df).",
            "VernacExtend",
            "330941c3abb0ef4d85b900b5d9c24ba7c499fc9e"
        ],
        [
            "now apply is_derive_scal.",
            "VernacExtend",
            "22be356e139ac170f4702734366c22b8bb23931c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Derive_scal : forall f k x, Derive (fun x => k * f x) x = k * Derive f x.",
            "VernacStartTheoremProof",
            "af524bff1500903deddea847a57c026e586d7013"
        ],
        [
            "intros f k x.",
            "VernacExtend",
            "0631155452fc382a55f84d812bd6cf64a2fe23c4"
        ],
        [
            "unfold Derive, Lim.",
            "VernacExtend",
            "917c927a79aab63caa792916dfcd4f139e457ea5"
        ],
        [
            "have H : (forall x, k * Rbar.real x = Rbar.real (Rbar.Rbar_mult (Rbar.Finite k) x)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: (Req_dec k 0) => [-> | Hk].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case => [l | | ] //= ; rewrite Rmult_0_l.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "case: Rle_dec (Rle_refl 0) => //= H _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_lt_or_eq_dec (Rlt_irrefl 0) => //= _ _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_dec (Rle_refl 0) => //= H _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_lt_or_eq_dec (Rlt_irrefl 0) => //= _ _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case => [l | | ] //= ; rewrite Rmult_0_r.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "case: Rle_dec => //= H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_lt_or_eq_dec => //=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_dec => //= H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_lt_or_eq_dec => //=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -Lim_seq_scal_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal, Lim_seq_ext => n.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -Rmult_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply (f_equal (fun v => v / _)).",
            "VernacExtend",
            "34324e611822f4403b12ab71ea5b968ef04fd319"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Scal_l.",
            "VernacBeginSection",
            "f7852140106ff2c7ea1ce2f13ae3c03888fbab46"
        ],
        [
            "Context {K : AbsRing} {V : NormedModule K}.",
            "VernacContext",
            "3b61d1aae35ebd0170cfa463dc9750aa874e5a6f"
        ],
        [
            "Lemma is_derive_scal_l : forall (f : K -> K) (x l : K) (k : V), is_derive f x l -> is_derive (fun x => scal (f x) k) x (scal l k).",
            "VernacStartTheoremProof",
            "cf9864e37df725d5894a353e17e5c79139e8af5b"
        ],
        [
            "intros f x l k Df.",
            "VernacExtend",
            "0a237ac7000608a5ba0f8748df65c3743af0b6f2"
        ],
        [
            "eapply filterdiff_ext_lin.",
            "VernacExtend",
            "95ec423140e8c1a0927774f978482d971b43a652"
        ],
        [
            "apply @filterdiff_scal_l_fct ; try by apply locally_filter.",
            "VernacExtend",
            "336045491d15532d0347301ff81aeaa0a97180d5"
        ],
        [
            "exact Df.",
            "VernacExtend",
            "3a64957ca6a79d500dc820287f99e81ce509e3a9"
        ],
        [
            "simpl => y.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply sym_eq, scal_assoc.",
            "VernacExtend",
            "aff5afc870fc3b957fab1acb478460145b966cb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_derive_scal_l : forall (f : K -> K) (x : K) (k : V), ex_derive f x -> ex_derive (fun x => scal (f x) k) x.",
            "VernacStartTheoremProof",
            "35f58afb93b33d6e3b25518446143c2ec3177a5b"
        ],
        [
            "intros f x k [df Df].",
            "VernacExtend",
            "6b9e034bff4d46b2047cffa2d53f833d64ea751a"
        ],
        [
            "exists (scal df k).",
            "VernacExtend",
            "97f10f38c9cac0ac1e7c69b62b81f89f24b87476"
        ],
        [
            "by apply is_derive_scal_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Scal_l.",
            "VernacEndSegment",
            "cb959eb9c35d366a042f052b175fd0ae0100670a"
        ],
        [
            "Lemma Derive_scal_l (f : R -> R) (k x : R) : Derive (fun x => f x * k) x = Derive f x * k.",
            "VernacStartTheoremProof",
            "4ff49292021aa131f0195f5ec4c2c06d5fbada28"
        ],
        [
            "rewrite Rmult_comm -Derive_scal.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Derive_ext => t ; by apply Rmult_comm.",
            "VernacExtend",
            "7bd77ea96f784074e3b1d448260a45dd4191485f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_derive_mult : forall (f g : R -> R) (x : R) (df dg : R), is_derive f x df -> is_derive g x dg -> is_derive (fun t : R => f t * g t) x (df * g x + f x * dg) .",
            "VernacStartTheoremProof",
            "cfd293d26870d81919e21309a63653d5b07aa0b9"
        ],
        [
            "intros f g x df dg Df Dg.",
            "VernacExtend",
            "a3d9d5444e55efea191e0601b98f80740b0bb022"
        ],
        [
            "eapply filterdiff_ext_lin.",
            "VernacExtend",
            "95ec423140e8c1a0927774f978482d971b43a652"
        ],
        [
            "apply @filterdiff_mult_fct with (2 := Df) (3 := Dg).",
            "VernacExtend",
            "fe55bb04e1320cbc727183bc95d8825b578e494f"
        ],
        [
            "exact Rmult_comm.",
            "VernacExtend",
            "1f10467e7eafaeee7877eacf4bd6599246df9826"
        ],
        [
            "rewrite /scal /= /mult /plus /= => y.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_derive_mult (f g : R -> R) (x : R) : ex_derive f x -> ex_derive g x -> ex_derive (fun x : R => f x * g x) x.",
            "VernacStartTheoremProof",
            "8435f24e9c26396b08634b0d60ebb975940d445d"
        ],
        [
            "move => [d1 H1] [d2 H2].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists (d1 * g x + f x * d2).",
            "VernacExtend",
            "a53e3b842754023d38b39b098394dabd7110e4c2"
        ],
        [
            "now apply is_derive_mult.",
            "VernacExtend",
            "d1096454ab424aeecaa6c10044b65f59e28c7aa5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Derive_mult (f g : R -> R) (x : R) : ex_derive f x -> ex_derive g x -> Derive (fun x => f x * g x) x = Derive f x * g x + f x * Derive g x.",
            "VernacStartTheoremProof",
            "c7663d9866722346d7fa34fecefec51397ba530e"
        ],
        [
            "move => H1 H2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_derive_unique.",
            "VernacExtend",
            "e8a169466dae5921bc3cfc15bd8d8cf05c765407"
        ],
        [
            "now apply is_derive_mult ; apply Derive_correct.",
            "VernacExtend",
            "5a4b28d7d196d20fb82d6add70971215b2d36e2f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_derive_pow (f : R -> R) (n : nat) (x : R) (l : R) : is_derive f x l -> is_derive (fun x : R => (f x)^n) x (INR n * l * (f x)^(pred n)).",
            "VernacStartTheoremProof",
            "f0d5d030cb9b206a250ab03bdf57fb78dd6f6701"
        ],
        [
            "move => H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite (Rmult_comm _ l) Rmult_assoc Rmult_comm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply is_derive_Reals.",
            "VernacExtend",
            "50ffedc276e75c32dd6244cd073b4227506b2788"
        ],
        [
            "apply (derivable_pt_lim_comp f (fun x => x^n)).",
            "VernacExtend",
            "b77d0d5726eff0b51a093c6a088a0e9f97ecaf3c"
        ],
        [
            "now apply is_derive_Reals.",
            "VernacExtend",
            "07d895ad9f1058e7afe5c6efe4fba0d1bcc64e6a"
        ],
        [
            "by apply derivable_pt_lim_pow.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_derive_pow (f : R -> R) (n : nat) (x : R) : ex_derive f x -> ex_derive (fun x : R => (f x)^n) x.",
            "VernacStartTheoremProof",
            "81d85648435120b0a5dfc33933a2cb9de68dffb8"
        ],
        [
            "case => l H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (INR n * l * (f x)^(pred n)).",
            "VernacExtend",
            "d7d9c4600f71ba876aed328b7c3f6bcdf1026595"
        ],
        [
            "by apply is_derive_pow.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Derive_pow (f : R -> R) (n : nat) (x : R) : ex_derive f x -> Derive (fun x => (f x)^n) x = (INR n * Derive f x * (f x)^(pred n)).",
            "VernacStartTheoremProof",
            "5276ed4f59126ae79c099c81184141be523c5b1f"
        ],
        [
            "move => H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_derive_unique.",
            "VernacExtend",
            "e8a169466dae5921bc3cfc15bd8d8cf05c765407"
        ],
        [
            "apply is_derive_pow.",
            "VernacExtend",
            "cc43ecdcaf7c8df0f693d635381699df7e00265e"
        ],
        [
            "by apply Derive_correct.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_derive_div : forall (f g : R -> R) (x : R) (df dg : R), is_derive f x df -> is_derive g x dg -> g x <> 0 -> is_derive (fun t : R => f t / g t) x ((df * g x - f x * dg) / (g x ^ 2)).",
            "VernacStartTheoremProof",
            "6d5ef5aa89243041e1352e682403b101e1fecc23"
        ],
        [
            "intros f g x df dg Df Dg Zgx.",
            "VernacExtend",
            "a369c7cdf5cfb9ba54d233489333563f007f1b9b"
        ],
        [
            "evar_last.",
            "VernacExtend",
            "66189d18eff3abe5c0f87ca72027637c063094b4"
        ],
        [
            "apply is_derive_mult.",
            "VernacExtend",
            "09683ec5d1553f03e7b598864f3bcfdbc6baadc6"
        ],
        [
            "exact Df.",
            "VernacExtend",
            "3a64957ca6a79d500dc820287f99e81ce509e3a9"
        ],
        [
            "apply is_derive_inv with (2 := Zgx).",
            "VernacExtend",
            "8667d49396a308424ddbec8e2953e39b4f799acf"
        ],
        [
            "exact Dg.",
            "VernacExtend",
            "744c07e43ce03261b176000e7a1a3617aa2d37e2"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "now field.",
            "VernacExtend",
            "f3de8dbe903009a3417a80d825415eef0ce85558"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_derive_div (f g : R -> R) (x : R) : ex_derive f x -> ex_derive g x -> g x <> 0 -> ex_derive (fun y => f y / g y) x.",
            "VernacStartTheoremProof",
            "5ee38a1fddae9f83739c511f1ccaeb8d733365ab"
        ],
        [
            "move => Hf Hg Hl.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply ex_derive_mult.",
            "VernacExtend",
            "6510658aa9221221e397ca1a8023ed20b93b1f2a"
        ],
        [
            "apply Hf.",
            "VernacExtend",
            "44e8b4102d20ba355038f72fc52240fc6cb8650c"
        ],
        [
            "by apply ex_derive_inv.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Derive_div (f g : R -> R) (x : R) : ex_derive f x -> ex_derive g x -> g x <> 0 -> Derive (fun y => f y / g y) x = (Derive f x * g x - f x * Derive g x) / (g x) ^ 2.",
            "VernacStartTheoremProof",
            "aa7f9e962e2c6d908d417f199f81498246140d3f"
        ],
        [
            "move => Hf Hg Hl.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_derive_unique.",
            "VernacExtend",
            "e8a169466dae5921bc3cfc15bd8d8cf05c765407"
        ],
        [
            "now apply is_derive_div ; try apply Derive_correct.",
            "VernacExtend",
            "ba42a7f669686c5296a74bdb58806a02c8cc6033"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Comp.",
            "VernacBeginSection",
            "06f939d93927b833a5ef4e708961dfed78df041a"
        ],
        [
            "Context {K : AbsRing} {V : NormedModule K}.",
            "VernacContext",
            "3b61d1aae35ebd0170cfa463dc9750aa874e5a6f"
        ],
        [
            "Lemma is_derive_comp : forall (f : K -> V) (g : K -> K) (x : K) (df : V) (dg : K), is_derive f (g x) df -> is_derive g x dg -> is_derive (fun x => f (g x)) x (scal dg df).",
            "VernacStartTheoremProof",
            "d4c0613c2b05631fb425fceca72f1d641e5f8078"
        ],
        [
            "intros f g x df dg Df Dg.",
            "VernacExtend",
            "a3d9d5444e55efea191e0601b98f80740b0bb022"
        ],
        [
            "eapply filterdiff_ext_lin.",
            "VernacExtend",
            "95ec423140e8c1a0927774f978482d971b43a652"
        ],
        [
            "apply filterdiff_comp' with (1 := Dg) (2 := Df).",
            "VernacExtend",
            "6b37e794ae9a2185b56e94900b6f5e7e0bcb41cf"
        ],
        [
            "simpl => y.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply sym_eq, scal_assoc.",
            "VernacExtend",
            "aff5afc870fc3b957fab1acb478460145b966cb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_derive_comp : forall (f : K -> V) (g : K -> K) (x : K), ex_derive f (g x) -> ex_derive g x -> ex_derive (fun x => f (g x)) x.",
            "VernacStartTheoremProof",
            "c77affd11132789b51853dfd2ed9599e24fb18e5"
        ],
        [
            "intros f g x [df Df] [dg Dg].",
            "VernacExtend",
            "cdcbd6ed7a35bb2ba1fbd0508ac56656392b1996"
        ],
        [
            "exists (scal dg df).",
            "VernacExtend",
            "1d3252564b6f44411e902634055736f37fc89bba"
        ],
        [
            "now apply is_derive_comp.",
            "VernacExtend",
            "4c4186aaa65b0f1f0677714ccf76224b987ce452"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Comp.",
            "VernacEndSegment",
            "b70ea0ae3f8ba7b5312558080fdb504fe51fb0ea"
        ],
        [
            "Lemma Derive_comp (f g : R -> R) (x : R) : ex_derive f (g x) -> ex_derive g x -> Derive (fun x => f (g x)) x = Derive g x * Derive f (g x).",
            "VernacStartTheoremProof",
            "7db06fd371d16c00c567e4646618a4032ea96618"
        ],
        [
            "intros Df Dg.",
            "VernacExtend",
            "1a4882372653d6487683152cc8ed5a4d4f734998"
        ],
        [
            "apply is_derive_unique.",
            "VernacExtend",
            "e8a169466dae5921bc3cfc15bd8d8cf05c765407"
        ],
        [
            "apply: is_derive_comp ; now apply Derive_correct.",
            "VernacExtend",
            "04dca57e4125cf6b0a5d9ca38244886915dcb6c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma MVT_gen (f : R -> R) (a b : R) (df : R -> R) : let a0 := Rmin a b in let b0 := Rmax a b in (forall x, a0 < x < b0 -> is_derive f x (df x)) -> (forall x, a0 <= x <= b0 -> continuity_pt f x) -> exists c, a0 <= c <= b0 /\\ f b - f a = df c * (b - a).",
            "VernacStartTheoremProof",
            "28b2c976d775fde8436a6445c4f386d57ff79e17"
        ],
        [
            "move => a0 b0 Hd Hf.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Req_dec a0 b0) => Hab.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists a0 ; split.",
            "VernacExtend",
            "77ca09cd572d5ceb085bc8165b959e5848bef494"
        ],
        [
            "split ; by apply Req_le.",
            "VernacExtend",
            "9c392753fd6384a52f43e9d349afde47af3b3aa5"
        ],
        [
            "replace b with a.",
            "VernacExtend",
            "381264e524e7cdccf00853c5fbe117dfbc0f2738"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "move: Hab ; rewrite /a0 /b0 /Rmin /Rmax ; by case: Rle_dec => Hab.",
            "VernacExtend",
            "9316342455eb51a3e1204d3e55750c03c1806191"
        ],
        [
            "have pr1 : forall c:R, a0 < c < b0 -> derivable_pt f c.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move => x Hx ; exists (df x).",
            "VernacExtend",
            "5c6fd35d501b8c64cc29104e8a6552ec19177bc6"
        ],
        [
            "by apply is_derive_Reals, Hd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have pr2 : forall c:R, a0 < c < b0 -> derivable_pt id c.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move => x Hx ; exists 1.",
            "VernacExtend",
            "b7377bd2b362133c4ef2be09ca263609ff51408d"
        ],
        [
            "by apply derivable_pt_lim_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (MVT f id a0 b0 pr1 pr2).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rnot_le_lt ; contradict Hab ; apply Rle_antisym.",
            "VernacExtend",
            "a585aba378674fb8f0f0f9a192a4db22d622f245"
        ],
        [
            "by apply Rcomplements.Rmin_Rmax.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hab.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => x Hx ; apply derivable_continuous, derivable_id.",
            "VernacExtend",
            "f7bfecd9388d37b88abe0c31ad4fea1cde48b3ad"
        ],
        [
            "move => /= c [Hc H].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists c ; split.",
            "VernacExtend",
            "3e1e8b4f017ed8d6e2ffcb1f375ef9385f5558f1"
        ],
        [
            "split ; by apply Rlt_le, Hc.",
            "VernacExtend",
            "9c392753fd6384a52f43e9d349afde47af3b3aa5"
        ],
        [
            "replace (df c) with (derive_pt f c (pr1 c Hc)).",
            "VernacExtend",
            "e5177bb4dab5337f78cdaf6c49255f3291ca91ae"
        ],
        [
            "move: H ; rewrite {1 2}/id /a0 /b0 /Rmin /Rmax ; case: Rle_dec => Hab0 H.",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "rewrite Rmult_comm H -(pr_nu _ _ (derivable_pt_id _)) derive_pt_id.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "replace (derive_pt f c (pr1 c Hc) * (b - a)) with (-((a - b) * derive_pt f c (pr1 c Hc))) by ring.",
            "VernacExtend",
            "4e8ac63289fd59005ab1c8e36f6f4ad409b2eeac"
        ],
        [
            "rewrite H -(pr_nu _ _ (derivable_pt_id _)) derive_pt_id.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "case: (pr1 c Hc) => /= l Hl.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "transitivity (Derive f c).",
            "VernacExtend",
            "aab90b4c0033101feed3931950af5daf603c1f3a"
        ],
        [
            "apply sym_eq, is_derive_unique, is_derive_Reals, Hl.",
            "VernacExtend",
            "10a48182420758bb614dfefd27ab572ac6699efe"
        ],
        [
            "by apply is_derive_unique, Hd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma incr_function (f : R -> R) (a b : Rbar) (df : R -> R) : (forall (x : R), Rbar_lt a x -> Rbar_lt x b -> is_derive f x (df x)) -> ((forall (x : R), Rbar_lt a x -> Rbar_lt x b -> df x > 0) -> (forall (x y : R), Rbar_lt a x -> x < y -> Rbar_lt y b -> f x < f y)).",
            "VernacStartTheoremProof",
            "78f0c1c4a0a0c23535cfe0db74b641f2ec69216b"
        ],
        [
            "move => Df Hf x y Hax Hxy Hyb.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Rminus_lt_0.",
            "VernacExtend",
            "266ec80c870ca91ace5efd2beddab25e945c4342"
        ],
        [
            "case: (MVT_gen f x y df) => [z Hz | z Hz | c [Hc ->]].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Df.",
            "VernacExtend",
            "6977200c5ed42f07be5c070bbdde02d6c91f143c"
        ],
        [
            "apply Rbar_lt_le_trans with (y := Rmin x y) (2 := Rlt_le _ _ (proj1 Hz)).",
            "VernacExtend",
            "78f308f3b95266a3d372c15c3bad7c8ae5a059b4"
        ],
        [
            "rewrite /Rmin ; case: Rle_dec (Rlt_le _ _ Hxy) => //.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "apply Rbar_le_lt_trans with (y := Rmax x y) (1 := Rlt_le _ _ (proj2 Hz)).",
            "VernacExtend",
            "97adee03e71de2c9925f96b2bf04eca9c70d1cfe"
        ],
        [
            "rewrite /Rmax ; case: Rle_dec (Rlt_le _ _ Hxy) => //.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "apply derivable_continuous_pt.",
            "VernacExtend",
            "939a043861a6c1b6ad68f89e18a325fcf10fb0f3"
        ],
        [
            "exists (df z) ; apply is_derive_Reals, Df.",
            "VernacExtend",
            "233e0330b4c1e89fa78e3f4d4ac65d9525b87ddd"
        ],
        [
            "apply Rbar_lt_le_trans with (y := Rmin x y) (2 := proj1 Hz).",
            "VernacExtend",
            "8da1c8e4883509f9ebe65a2629a7fecbbc78d940"
        ],
        [
            "rewrite /Rmin ; case: Rle_dec (Rlt_le _ _ Hxy) => //.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "apply Rbar_le_lt_trans with (y := Rmax x y) (1 := proj2 Hz).",
            "VernacExtend",
            "7a4d94509452ab428505f480ba65d33904c114db"
        ],
        [
            "rewrite /Rmax ; case: Rle_dec (Rlt_le _ _ Hxy) => //.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "apply Rmult_lt_0_compat.",
            "VernacExtend",
            "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
        ],
        [
            "apply Hf.",
            "VernacExtend",
            "44e8b4102d20ba355038f72fc52240fc6cb8650c"
        ],
        [
            "apply Rbar_lt_le_trans with (y := Rmin x y) (2 := proj1 Hc).",
            "VernacExtend",
            "311cd120e0793bb6f03d5492d228f4360c13f054"
        ],
        [
            "rewrite /Rmin ; case: Rle_dec (Rlt_le _ _ Hxy) => //.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "apply Rbar_le_lt_trans with (y := Rmax x y) (1 := proj2 Hc).",
            "VernacExtend",
            "9df6e1193ede7f3acb684a78a67cc6482a9f1435"
        ],
        [
            "rewrite /Rmax ; case: Rle_dec (Rlt_le _ _ Hxy) => //.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by apply -> Rminus_lt_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma incr_function_le (f : R -> R) (a b : Rbar) (df : R -> R) : (forall (x : R), Rbar_le a x -> Rbar_le x b -> is_derive f x (df x)) -> ((forall (x : R), Rbar_le a x -> Rbar_le x b -> df x > 0) -> (forall (x y : R), Rbar_le a x -> x < y -> Rbar_le y b -> f x < f y)).",
            "VernacStartTheoremProof",
            "f8c45a48eae6b7851697ae39e237308c4d9552c6"
        ],
        [
            "move => Df Hf x y Hax Hxy Hyb.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Rminus_lt_0.",
            "VernacExtend",
            "266ec80c870ca91ace5efd2beddab25e945c4342"
        ],
        [
            "case: (MVT_gen f x y df) => [z Hz | z Hz | c [Hc ->]].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Df.",
            "VernacExtend",
            "6977200c5ed42f07be5c070bbdde02d6c91f143c"
        ],
        [
            "apply Rbar_le_trans with (y := Rmin x y) (2 := Rlt_le _ _ (proj1 Hz)).",
            "VernacExtend",
            "eb5aecfde1eee4c333deabc5b3bf267244f6b0dc"
        ],
        [
            "rewrite /Rmin ; case: Rle_dec (Rlt_le _ _ Hxy) => //.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "apply Rbar_le_trans with (y := Rmax x y) (1 := Rlt_le _ _ (proj2 Hz)).",
            "VernacExtend",
            "1fc4639e99bbc572f1c55e756ab2382edc3efb6c"
        ],
        [
            "rewrite /Rmax ; case: Rle_dec (Rlt_le _ _ Hxy) => //.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "apply derivable_continuous_pt.",
            "VernacExtend",
            "939a043861a6c1b6ad68f89e18a325fcf10fb0f3"
        ],
        [
            "exists (df z) ; apply is_derive_Reals, Df.",
            "VernacExtend",
            "233e0330b4c1e89fa78e3f4d4ac65d9525b87ddd"
        ],
        [
            "apply Rbar_le_trans with (y := Rmin x y) (2 := proj1 Hz).",
            "VernacExtend",
            "dc4e90a0d02e62fea9da905b785faccc7d740320"
        ],
        [
            "rewrite /Rmin ; case: Rle_dec (Rlt_le _ _ Hxy) => //.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "apply Rbar_le_trans with (y := Rmax x y) (1 := proj2 Hz).",
            "VernacExtend",
            "d7e6d96deb74255b62c2381079af8149b9c28550"
        ],
        [
            "rewrite /Rmax ; case: Rle_dec (Rlt_le _ _ Hxy) => //.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "apply Rmult_lt_0_compat.",
            "VernacExtend",
            "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
        ],
        [
            "apply Hf.",
            "VernacExtend",
            "44e8b4102d20ba355038f72fc52240fc6cb8650c"
        ],
        [
            "apply Rbar_le_trans with (y := Rmin x y) (2 := proj1 Hc).",
            "VernacExtend",
            "8bda8ca274871042fb73a2250d1a57cfec40a28b"
        ],
        [
            "rewrite /Rmin ; case: Rle_dec (Rlt_le _ _ Hxy) => //.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "apply Rbar_le_trans with (y := Rmax x y) (1 := proj2 Hc).",
            "VernacExtend",
            "365cbdcbb87bd2291e79a3b6da09351f63643790"
        ],
        [
            "rewrite /Rmax ; case: Rle_dec (Rlt_le _ _ Hxy) => //.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by apply -> Rminus_lt_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma MVT_cor4: forall (f df : R -> R) a eps, (forall c, Rabs (c - a) <= eps -> is_derive f c (df c)) -> forall b, (Rabs (b - a) <= eps) -> exists c, f b - f a = df c * (b - a) /\\ (Rabs (c - a) <= Rabs (b - a)).",
            "VernacStartTheoremProof",
            "cc3012c54667c2653cc3fae8c041d7b981478b59"
        ],
        [
            "intros f df a eps Hf' b.",
            "VernacExtend",
            "04f5d9a01b358b5b2917c45273f884a6c01ab6bb"
        ],
        [
            "unfold Rabs at 1 3.",
            "VernacExtend",
            "2d4de01500828c435253247da3b9fce987feb465"
        ],
        [
            "case Rcase_abs; intros H1 H2.",
            "VernacExtend",
            "0a1158e61ef74dce45a18ee912e3538d92b8eafc"
        ],
        [
            "destruct (MVT_cor2 f df b a).",
            "VernacExtend",
            "3a83c87a977258805b0423b55405097829ae6df0"
        ],
        [
            "rewrite -(Rplus_0_l a).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "now apply Rlt_minus_l.",
            "VernacExtend",
            "137a322a62e4429fc333e3e397a20e9e5df0298a"
        ],
        [
            "intros c Hc.",
            "VernacExtend",
            "a6796c62d7c0db66fe8ba83a4c9d8f0f080ccce0"
        ],
        [
            "apply is_derive_Reals, Hf'.",
            "VernacExtend",
            "8238b1ab699de36d7ae509319837ea687f8de7de"
        ],
        [
            "rewrite Rabs_left1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_trans with (2:=H2).",
            "VernacExtend",
            "be58cd1f48aeee8514f4904f852299bb5010f302"
        ],
        [
            "apply Ropp_le_contravar.",
            "VernacExtend",
            "ac8d32b190d111aa8834547674121bcf3bb8a0ed"
        ],
        [
            "now apply Rplus_le_compat_r.",
            "VernacExtend",
            "8182aad22e58bd21105c801af074d763818ebcdd"
        ],
        [
            "apply Rplus_le_reg_r with a.",
            "VernacExtend",
            "7e41b8d10aacb48eab4235f2cca73781bfced56b"
        ],
        [
            "now ring_simplify.",
            "VernacExtend",
            "2d108f365e3e8acc156a34cc381bc8087ba632ff"
        ],
        [
            "exists x; split.",
            "VernacExtend",
            "f9266ddab0754060cc1803dfa28547707d7da7dd"
        ],
        [
            "rewrite -RIneq.Ropp_minus_distr (proj1 H).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "rewrite Rabs_left.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Ropp_le_contravar.",
            "VernacExtend",
            "ac8d32b190d111aa8834547674121bcf3bb8a0ed"
        ],
        [
            "left; now apply Rplus_lt_compat_r.",
            "VernacExtend",
            "4b32cf96c610f1c565950e7fe8839ea9a52edb98"
        ],
        [
            "apply Rplus_lt_reg_r with a.",
            "VernacExtend",
            "29b80bb1e86d357d5eae4b61b2c5a7b63bc73d62"
        ],
        [
            "now ring_simplify.",
            "VernacExtend",
            "2d108f365e3e8acc156a34cc381bc8087ba632ff"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "destruct (MVT_cor2 f df a b).",
            "VernacExtend",
            "ca3bbaa24dcf3820863bf0c59f2a0ec7cc120f71"
        ],
        [
            "apply Rplus_lt_reg_r with (-a).",
            "VernacExtend",
            "43cebc0bdc150b2ad5ab8c85ddce53b19547901a"
        ],
        [
            "ring_simplify.",
            "VernacExtend",
            "31578f61427562191ce5389abf97dbf9985ea04c"
        ],
        [
            "now rewrite Rplus_comm.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "intros c Hc.",
            "VernacExtend",
            "a6796c62d7c0db66fe8ba83a4c9d8f0f080ccce0"
        ],
        [
            "apply is_derive_Reals, Hf'.",
            "VernacExtend",
            "8238b1ab699de36d7ae509319837ea687f8de7de"
        ],
        [
            "rewrite Rabs_right.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_trans with (2:=H2).",
            "VernacExtend",
            "be58cd1f48aeee8514f4904f852299bb5010f302"
        ],
        [
            "now apply Rplus_le_compat_r.",
            "VernacExtend",
            "8182aad22e58bd21105c801af074d763818ebcdd"
        ],
        [
            "apply Rle_ge; apply Rplus_le_reg_r with a.",
            "VernacExtend",
            "62d3e2ad91bd31ac217642c18af044f7dc2a19b6"
        ],
        [
            "now ring_simplify.",
            "VernacExtend",
            "2d108f365e3e8acc156a34cc381bc8087ba632ff"
        ],
        [
            "exists x; split.",
            "VernacExtend",
            "f9266ddab0754060cc1803dfa28547707d7da7dd"
        ],
        [
            "exact (proj1 H0).",
            "VernacExtend",
            "c4a7857b07aa3734031e6534bff5cef975f62be2"
        ],
        [
            "rewrite Rabs_right.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "left; now apply Rplus_lt_compat_r.",
            "VernacExtend",
            "4b32cf96c610f1c565950e7fe8839ea9a52edb98"
        ],
        [
            "apply Rle_ge; apply Rplus_le_reg_r with a.",
            "VernacExtend",
            "62d3e2ad91bd31ac217642c18af044f7dc2a19b6"
        ],
        [
            "left; now ring_simplify.",
            "VernacExtend",
            "c7a4dd64e2b4521a20a32f988b63e6b7a2eae854"
        ],
        [
            "exists a.",
            "VernacExtend",
            "59cc5697e7369be65591d2d5e6ad6fd701682809"
        ],
        [
            "replace b with a.",
            "VernacExtend",
            "381264e524e7cdccf00853c5fbe117dfbc0f2738"
        ],
        [
            "split;[ring|idtac].",
            "VernacExtend",
            "b52f666a2e70a740e625aa6223877603bd0dd503"
        ],
        [
            "rewrite /Rminus Rplus_opp_r Rabs_R0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "apply Rplus_eq_reg_l with (-a).",
            "VernacExtend",
            "2af7eaadfb0748c230bcdbfc3067b317c4b44a2e"
        ],
        [
            "ring_simplify.",
            "VernacExtend",
            "31578f61427562191ce5389abf97dbf9985ea04c"
        ],
        [
            "rewrite - H; ring.",
            "VernacExtend",
            "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bounded_variation (h dh : R -> R) (D : R) (x y : R) : (forall t : R, Rabs (t - x) <= Rabs (y - x) -> is_derive h t (dh t) /\\ (Rabs (dh t) <= D)) -> Rabs (h y - h x) <= D * Rabs (y - x).",
            "VernacStartTheoremProof",
            "28eebd4f7477a22e894665e5a3adf107cded9032"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "destruct (MVT_cor4 h dh x (Rabs (y - x))) with (b := y) as [t Ht].",
            "VernacExtend",
            "ea3c14a8019c10888a1a3852828b8013f4ba25d5"
        ],
        [
            "intros c Hc.",
            "VernacExtend",
            "a6796c62d7c0db66fe8ba83a4c9d8f0f080ccce0"
        ],
        [
            "specialize (H c Hc).",
            "VernacExtend",
            "46b1c3b00f312c09609462d57d51e1eefd681478"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "rewrite (proj1 Ht).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Rabs_mult.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "apply Rabs_pos.",
            "VernacExtend",
            "8e57e214403458a4dc8dafc960971b86cf3b856d"
        ],
        [
            "now apply H.",
            "VernacExtend",
            "e28edffe226486c29d50d204164561fb199b8c97"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma norm_le_prod_norm_1 {K : AbsRing} {U V : NormedModule K} (x : U * V) : norm (fst x) <= norm x.",
            "VernacStartTheoremProof",
            "841d18c76ea321b48aed3cd0ca341a246319fa1d"
        ],
        [
            "eapply Rle_trans, sqrt_plus_sqr.",
            "VernacExtend",
            "85f6b2fad617d6721bfce8f070fab8a290ff3f59"
        ],
        [
            "rewrite Rabs_pos_eq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmax_l.",
            "VernacExtend",
            "e8bdf305d751b877364ec9794b15c2d6e134dc98"
        ],
        [
            "by apply norm_ge_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma norm_le_prod_norm_2 {K : AbsRing} {U V : NormedModule K} (x : U * V) : norm (snd x) <= norm x.",
            "VernacStartTheoremProof",
            "60f719efd857c691e027bad07a6ff0ed944fea90"
        ],
        [
            "eapply Rle_trans, sqrt_plus_sqr.",
            "VernacExtend",
            "85f6b2fad617d6721bfce8f070fab8a290ff3f59"
        ],
        [
            "rewrite (Rabs_pos_eq (norm (snd x))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmax_r.",
            "VernacExtend",
            "d3f964851377911a5dafd3727673be093a2b343f"
        ],
        [
            "by apply norm_ge_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_derive_filterdiff (f : R -> R -> R) (x y : R) (dfx : R -> R -> R) (dfy : R) : locally (x,y) (fun u : R * R => is_derive (fun z => f z (snd u)) (fst u) (dfx (fst u) (snd u))) -> is_derive (fun z : R => f x z) y dfy -> continuous (fun u : R * R => dfx (fst u) (snd u)) (x,y) -> filterdiff (fun u : R * R => f (fst u) (snd u)) (locally (x,y)) (fun u : R * R => plus (scal (fst u) (dfx x y)) (scal (snd u) dfy)).",
            "VernacStartTheoremProof",
            "5b26c7f79d84901c4db35ad868b9ca82c3cd1c27"
        ],
        [
            "intros Dx Dy Cx.",
            "VernacExtend",
            "ba08ba2b5f9315e1cf43152ee10310c3205c4bc4"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply (is_linear_comp (fun u : R * R => (scal (fst u) (dfx x y),scal (snd u) dfy)) (fun u : R * R => plus (fst u) (snd u))).",
            "VernacExtend",
            "ab3461b8d48921b7f751b7fb739ada56e9c52b47"
        ],
        [
            "apply is_linear_prod.",
            "VernacExtend",
            "435b3ddf29c095ab708a3ef4dac77051350a9ad9"
        ],
        [
            "apply (is_linear_comp (@fst _ _) (fun t : R => scal t (dfx x y))).",
            "VernacExtend",
            "4a63863bf23ad37b499e103ac69949bbe97ebd5a"
        ],
        [
            "by apply is_linear_fst.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply @is_linear_scal_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply (is_linear_comp (@snd _ _) (fun t : R => scal t dfy)).",
            "VernacExtend",
            "ef29b56cfd273a7dcdea8d1f31238edcc6ae67cf"
        ],
        [
            "by apply is_linear_snd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply @is_linear_scal_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply @is_linear_plus.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "simpl => u Hu.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "replace u with (x,y) by now apply is_filter_lim_locally_unique.",
            "VernacExtend",
            "1685835a153916a78d9182da3abe3026a04b02ff"
        ],
        [
            "move => {u Hu} eps /=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "set (eps' := pos_div_2 eps).",
            "VernacExtend",
            "d39c3caf12166887535dd2ab0f8cac3032b237ca"
        ],
        [
            "generalize (proj1 (filterlim_locally _ _) Cx eps') => {Cx} /= Cx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "generalize (filter_and _ _ Dx Cx) => {Dx Cx}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "intros (d1,Hd1).",
            "VernacExtend",
            "f02e2f9d3ead5a13e0f0f2cc5720dd7d56126ec1"
        ],
        [
            "destruct (proj2 Dy y (fun P H => H) eps') as (d2,Hd2).",
            "VernacExtend",
            "a66040314c2995a741e2e61e6d56aefc4aa57ca1"
        ],
        [
            "set (l1 := dfx x y).",
            "VernacExtend",
            "d854741dc674ff66fa0d8e6d6b047b07a5e155eb"
        ],
        [
            "exists (mkposreal _ (Rmin_stable_in_posreal d1 d2)).",
            "VernacExtend",
            "3c44ed98112cd7651fe64759af61f6c89c5c26b0"
        ],
        [
            "intros (u,v) (Hu,Hv) ; simpl in *.",
            "VernacExtend",
            "8df3c6f27b5ebee6c7dd91bb7bfe08bcd4fb4b91"
        ],
        [
            "set (g1 t := minus (f t v) (scal t l1)).",
            "VernacExtend",
            "f9a7aab6360637c54c7d28e3357b5663078dc1fb"
        ],
        [
            "set (g2 t := minus (f x t) (scal t dfy)).",
            "VernacExtend",
            "2bfc20e8fdb82bfb6a1a4d9b236a248e2bab57ce"
        ],
        [
            "apply Rle_trans with (norm (minus (g1 u) (g1 x)) + norm (minus (g2 v) (g2 y))).",
            "VernacExtend",
            "71e41af5feb855ad5d377967bc1b8c7fdf7f4f78"
        ],
        [
            "eapply Rle_trans, norm_triangle.",
            "VernacExtend",
            "93edd6e935dec17a5da269811d74c67e5ad4fb5c"
        ],
        [
            "apply Req_le, f_equal, sym_eq.",
            "VernacExtend",
            "16d79dc0e7690d9fb8355aeb9f81cfeadd2b6ad1"
        ],
        [
            "rewrite /g1 /g2 /minus !opp_plus !opp_opp -!plus_assoc ; apply f_equal.",
            "VernacExtend",
            "1775b3adc7dd915cdc7d26d03365d16d21a7694e"
        ],
        [
            "do 5 rewrite plus_comm -!plus_assoc ; apply f_equal.",
            "VernacExtend",
            "a841d31bf11e609e66b26c3e624f253fe0145c3d"
        ],
        [
            "rewrite !scal_distr_r !opp_plus -!plus_assoc !scal_opp_l !opp_opp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite plus_comm -!plus_assoc ; apply f_equal.",
            "VernacExtend",
            "1775b3adc7dd915cdc7d26d03365d16d21a7694e"
        ],
        [
            "rewrite plus_comm -!plus_assoc ; apply f_equal.",
            "VernacExtend",
            "1775b3adc7dd915cdc7d26d03365d16d21a7694e"
        ],
        [
            "by rewrite plus_comm -!plus_assoc plus_opp_l plus_zero_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "replace (pos eps) with (eps' + eps') by (apply sym_eq ; apply double_var).",
            "VernacExtend",
            "7e29837a8be4dd845fd35e513b97b68cb1292a4f"
        ],
        [
            "rewrite Rmult_plus_distr_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_le_compat.",
            "VernacExtend",
            "7a69898b466991bee51047e3a2fc51c3b80fbd93"
        ],
        [
            "apply Rle_trans with (eps' * norm (minus u x)).",
            "VernacExtend",
            "ef9c742339c7b4f910f4568a1b0f7e8bd8a56762"
        ],
        [
            "apply bounded_variation with (fun t => minus (dfx t v) l1) => t Ht.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply: is_derive_minus.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply (Hd1 (t,v)) ; split ; simpl.",
            "VernacExtend",
            "12da1327610913f691f55647c1289c4d601b2c15"
        ],
        [
            "apply Rle_lt_trans with (1 := Ht).",
            "VernacExtend",
            "cb015c46dd1158ff599511219859670ff867cef4"
        ],
        [
            "apply Rlt_le_trans with (1:=Hu).",
            "VernacExtend",
            "6a71a6268a3c6a7dfce4decc875083a7bce4eaea"
        ],
        [
            "apply Rmin_l.",
            "VernacExtend",
            "19942458506c6b3427aea84d1ee7179f00e19f1c"
        ],
        [
            "apply Rlt_le_trans with (1:=Hv).",
            "VernacExtend",
            "4df6d4899f7a34e1d7336370454a2294f154ab59"
        ],
        [
            "apply Rmin_l.",
            "VernacExtend",
            "19942458506c6b3427aea84d1ee7179f00e19f1c"
        ],
        [
            "rewrite -{2}(Rmult_1_r l1).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "evar_last.",
            "VernacExtend",
            "66189d18eff3abe5c0f87ca72027637c063094b4"
        ],
        [
            "apply filterdiff_linear, is_linear_scal_l.",
            "VernacExtend",
            "ef0547efd0c2777b21ac6fb08fbdb65c0d8a55c8"
        ],
        [
            "by rewrite Rmult_1_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "apply (Hd1 (t,v)) ; split ; simpl.",
            "VernacExtend",
            "12da1327610913f691f55647c1289c4d601b2c15"
        ],
        [
            "apply Rle_lt_trans with (1 := Ht).",
            "VernacExtend",
            "cb015c46dd1158ff599511219859670ff867cef4"
        ],
        [
            "apply Rlt_le_trans with (1:=Hu).",
            "VernacExtend",
            "6a71a6268a3c6a7dfce4decc875083a7bce4eaea"
        ],
        [
            "apply Rmin_l.",
            "VernacExtend",
            "19942458506c6b3427aea84d1ee7179f00e19f1c"
        ],
        [
            "apply Rlt_le_trans with (1:=Hv).",
            "VernacExtend",
            "4df6d4899f7a34e1d7336370454a2294f154ab59"
        ],
        [
            "apply Rmin_l.",
            "VernacExtend",
            "19942458506c6b3427aea84d1ee7179f00e19f1c"
        ],
        [
            "apply Rmult_le_compat_l.",
            "VernacExtend",
            "509839294acd7016ba82d594bfdb05afe131eed3"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "apply (norm_le_prod_norm_1 (minus (u, v) (x, y))).",
            "VernacExtend",
            "c2689346f5cd907e2261553cb487529861751726"
        ],
        [
            "apply Rle_trans with (eps' * norm (minus v y)).",
            "VernacExtend",
            "bffa8b0b4eae8d0e58b17631b7b57ace9027b516"
        ],
        [
            "apply Rle_trans with (norm (minus (minus (f x v) (f x y)) (scal (minus v y) dfy))).",
            "VernacExtend",
            "1b7edf1999451bd41002935f8eb9580893a76beb"
        ],
        [
            "right; apply f_equal.",
            "VernacExtend",
            "a4891a8d4470eb2c2febe52831f6d7de87ee5aff"
        ],
        [
            "rewrite /g2 scal_minus_distr_r /minus !opp_plus opp_opp -!plus_assoc ; apply f_equal.",
            "VernacExtend",
            "1775b3adc7dd915cdc7d26d03365d16d21a7694e"
        ],
        [
            "rewrite plus_comm -!plus_assoc ; apply f_equal.",
            "VernacExtend",
            "1775b3adc7dd915cdc7d26d03365d16d21a7694e"
        ],
        [
            "apply plus_comm.",
            "VernacExtend",
            "12475eb4e354334e12b009d49112b8335e8ec9d3"
        ],
        [
            "apply Hd2.",
            "VernacExtend",
            "3dbd4669225d71a19488dd8a6ad4b5fb61f4e5a6"
        ],
        [
            "apply Rlt_le_trans with (1:=Hv).",
            "VernacExtend",
            "4df6d4899f7a34e1d7336370454a2294f154ab59"
        ],
        [
            "apply Rmin_r.",
            "VernacExtend",
            "d165954e4d055817b42cbc8960efd3fee45e4f16"
        ],
        [
            "apply Rmult_le_compat_l.",
            "VernacExtend",
            "509839294acd7016ba82d594bfdb05afe131eed3"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "apply (norm_le_prod_norm_2 (minus (u, v) (x, y))).",
            "VernacExtend",
            "0fae04e8ab1f82ed5c8500466a142f698faa1bfe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fn_eq_Derive_eq: forall f g a b, continuity_pt f a -> continuity_pt f b -> continuity_pt g a -> continuity_pt g b -> (forall x, a < x < b -> ex_derive f x) -> (forall x, a < x < b -> ex_derive g x) -> (forall x, a < x < b -> Derive f x = Derive g x) -> exists C, forall x, a <= x <= b -> f x = g x + C.",
            "VernacStartTheoremProof",
            "e259a83ef0b18aafc6f9849c4bd1b3ab07063e79"
        ],
        [
            "intros f g a b Cfa Cfb Cga Cgb Df Dg Hfg.",
            "VernacExtend",
            "36fe74d3fa8d6a2f68f1b235340186340e8e4c53"
        ],
        [
            "pose (h := fun x => f x - g x).",
            "VernacExtend",
            "9781846b5362348a52f4f37f89eb24edefcc1666"
        ],
        [
            "assert (pr : forall x : R, a < x < b -> derivable_pt h x).",
            "VernacExtend",
            "17425b593f45b7c6328a71c6dc38a8bd45316c24"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "apply derivable_pt_minus.",
            "VernacExtend",
            "ba0f12b0c6b1d9f0442014804620576081f54651"
        ],
        [
            "eexists; apply is_derive_Reals, Derive_correct, Df, Hx.",
            "VernacExtend",
            "782ebfbcd54ebdc50f4706739a4685e206c68ee6"
        ],
        [
            "eexists; apply is_derive_Reals, Derive_correct, Dg, Hx.",
            "VernacExtend",
            "656fcb141acb035a4fdbc51670af1f0167f7981f"
        ],
        [
            "assert (constant_D_eq h (fun x : R => a <= x <= b) (h a)).",
            "VernacExtend",
            "ef2a3e874d83be206ed11d4e346cba4a57b7e1e3"
        ],
        [
            "apply null_derivative_loc with (pr:=pr).",
            "VernacExtend",
            "92d3205bc7c3fdf3218731852099b8f3da5d3959"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "case (proj1 Hx).",
            "VernacExtend",
            "ad0c3b686121c12d6c664e7d9e5d7c5962bac468"
        ],
        [
            "case (proj2 Hx).",
            "VernacExtend",
            "007cc5cf6fffa5e8121456f0435906f2526e6ea4"
        ],
        [
            "intros Y1 Y2.",
            "VernacExtend",
            "2a8a47e6ecca05e7737e1636f5fbdb1460fad880"
        ],
        [
            "apply derivable_continuous_pt.",
            "VernacExtend",
            "939a043861a6c1b6ad68f89e18a325fcf10fb0f3"
        ],
        [
            "apply pr; now split.",
            "VernacExtend",
            "794e46514f3a43e18b3faeb97bcbe5d4a955db82"
        ],
        [
            "intros Y1 _; rewrite Y1.",
            "VernacExtend",
            "777bced5228a62483c53d547218f2f46c7fa603a"
        ],
        [
            "apply continuity_pt_minus.",
            "VernacExtend",
            "ee124f243d9a30e1165f89a65c2280f21b3b2888"
        ],
        [
            "apply Cfb.",
            "VernacExtend",
            "cd151d3ac7e766a73993822c76ae520e1ed12bd3"
        ],
        [
            "apply Cgb.",
            "VernacExtend",
            "df2ac45b474c85c7b67f80ed41a3816c4ff86e7a"
        ],
        [
            "intros Y1; rewrite <- Y1.",
            "VernacExtend",
            "fc93c1a9f0754b4e89815a2bfe429f8272068ccd"
        ],
        [
            "apply continuity_pt_minus.",
            "VernacExtend",
            "ee124f243d9a30e1165f89a65c2280f21b3b2888"
        ],
        [
            "apply Cfa.",
            "VernacExtend",
            "07ac4170cfd79d653a3acaee48bd97a296f618c9"
        ],
        [
            "apply Cga.",
            "VernacExtend",
            "7cfc9925a786cdf8d012b404a0945341f33b44ee"
        ],
        [
            "intros x P.",
            "VernacExtend",
            "12d2fb7d0baab2b1e2d0943e6ddaa6b6639a8fca"
        ],
        [
            "apply trans_eq with (Derive h x).",
            "VernacExtend",
            "22244f845996d2a989613979ecf54b578ff34867"
        ],
        [
            "apply sym_eq, is_derive_unique, is_derive_Reals.",
            "VernacExtend",
            "7a4d27f414ad3e067e3d1436e600bd9e66b9c974"
        ],
        [
            "now destruct (pr x P).",
            "VernacExtend",
            "b6223ad4357e5f2894d69af527840b22b2bf7256"
        ],
        [
            "rewrite Derive_minus.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (Hfg _ P).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "apply Df; split; apply P.",
            "VernacExtend",
            "5dae9cfc04b458ee6672f76a8261b00d0314d3dd"
        ],
        [
            "apply Dg; split; apply P.",
            "VernacExtend",
            "94d1cf4e1bce907b1980e0e06b945e76b4797ba5"
        ],
        [
            "unfold constant_D_eq in H.",
            "VernacExtend",
            "5f80fe2e335f73afff33d48d822d5882ab5ac1ff"
        ],
        [
            "exists (h a).",
            "VernacExtend",
            "3e190302d5b481b82ba2bb8d2acf083eac43a95b"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "rewrite <- (H _ Hx).",
            "VernacExtend",
            "1c8839684401c2aebe9b7678645110b0fcf2669e"
        ],
        [
            "unfold h; ring.",
            "VernacExtend",
            "8bb23f7a75893495e684cba456e7ce0601caab68"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section ext_cont.",
            "VernacBeginSection",
            "1f121349d16a18f0860bd4c217561b4ecab05839"
        ],
        [
            "Context {U : UniformSpace}.",
            "VernacContext",
            "18eeffc336b9ecd9aebcd56b70e4d03bddeee0af"
        ],
        [
            "Definition extension_cont (f g : R -> U) (a x : R) : U := match Rle_dec x a with | left _ => f x | right _ => g x end.",
            "VernacDefinition",
            "2d488429e3d2953caf2c0d1028f9c38b5d3fc80b"
        ],
        [
            "Lemma extension_cont_continuous (f g : R -> U) (a : R) : continuous f a -> continuous g a -> f a = g a -> continuous (extension_cont f g a) a.",
            "VernacStartTheoremProof",
            "1ace56ad27aa5d1f6b10acb0d2ce8b0c27a97719"
        ],
        [
            "simpl => Cf Cg Heq ; apply filterlim_locally => /= eps.",
            "VernacExtend",
            "fbaa61af20867a5dfb8bb5213ca8048b258f8f3a"
        ],
        [
            "generalize (proj1 (filterlim_locally _ _) Cf eps) => {Cf} Cf.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "generalize (proj1 (filterlim_locally _ _) Cg eps) => {Cg} Cg.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "generalize (filter_and _ _ Cf Cg).",
            "VernacExtend",
            "5435d224ed3f48eff387b20465d8b5acbe815428"
        ],
        [
            "apply filter_imp => {Cf Cg} x [Cf Cg].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /extension_cont.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Rle_dec (Rle_refl a) => // _ _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_dec => // H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite Heq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ext_cont.",
            "VernacEndSegment",
            "60af1a39375ee0efb483389c7e053eee013212ea"
        ],
        [
            "Section ext_cont'.",
            "VernacBeginSection",
            "ec3751adc92b8b50bdb1df04d9be6c85e8395a63"
        ],
        [
            "Context {V : NormedModule R_AbsRing}.",
            "VernacContext",
            "5d56ede25ce8804229ff69d29b81c4721f84018a"
        ],
        [
            "Lemma extension_cont_is_derive (f g : R -> V) (a : R) (l : V) : is_derive f a l -> is_derive g a l -> f a = g a -> is_derive (extension_cont f g a) a l.",
            "VernacStartTheoremProof",
            "7400ed76d8ea230517a37b889e86e52ba74d64ee"
        ],
        [
            "case => _ Cf [_ Cg] Heq.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "by apply is_linear_scal_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => x Hx eps.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: (Cf x Hx eps) => {Cf} Cf.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: (Cg x Hx eps) => {Cg} Cg.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "generalize (is_filter_lim_locally_unique _ _ Hx) => {Hx} Hx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -Hx {x Hx} in Cf, Cg |- *.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "generalize (filter_and _ _ Cf Cg).",
            "VernacExtend",
            "5435d224ed3f48eff387b20465d8b5acbe815428"
        ],
        [
            "apply filter_imp => {Cf Cg} x [Cf Cg].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /extension_cont.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Rle_dec => Hx ; case: Rle_dec (Rle_refl a) => //= _ _.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "by rewrite Heq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ext_cont'.",
            "VernacEndSegment",
            "a0c91765fd64cefa373694cd9184ddb9bc419c22"
        ],
        [
            "Section ext_C0.",
            "VernacBeginSection",
            "422c81811700e42f82c3d54b5c588c9fbce16af6"
        ],
        [
            "Context {V : NormedModule R_AbsRing}.",
            "VernacContext",
            "5d56ede25ce8804229ff69d29b81c4721f84018a"
        ],
        [
            "Definition extension_C0 (f : R -> V) (a b : Rbar) (x : R) : V := match Rbar_le_dec a x with | left _ => match Rbar_le_dec x b with | left _ => f x | right _ => f (real b) end | right _ => f (real a) end.",
            "VernacDefinition",
            "d55e5a233efcd794fd7ab8f6973b2aed9e255a9a"
        ],
        [
            "Lemma extension_C0_ext (f : R -> V) (a b : Rbar) : forall (x : R), Rbar_le a x -> Rbar_le x b -> (extension_C0 f a b) x = f x.",
            "VernacStartTheoremProof",
            "e6cfcbd7c59369a08b8a837afeae145f69cefe85"
        ],
        [
            "move => x Hax Hxb.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /extension_C0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Rbar_le_dec => // _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rbar_le_dec => // _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma extension_C0_continuous (f : R -> V) (a b : Rbar) : Rbar_le a b -> (forall x : R, Rbar_le a x -> Rbar_le x b -> continuous f x) -> forall x, continuous (extension_C0 f a b) x.",
            "VernacStartTheoremProof",
            "44be4996804d9f0ae7a29e472511bf320848c391"
        ],
        [
            "intros Hab Cf x.",
            "VernacExtend",
            "d1aafc6f8f9f8b51e1957b57ae27290496f15043"
        ],
        [
            "apply Rbar_le_lt_or_eq_dec in Hab ; case: Hab => Hab.",
            "VernacExtend",
            "39ec6f65a41d1b16fbc42a9b9bf2f387950f6a4a"
        ],
        [
            "case: (Rbar_lt_le_dec x a) => Hax.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "eapply continuous_ext_loc.",
            "VernacExtend",
            "c01bec8ae343e57ff11b132d8b41580fd7186648"
        ],
        [
            "apply locally_interval with m_infty a.",
            "VernacExtend",
            "1bddfc8fdecfe69fcea127855b0df3917d7e7264"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => y _ Hay.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /extension_C0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Rbar_le_dec => H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "contradict H ; by apply Rbar_lt_not_le.",
            "VernacExtend",
            "3c26dcba9e578f112cb42e360e20b3fb78a8b9cf"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply continuous_const.",
            "VernacExtend",
            "ce55a6e223333ab95408ff238948e65ea9604d81"
        ],
        [
            "apply Rbar_le_lt_or_eq_dec in Hax ; case: Hax => Hax.",
            "VernacExtend",
            "cf758f5cff5931fa2662e1cbb8c2482760a2a4fb"
        ],
        [
            "case: (Rbar_lt_le_dec x b) => Hbx.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "eapply continuous_ext_loc.",
            "VernacExtend",
            "c01bec8ae343e57ff11b132d8b41580fd7186648"
        ],
        [
            "apply locally_interval with a b.",
            "VernacExtend",
            "6938e1aa85f78330eb3fa8f6247c89a3e943c4c8"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => y Hay Hby.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /extension_C0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Rbar_le_dec => H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rbar_le_dec => H0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "contradict H0 ; by apply Rbar_lt_le.",
            "VernacExtend",
            "2e28e8e5b324e5a7dfdafde95cb93720aa6e8366"
        ],
        [
            "contradict H ; by apply Rbar_lt_le.",
            "VernacExtend",
            "3c26dcba9e578f112cb42e360e20b3fb78a8b9cf"
        ],
        [
            "apply Cf ; by apply Rbar_lt_le.",
            "VernacExtend",
            "e0bb08ab0948a4c7bb390d748c36841fc96e2bee"
        ],
        [
            "apply Rbar_le_lt_or_eq_dec in Hbx ; case: Hbx => Hbx.",
            "VernacExtend",
            "d12113706f3a729dae96b400c18b8616c095f478"
        ],
        [
            "eapply continuous_ext_loc.",
            "VernacExtend",
            "c01bec8ae343e57ff11b132d8b41580fd7186648"
        ],
        [
            "apply locally_interval with b p_infty.",
            "VernacExtend",
            "45f67acc219de807aa3db7cb8aafe9a73366cdd4"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => y Hby _.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /extension_C0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Rbar_le_dec => H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rbar_le_dec => H0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "contradict H0 ; by apply Rbar_lt_not_le.",
            "VernacExtend",
            "2e28e8e5b324e5a7dfdafde95cb93720aa6e8366"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "contradict H ; eapply Rbar_le_trans, Rbar_lt_le, Hby.",
            "VernacExtend",
            "c2debc17f208287244178397d14603ec442e91a6"
        ],
        [
            "by apply Rbar_lt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply continuous_const.",
            "VernacExtend",
            "ce55a6e223333ab95408ff238948e65ea9604d81"
        ],
        [
            "destruct b as [b | | ] => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "injection Hbx => {Hbx} Hbx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -Hbx {x Hbx} in Hax |- *.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply continuous_ext_loc with (extension_cont f (fun _ => f (real b)) b).",
            "VernacExtend",
            "deea91899188939a09c1a382ab961bf2b26c79aa"
        ],
        [
            "apply locally_interval with a p_infty => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move => y Hay _.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /extension_cont /extension_C0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Rle_dec => H ; case: Rbar_le_dec => H0 ; case: (Rbar_le_dec y b) => // _.",
            "VernacExtend",
            "d4127243a8edd835b38ce1b186629bc51391e41f"
        ],
        [
            "contradict H0 ; by apply Rbar_lt_le.",
            "VernacExtend",
            "2e28e8e5b324e5a7dfdafde95cb93720aa6e8366"
        ],
        [
            "contradict H0 ; by apply Rbar_lt_le.",
            "VernacExtend",
            "2e28e8e5b324e5a7dfdafde95cb93720aa6e8366"
        ],
        [
            "apply extension_cont_continuous => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Cf => /=.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply Rbar_lt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rle_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply continuous_const.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "destruct a as [a | | ] => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "injection Hax => {Hax} Hax.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -Hax {x Hax}.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply continuous_ext_loc with (extension_cont (fun _ => f (real a)) f a).",
            "VernacExtend",
            "ad708887f7f028b83f50bf379dbe30ba335d3b42"
        ],
        [
            "apply locally_interval with m_infty b => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move => y _ Hbx.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /extension_cont /extension_C0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Rle_dec => H ; case: Rbar_le_dec => //= H0 ; try case: Rbar_le_dec => // H1.",
            "VernacExtend",
            "47d920dee8e2844c1ff0be400a8ba66f22474d44"
        ],
        [
            "by replace y with a by now apply Rle_antisym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "contradict H1 ; by apply Rbar_lt_le.",
            "VernacExtend",
            "9ea3455504f5b08394497bed6e3f82e2e09bb28e"
        ],
        [
            "contradict H1 ; by apply Rbar_lt_le.",
            "VernacExtend",
            "9ea3455504f5b08394497bed6e3f82e2e09bb28e"
        ],
        [
            "by contradict H0 ; apply Rlt_le, Rnot_le_lt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply extension_cont_continuous => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply continuous_const.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Cf.",
            "VernacExtend",
            "50610f46fbfa53c93c9fcf1f56f87527a14f990a"
        ],
        [
            "by apply Rle_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rbar_lt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -Hab {b Hab Cf}.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "eapply continuous_ext.",
            "VernacExtend",
            "af56009f03cc475e5df4080634ec8cb5cf2402e8"
        ],
        [
            "intros y.",
            "VernacExtend",
            "d3cd14babe4904577f05dd23b379c589bf67ea40"
        ],
        [
            "rewrite /extension_C0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Rbar_le_dec => H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "2: reflexivity.",
            "VernacExtend",
            "96982d22d416486e18f14fc58d1a33677ca59890"
        ],
        [
            "case: Rbar_le_dec => // H0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "destruct a as [a | | ] => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by replace y with a by now apply Rle_antisym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply continuous_const.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ext_C0.",
            "VernacEndSegment",
            "31614e9c7062aed34e5067ac4fa0d96a9ef7b2c8"
        ],
        [
            "Section ext_C1.",
            "VernacBeginSection",
            "98f5508bccd1b12514abb507b2340178ff9a0fab"
        ],
        [
            "Context {V : NormedModule R_AbsRing}.",
            "VernacContext",
            "5d56ede25ce8804229ff69d29b81c4721f84018a"
        ],
        [
            "Definition extension_C1 (f df : R -> V) (a b : Rbar) (x : R) : V := match Rbar_le_dec a x with | left _ => match Rbar_le_dec x b with | left _ => f x | right _ => plus (f (real b)) (scal (x - real b) (df (real b))) end | right _ => plus (f (real a)) (scal (x - real a) (df (real a))) end.",
            "VernacDefinition",
            "def62df73fd8f129121f18dd43610412b9765082"
        ],
        [
            "Lemma extension_C1_ext (f df : R -> V) (a b : Rbar) : forall (x : R), Rbar_le a x -> Rbar_le x b -> (extension_C1 f df a b) x = f x.",
            "VernacStartTheoremProof",
            "6f6031ab985f929f9994f8fe9950053f5b77421b"
        ],
        [
            "move => x Hax Hxb.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /extension_C1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Rbar_le_dec => // _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rbar_le_dec => // _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma extension_C1_is_derive (f df : R -> V) (a b : Rbar) : Rbar_le a b -> (forall x : R, Rbar_le a x -> Rbar_le x b -> is_derive f x (df x)) -> forall x : R, is_derive (extension_C1 f df a b) x (extension_C0 df a b x).",
            "VernacStartTheoremProof",
            "6b4016fd80018f687eb1aa78bec2e6a3083b18d2"
        ],
        [
            "intros Hab Cf x.",
            "VernacExtend",
            "d1aafc6f8f9f8b51e1957b57ae27290496f15043"
        ],
        [
            "apply Rbar_le_lt_or_eq_dec in Hab ; case: Hab => Hab.",
            "VernacExtend",
            "39ec6f65a41d1b16fbc42a9b9bf2f387950f6a4a"
        ],
        [
            "case: (Rbar_lt_le_dec x a) => Hax.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "evar_last.",
            "VernacExtend",
            "66189d18eff3abe5c0f87ca72027637c063094b4"
        ],
        [
            "eapply is_derive_ext_loc.",
            "VernacExtend",
            "eb33b0d5651548cda74587d0bce961c97cd5ab81"
        ],
        [
            "apply locally_interval with m_infty a.",
            "VernacExtend",
            "1bddfc8fdecfe69fcea127855b0df3917d7e7264"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => y _ Hay.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /extension_C1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Rbar_le_dec => H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "contradict H ; by apply Rbar_lt_not_le.",
            "VernacExtend",
            "3c26dcba9e578f112cb42e360e20b3fb78a8b9cf"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply is_derive_plus.",
            "VernacExtend",
            "833dd5d321c121d4f21e45ff078c99ef1dbaad8b"
        ],
        [
            "apply is_derive_const.",
            "VernacExtend",
            "0c57570ae21ab9a27b6b5a5df221d9432c67f177"
        ],
        [
            "apply @is_derive_scal_l.",
            "VernacExtend",
            "09fbc492e631a1049c9908809e6d5187e6041015"
        ],
        [
            "apply @is_derive_minus.",
            "VernacExtend",
            "0ba736b89cd590f412796e73072b30358feee9f3"
        ],
        [
            "apply is_derive_id.",
            "VernacExtend",
            "f48d59a22b6184c077230e9fa12ff9ee2bba6989"
        ],
        [
            "apply is_derive_const.",
            "VernacExtend",
            "0c57570ae21ab9a27b6b5a5df221d9432c67f177"
        ],
        [
            "rewrite plus_zero_l minus_zero_r scal_one.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /extension_C0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Rbar_le_dec => H //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Rbar_le_not_lt in H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rbar_le_lt_or_eq_dec in Hax ; case: Hax => Hax.",
            "VernacExtend",
            "cf758f5cff5931fa2662e1cbb8c2482760a2a4fb"
        ],
        [
            "case: (Rbar_lt_le_dec x b) => Hbx.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "evar_last.",
            "VernacExtend",
            "66189d18eff3abe5c0f87ca72027637c063094b4"
        ],
        [
            "eapply is_derive_ext_loc.",
            "VernacExtend",
            "eb33b0d5651548cda74587d0bce961c97cd5ab81"
        ],
        [
            "apply locally_interval with a b.",
            "VernacExtend",
            "6938e1aa85f78330eb3fa8f6247c89a3e943c4c8"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => y Hay Hby.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply sym_eq, extension_C1_ext ; by apply Rbar_lt_le.",
            "VernacExtend",
            "b49d3795d5d746124e9c3b739b98caa8cfe33a94"
        ],
        [
            "apply Cf ; by apply Rbar_lt_le.",
            "VernacExtend",
            "e0bb08ab0948a4c7bb390d748c36841fc96e2bee"
        ],
        [
            "rewrite /extension_C0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Rbar_le_dec => // H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rbar_le_dec => // H0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Rbar_lt_le in Hbx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rbar_lt_le in Hax.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rbar_le_lt_or_eq_dec in Hbx ; case: Hbx => Hbx.",
            "VernacExtend",
            "d12113706f3a729dae96b400c18b8616c095f478"
        ],
        [
            "evar_last.",
            "VernacExtend",
            "66189d18eff3abe5c0f87ca72027637c063094b4"
        ],
        [
            "eapply is_derive_ext_loc.",
            "VernacExtend",
            "eb33b0d5651548cda74587d0bce961c97cd5ab81"
        ],
        [
            "apply locally_interval with b p_infty.",
            "VernacExtend",
            "45f67acc219de807aa3db7cb8aafe9a73366cdd4"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => y Hby _.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /extension_C1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Rbar_le_dec => H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rbar_le_dec => H0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "contradict H0 ; by apply Rbar_lt_not_le.",
            "VernacExtend",
            "2e28e8e5b324e5a7dfdafde95cb93720aa6e8366"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "contradict H ; eapply Rbar_le_trans, Rbar_lt_le, Hby.",
            "VernacExtend",
            "c2debc17f208287244178397d14603ec442e91a6"
        ],
        [
            "by apply Rbar_lt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_derive_plus.",
            "VernacExtend",
            "833dd5d321c121d4f21e45ff078c99ef1dbaad8b"
        ],
        [
            "apply is_derive_const.",
            "VernacExtend",
            "0c57570ae21ab9a27b6b5a5df221d9432c67f177"
        ],
        [
            "apply @is_derive_scal_l.",
            "VernacExtend",
            "09fbc492e631a1049c9908809e6d5187e6041015"
        ],
        [
            "apply @is_derive_minus.",
            "VernacExtend",
            "0ba736b89cd590f412796e73072b30358feee9f3"
        ],
        [
            "apply is_derive_id.",
            "VernacExtend",
            "f48d59a22b6184c077230e9fa12ff9ee2bba6989"
        ],
        [
            "apply is_derive_const.",
            "VernacExtend",
            "0c57570ae21ab9a27b6b5a5df221d9432c67f177"
        ],
        [
            "rewrite plus_zero_l minus_zero_r scal_one.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /extension_C0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Rbar_le_dec => H //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rbar_le_dec => H0 //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Rbar_le_not_lt in H0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rbar_lt_le in Hax.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "destruct b as [b | | ] => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "injection Hbx => {Hbx} Hbx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -Hbx {x Hbx} in Hax |- *.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "evar_last.",
            "VernacExtend",
            "66189d18eff3abe5c0f87ca72027637c063094b4"
        ],
        [
            "apply is_derive_ext_loc with (extension_cont f (fun x => plus (f (real b)) (scal (x - real b) (df (real b)))) b).",
            "VernacExtend",
            "05a94395e00e51b52c4feabd555cb06cbb984e87"
        ],
        [
            "apply locally_interval with a p_infty => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move => y Hay _.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /extension_cont /extension_C1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Rle_dec => H ; case: Rbar_le_dec => H0 ; case: (Rbar_le_dec y b) => // _.",
            "VernacExtend",
            "d4127243a8edd835b38ce1b186629bc51391e41f"
        ],
        [
            "contradict H0 ; by apply Rbar_lt_le.",
            "VernacExtend",
            "2e28e8e5b324e5a7dfdafde95cb93720aa6e8366"
        ],
        [
            "contradict H0 ; by apply Rbar_lt_le.",
            "VernacExtend",
            "2e28e8e5b324e5a7dfdafde95cb93720aa6e8366"
        ],
        [
            "apply extension_cont_is_derive => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Cf => /=.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply Rbar_lt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rle_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "evar_last.",
            "VernacExtend",
            "66189d18eff3abe5c0f87ca72027637c063094b4"
        ],
        [
            "apply is_derive_plus.",
            "VernacExtend",
            "833dd5d321c121d4f21e45ff078c99ef1dbaad8b"
        ],
        [
            "apply is_derive_const.",
            "VernacExtend",
            "0c57570ae21ab9a27b6b5a5df221d9432c67f177"
        ],
        [
            "apply @is_derive_scal_l.",
            "VernacExtend",
            "09fbc492e631a1049c9908809e6d5187e6041015"
        ],
        [
            "apply @is_derive_minus.",
            "VernacExtend",
            "0ba736b89cd590f412796e73072b30358feee9f3"
        ],
        [
            "apply is_derive_id.",
            "VernacExtend",
            "f48d59a22b6184c077230e9fa12ff9ee2bba6989"
        ],
        [
            "apply is_derive_const.",
            "VernacExtend",
            "0c57570ae21ab9a27b6b5a5df221d9432c67f177"
        ],
        [
            "by rewrite plus_zero_l minus_zero_r scal_one.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite Rminus_eq_0 @scal_zero_l plus_zero_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /extension_C0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Rbar_le_dec => H0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rbar_le_dec (Rle_refl b) => //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Rbar_lt_le in Hax.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "destruct a as [a | | ] => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "injection Hax => {Hax} Hax.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -Hax {x Hax}.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "evar_last.",
            "VernacExtend",
            "66189d18eff3abe5c0f87ca72027637c063094b4"
        ],
        [
            "apply is_derive_ext_loc with (extension_cont (fun x => plus (f (real a)) (scal (x - real a) (df (real a)))) f a).",
            "VernacExtend",
            "7c6a7e2f1f445e7c78d0478c6bc04e0a42b16f3e"
        ],
        [
            "apply locally_interval with m_infty b => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move => y _ Hbx.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /extension_cont /extension_C1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Rle_dec => H ; case: Rbar_le_dec => //= H0 ; try case: Rbar_le_dec => // H1.",
            "VernacExtend",
            "47d920dee8e2844c1ff0be400a8ba66f22474d44"
        ],
        [
            "replace y with a by now apply Rle_antisym.",
            "VernacExtend",
            "74ce45fea43322a8a75394c571c23b15ee95ce6d"
        ],
        [
            "by rewrite Rminus_eq_0 @scal_zero_l plus_zero_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "contradict H1 ; by apply Rbar_lt_le.",
            "VernacExtend",
            "9ea3455504f5b08394497bed6e3f82e2e09bb28e"
        ],
        [
            "contradict H1 ; by apply Rbar_lt_le.",
            "VernacExtend",
            "9ea3455504f5b08394497bed6e3f82e2e09bb28e"
        ],
        [
            "by contradict H0 ; apply Rlt_le, Rnot_le_lt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply extension_cont_is_derive => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply is_derive_plus.",
            "VernacExtend",
            "833dd5d321c121d4f21e45ff078c99ef1dbaad8b"
        ],
        [
            "apply is_derive_const.",
            "VernacExtend",
            "0c57570ae21ab9a27b6b5a5df221d9432c67f177"
        ],
        [
            "apply @is_derive_scal_l.",
            "VernacExtend",
            "09fbc492e631a1049c9908809e6d5187e6041015"
        ],
        [
            "apply @is_derive_minus.",
            "VernacExtend",
            "0ba736b89cd590f412796e73072b30358feee9f3"
        ],
        [
            "apply is_derive_id.",
            "VernacExtend",
            "f48d59a22b6184c077230e9fa12ff9ee2bba6989"
        ],
        [
            "apply is_derive_const.",
            "VernacExtend",
            "0c57570ae21ab9a27b6b5a5df221d9432c67f177"
        ],
        [
            "rewrite plus_zero_l minus_zero_r scal_one.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Cf.",
            "VernacExtend",
            "50610f46fbfa53c93c9fcf1f56f87527a14f990a"
        ],
        [
            "by apply Rle_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rbar_lt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite Rminus_eq_0 @scal_zero_l plus_zero_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite plus_zero_l minus_zero_r scal_one.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /extension_C0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Rbar_le_dec (Rle_refl a) => // _ _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rbar_le_dec => H //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Rbar_lt_le in Hab.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -Hab {b Hab Cf}.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "evar_last.",
            "VernacExtend",
            "66189d18eff3abe5c0f87ca72027637c063094b4"
        ],
        [
            "eapply is_derive_ext.",
            "VernacExtend",
            "573c1b8d910f7acc5c079ebf5ad4c6203c0b7b81"
        ],
        [
            "intros y.",
            "VernacExtend",
            "d3cd14babe4904577f05dd23b379c589bf67ea40"
        ],
        [
            "rewrite /extension_C1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Rbar_le_dec => H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "2: reflexivity.",
            "VernacExtend",
            "96982d22d416486e18f14fc58d1a33677ca59890"
        ],
        [
            "case: Rbar_le_dec => // H0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "destruct a as [a | | ] => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "replace y with a by now apply Rle_antisym.",
            "VernacExtend",
            "74ce45fea43322a8a75394c571c23b15ee95ce6d"
        ],
        [
            "by rewrite Rminus_eq_0 @scal_zero_l plus_zero_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_derive_plus.",
            "VernacExtend",
            "833dd5d321c121d4f21e45ff078c99ef1dbaad8b"
        ],
        [
            "apply is_derive_const.",
            "VernacExtend",
            "0c57570ae21ab9a27b6b5a5df221d9432c67f177"
        ],
        [
            "apply @is_derive_scal_l.",
            "VernacExtend",
            "09fbc492e631a1049c9908809e6d5187e6041015"
        ],
        [
            "apply @is_derive_minus.",
            "VernacExtend",
            "0ba736b89cd590f412796e73072b30358feee9f3"
        ],
        [
            "apply is_derive_id.",
            "VernacExtend",
            "f48d59a22b6184c077230e9fa12ff9ee2bba6989"
        ],
        [
            "apply is_derive_const.",
            "VernacExtend",
            "0c57570ae21ab9a27b6b5a5df221d9432c67f177"
        ],
        [
            "rewrite plus_zero_l minus_zero_r scal_one.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /extension_C0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Rbar_le_dec => H //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rbar_le_dec => H0 //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "destruct a as [a | | ] => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by replace a with x by now apply Rle_antisym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ext_C1.",
            "VernacEndSegment",
            "a58158fcc36a9cb6bb8b1d035c57226b81e26af4"
        ],
        [
            "Lemma extension_C1_ex_derive (f df : R -> R) (a b : Rbar) : Rbar_le a b -> (forall x : R, Rbar_le a x -> Rbar_le x b -> ex_derive f x) -> forall x : R, ex_derive (extension_C1 f (Derive f) a b) x.",
            "VernacStartTheoremProof",
            "2714fefe1afd7cc12c606a1c826a008ce0e3352c"
        ],
        [
            "intros Hab Df x.",
            "VernacExtend",
            "3c057d4b06f28dd839f23c812679f3d491f0de88"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "apply extension_C1_is_derive => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "intros y Hay Hby.",
            "VernacExtend",
            "a80c8f8d06b66db1f19e5bb35c0b4484ba8f0518"
        ],
        [
            "by apply Derive_correct, Df.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section NullDerivative.",
            "VernacBeginSection",
            "dfb7804fa6345ede4d0c003afbdd7e6cc2825292"
        ],
        [
            "Context {V : NormedModule R_AbsRing}.",
            "VernacContext",
            "5d56ede25ce8804229ff69d29b81c4721f84018a"
        ],
        [
            "Lemma eq_is_derive : forall (f : R -> V) (a b : R), (forall t, a <= t <= b -> is_derive f t zero) -> a < b -> f a = f b.",
            "VernacStartTheoremProof",
            "9b890fcc6a892a6447392c317d61c6fa47ff4ae8"
        ],
        [
            "intros f a b Hd Hab.",
            "VernacExtend",
            "68eaabb5a472218e9929bf8adf24842a02176531"
        ],
        [
            "apply ball_norm_eq => eps2.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "pose eps := pos_div_2 eps2.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have Heps': 0 < eps / (b - a).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply Rdiv_lt_0_compat.",
            "VernacExtend",
            "283136f6e52505e4579f1f286529bc7e0bbfd6d7"
        ],
        [
            "apply eps.",
            "VernacExtend",
            "594d151b731c3f7a90933421f2349d84bc05293f"
        ],
        [
            "exact: Rlt_Rminus.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "pose eps' := mkposreal (eps / (b - a)) Heps'.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "pose P t := norm (minus (f t) (f a)) <= eps' * (t - a).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "pose A x := x <= b /\\ forall t, a <= t <= x -> P t.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have H c : (forall t, a <= t < c -> P t) -> a <= c <= b -> exists delta:posreal, (forall t, a <= t <= Rmin b (c + delta) -> P t).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "intros HP Hc.",
            "VernacExtend",
            "be65afcb29ae9ace5f31a2583a7a31056417422a"
        ],
        [
            "destruct (Hd c Hc) as [_ Hd'].",
            "VernacExtend",
            "3c65da4aab769a3e23d27921db2527a96524fe14"
        ],
        [
            "refine (_ (Hd' c _ eps')).",
            "VernacExtend",
            "d7173dbefbaa43ba32e5c3091ab28831a5a78cbc"
        ],
        [
            "case => delta H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have Hdelta := cond_pos delta.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists (pos_div_2 delta) => t Ht.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "destruct (Rlt_le_dec t c) as [Htc|Htc].",
            "VernacExtend",
            "07cecfeae8db66e57a3eb5c75606107a3f1db363"
        ],
        [
            "apply HP.",
            "VernacExtend",
            "ca37aebd7e8ae00878bfd4cba5592ae8e97d86d9"
        ],
        [
            "now split.",
            "VernacExtend",
            "1791b9ff1e86fc70e4ee1a32bce684778be25d40"
        ],
        [
            "unfold P.",
            "VernacExtend",
            "434cc3f55beee2a7785044446fc359fddb900b69"
        ],
        [
            "replace (minus (f t) (f a)) with (plus (minus (f t) (f c)) (minus (f c) (f a))).",
            "VernacExtend",
            "6fc0f883c722605d2d8ae2382dd9568fc6df7f87"
        ],
        [
            "apply Rle_trans with (1 := norm_triangle _ _).",
            "VernacExtend",
            "7620ed6d79bb4d5c945c79ff86d9f27a52afe6d4"
        ],
        [
            "replace (eps' * (t - a)) with (eps' * (t - c) + eps' * (c - a)) by ring.",
            "VernacExtend",
            "c91d44656ef9b2d8ffbb72226b411175c21c495c"
        ],
        [
            "apply Rplus_le_compat.",
            "VernacExtend",
            "7a69898b466991bee51047e3a2fc51c3b80fbd93"
        ],
        [
            "move: (H t) => {H}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite scal_zero_r minus_zero_r -[norm (minus t c)]/(Rabs (t - c)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -> Rabs_pos_eq by lra.",
            "VernacExtend",
            "9c76c5c3008cff68dcb23acabb6f5a011f239183"
        ],
        [
            "apply.",
            "VernacExtend",
            "34478a74ad5500dd9adb1e3c1f8d65111f36f8e8"
        ],
        [
            "apply: norm_compat1.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "change (Rabs (t - c) < delta).",
            "VernacExtend",
            "3a75a5518721c579ae9a99ed2a13026f1c63c37d"
        ],
        [
            "apply Rabs_lt_between'.",
            "VernacExtend",
            "63a15ff3174a06f608196b85267ac5d1aae1e55e"
        ],
        [
            "cut (t <= c + delta/2).",
            "VernacExtend",
            "0a51320a0d7882b78bec646c244df6d0c0507dfb"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "apply Rle_trans with (1 := proj2 Ht).",
            "VernacExtend",
            "93984abc88ff9fda8a40a4b7aca7df6b7a02cd58"
        ],
        [
            "apply Rmin_r.",
            "VernacExtend",
            "d165954e4d055817b42cbc8960efd3fee45e4f16"
        ],
        [
            "set (d' := Rmax a (c - delta/2)).",
            "VernacExtend",
            "93bda3bb461ab58c4eadb57476f56fb7e1f30e4b"
        ],
        [
            "replace (minus (f c) (f a)) with (plus (opp (minus (f d') (f c))) (minus (f d') (f a))).",
            "VernacExtend",
            "632db0ad5b31fdb3053695cf77a2c096530029dd"
        ],
        [
            "apply Rle_trans with (1 := norm_triangle _ _).",
            "VernacExtend",
            "7620ed6d79bb4d5c945c79ff86d9f27a52afe6d4"
        ],
        [
            "replace (eps' * (c - a)) with (eps' * (c - d') + eps' * (d' - a)) by ring.",
            "VernacExtend",
            "26f5f2e462dba4a497127bd7903ad9929f9c793f"
        ],
        [
            "apply Rplus_le_compat.",
            "VernacExtend",
            "7a69898b466991bee51047e3a2fc51c3b80fbd93"
        ],
        [
            "move: (H d') => {H}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite scal_zero_r minus_zero_r -[norm (minus d' c)]/(Rabs (d' - c)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite norm_opp -Rabs_Ropp Rabs_pos_eq Ropp_minus_distr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply.",
            "VernacExtend",
            "34478a74ad5500dd9adb1e3c1f8d65111f36f8e8"
        ],
        [
            "apply: norm_compat1.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "change (Rabs (d' - c) < delta).",
            "VernacExtend",
            "71ae512ad278833392994d78ec34a23588a49346"
        ],
        [
            "apply Rabs_lt_between'.",
            "VernacExtend",
            "63a15ff3174a06f608196b85267ac5d1aae1e55e"
        ],
        [
            "apply Rmax_case_strong ; lra.",
            "VernacExtend",
            "fb9a21e4900b0ad69234f9426ca05bbdf148ffb8"
        ],
        [
            "apply Rmax_case_strong ; lra.",
            "VernacExtend",
            "fb9a21e4900b0ad69234f9426ca05bbdf148ffb8"
        ],
        [
            "destruct (Req_dec a d') as [Had|Had].",
            "VernacExtend",
            "5e753810b3db01c2a890040b02acc7f65dd75dc3"
        ],
        [
            "rewrite Had.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /minus plus_opp_r /Rminus Rplus_opp_r Rmult_0_r norm_zero.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "apply HP.",
            "VernacExtend",
            "ca37aebd7e8ae00878bfd4cba5592ae8e97d86d9"
        ],
        [
            "revert Had.",
            "VernacExtend",
            "20bd9b9d8b0566ad5284d740890a6fc72c92bfbb"
        ],
        [
            "apply Rmax_case_strong ; lra.",
            "VernacExtend",
            "fb9a21e4900b0ad69234f9426ca05bbdf148ffb8"
        ],
        [
            "by rewrite opp_minus /minus plus_assoc -(plus_assoc (f c)) plus_opp_l plus_zero_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite /minus plus_assoc -(plus_assoc (f t)) plus_opp_l plus_zero_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "assert (Ha : A a).",
            "VernacExtend",
            "c70ba10fac74b97d0ae4d0b3d33892bb803ef985"
        ],
        [
            "apply (conj (Rlt_le _ _ Hab)).",
            "VernacExtend",
            "dcf6fe5438af7d18e1e0cdc9e123384653bc14bd"
        ],
        [
            "intros t [Ht1 Ht2].",
            "VernacExtend",
            "95edd73fe20420ca69919f7e6e918d58fb065973"
        ],
        [
            "rewrite (Rle_antisym _ _ Ht2 Ht1).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /P /minus plus_opp_r /Rminus Rplus_opp_r Rmult_0_r norm_zero.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "destruct (completeness A) as [s [Hs1 Hs2]].",
            "VernacExtend",
            "3951b79f391518bbb7517ff32199941f3995ab8d"
        ],
        [
            "now exists b => t [At _].",
            "VernacExtend",
            "11b5461ec014b2c024111f05e9fbd95b72b076c3"
        ],
        [
            "now exists a.",
            "VernacExtend",
            "543185bfde82207d58537ccd8917a16d29655aae"
        ],
        [
            "assert (Hs: forall t, a <= t < s -> P t).",
            "VernacExtend",
            "27155b8a5f56e1e35b0919bec1e5b523c2dbf8c1"
        ],
        [
            "intros t Ht.",
            "VernacExtend",
            "9b73bd01b7eab131fc4e1775831ff0e7de378f43"
        ],
        [
            "apply Rnot_lt_le => H'.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "specialize (Hs2 t).",
            "VernacExtend",
            "e0877b7749d3de09247aed6f5c870c7ece5dda40"
        ],
        [
            "apply (Rlt_not_le _ _ (proj2 Ht)), Hs2.",
            "VernacExtend",
            "f84cd67d385a9a49da2ff086499ff6aaa2a6e6aa"
        ],
        [
            "intros x [Ax1 Ax2].",
            "VernacExtend",
            "b7cfbc5d82ee832a797fdfded8ec87b739a28589"
        ],
        [
            "apply Rnot_lt_le => Hxt.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply (Rlt_not_le _ _ H').",
            "VernacExtend",
            "8874f629186575771d349a55ee499146c855108d"
        ],
        [
            "apply Ax2.",
            "VernacExtend",
            "e86ee1e3ac10d3351423883970474b64075bee6a"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "destruct (Req_dec s b) as [->|Hsb].",
            "VernacExtend",
            "0c6240a01c15d1f8acbf8706df95f9732d0eff41"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (H b) as [delta Hdelta].",
            "VernacExtend",
            "495d94e638777098d85219e1d2d5fd0051cc022a"
        ],
        [
            "apply Hs.",
            "VernacExtend",
            "26038359dfe6b0cb344439243c160e8be398bca9"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "apply Rle_lt_trans with (eps' * (b - a)).",
            "VernacExtend",
            "1b4447d3066698f91e3c1d6b357ef65e12b52754"
        ],
        [
            "apply: Hdelta.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have Hdelta := cond_pos delta.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite Rmin_left ; lra.",
            "VernacExtend",
            "bdbdd4e1f560c7c531d32236753d846e5397559c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "have Heps2 := cond_pos eps2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "field_simplify ; lra.",
            "VernacExtend",
            "4d15ee978c61ff668898e9a1ac78799ddcd5e816"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (H s) as [delta Hdelta].",
            "VernacExtend",
            "3a4c61f7a6f0ec4d97c6618d8fcbf1a7b107e676"
        ],
        [
            "apply Hs.",
            "VernacExtend",
            "26038359dfe6b0cb344439243c160e8be398bca9"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "now apply Hs1.",
            "VernacExtend",
            "ea82544943caa5286095e95085e62ff552d401cd"
        ],
        [
            "apply Hs2.",
            "VernacExtend",
            "b3ef937c620aa3b904056b8c406cd42cebe5bdec"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "eelim Rle_not_lt.",
            "VernacExtend",
            "9a5bf1f46ab318ac586893eedb73e5f19349c5f5"
        ],
        [
            "apply Hs1.",
            "VernacExtend",
            "d2e32c17d5aea860a48c679a436cea7780dd91ca"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rmin_l.",
            "VernacExtend",
            "19942458506c6b3427aea84d1ee7179f00e19f1c"
        ],
        [
            "apply Hdelta.",
            "VernacExtend",
            "16df889076043a393731ed0a1f02a3468c93275d"
        ],
        [
            "apply Rmin_case.",
            "VernacExtend",
            "06bee284b3ab9229517272cc3728705bdc7b95ba"
        ],
        [
            "destruct (Hs2 b) ; try easy.",
            "VernacExtend",
            "9d802633cea08054540a48953985c9766972fe77"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have Hdelta' := cond_pos delta.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End NullDerivative.",
            "VernacEndSegment",
            "4dcd3ef8fa9badc2bf530f11bb7b29e24d76e600"
        ],
        [
            "Fixpoint Derive_n (f : R -> R) (n : nat) x := match n with | O => f x | S n => Derive (Derive_n f n) x end.",
            "VernacFixpoint",
            "1afb763d5f901890409aa31bec788f3100aa2823"
        ],
        [
            "Definition ex_derive_n f n x := match n with | O => True | S n => ex_derive (Derive_n f n) x end.",
            "VernacDefinition",
            "1c4b608b56885ebaac0294343edf6250f631d61b"
        ],
        [
            "Definition is_derive_n f n x l := match n with | O => f x = l | S n => is_derive (Derive_n f n) x l end.",
            "VernacDefinition",
            "5c1ee331c466ad719a500a140b2cb5213a5748a4"
        ],
        [
            "Lemma is_derive_n_unique f n x l : is_derive_n f n x l -> Derive_n f n x = l.",
            "VernacStartTheoremProof",
            "139f12ec5edd29083b313524da8dabbce9d629ef"
        ],
        [
            "case n.",
            "VernacExtend",
            "11697c0361eed9b7e10df873f1d76a9d8f9f100a"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "simpl; intros n0 H.",
            "VernacExtend",
            "7ce8df89301ffb05896641471c2e4626788c8ea1"
        ],
        [
            "now apply is_derive_unique.",
            "VernacExtend",
            "5c4d198f7fe512d6f8828a7c5e5b68d89df0a4fd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Derive_n_correct f n x : ex_derive_n f n x -> is_derive_n f n x (Derive_n f n x).",
            "VernacStartTheoremProof",
            "8e67ecfe3e0af350745a6a783b09d9c6af5694b5"
        ],
        [
            "case: n => /= [ | n] Hf.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Derive_correct.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Derive_n_ext_loc : forall f g n x, locally x (fun t => f t = g t) -> Derive_n f n x = Derive_n g n x.",
            "VernacStartTheoremProof",
            "0e100e61c5cb758683e23a834cdcfbf53e1b08d5"
        ],
        [
            "intros f g n x Heq.",
            "VernacExtend",
            "2aeffacb3217d72ba48486e6fdbb453fb8f3f8ef"
        ],
        [
            "pattern x ; apply locally_singleton.",
            "VernacExtend",
            "a697ac3a1d2fd79abd2a3897ae655aa749d52801"
        ],
        [
            "induction n.",
            "VernacExtend",
            "7f3faa2a3277e3553406d09101130efcb1764494"
        ],
        [
            "exact Heq.",
            "VernacExtend",
            "7089bf3423ce2d210efd1ab5a8cfe076161aee40"
        ],
        [
            "apply locally_locally in IHn.",
            "VernacExtend",
            "2134d616a81669b7e9b5e73a0d84388aadea8566"
        ],
        [
            "apply filter_imp with (2 := IHn) => {IHn}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "intros t H.",
            "VernacExtend",
            "475698d739ae2eaf1c0e4f992363cb01cfb29b5b"
        ],
        [
            "now apply Derive_ext_loc.",
            "VernacExtend",
            "c20a196cd1078c0e4596ca153c0dc5e53cb21321"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_derive_n_ext_loc : forall f g n x, locally x (fun t => f t = g t) -> ex_derive_n f n x -> ex_derive_n g n x.",
            "VernacStartTheoremProof",
            "b442153b250b6b3b3c3b64bd4d627fb17cecb7e7"
        ],
        [
            "intros f g n x Heq.",
            "VernacExtend",
            "2aeffacb3217d72ba48486e6fdbb453fb8f3f8ef"
        ],
        [
            "case: n => /= [ | n].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply ex_derive_ext_loc.",
            "VernacExtend",
            "419cd0bdf7d777ecea9b654f923bb90eb8c656e7"
        ],
        [
            "apply locally_locally in Heq.",
            "VernacExtend",
            "0a03c984bfb0239c610e37082deb10e768cfa11d"
        ],
        [
            "apply filter_imp with (2 := Heq) => {Heq}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply Derive_n_ext_loc.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_derive_n_ext_loc : forall f g n x l, locally x (fun t => f t = g t) -> is_derive_n f n x l -> is_derive_n g n x l.",
            "VernacStartTheoremProof",
            "b1a16e985cf9875a997aceaa5b0f1281379d76f2"
        ],
        [
            "intros f g n x l Heq.",
            "VernacExtend",
            "667245d16792ec7b05411475f0ab918c8c459ac9"
        ],
        [
            "case: n => /= [ | n].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move => <- ; apply sym_eq.",
            "VernacExtend",
            "298f333f4345f5ad582c35cbcd8ec21dace876c1"
        ],
        [
            "pattern x ; now apply locally_singleton.",
            "VernacExtend",
            "850c4ffe3f5cbef6994a338855748e0658ee331f"
        ],
        [
            "apply is_derive_ext_loc.",
            "VernacExtend",
            "94c266b6f4b45c216c9ef5fb09ec549c07773a5a"
        ],
        [
            "apply locally_locally in Heq.",
            "VernacExtend",
            "0a03c984bfb0239c610e37082deb10e768cfa11d"
        ],
        [
            "apply filter_imp with (2 := Heq) => {Heq}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply Derive_n_ext_loc.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Derive_n_ext : forall f g n x, (forall t, f t = g t) -> Derive_n f n x = Derive_n g n x.",
            "VernacStartTheoremProof",
            "b8a792fbea5a7a521353c54a12d75a748f5b561c"
        ],
        [
            "intros f g n x Heq.",
            "VernacExtend",
            "2aeffacb3217d72ba48486e6fdbb453fb8f3f8ef"
        ],
        [
            "apply Derive_n_ext_loc.",
            "VernacExtend",
            "497aa3b5fbf6ebfb20fa4fa694bf8701348ced33"
        ],
        [
            "by apply filter_forall.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_derive_n_ext : forall f g n x, (forall t, f t = g t) -> ex_derive_n f n x -> ex_derive_n g n x.",
            "VernacStartTheoremProof",
            "5b83413541174e3509f5de139c684f53d7b62ec2"
        ],
        [
            "intros f g n x Heq.",
            "VernacExtend",
            "2aeffacb3217d72ba48486e6fdbb453fb8f3f8ef"
        ],
        [
            "apply ex_derive_n_ext_loc.",
            "VernacExtend",
            "586f67db390a8c550b9a19d8c7e49c9954f1824c"
        ],
        [
            "by apply filter_forall.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_derive_n_ext : forall f g n x l, (forall t, f t = g t) -> is_derive_n f n x l -> is_derive_n g n x l.",
            "VernacStartTheoremProof",
            "b052e14cb5a4c3080b53d6176ad178218dcf2a3e"
        ],
        [
            "intros f g n x l Heq.",
            "VernacExtend",
            "667245d16792ec7b05411475f0ab918c8c459ac9"
        ],
        [
            "apply is_derive_n_ext_loc.",
            "VernacExtend",
            "1a49de8f76d5d1ef5c69406d831acc8e1659f53c"
        ],
        [
            "by apply filter_forall.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Derive_n_comp: forall f n m x, Derive_n (Derive_n f m) n x = Derive_n f (n+m) x.",
            "VernacStartTheoremProof",
            "335a7eededd1b5e3b6d142eb2d3b0d258dbc5732"
        ],
        [
            "intros f n m.",
            "VernacExtend",
            "73728f090fd7c138f85f0e575525a0e105935c46"
        ],
        [
            "induction n.",
            "VernacExtend",
            "7f3faa2a3277e3553406d09101130efcb1764494"
        ],
        [
            "now simpl.",
            "VernacExtend",
            "7cf8ae1595f521e6705ea84c45dd2f1b53854af2"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "now apply Derive_ext.",
            "VernacExtend",
            "6988f270364b1c9b905d4cefa4ac9f194bbec167"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_derive_Sn (f : R -> R) (n : nat) (x l : R) : locally x (ex_derive f) -> (is_derive_n f (S n) x l <-> is_derive_n (Derive f) n x l).",
            "VernacStartTheoremProof",
            "b951f3d2b54456171675ab4352472cddf43c3648"
        ],
        [
            "move => Hf.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: n => /= [ | n].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "split => H.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply is_derive_unique.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -H ; apply Derive_correct.",
            "VernacExtend",
            "402f7b1d27e16b715d28d46b92ba94b2b3a2b763"
        ],
        [
            "now apply locally_singleton.",
            "VernacExtend",
            "55581ecce71d33d288ed08bd68d1b58b8773f0ab"
        ],
        [
            "split => Hf'.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply is_derive_ext with (2 := Hf').",
            "VernacExtend",
            "d9e61e1059fc578df76bb858742ecad705b1219d"
        ],
        [
            "move => y ; rewrite (Derive_n_comp _ n 1%nat).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by (replace (n + 1)%nat with (S n) by ring).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply is_derive_ext with (2 := Hf').",
            "VernacExtend",
            "d9e61e1059fc578df76bb858742ecad705b1219d"
        ],
        [
            "move => y ; rewrite (Derive_n_comp _ n 1%nat).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by (replace (n + 1)%nat with (S n) by ring).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_derive_n_const n a : forall x, is_derive_n (fun _ => a) (S n) x 0.",
            "VernacStartTheoremProof",
            "d9684bcc6d70798a225060778401b1d592f2c120"
        ],
        [
            "elim: n => /= [ | n IH] x.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by apply @is_derive_const.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "eapply is_derive_ext.",
            "VernacExtend",
            "573c1b8d910f7acc5c079ebf5ad4c6203c0b7b81"
        ],
        [
            "intros t ; apply sym_equal, is_derive_unique, IH.",
            "VernacExtend",
            "2cf07594a6e7d74293d5c74804ae8f56dbacd43a"
        ],
        [
            "by apply @is_derive_const.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_derive_n_const a n x: ex_derive_n (fun _ => a) n x.",
            "VernacStartTheoremProof",
            "c0d63b60cb2d3b7b21719605b9c669d4679ca32b"
        ],
        [
            "case: n => //= ; case => //= [ | n].",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "apply ex_derive_const.",
            "VernacExtend",
            "5e088e7788b08f0cd9fea876799182f3f12e6bff"
        ],
        [
            "eapply ex_derive_ext.",
            "VernacExtend",
            "90a6db182d9d3f4dcfed1fb1aefe14e4ec15d100"
        ],
        [
            "intros t ; apply sym_equal, is_derive_unique, is_derive_n_const.",
            "VernacExtend",
            "420c99f287feff72baf073a0313f5d7671b8741e"
        ],
        [
            "by apply ex_derive_const.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Derive_n_const n a : forall x, Derive_n (fun _ => a) (S n) x = 0.",
            "VernacStartTheoremProof",
            "6949643467c19fbeaae8bc4e66bb8189975b5f9d"
        ],
        [
            "intros x ; apply is_derive_n_unique, is_derive_n_const.",
            "VernacExtend",
            "a5909c091015c30d17918d65646f3e7f8bbdd2ec"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Derive_n_opp (f : R -> R) (n : nat) (x : R) : Derive_n (fun x => - f x) n x = - Derive_n f n x.",
            "VernacStartTheoremProof",
            "fd1beae3ef869756dd60e900e17a6aff9545b74b"
        ],
        [
            "elim: n x => [ | n IH] x /=.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -Derive_opp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Derive_ext.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_derive_n_opp (f : R -> R) (n : nat) (x : R) : ex_derive_n f n x -> ex_derive_n (fun x => -f x) n x.",
            "VernacStartTheoremProof",
            "0afd54848a11b22c6a172e0b19f99b6b41790933"
        ],
        [
            "case: n x => [ | n] /= x Hf.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply ex_derive_opp in Hf.",
            "VernacExtend",
            "07137f14855485696bf7fdc3d9608f35c027c58d"
        ],
        [
            "apply: ex_derive_ext Hf.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "move => y ; by rewrite Derive_n_opp.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_derive_n_opp (f : R -> R) (n : nat) (x l : R) : is_derive_n f n x l -> is_derive_n (fun x => -f x) n x (- l).",
            "VernacStartTheoremProof",
            "ec343568f7498a80bf8e7a611d044a4c76d596e4"
        ],
        [
            "case: n x => [ | n] /= x Hf.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite Hf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_derive_opp in Hf.",
            "VernacExtend",
            "66f2b1b349ee57d7cbea176b1b442a9c5f34a6f3"
        ],
        [
            "apply: is_derive_ext Hf.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "move => y ; by rewrite Derive_n_opp.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Derive_n_plus (f g : R -> R) (n : nat) (x : R) : locally x (fun y => forall k, (k <= n)%nat -> ex_derive_n f k y) -> locally x (fun y => forall k, (k <= n)%nat -> ex_derive_n g k y) -> Derive_n (fun x => f x + g x) n x = Derive_n f n x + Derive_n g n x.",
            "VernacStartTheoremProof",
            "48af73de25defa65121639af12a39fb0e937d48d"
        ],
        [
            "elim: n x => /= [ | n IH] x [rf Hf] [rg Hg].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -Derive_plus.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Derive_ext_loc.",
            "VernacExtend",
            "be93f4349517e1b02e04bc815146affa1b5f33b8"
        ],
        [
            "set r := (mkposreal _ (Rmin_stable_in_posreal rf rg)) ; exists r => y Hy.",
            "VernacExtend",
            "ced270260aea2dd3ab523a646806c84962140531"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /= in Hy.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rabs_lt_between' in Hy.",
            "VernacExtend",
            "ba88cf28d01239e61700215c528d225d0556ddd8"
        ],
        [
            "case: Hy ; move/Rlt_Rminus => Hy1 ; move/Rlt_Rminus => Hy2.",
            "VernacExtend",
            "ad9703cddf270cbbe68f7e9fd9d34355dc053bfe"
        ],
        [
            "set r0 := mkposreal _ (Rmin_pos _ _ Hy1 Hy2).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "apply IH ; exists r0 => z Hz k Hk.",
            "VernacExtend",
            "6fcace697e4472b54d713cabc4565b1a3f73da64"
        ],
        [
            "apply Hf.",
            "VernacExtend",
            "44e8b4102d20ba355038f72fc52240fc6cb8650c"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /= in Hz.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rabs_lt_between' in Hz.",
            "VernacExtend",
            "464d3508b48b60becac1da186c0c6abe0d80d335"
        ],
        [
            "rewrite /Rminus -Rmax_opp_Rmin Rplus_max_distr_l (Rplus_min_distr_l y) in Hz.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Hz ; move => Hz1 Hz2.",
            "VernacExtend",
            "d09d9458d087c74b7317d831afc65fc07a0f6e3f"
        ],
        [
            "apply Rle_lt_trans with (1 := Rmax_l _ _) in Hz1 ; ring_simplify in Hz1.",
            "VernacExtend",
            "ff1435522782597420462595f9d511e584e64ea3"
        ],
        [
            "apply Rlt_le_trans with (2 := Rmin_r _ _) in Hz2 ; ring_simplify (y + (x + Rmin rf rg + - y)) in Hz2.",
            "VernacExtend",
            "92cf66ee37adb70bdcd50aec03f4162f873de15d"
        ],
        [
            "have Hz := (conj Hz1 Hz2) => {Hz1 Hz2}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rabs_lt_between' in Hz.",
            "VernacExtend",
            "464d3508b48b60becac1da186c0c6abe0d80d335"
        ],
        [
            "apply Rlt_le_trans with (1 := Hz) => /= ; by apply Rmin_l.",
            "VernacExtend",
            "7bd77ea96f784074e3b1d448260a45dd4191485f"
        ],
        [
            "by apply le_trans with (1 := Hk), le_n_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Hg.",
            "VernacExtend",
            "01c1d3461bd6fa059f36624dcd703fe73a0894a8"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /= in Hz.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rabs_lt_between' in Hz.",
            "VernacExtend",
            "464d3508b48b60becac1da186c0c6abe0d80d335"
        ],
        [
            "rewrite /Rminus -Rmax_opp_Rmin Rplus_max_distr_l (Rplus_min_distr_l y) in Hz.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Hz ; move => Hz1 Hz2.",
            "VernacExtend",
            "d09d9458d087c74b7317d831afc65fc07a0f6e3f"
        ],
        [
            "apply Rle_lt_trans with (1 := Rmax_l _ _) in Hz1 ; ring_simplify in Hz1.",
            "VernacExtend",
            "ff1435522782597420462595f9d511e584e64ea3"
        ],
        [
            "apply Rlt_le_trans with (2 := Rmin_r _ _) in Hz2 ; ring_simplify (y + (x + Rmin rf rg + - y)) in Hz2.",
            "VernacExtend",
            "92cf66ee37adb70bdcd50aec03f4162f873de15d"
        ],
        [
            "have Hz := (conj Hz1 Hz2) => {Hz1 Hz2}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rabs_lt_between' in Hz.",
            "VernacExtend",
            "464d3508b48b60becac1da186c0c6abe0d80d335"
        ],
        [
            "apply Rlt_le_trans with (1 := Hz) => /= ; by apply Rmin_r.",
            "VernacExtend",
            "7bd77ea96f784074e3b1d448260a45dd4191485f"
        ],
        [
            "by apply le_trans with (1 := Hk), le_n_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Hf with (k := (S n)).",
            "VernacExtend",
            "63bb01c15e715baddd79786c2c979994b78e21d4"
        ],
        [
            "by apply ball_center.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply le_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Hg with (k := S n).",
            "VernacExtend",
            "e5aeb76d6299db43053afbc00b96e300bac313a9"
        ],
        [
            "by apply ball_center.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply le_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_derive_n_plus (f g : R -> R) (n : nat) (x : R) : locally x (fun y => forall k, (k <= n)%nat -> ex_derive_n f k y) -> locally x (fun y => forall k, (k <= n)%nat -> ex_derive_n g k y) -> ex_derive_n (fun x => f x + g x) n x.",
            "VernacStartTheoremProof",
            "bf0058613d73e4adcbbf3b7989d4a056eb3496e8"
        ],
        [
            "case: n x => /= [ | n] x Hf Hg.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply ex_derive_ext_loc with (fun y => Derive_n f n y + Derive_n g n y).",
            "VernacExtend",
            "45bf7166e93c4e6c5d28a913f97a211225ec0bb7"
        ],
        [
            "apply locally_locally in Hf.",
            "VernacExtend",
            "bccd7e66b87bf84fa806dc0526f1fa507c9b48f9"
        ],
        [
            "apply locally_locally in Hg.",
            "VernacExtend",
            "efaddc17521c8aab00ea338fadff7356a8b40c24"
        ],
        [
            "generalize (filter_and _ _ Hf Hg).",
            "VernacExtend",
            "f010e052a05194d02bd2f7b7d0c1690ed55635e2"
        ],
        [
            "apply filter_imp => {Hf Hg} y [Hf Hg].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply sym_eq, Derive_n_plus.",
            "VernacExtend",
            "853c93b45e0b17c0407e46914c969e20badbf285"
        ],
        [
            "apply filter_imp with (2 := Hf) ; by intuition.",
            "VernacExtend",
            "6286cf6a2133acb8055c2ee897bb46d5761c35c7"
        ],
        [
            "apply filter_imp with (2 := Hg) ; by intuition.",
            "VernacExtend",
            "365cda95584107900ba68393fd34584fec7603f6"
        ],
        [
            "apply: ex_derive_plus.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply locally_singleton ; apply filter_imp with (2 := Hf) => {Hf} y Hy ; by apply (Hy (S n)).",
            "VernacExtend",
            "fb3d679063f504adbe0b30411f1d033587dc30e9"
        ],
        [
            "apply locally_singleton ; apply filter_imp with (2 := Hg) => {Hg} y Hy ; by apply (Hy (S n)).",
            "VernacExtend",
            "fb3d679063f504adbe0b30411f1d033587dc30e9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_derive_n_plus (f g : R -> R) (n : nat) (x lf lg : R) : locally x (fun y => forall k, (k <= n)%nat -> ex_derive_n f k y) -> locally x (fun y => forall k, (k <= n)%nat -> ex_derive_n g k y) -> is_derive_n f n x lf -> is_derive_n g n x lg -> is_derive_n (fun x => f x + g x) n x (lf + lg).",
            "VernacStartTheoremProof",
            "5c38d1b3029ec80507a43103596ac24551b4d6b1"
        ],
        [
            "case: n x lf lg => /= [ | n] x lf lg Hfn Hgn Hf Hg.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite Hf Hg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_derive_ext_loc with (fun y => Derive_n f n y + Derive_n g n y).",
            "VernacExtend",
            "aad327680875f81d61be4dda72c72e7070a2f3aa"
        ],
        [
            "apply locally_locally in Hfn.",
            "VernacExtend",
            "7466f0417ae3577b59e4af07b053f4ec2129ccd8"
        ],
        [
            "apply locally_locally in Hgn.",
            "VernacExtend",
            "51e040d7a60a7cf5e1e4aa9daa3e2abcbabad9f8"
        ],
        [
            "generalize (filter_and _ _ Hfn Hgn).",
            "VernacExtend",
            "bc6e553b8a3ab104fa139bb2fa6113b7e4466e09"
        ],
        [
            "apply filter_imp => {Hfn Hgn} y [Hfn Hgn].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply sym_eq, Derive_n_plus.",
            "VernacExtend",
            "853c93b45e0b17c0407e46914c969e20badbf285"
        ],
        [
            "apply filter_imp with (2 := Hfn) ; by intuition.",
            "VernacExtend",
            "2684498bce2787b85d8af123dd25a7e2fb77b11b"
        ],
        [
            "apply filter_imp with (2 := Hgn) ; by intuition.",
            "VernacExtend",
            "3172a5fa8e93864e53c3fb94c963e83266225b73"
        ],
        [
            "by apply: is_derive_plus.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_derive_n_iter_plus {I : Type} (l : list I) (f : I -> R -> R) (n: nat) (x : R) : locally x (fun y => forall (j : I) (k : nat), List.In j l -> (k <= n)%nat -> ex_derive_n (f j) k y) -> is_derive_n (fun y => iter Rplus 0 l (fun j => f j y)) n x (iter Rplus 0 l (fun j => Derive_n (f j) n x)).",
            "VernacStartTheoremProof",
            "14e154a42366dbdaa0603f814d922832f1b6dca7"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "elim: n {-2}n x (le_refl n) H => [ | n IH] m x Hn Hx.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "now replace m with O by intuition.",
            "VernacExtend",
            "35f252c8cc853835c072ea8ad18a87cf6860ab38"
        ],
        [
            "apply le_lt_eq_dec in Hn ; case: Hn => Hn.",
            "VernacExtend",
            "6f8594797731219cff8468e96e905583a5f655e7"
        ],
        [
            "apply IH => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply lt_n_Sm_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Hn in Hx |- * => {m Hn} /=.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "eapply is_derive_ext_loc.",
            "VernacExtend",
            "eb33b0d5651548cda74587d0bce961c97cd5ab81"
        ],
        [
            "eapply filter_imp.",
            "VernacExtend",
            "bf3d126874cf320edb00f681aadb1db062bce3fd"
        ],
        [
            "intros y Hy.",
            "VernacExtend",
            "d610d987f827782ed7ad408419c9743f4107dcdc"
        ],
        [
            "apply sym_equal, is_derive_n_unique.",
            "VernacExtend",
            "2f3095f798265fcb7c56eb852e72cb2994d5ee24"
        ],
        [
            "apply IH.",
            "VernacExtend",
            "88103d45393d3ee3ab547447d913543854db8cea"
        ],
        [
            "by apply le_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Hy.",
            "VernacExtend",
            "80f07477a1dd0a8c39407b7d0aa65b768d8a6d0b"
        ],
        [
            "apply locally_locally.",
            "VernacExtend",
            "13c46cca98707a67073dacc0377de989cfcf6bf2"
        ],
        [
            "move: Hx ; apply filter_imp.",
            "VernacExtend",
            "0748f60fd4bfbf18081aafc2b987584f77eabe68"
        ],
        [
            "move => y Hy j k Hj Hk.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Hy => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "now eapply le_trans, le_n_Sn.",
            "VernacExtend",
            "575308ef527cf562dfc0822cdc6afe2dc7dd03a4"
        ],
        [
            "eapply filterdiff_ext_lin.",
            "VernacExtend",
            "95ec423140e8c1a0927774f978482d971b43a652"
        ],
        [
            "apply @filterdiff_iter_plus_fct => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply locally_filter.",
            "VernacExtend",
            "b12878d28e7113d933781068d5214c5ea83d41cf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Derive_correct.",
            "VernacExtend",
            "054d04eb27571fc0e213d6f8fb7c853041966304"
        ],
        [
            "apply ((locally_singleton _ _ Hx) j (S n) H (le_refl _)).",
            "VernacExtend",
            "48ec3d83c77a7844b7138c1a2d2fd3ea3bd82c3b"
        ],
        [
            "simpl => y.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "clear ; elim: l => /= [ | h l IH].",
            "VernacExtend",
            "509d9ba826b0f3fb7827630fae74dfbe20600494"
        ],
        [
            "by rewrite scal_zero_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite IH scal_distr_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_derive_n_iter_plus {I : Type} (l : list I) (f : I -> R -> R) (n: nat) (x : R) : locally x (fun y => forall (j : I) (k : nat), List.In j l -> (k <= n)%nat -> ex_derive_n (f j) k y) -> ex_derive_n (fun y => iter Rplus 0 l (fun j => f j y)) n x.",
            "VernacStartTheoremProof",
            "555a136cac7b96080f45802ad956d0c0c0c33863"
        ],
        [
            "case: n => //= n H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "by apply (is_derive_n_iter_plus l f (S n)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Derive_n_iter_plus {I : Type} (l : list I) (f : I -> R -> R) (n: nat) (x : R) : locally x (fun y => forall (j : I) (k : nat), List.In j l -> (k <= n)%nat -> ex_derive_n (f j) k y) -> Derive_n (fun y => iter Rplus 0 l (fun j => f j y)) n x = iter Rplus 0 l (fun j => Derive_n (f j) n x).",
            "VernacStartTheoremProof",
            "4158976c10a5f0b86ca64b82d40c7d58d61061d1"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "apply is_derive_n_unique.",
            "VernacExtend",
            "81d9d87d43be65460b0b45662d1df915e827069f"
        ],
        [
            "by apply is_derive_n_iter_plus.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_derive_n_sum_n_m n m (f : nat -> R -> R) (k: nat) (x : R) : locally x (fun t => forall l j , (n <= l <= m)%nat ->(j <= k)%nat -> ex_derive_n (f l) j t) -> is_derive_n (fun y => sum_n_m (fun j => f j y) n m) k x (sum_n_m (fun j => Derive_n (f j) k x) n m).",
            "VernacStartTheoremProof",
            "f0006504ec5cec5afc1aa6f99f7e1b4cfdf6ffa7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply is_derive_n_iter_plus.",
            "VernacExtend",
            "b5153e7cf295322662a4246beae4107cb4036f2a"
        ],
        [
            "move: H ; apply filter_imp ; intros.",
            "VernacExtend",
            "207a413f3a878baf7460ce71e9d309e069b9b105"
        ],
        [
            "apply H => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply In_iota.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_derive_n_sum_n_m n m (f : nat -> R -> R) (k: nat) (x : R) : locally x (fun t => forall l j , (n <= l <= m)%nat ->(j <= k)%nat -> ex_derive_n (f l) j t) -> ex_derive_n (fun y => sum_n_m (fun j => f j y) n m) k x.",
            "VernacStartTheoremProof",
            "ba5bb2dbabc2246908294da6e224585133ed6eeb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply ex_derive_n_iter_plus.",
            "VernacExtend",
            "2ce2660eb70cb90689a7d550bd1a1534cc42fe99"
        ],
        [
            "move: H ; apply filter_imp ; intros.",
            "VernacExtend",
            "207a413f3a878baf7460ce71e9d309e069b9b105"
        ],
        [
            "apply H => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply In_iota.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Derive_n_sum_n_m n m (f : nat -> R -> R) (k: nat) (x : R) : locally x (fun t => forall l j , (n <= l <= m)%nat ->(j <= k)%nat -> ex_derive_n (f l) j t) -> Derive_n (fun y => sum_n_m (fun j => f j y) n m) k x = sum_n_m (fun j => Derive_n (f j) k x) n m.",
            "VernacStartTheoremProof",
            "2eb6aab68a57495cd56509b29fd8793283b626f5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Derive_n_iter_plus.",
            "VernacExtend",
            "773cafe83db5b314142e4677a03412e791b8749b"
        ],
        [
            "move: H ; apply filter_imp ; intros.",
            "VernacExtend",
            "207a413f3a878baf7460ce71e9d309e069b9b105"
        ],
        [
            "apply H => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply In_iota.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_derive_n_sum_n n (f : nat -> R -> R) (k: nat) (x : R) : locally x (fun t => forall l j , (l <= n)%nat ->(j <= k)%nat -> ex_derive_n (f l) j t) -> is_derive_n (fun y => sum_n (fun j => f j y) n) k x (sum_n (fun j => Derive_n (f j) k x) n).",
            "VernacStartTheoremProof",
            "2e83f8b9a1cd13fd44a3eec14596193fab692d58"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply is_derive_n_sum_n_m.",
            "VernacExtend",
            "af0308dc507fc8ebbde6c98be1f87b8b44e9c65f"
        ],
        [
            "move: H ; apply filter_imp ; intros.",
            "VernacExtend",
            "207a413f3a878baf7460ce71e9d309e069b9b105"
        ],
        [
            "apply H => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply H0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_derive_n_sum_n n (f : nat -> R -> R) (k: nat) (x : R) : locally x (fun t => forall l j , (l <= n)%nat ->(j <= k)%nat -> ex_derive_n (f l) j t) -> ex_derive_n (fun y => sum_n (fun j => f j y) n) k x.",
            "VernacStartTheoremProof",
            "0551076caf0a5f295a8ad36ff80f549a659b4b60"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply ex_derive_n_sum_n_m.",
            "VernacExtend",
            "111399f7f4c5e345a779e0a34ae1374e6edbee6e"
        ],
        [
            "move: H ; apply filter_imp ; intros.",
            "VernacExtend",
            "207a413f3a878baf7460ce71e9d309e069b9b105"
        ],
        [
            "apply H => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply H0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Derive_n_sum_n n (f : nat -> R -> R) (k: nat) (x : R) : locally x (fun t => forall l j , (l <= n)%nat ->(j <= k)%nat -> ex_derive_n (f l) j t) -> Derive_n (fun y => sum_n (fun j => f j y) n) k x = (sum_n (fun j => Derive_n (f j) k x) n).",
            "VernacStartTheoremProof",
            "f7ac5f34a30f7ab09c1a2cfeaea317bf1b1fdba4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Derive_n_sum_n_m.",
            "VernacExtend",
            "57c6230c5a3a7a7376fbd356626f06174bcd241a"
        ],
        [
            "move: H ; apply filter_imp ; intros.",
            "VernacExtend",
            "207a413f3a878baf7460ce71e9d309e069b9b105"
        ],
        [
            "apply H => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply H0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Derive_n_minus (f g : R -> R) (n : nat) (x : R) : locally x (fun y => forall k, (k <= n)%nat -> ex_derive_n f k y) -> locally x (fun y => forall k, (k <= n)%nat -> ex_derive_n g k y) -> Derive_n (fun x => f x - g x) n x = Derive_n f n x - Derive_n g n x.",
            "VernacStartTheoremProof",
            "68cfe7e7b15993ff894d91a1d9ae8a3e5befd18c"
        ],
        [
            "move => Hf Hg.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite Derive_n_plus.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite Derive_n_opp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: Hg ; apply filter_imp => y Hg k Hk.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "apply ex_derive_n_opp ; by apply Hg.",
            "VernacExtend",
            "2b340b07d1c732b4a1fa41bd091c55be23bd5491"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_derive_n_minus (f g : R -> R) (n : nat) (x : R) : locally x (fun y => forall k, (k <= n)%nat -> ex_derive_n f k y) -> locally x (fun y => forall k, (k <= n)%nat -> ex_derive_n g k y) -> ex_derive_n (fun x => f x - g x) n x.",
            "VernacStartTheoremProof",
            "54962fbb6ce028563eeab181fd5e787eb8a52db1"
        ],
        [
            "move => Hf Hg.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply ex_derive_n_plus.",
            "VernacExtend",
            "fcbfd3e21872e069939cbfefef5d9b4679bd1cd3"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: Hg ; apply filter_imp => y Hg k Hk.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "apply ex_derive_n_opp ; by apply Hg.",
            "VernacExtend",
            "2b340b07d1c732b4a1fa41bd091c55be23bd5491"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_derive_n_minus (f g : R -> R) (n : nat) (x lf lg : R) : locally x (fun y => forall k, (k <= n)%nat -> ex_derive_n f k y) -> locally x (fun y => forall k, (k <= n)%nat -> ex_derive_n g k y) -> is_derive_n f n x lf -> is_derive_n g n x lg -> is_derive_n (fun x => f x - g x) n x (lf - lg).",
            "VernacStartTheoremProof",
            "46b2f30a5b9398aede344e220853dd54470b877a"
        ],
        [
            "move => Hf Hg Df Dg.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_derive_n_plus.",
            "VernacExtend",
            "1e9bd2a516529296474d0728218ded711c7532a6"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: Hg ; apply filter_imp => y Hg k Hk.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "apply ex_derive_n_opp ; by apply Hg.",
            "VernacExtend",
            "2b340b07d1c732b4a1fa41bd091c55be23bd5491"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply is_derive_n_opp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Derive_n_scal_l (f : R -> R) (n : nat) (a x : R) : Derive_n (fun y => a * f y) n x = a * Derive_n f n x.",
            "VernacStartTheoremProof",
            "56316ef91bd2df14d234879bf52ae1351228551c"
        ],
        [
            "elim: n x => /= [ | n IH] x.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -Derive_scal.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Derive_ext.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_derive_n_scal_l (f : R -> R) (n : nat) (a x : R) : ex_derive_n f n x -> ex_derive_n (fun y => a * f y) n x.",
            "VernacStartTheoremProof",
            "5fc8e21bbfaf69ffafd4916f4d4f197de1a281ac"
        ],
        [
            "case: n x => /= [ | n] x Hf.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply ex_derive_ext with (fun y => a * Derive_n f n y).",
            "VernacExtend",
            "89e83ba984d97e2790e8c629f01f885421947225"
        ],
        [
            "move => t ; by rewrite Derive_n_scal_l.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "now apply ex_derive_scal.",
            "VernacExtend",
            "816f279187e82a93b11656bdde05d9e3f80f03de"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_derive_n_scal_l (f : R -> R) (n : nat) (a x l : R) : is_derive_n f n x l -> is_derive_n (fun y => a * f y) n x (a * l).",
            "VernacStartTheoremProof",
            "45639a4ae5b9159212f9d6038379ad551bde2194"
        ],
        [
            "case: n x => /= [ | n] x Hf.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite Hf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "eapply filterdiff_ext_lin.",
            "VernacExtend",
            "95ec423140e8c1a0927774f978482d971b43a652"
        ],
        [
            "apply filterdiff_ext with (fun y => a * Derive_n f n y).",
            "VernacExtend",
            "a526fdb140f3444a669dc4c7ba8429450274376d"
        ],
        [
            "move => t ; by rewrite Derive_n_scal_l.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "apply @filterdiff_scal_r_fct ; try by apply locally_filter.",
            "VernacExtend",
            "ed55070bac30f33892b00cea24dae1c68d5b0ebb"
        ],
        [
            "by apply Rmult_comm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Hf.",
            "VernacExtend",
            "44e8b4102d20ba355038f72fc52240fc6cb8650c"
        ],
        [
            "move => /= y.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /scal /= /mult /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Derive_n_scal_r (f : R -> R) (n : nat) (a x : R) : Derive_n (fun y => f y * a) n x = Derive_n f n x * a.",
            "VernacStartTheoremProof",
            "ae67f9ecdc7df475f17e891fc47aae5dd89d7981"
        ],
        [
            "rewrite Rmult_comm -Derive_n_scal_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Derive_n_ext => y ; ring.",
            "VernacExtend",
            "785b79cf5886f81c5cf749720ec752fc335b65ab"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_derive_n_scal_r (f : R -> R) (n : nat) (a x : R) : ex_derive_n f n x -> ex_derive_n (fun y => f y * a) n x.",
            "VernacStartTheoremProof",
            "cbeb0758fefd39a474bf480517b0d16fb95e35f6"
        ],
        [
            "move/(ex_derive_n_scal_l _ _ a).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply ex_derive_n_ext => y ; ring.",
            "VernacExtend",
            "785b79cf5886f81c5cf749720ec752fc335b65ab"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_derive_n_scal_r (f : R -> R) (n : nat) (a x l : R) : is_derive_n f n x l -> is_derive_n (fun y => f y * a) n x (l * a).",
            "VernacStartTheoremProof",
            "75f41218a69c98cafed97adf78eef4c18ea1c761"
        ],
        [
            "move/(is_derive_n_scal_l _ _ a).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite Rmult_comm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply is_derive_n_ext => y ; ring.",
            "VernacExtend",
            "785b79cf5886f81c5cf749720ec752fc335b65ab"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Derive_n_comp_scal (f : R -> R) (a : R) (n : nat) (x : R) : locally (a * x) (fun x => forall k, (k <= n)%nat -> ex_derive_n f k x) -> Derive_n (fun y => f (a * y)) n x = (a ^ n * Derive_n f n (a * x)).",
            "VernacStartTheoremProof",
            "737108e3090f92cc7beb50b10bf4a1d8a8dbae2c"
        ],
        [
            "case: (Req_dec a 0) => [ -> _ | Ha] /=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite Rmult_0_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "elim: n x => [ | n IH] x /= ; rewrite ?Rmult_0_l.",
            "VernacExtend",
            "de65c8193056a36f6dbb91fe21357bd770b140db"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "rewrite (Derive_ext _ _ _ IH).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Derive_const.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => Hf.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply (locally_singleton _ (fun x => Derive_n (fun y : R => f (a * y)) n x = a ^ n * Derive_n f n (a * x))).",
            "VernacExtend",
            "22c69ff86ca7674f57119007792a533ffaef6510"
        ],
        [
            "elim: n Hf => [ | n IH] Hf.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "apply filter_forall => /= y ; ring.",
            "VernacExtend",
            "785b79cf5886f81c5cf749720ec752fc335b65ab"
        ],
        [
            "case: IH => [ | r IH].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Hf => r0 Hf.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists r0 => y Hy k Hk ; by intuition.",
            "VernacExtend",
            "7bd77ea96f784074e3b1d448260a45dd4191485f"
        ],
        [
            "case: Hf => r0 Hf.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have Hr1 : 0 < Rmin (r0 / (Rabs a)) r.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply Rmin_case.",
            "VernacExtend",
            "06bee284b3ab9229517272cc3728705bdc7b95ba"
        ],
        [
            "apply Rdiv_lt_0_compat.",
            "VernacExtend",
            "283136f6e52505e4579f1f286529bc7e0bbfd6d7"
        ],
        [
            "by apply r0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rabs_pos_lt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "set r1 := mkposreal _ Hr1.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "exists r1 => y Hy /=.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite (Derive_ext_loc _ (fun y => a ^ n * Derive_n f n (a * y))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Derive_scal.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (Rmult_comm a (a^n)) Rmult_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "rewrite Derive_comp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (Derive_ext (Rmult a) (fun x => a * x)) => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite Derive_scal Derive_id ; ring.",
            "VernacExtend",
            "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
        ],
        [
            "apply Hf with (k := S n).",
            "VernacExtend",
            "63bb01c15e715baddd79786c2c979994b78e21d4"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /= /abs /minus /plus /opp /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -/(Rminus _ _) -Rmult_minus_distr_l Rabs_mult.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rlt_le_trans with (Rabs a * r1).",
            "VernacExtend",
            "2d79f4ec363efc67ebdb997ee40e38c11cf944f8"
        ],
        [
            "apply Rmult_lt_compat_l.",
            "VernacExtend",
            "e06ce02cd2654586097cfda8f116dd4fe6d6b2a8"
        ],
        [
            "by apply Rabs_pos_lt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Rmult_comm ; apply Rle_div_r.",
            "VernacExtend",
            "501bd021b8f2aedfba8f97c6337af4e657172b3b"
        ],
        [
            "by apply Rabs_pos_lt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /r1 ; by apply Rmin_l.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "by apply lt_n_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply ex_derive_scal.",
            "VernacExtend",
            "3e0cedd5c5b707ed6df53e77217943509cc186c4"
        ],
        [
            "by apply ex_derive_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /= in Hy.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rabs_lt_between' in Hy.",
            "VernacExtend",
            "ba88cf28d01239e61700215c528d225d0556ddd8"
        ],
        [
            "case: Hy => Hy1 Hy2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rlt_Rminus in Hy1.",
            "VernacExtend",
            "daa3e4126b5c2a6a695bd4acdaf473b3c07e8cea"
        ],
        [
            "apply Rlt_Rminus in Hy2.",
            "VernacExtend",
            "92661faa223f40975bdf553c29898bd4df22d63d"
        ],
        [
            "have Hy : 0 < Rmin (y - (x - r1)) (x + r1 - y).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply Rmin_case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (mkposreal (Rmin (y - (x - r1)) (x + r1 - y)) Hy).",
            "VernacExtend",
            "06736e165a7b7bf1e8c3faf870946a197616b9e6"
        ],
        [
            "set r2 := Rmin (y - (x - r1)) (x + r1 - y).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "move => t Ht.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply IH.",
            "VernacExtend",
            "88103d45393d3ee3ab547447d913543854db8cea"
        ],
        [
            "apply Rabs_lt_between'.",
            "VernacExtend",
            "63a15ff3174a06f608196b85267ac5d1aae1e55e"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /= in Ht.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rabs_lt_between' in Ht.",
            "VernacExtend",
            "01b2581aac0f8e58574a51e2c5b5ad115e685439"
        ],
        [
            "simpl in Ht.",
            "VernacExtend",
            "f3647f468667e683097b7de90a7362183d8a63fa"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rle_lt_trans with (2 := proj1 Ht).",
            "VernacExtend",
            "bffc4a3b1d844220d9bc2f0a792188d021c76df5"
        ],
        [
            "rewrite /r2 ; apply Rle_trans with (y-(y-(x-r1))).",
            "VernacExtend",
            "1fc9e3e112c2d8d0845e202b0ce51716aaed03a0"
        ],
        [
            "ring_simplify ; apply Rplus_le_compat_l, Ropp_le_contravar.",
            "VernacExtend",
            "462dc3f486597441f4feb73e7696cf3dab5d1401"
        ],
        [
            "rewrite /r1 ; apply Rmin_r.",
            "VernacExtend",
            "18e921d47e38e4bfe7094f7358fc8bcd706e085b"
        ],
        [
            "apply Rplus_le_compat_l, Ropp_le_contravar, Rmin_l.",
            "VernacExtend",
            "fcc4b1003a6baef0cef177487166c38e4b6d4084"
        ],
        [
            "apply Rlt_le_trans with (1 := proj2 Ht).",
            "VernacExtend",
            "750a0c6b53017ec8c93b1c5ce65e21ecd0f1090b"
        ],
        [
            "rewrite /r2 ; apply Rle_trans with (y+((x+r1)-y)).",
            "VernacExtend",
            "06be3294edd4fcecb7d1a304a3c0d6c663cb33fa"
        ],
        [
            "apply Rplus_le_compat_l, Rmin_r.",
            "VernacExtend",
            "f93b83a49cd8ad319d9eea4a24e014a81fd20527"
        ],
        [
            "ring_simplify ; apply Rplus_le_compat_l.",
            "VernacExtend",
            "01c3bcacc1cf41e7dcfe0ff75021f42c1b09fc5f"
        ],
        [
            "rewrite /r1 ; apply Rmin_r.",
            "VernacExtend",
            "18e921d47e38e4bfe7094f7358fc8bcd706e085b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_derive_n_comp_scal (f : R -> R) (a : R) (n : nat) (x : R) : locally (a * x) (fun x => forall k, (k <= n)%nat -> ex_derive_n f k x) -> ex_derive_n (fun y => f (a * y)) n x.",
            "VernacStartTheoremProof",
            "de987964efb25d3baead5cee832787be76d05b8d"
        ],
        [
            "case: n f x => /= [ | n] f x Hf.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (Req_dec a 0) => Ha.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite Ha => {a Ha Hf}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply ex_derive_ext with (fun _ => Derive_n (fun y : R => f (0 * y)) n 0).",
            "VernacExtend",
            "94e9de63c2dd63e762be03c6cfcafa9533b2deb4"
        ],
        [
            "elim: n => /= [ | n IH] t.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by rewrite ?Rmult_0_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -?(Derive_ext _ _ _ IH).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite ?Derive_const.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply ex_derive_const.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply ex_derive_ext_loc with (fun x => a^n * Derive_n f n (a * x)).",
            "VernacExtend",
            "bccfaeb45b90b5210c4a04b10edf10453296b6e9"
        ],
        [
            "case: Hf => r Hf.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have Hr0 : 0 < r / Rabs a.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply Rdiv_lt_0_compat.",
            "VernacExtend",
            "283136f6e52505e4579f1f286529bc7e0bbfd6d7"
        ],
        [
            "by apply r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rabs_pos_lt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (mkposreal _ Hr0) => /= y Hy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply eq_sym, Derive_n_comp_scal.",
            "VernacExtend",
            "ce075e2c94f72c0d186fb7d649c9faff5a3a41c6"
        ],
        [
            "have : Rabs (a*y - a*x) < r.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -Rmult_minus_distr_l Rabs_mult.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (pos r) with (Rabs a * (r / Rabs a)) by (field ; by apply Rgt_not_eq, Rabs_pos_lt).",
            "VernacExtend",
            "bfee143dfc094b7be679f6e2afe6a40ec7a8f795"
        ],
        [
            "apply Rmult_lt_compat_l.",
            "VernacExtend",
            "e06ce02cd2654586097cfda8f116dd4fe6d6b2a8"
        ],
        [
            "by apply Rabs_pos_lt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => {Hy} Hy.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Rabs_lt_between' in Hy ; case: Hy => Hy1 Hy2.",
            "VernacExtend",
            "80e1f55da80931de0594b0555bcd95700c357332"
        ],
        [
            "apply Rlt_Rminus in Hy1.",
            "VernacExtend",
            "daa3e4126b5c2a6a695bd4acdaf473b3c07e8cea"
        ],
        [
            "apply Rlt_Rminus in Hy2.",
            "VernacExtend",
            "92661faa223f40975bdf553c29898bd4df22d63d"
        ],
        [
            "exists (mkposreal _ (Rmin_pos _ _ Hy1 Hy2)) => /= z Hz k Hk.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /= in Hz.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rabs_lt_between' in Hz ; case: Hz => Hz1 Hz2.",
            "VernacExtend",
            "a4503dc4167597172a3f11885c48a6f1f4e6622d"
        ],
        [
            "rewrite /Rminus -Rmax_opp_Rmin in Hz1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Rplus_min_distr_l in Hz2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rlt_le_trans with (2 := Rmin_r _ _) in Hz2.",
            "VernacExtend",
            "b2e09296a80d075f5652ca6eb499dc59a2835060"
        ],
        [
            "ring_simplify in Hz2.",
            "VernacExtend",
            "406aaf1dc2e52e94b9a3c51bccdbef0bf9dd434f"
        ],
        [
            "rewrite Rplus_max_distr_l in Hz1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_lt_trans with (1 := Rmax_l _ _) in Hz1.",
            "VernacExtend",
            "109bd8513fbe1804f7002845cbb71d897184d5f8"
        ],
        [
            "ring_simplify in Hz1.",
            "VernacExtend",
            "1a0ee7810a11a06e6826518f6fc0aafb058df045"
        ],
        [
            "apply Hf.",
            "VernacExtend",
            "44e8b4102d20ba355038f72fc52240fc6cb8650c"
        ],
        [
            "apply Rabs_lt_between' ; by split.",
            "VernacExtend",
            "e7869b9592f7c37109fc0522ccaab711fa76dad0"
        ],
        [
            "by intuition.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply ex_derive_scal.",
            "VernacExtend",
            "3e0cedd5c5b707ed6df53e77217943509cc186c4"
        ],
        [
            "apply ex_derive_comp.",
            "VernacExtend",
            "c30711f97a00e6821b822dba399140f8e58b0bee"
        ],
        [
            "apply (locally_singleton _ _) in Hf.",
            "VernacExtend",
            "91184bcb243359140b4658264f3180a3a7f7650e"
        ],
        [
            "by apply Hf with (k := S n).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply (ex_derive_scal id a x (ex_derive_id _)).",
            "VernacExtend",
            "a2a1ab9480e3fb5e819a23cd069917c983dffdb1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_derive_n_comp_scal (f : R -> R) (a : R) (n : nat) (x l : R) : locally (a * x) (fun x => forall k, (k <= n)%nat -> ex_derive_n f k x) -> is_derive_n f n (a * x) l -> is_derive_n (fun y => f (a * y)) n x (a ^ n * l).",
            "VernacStartTheoremProof",
            "76c499d020d3eeaeccccb83ed4930e97fc279170"
        ],
        [
            "case: n => /= [ | n] Hfn Hf.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite Rmult_1_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_derive_unique in Hf.",
            "VernacExtend",
            "2491d88ddde466492b4f8ee2306968e83d676011"
        ],
        [
            "rewrite -Hf.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(Derive_n_comp_scal f a (S n) x) => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Derive_correct.",
            "VernacExtend",
            "054d04eb27571fc0e213d6f8fb7c853041966304"
        ],
        [
            "by apply (ex_derive_n_comp_scal f a (S n) x).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Derive_n_comp_opp (f : R -> R) (n : nat) (x : R) : locally (- x) (fun y => (forall k, (k <= n)%nat -> ex_derive_n f k y)) -> Derive_n (fun y => f (- y)) n x = ((-1) ^ n * Derive_n f n (-x)).",
            "VernacStartTheoremProof",
            "de6172649ab614e415650708338a8338b7a76563"
        ],
        [
            "move => Hf.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite -(Derive_n_ext (fun y : R => f (-1 * y))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (Derive_n_comp_scal f (-1) n x).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by replace (-1*x) with (-x) by ring.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by replace (-1*x) with (-x) by ring.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => t ; by replace (-1*t) with (-t) by ring.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_derive_n_comp_opp (f : R -> R) (n : nat) (x : R) : locally (- x) (fun y => (forall k, (k <= n)%nat -> ex_derive_n f k y)) -> ex_derive_n (fun y => f (- y)) n x.",
            "VernacStartTheoremProof",
            "dbe20def70011aecf605db18d72d55b392d2f7c0"
        ],
        [
            "move => Hf.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply (ex_derive_n_ext (fun y : R => f (-1 * y))).",
            "VernacExtend",
            "d0b775c3b8117e953807c9f964c050e04a281d3b"
        ],
        [
            "move => t ; by ring_simplify (-1*t).",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "apply (ex_derive_n_comp_scal f (-1) n x).",
            "VernacExtend",
            "e75a287a90fde11f209a4a4337c4019e3b7e108e"
        ],
        [
            "by replace (-1*x) with (-x) by ring.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_derive_n_comp_opp (f : R -> R) (n : nat) (x l : R) : locally (- x) (fun y => (forall k, (k <= n)%nat -> ex_derive_n f k y)) -> is_derive_n f n (-x) l -> is_derive_n (fun y => f (- y)) n x ((-1)^n * l).",
            "VernacStartTheoremProof",
            "dd8e57087bcc1a291eea07c08f1449983586e3f2"
        ],
        [
            "move => Hfn Hf.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply (is_derive_n_ext (fun y : R => f (-1 * y))).",
            "VernacExtend",
            "9544708cd4bcb313cc81ffc9de23aa37a1342d2f"
        ],
        [
            "move => t ; by ring_simplify (-1*t).",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "apply (is_derive_n_comp_scal f (-1) n x).",
            "VernacExtend",
            "66e8c26069d1c9c20165ab20d992c1fec1c47076"
        ],
        [
            "by replace (-1*x) with (-x) by ring.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by replace (-1*x) with (-x) by ring.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Derive_n_comp_trans (f : R -> R) (n : nat) (x b : R) : Derive_n (fun y => f (y + b)) n x = Derive_n f n (x + b).",
            "VernacStartTheoremProof",
            "aea4c3874156ec58b0a294b3ef14534c0c9a92c3"
        ],
        [
            "elim: n x => [ | n IH] x /=.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (Derive_ext _ _ _ IH) => {IH}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "generalize (Derive_n f n) => {f} f.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply (f_equal real).",
            "VernacExtend",
            "57e73bb5eae5aa448423da85c916d02b5d8e8198"
        ],
        [
            "apply Lim_ext => y.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "replace (x + b + y) with (x + y + b) by ring.",
            "VernacExtend",
            "64b914f37f1a13189dab7f55097dc7694854b14e"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_derive_n_comp_trans (f : R -> R) (n : nat) (x b : R) : ex_derive_n f n (x + b) -> ex_derive_n (fun y => f (y + b)) n x.",
            "VernacStartTheoremProof",
            "51a5531d3cf9ec56a47defa52db75caf98ef25dd"
        ],
        [
            "case: n => [ | n] /= Df.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply ex_derive_ext with (fun x => Derive_n f n (x + b)).",
            "VernacExtend",
            "9c2752499e1ae8d3503c42587582eeacbb1a818e"
        ],
        [
            "simpl => t.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply sym_eq, Derive_n_comp_trans.",
            "VernacExtend",
            "6dc32986969d7f4b0aab75a2835e216e8673ce6d"
        ],
        [
            "move: (Derive_n f n) Df => {f} f Df.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply ex_derive_comp.",
            "VernacExtend",
            "c30711f97a00e6821b822dba399140f8e58b0bee"
        ],
        [
            "apply Df.",
            "VernacExtend",
            "6977200c5ed42f07be5c070bbdde02d6c91f143c"
        ],
        [
            "apply: ex_derive_plus.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply ex_derive_id.",
            "VernacExtend",
            "cedba4c01754c9193bb99ca3c2c70dee1bcbc57a"
        ],
        [
            "apply ex_derive_const.",
            "VernacExtend",
            "5e088e7788b08f0cd9fea876799182f3f12e6bff"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_derive_n_comp_trans (f : R -> R) (n : nat) (x b l : R) : is_derive_n f n (x + b) l -> is_derive_n (fun y => f (y + b)) n x l.",
            "VernacStartTheoremProof",
            "5716bc1ae6f984c94b06258cf10331d1ee8f8ef1"
        ],
        [
            "case: n => [ | n] /= Df.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_derive_ext with (fun x => Derive_n f n (x + b)).",
            "VernacExtend",
            "1937279a83d73886626fe5bb0fdc654ca8a3e8da"
        ],
        [
            "simpl => t.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply sym_eq, Derive_n_comp_trans.",
            "VernacExtend",
            "6dc32986969d7f4b0aab75a2835e216e8673ce6d"
        ],
        [
            "move: (Derive_n f n) Df => {f} f Df.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "eapply filterdiff_ext_lin.",
            "VernacExtend",
            "95ec423140e8c1a0927774f978482d971b43a652"
        ],
        [
            "apply @filterdiff_comp'.",
            "VernacExtend",
            "562bb62cc87d2deb7a08e1aacae59f04629714e3"
        ],
        [
            "apply @filterdiff_plus_fct ; try by apply locally_filter.",
            "VernacExtend",
            "703019ba8ffec10735a5035cd2cc3036ab30f15c"
        ],
        [
            "by apply filterdiff_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply filterdiff_const.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Df.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "simpl => y.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite plus_zero_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Taylor_Lagrange : forall f n x y, x < y -> ( forall t, x <= t <= y -> forall k, (k <= S n)%nat -> ex_derive_n f k t ) -> exists zeta, x < zeta < y /\\ f y = sum_f_R0 (fun m => (y-x) ^ m / INR (fact m) * Derive_n f m x ) n + (y-x) ^ (S n) / INR (fact (S n)) * Derive_n f (S n) zeta.",
            "VernacStartTheoremProof",
            "f3e815d29c2e06b54565479d8cb3bd77bb916f37"
        ],
        [
            "intros f n x y Hxy Df.",
            "VernacExtend",
            "f4a288950cc62c13fbd1770b8d4e4ba90c66b39a"
        ],
        [
            "pose (c:= (f y - sum_f_R0 (fun m => (y-x) ^ m / INR (fact m) * Derive_n f m x ) n) / (y-x) ^ (S n)).",
            "VernacExtend",
            "21f2ff8e6118a80321ff6d8ce1d5c50ea92df3f7"
        ],
        [
            "pose (g t := f y - sum_f_R0 (fun m => (y-t) ^ m / INR (fact m) * Derive_n f m t ) n - c * (y-t) ^ (S n)).",
            "VernacExtend",
            "36437c32e72d9f87d821dd9bbcd225ae76a29cba"
        ],
        [
            "assert (Dg : forall t, x <= t <= y -> is_derive g t (- (y-t) ^ n / INR (fact n) * Derive_n f (S n) t + c * INR (S n) * (y-t) ^ n)).",
            "VernacExtend",
            "bcd9100fe1ee49fae7ef1b8d901a7aa72fee1856"
        ],
        [
            "intros t Ht.",
            "VernacExtend",
            "9b73bd01b7eab131fc4e1775831ff0e7de378f43"
        ],
        [
            "unfold g.",
            "VernacExtend",
            "fd78415b188602b878d030c2cbc915af33ab1e1d"
        ],
        [
            "assert (Dp: forall n, derivable_pt_lim (fun x0 : R => (y - x0) ^ S n) t (INR (S n) * (y - t) ^ n * (0 - 1))).",
            "VernacExtend",
            "107fcfe6b1a2568b427de951c7a802a3a0ad4d24"
        ],
        [
            "intros m.",
            "VernacExtend",
            "c09fb64a4c58d7cc03a731f8399ff847939fe4f0"
        ],
        [
            "apply (derivable_pt_lim_comp (fun t => y - t) (fun t => t ^ (S m))).",
            "VernacExtend",
            "5e5faa57cb7071243cc0266f293d759377a87e37"
        ],
        [
            "apply derivable_pt_lim_minus.",
            "VernacExtend",
            "2ce17b6d9d27cabc3808057431f47c10825c2fff"
        ],
        [
            "apply derivable_pt_lim_const.",
            "VernacExtend",
            "960938bb384eb6666a08df49ec2457c0f743a285"
        ],
        [
            "apply derivable_pt_lim_id.",
            "VernacExtend",
            "eefa66208b1c7b1195a98db883611b02fd29636c"
        ],
        [
            "apply derivable_pt_lim_pow.",
            "VernacExtend",
            "9bbe3c9d12dbbc63415b9b2003584896ab11f729"
        ],
        [
            "apply: is_derive_plus.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "clear c g.",
            "VernacExtend",
            "ee94c2c0ee6e4db32cf0dc5207bb12ff2b566d6e"
        ],
        [
            "rename n into N.",
            "VernacExtend",
            "f36d25f40373ec274e0facb6168474ca91b58f94"
        ],
        [
            "generalize (le_refl N).",
            "VernacExtend",
            "0c7c8ee0d4ea8f646771b57c36b78ff1fc3fc4e0"
        ],
        [
            "generalize N at -2.",
            "VernacExtend",
            "5e29c097bd9219db4c24d3736e89dfbe2e0b1d9b"
        ],
        [
            "intros n Hn.",
            "VernacExtend",
            "4a15d287eb245c84eabfb58cba2e377ac025029a"
        ],
        [
            "move: Hn.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "induction n.",
            "VernacExtend",
            "7f3faa2a3277e3553406d09101130efcb1764494"
        ],
        [
            "intros _.",
            "VernacExtend",
            "eb0e518a4896777a9a76b3ab973eaf7b4f1b52db"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "eapply filterdiff_ext_lin.",
            "VernacExtend",
            "95ec423140e8c1a0927774f978482d971b43a652"
        ],
        [
            "apply @filterdiff_minus_fct ; try by apply locally_filter.",
            "VernacExtend",
            "cb5d9cf1284152c28c60682a7893d1160890c201"
        ],
        [
            "apply filterdiff_const.",
            "VernacExtend",
            "c4a3824a24254aaf40d1d1004814f7d9b4bb02eb"
        ],
        [
            "apply @filterdiff_scal_r_fct with (f := fun u => f u).",
            "VernacExtend",
            "7fef2b08b912d390bcca5056dae284f1b0795717"
        ],
        [
            "by apply locally_filter.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rmult_comm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Derive_correct.",
            "VernacExtend",
            "054d04eb27571fc0e213d6f8fb7c853041966304"
        ],
        [
            "apply (Df t Ht 1%nat).",
            "VernacExtend",
            "ce3d67f60f4aa47c32105b533870e149492f9750"
        ],
        [
            "apply le_n_S.",
            "VernacExtend",
            "170a03707b1c7ee0e1ae6d4f34f3aee2f62ba781"
        ],
        [
            "apply le_0_n.",
            "VernacExtend",
            "a40896a167507cd2cbfab4bf2df8f96a4477cab9"
        ],
        [
            "simpl => z.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /minus /plus /opp /zero /scal /= /mult /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "intros Hn.",
            "VernacExtend",
            "6002e74cd9d8dafb31dec6fe1bb87968d6112c15"
        ],
        [
            "apply filterdiff_ext with (fun x0 : R => (f y - (sum_f_R0 (fun m : nat => (y - x0) ^ m / INR (fact m) * Derive_n f m x0) n)) - (y - x0) ^ (S n) / INR (fact (S n)) * Derive_n f (S n) x0).",
            "VernacExtend",
            "c76842409497c670780b684ef256779ce320d23a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros; ring.",
            "VernacExtend",
            "a0e0ba17c737405b1d4c2a120d3717441df76616"
        ],
        [
            "eapply filterdiff_ext_lin.",
            "VernacExtend",
            "95ec423140e8c1a0927774f978482d971b43a652"
        ],
        [
            "apply @filterdiff_plus_fct ; try by apply locally_filter.",
            "VernacExtend",
            "703019ba8ffec10735a5035cd2cc3036ab30f15c"
        ],
        [
            "apply IHn.",
            "VernacExtend",
            "1c9414f4f052b2727ca012553a4a3a2a0fc85649"
        ],
        [
            "now apply lt_le_weak.",
            "VernacExtend",
            "011ffacd098aa65ac14a4c76fba8bc1bf047b12d"
        ],
        [
            "apply @filterdiff_opp_fct ; try by apply locally_filter.",
            "VernacExtend",
            "7bb571391393d542a82d64e93eabe5722dce2b76"
        ],
        [
            "generalize (filterdiff_mult_fct (fun x0 => ((y - x0) ^ S n / INR (fact (S n)))) (fun x0 => Derive_n f (S n) x0)) => /= H.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply H ; clear H.",
            "VernacExtend",
            "9f55f05b2513216b0ca4274d81a8d43b208d0874"
        ],
        [
            "by apply Rmult_comm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply @filterdiff_scal_l_fct ; try by apply locally_filter.",
            "VernacExtend",
            "336045491d15532d0347301ff81aeaa0a97180d5"
        ],
        [
            "generalize (filterdiff_comp' (fun u => y - u) (fun x => pow x (S n))) => /= H ; apply H ; clear H.",
            "VernacExtend",
            "0bdd765daa83a69c5c622af3a03b65fee3d4f639"
        ],
        [
            "apply @filterdiff_minus_fct ; try apply locally_filter.",
            "VernacExtend",
            "d02a4788566f207f1d928c12eb3ccf807e77f75e"
        ],
        [
            "apply filterdiff_const.",
            "VernacExtend",
            "c4a3824a24254aaf40d1d1004814f7d9b4bb02eb"
        ],
        [
            "apply filterdiff_id.",
            "VernacExtend",
            "12259268ad0a0068e2e8b64e904b09a3cdea1818"
        ],
        [
            "apply is_derive_Reals.",
            "VernacExtend",
            "50ffedc276e75c32dd6244cd073b4227506b2788"
        ],
        [
            "apply (derivable_pt_lim_pow _ (S n)).",
            "VernacExtend",
            "07afb90634803e3021b71a32b05b8bec8af1553f"
        ],
        [
            "apply Derive_correct.",
            "VernacExtend",
            "054d04eb27571fc0e213d6f8fb7c853041966304"
        ],
        [
            "apply (Df t Ht (S (S n))).",
            "VernacExtend",
            "c7f47f5d28c4004bbf683411f74585939a7d21ec"
        ],
        [
            "now apply le_n_S.",
            "VernacExtend",
            "94df254bfad1bc883a4d6648b3c09d29876136c3"
        ],
        [
            "move => z.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "change (fact (S n)) with ((S n)*fact n)%nat.",
            "VernacExtend",
            "f3d7be14e14c3ec5451bf3e6f8776035177f5ef7"
        ],
        [
            "rewrite mult_INR.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "set v := INR (S n).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "rewrite /minus /plus /opp /zero /scal /= /mult /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply INR_fact_neq_0.",
            "VernacExtend",
            "9f4443217b6f3c8f07648392448a37630452a203"
        ],
        [
            "now apply not_0_INR.",
            "VernacExtend",
            "97fe82a7272ee741714b285d502d46c3e359b4ce"
        ],
        [
            "eapply filterdiff_ext_lin.",
            "VernacExtend",
            "95ec423140e8c1a0927774f978482d971b43a652"
        ],
        [
            "apply filterdiff_ext with (fun x0 : R => -c * (y - x0) ^ S n).",
            "VernacExtend",
            "a85e6eeba500f18248c25210deaa434e5bfaa5ea"
        ],
        [
            "simpl => z ; ring.",
            "VernacExtend",
            "785b79cf5886f81c5cf749720ec752fc335b65ab"
        ],
        [
            "apply @filterdiff_scal_r_fct ; try by apply locally_filter.",
            "VernacExtend",
            "ed55070bac30f33892b00cea24dae1c68d5b0ebb"
        ],
        [
            "by apply Rmult_comm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_derive_Reals, Dp.",
            "VernacExtend",
            "d36bb499303721c80b153dda3d071e87d7c1c4c9"
        ],
        [
            "set v := INR (S n).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "simpl => z.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /scal /= /mult /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "assert (Dg' : forall t : R, x <= t <= y -> derivable_pt g t).",
            "VernacExtend",
            "f22d194bb56ec7721bc78f0a92586d76ffb2eaa0"
        ],
        [
            "intros t Ht.",
            "VernacExtend",
            "9b73bd01b7eab131fc4e1775831ff0e7de378f43"
        ],
        [
            "exists (Derive g t).",
            "VernacExtend",
            "3c66bfb4782ebb51125f712ea1e0d8022deef843"
        ],
        [
            "apply is_derive_Reals.",
            "VernacExtend",
            "50ffedc276e75c32dd6244cd073b4227506b2788"
        ],
        [
            "apply Derive_correct.",
            "VernacExtend",
            "054d04eb27571fc0e213d6f8fb7c853041966304"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "apply (Dg t Ht).",
            "VernacExtend",
            "622dfab1c5ad9015a43bf9163148c62fd83e4da3"
        ],
        [
            "assert (pr : forall t : R, x < t < y -> derivable_pt g t).",
            "VernacExtend",
            "b34dbf8e4b41df740eb3a88ee3f1d4c7903b0846"
        ],
        [
            "intros t Ht.",
            "VernacExtend",
            "9b73bd01b7eab131fc4e1775831ff0e7de378f43"
        ],
        [
            "apply Dg'.",
            "VernacExtend",
            "91445a8a2aabf2de6b6c97a0cc481427c8798c43"
        ],
        [
            "split ; now apply Rlt_le.",
            "VernacExtend",
            "0b46666471c227660cce31141fe4a3295641a3a7"
        ],
        [
            "assert (Zxy: (y - x) ^ (S n) <> 0).",
            "VernacExtend",
            "226025a7beae13fc0cdad069ec73c81477fcc8b4"
        ],
        [
            "apply pow_nonzero.",
            "VernacExtend",
            "282744fa14f20635385d7e1ac0d1a961c143f970"
        ],
        [
            "apply Rgt_not_eq.",
            "VernacExtend",
            "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
        ],
        [
            "apply Rplus_gt_reg_l with x.",
            "VernacExtend",
            "389967bcbeb46906e1a24efca443030a1a351af6"
        ],
        [
            "now ring_simplify.",
            "VernacExtend",
            "2d108f365e3e8acc156a34cc381bc8087ba632ff"
        ],
        [
            "destruct (Rolle g x y pr) as (zeta, (Hzeta1,Hzeta2)).",
            "VernacExtend",
            "d1b37945216580b9967f91c88c18574910ea8cf1"
        ],
        [
            "intros t Ht.",
            "VernacExtend",
            "9b73bd01b7eab131fc4e1775831ff0e7de378f43"
        ],
        [
            "apply derivable_continuous_pt.",
            "VernacExtend",
            "939a043861a6c1b6ad68f89e18a325fcf10fb0f3"
        ],
        [
            "now apply Dg'.",
            "VernacExtend",
            "7f346221bc76a523c99301ec583883bf4d37be19"
        ],
        [
            "exact Hxy.",
            "VernacExtend",
            "6ba9fbd4bf2b620bf4ba04417b1324eb48d923d7"
        ],
        [
            "apply trans_eq with 0.",
            "VernacExtend",
            "d21936164aba07cad19bfbccac82657cb87d01cb"
        ],
        [
            "unfold g, c.",
            "VernacExtend",
            "abe636f98224274b7f6acf61b7a0774694936801"
        ],
        [
            "now field.",
            "VernacExtend",
            "f3de8dbe903009a3417a80d825415eef0ce85558"
        ],
        [
            "unfold g.",
            "VernacExtend",
            "fd78415b188602b878d030c2cbc915af33ab1e1d"
        ],
        [
            "destruct n.",
            "VernacExtend",
            "1582bf847770c098bee882393a48b146dcc37a8c"
        ],
        [
            "simpl; field.",
            "VernacExtend",
            "db84c8cac4d419667c5dc078fea83a0aa7cc0138"
        ],
        [
            "rewrite decomp_sum.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite sum_eq_R0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "simpl; field.",
            "VernacExtend",
            "db84c8cac4d419667c5dc078fea83a0aa7cc0138"
        ],
        [
            "intros; simpl; field.",
            "VernacExtend",
            "4c76292ec17ee779c486803c2527ad826ac0647f"
        ],
        [
            "exact (INR_fact_neq_0 (S n0)).",
            "VernacExtend",
            "033ba6c67f583b5ba1755f59b32c13be90a849a1"
        ],
        [
            "apply lt_0_Sn.",
            "VernacExtend",
            "3b7fc375f7db460b98008b419d236f8a4eb151b4"
        ],
        [
            "exists zeta.",
            "VernacExtend",
            "b4ccf65e9dfa290461fdeed2bea0ff75d0c270ef"
        ],
        [
            "apply (conj Hzeta1).",
            "VernacExtend",
            "4537e34cdc2bde50a4469bcc0df8fad67bb92b30"
        ],
        [
            "rewrite Rmult_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (/ INR (fact (S n)) * Derive_n f (S n) zeta) with c.",
            "VernacExtend",
            "d6f5bb43bf416fb3fb2602fe8d0dd039d33f59da"
        ],
        [
            "unfold c.",
            "VernacExtend",
            "fbe2ecbab43411423adf2fde572f4c7ca213fa77"
        ],
        [
            "now field.",
            "VernacExtend",
            "f3de8dbe903009a3417a80d825415eef0ce85558"
        ],
        [
            "apply Rmult_eq_reg_r with (INR (S n) * (y - zeta) ^ n).",
            "VernacExtend",
            "10d419d42089349421ca5de3bd1ec873b33215c6"
        ],
        [
            "apply Rplus_eq_reg_l with ((- (y - zeta) ^ n / INR (fact n) * Derive_n f (S n) zeta)).",
            "VernacExtend",
            "4dd8ab3240174220bcba54f7d44037a6f95f0015"
        ],
        [
            "change (fact (S n)) with (S n * fact n)%nat.",
            "VernacExtend",
            "f3d7be14e14c3ec5451bf3e6f8776035177f5ef7"
        ],
        [
            "rewrite mult_INR.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply trans_eq with 0.",
            "VernacExtend",
            "d21936164aba07cad19bfbccac82657cb87d01cb"
        ],
        [
            "rewrite -Rmult_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "assert (H: x <= zeta <= y) by (split ; apply Rlt_le ; apply Hzeta1).",
            "VernacExtend",
            "77a454f3e8562e8f92622aecc19070cca210fb3d"
        ],
        [
            "rewrite -(is_derive_unique _ _ _ (Dg _ H)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "destruct (pr zeta Hzeta1) as (x0,Hd).",
            "VernacExtend",
            "103db3077c7fbf600370688b3a431165d0daa4fc"
        ],
        [
            "simpl in Hzeta2.",
            "VernacExtend",
            "e2f0c884bf6dc9d149b8c71b444a6a63baaf64a9"
        ],
        [
            "rewrite Hzeta2 in Hd.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "now apply is_derive_unique, is_derive_Reals.",
            "VernacExtend",
            "39ad45817d0ff87fada00488bb0209380cc81b0a"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply INR_fact_neq_0.",
            "VernacExtend",
            "9f4443217b6f3c8f07648392448a37630452a203"
        ],
        [
            "now apply not_0_INR.",
            "VernacExtend",
            "97fe82a7272ee741714b285d502d46c3e359b4ce"
        ],
        [
            "apply Rmult_integral_contrapositive_currified.",
            "VernacExtend",
            "67cbc94190cf35c6f1cdcda1f1ab365145cc47eb"
        ],
        [
            "now apply not_0_INR.",
            "VernacExtend",
            "97fe82a7272ee741714b285d502d46c3e359b4ce"
        ],
        [
            "apply pow_nonzero.",
            "VernacExtend",
            "282744fa14f20635385d7e1ac0d1a961c143f970"
        ],
        [
            "apply Rgt_not_eq.",
            "VernacExtend",
            "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
        ],
        [
            "apply Rplus_gt_reg_l with zeta.",
            "VernacExtend",
            "c28ddff707314598665b7f2720afbc3121f7ee3e"
        ],
        [
            "ring_simplify.",
            "VernacExtend",
            "31578f61427562191ce5389abf97dbf9985ea04c"
        ],
        [
            "apply Hzeta1.",
            "VernacExtend",
            "fae81d081ad436350205ea4f608238b7c53347b6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "linear_zero",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "intros Hl.",
                        "VernacExtend",
                        "5c4705396c649f586841a9235569b2230fedbd7f"
                    ]
                },
                {
                    "command": [
                        "rewrite -(scal_zero_l zero).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite linear_scal.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "exact (scal_zero_l (l zero)).",
                        "VernacExtend",
                        "06586df6104f3c629352780158c82f77c8b2193e"
                    ]
                },
                {
                    "command": [
                        "exact Hl.",
                        "VernacExtend",
                        "726a6911ca781f5fae08f27dbd5c9838368eca79"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "linear_opp",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "intros Hl.",
                        "VernacExtend",
                        "5c4705396c649f586841a9235569b2230fedbd7f"
                    ]
                },
                {
                    "command": [
                        "apply plus_reg_r with (l x).",
                        "VernacExtend",
                        "8a87474abb177040311ad9da962d54e99d7f1fd2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- linear_plus, !plus_opp_l.",
                        "VernacExtend",
                        "64418fd2f24ba2e1aebd37421f4bd56a64f4954f"
                    ]
                },
                {
                    "command": [
                        "by apply linear_zero.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exact Hl.",
                        "VernacExtend",
                        "726a6911ca781f5fae08f27dbd5c9838368eca79"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_linear_ext",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "intros Hl Hl1.",
                        "VernacExtend",
                        "935dbef84836ae3988446b1e75f63a057a9da03b"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros ; rewrite -!Hl ; apply Hl1.",
                        "VernacExtend",
                        "e9bfbd25ba3413c6966bbcc3d5653725c5f67888"
                    ]
                },
                {
                    "command": [
                        "intros ; rewrite -!Hl ; apply Hl1.",
                        "VernacExtend",
                        "e9bfbd25ba3413c6966bbcc3d5653725c5f67888"
                    ]
                },
                {
                    "command": [
                        "case: Hl1 => _ _ [M Hl1].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists M ; split.",
                        "VernacExtend",
                        "a7920270b1aa7967f9b48b07c0a332ee274d5144"
                    ]
                },
                {
                    "command": [
                        "by apply Hl1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "intros ; rewrite -!Hl ; apply Hl1.",
                        "VernacExtend",
                        "e9bfbd25ba3413c6966bbcc3d5653725c5f67888"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_linear_zero",
            "line_nb": 52,
            "steps": [
                {
                    "command": [
                        "repeat split.",
                        "VernacExtend",
                        "7968f2448e3e51b1de42f5c433248f4a827b4da2"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move => _ _ ; by rewrite plus_zero_l.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move => k _ ; by rewrite scal_zero_r.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exists 1 ; split.",
                        "VernacExtend",
                        "d9b9dd4d6ddae59cf375913fb1366ca7eff03748"
                    ]
                },
                {
                    "command": [
                        "exact Rlt_0_1.",
                        "VernacExtend",
                        "8bcad5468a1cd57cf91a54b9c96750052bda60a0"
                    ]
                },
                {
                    "command": [
                        "move => x ; rewrite Rmult_1_l norm_zero.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "apply norm_ge_0.",
                        "VernacExtend",
                        "42acb6605dbb074d8f6aa3d2b2181e0abfe4687b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_linear_id",
            "line_nb": 89,
            "steps": [
                {
                    "command": [
                        "repeat split.",
                        "VernacExtend",
                        "7968f2448e3e51b1de42f5c433248f4a827b4da2"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exists 1 ; split.",
                        "VernacExtend",
                        "d9b9dd4d6ddae59cf375913fb1366ca7eff03748"
                    ]
                },
                {
                    "command": [
                        "exact Rlt_0_1.",
                        "VernacExtend",
                        "8bcad5468a1cd57cf91a54b9c96750052bda60a0"
                    ]
                },
                {
                    "command": [
                        "move => x ; rewrite Rmult_1_l.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by apply Rle_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_linear_opp",
            "line_nb": 97,
            "steps": [
                {
                    "command": [
                        "repeat split.",
                        "VernacExtend",
                        "7968f2448e3e51b1de42f5c433248f4a827b4da2"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move => x y.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "now apply opp_plus.",
                        "VernacExtend",
                        "f0fe3f224dccfb72943fb11033d27f7da9ee8051"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move => k x.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq.",
                        "VernacExtend",
                        "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
                    ]
                },
                {
                    "command": [
                        "apply: scal_opp_r.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exists 1 ; split.",
                        "VernacExtend",
                        "d9b9dd4d6ddae59cf375913fb1366ca7eff03748"
                    ]
                },
                {
                    "command": [
                        "exact Rlt_0_1.",
                        "VernacExtend",
                        "8bcad5468a1cd57cf91a54b9c96750052bda60a0"
                    ]
                },
                {
                    "command": [
                        "move => x ; rewrite norm_opp Rmult_1_l.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by apply Rle_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_linear_scal_l",
            "line_nb": 135,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move => u v ; by apply @scal_distr_r.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move => u v /= ; apply sym_eq, @scal_assoc.",
                        "VernacExtend",
                        "ac9486cca30d02d7cfadaad912fdc974b2020677"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exists (norm x + 1) ; split.",
                        "VernacExtend",
                        "0e775ed5d5bd52199252a84dcd81579b5ca1110a"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_lt_0_compat.",
                        "VernacExtend",
                        "f52234f44384644fc6f21adef182d5c4067417f5"
                    ]
                },
                {
                    "command": [
                        "apply norm_ge_0.",
                        "VernacExtend",
                        "42acb6605dbb074d8f6aa3d2b2181e0abfe4687b"
                    ]
                },
                {
                    "command": [
                        "exact Rlt_0_1.",
                        "VernacExtend",
                        "8bcad5468a1cd57cf91a54b9c96750052bda60a0"
                    ]
                },
                {
                    "command": [
                        "move => k /=.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_plus_distr_r Rmult_1_l -(Rplus_0_r (norm (scal k x))).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat.",
                        "VernacExtend",
                        "7a69898b466991bee51047e3a2fc51c3b80fbd93"
                    ]
                },
                {
                    "command": [
                        "now rewrite Rmult_comm ; apply norm_scal.",
                        "VernacExtend",
                        "f7e3c06727dda055b307391350e0e053b8d757b5"
                    ]
                },
                {
                    "command": [
                        "apply norm_ge_0.",
                        "VernacExtend",
                        "42acb6605dbb074d8f6aa3d2b2181e0abfe4687b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_linear_scal_r",
            "line_nb": 152,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move => u v ; by apply @scal_distr_l.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move => u v /= ; apply sym_eq ; rewrite !@scal_assoc.",
                        "VernacExtend",
                        "2ed5272fd948de3dcdd9352aa83b534347910652"
                    ]
                },
                {
                    "command": [
                        "by rewrite H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exists (abs k + 1) ; split.",
                        "VernacExtend",
                        "a0b7e9d3cd4af62be5a7a20bdd2a81121c6dc83d"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_lt_0_compat.",
                        "VernacExtend",
                        "f52234f44384644fc6f21adef182d5c4067417f5"
                    ]
                },
                {
                    "command": [
                        "apply abs_ge_0.",
                        "VernacExtend",
                        "bfeacd2623650e88fd1e5d792e3438edb9d12256"
                    ]
                },
                {
                    "command": [
                        "exact Rlt_0_1.",
                        "VernacExtend",
                        "8bcad5468a1cd57cf91a54b9c96750052bda60a0"
                    ]
                },
                {
                    "command": [
                        "move => x /=.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_plus_distr_r Rmult_1_l -(Rplus_0_r (norm (scal k x))).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat.",
                        "VernacExtend",
                        "7a69898b466991bee51047e3a2fc51c3b80fbd93"
                    ]
                },
                {
                    "command": [
                        "apply norm_scal.",
                        "VernacExtend",
                        "6c69934cdb6edc62b007ab3c7da8b2ea37e58aa1"
                    ]
                },
                {
                    "command": [
                        "apply norm_ge_0.",
                        "VernacExtend",
                        "42acb6605dbb074d8f6aa3d2b2181e0abfe4687b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterdiff_continuous",
            "line_nb": 284,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "by apply filterdiff_continuous_aux.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterdiff_locally",
            "line_nb": 288,
            "steps": [
                {
                    "command": [
                        "intros Fx [Hl Df].",
                        "VernacExtend",
                        "a4ce850252c480943a4c0cc82c3bc29336dcca26"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "exact Hl.",
                        "VernacExtend",
                        "726a6911ca781f5fae08f27dbd5c9838368eca79"
                    ]
                },
                {
                    "command": [
                        "intros z Fz.",
                        "VernacExtend",
                        "61581b0e01f82a9dda8538fec7f6a3dfe5958aa3"
                    ]
                },
                {
                    "command": [
                        "specialize (Df _ (fun P H => H)).",
                        "VernacExtend",
                        "a6a39ccd16473afc64ba989ba4ebaa305ff4829d"
                    ]
                },
                {
                    "command": [
                        "generalize (is_filter_lim_unique _ _ Fx Fz).",
                        "VernacExtend",
                        "1241234adeecc67c401968b32b00d3a61e395225"
                    ]
                },
                {
                    "command": [
                        "intros ->.",
                        "VernacExtend",
                        "e8af3665779d92274caf81949b4a0e6232d89ea7"
                    ]
                },
                {
                    "command": [
                        "now apply is_domin_le with (2 := Fz).",
                        "VernacExtend",
                        "ee8773fc0041cf3f3a776fc9142013222d4f727e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterdiff_ext_lin",
            "line_nb": 305,
            "steps": [
                {
                    "command": [
                        "intros [Hl1 Hf1] Hl ; split => [ | x Hx eps].",
                        "VernacExtend",
                        "b256c9493539f52b1c0b18fec0d1b29efcf0ec79"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros x y ; rewrite -!Hl.",
                        "VernacExtend",
                        "be6598b26e238a504f0b0f138d15d82f106a2995"
                    ]
                },
                {
                    "command": [
                        "by apply linear_plus.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros k x ; rewrite -!Hl.",
                        "VernacExtend",
                        "c62dd0001d6974bac1fb9ffeecbcdce791df4b3d"
                    ]
                },
                {
                    "command": [
                        "by apply linear_scal.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (linear_norm _ Hl1) as [M Hm].",
                        "VernacExtend",
                        "3fd968570df66439f8892d6ab031cfec71876d06"
                    ]
                },
                {
                    "command": [
                        "exists M ; split.",
                        "VernacExtend",
                        "a7920270b1aa7967f9b48b07c0a332ee274d5144"
                    ]
                },
                {
                    "command": [
                        "by apply Hm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => x ; now rewrite -Hl.",
                        "VernacExtend",
                        "f24c74edd1767d7b5d86e27d9c0161c0702b8412"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "move: (Hf1 x Hx eps).",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply filter_imp => y.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite !Hl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterdiff_ext_loc",
            "line_nb": 325,
            "steps": [
                {
                    "command": [
                        "move => H H0 [Hl Df].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "split => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "move => x Hx eps.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "specialize (H0 x Hx).",
                        "VernacExtend",
                        "9d253fe2d72e95e7c2a540bfa3a3f1c412d4d8b3"
                    ]
                },
                {
                    "command": [
                        "specialize (Df x Hx eps).",
                        "VernacExtend",
                        "6d9ece6aaba3c5daa078e0930509d1c565a8e48b"
                    ]
                },
                {
                    "command": [
                        "apply filter_and with (1 := H) in Df.",
                        "VernacExtend",
                        "fdfdab21a810bd47b6ef637d508e05ea867bb723"
                    ]
                },
                {
                    "command": [
                        "move: Df ; apply filter_imp => y [Hy].",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans.",
                        "VernacExtend",
                        "2502801189c76bcf84789266d44e22a2e1fe0825"
                    ]
                },
                {
                    "command": [
                        "by apply Req_le ; rewrite Hy H0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_filterdiff_ext_loc",
            "line_nb": 336,
            "steps": [
                {
                    "command": [
                        "intros H H0 [l Hl].",
                        "VernacExtend",
                        "eb4381fdac2a64deb44e9478dba5d27b79ec6170"
                    ]
                },
                {
                    "command": [
                        "exists l ; by apply filterdiff_ext_loc with f.",
                        "VernacExtend",
                        "4f9f93dbf1ab94af5a51d54d8955eb863fb55340"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterdiff_ext_locally",
            "line_nb": 340,
            "steps": [
                {
                    "command": [
                        "move => H.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply filterdiff_ext_loc with (1 := H).",
                        "VernacExtend",
                        "8189a7f4f738da727c0cc71f1c157313499bde58"
                    ]
                },
                {
                    "command": [
                        "move => y Hy.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "destruct H as [d Hd].",
                        "VernacExtend",
                        "3d9dd9203284cc496af3e2aaa1bcb93a191fd0d9"
                    ]
                },
                {
                    "command": [
                        "apply Hd.",
                        "VernacExtend",
                        "b2c76316200582fcad9318af1ed397a8dea483e3"
                    ]
                },
                {
                    "command": [
                        "replace y with x.",
                        "VernacExtend",
                        "32bcc5bf56210bff5b38cc9e9eaf0c7ab9375e0b"
                    ]
                },
                {
                    "command": [
                        "apply ball_center.",
                        "VernacExtend",
                        "cd7d813ae3e0973ad761815cfc4c15b7e8339e52"
                    ]
                },
                {
                    "command": [
                        "by apply is_filter_lim_locally_unique.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_filterdiff_ext_locally",
            "line_nb": 350,
            "steps": [
                {
                    "command": [
                        "intros H [l Hl].",
                        "VernacExtend",
                        "ce7ac9c1eb27656ee7483e4134e598706582a55a"
                    ]
                },
                {
                    "command": [
                        "exists l ; by apply filterdiff_ext_locally with f.",
                        "VernacExtend",
                        "4f9f93dbf1ab94af5a51d54d8955eb863fb55340"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterdiff_ext",
            "line_nb": 354,
            "steps": [
                {
                    "command": [
                        "move => H.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply filterdiff_ext_loc => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "now apply filter_imp with (2 := filter_true).",
                        "VernacExtend",
                        "f421e125b4c00d82240e945df09b30b669f300ec"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_filterdiff_ext",
            "line_nb": 359,
            "steps": [
                {
                    "command": [
                        "intros H [l Hl].",
                        "VernacExtend",
                        "ce7ac9c1eb27656ee7483e4134e598706582a55a"
                    ]
                },
                {
                    "command": [
                        "exists l ; by apply filterdiff_ext with f.",
                        "VernacExtend",
                        "4f9f93dbf1ab94af5a51d54d8955eb863fb55340"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterdiff_const",
            "line_nb": 363,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "by apply is_linear_zero.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => x Hx eps.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply filter_imp with (2 := filter_true) => y _.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite /minus plus_opp_r plus_zero_l norm_opp norm_zero.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_pos.",
                        "VernacExtend",
                        "e03207c3cef85471384dc0906485b056bc83a80a"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_le, eps.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply norm_ge_0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_filterdiff_const",
            "line_nb": 373,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exists (fun _ => zero).",
                        "VernacExtend",
                        "e8293129961b5f3c30b055777ecdfabea959f911"
                    ]
                },
                {
                    "command": [
                        "by apply filterdiff_const.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterdiff_linear",
            "line_nb": 378,
            "steps": [
                {
                    "command": [
                        "move => Hl ; split.",
                        "VernacExtend",
                        "22de1c5faad21de60fd48f882c8175e01347018a"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => x Hx eps.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply Hx.",
                        "VernacExtend",
                        "6b67a45c0db24f7a9d568d1ce8b5aa142ba212d9"
                    ]
                },
                {
                    "command": [
                        "apply filter_forall => y.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite /minus -(linear_opp l x Hl) -linear_plus // plus_opp_r norm_zero.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_pos.",
                        "VernacExtend",
                        "e03207c3cef85471384dc0906485b056bc83a80a"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le, eps.",
                        "VernacExtend",
                        "a8e0b1a14c78104fc8aba2b0d10697fc4a297ac2"
                    ]
                },
                {
                    "command": [
                        "by apply norm_ge_0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_filterdiff_linear",
            "line_nb": 389,
            "steps": [
                {
                    "command": [
                        "intro Hl ; exists l; by apply filterdiff_linear.",
                        "VernacExtend",
                        "9d7829450f90451c0ea0fe72b640319e6387d518"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_filterdiff_comp",
            "line_nb": 461,
            "steps": [
                {
                    "command": [
                        "intros [lf Df] [lg Dg].",
                        "VernacExtend",
                        "bdd5e050dc7d12577e233c42cf3ac421f1c778e8"
                    ]
                },
                {
                    "command": [
                        "eexists ; eapply filterdiff_comp ; eassumption.",
                        "VernacExtend",
                        "f02fa63c5754075f1c664c1d6d069a9b2e39e7db"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterdiff_comp'",
            "line_nb": 465,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply filterdiff_comp.",
                        "VernacExtend",
                        "8198bca4a8e18215aeb5f541ae61ff21ce0fa52e"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply filterdiff_locally with (f x).",
                        "VernacExtend",
                        "e21568c66d13430d88733afc41b5a72d5936616e"
                    ]
                },
                {
                    "command": [
                        "apply is_filter_lim_filtermap => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply filterdiff_continuous => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "eexists ; by apply H.",
                        "VernacExtend",
                        "4657dc7e5563695fc6fb97b882b38b9c9d8fee9c"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterdiff_comp'_2",
            "line_nb": 521,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply filterdiff_comp_2.",
                        "VernacExtend",
                        "cc78a5e980d928e46e75c4358959223fe3f77222"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply filterdiff_locally with (f x, g x).",
                        "VernacExtend",
                        "7d8073228df37c442d682823dd1d54e361b3a974"
                    ]
                },
                {
                    "command": [
                        "apply (is_filter_lim_filtermap _ _ (fun t : T => (f t, g t))) => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply (filterdiff_continuous (fun t : T => (f t, g t))) => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply ex_filterdiff_comp_2.",
                        "VernacExtend",
                        "5f12bc65c4a08add838981dc8708ccc28ee1822c"
                    ]
                },
                {
                    "command": [
                        "by exists lf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by exists lg.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply ex_filterdiff_linear.",
                        "VernacExtend",
                        "1ed3e7eb63881344f6f0a4431143b68d8e56ca84"
                    ]
                },
                {
                    "command": [
                        "apply is_linear_prod.",
                        "VernacExtend",
                        "435b3ddf29c095ab708a3ef4dac77051350a9ad9"
                    ]
                },
                {
                    "command": [
                        "apply is_linear_fst.",
                        "VernacExtend",
                        "540da07d1bdca36b9ebbcd162c003841792627db"
                    ]
                },
                {
                    "command": [
                        "by apply is_linear_snd.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_filterdiff_comp'_2",
            "line_nb": 538,
            "steps": [
                {
                    "command": [
                        "intros f g h x [lf Df] [lg Dg] [lh Dh].",
                        "VernacExtend",
                        "5bddb12cced9b986abc12939684cfebee90b04a4"
                    ]
                },
                {
                    "command": [
                        "exists (fun x => lh (lf x,lg x)).",
                        "VernacExtend",
                        "abebe93ca6af3e5e91a0038fb6a838e443cf6353"
                    ]
                },
                {
                    "command": [
                        "apply (filterdiff_comp'_2 f g h x lf lg (fun x y => lh (x,y))) ; try eassumption.",
                        "VernacExtend",
                        "fe35d6822cabba3f9c6066d8320d7671607e3f9d"
                    ]
                },
                {
                    "command": [
                        "eapply filterdiff_ext_lin ; try eassumption.",
                        "VernacExtend",
                        "68d7eb273159b2bc6491f03a2e06ed1fb65abb88"
                    ]
                },
                {
                    "command": [
                        "by case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterdiff_id",
            "line_nb": 548,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "by apply is_linear_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => x Hx eps.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply Hx ; exists eps => y /= Hy.",
                        "VernacExtend",
                        "f87f5dcbbbd1d0c1de626f08d5b75b0699bfd535"
                    ]
                },
                {
                    "command": [
                        "rewrite /minus plus_opp_r norm_zero.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_pos.",
                        "VernacExtend",
                        "e03207c3cef85471384dc0906485b056bc83a80a"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_le, eps.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply norm_ge_0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterdiff_opp",
            "line_nb": 562,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "by apply is_linear_opp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => x Hx eps.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply Hx.",
                        "VernacExtend",
                        "6b67a45c0db24f7a9d568d1ce8b5aa142ba212d9"
                    ]
                },
                {
                    "command": [
                        "exists eps => y /= Hy.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite /minus -!opp_plus plus_opp_r norm_opp norm_zero.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_pos.",
                        "VernacExtend",
                        "e03207c3cef85471384dc0906485b056bc83a80a"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_le, eps.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply norm_ge_0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterdiff_plus",
            "line_nb": 577,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "by apply is_linear_plus.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => x Hx eps.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply Hx ; exists eps => u /= Hu.",
                        "VernacExtend",
                        "f87f5dcbbbd1d0c1de626f08d5b75b0699bfd535"
                    ]
                },
                {
                    "command": [
                        "set v := plus (plus _ _) _.",
                        "VernacExtend",
                        "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
                    ]
                },
                {
                    "command": [
                        "replace v with (minus (plus (fst u) (snd u)) (plus (fst x) (snd x))).",
                        "VernacExtend",
                        "2505fac495176adfb49e7ed787604555fa709ea2"
                    ]
                },
                {
                    "command": [
                        "rewrite /minus plus_opp_r norm_zero.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_pos.",
                        "VernacExtend",
                        "e03207c3cef85471384dc0906485b056bc83a80a"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_le, eps.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply sqrt_pos.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite /v /minus -!plus_assoc ; apply f_equal.",
                        "VernacExtend",
                        "1775b3adc7dd915cdc7d26d03365d16d21a7694e"
                    ]
                },
                {
                    "command": [
                        "rewrite opp_plus plus_comm -!plus_assoc ; apply f_equal, @plus_comm.",
                        "VernacExtend",
                        "d528905e309b0a1ef79ff28a14a9d1dabd27e2c3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterdiff_minus",
            "line_nb": 595,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply (is_linear_comp (fun u => (fst u, opp (snd u))) (fun u => plus (fst u) (snd u))).",
                        "VernacExtend",
                        "b6835ed474d4caeea2b3ee29fb94f9aa0620b91b"
                    ]
                },
                {
                    "command": [
                        "apply is_linear_prod.",
                        "VernacExtend",
                        "435b3ddf29c095ab708a3ef4dac77051350a9ad9"
                    ]
                },
                {
                    "command": [
                        "by apply is_linear_fst.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply is_linear_comp.",
                        "VernacExtend",
                        "1fdc9e0b62d262d8c99d3adff3a6e5212973ed59"
                    ]
                },
                {
                    "command": [
                        "by apply is_linear_snd.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply is_linear_opp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply is_linear_plus.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => x Hx eps.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply Hx ; exists eps => u Hu.",
                        "VernacExtend",
                        "f87f5dcbbbd1d0c1de626f08d5b75b0699bfd535"
                    ]
                },
                {
                    "command": [
                        "simpl fst ; simpl snd.",
                        "VernacExtend",
                        "91b2d0ba752840f71f6d55007c83e13df72f2d45"
                    ]
                },
                {
                    "command": [
                        "set v := minus (plus _ (opp (fst x))) _.",
                        "VernacExtend",
                        "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
                    ]
                },
                {
                    "command": [
                        "replace v with (minus (minus (fst u) (snd u)) (minus (fst x) (snd x))).",
                        "VernacExtend",
                        "7b0f6ce083138d3b94e04dcfc352463dc7471e56"
                    ]
                },
                {
                    "command": [
                        "rewrite /minus plus_opp_r norm_zero.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_pos.",
                        "VernacExtend",
                        "e03207c3cef85471384dc0906485b056bc83a80a"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_le, eps.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply sqrt_pos.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite /v /minus -!plus_assoc ; apply f_equal.",
                        "VernacExtend",
                        "1775b3adc7dd915cdc7d26d03365d16d21a7694e"
                    ]
                },
                {
                    "command": [
                        "rewrite !opp_plus !opp_opp plus_comm -!plus_assoc ; apply f_equal, @plus_comm.",
                        "VernacExtend",
                        "d528905e309b0a1ef79ff28a14a9d1dabd27e2c3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterdiff_scal_l",
            "line_nb": 670,
            "steps": [
                {
                    "command": [
                        "move => F FF x.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply filterdiff_linear.",
                        "VernacExtend",
                        "67ab310bfac2992bdb59f8962825c6990dd81fa3"
                    ]
                },
                {
                    "command": [
                        "by apply is_linear_scal_l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterdiff_scal_r",
            "line_nb": 679,
            "steps": [
                {
                    "command": [
                        "move => F FF x Hcomm.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply filterdiff_linear.",
                        "VernacExtend",
                        "67ab310bfac2992bdb59f8962825c6990dd81fa3"
                    ]
                },
                {
                    "command": [
                        "by apply is_linear_scal_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterdiff_mult",
            "line_nb": 689,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (filterdiff_scal x H H0) ; by simpl.",
                        "VernacExtend",
                        "1d49b30486130d03a27fb5afc2153c10da44d2bb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterdiff_opp_fct",
            "line_nb": 699,
            "steps": [
                {
                    "command": [
                        "intro Df.",
                        "VernacExtend",
                        "4b7386dcf990a147b263e402da4c79a5c5998382"
                    ]
                },
                {
                    "command": [
                        "apply filterdiff_comp.",
                        "VernacExtend",
                        "8198bca4a8e18215aeb5f541ae61ff21ce0fa52e"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply filterdiff_opp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterdiff_plus_fct",
            "line_nb": 710,
            "steps": [
                {
                    "command": [
                        "intros Df Dg.",
                        "VernacExtend",
                        "1a4882372653d6487683152cc8ed5a4d4f734998"
                    ]
                },
                {
                    "command": [
                        "apply filterdiff_comp_2.",
                        "VernacExtend",
                        "cc78a5e980d928e46e75c4358959223fe3f77222"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply filterdiff_plus.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterdiff_iter_plus_fct",
            "line_nb": 722,
            "steps": [
                {
                    "command": [
                        "intros Hf.",
                        "VernacExtend",
                        "0a34d3f570a7fa7521ff666decd218fe609c954f"
                    ]
                },
                {
                    "command": [
                        "induction l ; simpl in * |- *.",
                        "VernacExtend",
                        "77d489f05e8dcd65199cf02c2067f98cb8dbba51"
                    ]
                },
                {
                    "command": [
                        "apply filterdiff_const.",
                        "VernacExtend",
                        "c4a3824a24254aaf40d1d1004814f7d9b4bb02eb"
                    ]
                },
                {
                    "command": [
                        "apply filterdiff_plus_fct.",
                        "VernacExtend",
                        "8bad168987739e3284635e6f026dff72e0b9104f"
                    ]
                },
                {
                    "command": [
                        "apply Hf.",
                        "VernacExtend",
                        "44e8b4102d20ba355038f72fc52240fc6cb8650c"
                    ]
                },
                {
                    "command": [
                        "by left.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply IHl ; intros.",
                        "VernacExtend",
                        "17c41ee74699ffcb3889dae4c0a533d241b6287b"
                    ]
                },
                {
                    "command": [
                        "apply Hf.",
                        "VernacExtend",
                        "44e8b4102d20ba355038f72fc52240fc6cb8650c"
                    ]
                },
                {
                    "command": [
                        "by right.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterdiff_minus_fct",
            "line_nb": 733,
            "steps": [
                {
                    "command": [
                        "intros Df Dg.",
                        "VernacExtend",
                        "1a4882372653d6487683152cc8ed5a4d4f734998"
                    ]
                },
                {
                    "command": [
                        "apply filterdiff_comp_2.",
                        "VernacExtend",
                        "cc78a5e980d928e46e75c4358959223fe3f77222"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply filterdiff_minus.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterdiff_scal_fct",
            "line_nb": 745,
            "steps": [
                {
                    "command": [
                        "intros Hcomm Df Dg.",
                        "VernacExtend",
                        "8f7aec139cb9cad16b3164f86dc492de0fccd406"
                    ]
                },
                {
                    "command": [
                        "apply (filterdiff_comp'_2 f g scal x lf lg (fun k v => plus (scal k (g x)) (scal (f x) v))) => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply (filterdiff_scal (f x, g x)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterdiff_scal_l_fct",
            "line_nb": 755,
            "steps": [
                {
                    "command": [
                        "move => F FF x f lf Df.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply (filterdiff_comp f (fun k => scal k x) lf (fun k => scal k x)).",
                        "VernacExtend",
                        "0e2159fa145f156a1b1a878bc1d5d0acc4184033"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply filterdiff_linear.",
                        "VernacExtend",
                        "67ab310bfac2992bdb59f8962825c6990dd81fa3"
                    ]
                },
                {
                    "command": [
                        "by apply is_linear_scal_l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterdiff_scal_r_fct",
            "line_nb": 767,
            "steps": [
                {
                    "command": [
                        "move => F FF k f lf Hcomm Df.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply (filterdiff_comp f (fun x => scal k x) lf (fun x => scal k x)).",
                        "VernacExtend",
                        "dfe78589b9167e88099ff9a69674cb9c9883e163"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply filterdiff_linear.",
                        "VernacExtend",
                        "67ab310bfac2992bdb59f8962825c6990dd81fa3"
                    ]
                },
                {
                    "command": [
                        "by apply is_linear_scal_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterdiff_mult_fct",
            "line_nb": 780,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "by apply @filterdiff_scal_fct.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_derive_continuous",
            "line_nb": 813,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply @filterdiff_continuous.",
                        "VernacExtend",
                        "deefab8a9bff0233473233918410d8d764671aab"
                    ]
                },
                {
                    "command": [
                        "by apply ex_derive_filterdiff.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_derive_unique",
            "line_nb": 868,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "apply (@f_equal _ _ real _ l).",
                        "VernacExtend",
                        "5c25a6583c34645d1024a794e495b91cb860f495"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_unique.",
                        "VernacExtend",
                        "dae3243103dd458b8bf69808c8c75b5d97ae46f2"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_spec.",
                        "VernacExtend",
                        "6a433fd37843c6d7f4bc73e6cfa945c5042b65eb"
                    ]
                },
                {
                    "command": [
                        "apply is_derive_Reals in H.",
                        "VernacExtend",
                        "55f80d8e94a4b84acc81cc1bacd988c44e1138b2"
                    ]
                },
                {
                    "command": [
                        "intros eps.",
                        "VernacExtend",
                        "786caed5d6705ffc7435ecfd5604e33c6ecd43f1"
                    ]
                },
                {
                    "command": [
                        "destruct (H eps (cond_pos _)) as [d Hd].",
                        "VernacExtend",
                        "74ebf7d2f1c06e1524a2fcebba68107a958250c1"
                    ]
                },
                {
                    "command": [
                        "exists d => h.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite /ball /= /AbsRing_ball /= /minus /plus /opp /= Ropp_0 Rplus_0_r.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "intros Hu Zu.",
                        "VernacExtend",
                        "d5a622830c6bd71d46effbdf583b764640cb660e"
                    ]
                },
                {
                    "command": [
                        "now apply Hd.",
                        "VernacExtend",
                        "15c9c6e291f7dbf0a6c15cab84ce6f5db83fe740"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_correct",
            "line_nb": 881,
            "steps": [
                {
                    "command": [
                        "intros (l,H).",
                        "VernacExtend",
                        "3fda3140394abbcf85ec93d7935c462cf104be2c"
                    ]
                },
                {
                    "command": [
                        "cut (Derive f x = l).",
                        "VernacExtend",
                        "1f41b1238ede34eaab105b210f6c291c3cd85fde"
                    ]
                },
                {
                    "command": [
                        "intros ; rewrite H0 ; apply H.",
                        "VernacExtend",
                        "c427248083a030663c551b953879e257985ecf38"
                    ]
                },
                {
                    "command": [
                        "apply is_derive_unique, H.",
                        "VernacExtend",
                        "4caa5433a821d1a1cd0649413a9d6a8a680e73b9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_derive_Reals_0",
            "line_nb": 887,
            "steps": [
                {
                    "command": [
                        "move => Hf.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply Derive_correct in Hf.",
                        "VernacExtend",
                        "5528005cf5309cfee5c3cec889d823f4b79da1e3"
                    ]
                },
                {
                    "command": [
                        "apply is_derive_Reals in Hf.",
                        "VernacExtend",
                        "1b974fe7646b45fe6f1b41d99cc7423f52d53f6b"
                    ]
                },
                {
                    "command": [
                        "by exists (Derive f x).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_derive_Reals_1",
            "line_nb": 893,
            "steps": [
                {
                    "command": [
                        "case => l Hf.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists l.",
                        "VernacExtend",
                        "9ca96dacfce153d20a69dd7ea7c7254236074950"
                    ]
                },
                {
                    "command": [
                        "now apply is_derive_Reals.",
                        "VernacExtend",
                        "07d895ad9f1058e7afe5c6efe4fba0d1bcc64e6a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_Reals",
            "line_nb": 898,
            "steps": [
                {
                    "command": [
                        "apply sym_eq, is_derive_unique.",
                        "VernacExtend",
                        "f4345b3d4d1256427b61a2b67e933c43059d651b"
                    ]
                },
                {
                    "command": [
                        "case: pr => /= l Hf.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "now apply is_derive_Reals.",
                        "VernacExtend",
                        "07d895ad9f1058e7afe5c6efe4fba0d1bcc64e6a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_derive_ext_loc",
            "line_nb": 905,
            "steps": [
                {
                    "command": [
                        "intros f g x l Heq Hf.",
                        "VernacExtend",
                        "1ca2ac68e002da43dc388fa11dd682b759934912"
                    ]
                },
                {
                    "command": [
                        "now apply (filterdiff_ext_locally f g _ _ Heq).",
                        "VernacExtend",
                        "dfe8cd5426f35b95e68a2a3b04426682f824edff"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_derive_ext_loc",
            "line_nb": 909,
            "steps": [
                {
                    "command": [
                        "intros f g x Hfg (l,Hf).",
                        "VernacExtend",
                        "65665b91ff0affd8982ed67bff3e1ec184b73084"
                    ]
                },
                {
                    "command": [
                        "exists l.",
                        "VernacExtend",
                        "9ca96dacfce153d20a69dd7ea7c7254236074950"
                    ]
                },
                {
                    "command": [
                        "apply: is_derive_ext_loc Hfg Hf.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_derive_ext",
            "line_nb": 914,
            "steps": [
                {
                    "command": [
                        "intros f g x l Heq Hf.",
                        "VernacExtend",
                        "1ca2ac68e002da43dc388fa11dd682b759934912"
                    ]
                },
                {
                    "command": [
                        "apply: filterdiff_ext_locally Hf.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by apply filter_forall.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_derive_ext",
            "line_nb": 919,
            "steps": [
                {
                    "command": [
                        "intros f g x Heq [l Hf].",
                        "VernacExtend",
                        "bbc5b3902d08a5bed97c4abdac19b7518098a1ab"
                    ]
                },
                {
                    "command": [
                        "exists l ; move: Hf ; by apply is_derive_ext.",
                        "VernacExtend",
                        "49d70f8224945fa7a3be12a41d898e6accf26458"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_ext_loc",
            "line_nb": 924,
            "steps": [
                {
                    "command": [
                        "intros f g x Hfg.",
                        "VernacExtend",
                        "d313788a2e29c73878920823242cec1860f22941"
                    ]
                },
                {
                    "command": [
                        "rewrite /Derive /Lim.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply f_equal, Lim_seq_ext_loc.",
                        "VernacExtend",
                        "913dcc760e7ba5e82d0fff47344f97ddd5391eb1"
                    ]
                },
                {
                    "command": [
                        "apply (filterlim_Rbar_loc_seq 0 (fun h => (f (x + h) - f x) / h = (g (x + h) - g x) / h)).",
                        "VernacExtend",
                        "270da8ec89960b51291ee0a9d97982fbd633cdd1"
                    ]
                },
                {
                    "command": [
                        "apply (filter_imp (fun h => f (x + h) = g (x + h))).",
                        "VernacExtend",
                        "caff9be0f3b4e4126c649783f41ee50e1e20d4d2"
                    ]
                },
                {
                    "command": [
                        "intros h ->.",
                        "VernacExtend",
                        "9d5cbb81f01e3447d542d612a412fe3e1a859c3c"
                    ]
                },
                {
                    "command": [
                        "by rewrite (locally_singleton _ _ Hfg).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "destruct Hfg as [eps He].",
                        "VernacExtend",
                        "40219ad9beff9cc698b9a58839e2c6a277e7e319"
                    ]
                },
                {
                    "command": [
                        "exists eps => h H Hh.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply He.",
                        "VernacExtend",
                        "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
                    ]
                },
                {
                    "command": [
                        "rewrite /ball /= /AbsRing_ball /= /minus /plus /opp /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "now replace (x + h + - x) with (h - 0) by ring.",
                        "VernacExtend",
                        "fa1febe2160af4151988c6d778d4ded6589e11a9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_ext",
            "line_nb": 938,
            "steps": [
                {
                    "command": [
                        "intros f g x Hfg.",
                        "VernacExtend",
                        "d313788a2e29c73878920823242cec1860f22941"
                    ]
                },
                {
                    "command": [
                        "apply Derive_ext_loc.",
                        "VernacExtend",
                        "be93f4349517e1b02e04bc815146affa1b5f33b8"
                    ]
                },
                {
                    "command": [
                        "by apply filter_forall.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_derive_const",
            "line_nb": 945,
            "steps": [
                {
                    "command": [
                        "intros a x.",
                        "VernacExtend",
                        "ae8d2ee1dd9062c21284a844645d4ee7ed35906e"
                    ]
                },
                {
                    "command": [
                        "apply filterdiff_ext_lin with (fun y : K => zero).",
                        "VernacExtend",
                        "64d1272071eef5f2bdeceebb6895e912356ca099"
                    ]
                },
                {
                    "command": [
                        "apply filterdiff_const.",
                        "VernacExtend",
                        "c4a3824a24254aaf40d1d1004814f7d9b4bb02eb"
                    ]
                },
                {
                    "command": [
                        "intros y.",
                        "VernacExtend",
                        "d3cd14babe4904577f05dd23b379c589bf67ea40"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq.",
                        "VernacExtend",
                        "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
                    ]
                },
                {
                    "command": [
                        "apply: scal_zero_r.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_const",
            "line_nb": 959,
            "steps": [
                {
                    "command": [
                        "intros a x.",
                        "VernacExtend",
                        "ae8d2ee1dd9062c21284a844645d4ee7ed35906e"
                    ]
                },
                {
                    "command": [
                        "apply is_derive_unique.",
                        "VernacExtend",
                        "e8a169466dae5921bc3cfc15bd8d8cf05c765407"
                    ]
                },
                {
                    "command": [
                        "apply: is_derive_const.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_derive_id",
            "line_nb": 966,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "apply filterdiff_ext_lin with (fun t : K => t).",
                        "VernacExtend",
                        "092aef31cde1ff905cf9c0a98ac145ddd7ca8fb1"
                    ]
                },
                {
                    "command": [
                        "apply filterdiff_id.",
                        "VernacExtend",
                        "12259268ad0a0068e2e8b64e904b09a3cdea1818"
                    ]
                },
                {
                    "command": [
                        "rewrite /scal /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "intros y.",
                        "VernacExtend",
                        "d3cd14babe4904577f05dd23b379c589bf67ea40"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq, mult_one_r.",
                        "VernacExtend",
                        "234646062785a09fa0b1f76022fef037df416eaa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_id",
            "line_nb": 980,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "apply is_derive_unique.",
                        "VernacExtend",
                        "e8a169466dae5921bc3cfc15bd8d8cf05c765407"
                    ]
                },
                {
                    "command": [
                        "apply: is_derive_id.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_derive_opp",
            "line_nb": 987,
            "steps": [
                {
                    "command": [
                        "intros f x l Df.",
                        "VernacExtend",
                        "7853ee95954f231d36f60e0393821259daf7c245"
                    ]
                },
                {
                    "command": [
                        "apply filterdiff_ext_lin with (fun t : K => opp (scal t l)).",
                        "VernacExtend",
                        "22584e04098a765cd36bf0c94279381c640a0e42"
                    ]
                },
                {
                    "command": [
                        "apply filterdiff_comp' with (1 := Df).",
                        "VernacExtend",
                        "dc49e0da33ba9cc591284df87926dda3e5f937f2"
                    ]
                },
                {
                    "command": [
                        "apply filterdiff_opp.",
                        "VernacExtend",
                        "b40149a2ebd0c4c388fbce3d9bb0abbb47e107c1"
                    ]
                },
                {
                    "command": [
                        "intros y.",
                        "VernacExtend",
                        "d3cd14babe4904577f05dd23b379c589bf67ea40"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq.",
                        "VernacExtend",
                        "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
                    ]
                },
                {
                    "command": [
                        "apply: scal_opp_r.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_opp",
            "line_nb": 1003,
            "steps": [
                {
                    "command": [
                        "intros f x.",
                        "VernacExtend",
                        "17eeb72cbf88f3c852dbf90a9cad3586b50f2467"
                    ]
                },
                {
                    "command": [
                        "unfold Derive, Lim.",
                        "VernacExtend",
                        "917c927a79aab63caa792916dfcd4f139e457ea5"
                    ]
                },
                {
                    "command": [
                        "rewrite /Rbar_loc_seq.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -Rbar.Rbar_opp_real.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -Lim_seq_opp.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply f_equal, Lim_seq_ext => n.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite -Ropp_mult_distr_l_reverse.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply (f_equal (fun v => v / _)).",
                        "VernacExtend",
                        "34324e611822f4403b12ab71ea5b968ef04fd319"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_derive_plus",
            "line_nb": 1023,
            "steps": [
                {
                    "command": [
                        "intros f g x [df Df] [dg Dg].",
                        "VernacExtend",
                        "cdcbd6ed7a35bb2ba1fbd0508ac56656392b1996"
                    ]
                },
                {
                    "command": [
                        "exists (plus df dg).",
                        "VernacExtend",
                        "fbd9e153ddbb79704e48e7050f62da4fa9301060"
                    ]
                },
                {
                    "command": [
                        "now apply is_derive_plus.",
                        "VernacExtend",
                        "d77dc622143a2521b44dfc21b3089648703a2e8a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_plus",
            "line_nb": 1056,
            "steps": [
                {
                    "command": [
                        "intros f g x Df Dg.",
                        "VernacExtend",
                        "00e7c97a0beeb5b34d5d78cc0cf47216303d5307"
                    ]
                },
                {
                    "command": [
                        "apply is_derive_unique.",
                        "VernacExtend",
                        "e8a169466dae5921bc3cfc15bd8d8cf05c765407"
                    ]
                },
                {
                    "command": [
                        "apply: is_derive_plus ; now apply Derive_correct.",
                        "VernacExtend",
                        "04dca57e4125cf6b0a5d9ca38244886915dcb6c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_derive_minus",
            "line_nb": 1077,
            "steps": [
                {
                    "command": [
                        "intros f g x [df Df] [dg Dg].",
                        "VernacExtend",
                        "cdcbd6ed7a35bb2ba1fbd0508ac56656392b1996"
                    ]
                },
                {
                    "command": [
                        "exists (minus df dg).",
                        "VernacExtend",
                        "55ce8ca770e00a8811d5c26a7b1c5e554432903b"
                    ]
                },
                {
                    "command": [
                        "now apply is_derive_minus.",
                        "VernacExtend",
                        "a0092a2f00e7972d39c56747a9ec69eccae2f358"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_minus",
            "line_nb": 1083,
            "steps": [
                {
                    "command": [
                        "intros f g x Df Dg.",
                        "VernacExtend",
                        "00e7c97a0beeb5b34d5d78cc0cf47216303d5307"
                    ]
                },
                {
                    "command": [
                        "apply is_derive_unique.",
                        "VernacExtend",
                        "e8a169466dae5921bc3cfc15bd8d8cf05c765407"
                    ]
                },
                {
                    "command": [
                        "apply: is_derive_minus ; now apply Derive_correct.",
                        "VernacExtend",
                        "04dca57e4125cf6b0a5d9ca38244886915dcb6c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_derive_inv",
            "line_nb": 1102,
            "steps": [
                {
                    "command": [
                        "case => l Hf Hl.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists (-l/(f x)^2).",
                        "VernacExtend",
                        "e37d25198423970b1012c9a96a5efbca3edbc801"
                    ]
                },
                {
                    "command": [
                        "by apply is_derive_inv.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_inv",
            "line_nb": 1107,
            "steps": [
                {
                    "command": [
                        "move/Derive_correct => Hf Hl.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply is_derive_unique.",
                        "VernacExtend",
                        "e8a169466dae5921bc3cfc15bd8d8cf05c765407"
                    ]
                },
                {
                    "command": [
                        "by apply is_derive_inv.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_derive_scal",
            "line_nb": 1121,
            "steps": [
                {
                    "command": [
                        "intros f k x (df,Df).",
                        "VernacExtend",
                        "e6b35f11f56e1a12cefe104c6a10f08ce1125e28"
                    ]
                },
                {
                    "command": [
                        "exists (k * df).",
                        "VernacExtend",
                        "330941c3abb0ef4d85b900b5d9c24ba7c499fc9e"
                    ]
                },
                {
                    "command": [
                        "now apply is_derive_scal.",
                        "VernacExtend",
                        "22be356e139ac170f4702734366c22b8bb23931c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_scal",
            "line_nb": 1126,
            "steps": [
                {
                    "command": [
                        "intros f k x.",
                        "VernacExtend",
                        "0631155452fc382a55f84d812bd6cf64a2fe23c4"
                    ]
                },
                {
                    "command": [
                        "unfold Derive, Lim.",
                        "VernacExtend",
                        "917c927a79aab63caa792916dfcd4f139e457ea5"
                    ]
                },
                {
                    "command": [
                        "have H : (forall x, k * Rbar.real x = Rbar.real (Rbar.Rbar_mult (Rbar.Finite k) x)).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case: (Req_dec k 0) => [-> | Hk].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case => [l | | ] //= ; rewrite Rmult_0_l.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "case: Rle_dec (Rle_refl 0) => //= H _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: Rle_lt_or_eq_dec (Rlt_irrefl 0) => //= _ _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: Rle_dec (Rle_refl 0) => //= H _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: Rle_lt_or_eq_dec (Rlt_irrefl 0) => //= _ _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case => [l | | ] //= ; rewrite Rmult_0_r.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "case: Rle_dec => //= H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: Rle_lt_or_eq_dec => //=.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: Rle_dec => //= H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: Rle_lt_or_eq_dec => //=.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -Lim_seq_scal_l.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply f_equal, Lim_seq_ext => n.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite -Rmult_assoc.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply (f_equal (fun v => v / _)).",
                        "VernacExtend",
                        "34324e611822f4403b12ab71ea5b968ef04fd319"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_derive_scal_l",
            "line_nb": 1158,
            "steps": [
                {
                    "command": [
                        "intros f x k [df Df].",
                        "VernacExtend",
                        "6b9e034bff4d46b2047cffa2d53f833d64ea751a"
                    ]
                },
                {
                    "command": [
                        "exists (scal df k).",
                        "VernacExtend",
                        "97f10f38c9cac0ac1e7c69b62b81f89f24b87476"
                    ]
                },
                {
                    "command": [
                        "by apply is_derive_scal_l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_scal_l",
            "line_nb": 1164,
            "steps": [
                {
                    "command": [
                        "rewrite Rmult_comm -Derive_scal.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Derive_ext => t ; by apply Rmult_comm.",
                        "VernacExtend",
                        "7bd77ea96f784074e3b1d448260a45dd4191485f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_derive_mult",
            "line_nb": 1176,
            "steps": [
                {
                    "command": [
                        "move => [d1 H1] [d2 H2].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists (d1 * g x + f x * d2).",
                        "VernacExtend",
                        "a53e3b842754023d38b39b098394dabd7110e4c2"
                    ]
                },
                {
                    "command": [
                        "now apply is_derive_mult.",
                        "VernacExtend",
                        "d1096454ab424aeecaa6c10044b65f59e28c7aa5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_mult",
            "line_nb": 1181,
            "steps": [
                {
                    "command": [
                        "move => H1 H2.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply is_derive_unique.",
                        "VernacExtend",
                        "e8a169466dae5921bc3cfc15bd8d8cf05c765407"
                    ]
                },
                {
                    "command": [
                        "now apply is_derive_mult ; apply Derive_correct.",
                        "VernacExtend",
                        "5a4b28d7d196d20fb82d6add70971215b2d36e2f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_derive_pow",
            "line_nb": 1186,
            "steps": [
                {
                    "command": [
                        "move => H.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rmult_comm _ l) Rmult_assoc Rmult_comm.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply is_derive_Reals.",
                        "VernacExtend",
                        "50ffedc276e75c32dd6244cd073b4227506b2788"
                    ]
                },
                {
                    "command": [
                        "apply (derivable_pt_lim_comp f (fun x => x^n)).",
                        "VernacExtend",
                        "b77d0d5726eff0b51a093c6a088a0e9f97ecaf3c"
                    ]
                },
                {
                    "command": [
                        "now apply is_derive_Reals.",
                        "VernacExtend",
                        "07d895ad9f1058e7afe5c6efe4fba0d1bcc64e6a"
                    ]
                },
                {
                    "command": [
                        "by apply derivable_pt_lim_pow.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_derive_pow",
            "line_nb": 1194,
            "steps": [
                {
                    "command": [
                        "case => l H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists (INR n * l * (f x)^(pred n)).",
                        "VernacExtend",
                        "d7d9c4600f71ba876aed328b7c3f6bcdf1026595"
                    ]
                },
                {
                    "command": [
                        "by apply is_derive_pow.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_pow",
            "line_nb": 1199,
            "steps": [
                {
                    "command": [
                        "move => H.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply is_derive_unique.",
                        "VernacExtend",
                        "e8a169466dae5921bc3cfc15bd8d8cf05c765407"
                    ]
                },
                {
                    "command": [
                        "apply is_derive_pow.",
                        "VernacExtend",
                        "cc43ecdcaf7c8df0f693d635381699df7e00265e"
                    ]
                },
                {
                    "command": [
                        "by apply Derive_correct.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_derive_div",
            "line_nb": 1215,
            "steps": [
                {
                    "command": [
                        "move => Hf Hg Hl.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply ex_derive_mult.",
                        "VernacExtend",
                        "6510658aa9221221e397ca1a8023ed20b93b1f2a"
                    ]
                },
                {
                    "command": [
                        "apply Hf.",
                        "VernacExtend",
                        "44e8b4102d20ba355038f72fc52240fc6cb8650c"
                    ]
                },
                {
                    "command": [
                        "by apply ex_derive_inv.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_div",
            "line_nb": 1221,
            "steps": [
                {
                    "command": [
                        "move => Hf Hg Hl.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply is_derive_unique.",
                        "VernacExtend",
                        "e8a169466dae5921bc3cfc15bd8d8cf05c765407"
                    ]
                },
                {
                    "command": [
                        "now apply is_derive_div ; try apply Derive_correct.",
                        "VernacExtend",
                        "ba42a7f669686c5296a74bdb58806a02c8cc6033"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_derive_comp",
            "line_nb": 1235,
            "steps": [
                {
                    "command": [
                        "intros f g x [df Df] [dg Dg].",
                        "VernacExtend",
                        "cdcbd6ed7a35bb2ba1fbd0508ac56656392b1996"
                    ]
                },
                {
                    "command": [
                        "exists (scal dg df).",
                        "VernacExtend",
                        "1d3252564b6f44411e902634055736f37fc89bba"
                    ]
                },
                {
                    "command": [
                        "now apply is_derive_comp.",
                        "VernacExtend",
                        "4c4186aaa65b0f1f0677714ccf76224b987ce452"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_comp",
            "line_nb": 1241,
            "steps": [
                {
                    "command": [
                        "intros Df Dg.",
                        "VernacExtend",
                        "1a4882372653d6487683152cc8ed5a4d4f734998"
                    ]
                },
                {
                    "command": [
                        "apply is_derive_unique.",
                        "VernacExtend",
                        "e8a169466dae5921bc3cfc15bd8d8cf05c765407"
                    ]
                },
                {
                    "command": [
                        "apply: is_derive_comp ; now apply Derive_correct.",
                        "VernacExtend",
                        "04dca57e4125cf6b0a5d9ca38244886915dcb6c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "MVT_gen",
            "line_nb": 1246,
            "steps": [
                {
                    "command": [
                        "move => a0 b0 Hd Hf.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (Req_dec a0 b0) => Hab.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists a0 ; split.",
                        "VernacExtend",
                        "77ca09cd572d5ceb085bc8165b959e5848bef494"
                    ]
                },
                {
                    "command": [
                        "split ; by apply Req_le.",
                        "VernacExtend",
                        "9c392753fd6384a52f43e9d349afde47af3b3aa5"
                    ]
                },
                {
                    "command": [
                        "replace b with a.",
                        "VernacExtend",
                        "381264e524e7cdccf00853c5fbe117dfbc0f2738"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "move: Hab ; rewrite /a0 /b0 /Rmin /Rmax ; by case: Rle_dec => Hab.",
                        "VernacExtend",
                        "9316342455eb51a3e1204d3e55750c03c1806191"
                    ]
                },
                {
                    "command": [
                        "have pr1 : forall c:R, a0 < c < b0 -> derivable_pt f c.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move => x Hx ; exists (df x).",
                        "VernacExtend",
                        "5c6fd35d501b8c64cc29104e8a6552ec19177bc6"
                    ]
                },
                {
                    "command": [
                        "by apply is_derive_Reals, Hd.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have pr2 : forall c:R, a0 < c < b0 -> derivable_pt id c.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move => x Hx ; exists 1.",
                        "VernacExtend",
                        "b7377bd2b362133c4ef2be09ca263609ff51408d"
                    ]
                },
                {
                    "command": [
                        "by apply derivable_pt_lim_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: (MVT f id a0 b0 pr1 pr2).",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Rnot_le_lt ; contradict Hab ; apply Rle_antisym.",
                        "VernacExtend",
                        "a585aba378674fb8f0f0f9a192a4db22d622f245"
                    ]
                },
                {
                    "command": [
                        "by apply Rcomplements.Rmin_Rmax.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Hab.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Hf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => x Hx ; apply derivable_continuous, derivable_id.",
                        "VernacExtend",
                        "f7bfecd9388d37b88abe0c31ad4fea1cde48b3ad"
                    ]
                },
                {
                    "command": [
                        "move => /= c [Hc H].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists c ; split.",
                        "VernacExtend",
                        "3e1e8b4f017ed8d6e2ffcb1f375ef9385f5558f1"
                    ]
                },
                {
                    "command": [
                        "split ; by apply Rlt_le, Hc.",
                        "VernacExtend",
                        "9c392753fd6384a52f43e9d349afde47af3b3aa5"
                    ]
                },
                {
                    "command": [
                        "replace (df c) with (derive_pt f c (pr1 c Hc)).",
                        "VernacExtend",
                        "e5177bb4dab5337f78cdaf6c49255f3291ca91ae"
                    ]
                },
                {
                    "command": [
                        "move: H ; rewrite {1 2}/id /a0 /b0 /Rmin /Rmax ; case: Rle_dec => Hab0 H.",
                        "VernacExtend",
                        "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_comm H -(pr_nu _ _ (derivable_pt_id _)) derive_pt_id.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "replace (derive_pt f c (pr1 c Hc) * (b - a)) with (-((a - b) * derive_pt f c (pr1 c Hc))) by ring.",
                        "VernacExtend",
                        "4e8ac63289fd59005ab1c8e36f6f4ad409b2eeac"
                    ]
                },
                {
                    "command": [
                        "rewrite H -(pr_nu _ _ (derivable_pt_id _)) derive_pt_id.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "case: (pr1 c Hc) => /= l Hl.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "transitivity (Derive f c).",
                        "VernacExtend",
                        "aab90b4c0033101feed3931950af5daf603c1f3a"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq, is_derive_unique, is_derive_Reals, Hl.",
                        "VernacExtend",
                        "10a48182420758bb614dfefd27ab572ac6699efe"
                    ]
                },
                {
                    "command": [
                        "by apply is_derive_unique, Hd.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "incr_function",
            "line_nb": 1281,
            "steps": [
                {
                    "command": [
                        "move => Df Hf x y Hax Hxy Hyb.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt_0.",
                        "VernacExtend",
                        "266ec80c870ca91ace5efd2beddab25e945c4342"
                    ]
                },
                {
                    "command": [
                        "case: (MVT_gen f x y df) => [z Hz | z Hz | c [Hc ->]].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Df.",
                        "VernacExtend",
                        "6977200c5ed42f07be5c070bbdde02d6c91f143c"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_lt_le_trans with (y := Rmin x y) (2 := Rlt_le _ _ (proj1 Hz)).",
                        "VernacExtend",
                        "78f308f3b95266a3d372c15c3bad7c8ae5a059b4"
                    ]
                },
                {
                    "command": [
                        "rewrite /Rmin ; case: Rle_dec (Rlt_le _ _ Hxy) => //.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_le_lt_trans with (y := Rmax x y) (1 := Rlt_le _ _ (proj2 Hz)).",
                        "VernacExtend",
                        "97adee03e71de2c9925f96b2bf04eca9c70d1cfe"
                    ]
                },
                {
                    "command": [
                        "rewrite /Rmax ; case: Rle_dec (Rlt_le _ _ Hxy) => //.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "apply derivable_continuous_pt.",
                        "VernacExtend",
                        "939a043861a6c1b6ad68f89e18a325fcf10fb0f3"
                    ]
                },
                {
                    "command": [
                        "exists (df z) ; apply is_derive_Reals, Df.",
                        "VernacExtend",
                        "233e0330b4c1e89fa78e3f4d4ac65d9525b87ddd"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_lt_le_trans with (y := Rmin x y) (2 := proj1 Hz).",
                        "VernacExtend",
                        "8da1c8e4883509f9ebe65a2629a7fecbbc78d940"
                    ]
                },
                {
                    "command": [
                        "rewrite /Rmin ; case: Rle_dec (Rlt_le _ _ Hxy) => //.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_le_lt_trans with (y := Rmax x y) (1 := proj2 Hz).",
                        "VernacExtend",
                        "7a4d94509452ab428505f480ba65d33904c114db"
                    ]
                },
                {
                    "command": [
                        "rewrite /Rmax ; case: Rle_dec (Rlt_le _ _ Hxy) => //.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_0_compat.",
                        "VernacExtend",
                        "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
                    ]
                },
                {
                    "command": [
                        "apply Hf.",
                        "VernacExtend",
                        "44e8b4102d20ba355038f72fc52240fc6cb8650c"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_lt_le_trans with (y := Rmin x y) (2 := proj1 Hc).",
                        "VernacExtend",
                        "311cd120e0793bb6f03d5492d228f4360c13f054"
                    ]
                },
                {
                    "command": [
                        "rewrite /Rmin ; case: Rle_dec (Rlt_le _ _ Hxy) => //.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_le_lt_trans with (y := Rmax x y) (1 := proj2 Hc).",
                        "VernacExtend",
                        "9df6e1193ede7f3acb684a78a67cc6482a9f1435"
                    ]
                },
                {
                    "command": [
                        "rewrite /Rmax ; case: Rle_dec (Rlt_le _ _ Hxy) => //.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by apply -> Rminus_lt_0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "incr_function_le",
            "line_nb": 1304,
            "steps": [
                {
                    "command": [
                        "move => Df Hf x y Hax Hxy Hyb.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt_0.",
                        "VernacExtend",
                        "266ec80c870ca91ace5efd2beddab25e945c4342"
                    ]
                },
                {
                    "command": [
                        "case: (MVT_gen f x y df) => [z Hz | z Hz | c [Hc ->]].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Df.",
                        "VernacExtend",
                        "6977200c5ed42f07be5c070bbdde02d6c91f143c"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_le_trans with (y := Rmin x y) (2 := Rlt_le _ _ (proj1 Hz)).",
                        "VernacExtend",
                        "eb5aecfde1eee4c333deabc5b3bf267244f6b0dc"
                    ]
                },
                {
                    "command": [
                        "rewrite /Rmin ; case: Rle_dec (Rlt_le _ _ Hxy) => //.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_le_trans with (y := Rmax x y) (1 := Rlt_le _ _ (proj2 Hz)).",
                        "VernacExtend",
                        "1fc4639e99bbc572f1c55e756ab2382edc3efb6c"
                    ]
                },
                {
                    "command": [
                        "rewrite /Rmax ; case: Rle_dec (Rlt_le _ _ Hxy) => //.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "apply derivable_continuous_pt.",
                        "VernacExtend",
                        "939a043861a6c1b6ad68f89e18a325fcf10fb0f3"
                    ]
                },
                {
                    "command": [
                        "exists (df z) ; apply is_derive_Reals, Df.",
                        "VernacExtend",
                        "233e0330b4c1e89fa78e3f4d4ac65d9525b87ddd"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_le_trans with (y := Rmin x y) (2 := proj1 Hz).",
                        "VernacExtend",
                        "dc4e90a0d02e62fea9da905b785faccc7d740320"
                    ]
                },
                {
                    "command": [
                        "rewrite /Rmin ; case: Rle_dec (Rlt_le _ _ Hxy) => //.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_le_trans with (y := Rmax x y) (1 := proj2 Hz).",
                        "VernacExtend",
                        "d7e6d96deb74255b62c2381079af8149b9c28550"
                    ]
                },
                {
                    "command": [
                        "rewrite /Rmax ; case: Rle_dec (Rlt_le _ _ Hxy) => //.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_0_compat.",
                        "VernacExtend",
                        "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
                    ]
                },
                {
                    "command": [
                        "apply Hf.",
                        "VernacExtend",
                        "44e8b4102d20ba355038f72fc52240fc6cb8650c"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_le_trans with (y := Rmin x y) (2 := proj1 Hc).",
                        "VernacExtend",
                        "8bda8ca274871042fb73a2250d1a57cfec40a28b"
                    ]
                },
                {
                    "command": [
                        "rewrite /Rmin ; case: Rle_dec (Rlt_le _ _ Hxy) => //.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_le_trans with (y := Rmax x y) (1 := proj2 Hc).",
                        "VernacExtend",
                        "365cbdcbb87bd2291e79a3b6da09351f63643790"
                    ]
                },
                {
                    "command": [
                        "rewrite /Rmax ; case: Rle_dec (Rlt_le _ _ Hxy) => //.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by apply -> Rminus_lt_0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "MVT_cor4",
            "line_nb": 1327,
            "steps": [
                {
                    "command": [
                        "intros f df a eps Hf' b.",
                        "VernacExtend",
                        "04f5d9a01b358b5b2917c45273f884a6c01ab6bb"
                    ]
                },
                {
                    "command": [
                        "unfold Rabs at 1 3.",
                        "VernacExtend",
                        "2d4de01500828c435253247da3b9fce987feb465"
                    ]
                },
                {
                    "command": [
                        "case Rcase_abs; intros H1 H2.",
                        "VernacExtend",
                        "0a1158e61ef74dce45a18ee912e3538d92b8eafc"
                    ]
                },
                {
                    "command": [
                        "destruct (MVT_cor2 f df b a).",
                        "VernacExtend",
                        "3a83c87a977258805b0423b55405097829ae6df0"
                    ]
                },
                {
                    "command": [
                        "rewrite -(Rplus_0_l a).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_minus_l.",
                        "VernacExtend",
                        "137a322a62e4429fc333e3e397a20e9e5df0298a"
                    ]
                },
                {
                    "command": [
                        "intros c Hc.",
                        "VernacExtend",
                        "a6796c62d7c0db66fe8ba83a4c9d8f0f080ccce0"
                    ]
                },
                {
                    "command": [
                        "apply is_derive_Reals, Hf'.",
                        "VernacExtend",
                        "8238b1ab699de36d7ae509319837ea687f8de7de"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_left1.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (2:=H2).",
                        "VernacExtend",
                        "be58cd1f48aeee8514f4904f852299bb5010f302"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_le_contravar.",
                        "VernacExtend",
                        "ac8d32b190d111aa8834547674121bcf3bb8a0ed"
                    ]
                },
                {
                    "command": [
                        "now apply Rplus_le_compat_r.",
                        "VernacExtend",
                        "8182aad22e58bd21105c801af074d763818ebcdd"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_r with a.",
                        "VernacExtend",
                        "7e41b8d10aacb48eab4235f2cca73781bfced56b"
                    ]
                },
                {
                    "command": [
                        "now ring_simplify.",
                        "VernacExtend",
                        "2d108f365e3e8acc156a34cc381bc8087ba632ff"
                    ]
                },
                {
                    "command": [
                        "exists x; split.",
                        "VernacExtend",
                        "f9266ddab0754060cc1803dfa28547707d7da7dd"
                    ]
                },
                {
                    "command": [
                        "rewrite -RIneq.Ropp_minus_distr (proj1 H).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_left.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_le_contravar.",
                        "VernacExtend",
                        "ac8d32b190d111aa8834547674121bcf3bb8a0ed"
                    ]
                },
                {
                    "command": [
                        "left; now apply Rplus_lt_compat_r.",
                        "VernacExtend",
                        "4b32cf96c610f1c565950e7fe8839ea9a52edb98"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_reg_r with a.",
                        "VernacExtend",
                        "29b80bb1e86d357d5eae4b61b2c5a7b63bc73d62"
                    ]
                },
                {
                    "command": [
                        "now ring_simplify.",
                        "VernacExtend",
                        "2d108f365e3e8acc156a34cc381bc8087ba632ff"
                    ]
                },
                {
                    "command": [
                        "destruct H1.",
                        "VernacExtend",
                        "e752c2122f55c888e09082f784a6da990b01fbe7"
                    ]
                },
                {
                    "command": [
                        "destruct (MVT_cor2 f df a b).",
                        "VernacExtend",
                        "ca3bbaa24dcf3820863bf0c59f2a0ec7cc120f71"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_reg_r with (-a).",
                        "VernacExtend",
                        "43cebc0bdc150b2ad5ab8c85ddce53b19547901a"
                    ]
                },
                {
                    "command": [
                        "ring_simplify.",
                        "VernacExtend",
                        "31578f61427562191ce5389abf97dbf9985ea04c"
                    ]
                },
                {
                    "command": [
                        "now rewrite Rplus_comm.",
                        "VernacExtend",
                        "276cb1b1d654c3b906be8c12785939ceeaffac64"
                    ]
                },
                {
                    "command": [
                        "intros c Hc.",
                        "VernacExtend",
                        "a6796c62d7c0db66fe8ba83a4c9d8f0f080ccce0"
                    ]
                },
                {
                    "command": [
                        "apply is_derive_Reals, Hf'.",
                        "VernacExtend",
                        "8238b1ab699de36d7ae509319837ea687f8de7de"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_right.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (2:=H2).",
                        "VernacExtend",
                        "be58cd1f48aeee8514f4904f852299bb5010f302"
                    ]
                },
                {
                    "command": [
                        "now apply Rplus_le_compat_r.",
                        "VernacExtend",
                        "8182aad22e58bd21105c801af074d763818ebcdd"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge; apply Rplus_le_reg_r with a.",
                        "VernacExtend",
                        "62d3e2ad91bd31ac217642c18af044f7dc2a19b6"
                    ]
                },
                {
                    "command": [
                        "now ring_simplify.",
                        "VernacExtend",
                        "2d108f365e3e8acc156a34cc381bc8087ba632ff"
                    ]
                },
                {
                    "command": [
                        "exists x; split.",
                        "VernacExtend",
                        "f9266ddab0754060cc1803dfa28547707d7da7dd"
                    ]
                },
                {
                    "command": [
                        "exact (proj1 H0).",
                        "VernacExtend",
                        "c4a7857b07aa3734031e6534bff5cef975f62be2"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_right.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "left; now apply Rplus_lt_compat_r.",
                        "VernacExtend",
                        "4b32cf96c610f1c565950e7fe8839ea9a52edb98"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge; apply Rplus_le_reg_r with a.",
                        "VernacExtend",
                        "62d3e2ad91bd31ac217642c18af044f7dc2a19b6"
                    ]
                },
                {
                    "command": [
                        "left; now ring_simplify.",
                        "VernacExtend",
                        "c7a4dd64e2b4521a20a32f988b63e6b7a2eae854"
                    ]
                },
                {
                    "command": [
                        "exists a.",
                        "VernacExtend",
                        "59cc5697e7369be65591d2d5e6ad6fd701682809"
                    ]
                },
                {
                    "command": [
                        "replace b with a.",
                        "VernacExtend",
                        "381264e524e7cdccf00853c5fbe117dfbc0f2738"
                    ]
                },
                {
                    "command": [
                        "split;[ring|idtac].",
                        "VernacExtend",
                        "b52f666a2e70a740e625aa6223877603bd0dd503"
                    ]
                },
                {
                    "command": [
                        "rewrite /Rminus Rplus_opp_r Rabs_R0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rle_refl.",
                        "VernacExtend",
                        "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_eq_reg_l with (-a).",
                        "VernacExtend",
                        "2af7eaadfb0748c230bcdbfc3067b317c4b44a2e"
                    ]
                },
                {
                    "command": [
                        "ring_simplify.",
                        "VernacExtend",
                        "31578f61427562191ce5389abf97dbf9985ea04c"
                    ]
                },
                {
                    "command": [
                        "rewrite - H; ring.",
                        "VernacExtend",
                        "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bounded_variation",
            "line_nb": 1377,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "destruct (MVT_cor4 h dh x (Rabs (y - x))) with (b := y) as [t Ht].",
                        "VernacExtend",
                        "ea3c14a8019c10888a1a3852828b8013f4ba25d5"
                    ]
                },
                {
                    "command": [
                        "intros c Hc.",
                        "VernacExtend",
                        "a6796c62d7c0db66fe8ba83a4c9d8f0f080ccce0"
                    ]
                },
                {
                    "command": [
                        "specialize (H c Hc).",
                        "VernacExtend",
                        "46b1c3b00f312c09609462d57d51e1eefd681478"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply Rle_refl.",
                        "VernacExtend",
                        "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 Ht).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_mult.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_r.",
                        "VernacExtend",
                        "6c4c5a82dab802842919dd673f1978a3cb8cff73"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_pos.",
                        "VernacExtend",
                        "8e57e214403458a4dc8dafc960971b86cf3b856d"
                    ]
                },
                {
                    "command": [
                        "now apply H.",
                        "VernacExtend",
                        "e28edffe226486c29d50d204164561fb199b8c97"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "norm_le_prod_norm_1",
            "line_nb": 1390,
            "steps": [
                {
                    "command": [
                        "eapply Rle_trans, sqrt_plus_sqr.",
                        "VernacExtend",
                        "85f6b2fad617d6721bfce8f070fab8a290ff3f59"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_pos_eq.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rmax_l.",
                        "VernacExtend",
                        "e8bdf305d751b877364ec9794b15c2d6e134dc98"
                    ]
                },
                {
                    "command": [
                        "by apply norm_ge_0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "norm_le_prod_norm_2",
            "line_nb": 1396,
            "steps": [
                {
                    "command": [
                        "eapply Rle_trans, sqrt_plus_sqr.",
                        "VernacExtend",
                        "85f6b2fad617d6721bfce8f070fab8a290ff3f59"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rabs_pos_eq (norm (snd x))).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rmax_r.",
                        "VernacExtend",
                        "d3f964851377911a5dafd3727673be093a2b343f"
                    ]
                },
                {
                    "command": [
                        "by apply norm_ge_0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fn_eq_Derive_eq",
            "line_nb": 1478,
            "steps": [
                {
                    "command": [
                        "intros f g a b Cfa Cfb Cga Cgb Df Dg Hfg.",
                        "VernacExtend",
                        "36fe74d3fa8d6a2f68f1b235340186340e8e4c53"
                    ]
                },
                {
                    "command": [
                        "pose (h := fun x => f x - g x).",
                        "VernacExtend",
                        "9781846b5362348a52f4f37f89eb24edefcc1666"
                    ]
                },
                {
                    "command": [
                        "assert (pr : forall x : R, a < x < b -> derivable_pt h x).",
                        "VernacExtend",
                        "17425b593f45b7c6328a71c6dc38a8bd45316c24"
                    ]
                },
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "apply derivable_pt_minus.",
                        "VernacExtend",
                        "ba0f12b0c6b1d9f0442014804620576081f54651"
                    ]
                },
                {
                    "command": [
                        "eexists; apply is_derive_Reals, Derive_correct, Df, Hx.",
                        "VernacExtend",
                        "782ebfbcd54ebdc50f4706739a4685e206c68ee6"
                    ]
                },
                {
                    "command": [
                        "eexists; apply is_derive_Reals, Derive_correct, Dg, Hx.",
                        "VernacExtend",
                        "656fcb141acb035a4fdbc51670af1f0167f7981f"
                    ]
                },
                {
                    "command": [
                        "assert (constant_D_eq h (fun x : R => a <= x <= b) (h a)).",
                        "VernacExtend",
                        "ef2a3e874d83be206ed11d4e346cba4a57b7e1e3"
                    ]
                },
                {
                    "command": [
                        "apply null_derivative_loc with (pr:=pr).",
                        "VernacExtend",
                        "92d3205bc7c3fdf3218731852099b8f3da5d3959"
                    ]
                },
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "case (proj1 Hx).",
                        "VernacExtend",
                        "ad0c3b686121c12d6c664e7d9e5d7c5962bac468"
                    ]
                },
                {
                    "command": [
                        "case (proj2 Hx).",
                        "VernacExtend",
                        "007cc5cf6fffa5e8121456f0435906f2526e6ea4"
                    ]
                },
                {
                    "command": [
                        "intros Y1 Y2.",
                        "VernacExtend",
                        "2a8a47e6ecca05e7737e1636f5fbdb1460fad880"
                    ]
                },
                {
                    "command": [
                        "apply derivable_continuous_pt.",
                        "VernacExtend",
                        "939a043861a6c1b6ad68f89e18a325fcf10fb0f3"
                    ]
                },
                {
                    "command": [
                        "apply pr; now split.",
                        "VernacExtend",
                        "794e46514f3a43e18b3faeb97bcbe5d4a955db82"
                    ]
                },
                {
                    "command": [
                        "intros Y1 _; rewrite Y1.",
                        "VernacExtend",
                        "777bced5228a62483c53d547218f2f46c7fa603a"
                    ]
                },
                {
                    "command": [
                        "apply continuity_pt_minus.",
                        "VernacExtend",
                        "ee124f243d9a30e1165f89a65c2280f21b3b2888"
                    ]
                },
                {
                    "command": [
                        "apply Cfb.",
                        "VernacExtend",
                        "cd151d3ac7e766a73993822c76ae520e1ed12bd3"
                    ]
                },
                {
                    "command": [
                        "apply Cgb.",
                        "VernacExtend",
                        "df2ac45b474c85c7b67f80ed41a3816c4ff86e7a"
                    ]
                },
                {
                    "command": [
                        "intros Y1; rewrite <- Y1.",
                        "VernacExtend",
                        "fc93c1a9f0754b4e89815a2bfe429f8272068ccd"
                    ]
                },
                {
                    "command": [
                        "apply continuity_pt_minus.",
                        "VernacExtend",
                        "ee124f243d9a30e1165f89a65c2280f21b3b2888"
                    ]
                },
                {
                    "command": [
                        "apply Cfa.",
                        "VernacExtend",
                        "07ac4170cfd79d653a3acaee48bd97a296f618c9"
                    ]
                },
                {
                    "command": [
                        "apply Cga.",
                        "VernacExtend",
                        "7cfc9925a786cdf8d012b404a0945341f33b44ee"
                    ]
                },
                {
                    "command": [
                        "intros x P.",
                        "VernacExtend",
                        "12d2fb7d0baab2b1e2d0943e6ddaa6b6639a8fca"
                    ]
                },
                {
                    "command": [
                        "apply trans_eq with (Derive h x).",
                        "VernacExtend",
                        "22244f845996d2a989613979ecf54b578ff34867"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq, is_derive_unique, is_derive_Reals.",
                        "VernacExtend",
                        "7a4d27f414ad3e067e3d1436e600bd9e66b9c974"
                    ]
                },
                {
                    "command": [
                        "now destruct (pr x P).",
                        "VernacExtend",
                        "b6223ad4357e5f2894d69af527840b22b2bf7256"
                    ]
                },
                {
                    "command": [
                        "rewrite Derive_minus.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (Hfg _ P).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "apply Df; split; apply P.",
                        "VernacExtend",
                        "5dae9cfc04b458ee6672f76a8261b00d0314d3dd"
                    ]
                },
                {
                    "command": [
                        "apply Dg; split; apply P.",
                        "VernacExtend",
                        "94d1cf4e1bce907b1980e0e06b945e76b4797ba5"
                    ]
                },
                {
                    "command": [
                        "unfold constant_D_eq in H.",
                        "VernacExtend",
                        "5f80fe2e335f73afff33d48d822d5882ab5ac1ff"
                    ]
                },
                {
                    "command": [
                        "exists (h a).",
                        "VernacExtend",
                        "3e190302d5b481b82ba2bb8d2acf083eac43a95b"
                    ]
                },
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (H _ Hx).",
                        "VernacExtend",
                        "1c8839684401c2aebe9b7678645110b0fcf2669e"
                    ]
                },
                {
                    "command": [
                        "unfold h; ring.",
                        "VernacExtend",
                        "8bb23f7a75893495e684cba456e7ce0601caab68"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extension_cont_continuous",
            "line_nb": 1520,
            "steps": [
                {
                    "command": [
                        "simpl => Cf Cg Heq ; apply filterlim_locally => /= eps.",
                        "VernacExtend",
                        "fbaa61af20867a5dfb8bb5213ca8048b258f8f3a"
                    ]
                },
                {
                    "command": [
                        "generalize (proj1 (filterlim_locally _ _) Cf eps) => {Cf} Cf.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "generalize (proj1 (filterlim_locally _ _) Cg eps) => {Cg} Cg.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "generalize (filter_and _ _ Cf Cg).",
                        "VernacExtend",
                        "5435d224ed3f48eff387b20465d8b5acbe815428"
                    ]
                },
                {
                    "command": [
                        "apply filter_imp => {Cf Cg} x [Cf Cg].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite /extension_cont.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: Rle_dec (Rle_refl a) => // _ _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: Rle_dec => // H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite Heq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extension_cont_is_derive",
            "line_nb": 1534,
            "steps": [
                {
                    "command": [
                        "case => _ Cf [_ Cg] Heq.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "by apply is_linear_scal_l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => x Hx eps.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "move: (Cf x Hx eps) => {Cf} Cf.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "move: (Cg x Hx eps) => {Cg} Cg.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "generalize (is_filter_lim_locally_unique _ _ Hx) => {Hx} Hx.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite -Hx {x Hx} in Cf, Cg |- *.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "generalize (filter_and _ _ Cf Cg).",
                        "VernacExtend",
                        "5435d224ed3f48eff387b20465d8b5acbe815428"
                    ]
                },
                {
                    "command": [
                        "apply filter_imp => {Cf Cg} x [Cf Cg].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite /extension_cont.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: Rle_dec => Hx ; case: Rle_dec (Rle_refl a) => //= _ _.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "by rewrite Heq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extension_C0_ext",
            "line_nb": 1553,
            "steps": [
                {
                    "command": [
                        "move => x Hax Hxb.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /extension_C0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: Rbar_le_dec => // _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: Rbar_le_dec => // _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extension_C1_ext",
            "line_nb": 1648,
            "steps": [
                {
                    "command": [
                        "move => x Hax Hxb.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /extension_C1.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: Rbar_le_dec => // _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: Rbar_le_dec => // _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_derive_n_unique",
            "line_nb": 1928,
            "steps": [
                {
                    "command": [
                        "case n.",
                        "VernacExtend",
                        "11697c0361eed9b7e10df873f1d76a9d8f9f100a"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "simpl; intros n0 H.",
                        "VernacExtend",
                        "7ce8df89301ffb05896641471c2e4626788c8ea1"
                    ]
                },
                {
                    "command": [
                        "now apply is_derive_unique.",
                        "VernacExtend",
                        "5c4d198f7fe512d6f8828a7c5e5b68d89df0a4fd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_n_correct",
            "line_nb": 1934,
            "steps": [
                {
                    "command": [
                        "case: n => /= [ | n] Hf.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Derive_correct.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_n_ext_loc",
            "line_nb": 1939,
            "steps": [
                {
                    "command": [
                        "intros f g n x Heq.",
                        "VernacExtend",
                        "2aeffacb3217d72ba48486e6fdbb453fb8f3f8ef"
                    ]
                },
                {
                    "command": [
                        "pattern x ; apply locally_singleton.",
                        "VernacExtend",
                        "a697ac3a1d2fd79abd2a3897ae655aa749d52801"
                    ]
                },
                {
                    "command": [
                        "induction n.",
                        "VernacExtend",
                        "7f3faa2a3277e3553406d09101130efcb1764494"
                    ]
                },
                {
                    "command": [
                        "exact Heq.",
                        "VernacExtend",
                        "7089bf3423ce2d210efd1ab5a8cfe076161aee40"
                    ]
                },
                {
                    "command": [
                        "apply locally_locally in IHn.",
                        "VernacExtend",
                        "2134d616a81669b7e9b5e73a0d84388aadea8566"
                    ]
                },
                {
                    "command": [
                        "apply filter_imp with (2 := IHn) => {IHn}.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "intros t H.",
                        "VernacExtend",
                        "475698d739ae2eaf1c0e4f992363cb01cfb29b5b"
                    ]
                },
                {
                    "command": [
                        "now apply Derive_ext_loc.",
                        "VernacExtend",
                        "c20a196cd1078c0e4596ca153c0dc5e53cb21321"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_derive_n_ext_loc",
            "line_nb": 1949,
            "steps": [
                {
                    "command": [
                        "intros f g n x Heq.",
                        "VernacExtend",
                        "2aeffacb3217d72ba48486e6fdbb453fb8f3f8ef"
                    ]
                },
                {
                    "command": [
                        "case: n => /= [ | n].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply ex_derive_ext_loc.",
                        "VernacExtend",
                        "419cd0bdf7d777ecea9b654f923bb90eb8c656e7"
                    ]
                },
                {
                    "command": [
                        "apply locally_locally in Heq.",
                        "VernacExtend",
                        "0a03c984bfb0239c610e37082deb10e768cfa11d"
                    ]
                },
                {
                    "command": [
                        "apply filter_imp with (2 := Heq) => {Heq}.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply Derive_n_ext_loc.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_derive_n_ext_loc",
            "line_nb": 1958,
            "steps": [
                {
                    "command": [
                        "intros f g n x l Heq.",
                        "VernacExtend",
                        "667245d16792ec7b05411475f0ab918c8c459ac9"
                    ]
                },
                {
                    "command": [
                        "case: n => /= [ | n].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move => <- ; apply sym_eq.",
                        "VernacExtend",
                        "298f333f4345f5ad582c35cbcd8ec21dace876c1"
                    ]
                },
                {
                    "command": [
                        "pattern x ; now apply locally_singleton.",
                        "VernacExtend",
                        "850c4ffe3f5cbef6994a338855748e0658ee331f"
                    ]
                },
                {
                    "command": [
                        "apply is_derive_ext_loc.",
                        "VernacExtend",
                        "94c266b6f4b45c216c9ef5fb09ec549c07773a5a"
                    ]
                },
                {
                    "command": [
                        "apply locally_locally in Heq.",
                        "VernacExtend",
                        "0a03c984bfb0239c610e37082deb10e768cfa11d"
                    ]
                },
                {
                    "command": [
                        "apply filter_imp with (2 := Heq) => {Heq}.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply Derive_n_ext_loc.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_n_ext",
            "line_nb": 1968,
            "steps": [
                {
                    "command": [
                        "intros f g n x Heq.",
                        "VernacExtend",
                        "2aeffacb3217d72ba48486e6fdbb453fb8f3f8ef"
                    ]
                },
                {
                    "command": [
                        "apply Derive_n_ext_loc.",
                        "VernacExtend",
                        "497aa3b5fbf6ebfb20fa4fa694bf8701348ced33"
                    ]
                },
                {
                    "command": [
                        "by apply filter_forall.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_derive_n_ext",
            "line_nb": 1973,
            "steps": [
                {
                    "command": [
                        "intros f g n x Heq.",
                        "VernacExtend",
                        "2aeffacb3217d72ba48486e6fdbb453fb8f3f8ef"
                    ]
                },
                {
                    "command": [
                        "apply ex_derive_n_ext_loc.",
                        "VernacExtend",
                        "586f67db390a8c550b9a19d8c7e49c9954f1824c"
                    ]
                },
                {
                    "command": [
                        "by apply filter_forall.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_derive_n_ext",
            "line_nb": 1978,
            "steps": [
                {
                    "command": [
                        "intros f g n x l Heq.",
                        "VernacExtend",
                        "667245d16792ec7b05411475f0ab918c8c459ac9"
                    ]
                },
                {
                    "command": [
                        "apply is_derive_n_ext_loc.",
                        "VernacExtend",
                        "1a49de8f76d5d1ef5c69406d831acc8e1659f53c"
                    ]
                },
                {
                    "command": [
                        "by apply filter_forall.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_n_comp",
            "line_nb": 1983,
            "steps": [
                {
                    "command": [
                        "intros f n m.",
                        "VernacExtend",
                        "73728f090fd7c138f85f0e575525a0e105935c46"
                    ]
                },
                {
                    "command": [
                        "induction n.",
                        "VernacExtend",
                        "7f3faa2a3277e3553406d09101130efcb1764494"
                    ]
                },
                {
                    "command": [
                        "now simpl.",
                        "VernacExtend",
                        "7cf8ae1595f521e6705ea84c45dd2f1b53854af2"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "now apply Derive_ext.",
                        "VernacExtend",
                        "6988f270364b1c9b905d4cefa4ac9f194bbec167"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_derive_Sn",
            "line_nb": 1991,
            "steps": [
                {
                    "command": [
                        "move => Hf.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: n => /= [ | n].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "split => H.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply is_derive_unique.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -H ; apply Derive_correct.",
                        "VernacExtend",
                        "402f7b1d27e16b715d28d46b92ba94b2b3a2b763"
                    ]
                },
                {
                    "command": [
                        "now apply locally_singleton.",
                        "VernacExtend",
                        "55581ecce71d33d288ed08bd68d1b58b8773f0ab"
                    ]
                },
                {
                    "command": [
                        "split => Hf'.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply is_derive_ext with (2 := Hf').",
                        "VernacExtend",
                        "d9e61e1059fc578df76bb858742ecad705b1219d"
                    ]
                },
                {
                    "command": [
                        "move => y ; rewrite (Derive_n_comp _ n 1%nat).",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by (replace (n + 1)%nat with (S n) by ring).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply is_derive_ext with (2 := Hf').",
                        "VernacExtend",
                        "d9e61e1059fc578df76bb858742ecad705b1219d"
                    ]
                },
                {
                    "command": [
                        "move => y ; rewrite (Derive_n_comp _ n 1%nat).",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by (replace (n + 1)%nat with (S n) by ring).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_n_const",
            "line_nb": 2022,
            "steps": [
                {
                    "command": [
                        "intros x ; apply is_derive_n_unique, is_derive_n_const.",
                        "VernacExtend",
                        "a5909c091015c30d17918d65646f3e7f8bbdd2ec"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_n_opp",
            "line_nb": 2025,
            "steps": [
                {
                    "command": [
                        "elim: n x => [ | n IH] x /=.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -Derive_opp.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply Derive_ext.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_derive_n_opp",
            "line_nb": 2031,
            "steps": [
                {
                    "command": [
                        "case: n x => [ | n] /= x Hf.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply ex_derive_opp in Hf.",
                        "VernacExtend",
                        "07137f14855485696bf7fdc3d9608f35c027c58d"
                    ]
                },
                {
                    "command": [
                        "apply: ex_derive_ext Hf.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "move => y ; by rewrite Derive_n_opp.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_derive_n_opp",
            "line_nb": 2038,
            "steps": [
                {
                    "command": [
                        "case: n x => [ | n] /= x Hf.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite Hf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply is_derive_opp in Hf.",
                        "VernacExtend",
                        "66f2b1b349ee57d7cbea176b1b442a9c5f34a6f3"
                    ]
                },
                {
                    "command": [
                        "apply: is_derive_ext Hf.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "move => y ; by rewrite Derive_n_opp.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_n_plus",
            "line_nb": 2045,
            "steps": [
                {
                    "command": [
                        "elim: n x => /= [ | n IH] x [rf Hf] [rg Hg].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -Derive_plus.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Derive_ext_loc.",
                        "VernacExtend",
                        "be93f4349517e1b02e04bc815146affa1b5f33b8"
                    ]
                },
                {
                    "command": [
                        "set r := (mkposreal _ (Rmin_stable_in_posreal rf rg)) ; exists r => y Hy.",
                        "VernacExtend",
                        "ced270260aea2dd3ab523a646806c84962140531"
                    ]
                },
                {
                    "command": [
                        "rewrite /ball /= /AbsRing_ball /= in Hy.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_lt_between' in Hy.",
                        "VernacExtend",
                        "ba88cf28d01239e61700215c528d225d0556ddd8"
                    ]
                },
                {
                    "command": [
                        "case: Hy ; move/Rlt_Rminus => Hy1 ; move/Rlt_Rminus => Hy2.",
                        "VernacExtend",
                        "ad9703cddf270cbbe68f7e9fd9d34355dc053bfe"
                    ]
                },
                {
                    "command": [
                        "set r0 := mkposreal _ (Rmin_pos _ _ Hy1 Hy2).",
                        "VernacExtend",
                        "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
                    ]
                },
                {
                    "command": [
                        "apply IH ; exists r0 => z Hz k Hk.",
                        "VernacExtend",
                        "6fcace697e4472b54d713cabc4565b1a3f73da64"
                    ]
                },
                {
                    "command": [
                        "apply Hf.",
                        "VernacExtend",
                        "44e8b4102d20ba355038f72fc52240fc6cb8650c"
                    ]
                },
                {
                    "command": [
                        "rewrite /ball /= /AbsRing_ball /= in Hz.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_lt_between' in Hz.",
                        "VernacExtend",
                        "464d3508b48b60becac1da186c0c6abe0d80d335"
                    ]
                },
                {
                    "command": [
                        "rewrite /Rminus -Rmax_opp_Rmin Rplus_max_distr_l (Rplus_min_distr_l y) in Hz.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: Hz ; move => Hz1 Hz2.",
                        "VernacExtend",
                        "d09d9458d087c74b7317d831afc65fc07a0f6e3f"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (1 := Rmax_l _ _) in Hz1 ; ring_simplify in Hz1.",
                        "VernacExtend",
                        "ff1435522782597420462595f9d511e584e64ea3"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (2 := Rmin_r _ _) in Hz2 ; ring_simplify (y + (x + Rmin rf rg + - y)) in Hz2.",
                        "VernacExtend",
                        "92cf66ee37adb70bdcd50aec03f4162f873de15d"
                    ]
                },
                {
                    "command": [
                        "have Hz := (conj Hz1 Hz2) => {Hz1 Hz2}.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_lt_between' in Hz.",
                        "VernacExtend",
                        "464d3508b48b60becac1da186c0c6abe0d80d335"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (1 := Hz) => /= ; by apply Rmin_l.",
                        "VernacExtend",
                        "7bd77ea96f784074e3b1d448260a45dd4191485f"
                    ]
                },
                {
                    "command": [
                        "by apply le_trans with (1 := Hk), le_n_Sn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Hg.",
                        "VernacExtend",
                        "01c1d3461bd6fa059f36624dcd703fe73a0894a8"
                    ]
                },
                {
                    "command": [
                        "rewrite /ball /= /AbsRing_ball /= in Hz.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_lt_between' in Hz.",
                        "VernacExtend",
                        "464d3508b48b60becac1da186c0c6abe0d80d335"
                    ]
                },
                {
                    "command": [
                        "rewrite /Rminus -Rmax_opp_Rmin Rplus_max_distr_l (Rplus_min_distr_l y) in Hz.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: Hz ; move => Hz1 Hz2.",
                        "VernacExtend",
                        "d09d9458d087c74b7317d831afc65fc07a0f6e3f"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (1 := Rmax_l _ _) in Hz1 ; ring_simplify in Hz1.",
                        "VernacExtend",
                        "ff1435522782597420462595f9d511e584e64ea3"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (2 := Rmin_r _ _) in Hz2 ; ring_simplify (y + (x + Rmin rf rg + - y)) in Hz2.",
                        "VernacExtend",
                        "92cf66ee37adb70bdcd50aec03f4162f873de15d"
                    ]
                },
                {
                    "command": [
                        "have Hz := (conj Hz1 Hz2) => {Hz1 Hz2}.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_lt_between' in Hz.",
                        "VernacExtend",
                        "464d3508b48b60becac1da186c0c6abe0d80d335"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (1 := Hz) => /= ; by apply Rmin_r.",
                        "VernacExtend",
                        "7bd77ea96f784074e3b1d448260a45dd4191485f"
                    ]
                },
                {
                    "command": [
                        "by apply le_trans with (1 := Hk), le_n_Sn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Hf with (k := (S n)).",
                        "VernacExtend",
                        "63bb01c15e715baddd79786c2c979994b78e21d4"
                    ]
                },
                {
                    "command": [
                        "by apply ball_center.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply le_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Hg with (k := S n).",
                        "VernacExtend",
                        "e5aeb76d6299db43053afbc00b96e300bac313a9"
                    ]
                },
                {
                    "command": [
                        "by apply ball_center.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply le_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_derive_n_plus",
            "line_nb": 2100,
            "steps": [
                {
                    "command": [
                        "case: n x lf lg => /= [ | n] x lf lg Hfn Hgn Hf Hg.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite Hf Hg.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply is_derive_ext_loc with (fun y => Derive_n f n y + Derive_n g n y).",
                        "VernacExtend",
                        "aad327680875f81d61be4dda72c72e7070a2f3aa"
                    ]
                },
                {
                    "command": [
                        "apply locally_locally in Hfn.",
                        "VernacExtend",
                        "7466f0417ae3577b59e4af07b053f4ec2129ccd8"
                    ]
                },
                {
                    "command": [
                        "apply locally_locally in Hgn.",
                        "VernacExtend",
                        "51e040d7a60a7cf5e1e4aa9daa3e2abcbabad9f8"
                    ]
                },
                {
                    "command": [
                        "generalize (filter_and _ _ Hfn Hgn).",
                        "VernacExtend",
                        "bc6e553b8a3ab104fa139bb2fa6113b7e4466e09"
                    ]
                },
                {
                    "command": [
                        "apply filter_imp => {Hfn Hgn} y [Hfn Hgn].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq, Derive_n_plus.",
                        "VernacExtend",
                        "853c93b45e0b17c0407e46914c969e20badbf285"
                    ]
                },
                {
                    "command": [
                        "apply filter_imp with (2 := Hfn) ; by intuition.",
                        "VernacExtend",
                        "2684498bce2787b85d8af123dd25a7e2fb77b11b"
                    ]
                },
                {
                    "command": [
                        "apply filter_imp with (2 := Hgn) ; by intuition.",
                        "VernacExtend",
                        "3172a5fa8e93864e53c3fb94c963e83266225b73"
                    ]
                },
                {
                    "command": [
                        "by apply: is_derive_plus.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_n_iter_plus",
            "line_nb": 2149,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "apply is_derive_n_unique.",
                        "VernacExtend",
                        "81d9d87d43be65460b0b45662d1df915e827069f"
                    ]
                },
                {
                    "command": [
                        "by apply is_derive_n_iter_plus.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_derive_n_sum_n_m",
            "line_nb": 2154,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply is_derive_n_iter_plus.",
                        "VernacExtend",
                        "b5153e7cf295322662a4246beae4107cb4036f2a"
                    ]
                },
                {
                    "command": [
                        "move: H ; apply filter_imp ; intros.",
                        "VernacExtend",
                        "207a413f3a878baf7460ce71e9d309e069b9b105"
                    ]
                },
                {
                    "command": [
                        "apply H => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply In_iota.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_derive_n_sum_n_m",
            "line_nb": 2161,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply ex_derive_n_iter_plus.",
                        "VernacExtend",
                        "2ce2660eb70cb90689a7d550bd1a1534cc42fe99"
                    ]
                },
                {
                    "command": [
                        "move: H ; apply filter_imp ; intros.",
                        "VernacExtend",
                        "207a413f3a878baf7460ce71e9d309e069b9b105"
                    ]
                },
                {
                    "command": [
                        "apply H => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply In_iota.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_n_sum_n_m",
            "line_nb": 2168,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Derive_n_iter_plus.",
                        "VernacExtend",
                        "773cafe83db5b314142e4677a03412e791b8749b"
                    ]
                },
                {
                    "command": [
                        "move: H ; apply filter_imp ; intros.",
                        "VernacExtend",
                        "207a413f3a878baf7460ce71e9d309e069b9b105"
                    ]
                },
                {
                    "command": [
                        "apply H => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply In_iota.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_derive_n_sum_n",
            "line_nb": 2175,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply is_derive_n_sum_n_m.",
                        "VernacExtend",
                        "af0308dc507fc8ebbde6c98be1f87b8b44e9c65f"
                    ]
                },
                {
                    "command": [
                        "move: H ; apply filter_imp ; intros.",
                        "VernacExtend",
                        "207a413f3a878baf7460ce71e9d309e069b9b105"
                    ]
                },
                {
                    "command": [
                        "apply H => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply H0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_derive_n_sum_n",
            "line_nb": 2182,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply ex_derive_n_sum_n_m.",
                        "VernacExtend",
                        "111399f7f4c5e345a779e0a34ae1374e6edbee6e"
                    ]
                },
                {
                    "command": [
                        "move: H ; apply filter_imp ; intros.",
                        "VernacExtend",
                        "207a413f3a878baf7460ce71e9d309e069b9b105"
                    ]
                },
                {
                    "command": [
                        "apply H => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply H0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_n_sum_n",
            "line_nb": 2189,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Derive_n_sum_n_m.",
                        "VernacExtend",
                        "57c6230c5a3a7a7376fbd356626f06174bcd241a"
                    ]
                },
                {
                    "command": [
                        "move: H ; apply filter_imp ; intros.",
                        "VernacExtend",
                        "207a413f3a878baf7460ce71e9d309e069b9b105"
                    ]
                },
                {
                    "command": [
                        "apply H => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply H0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_n_minus",
            "line_nb": 2196,
            "steps": [
                {
                    "command": [
                        "move => Hf Hg.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite Derive_n_plus.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite Derive_n_opp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: Hg ; apply filter_imp => y Hg k Hk.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "apply ex_derive_n_opp ; by apply Hg.",
                        "VernacExtend",
                        "2b340b07d1c732b4a1fa41bd091c55be23bd5491"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_derive_n_minus",
            "line_nb": 2204,
            "steps": [
                {
                    "command": [
                        "move => Hf Hg.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply ex_derive_n_plus.",
                        "VernacExtend",
                        "fcbfd3e21872e069939cbfefef5d9b4679bd1cd3"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: Hg ; apply filter_imp => y Hg k Hk.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "apply ex_derive_n_opp ; by apply Hg.",
                        "VernacExtend",
                        "2b340b07d1c732b4a1fa41bd091c55be23bd5491"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_derive_n_minus",
            "line_nb": 2211,
            "steps": [
                {
                    "command": [
                        "move => Hf Hg Df Dg.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply is_derive_n_plus.",
                        "VernacExtend",
                        "1e9bd2a516529296474d0728218ded711c7532a6"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: Hg ; apply filter_imp => y Hg k Hk.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "apply ex_derive_n_opp ; by apply Hg.",
                        "VernacExtend",
                        "2b340b07d1c732b4a1fa41bd091c55be23bd5491"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply is_derive_n_opp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_n_scal_l",
            "line_nb": 2220,
            "steps": [
                {
                    "command": [
                        "elim: n x => /= [ | n IH] x.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -Derive_scal.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply Derive_ext.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_derive_n_scal_l",
            "line_nb": 2226,
            "steps": [
                {
                    "command": [
                        "case: n x => /= [ | n] x Hf.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply ex_derive_ext with (fun y => a * Derive_n f n y).",
                        "VernacExtend",
                        "89e83ba984d97e2790e8c629f01f885421947225"
                    ]
                },
                {
                    "command": [
                        "move => t ; by rewrite Derive_n_scal_l.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "now apply ex_derive_scal.",
                        "VernacExtend",
                        "816f279187e82a93b11656bdde05d9e3f80f03de"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_n_scal_r",
            "line_nb": 2246,
            "steps": [
                {
                    "command": [
                        "rewrite Rmult_comm -Derive_n_scal_l.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Derive_n_ext => y ; ring.",
                        "VernacExtend",
                        "785b79cf5886f81c5cf749720ec752fc335b65ab"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_derive_n_scal_r",
            "line_nb": 2250,
            "steps": [
                {
                    "command": [
                        "move/(ex_derive_n_scal_l _ _ a).",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply ex_derive_n_ext => y ; ring.",
                        "VernacExtend",
                        "785b79cf5886f81c5cf749720ec752fc335b65ab"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_derive_n_scal_r",
            "line_nb": 2254,
            "steps": [
                {
                    "command": [
                        "move/(is_derive_n_scal_l _ _ a).",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_comm.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply is_derive_n_ext => y ; ring.",
                        "VernacExtend",
                        "785b79cf5886f81c5cf749720ec752fc335b65ab"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_n_comp_scal",
            "line_nb": 2259,
            "steps": [
                {
                    "command": [
                        "case: (Req_dec a 0) => [ -> _ | Ha] /=.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_0_l.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "elim: n x => [ | n IH] x /= ; rewrite ?Rmult_0_l.",
                        "VernacExtend",
                        "de65c8193056a36f6dbb91fe21357bd770b140db"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "rewrite (Derive_ext _ _ _ IH).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply Derive_const.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => Hf.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply (locally_singleton _ (fun x => Derive_n (fun y : R => f (a * y)) n x = a ^ n * Derive_n f n (a * x))).",
                        "VernacExtend",
                        "22c69ff86ca7674f57119007792a533ffaef6510"
                    ]
                },
                {
                    "command": [
                        "elim: n Hf => [ | n IH] Hf.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "apply filter_forall => /= y ; ring.",
                        "VernacExtend",
                        "785b79cf5886f81c5cf749720ec752fc335b65ab"
                    ]
                },
                {
                    "command": [
                        "case: IH => [ | r IH].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: Hf => r0 Hf.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists r0 => y Hy k Hk ; by intuition.",
                        "VernacExtend",
                        "7bd77ea96f784074e3b1d448260a45dd4191485f"
                    ]
                },
                {
                    "command": [
                        "case: Hf => r0 Hf.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "have Hr1 : 0 < Rmin (r0 / (Rabs a)) r.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply Rmin_case.",
                        "VernacExtend",
                        "06bee284b3ab9229517272cc3728705bdc7b95ba"
                    ]
                },
                {
                    "command": [
                        "apply Rdiv_lt_0_compat.",
                        "VernacExtend",
                        "283136f6e52505e4579f1f286529bc7e0bbfd6d7"
                    ]
                },
                {
                    "command": [
                        "by apply r0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Rabs_pos_lt.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "set r1 := mkposreal _ Hr1.",
                        "VernacExtend",
                        "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
                    ]
                },
                {
                    "command": [
                        "exists r1 => y Hy /=.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite (Derive_ext_loc _ (fun y => a ^ n * Derive_n f n (a * y))).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite Derive_scal.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rmult_comm a (a^n)) Rmult_assoc.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply f_equal.",
                        "VernacExtend",
                        "ba856cbef3c8e84dcef77c91c8515b497874875b"
                    ]
                },
                {
                    "command": [
                        "rewrite Derive_comp.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (Derive_ext (Rmult a) (fun x => a * x)) => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite Derive_scal Derive_id ; ring.",
                        "VernacExtend",
                        "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
                    ]
                },
                {
                    "command": [
                        "apply Hf with (k := S n).",
                        "VernacExtend",
                        "63bb01c15e715baddd79786c2c979994b78e21d4"
                    ]
                },
                {
                    "command": [
                        "rewrite /ball /= /AbsRing_ball /= /abs /minus /plus /opp /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -/(Rminus _ _) -Rmult_minus_distr_l Rabs_mult.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (Rabs a * r1).",
                        "VernacExtend",
                        "2d79f4ec363efc67ebdb997ee40e38c11cf944f8"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_compat_l.",
                        "VernacExtend",
                        "e06ce02cd2654586097cfda8f116dd4fe6d6b2a8"
                    ]
                },
                {
                    "command": [
                        "by apply Rabs_pos_lt.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Hy.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_comm ; apply Rle_div_r.",
                        "VernacExtend",
                        "501bd021b8f2aedfba8f97c6337af4e657172b3b"
                    ]
                },
                {
                    "command": [
                        "by apply Rabs_pos_lt.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite /r1 ; by apply Rmin_l.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "by apply lt_n_Sn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply ex_derive_scal.",
                        "VernacExtend",
                        "3e0cedd5c5b707ed6df53e77217943509cc186c4"
                    ]
                },
                {
                    "command": [
                        "by apply ex_derive_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite /ball /= /AbsRing_ball /= in Hy.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_lt_between' in Hy.",
                        "VernacExtend",
                        "ba88cf28d01239e61700215c528d225d0556ddd8"
                    ]
                },
                {
                    "command": [
                        "case: Hy => Hy1 Hy2.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_Rminus in Hy1.",
                        "VernacExtend",
                        "daa3e4126b5c2a6a695bd4acdaf473b3c07e8cea"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_Rminus in Hy2.",
                        "VernacExtend",
                        "92661faa223f40975bdf553c29898bd4df22d63d"
                    ]
                },
                {
                    "command": [
                        "have Hy : 0 < Rmin (y - (x - r1)) (x + r1 - y).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply Rmin_case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists (mkposreal (Rmin (y - (x - r1)) (x + r1 - y)) Hy).",
                        "VernacExtend",
                        "06736e165a7b7bf1e8c3faf870946a197616b9e6"
                    ]
                },
                {
                    "command": [
                        "set r2 := Rmin (y - (x - r1)) (x + r1 - y).",
                        "VernacExtend",
                        "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
                    ]
                },
                {
                    "command": [
                        "move => t Ht.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply IH.",
                        "VernacExtend",
                        "88103d45393d3ee3ab547447d913543854db8cea"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_lt_between'.",
                        "VernacExtend",
                        "63a15ff3174a06f608196b85267ac5d1aae1e55e"
                    ]
                },
                {
                    "command": [
                        "rewrite /ball /= /AbsRing_ball /= in Ht.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_lt_between' in Ht.",
                        "VernacExtend",
                        "01b2581aac0f8e58574a51e2c5b5ad115e685439"
                    ]
                },
                {
                    "command": [
                        "simpl in Ht.",
                        "VernacExtend",
                        "f3647f468667e683097b7de90a7362183d8a63fa"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (2 := proj1 Ht).",
                        "VernacExtend",
                        "bffc4a3b1d844220d9bc2f0a792188d021c76df5"
                    ]
                },
                {
                    "command": [
                        "rewrite /r2 ; apply Rle_trans with (y-(y-(x-r1))).",
                        "VernacExtend",
                        "1fc9e3e112c2d8d0845e202b0ce51716aaed03a0"
                    ]
                },
                {
                    "command": [
                        "ring_simplify ; apply Rplus_le_compat_l, Ropp_le_contravar.",
                        "VernacExtend",
                        "462dc3f486597441f4feb73e7696cf3dab5d1401"
                    ]
                },
                {
                    "command": [
                        "rewrite /r1 ; apply Rmin_r.",
                        "VernacExtend",
                        "18e921d47e38e4bfe7094f7358fc8bcd706e085b"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat_l, Ropp_le_contravar, Rmin_l.",
                        "VernacExtend",
                        "fcc4b1003a6baef0cef177487166c38e4b6d4084"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (1 := proj2 Ht).",
                        "VernacExtend",
                        "750a0c6b53017ec8c93b1c5ce65e21ecd0f1090b"
                    ]
                },
                {
                    "command": [
                        "rewrite /r2 ; apply Rle_trans with (y+((x+r1)-y)).",
                        "VernacExtend",
                        "06be3294edd4fcecb7d1a304a3c0d6c663cb33fa"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat_l, Rmin_r.",
                        "VernacExtend",
                        "f93b83a49cd8ad319d9eea4a24e014a81fd20527"
                    ]
                },
                {
                    "command": [
                        "ring_simplify ; apply Rplus_le_compat_l.",
                        "VernacExtend",
                        "01c3bcacc1cf41e7dcfe0ff75021f42c1b09fc5f"
                    ]
                },
                {
                    "command": [
                        "rewrite /r1 ; apply Rmin_r.",
                        "VernacExtend",
                        "18e921d47e38e4bfe7094f7358fc8bcd706e085b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_derive_n_comp_scal",
            "line_nb": 2329,
            "steps": [
                {
                    "command": [
                        "case: n f x => /= [ | n] f x Hf.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: (Req_dec a 0) => Ha.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite Ha => {a Ha Hf}.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply ex_derive_ext with (fun _ => Derive_n (fun y : R => f (0 * y)) n 0).",
                        "VernacExtend",
                        "94e9de63c2dd63e762be03c6cfcafa9533b2deb4"
                    ]
                },
                {
                    "command": [
                        "elim: n => /= [ | n IH] t.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by rewrite ?Rmult_0_l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -?(Derive_ext _ _ _ IH).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite ?Derive_const.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply ex_derive_const.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply ex_derive_ext_loc with (fun x => a^n * Derive_n f n (a * x)).",
                        "VernacExtend",
                        "bccfaeb45b90b5210c4a04b10edf10453296b6e9"
                    ]
                },
                {
                    "command": [
                        "case: Hf => r Hf.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "have Hr0 : 0 < r / Rabs a.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply Rdiv_lt_0_compat.",
                        "VernacExtend",
                        "283136f6e52505e4579f1f286529bc7e0bbfd6d7"
                    ]
                },
                {
                    "command": [
                        "by apply r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Rabs_pos_lt.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists (mkposreal _ Hr0) => /= y Hy.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply eq_sym, Derive_n_comp_scal.",
                        "VernacExtend",
                        "ce075e2c94f72c0d186fb7d649c9faff5a3a41c6"
                    ]
                },
                {
                    "command": [
                        "have : Rabs (a*y - a*x) < r.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -Rmult_minus_distr_l Rabs_mult.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "replace (pos r) with (Rabs a * (r / Rabs a)) by (field ; by apply Rgt_not_eq, Rabs_pos_lt).",
                        "VernacExtend",
                        "bfee143dfc094b7be679f6e2afe6a40ec7a8f795"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_compat_l.",
                        "VernacExtend",
                        "e06ce02cd2654586097cfda8f116dd4fe6d6b2a8"
                    ]
                },
                {
                    "command": [
                        "by apply Rabs_pos_lt.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Hy.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => {Hy} Hy.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_lt_between' in Hy ; case: Hy => Hy1 Hy2.",
                        "VernacExtend",
                        "80e1f55da80931de0594b0555bcd95700c357332"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_Rminus in Hy1.",
                        "VernacExtend",
                        "daa3e4126b5c2a6a695bd4acdaf473b3c07e8cea"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_Rminus in Hy2.",
                        "VernacExtend",
                        "92661faa223f40975bdf553c29898bd4df22d63d"
                    ]
                },
                {
                    "command": [
                        "exists (mkposreal _ (Rmin_pos _ _ Hy1 Hy2)) => /= z Hz k Hk.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite /ball /= /AbsRing_ball /= in Hz.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_lt_between' in Hz ; case: Hz => Hz1 Hz2.",
                        "VernacExtend",
                        "a4503dc4167597172a3f11885c48a6f1f4e6622d"
                    ]
                },
                {
                    "command": [
                        "rewrite /Rminus -Rmax_opp_Rmin in Hz1.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_min_distr_l in Hz2.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (2 := Rmin_r _ _) in Hz2.",
                        "VernacExtend",
                        "b2e09296a80d075f5652ca6eb499dc59a2835060"
                    ]
                },
                {
                    "command": [
                        "ring_simplify in Hz2.",
                        "VernacExtend",
                        "406aaf1dc2e52e94b9a3c51bccdbef0bf9dd434f"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_max_distr_l in Hz1.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (1 := Rmax_l _ _) in Hz1.",
                        "VernacExtend",
                        "109bd8513fbe1804f7002845cbb71d897184d5f8"
                    ]
                },
                {
                    "command": [
                        "ring_simplify in Hz1.",
                        "VernacExtend",
                        "1a0ee7810a11a06e6826518f6fc0aafb058df045"
                    ]
                },
                {
                    "command": [
                        "apply Hf.",
                        "VernacExtend",
                        "44e8b4102d20ba355038f72fc52240fc6cb8650c"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_lt_between' ; by split.",
                        "VernacExtend",
                        "e7869b9592f7c37109fc0522ccaab711fa76dad0"
                    ]
                },
                {
                    "command": [
                        "by intuition.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply ex_derive_scal.",
                        "VernacExtend",
                        "3e0cedd5c5b707ed6df53e77217943509cc186c4"
                    ]
                },
                {
                    "command": [
                        "apply ex_derive_comp.",
                        "VernacExtend",
                        "c30711f97a00e6821b822dba399140f8e58b0bee"
                    ]
                },
                {
                    "command": [
                        "apply (locally_singleton _ _) in Hf.",
                        "VernacExtend",
                        "91184bcb243359140b4658264f3180a3a7f7650e"
                    ]
                },
                {
                    "command": [
                        "by apply Hf with (k := S n).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply (ex_derive_scal id a x (ex_derive_id _)).",
                        "VernacExtend",
                        "a2a1ab9480e3fb5e819a23cd069917c983dffdb1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_derive_n_comp_scal",
            "line_nb": 2377,
            "steps": [
                {
                    "command": [
                        "case: n => /= [ | n] Hfn Hf.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite Rmult_1_l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply is_derive_unique in Hf.",
                        "VernacExtend",
                        "2491d88ddde466492b4f8ee2306968e83d676011"
                    ]
                },
                {
                    "command": [
                        "rewrite -Hf.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -(Derive_n_comp_scal f a (S n) x) => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Derive_correct.",
                        "VernacExtend",
                        "054d04eb27571fc0e213d6f8fb7c853041966304"
                    ]
                },
                {
                    "command": [
                        "by apply (ex_derive_n_comp_scal f a (S n) x).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_n_comp_opp",
            "line_nb": 2386,
            "steps": [
                {
                    "command": [
                        "move => Hf.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite -(Derive_n_ext (fun y : R => f (-1 * y))).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (Derive_n_comp_scal f (-1) n x).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by replace (-1*x) with (-x) by ring.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by replace (-1*x) with (-x) by ring.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => t ; by replace (-1*t) with (-t) by ring.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_derive_n_comp_opp",
            "line_nb": 2394,
            "steps": [
                {
                    "command": [
                        "move => Hf.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply (ex_derive_n_ext (fun y : R => f (-1 * y))).",
                        "VernacExtend",
                        "d0b775c3b8117e953807c9f964c050e04a281d3b"
                    ]
                },
                {
                    "command": [
                        "move => t ; by ring_simplify (-1*t).",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "apply (ex_derive_n_comp_scal f (-1) n x).",
                        "VernacExtend",
                        "e75a287a90fde11f209a4a4337c4019e3b7e108e"
                    ]
                },
                {
                    "command": [
                        "by replace (-1*x) with (-x) by ring.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_derive_n_comp_opp",
            "line_nb": 2401,
            "steps": [
                {
                    "command": [
                        "move => Hfn Hf.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply (is_derive_n_ext (fun y : R => f (-1 * y))).",
                        "VernacExtend",
                        "9544708cd4bcb313cc81ffc9de23aa37a1342d2f"
                    ]
                },
                {
                    "command": [
                        "move => t ; by ring_simplify (-1*t).",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "apply (is_derive_n_comp_scal f (-1) n x).",
                        "VernacExtend",
                        "66e8c26069d1c9c20165ab20d992c1fec1c47076"
                    ]
                },
                {
                    "command": [
                        "by replace (-1*x) with (-x) by ring.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by replace (-1*x) with (-x) by ring.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_n_comp_trans",
            "line_nb": 2409,
            "steps": [
                {
                    "command": [
                        "elim: n x => [ | n IH] x /=.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite (Derive_ext _ _ _ IH) => {IH}.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "generalize (Derive_n f n) => {f} f.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply (f_equal real).",
                        "VernacExtend",
                        "57e73bb5eae5aa448423da85c916d02b5d8e8198"
                    ]
                },
                {
                    "command": [
                        "apply Lim_ext => y.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "replace (x + b + y) with (x + y + b) by ring.",
                        "VernacExtend",
                        "64b914f37f1a13189dab7f55097dc7694854b14e"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}